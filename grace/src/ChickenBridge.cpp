/* Generated from ChickenBridge.scm by the CHICKEN compiler
   http://www.call-with-current-continuation.org
   2008-04-07 21:26
   Version 3.0.0 - macosx-unix-gnu-x86	[ manyargs dload ptables applyhook ]
   (c)2000-2008 Felix L. Winkelmann	compiled 2008-02-24 on zippy.local (Darwin)
   command line: ChickenBridge.scm -output-file ChickenBridge.cpp -quiet
   unit: grace
*/

#include "chicken.h"


/*************************************************************************
 * Copyright (C) 2007 Todd Ingalls, Rick Taube.                          *
 * This program is free software; you can redistribute it and/or modify  *
 * it under the terms of the Lisp Lesser Gnu Public License. The text of *
 * this agreement is available at http://www.cliki.net/LLGPL             *
 *************************************************************************/

#include "Grace.h"
#include "Scheme.h"
#include "Syntax.h"
#include "Midi.h"
#include <juce.h>

//
// Console Window code
//

void print_message(char * st) {
  // attempt at buffering: if string ends with #\Return, send string
  // AND trigger update else send string without triggering update
  String s=String(st);
  if ( s.endsWithChar('\n') )
    ((GraceApp *)GraceApp::getInstance())->getConsole()->postConsoleTextMessage(s, ConsoleMessage::TEXT, true);
  else
    ((GraceApp *)GraceApp::getInstance())->getConsole()->postConsoleTextMessage(s, ConsoleMessage::TEXT, false);
}

void print_error(char * st) {
  // attempt at buffering: if string ends with #\Return, send string
  // AND trigger update else send string without triggering update

printf("in print_error\n");
printf("  str='%s'\n",st);

  String s=String(st);
  if ( s.endsWithChar('\n') )
    ((GraceApp *)GraceApp::getInstance())->getConsole()->postConsoleTextMessage(s, ConsoleMessage::ERROR, true);
  else
    ((GraceApp *)GraceApp::getInstance())->getConsole()->postConsoleTextMessage(s, ConsoleMessage::ERROR, false);
}

//
// Scheduler code
//

void scheduler_sprout( C_word proc, double time, int id)
{
  ((GraceApp *)
   GraceApp::getInstance())->schemeProcess->addNode(0, time, proc, id);
}

bool scheduler_is_paused () {
  ((GraceApp *)GraceApp::getInstance())->schemeProcess->isPaused();
}

void scheduler_pause() {
  ((GraceApp *)GraceApp::getInstance())->schemeProcess->setPaused(true);
}

void scheduler_cont () {
  ((GraceApp *)GraceApp::getInstance())->schemeProcess->setPaused(false);
}

void scheduler_stop (int id) {
  ((GraceApp *)GraceApp::getInstance())->schemeProcess->stop(id);
}

void scheduler_hush () {
  ((GraceApp *)GraceApp::getInstance())->schemeProcess->stop(-1);
  ((GraceApp *)GraceApp::getInstance())->midiOutPort->clear();
}

bool scheduler_is_time_milliseconds () {
  ((GraceApp *)GraceApp::getInstance())->schemeProcess->isTimeMilliseconds();
}
 
void scheduler_set_time_milliseconds (bool b) {
  ((GraceApp *)GraceApp::getInstance())->schemeProcess->setTimeMilliseconds(b);
}

//void print_current_directory() {
//  String s=File::getCurrentWorkingDirectory().getFullPathName().quoted() + T("\n");
//  ((GraceApp *)GraceApp::getInstance())->getConsole()->postConsoleTextMessage(s, ConsoleMessage::TEXT, true);
//}

char *get_current_directory() {
  return (char *)File::getCurrentWorkingDirectory().getFullPathName().toUTF8();
}

void set_current_directory (char *path) {
  File dir=File(String(path));
  if ( dir.isDirectory() ) {
    dir.setAsCurrentWorkingDirectory();
    //print_working_directory();
  }
  else {
    String s=T(">>> Error: ") + dir.getFullPathName().quoted() + T(" is not a directory.\n");
    ((GraceApp *)GraceApp::getInstance())->getConsole()->postConsoleTextMessage(s, ConsoleMessage::ERROR, true);
  }			 
}

void load_sal_file(char *path) {
  SalSyntax::getInstance()->loadFile( String(path) );  
}



#include "Toolbox.h"



void mp_note(double time, double dur, float key, float vel, float chan) {
 ((GraceApp *)GraceApp::getInstance())->midiOutPort->sendNote(time, dur, key, vel, chan); 
}

void mp_data(int type, double time, float chan, float data1, float data2) {
 ((GraceApp *)GraceApp::getInstance())->midiOutPort->sendData(type, time, chan, data1, data2) ;
}

void mp_message(MidiMessage *m) {
 ((GraceApp *)GraceApp::getInstance())->midiOutPort->sendMessage(m) ;
}

/// MidiMessage accessors

MidiMessage *mm_make(int type, double time, int chan, 
		     int data1, int data2 ) {
  MidiMessage *m;
  chan++; // juce channels are 1 based
  switch (type) {
  case MidiNode::MM_OFF :
    m=new MidiMessage(MidiMessage::noteOff(chan, data1));
    break;
  case MidiNode::MM_ON :
    m=new MidiMessage(MidiMessage::noteOn(chan, data1, (juce::uint8)data2));
    break;
  case MidiNode::MM_TOUCH :
    m=new MidiMessage(MidiMessage::aftertouchChange(chan, data1, data2));
    break;
  case MidiNode::MM_CTRL :
    m=new MidiMessage(MidiMessage::controllerEvent(chan, data1, data2));
    break;
  case MidiNode::MM_PROG :
    m=new MidiMessage(MidiMessage::programChange(chan, data1));
    break;
  case MidiNode::MM_PRESS :
    m=new MidiMessage(MidiMessage::channelPressureChange(chan, data1));
    break;
  case MidiNode::MM_BEND :
    m=new MidiMessage(MidiMessage::pitchWheel(chan, data1));
    break;
  default:
    return NULL;
  }
  return m;
}

MidiMessage *mm_copy(MidiMessage *m) {
  return new MidiMessage(*m);
}

void mm_free(MidiMessage *m) {
  delete m;
}

bool mm_is_type(MidiMessage *m, int typ) {
  switch (typ) {
  case MidiNode::MM_OFF :
    return m->isNoteOff();
    break;
  case MidiNode::MM_ON :
    return m->isNoteOn();
    break;
  case MidiNode::MM_TOUCH :
    return m->isAftertouch();
    break;
  case MidiNode::MM_CTRL :
    return m->isController();
    break;
  case MidiNode::MM_PROG :
    return m->isProgramChange();
    break;
  case MidiNode::MM_PRESS :
    return m->isChannelPressure();
    break;
  case MidiNode::MM_BEND :
    return m->isPitchWheel();
    break;
  default:
    return false;
  }
}

double mm_time(MidiMessage *m) {
  return m->getTimeStamp();
}

void mm_set_time(MidiMessage *m, double t) {
  m->setTimeStamp(t);
  return ;		
}

int mm_chan(MidiMessage *m) {
  // juce channels are 1 based
  return m->getChannel()-1;
}

void mm_set_chan(MidiMessage *m, int chan) {
  // juce channels are 1 based
  m->setChannel(chan+1);
}

int mm_data(MidiMessage *m, int n ) {
  juce::uint8 *data=m->getRawData();
  return (int)data[n];
}

void mm_set_data(MidiMessage *m, int n, int v ) {
  juce::uint8 *data=m->getRawData();
  data[n]=(v & 0x7f);
}

//INput Hook Code
void set_input_hook( C_word proc )
{
 // FIX
 ((GraceApp *)GraceApp::getInstance())->schemeProcess->setInputHook( proc);
}



#include "Csound.h"

void cs_send_score_event (int type, int len, C_word lyst) {
  MYFLT buf[len];
  int i=0;
  for ( ; C_SCHEME_END_OF_LIST != lyst; lyst = C_u_i_cdr( lyst ) ) {
    if (i==len) break;
    C_word w = C_u_i_car( lyst );
    if ( C_immediatep(w) ) {
      if ( C_truep(C_fixnump(w)) ) {
	// printf("FIX: buf[%d]=%d\n", i, C_unfix(w) );
	buf[i++] = (MYFLT)C_unfix(w);
      }
      else
        buf[i++] = 0.0;
    }
    else if ( C_truep(C_blockp(w)) && C_truep( C_flonump( w ) )) {
      // printf("FLO: buf[%d]=%f\n", i, (float)C_flonum_magnitude( w ));
      buf[i++] = (MYFLT)C_flonum_magnitude( w );
    }
    else {
      buf[i++] = 0.0;
    }
  }
  ((GraceApp *)GraceApp::getInstance())->getCsoundPort()->sendScoreEvent( ((type==2) ? 'f' : 'i'), len, buf);  
}

void cs_clear_score () {
  ((GraceApp *)GraceApp::getInstance())->getCsoundPort()->clearScore();
}



static C_PTABLE_ENTRY *create_ptable(void);
C_noret_decl(C_library_toplevel)
C_externimport void C_ccall C_library_toplevel(C_word c,C_word d,C_word k) C_noret;
C_noret_decl(C_eval_toplevel)
C_externimport void C_ccall C_eval_toplevel(C_word c,C_word d,C_word k) C_noret;
C_noret_decl(C_extras_toplevel)
C_externimport void C_ccall C_extras_toplevel(C_word c,C_word d,C_word k) C_noret;
C_noret_decl(C_extras_toplevel)
C_externimport void C_ccall C_extras_toplevel(C_word c,C_word d,C_word k) C_noret;

static C_TLS C_word lf[914];
static double C_possibly_force_alignment;
static C_char C_TLS li0[] C_aligned={C_lihdr(0,0,11),40,97,54,50,53,50,32,105,51,50,41,0,0,0};
static C_char C_TLS li1[] C_aligned={C_lihdr(0,0,11),40,97,54,50,55,52,32,105,51,49,41,0,0,0};
static C_char C_TLS li2[] C_aligned={C_lihdr(0,0,11),40,97,54,50,56,52,32,105,51,48,41,0,0,0};
static C_char C_TLS li3[] C_aligned={C_lihdr(0,0,11),40,97,54,50,57,48,32,118,50,54,41,0,0,0};
static C_char C_TLS li4[] C_aligned={C_lihdr(0,0,34),40,101,120,112,97,110,100,45,111,112,116,107,101,121,115,32,117,115,101,114,48,32,115,112,101,99,49,32,98,111,100,121,50,41,0,0};
static C_char C_TLS li5[] C_aligned={C_lihdr(0,0,23),40,102,95,54,54,49,54,32,115,116,114,53,48,32,46,32,97,114,103,115,53,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li6[] C_aligned={C_lihdr(0,0,12),40,102,95,54,54,48,53,32,107,53,52,41,0,0,0,0};
static C_char C_TLS li7[] C_aligned={C_lihdr(0,0,12),40,102,95,54,54,49,52,32,107,53,53,41,0,0,0,0};
static C_char C_TLS li8[] C_aligned={C_lihdr(0,0,13),40,100,111,54,57,32,116,97,105,108,55,49,41,0,0,0,0,0};
static C_char C_TLS li9[] C_aligned={C_lihdr(0,0,11),40,97,54,53,53,50,32,120,55,55,41,0,0,0};
static C_char C_TLS li10[] C_aligned={C_lihdr(0,0,31),40,100,111,54,51,32,97,114,103,115,54,53,32,107,101,121,54,54,32,97,114,103,54,55,32,112,111,115,54,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li11[] C_aligned={C_lihdr(0,0,7),40,97,54,53,57,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li12[] C_aligned={C_lihdr(0,0,34),40,101,120,112,97,110,100,45,115,101,110,100,32,109,101,115,103,52,52,32,100,97,116,97,52,53,32,101,114,114,102,52,54,41,0,0};
static C_char C_TLS li13[] C_aligned={C_lihdr(0,0,8),40,102,95,54,54,51,52,41};
static C_char C_TLS li14[] C_aligned={C_lihdr(0,0,5),40,99,119,100,41,0,0,0,0,0};
static C_char C_TLS li15[] C_aligned={C_lihdr(0,0,14),40,102,95,54,54,52,57,32,97,57,52,57,56,41,0,0,0,0,0,0};
static C_char C_TLS li16[] C_aligned={C_lihdr(0,0,15),40,99,104,100,105,114,32,46,32,100,105,114,57,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li17[] C_aligned={C_lihdr(0,0,12),40,102,105,102,116,104,32,108,49,48,48,41,0,0,0,0};
static C_char C_TLS li18[] C_aligned={C_lihdr(0,0,12),40,115,105,120,116,104,32,108,49,48,49,41,0,0,0,0};
static C_char C_TLS li19[] C_aligned={C_lihdr(0,0,14),40,115,101,118,101,110,116,104,32,108,49,48,50,41,0,0,0,0,0,0};
static C_char C_TLS li20[] C_aligned={C_lihdr(0,0,13),40,101,105,103,104,116,104,32,108,49,48,51,41,0,0,0,0,0};
static C_char C_TLS li21[] C_aligned={C_lihdr(0,0,12),40,110,105,110,116,104,32,108,49,48,52,41,0,0,0,0};
static C_char C_TLS li22[] C_aligned={C_lihdr(0,0,12),40,116,101,110,116,104,32,108,49,48,53,41,0,0,0,0};
static C_char C_TLS li23[] C_aligned={C_lihdr(0,0,11),40,114,101,115,116,32,108,49,48,54,41,0,0,0};
static C_char C_TLS li24[] C_aligned={C_lihdr(0,0,11),40,108,97,115,116,32,108,49,48,55,41,0,0,0};
static C_char C_TLS li25[] C_aligned={C_lihdr(0,0,14),40,98,117,116,108,97,115,116,32,108,49,48,56,41,0,0,0,0,0,0};
static C_char C_TLS li26[] C_aligned={C_lihdr(0,0,11),40,116,97,105,108,32,108,49,48,57,41,0,0,0};
static C_char C_TLS li27[] C_aligned={C_lihdr(0,0,17),40,108,105,115,116,42,32,46,32,97,114,103,115,49,49,57,41,0};
static C_char C_TLS li28[] C_aligned={C_lihdr(0,0,32),40,108,105,115,116,45,115,101,116,33,32,108,105,115,49,50,48,32,112,111,115,49,50,49,32,118,97,108,49,50,50,41};
static C_char C_TLS li29[] C_aligned={C_lihdr(0,0,22),40,100,111,49,50,54,32,105,49,50,56,32,106,49,50,57,32,116,49,51,48,41,0,0,0,0,0,0};
static C_char C_TLS li30[] C_aligned={C_lihdr(0,0,15),40,114,101,118,101,114,115,101,33,32,108,49,50,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li31[] C_aligned={C_lihdr(0,0,14),40,108,49,32,97,49,52,48,32,98,49,52,49,41,0,0,0,0,0,0};
static C_char C_TLS li32[] C_aligned={C_lihdr(0,0,14),40,108,50,32,97,49,52,50,32,98,49,52,51,41,0,0,0,0,0,0};
static C_char C_TLS li33[] C_aligned={C_lihdr(0,0,25),40,109,97,107,101,45,108,105,115,116,32,110,49,51,54,32,46,32,111,98,106,49,51,55,41,0};
static C_char C_TLS li34[] C_aligned={C_lihdr(0,0,25),40,100,111,49,52,57,32,116,97,105,108,49,53,49,32,105,49,53,50,32,102,49,53,51,41,0};
static C_char C_TLS li35[] C_aligned={C_lihdr(0,0,22),40,108,105,115,116,45,105,110,100,101,120,32,112,49,52,55,32,108,49,52,56,41,0,0,0,0,0,0};
static C_char C_TLS li36[] C_aligned={C_lihdr(0,0,25),40,100,111,49,54,48,32,116,97,105,108,49,54,50,32,120,49,54,51,32,102,49,54,52,41,0};
static C_char C_TLS li37[] C_aligned={C_lihdr(0,0,21),40,108,105,115,116,45,102,105,110,100,32,112,49,53,56,32,108,49,53,57,41,0,0,0,0,0};
static C_char C_TLS li38[] C_aligned={C_lihdr(0,0,35),40,108,105,115,116,45,112,114,111,112,32,108,105,115,49,54,57,32,112,114,111,112,49,55,48,32,46,32,100,101,102,49,55,49,41,0,0,0};
static C_char C_TLS li39[] C_aligned={C_lihdr(0,0,12),40,100,111,49,55,55,32,102,49,55,57,41,0,0,0,0};
static C_char C_TLS li40[] C_aligned={C_lihdr(0,0,24),40,98,105,116,119,105,115,101,45,116,101,115,116,32,97,49,55,53,32,98,49,55,54,41};
static C_char C_TLS li41[] C_aligned={C_lihdr(0,0,60),40,116,98,58,114,101,115,99,97,108,101,32,97,50,49,48,50,49,51,32,97,50,48,57,50,49,52,32,97,50,48,56,50,49,53,32,97,50,48,55,50,49,54,32,97,50,48,54,50,49,55,32,97,50,48,53,50,49,56,41,0,0,0,0};
static C_char C_TLS li42[] C_aligned={C_lihdr(0,0,61),40,116,98,58,100,105,115,99,114,101,116,101,32,97,50,50,53,50,50,56,32,97,50,50,52,50,50,57,32,97,50,50,51,50,51,48,32,97,50,50,50,50,51,49,32,97,50,50,49,50,51,50,32,97,50,50,48,50,51,51,41,0,0,0,0,0};
static C_char C_TLS li43[] C_aligned={C_lihdr(0,0,16),40,116,98,58,105,110,116,32,97,50,51,52,50,51,55,41};
static C_char C_TLS li44[] C_aligned={C_lihdr(0,0,29),40,116,98,58,113,117,97,110,116,105,122,101,32,97,50,51,57,50,52,50,32,97,50,51,56,50,52,51,41,0,0,0,0,0};
static C_char C_TLS li45[] C_aligned={C_lihdr(0,0,44),40,116,98,58,114,104,121,116,104,109,45,62,115,101,99,111,110,100,115,32,97,50,52,55,50,53,48,32,97,50,52,54,50,53,49,32,97,50,52,53,50,53,50,41,0,0,0,0};
static C_char C_TLS li46[] C_aligned={C_lihdr(0,0,26),40,116,98,58,99,101,110,116,115,45,62,115,99,97,108,101,114,32,97,50,53,52,50,53,55,41,0,0};
static C_char C_TLS li47[] C_aligned={C_lihdr(0,0,26),40,116,98,58,115,99,97,108,101,114,45,62,99,101,110,116,115,32,97,50,53,57,50,54,50,41,0,0};
static C_char C_TLS li48[] C_aligned={C_lihdr(0,0,44),40,116,98,58,101,120,112,108,115,101,103,32,97,50,54,54,50,54,57,32,97,50,54,53,50,55,48,32,97,50,54,52,50,55,49,32,97,50,54,51,50,55,50,41,0,0,0,0};
static C_char C_TLS li49[] C_aligned={C_lihdr(0,0,43),40,116,98,58,103,101,111,115,101,103,32,97,50,55,55,50,56,48,32,97,50,55,54,50,56,49,32,97,50,55,53,50,56,50,32,97,50,55,52,50,56,51,41,0,0,0};
static C_char C_TLS li50[] C_aligned={C_lihdr(0,0,26),40,116,98,58,107,101,121,110,117,109,45,62,104,101,114,116,122,32,97,50,56,53,50,56,56,41,0,0};
static C_char C_TLS li51[] C_aligned={C_lihdr(0,0,21),40,116,98,58,114,97,110,45,115,101,116,33,32,97,50,57,57,51,48,50,41,0,0,0,0,0};
static C_char C_TLS li52[] C_aligned={C_lihdr(0,0,17),40,116,98,58,114,97,110,105,32,97,51,48,51,51,48,54,41,0};
static C_char C_TLS li53[] C_aligned={C_lihdr(0,0,17),40,116,98,58,114,97,110,102,32,97,51,48,55,51,49,48,41,0};
static C_char C_TLS li54[] C_aligned={C_lihdr(0,0,11),40,116,98,58,114,97,110,108,111,119,41,0,0,0};
static C_char C_TLS li55[] C_aligned={C_lihdr(0,0,12),40,116,98,58,114,97,110,104,105,103,104,41,0,0,0,0};
static C_char C_TLS li56[] C_aligned={C_lihdr(0,0,14),40,116,98,58,114,97,110,109,105,100,100,108,101,41,0,0,0,0,0,0};
static C_char C_TLS li57[] C_aligned={C_lihdr(0,0,29),40,116,98,58,114,97,110,103,97,117,115,115,32,97,51,51,53,51,51,56,32,97,51,51,52,51,51,57,41,0,0,0,0,0};
static C_char C_TLS li58[] C_aligned={C_lihdr(0,0,19),40,116,98,58,114,97,110,101,120,112,32,97,51,52,49,51,52,52,41,0,0,0};
static C_char C_TLS li59[] C_aligned={C_lihdr(0,0,21),40,116,98,58,114,97,110,103,97,109,109,97,32,97,51,53,51,51,53,54,41,0,0,0,0,0};
static C_char C_TLS li60[] C_aligned={C_lihdr(0,0,14),40,116,98,58,114,97,110,99,97,117,99,104,121,41,0,0,0,0,0,0};
static C_char C_TLS li61[] C_aligned={C_lihdr(0,0,23),40,116,98,58,114,97,110,112,111,105,115,115,111,110,32,97,51,54,49,51,54,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li62[] C_aligned={C_lihdr(0,0,12),40,116,98,58,114,97,110,112,105,110,107,41,0,0,0,0};
static C_char C_TLS li63[] C_aligned={C_lihdr(0,0,13),40,116,98,58,114,97,110,98,114,111,119,110,41,0,0,0,0,0};
static C_char C_TLS li64[] C_aligned={C_lihdr(0,0,12),40,97,55,54,48,56,32,122,51,56,54,41,0,0,0,0};
static C_char C_TLS li65[] C_aligned={C_lihdr(0,0,45),40,114,101,115,99,97,108,101,32,120,51,56,48,32,120,49,51,56,49,32,120,50,51,56,50,32,121,49,51,56,51,32,121,50,51,56,52,32,46,32,98,51,56,53,41,0,0,0,0,0};
static C_char C_TLS li66[] C_aligned={C_lihdr(0,0,12),40,97,55,54,52,56,32,122,51,57,56,41,0,0,0,0};
static C_char C_TLS li67[] C_aligned={C_lihdr(0,0,12),40,97,55,54,55,52,32,122,51,57,57,41,0,0,0,0};
static C_char C_TLS li68[] C_aligned={C_lihdr(0,0,43),40,100,105,115,99,114,101,116,101,32,120,51,56,55,32,120,49,51,56,56,32,120,50,51,56,57,32,105,49,51,57,48,32,46,32,97,114,103,115,51,57,49,41,0,0,0};
static C_char C_TLS li69[] C_aligned={C_lihdr(0,0,10),40,105,110,116,32,102,52,48,49,41,0,0};
static C_char C_TLS li70[] C_aligned={C_lihdr(0,0,16),40,112,108,117,115,32,46,32,97,114,103,115,52,48,50,41};
static C_char C_TLS li71[] C_aligned={C_lihdr(0,0,24),40,109,105,110,117,115,32,97,114,103,52,48,51,32,46,32,97,114,103,115,52,48,52,41};
static C_char C_TLS li72[] C_aligned={C_lihdr(0,0,12),40,97,55,56,51,54,32,110,52,48,55,41,0,0,0,0};
static C_char C_TLS li73[] C_aligned={C_lihdr(0,0,26),40,113,117,97,110,116,105,122,101,32,110,117,109,52,48,53,32,115,116,101,112,115,52,48,54,41,0,0};
static C_char C_TLS li74[] C_aligned={C_lihdr(0,0,12),40,97,55,56,54,48,32,118,52,49,49,41,0,0,0,0};
static C_char C_TLS li75[] C_aligned={C_lihdr(0,0,29),40,100,101,99,105,109,97,108,115,32,118,97,108,117,101,52,48,56,32,112,108,97,99,101,115,52,48,57,41,0,0,0,0,0};
static C_char C_TLS li76[] C_aligned={C_lihdr(0,0,12),40,97,55,57,48,54,32,120,52,53,50,41,0,0,0,0};
static C_char C_TLS li77[] C_aligned={C_lihdr(0,0,36),40,114,104,121,116,104,109,45,62,115,101,99,111,110,100,115,32,98,101,97,116,115,52,49,50,32,46,32,97,114,103,115,52,49,51,41,0,0,0,0};
static C_char C_TLS li78[] C_aligned={C_lihdr(0,0,23),40,99,101,110,116,115,45,62,114,97,116,105,111,32,99,101,110,116,115,52,53,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li79[] C_aligned={C_lihdr(0,0,21),40,114,97,116,105,111,45,62,99,101,110,116,115,32,110,117,109,52,53,55,41,0,0,0,0,0};
static C_char C_TLS li80[] C_aligned={C_lihdr(0,0,15),40,100,111,52,54,54,32,116,97,105,108,52,54,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li81[] C_aligned={C_lihdr(0,0,32),40,105,110,116,101,114,112,49,32,120,52,53,56,32,99,111,111,114,100,115,52,53,57,32,98,97,115,101,52,54,48,41};
static C_char C_TLS li82[] C_aligned={C_lihdr(0,0,23),40,105,110,116,101,114,112,32,120,52,55,54,32,46,32,97,114,103,115,52,55,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li83[] C_aligned={C_lihdr(0,0,40),40,116,101,110,100,101,110,99,121,32,120,52,55,57,32,108,111,119,52,56,48,32,104,105,103,104,52,56,49,32,46,32,97,114,103,115,52,56,50,41};
static C_char C_TLS li84[] C_aligned={C_lihdr(0,0,33),40,102,105,116,49,32,110,117,109,52,57,53,32,108,98,52,57,54,32,117,98,52,57,55,32,109,111,100,101,52,57,56,41,0};
static C_char C_TLS li85[] C_aligned={C_lihdr(0,0,12),40,97,56,52,54,49,32,110,53,48,51,41,0,0,0,0};
static C_char C_TLS li86[] C_aligned={C_lihdr(0,0,34),40,102,105,116,32,110,117,109,52,56,56,32,108,98,52,56,57,32,117,98,52,57,48,32,46,32,109,111,100,101,52,57,49,41,0,0};
static C_char C_TLS li87[] C_aligned={C_lihdr(0,0,27),40,100,111,53,49,53,32,105,53,49,55,32,107,53,49,56,32,108,53,49,57,32,116,53,50,48,41,0,0,0};
static C_char C_TLS li88[] C_aligned={C_lihdr(0,0,34),40,115,99,97,108,101,32,108,101,110,53,48,55,32,107,101,121,110,117,109,53,48,56,32,46,32,97,114,103,115,53,48,57,41,0,0};
static C_char C_TLS li89[] C_aligned={C_lihdr(0,0,14),40,114,97,110,32,46,32,110,117,109,53,50,55,41,0,0,0,0,0,0};
static C_char C_TLS li90[] C_aligned={C_lihdr(0,0,19),40,98,101,116,119,101,101,110,32,97,53,50,57,32,98,53,51,48,41,0,0,0};
static C_char C_TLS li91[] C_aligned={C_lihdr(0,0,16),40,112,105,99,107,32,46,32,97,114,103,115,53,51,49,41};
static C_char C_TLS li92[] C_aligned={C_lihdr(0,0,21),40,111,100,100,115,32,110,53,51,50,32,46,32,97,114,103,115,53,51,51,41,0,0,0,0,0};
static C_char C_TLS li93[] C_aligned={C_lihdr(0,0,30),40,118,97,114,121,49,32,118,97,108,53,55,57,32,118,97,114,105,53,56,48,32,109,111,100,101,53,56,49,41,0,0,0,0,0,0};
static C_char C_TLS li94[] C_aligned={C_lihdr(0,0,12),40,97,56,57,57,48,32,118,53,56,54,41,0,0,0,0};
static C_char C_TLS li95[] C_aligned={C_lihdr(0,0,31),40,118,97,114,121,32,118,97,108,53,55,53,32,118,97,114,105,53,55,54,32,46,32,109,111,100,101,53,55,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li96[] C_aligned={C_lihdr(0,0,22),40,100,111,53,57,50,32,105,53,57,52,32,106,53,57,53,32,118,53,57,54,41,0,0,0,0,0,0};
static C_char C_TLS li97[] C_aligned={C_lihdr(0,0,15),40,115,104,117,102,102,108,101,33,32,108,53,57,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li98[] C_aligned={C_lihdr(0,0,19),40,115,104,117,102,102,108,101,32,46,32,97,114,103,115,54,48,49,41,0,0,0};
static C_char C_TLS li99[] C_aligned={C_lihdr(0,0,19),40,114,97,110,98,101,116,97,32,46,32,97,114,103,115,54,48,50,41,0,0,0};
static C_char C_TLS li100[] C_aligned={C_lihdr(0,0,18),40,114,97,110,101,120,112,32,46,32,97,114,103,115,54,52,53,41,0,0};
static C_char C_TLS li101[] C_aligned={C_lihdr(0,0,20),40,114,97,110,103,97,117,115,115,32,46,32,97,114,103,115,54,52,54,41,0,0,0,0};
static C_char C_TLS li102[] C_aligned={C_lihdr(0,0,22),40,114,97,110,112,111,105,115,115,111,110,32,46,32,97,114,103,115,54,52,55,41,0,0,0,0,0,0};
static C_char C_TLS li103[] C_aligned={C_lihdr(0,0,20),40,114,97,110,103,97,109,109,97,32,46,32,97,114,103,115,54,52,56,41,0,0,0,0};
static C_char C_TLS li104[] C_aligned={C_lihdr(0,0,12),40,100,111,54,54,48,32,105,54,54,50,41,0,0,0,0};
static C_char C_TLS li105[] C_aligned={C_lihdr(0,0,15),40,100,111,54,55,54,32,116,97,105,108,54,55,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li106[] C_aligned={C_lihdr(0,0,17),40,100,111,54,55,50,32,105,54,55,52,32,110,54,55,53,41,0};
static C_char C_TLS li107[] C_aligned={C_lihdr(0,0,30),40,115,101,103,115,32,110,117,109,54,52,57,32,115,117,109,54,53,48,32,46,32,97,114,103,115,54,53,49,41,0,0,0,0,0,0};
static C_char C_TLS li108[] C_aligned={C_lihdr(0,0,7),40,97,57,54,55,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li109[] C_aligned={C_lihdr(0,0,7),40,97,57,54,57,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li110[] C_aligned={C_lihdr(0,0,41),40,115,116,114,105,110,103,45,62,110,111,116,101,45,101,110,116,114,121,32,115,116,114,55,50,57,32,111,99,116,55,51,48,32,101,114,114,55,51,49,41,0};
static C_char C_TLS li111[] C_aligned={C_lihdr(0,0,7),40,97,57,55,48,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li112[] C_aligned={C_lihdr(0,0,7),40,97,57,55,51,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li113[] C_aligned={C_lihdr(0,0,34),40,110,111,116,101,45,97,117,120,32,102,114,101,113,55,51,55,32,100,111,99,116,55,51,56,32,101,114,114,63,55,51,57,41,0,0};
static C_char C_TLS li114[] C_aligned={C_lihdr(0,0,39),40,100,111,55,52,50,32,116,97,105,108,55,52,52,32,100,101,102,111,55,52,53,32,116,104,105,115,55,52,54,32,114,101,115,108,55,52,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li115[] C_aligned={C_lihdr(0,0,14),40,110,111,116,101,32,102,114,101,113,55,52,48,41,0,0,0,0,0,0};
static C_char C_TLS li116[] C_aligned={C_lihdr(0,0,39),40,100,111,55,53,54,32,116,97,105,108,55,53,56,32,100,101,102,111,55,53,57,32,116,104,105,115,55,54,48,32,114,101,115,108,55,54,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li117[] C_aligned={C_lihdr(0,0,13),40,107,101,121,32,102,114,101,113,55,53,52,41,0,0,0,0,0};
static C_char C_TLS li118[] C_aligned={C_lihdr(0,0,39),40,100,111,55,55,50,32,116,97,105,108,55,55,52,32,100,101,102,111,55,55,53,32,116,104,105,115,55,55,54,32,114,101,115,108,55,55,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li119[] C_aligned={C_lihdr(0,0,12),40,104,122,32,102,114,101,113,55,55,48,41,0,0,0,0};
static C_char C_TLS li120[] C_aligned={C_lihdr(0,0,9),40,112,99,32,120,55,56,54,41,0};
static C_char C_TLS li121[] C_aligned={C_lihdr(0,0,23),40,100,111,55,57,50,32,116,97,105,108,55,57,52,32,108,97,115,116,55,57,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li122[] C_aligned={C_lihdr(0,0,17),40,105,110,118,107,101,121,115,32,107,101,121,115,55,56,57,41,0};
static C_char C_TLS li123[] C_aligned={C_lihdr(0,0,13),40,97,49,48,50,57,49,32,122,55,57,57,41,0,0,0,0,0};
static C_char C_TLS li124[] C_aligned={C_lihdr(0,0,13),40,105,110,118,101,114,116,32,120,55,56,55,41,0,0,0,0,0};
static C_char C_TLS li125[] C_aligned={C_lihdr(0,0,23),40,100,111,56,48,55,32,116,97,105,108,56,48,57,32,108,97,115,116,56,49,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li126[] C_aligned={C_lihdr(0,0,28),40,116,114,97,110,115,112,107,101,121,115,32,107,101,121,115,56,48,52,32,111,114,105,103,56,48,53,41,0,0,0,0};
static C_char C_TLS li127[] C_aligned={C_lihdr(0,0,13),40,97,49,48,52,52,52,32,122,56,49,52,41,0,0,0,0,0};
static C_char C_TLS li128[] C_aligned={C_lihdr(0,0,21),40,116,114,97,110,115,112,111,115,101,32,120,56,48,48,32,121,56,48,49,41,0,0,0,0,0};
static C_char C_TLS li129[] C_aligned={C_lihdr(0,0,18),40,97,49,48,53,48,55,32,97,56,49,55,32,98,56,49,56,41,0,0};
static C_char C_TLS li130[] C_aligned={C_lihdr(0,0,18),40,97,49,48,53,54,53,32,97,56,49,57,32,98,56,50,48,41,0,0};
static C_char C_TLS li131[] C_aligned={C_lihdr(0,0,32),40,115,99,97,108,101,45,111,114,100,101,114,32,115,99,97,108,101,56,49,53,32,46,32,109,111,100,101,56,49,54,41};
static C_char C_TLS li132[] C_aligned={C_lihdr(0,0,48),40,109,97,107,101,45,115,112,101,107,116,114,117,109,32,116,105,109,101,57,48,48,32,115,105,122,101,57,48,49,32,102,114,101,113,115,57,48,50,32,97,109,112,115,57,48,51,41};
static C_char C_TLS li133[] C_aligned={C_lihdr(0,0,20),40,115,112,101,107,116,114,117,109,45,116,105,109,101,32,120,57,48,56,41,0,0,0,0};
static C_char C_TLS li134[] C_aligned={C_lihdr(0,0,20),40,115,112,101,107,116,114,117,109,45,115,105,122,101,32,120,57,49,52,41,0,0,0,0};
static C_char C_TLS li135[] C_aligned={C_lihdr(0,0,21),40,115,112,101,107,116,114,117,109,45,102,114,101,113,115,32,120,57,50,48,41,0,0,0,0,0};
static C_char C_TLS li136[] C_aligned={C_lihdr(0,0,20),40,115,112,101,107,116,114,117,109,45,97,109,112,115,32,120,57,50,54,41,0,0,0,0};
static C_char C_TLS li137[] C_aligned={C_lihdr(0,0,34),40,109,97,107,101,45,115,112,101,99,116,114,117,109,32,102,114,101,113,115,57,51,54,32,46,32,97,114,103,115,57,51,55,41,0,0};
static C_char C_TLS li138[] C_aligned={C_lihdr(0,0,12),40,100,111,57,52,54,32,105,57,52,56,41,0,0,0,0};
static C_char C_TLS li139[] C_aligned={C_lihdr(0,0,28),40,115,112,101,99,116,114,117,109,45,112,97,105,114,115,32,115,112,101,99,116,114,117,109,57,52,48,41,0,0,0,0};
static C_char C_TLS li140[] C_aligned={C_lihdr(0,0,30),40,115,112,101,99,116,114,117,109,45,109,105,110,102,114,101,113,32,115,112,101,99,116,114,117,109,57,53,50,41,0,0,0,0,0,0};
static C_char C_TLS li141[] C_aligned={C_lihdr(0,0,30),40,115,112,101,99,116,114,117,109,45,109,97,120,102,114,101,113,32,115,112,101,99,116,114,117,109,57,53,51,41,0,0,0,0,0,0};
static C_char C_TLS li142[] C_aligned={C_lihdr(0,0,13),40,97,49,48,56,53,51,32,97,57,53,55,41,0,0,0,0,0};
static C_char C_TLS li143[] C_aligned={C_lihdr(0,0,29),40,115,112,101,99,116,114,117,109,45,109,105,110,97,109,112,32,115,112,101,99,116,114,117,109,57,53,52,41,0,0,0,0,0};
static C_char C_TLS li144[] C_aligned={C_lihdr(0,0,13),40,97,49,48,56,56,52,32,97,57,54,52,41,0,0,0,0,0};
static C_char C_TLS li145[] C_aligned={C_lihdr(0,0,29),40,115,112,101,99,116,114,117,109,45,109,97,120,97,109,112,32,115,112,101,99,116,114,117,109,57,54,49,41,0,0,0,0,0};
static C_char C_TLS li146[] C_aligned={C_lihdr(0,0,14),40,102,95,49,48,57,49,52,32,120,57,56,49,41,0,0,0,0,0,0};
static C_char C_TLS li147[] C_aligned={C_lihdr(0,0,14),40,102,95,49,48,57,52,55,32,120,57,56,53,41,0,0,0,0,0,0};
static C_char C_TLS li148[] C_aligned={C_lihdr(0,0,14),40,102,95,49,48,57,53,55,32,104,57,56,54,41,0,0,0,0,0,0};
static C_char C_TLS li149[] C_aligned={C_lihdr(0,0,14),40,102,95,49,48,57,54,55,32,104,57,56,55,41,0,0,0,0,0,0};
static C_char C_TLS li150[] C_aligned={C_lihdr(0,0,14),40,102,95,49,48,57,56,49,32,104,57,56,56,41,0,0,0,0,0,0};
static C_char C_TLS li151[] C_aligned={C_lihdr(0,0,14),40,102,95,49,48,57,57,54,32,104,57,57,48,41,0,0,0,0,0,0};
static C_char C_TLS li152[] C_aligned={C_lihdr(0,0,18),40,97,49,49,48,54,53,32,97,57,57,52,32,98,57,57,53,41,0,0};
static C_char C_TLS li153[] C_aligned={C_lihdr(0,0,18),40,97,49,49,48,56,48,32,97,57,57,54,32,98,57,57,55,41,0,0};
static C_char C_TLS li154[] C_aligned={C_lihdr(0,0,18),40,97,49,49,48,57,56,32,97,57,57,56,32,98,57,57,57,41,0,0};
static C_char C_TLS li155[] C_aligned={C_lihdr(0,0,20),40,97,49,49,49,49,51,32,97,49,48,48,48,32,98,49,48,48,49,41,0,0,0,0};
static C_char C_TLS li156[] C_aligned={C_lihdr(0,0,39),40,115,112,101,99,116,114,117,109,45,107,101,121,115,32,115,112,101,99,116,114,117,109,49,48,49,53,32,46,32,97,114,103,115,49,48,49,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li157[] C_aligned={C_lihdr(0,0,35),40,100,111,49,49,55,48,32,116,97,105,108,49,49,55,50,32,115,105,122,101,49,49,55,51,32,97,109,112,108,49,49,55,52,41,0,0,0};
static C_char C_TLS li158[] C_aligned={C_lihdr(0,0,26),40,100,111,49,49,52,56,32,105,49,49,53,48,32,102,49,49,53,49,32,120,49,49,53,50,41,0,0};
static C_char C_TLS li159[] C_aligned={C_lihdr(0,0,24),40,100,111,49,49,52,50,32,110,101,103,49,49,52,52,32,112,111,115,49,49,52,53,41};
static C_char C_TLS li160[] C_aligned={C_lihdr(0,0,24),40,102,95,55,53,56,54,32,97,51,55,52,51,55,55,32,97,51,55,51,51,55,56,41};
static C_char C_TLS li161[] C_aligned={C_lihdr(0,0,20),40,100,111,49,49,51,52,32,107,49,49,51,54,32,97,49,49,51,55,41,0,0,0,0};
static C_char C_TLS li162[] C_aligned={C_lihdr(0,0,46),40,102,109,45,115,112,101,99,116,114,117,109,32,99,97,114,114,105,101,114,49,49,50,54,32,109,114,97,116,105,111,49,49,50,55,32,105,110,100,101,120,49,49,50,56,41,0,0,0,0,0,0};
static C_char C_TLS li163[] C_aligned={C_lihdr(0,0,75),40,109,97,107,101,45,112,101,114,105,111,100,32,99,111,117,110,116,49,49,57,56,32,108,101,110,103,116,104,49,49,57,57,32,115,116,114,101,97,109,49,50,48,48,32,100,101,102,97,117,108,116,49,50,48,49,32,111,109,105,116,49,50,48,50,32,114,101,112,115,49,50,48,51,41,0,0,0};
static C_char C_TLS li164[] C_aligned={C_lihdr(0,0,33),40,112,101,114,105,111,100,45,99,111,117,110,116,45,115,101,116,33,32,120,49,50,48,53,32,118,97,108,49,50,48,54,41,0};
static C_char C_TLS li165[] C_aligned={C_lihdr(0,0,20),40,112,101,114,105,111,100,45,99,111,117,110,116,32,120,49,50,48,56,41,0,0,0,0};
static C_char C_TLS li166[] C_aligned={C_lihdr(0,0,21),40,112,101,114,105,111,100,45,108,101,110,103,116,104,32,120,49,50,49,52,41,0,0,0,0,0};
static C_char C_TLS li167[] C_aligned={C_lihdr(0,0,21),40,112,101,114,105,111,100,45,115,116,114,101,97,109,32,120,49,50,50,48,41,0,0,0,0,0};
static C_char C_TLS li168[] C_aligned={C_lihdr(0,0,32),40,112,101,114,105,111,100,45,111,109,105,116,45,115,101,116,33,32,120,49,50,50,57,32,118,97,108,49,50,51,48,41};
static C_char C_TLS li169[] C_aligned={C_lihdr(0,0,19),40,112,101,114,105,111,100,45,111,109,105,116,32,120,49,50,51,50,41,0,0,0};
static C_char C_TLS li170[] C_aligned={C_lihdr(0,0,19),40,112,101,114,105,111,100,45,114,101,112,115,32,120,49,50,51,56,41,0,0,0};
static C_char C_TLS li171[] C_aligned={C_lihdr(0,0,16),40,112,97,116,116,101,114,110,63,32,120,49,50,54,52,41};
static C_char C_TLS li172[] C_aligned={C_lihdr(0,0,21),40,112,97,116,116,101,114,110,45,102,108,97,103,115,32,120,49,50,54,56,41,0,0,0,0,0};
static C_char C_TLS li173[] C_aligned={C_lihdr(0,0,33),40,112,97,116,116,101,114,110,45,100,97,116,97,45,115,101,116,33,32,120,49,50,55,49,32,118,97,108,49,50,55,50,41,0};
static C_char C_TLS li174[] C_aligned={C_lihdr(0,0,20),40,112,97,116,116,101,114,110,45,100,97,116,97,32,120,49,50,55,52,41,0,0,0,0};
static C_char C_TLS li175[] C_aligned={C_lihdr(0,0,22),40,112,97,116,116,101,114,110,45,108,101,110,103,116,104,32,120,49,50,56,48,41,0,0,0,0,0,0};
static C_char C_TLS li176[] C_aligned={C_lihdr(0,0,34),40,112,97,116,116,101,114,110,45,100,97,116,117,109,45,115,101,116,33,32,120,49,50,56,51,32,118,97,108,49,50,56,52,41,0,0};
static C_char C_TLS li177[] C_aligned={C_lihdr(0,0,21),40,112,97,116,116,101,114,110,45,100,97,116,117,109,32,120,49,50,56,54,41,0,0,0,0,0};
static C_char C_TLS li178[] C_aligned={C_lihdr(0,0,22),40,112,97,116,116,101,114,110,45,112,101,114,105,111,100,32,120,49,50,57,50,41,0,0,0,0,0,0};
static C_char C_TLS li179[] C_aligned={C_lihdr(0,0,34),40,112,97,116,116,101,114,110,45,118,97,108,117,101,45,115,101,116,33,32,120,49,50,57,53,32,118,97,108,49,50,57,54,41,0,0};
static C_char C_TLS li180[] C_aligned={C_lihdr(0,0,15),40,102,95,49,50,52,49,52,32,120,49,50,57,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li181[] C_aligned={C_lihdr(0,0,34),40,112,97,116,116,101,114,110,45,115,116,97,116,101,45,115,101,116,33,32,120,49,51,48,49,32,118,97,108,49,51,48,50,41,0,0};
static C_char C_TLS li182[] C_aligned={C_lihdr(0,0,21),40,112,97,116,116,101,114,110,45,115,116,97,116,101,32,120,49,51,48,52,41,0,0,0,0,0};
static C_char C_TLS li183[] C_aligned={C_lihdr(0,0,34),40,112,97,116,116,101,114,110,45,99,97,99,104,101,45,115,101,116,33,32,120,49,51,52,51,32,118,97,108,49,51,52,52,41,0,0};
static C_char C_TLS li184[] C_aligned={C_lihdr(0,0,21),40,112,97,116,116,101,114,110,45,99,97,99,104,101,32,120,49,51,52,54,41,0,0,0,0,0};
static C_char C_TLS li185[] C_aligned={C_lihdr(0,0,16),40,37,97,108,108,111,99,45,112,97,116,116,101,114,110,41};
static C_char C_TLS li186[] C_aligned={C_lihdr(0,0,14),40,97,49,50,55,57,50,32,120,49,51,55,54,41,0,0,0,0,0,0};
static C_char C_TLS li187[] C_aligned={C_lihdr(0,0,98),40,105,110,105,116,105,97,108,105,122,101,45,112,97,116,116,101,114,110,32,111,98,106,49,51,54,54,32,100,97,116,97,49,51,54,55,32,102,111,114,49,51,54,56,32,114,101,112,49,51,54,57,32,102,108,97,103,115,49,51,55,48,32,108,101,110,49,51,55,49,32,100,112,101,114,49,51,55,50,32,103,101,116,114,49,51,55,51,32,109,97,112,114,49,51,55,52,41,0,0};
static C_char C_TLS li188[] C_aligned={C_lihdr(0,0,12),40,101,111,112,63,32,120,49,52,48,49,41,0,0,0,0};
static C_char C_TLS li189[] C_aligned={C_lihdr(0,0,12),40,101,111,100,63,32,120,49,52,48,50,41,0,0,0,0};
static C_char C_TLS li190[] C_aligned={C_lihdr(0,0,20),40,100,111,49,52,48,55,32,105,49,52,48,57,32,101,49,52,49,48,41,0,0,0,0};
static C_char C_TLS li191[] C_aligned={C_lihdr(0,0,26),40,100,111,49,52,49,52,32,110,49,52,49,54,32,101,49,52,49,55,32,102,49,52,49,56,41,0,0};
static C_char C_TLS li192[] C_aligned={C_lihdr(0,0,25),40,110,101,120,116,32,111,98,106,49,52,48,51,32,46,32,97,114,103,115,49,52,48,52,41,0};
static C_char C_TLS li193[] C_aligned={C_lihdr(0,0,8),40,100,111,49,52,52,50,41};
static C_char C_TLS li194[] C_aligned={C_lihdr(0,0,26),40,100,111,49,52,51,56,32,100,121,110,63,49,52,52,48,32,115,116,111,112,49,52,52,49,41,0,0};
static C_char C_TLS li195[] C_aligned={C_lihdr(0,0,16),40,110,101,120,116,45,49,32,111,98,106,49,52,50,52,41};
static C_char C_TLS li196[] C_aligned={C_lihdr(0,0,25),40,110,101,120,116,45,105,110,45,112,97,116,116,101,114,110,32,111,98,106,49,52,54,50,41,0};
static C_char C_TLS li197[] C_aligned={C_lihdr(0,0,33),40,109,97,112,45,112,97,116,116,101,114,110,45,100,97,116,97,32,102,110,49,52,54,51,32,111,98,106,49,52,54,52,41,0};
static C_char C_TLS li198[] C_aligned={C_lihdr(0,0,14),40,97,49,51,51,54,56,32,120,49,52,55,51,41,0,0,0,0,0,0};
static C_char C_TLS li199[] C_aligned={C_lihdr(0,0,22),40,114,101,115,101,116,45,112,101,114,105,111,100,32,111,98,106,49,52,54,56,41,0,0,0,0,0,0};
static C_char C_TLS li200[] C_aligned={C_lihdr(0,0,23),40,97,49,51,52,54,50,32,102,110,49,53,50,53,32,111,98,106,49,53,50,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li201[] C_aligned={C_lihdr(0,0,32),40,109,97,107,101,45,99,121,99,108,101,32,100,97,116,97,49,52,56,50,32,46,32,97,114,103,115,49,52,56,51,41};
static C_char C_TLS li202[] C_aligned={C_lihdr(0,0,23),40,110,101,120,116,45,105,110,45,99,121,99,108,101,32,111,98,106,49,53,51,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li203[] C_aligned={C_lihdr(0,0,17),40,112,97,108,105,110,45,108,101,110,32,120,49,53,53,50,41,0};
static C_char C_TLS li204[] C_aligned={C_lihdr(0,0,30),40,112,97,108,105,110,45,105,110,99,45,115,101,116,33,32,120,49,53,53,53,32,118,97,108,49,53,53,54,41,0,0,0,0,0,0};
static C_char C_TLS li205[] C_aligned={C_lihdr(0,0,23),40,97,49,51,56,57,50,32,102,110,49,54,53,51,32,111,98,106,49,54,53,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li206[] C_aligned={C_lihdr(0,0,37),40,109,97,107,101,45,112,97,108,105,110,100,114,111,109,101,32,100,97,116,97,49,53,56,49,32,46,32,97,114,103,115,49,53,56,50,41,0,0,0,0,0};
static C_char C_TLS li207[] C_aligned={C_lihdr(0,0,28),40,110,101,120,116,45,105,110,45,112,97,108,105,110,100,114,111,109,101,32,111,98,106,49,54,54,50,41,0,0,0,0};
static C_char C_TLS li208[] C_aligned={C_lihdr(0,0,23),40,97,49,52,53,53,57,32,102,110,49,55,50,52,32,111,98,106,49,55,50,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li209[] C_aligned={C_lihdr(0,0,31),40,109,97,107,101,45,108,105,110,101,32,100,97,116,97,49,54,56,49,32,46,32,97,114,103,115,49,54,56,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li210[] C_aligned={C_lihdr(0,0,22),40,110,101,120,116,45,105,110,45,108,105,110,101,32,111,98,106,49,55,51,49,41,0,0,0,0,0,0};
static C_char C_TLS li211[] C_aligned={C_lihdr(0,0,23),40,97,49,52,56,52,54,32,102,110,49,55,55,57,32,111,98,106,49,55,56,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li212[] C_aligned={C_lihdr(0,0,31),40,109,97,107,101,45,104,101,97,112,32,100,97,116,97,49,55,51,54,32,46,32,97,114,103,115,49,55,51,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li213[] C_aligned={C_lihdr(0,0,26),40,100,111,49,55,57,48,32,105,49,55,57,50,32,106,49,55,57,51,32,118,49,55,57,52,41,0,0};
static C_char C_TLS li214[] C_aligned={C_lihdr(0,0,22),40,110,101,120,116,45,105,110,45,104,101,97,112,32,111,98,106,49,55,56,54,41,0,0,0,0,0,0};
static C_char C_TLS li215[] C_aligned={C_lihdr(0,0,23),40,97,49,53,49,57,49,32,102,110,49,56,55,52,32,111,98,106,49,56,55,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li216[] C_aligned={C_lihdr(0,0,35),40,109,97,107,101,45,114,111,116,97,116,105,111,110,32,100,97,116,97,49,56,48,50,32,46,32,97,114,103,115,49,56,48,51,41,0,0,0};
static C_char C_TLS li217[] C_aligned={C_lihdr(0,0,14),40,100,111,49,56,57,48,32,105,49,56,57,50,41,0,0,0,0,0,0};
static C_char C_TLS li218[] C_aligned={C_lihdr(0,0,61),40,114,111,116,97,116,101,45,105,116,101,109,115,32,105,116,101,109,115,49,56,56,53,32,115,116,97,114,116,49,56,56,54,32,115,116,101,112,49,56,56,55,32,119,105,100,116,104,49,56,56,56,32,101,110,100,49,56,56,57,41,0,0,0,0,0};
static C_char C_TLS li219[] C_aligned={C_lihdr(0,0,26),40,110,101,120,116,45,105,110,45,114,111,116,97,116,105,111,110,32,111,98,106,49,56,56,51,41,0,0};
static C_char C_TLS li220[] C_aligned={C_lihdr(0,0,25),40,114,97,110,100,111,109,45,105,116,101,109,45,100,97,116,117,109,32,120,49,57,49,55,41,0};
static C_char C_TLS li221[] C_aligned={C_lihdr(0,0,38),40,114,97,110,100,111,109,45,105,116,101,109,45,105,110,100,101,120,45,115,101,116,33,32,120,49,57,50,48,32,118,97,108,49,57,50,49,41,0,0,0,0,0,0};
static C_char C_TLS li222[] C_aligned={C_lihdr(0,0,25),40,114,97,110,100,111,109,45,105,116,101,109,45,105,110,100,101,120,32,120,49,57,50,51,41,0};
static C_char C_TLS li223[] C_aligned={C_lihdr(0,0,26),40,114,97,110,100,111,109,45,105,116,101,109,45,119,101,105,103,104,116,32,120,49,57,50,57,41,0,0};
static C_char C_TLS li224[] C_aligned={C_lihdr(0,0,23),40,114,97,110,100,111,109,45,105,116,101,109,45,109,105,110,32,120,49,57,51,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li225[] C_aligned={C_lihdr(0,0,23),40,114,97,110,100,111,109,45,105,116,101,109,45,109,97,120,32,120,49,57,52,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li226[] C_aligned={C_lihdr(0,0,38),40,114,97,110,100,111,109,45,105,116,101,109,45,99,111,117,110,116,45,115,101,116,33,32,120,49,57,52,52,32,118,97,108,49,57,52,53,41,0,0,0,0,0,0};
static C_char C_TLS li227[] C_aligned={C_lihdr(0,0,25),40,114,97,110,100,111,109,45,105,116,101,109,45,99,111,117,110,116,32,120,49,57,52,55,41,0};
static C_char C_TLS li228[] C_aligned={C_lihdr(0,0,14),40,97,49,54,48,55,54,32,105,50,48,51,48,41,0,0,0,0,0,0};
static C_char C_TLS li229[] C_aligned={C_lihdr(0,0,23),40,97,49,54,48,55,48,32,102,110,50,48,50,56,32,111,98,106,50,48,50,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li230[] C_aligned={C_lihdr(0,0,17),40,97,49,54,51,48,55,32,105,116,101,109,49,57,56,51,41,0};
static C_char C_TLS li231[] C_aligned={C_lihdr(0,0,25),40,37,109,97,107,101,45,114,97,110,100,111,109,45,105,116,101,109,32,119,50,48,52,49,41,0};
static C_char C_TLS li232[] C_aligned={C_lihdr(0,0,36),40,109,97,107,101,45,119,101,105,103,104,116,105,110,103,32,100,97,116,97,49,57,55,51,32,46,32,97,114,103,115,49,57,55,52,41,0,0,0,0};
static C_char C_TLS li233[] C_aligned={C_lihdr(0,0,37),40,100,111,50,49,50,56,32,116,97,105,108,50,49,51,48,32,105,110,100,101,120,50,49,51,49,32,116,111,116,97,108,50,49,51,50,41,0,0,0,0,0};
static C_char C_TLS li234[] C_aligned={C_lihdr(0,0,17),40,100,111,50,49,50,50,32,116,97,105,108,50,49,50,52,41,0};
static C_char C_TLS li235[] C_aligned={C_lihdr(0,0,36),40,114,101,99,97,108,99,45,119,101,105,103,104,116,105,110,103,115,32,111,98,106,50,49,49,56,32,102,105,120,63,50,49,49,57,41,0,0,0,0};
static C_char C_TLS li236[] C_aligned={C_lihdr(0,0,27),40,100,111,50,49,53,48,32,116,97,105,108,50,49,53,50,32,105,110,100,101,120,50,49,53,51,41,0,0,0};
static C_char C_TLS li237[] C_aligned={C_lihdr(0,0,18),40,112,105,99,107,32,99,50,49,52,56,32,114,50,49,52,57,41,0,0};
static C_char C_TLS li238[] C_aligned={C_lihdr(0,0,17),40,100,111,50,49,53,57,32,116,97,105,108,50,49,54,49,41,0};
static C_char C_TLS li239[] C_aligned={C_lihdr(0,0,17),40,100,111,50,49,53,53,32,105,116,101,109,50,49,53,55,41,0};
static C_char C_TLS li240[] C_aligned={C_lihdr(0,0,27),40,110,101,120,116,45,105,110,45,119,101,105,103,104,116,105,110,103,32,111,98,106,50,49,51,56,41,0,0,0};
static C_char C_TLS li241[] C_aligned={C_lihdr(0,0,23),40,97,49,55,51,57,48,32,102,110,50,50,56,55,32,111,98,106,50,50,56,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li242[] C_aligned={C_lihdr(0,0,14),40,97,49,55,49,52,52,32,115,50,49,56,56,41,0,0,0,0,0,0};
static C_char C_TLS li243[] C_aligned={C_lihdr(0,0,8),40,100,111,50,49,56,49,41};
static C_char C_TLS li244[] C_aligned={C_lihdr(0,0,41),40,100,111,50,50,48,51,32,116,97,105,108,50,50,48,53,32,111,114,100,101,114,50,50,48,54,32,108,105,115,50,50,48,55,32,112,50,50,48,56,41,0};
static C_char C_TLS li245[] C_aligned={C_lihdr(0,0,33),40,109,97,107,101,45,109,97,114,107,111,118,32,100,97,116,97,50,50,49,53,32,46,32,97,114,103,115,50,50,49,54,41,0};
static C_char C_TLS li246[] C_aligned={C_lihdr(0,0,17),40,100,111,50,51,49,50,32,116,97,105,108,50,51,49,52,41,0};
static C_char C_TLS li247[] C_aligned={C_lihdr(0,0,33),40,100,111,50,51,48,50,32,116,97,105,108,50,51,48,52,32,111,117,116,50,51,48,53,32,115,117,109,50,51,48,54,41,0};
static C_char C_TLS li248[] C_aligned={C_lihdr(0,0,37),40,115,101,108,101,99,116,45,111,117,116,112,117,116,32,114,97,110,103,101,50,51,48,48,32,111,117,116,112,117,116,115,50,51,48,49,41,0,0,0,0,0};
static C_char C_TLS li249[] C_aligned={C_lihdr(0,0,17),40,100,111,50,51,52,50,32,108,97,115,116,50,51,52,52,41,0};
static C_char C_TLS li250[] C_aligned={C_lihdr(0,0,26),40,100,111,50,51,49,56,32,105,50,51,50,48,32,106,50,51,50,49,32,102,50,51,50,50,41,0,0};
static C_char C_TLS li251[] C_aligned={C_lihdr(0,0,35),40,100,111,50,51,51,51,32,116,97,105,108,50,51,51,53,32,112,97,115,116,50,51,51,54,32,105,116,101,109,50,51,51,55,41,0,0,0};
static C_char C_TLS li252[] C_aligned={C_lihdr(0,0,24),40,110,101,120,116,45,105,110,45,109,97,114,107,111,118,32,111,98,106,50,50,57,55,41};
static C_char C_TLS li253[] C_aligned={C_lihdr(0,0,24),40,103,114,97,112,104,45,110,111,100,101,45,100,97,116,117,109,32,120,50,51,54,50,41};
static C_char C_TLS li254[] C_aligned={C_lihdr(0,0,14),40,97,49,56,50,54,50,32,110,50,52,50,56,41,0,0,0,0,0,0};
static C_char C_TLS li255[] C_aligned={C_lihdr(0,0,23),40,97,49,56,50,53,54,32,102,110,50,52,50,54,32,111,98,106,50,52,50,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li256[] C_aligned={C_lihdr(0,0,28),40,97,49,56,53,48,56,32,105,116,101,109,50,52,51,56,32,46,32,97,114,103,115,50,52,51,57,41,0,0,0,0};
static C_char C_TLS li257[] C_aligned={C_lihdr(0,0,29),40,112,97,114,115,101,45,103,114,97,112,104,45,105,116,101,109,32,101,120,116,101,114,110,50,52,51,55,41,0,0,0,0,0};
static C_char C_TLS li258[] C_aligned={C_lihdr(0,0,32),40,109,97,107,101,45,103,114,97,112,104,32,100,97,116,97,50,51,56,51,32,46,32,97,114,103,115,50,51,56,52,41};
static C_char C_TLS li259[] C_aligned={C_lihdr(0,0,17),40,100,111,50,52,57,50,32,116,97,105,108,50,52,57,52,41,0};
static C_char C_TLS li260[] C_aligned={C_lihdr(0,0,23),40,110,101,120,116,45,105,110,45,103,114,97,112,104,32,111,98,106,50,52,56,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li261[] C_aligned={C_lihdr(0,0,14),40,97,49,56,57,51,53,32,120,50,53,53,56,41,0,0,0,0,0,0};
static C_char C_TLS li262[] C_aligned={C_lihdr(0,0,31),40,97,100,100,45,111,117,116,99,111,109,101,32,112,114,101,118,50,53,53,53,32,110,101,120,116,50,53,53,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li263[] C_aligned={C_lihdr(0,0,14),40,97,49,56,57,56,51,32,122,50,53,54,54,41,0,0,0,0,0,0};
static C_char C_TLS li264[] C_aligned={C_lihdr(0,0,14),40,97,49,56,57,57,51,32,122,50,53,54,53,41,0,0,0,0,0,0};
static C_char C_TLS li265[] C_aligned={C_lihdr(0,0,27),40,98,101,102,111,114,101,63,32,120,50,53,54,48,32,121,50,53,54,49,32,108,50,53,54,50,41,0,0,0};
static C_char C_TLS li266[] C_aligned={C_lihdr(0,0,16),40,97,49,57,48,57,49,32,114,111,119,50,54,56,57,41};
static C_char C_TLS li267[] C_aligned={C_lihdr(0,0,20),40,100,111,50,54,54,51,32,105,50,54,54,53,32,109,50,54,54,54,41,0,0,0,0};
static C_char C_TLS li268[] C_aligned={C_lihdr(0,0,14),40,100,111,50,54,53,54,32,108,50,54,53,56,41,0,0,0,0,0,0};
static C_char C_TLS li269[] C_aligned={C_lihdr(0,0,20),40,100,111,50,54,52,57,32,105,50,54,53,49,32,109,50,54,53,50,41,0,0,0,0};
static C_char C_TLS li270[] C_aligned={C_lihdr(0,0,20),40,100,111,50,54,52,51,32,105,50,54,52,53,32,109,50,54,52,54,41,0,0,0,0};
static C_char C_TLS li271[] C_aligned={C_lihdr(0,0,14),40,100,111,50,53,54,57,32,120,50,53,55,49,41,0,0,0,0,0,0};
static C_char C_TLS li272[] C_aligned={C_lihdr(0,0,17),40,100,111,50,54,51,55,32,116,97,105,108,50,54,51,57,41,0};
static C_char C_TLS li273[] C_aligned={C_lihdr(0,0,20),40,100,111,50,54,50,55,32,105,50,54,50,57,32,109,50,54,51,48,41,0,0,0,0};
static C_char C_TLS li274[] C_aligned={C_lihdr(0,0,14),40,100,111,50,54,50,50,32,108,50,54,50,52,41,0,0,0,0,0,0};
static C_char C_TLS li275[] C_aligned={C_lihdr(0,0,14),40,100,111,50,54,49,55,32,105,50,54,49,57,41,0,0,0,0,0,0};
static C_char C_TLS li276[] C_aligned={C_lihdr(0,0,20),40,97,49,57,51,56,55,32,120,50,54,49,51,32,121,50,54,49,52,41,0,0,0,0};
static C_char C_TLS li277[] C_aligned={C_lihdr(0,0,14),40,100,111,50,54,48,52,32,101,50,54,48,54,41,0,0,0,0,0,0};
static C_char C_TLS li278[] C_aligned={C_lihdr(0,0,20),40,100,111,50,53,57,56,32,101,50,54,48,48,32,115,50,54,48,49,41,0,0,0,0};
static C_char C_TLS li279[] C_aligned={C_lihdr(0,0,25),40,100,111,50,53,57,48,32,116,97,105,108,50,53,57,50,32,108,101,110,50,53,57,51,41,0};
static C_char C_TLS li280[] C_aligned={C_lihdr(0,0,20),40,97,49,57,53,51,54,32,120,50,53,56,56,32,121,50,53,56,57,41,0,0,0,0};
static C_char C_TLS li281[] C_aligned={C_lihdr(0,0,29),40,100,111,50,53,55,55,32,112,114,101,118,50,53,55,57,32,106,50,53,56,48,32,120,50,53,56,49,41,0,0,0,0,0};
static C_char C_TLS li282[] C_aligned={C_lihdr(0,0,14),40,100,111,50,53,55,52,32,105,50,53,55,54,41,0,0,0,0,0,0};
static C_char C_TLS li283[] C_aligned={C_lihdr(0,0,35),40,109,97,114,107,111,118,45,97,110,97,108,121,122,101,32,115,101,113,50,53,48,48,32,46,32,97,114,103,115,50,53,48,49,41,0,0,0};
static C_char C_TLS li284[] C_aligned={C_lihdr(0,0,45),40,109,97,107,101,45,116,111,107,101,110,32,116,121,112,101,50,55,51,51,32,115,116,114,105,110,103,50,55,51,52,32,112,111,115,105,116,105,111,110,50,55,51,53,41,0,0,0,0,0};
static C_char C_TLS li285[] C_aligned={C_lihdr(0,0,18),40,116,111,107,101,110,45,116,121,112,101,32,120,50,55,52,48,41,0,0};
static C_char C_TLS li286[] C_aligned={C_lihdr(0,0,20),40,116,111,107,101,110,45,115,116,114,105,110,103,32,120,50,55,52,54,41,0,0,0,0};
static C_char C_TLS li287[] C_aligned={C_lihdr(0,0,22),40,116,111,107,101,110,45,112,111,115,105,116,105,111,110,32,120,50,55,53,50,41,0,0,0,0,0,0};
static C_char C_TLS li288[] C_aligned={C_lihdr(0,0,19),40,108,105,115,116,45,62,116,111,107,101,110,32,108,50,55,54,49,41,0,0,0};
static C_char C_TLS li289[] C_aligned={C_lihdr(0,0,22),40,102,105,114,115,116,45,116,111,107,101,110,32,116,111,107,115,50,55,54,51,41,0,0,0,0,0,0};
static C_char C_TLS li290[] C_aligned={C_lihdr(0,0,23),40,110,117,108,108,45,116,111,107,101,110,115,63,32,116,111,107,115,50,55,54,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li291[] C_aligned={C_lihdr(0,0,63),40,109,97,107,101,45,114,117,108,101,32,110,97,109,101,50,55,54,54,32,116,121,112,101,50,55,54,55,32,112,97,116,116,101,114,110,50,55,54,56,32,112,97,114,115,101,114,50,55,54,57,32,101,109,105,116,101,114,50,55,55,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li292[] C_aligned={C_lihdr(0,0,17),40,114,117,108,101,45,110,97,109,101,32,120,50,55,55,53,41,0};
static C_char C_TLS li293[] C_aligned={C_lihdr(0,0,26),40,103,101,116,45,114,117,108,101,32,116,121,112,50,56,49,57,32,100,101,102,50,56,50,48,41,0,0};
static C_char C_TLS li294[] C_aligned={C_lihdr(0,0,21),40,112,97,116,116,101,114,110,45,118,97,108,117,101,32,120,50,56,50,50,41,0,0,0,0,0};
static C_char C_TLS li295[] C_aligned={C_lihdr(0,0,23),40,112,97,116,116,101,114,110,45,99,108,97,117,115,101,63,32,120,50,56,50,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li296[] C_aligned={C_lihdr(0,0,20),40,112,97,116,116,101,114,110,45,115,117,98,115,32,120,50,56,50,53,41,0,0,0,0};
static C_char C_TLS li297[] C_aligned={C_lihdr(0,0,21),40,112,97,116,116,101,114,110,45,110,115,117,98,115,32,120,50,56,50,54,41,0,0,0,0,0};
static C_char C_TLS li298[] C_aligned={C_lihdr(0,0,25),40,112,97,116,116,101,114,110,45,115,117,98,32,120,50,56,50,55,32,105,50,56,50,56,41,0};
static C_char C_TLS li299[] C_aligned={C_lihdr(0,0,29),40,112,97,116,116,101,114,110,45,122,101,114,111,45,111,114,45,109,111,114,101,63,32,120,50,56,51,50,41,0,0,0,0,0};
static C_char C_TLS li300[] C_aligned={C_lihdr(0,0,42),40,109,97,107,101,45,112,97,114,115,101,45,101,114,114,111,114,32,115,116,114,105,110,103,50,56,51,52,32,112,111,115,105,116,105,111,110,50,56,51,53,41,0,0};
static C_char C_TLS li301[] C_aligned={C_lihdr(0,0,26),40,112,97,114,115,101,45,101,114,114,111,114,45,115,116,114,105,110,103,32,120,50,56,52,48,41,0,0};
static C_char C_TLS li302[] C_aligned={C_lihdr(0,0,28),40,112,97,114,115,101,45,101,114,114,111,114,45,112,111,115,105,116,105,111,110,32,120,50,56,52,54,41,0,0,0,0};
static C_char C_TLS li303[] C_aligned={C_lihdr(0,0,50),40,109,97,107,101,45,112,97,114,115,101,45,117,110,105,116,32,116,121,112,101,50,56,53,52,32,112,97,114,115,101,100,50,56,53,53,32,112,111,115,105,116,105,111,110,50,56,53,54,41,0,0};
static C_char C_TLS li304[] C_aligned={C_lihdr(0,0,19),40,112,97,114,115,101,45,117,110,105,116,63,32,120,50,56,53,55,41,0,0,0};
static C_char C_TLS li305[] C_aligned={C_lihdr(0,0,23),40,112,97,114,115,101,45,117,110,105,116,45,116,121,112,101,32,120,50,56,54,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li306[] C_aligned={C_lihdr(0,0,25),40,112,97,114,115,101,45,117,110,105,116,45,112,97,114,115,101,100,32,120,50,56,54,55,41,0};
static C_char C_TLS li307[] C_aligned={C_lihdr(0,0,27),40,112,97,114,115,101,45,117,110,105,116,45,112,111,115,105,116,105,111,110,32,120,50,56,55,51,41,0,0,0};
static C_char C_TLS li308[] C_aligned={C_lihdr(0,0,19),40,116,111,107,101,110,45,117,110,105,116,63,32,120,50,56,56,51,41,0,0,0};
static C_char C_TLS li309[] C_aligned={C_lihdr(0,0,33),40,116,111,107,101,110,45,117,110,105,116,45,116,121,112,101,61,63,32,120,50,56,56,52,32,116,121,112,50,56,56,53,41,0};
static C_char C_TLS li310[] C_aligned={C_lihdr(0,0,33),40,103,101,116,45,101,109,105,116,45,105,110,102,111,32,110,97,109,101,50,56,56,55,32,105,110,102,111,50,56,56,56,41,0};
static C_char C_TLS li311[] C_aligned={C_lihdr(0,0,42),40,97,100,100,45,101,109,105,116,45,105,110,102,111,32,110,97,109,101,50,56,57,48,32,100,97,116,97,50,56,57,49,32,105,110,102,111,50,56,57,50,41,0,0};
static C_char C_TLS li312[] C_aligned={C_lihdr(0,0,43),40,115,101,116,45,101,109,105,116,45,105,110,102,111,33,32,110,97,109,101,50,56,57,51,32,100,97,116,97,50,56,57,52,32,105,110,102,111,50,56,57,53,41,0,0,0};
static C_char C_TLS li313[] C_aligned={C_lihdr(0,0,30),40,101,109,105,116,32,120,50,56,57,56,32,105,110,102,111,50,56,57,57,32,101,114,114,102,50,57,48,48,41,0,0,0,0,0,0};
static C_char C_TLS li314[] C_aligned={C_lihdr(0,0,37),40,101,109,105,116,45,108,105,115,116,32,108,105,115,50,57,48,49,32,105,110,102,111,50,57,48,50,32,101,114,114,102,50,57,48,51,41,0,0,0,0,0};
static C_char C_TLS li315[] C_aligned={C_lihdr(0,0,27),40,102,95,50,48,54,56,52,32,97,114,103,115,50,57,49,54,32,101,114,114,102,50,57,49,55,41,0,0,0};
static C_char C_TLS li316[] C_aligned={C_lihdr(0,0,29),40,115,105,109,112,108,101,45,117,110,105,116,45,112,97,114,115,101,114,32,116,121,112,101,50,57,49,53,41,0,0,0,0,0};
static C_char C_TLS li317[] C_aligned={C_lihdr(0,0,17),40,100,111,50,57,50,53,32,116,97,105,108,50,57,50,55,41,0};
static C_char C_TLS li318[] C_aligned={C_lihdr(0,0,36),40,102,95,50,48,54,57,50,32,117,110,105,116,50,57,49,57,32,105,110,102,111,50,57,50,48,32,101,114,114,102,50,57,50,49,41,0,0,0,0};
static C_char C_TLS li319[] C_aligned={C_lihdr(0,0,30),40,115,105,109,112,108,101,45,117,110,105,116,45,101,109,105,116,116,101,114,32,102,117,110,99,50,57,49,56,41,0,0,0,0,0,0};
static C_char C_TLS li320[] C_aligned={C_lihdr(0,0,8),40,97,50,48,56,57,48,41};
static C_char C_TLS li321[] C_aligned={C_lihdr(0,0,26),40,97,50,48,57,48,48,32,97,50,57,53,55,32,98,50,57,53,56,32,99,50,57,53,57,41,0,0};
static C_char C_TLS li322[] C_aligned={C_lihdr(0,0,8),40,97,50,48,57,57,54,41};
static C_char C_TLS li323[] C_aligned={C_lihdr(0,0,26),40,97,50,49,48,49,48,32,97,50,57,55,51,32,98,50,57,55,52,32,99,50,57,55,53,41,0,0};
static C_char C_TLS li324[] C_aligned={C_lihdr(0,0,14),40,100,111,50,57,54,56,32,105,50,57,55,48,41,0,0,0,0,0,0};
static C_char C_TLS li325[] C_aligned={C_lihdr(0,0,8),40,97,50,49,48,54,51,41};
static C_char C_TLS li326[] C_aligned={C_lihdr(0,0,26),40,97,50,49,48,55,55,32,97,50,57,57,53,32,98,50,57,57,54,32,99,50,57,57,55,41,0,0};
static C_char C_TLS li327[] C_aligned={C_lihdr(0,0,14),40,100,111,50,57,57,48,32,105,50,57,57,50,41,0,0,0,0,0,0};
static C_char C_TLS li328[] C_aligned={C_lihdr(0,0,8),40,97,50,49,49,53,50,41};
static C_char C_TLS li329[] C_aligned={C_lihdr(0,0,26),40,97,50,49,49,53,56,32,97,51,48,49,52,32,98,51,48,49,53,32,99,51,48,49,54,41,0,0};
static C_char C_TLS li330[] C_aligned={C_lihdr(0,0,8),40,100,111,51,48,49,48,41};
static C_char C_TLS li331[] C_aligned={C_lihdr(0,0,8),40,97,50,49,49,57,49,41};
static C_char C_TLS li332[] C_aligned={C_lihdr(0,0,26),40,97,50,49,49,57,55,32,97,51,48,51,50,32,98,51,48,51,51,32,99,51,48,51,52,41,0,0};
static C_char C_TLS li333[] C_aligned={C_lihdr(0,0,70),40,112,97,114,115,101,114,32,112,97,116,50,57,52,52,32,116,111,107,101,110,115,50,57,52,53,32,102,111,114,99,101,45,97,110,100,50,57,52,54,32,108,101,118,101,108,50,57,52,55,32,116,114,97,99,101,50,57,52,56,32,101,114,114,102,50,57,52,57,41,0,0,0,0,0,0};
static C_char C_TLS li334[] C_aligned={C_lihdr(0,0,21),40,83,97,108,84,111,107,101,110,84,121,112,101,63,32,105,51,50,48,57,41,0,0,0,0,0};
static C_char C_TLS li335[] C_aligned={C_lihdr(0,0,18),40,83,97,108,79,112,84,121,112,101,63,32,105,51,50,49,51,41,0,0};
static C_char C_TLS li336[] C_aligned={C_lihdr(0,0,20),40,83,97,108,82,117,108,101,84,121,112,101,63,32,105,51,50,50,50,41,0,0,0,0};
static C_char C_TLS li337[] C_aligned={C_lihdr(0,0,29),40,83,97,108,84,121,112,101,61,63,32,116,121,112,49,51,50,50,51,32,116,121,112,50,51,50,50,52,41,0,0,0,0,0};
static C_char C_TLS li338[] C_aligned={C_lihdr(0,0,17),40,100,111,51,50,55,51,32,116,111,107,115,51,50,55,53,41,0};
static C_char C_TLS li339[] C_aligned={C_lihdr(0,0,36),40,114,101,109,111,118,101,45,116,111,107,101,110,45,116,121,112,101,32,116,111,107,115,51,50,54,57,32,116,121,112,51,50,55,48,41,0,0,0,0};
static C_char C_TLS li340[] C_aligned={C_lihdr(0,0,14),40,105,115,45,111,112,63,32,120,51,51,48,48,41,0,0,0,0,0,0};
static C_char C_TLS li341[] C_aligned={C_lihdr(0,0,29),40,100,111,51,51,48,57,32,119,50,51,51,49,49,32,111,107,51,51,49,50,32,108,105,51,51,49,51,41,0,0,0,0,0};
static C_char C_TLS li342[] C_aligned={C_lihdr(0,0,8),40,100,111,51,51,48,55,41};
static C_char C_TLS li343[] C_aligned={C_lihdr(0,0,18),40,105,110,102,45,62,112,114,101,32,105,110,102,51,51,48,50,41,0,0};
static C_char C_TLS li344[] C_aligned={C_lihdr(0,0,38),40,115,97,108,45,112,97,114,115,101,45,115,116,101,112,112,105,110,103,32,97,114,103,115,51,52,54,56,32,101,114,114,102,51,52,54,57,41,0,0,0,0,0,0};
static C_char C_TLS li345[] C_aligned={C_lihdr(0,0,14),40,100,111,51,54,55,56,32,102,51,54,56,48,41,0,0,0,0,0,0};
static C_char C_TLS li346[] C_aligned={C_lihdr(0,0,14),40,100,111,51,54,55,49,32,102,51,54,55,51,41,0,0,0,0,0,0};
static C_char C_TLS li347[] C_aligned={C_lihdr(0,0,8),40,97,50,48,55,54,49,41};
static C_char C_TLS li348[] C_aligned={C_lihdr(0,0,44),40,97,50,48,55,54,56,32,115,117,99,99,101,115,115,50,57,51,57,32,114,101,115,117,108,116,115,50,57,52,48,32,114,101,109,97,105,110,115,50,57,52,49,41,0,0,0,0};
static C_char C_TLS li349[] C_aligned={C_lihdr(0,0,17),40,97,50,48,55,53,53,32,101,114,114,102,50,57,51,55,41,0};
static C_char C_TLS li350[] C_aligned={C_lihdr(0,0,47),40,115,97,108,32,115,116,114,105,110,103,51,54,53,53,32,114,117,108,101,51,54,53,54,32,116,111,107,101,110,115,51,54,53,55,32,116,114,97,99,101,63,51,54,53,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li351[] C_aligned={C_lihdr(0,0,17),40,100,111,51,54,57,56,32,116,97,105,108,51,55,48,48,41,0};
static C_char C_TLS li352[] C_aligned={C_lihdr(0,0,27),40,112,114,105,110,116,101,114,32,116,104,105,110,103,51,54,57,54,32,108,101,118,51,54,57,55,41,0,0,0};
static C_char C_TLS li353[] C_aligned={C_lihdr(0,0,17),40,100,111,51,55,48,54,32,116,97,105,108,51,55,48,56,41,0};
static C_char C_TLS li354[] C_aligned={C_lihdr(0,0,22),40,115,97,108,58,112,114,105,110,116,32,46,32,97,114,103,115,51,54,57,52,41,0,0,0,0,0,0};
static C_char C_TLS li355[] C_aligned={C_lihdr(0,0,20),40,115,97,108,58,99,104,100,105,114,32,112,97,116,104,51,55,49,51,41,0,0,0,0};
static C_char C_TLS li356[] C_aligned={C_lihdr(0,0,19),40,115,97,108,58,108,111,97,100,32,102,105,108,101,51,55,49,53,41,0,0,0};
static C_char C_TLS li357[] C_aligned={C_lihdr(0,0,21),40,115,97,108,58,111,112,101,110,32,46,32,97,114,103,115,51,55,49,57,41,0,0,0,0,0};
static C_char C_TLS li358[] C_aligned={C_lihdr(0,0,23),40,115,97,108,58,111,117,116,112,117,116,32,46,32,97,114,103,115,51,55,50,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li359[] C_aligned={C_lihdr(0,0,32),40,108,111,111,112,45,111,112,101,114,97,116,111,114,45,115,101,116,33,32,99,51,56,53,49,32,120,51,56,53,50,41};
static C_char C_TLS li360[] C_aligned={C_lihdr(0,0,21),40,108,111,111,112,45,98,105,110,100,105,110,103,115,32,99,51,56,53,51,41,0,0,0,0,0};
static C_char C_TLS li361[] C_aligned={C_lihdr(0,0,23),40,108,111,111,112,45,99,111,108,108,101,99,116,111,114,115,32,99,51,56,53,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li362[] C_aligned={C_lihdr(0,0,22),40,108,111,111,112,45,105,110,105,116,105,97,108,108,121,32,99,51,56,53,57,41,0,0,0,0,0,0};
static C_char C_TLS li363[] C_aligned={C_lihdr(0,0,22),40,108,111,111,112,45,101,110,100,45,116,101,115,116,115,32,99,51,56,54,50,41,0,0,0,0,0,0};
static C_char C_TLS li364[] C_aligned={C_lihdr(0,0,20),40,108,111,111,112,45,108,111,111,112,105,110,103,32,99,51,56,54,53,41,0,0,0,0};
static C_char C_TLS li365[] C_aligned={C_lihdr(0,0,31),40,108,111,111,112,45,108,111,111,112,105,110,103,45,115,101,116,33,32,99,51,56,54,54,32,120,51,56,54,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li366[] C_aligned={C_lihdr(0,0,21),40,108,111,111,112,45,115,116,101,112,112,105,110,103,32,99,51,56,54,56,41,0,0,0,0,0};
static C_char C_TLS li367[] C_aligned={C_lihdr(0,0,20),40,108,111,111,112,45,102,105,110,97,108,108,121,32,99,51,56,55,49,41,0,0,0,0};
static C_char C_TLS li368[] C_aligned={C_lihdr(0,0,22),40,108,111,111,112,45,114,101,116,117,114,110,105,110,103,32,99,51,56,55,52,41,0,0,0,0,0,0};
static C_char C_TLS li369[] C_aligned={C_lihdr(0,0,14),40,100,111,51,56,55,57,32,97,51,56,56,49,41,0,0,0,0,0,0};
static C_char C_TLS li370[] C_aligned={C_lihdr(0,0,27),40,109,97,107,101,45,108,111,111,112,45,99,108,97,117,115,101,32,97,114,103,115,51,56,55,55,41,0,0,0};
static C_char C_TLS li371[] C_aligned={C_lihdr(0,0,14),40,100,111,51,56,57,49,32,108,51,56,57,51,41,0,0,0,0,0,0};
static C_char C_TLS li372[] C_aligned={C_lihdr(0,0,40),40,103,97,116,104,101,114,45,99,108,97,117,115,101,32,99,108,97,117,115,101,115,51,56,56,57,32,97,99,99,101,115,115,111,114,51,56,57,48,41};
static C_char C_TLS li373[] C_aligned={C_lihdr(0,0,39),40,103,97,116,104,101,114,45,99,108,97,117,115,101,115,32,99,97,108,108,101,114,51,56,56,54,32,99,108,97,117,115,101,115,51,56,56,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li374[] C_aligned={C_lihdr(0,0,24),40,108,111,111,112,45,111,112,63,32,120,51,56,57,55,32,111,112,115,51,56,57,56,41};
static C_char C_TLS li375[] C_aligned={C_lihdr(0,0,22),40,108,111,111,112,45,118,97,114,105,97,98,108,101,63,32,120,51,56,57,57,41,0,0,0,0,0,0};
static C_char C_TLS li376[] C_aligned={C_lihdr(0,0,30),40,109,97,107,101,45,98,105,110,100,105,110,103,32,118,97,114,51,57,48,48,32,118,97,108,51,57,48,49,41,0,0,0,0,0,0};
static C_char C_TLS li377[] C_aligned={C_lihdr(0,0,17),40,100,111,51,57,50,51,32,116,97,105,108,51,57,50,53,41,0};
static C_char C_TLS li378[] C_aligned={C_lihdr(0,0,17),40,100,111,51,57,49,56,32,116,97,105,108,51,57,50,48,41,0};
static C_char C_TLS li379[] C_aligned={C_lihdr(0,0,20),40,100,111,51,57,48,56,32,104,51,57,49,48,32,108,51,57,49,49,41,0,0,0,0};
static C_char C_TLS li380[] C_aligned={C_lihdr(0,0,39),40,108,111,111,112,45,101,114,114,111,114,32,111,112,115,51,57,48,50,32,102,111,114,109,115,51,57,48,51,32,97,114,103,115,51,57,48,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li381[] C_aligned={C_lihdr(0,0,41),40,112,97,114,115,101,45,102,111,114,32,102,111,114,109,115,51,57,51,55,32,99,108,97,117,115,101,115,51,57,51,56,32,111,112,115,51,57,51,57,41,0};
static C_char C_TLS li382[] C_aligned={C_lihdr(0,0,17),40,100,111,51,57,53,55,32,110,101,120,116,51,57,53,57,41,0};
static C_char C_TLS li383[] C_aligned={C_lihdr(0,0,51),40,112,97,114,115,101,45,110,117,109,101,114,105,99,97,108,45,102,111,114,32,102,111,114,109,115,51,57,52,51,32,99,108,97,117,115,101,115,51,57,52,52,32,111,112,115,51,57,52,53,41,0,0,0};
static C_char C_TLS li384[] C_aligned={C_lihdr(0,0,8),40,97,50,52,51,52,48,41};
static C_char C_TLS li385[] C_aligned={C_lihdr(0,0,30),40,97,50,52,51,53,56,32,99,108,97,117,115,101,52,48,51,56,32,105,103,110,111,114,101,52,48,51,57,41,0,0,0,0,0,0};
static C_char C_TLS li386[] C_aligned={C_lihdr(0,0,44),40,112,97,114,115,101,45,114,101,112,101,97,116,32,102,111,114,109,115,52,48,51,53,32,99,108,97,117,115,101,115,52,48,51,54,32,111,112,115,52,48,51,55,41,0,0,0,0};
static C_char C_TLS li387[] C_aligned={C_lihdr(0,0,17),40,100,111,52,48,53,54,32,110,101,120,116,52,48,53,56,41,0};
static C_char C_TLS li388[] C_aligned={C_lihdr(0,0,56),40,112,97,114,115,101,45,115,101,113,117,101,110,99,101,45,105,116,101,114,97,116,105,111,110,32,102,111,114,109,115,52,48,52,49,32,99,108,97,117,115,101,115,52,48,52,50,32,111,112,115,52,48,52,51,41};
static C_char C_TLS li389[] C_aligned={C_lihdr(0,0,17),40,100,111,52,49,50,51,32,110,101,120,116,52,49,50,53,41,0};
static C_char C_TLS li390[] C_aligned={C_lihdr(0,0,55),40,112,97,114,115,101,45,103,101,110,101,114,97,108,45,105,116,101,114,97,116,105,111,110,32,102,111,114,109,115,52,49,49,51,32,99,108,97,117,115,101,115,52,49,49,52,32,111,112,115,52,49,49,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li391[] C_aligned={C_lihdr(0,0,26),40,100,111,52,49,54,49,32,110,101,101,100,52,49,54,51,32,110,101,120,116,52,49,54,52,41,0,0};
static C_char C_TLS li392[] C_aligned={C_lihdr(0,0,42),40,112,97,114,115,101,45,119,105,116,104,32,102,111,114,109,115,52,49,53,49,32,99,108,97,117,115,101,115,52,49,53,50,32,111,112,115,52,49,53,51,41,0,0};
static C_char C_TLS li393[] C_aligned={C_lihdr(0,0,8),40,100,111,52,50,48,53,41};
static C_char C_TLS li394[] C_aligned={C_lihdr(0,0,40),40,112,97,114,115,101,45,100,111,32,102,111,114,109,115,52,49,57,54,32,99,108,97,117,115,101,115,52,49,57,55,32,111,112,115,52,49,57,56,41};
static C_char C_TLS li395[] C_aligned={C_lihdr(0,0,45),40,112,97,114,115,101,45,102,105,110,97,108,108,121,32,102,111,114,109,115,52,50,49,53,32,99,108,97,117,115,101,115,52,50,49,54,32,111,112,115,52,50,49,55,41,0,0,0,0,0};
static C_char C_TLS li396[] C_aligned={C_lihdr(0,0,47),40,112,97,114,115,101,45,105,110,105,116,105,97,108,108,121,32,102,111,114,109,115,52,50,50,57,32,99,108,97,117,115,101,115,52,50,51,48,32,111,112,115,52,50,51,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li397[] C_aligned={C_lihdr(0,0,50),40,109,97,107,101,45,99,111,108,108,101,99,116,111,114,32,118,97,114,52,50,57,54,32,116,121,112,101,52,50,57,55,32,97,99,99,52,50,57,56,32,104,101,97,100,52,50,57,57,41,0,0};
static C_char C_TLS li398[] C_aligned={C_lihdr(0,0,24),40,99,111,108,108,101,99,116,111,114,45,116,121,112,101,32,99,111,108,52,51,48,48,41};
static C_char C_TLS li399[] C_aligned={C_lihdr(0,0,23),40,99,111,108,108,101,99,116,111,114,45,97,99,99,32,99,111,108,52,51,48,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li400[] C_aligned={C_lihdr(0,0,14),40,100,111,52,50,52,56,32,97,52,50,53,48,41,0,0,0,0,0,0};
static C_char C_TLS li401[] C_aligned={C_lihdr(0,0,14),40,100,111,52,50,53,54,32,99,52,50,53,56,41,0,0,0,0,0,0};
static C_char C_TLS li402[] C_aligned={C_lihdr(0,0,50),40,112,97,114,115,101,45,97,99,99,117,109,117,108,97,116,105,111,110,32,102,111,114,109,115,52,50,55,53,32,99,108,97,117,115,101,115,52,50,55,54,32,111,112,115,52,50,55,55,41,0,0};
static C_char C_TLS li403[] C_aligned={C_lihdr(0,0,22),40,108,111,111,112,45,114,101,116,117,114,110,32,101,120,112,114,52,51,55,54,41,0,0,0,0,0,0};
static C_char C_TLS li404[] C_aligned={C_lihdr(0,0,49),40,112,97,114,115,101,45,119,104,105,108,101,45,117,110,116,105,108,32,102,111,114,109,115,52,51,55,55,32,99,108,97,117,115,101,115,52,51,55,56,32,111,112,115,52,51,55,57,41,0};
static C_char C_TLS li405[] C_aligned={C_lihdr(0,0,45),40,112,97,114,115,101,45,116,104,101,114,101,105,115,32,102,111,114,109,115,52,51,57,56,32,99,108,97,117,115,101,115,52,51,57,57,32,111,112,115,52,52,48,48,41,0,0,0,0,0};
static C_char C_TLS li406[] C_aligned={C_lihdr(0,0,44),40,112,97,114,115,101,45,114,101,116,117,114,110,32,102,111,114,109,115,52,52,49,52,32,99,108,97,117,115,101,115,52,52,49,53,32,111,112,115,52,52,49,54,41,0,0,0,0};
static C_char C_TLS li407[] C_aligned={C_lihdr(0,0,8),40,97,50,54,50,51,49,41};
static C_char C_TLS li408[] C_aligned={C_lihdr(0,0,20),40,97,50,54,50,52,52,32,97,52,52,52,49,32,98,52,52,52,50,41,0,0,0,0};
static C_char C_TLS li409[] C_aligned={C_lihdr(0,0,38),40,100,111,52,52,51,52,32,111,112,52,52,51,54,32,99,108,97,117,115,101,52,52,51,55,32,114,101,109,97,105,110,115,52,52,51,56,41,0,0,0,0,0,0};
static C_char C_TLS li410[] C_aligned={C_lihdr(0,0,58),40,112,97,114,115,101,45,116,104,101,110,45,101,108,115,101,45,100,101,112,101,110,100,101,110,116,115,32,102,111,114,109,115,52,52,50,56,32,99,108,97,117,115,101,115,52,52,50,57,32,111,112,115,52,52,51,48,41,0,0};
static C_char C_TLS li411[] C_aligned={C_lihdr(0,0,8),40,97,50,54,51,57,53,41};
static C_char C_TLS li412[] C_aligned={C_lihdr(0,0,20),40,97,50,54,52,48,57,32,97,52,52,55,48,32,98,52,52,55,49,41,0,0,0,0};
static C_char C_TLS li413[] C_aligned={C_lihdr(0,0,8),40,97,50,54,52,55,51,41};
static C_char C_TLS li414[] C_aligned={C_lihdr(0,0,20),40,97,50,54,52,55,57,32,97,52,52,54,55,32,98,52,52,54,56,41,0,0,0,0};
static C_char C_TLS li415[] C_aligned={C_lihdr(0,0,49),40,112,97,114,115,101,45,99,111,110,100,105,116,105,111,110,97,108,32,102,111,114,109,115,52,52,53,52,32,99,108,97,117,115,101,115,52,52,53,53,32,111,112,115,52,52,53,54,41,0};
static C_char C_TLS li416[] C_aligned={C_lihdr(0,0,26),40,111,112,45,116,121,112,101,63,32,111,112,52,52,57,55,32,116,121,112,101,52,52,57,56,41,0,0};
static C_char C_TLS li417[] C_aligned={C_lihdr(0,0,8),40,97,50,54,54,50,49,41};
static C_char C_TLS li418[] C_aligned={C_lihdr(0,0,20),40,97,50,54,54,51,48,32,97,52,53,49,48,32,98,52,53,49,49,41,0,0,0,0};
static C_char C_TLS li419[] C_aligned={C_lihdr(0,0,47),40,100,111,52,53,48,49,32,111,112,52,53,48,51,32,99,108,97,117,115,101,52,53,48,52,32,114,101,109,97,105,110,115,52,53,48,53,32,98,111,100,121,52,53,48,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li420[] C_aligned={C_lihdr(0,0,46),40,112,97,114,115,101,45,105,116,101,114,97,116,105,111,110,32,99,97,108,108,101,114,52,53,50,51,32,102,111,114,109,115,52,53,50,52,32,111,112,115,52,53,50,53,41,0,0,0,0,0,0};
static C_char C_TLS li421[] C_aligned={C_lihdr(0,0,59),40,102,95,50,55,48,51,54,32,97,52,55,48,50,52,55,48,53,32,97,52,55,48,49,52,55,48,54,32,97,52,55,48,48,52,55,48,55,32,97,52,54,57,57,52,55,48,56,32,97,52,54,57,56,52,55,48,57,41,0,0,0};
static C_char C_TLS li422[] C_aligned={C_lihdr(0,0,23),40,109,109,58,109,97,107,101,45,111,110,32,46,32,97,114,103,115,52,53,57,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li423[] C_aligned={C_lihdr(0,0,29),40,102,95,50,55,55,53,48,32,97,52,55,49,56,52,55,50,50,32,97,52,55,49,55,52,55,50,51,41,0,0,0,0,0};
static C_char C_TLS li424[] C_aligned={C_lihdr(0,0,14),40,109,109,58,111,110,63,32,109,52,55,49,54,41,0,0,0,0,0,0};
static C_char C_TLS li425[] C_aligned={C_lihdr(0,0,59),40,102,95,50,55,55,56,49,32,97,52,55,57,55,52,56,48,48,32,97,52,55,57,54,52,56,48,49,32,97,52,55,57,53,52,56,48,50,32,97,52,55,57,52,52,56,48,51,32,97,52,55,57,51,52,56,48,52,41,0,0,0};
static C_char C_TLS li426[] C_aligned={C_lihdr(0,0,24),40,109,109,58,109,97,107,101,45,111,102,102,32,46,32,97,114,103,115,52,55,50,53,41};
static C_char C_TLS li427[] C_aligned={C_lihdr(0,0,29),40,102,95,50,56,50,50,48,32,97,52,56,49,50,52,56,49,54,32,97,52,56,49,49,52,56,49,55,41,0,0,0,0,0};
static C_char C_TLS li428[] C_aligned={C_lihdr(0,0,15),40,109,109,58,111,102,102,63,32,109,52,56,49,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li429[] C_aligned={C_lihdr(0,0,59),40,102,95,50,56,50,53,52,32,97,52,57,50,56,52,57,51,49,32,97,52,57,50,55,52,57,51,50,32,97,52,57,50,54,52,57,51,51,32,97,52,57,50,53,52,57,51,52,32,97,52,57,50,52,52,57,51,53,41,0,0,0};
static C_char C_TLS li430[] C_aligned={C_lihdr(0,0,26),40,109,109,58,109,97,107,101,45,116,111,117,99,104,32,46,32,97,114,103,115,52,56,49,57,41,0,0};
static C_char C_TLS li431[] C_aligned={C_lihdr(0,0,29),40,102,95,50,56,57,54,56,32,97,52,57,52,52,52,57,52,56,32,97,52,57,52,51,52,57,52,57,41,0,0,0,0,0};
static C_char C_TLS li432[] C_aligned={C_lihdr(0,0,17),40,109,109,58,116,111,117,99,104,63,32,109,52,57,52,50,41,0};
static C_char C_TLS li433[] C_aligned={C_lihdr(0,0,59),40,102,95,50,57,48,48,50,32,97,53,48,54,48,53,48,54,51,32,97,53,48,53,57,53,48,54,52,32,97,53,48,53,56,53,48,54,53,32,97,53,48,53,55,53,48,54,54,32,97,53,48,53,54,53,48,54,55,41,0,0,0};
static C_char C_TLS li434[] C_aligned={C_lihdr(0,0,25),40,109,109,58,109,97,107,101,45,99,116,114,108,32,46,32,97,114,103,115,52,57,53,49,41,0};
static C_char C_TLS li435[] C_aligned={C_lihdr(0,0,29),40,102,95,50,57,55,49,54,32,97,53,48,55,54,53,48,56,48,32,97,53,48,55,53,53,48,56,49,41,0,0,0,0,0};
static C_char C_TLS li436[] C_aligned={C_lihdr(0,0,16),40,109,109,58,99,116,114,108,63,32,109,53,48,55,52,41};
static C_char C_TLS li437[] C_aligned={C_lihdr(0,0,59),40,102,95,50,57,55,52,55,32,97,53,49,53,53,53,49,53,56,32,97,53,49,53,52,53,49,53,57,32,97,53,49,53,51,53,49,54,48,32,97,53,49,53,50,53,49,54,49,32,97,53,49,53,49,53,49,54,50,41,0,0,0};
static C_char C_TLS li438[] C_aligned={C_lihdr(0,0,25),40,109,109,58,109,97,107,101,45,112,114,111,103,32,46,32,97,114,103,115,53,48,56,51,41,0};
static C_char C_TLS li439[] C_aligned={C_lihdr(0,0,29),40,102,95,51,48,49,56,54,32,97,53,49,55,48,53,49,55,52,32,97,53,49,54,57,53,49,55,53,41,0,0,0,0,0};
static C_char C_TLS li440[] C_aligned={C_lihdr(0,0,16),40,109,109,58,112,114,111,103,63,32,109,53,49,54,56,41};
static C_char C_TLS li441[] C_aligned={C_lihdr(0,0,59),40,102,95,51,48,50,49,55,32,97,53,50,52,57,53,50,53,50,32,97,53,50,52,56,53,50,53,51,32,97,53,50,52,55,53,50,53,52,32,97,53,50,52,54,53,50,53,53,32,97,53,50,52,53,53,50,53,54,41,0,0,0};
static C_char C_TLS li442[] C_aligned={C_lihdr(0,0,26),40,109,109,58,109,97,107,101,45,112,114,101,115,115,32,46,32,97,114,103,115,53,49,55,55,41,0,0};
static C_char C_TLS li443[] C_aligned={C_lihdr(0,0,29),40,102,95,51,48,54,53,54,32,97,53,50,54,52,53,50,54,56,32,97,53,50,54,51,53,50,54,57,41,0,0,0,0,0};
static C_char C_TLS li444[] C_aligned={C_lihdr(0,0,17),40,109,109,58,112,114,101,115,115,63,32,109,53,50,54,50,41,0};
static C_char C_TLS li445[] C_aligned={C_lihdr(0,0,59),40,102,95,51,48,54,56,55,32,97,53,51,52,51,53,51,52,54,32,97,53,51,52,50,53,51,52,55,32,97,53,51,52,49,53,51,52,56,32,97,53,51,52,48,53,51,52,57,32,97,53,51,51,57,53,51,53,48,41,0,0,0};
static C_char C_TLS li446[] C_aligned={C_lihdr(0,0,25),40,109,109,58,109,97,107,101,45,98,101,110,100,32,46,32,97,114,103,115,53,50,55,49,41,0};
static C_char C_TLS li447[] C_aligned={C_lihdr(0,0,19),40,102,95,51,49,49,52,56,32,97,53,51,54,54,53,51,55,48,41,0,0,0};
static C_char C_TLS li448[] C_aligned={C_lihdr(0,0,15),40,109,109,58,102,114,101,101,32,109,53,51,54,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li449[] C_aligned={C_lihdr(0,0,19),40,102,95,51,49,49,54,51,32,97,53,51,55,52,53,51,55,56,41,0,0,0};
static C_char C_TLS li450[] C_aligned={C_lihdr(0,0,15),40,109,109,58,99,111,112,121,32,109,53,51,55,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li451[] C_aligned={C_lihdr(0,0,19),40,102,95,51,49,49,55,56,32,97,53,51,56,50,53,51,56,54,41,0,0,0};
static C_char C_TLS li452[] C_aligned={C_lihdr(0,0,15),40,109,109,58,116,105,109,101,32,109,53,51,56,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li453[] C_aligned={C_lihdr(0,0,29),40,102,95,51,49,49,57,51,32,97,53,51,57,50,53,51,57,54,32,97,53,51,57,49,53,51,57,55,41,0,0,0,0,0};
static C_char C_TLS li454[] C_aligned={C_lihdr(0,0,26),40,109,109,58,116,105,109,101,45,115,101,116,33,32,109,53,51,56,57,32,116,53,51,57,48,41,0,0};
static C_char C_TLS li455[] C_aligned={C_lihdr(0,0,19),40,102,95,51,49,50,49,50,32,97,53,52,48,49,53,52,48,53,41,0,0,0};
static C_char C_TLS li456[] C_aligned={C_lihdr(0,0,15),40,109,109,58,99,104,97,110,32,109,53,52,48,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li457[] C_aligned={C_lihdr(0,0,29),40,102,95,51,49,50,50,55,32,97,53,52,49,48,53,52,49,52,32,97,53,52,48,57,53,52,49,53,41,0,0,0,0,0};
static C_char C_TLS li458[] C_aligned={C_lihdr(0,0,26),40,109,109,58,99,104,97,110,45,115,101,116,33,32,109,53,52,48,55,32,99,53,52,48,56,41,0,0};
static C_char C_TLS li459[] C_aligned={C_lihdr(0,0,29),40,102,95,51,49,50,52,54,32,97,53,52,50,48,53,52,50,52,32,97,53,52,49,57,53,52,50,53,41,0,0,0,0,0};
static C_char C_TLS li460[] C_aligned={C_lihdr(0,0,14),40,109,109,58,107,101,121,32,109,53,52,49,56,41,0,0,0,0,0,0};
static C_char C_TLS li461[] C_aligned={C_lihdr(0,0,39),40,102,95,51,49,50,54,53,32,97,53,52,51,49,53,52,51,53,32,97,53,52,51,48,53,52,51,54,32,97,53,52,50,57,53,52,51,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li462[] C_aligned={C_lihdr(0,0,25),40,109,109,58,107,101,121,45,115,101,116,33,32,109,53,52,50,55,32,107,53,52,50,56,41,0};
static C_char C_TLS li463[] C_aligned={C_lihdr(0,0,29),40,102,95,51,49,50,56,56,32,97,53,52,52,50,53,52,52,54,32,97,53,52,52,49,53,52,52,55,41,0,0,0,0,0};
static C_char C_TLS li464[] C_aligned={C_lihdr(0,0,14),40,109,109,58,118,101,108,32,109,53,52,52,48,41,0,0,0,0,0,0};
static C_char C_TLS li465[] C_aligned={C_lihdr(0,0,39),40,102,95,51,49,51,48,55,32,97,53,52,53,51,53,52,53,55,32,97,53,52,53,50,53,52,53,56,32,97,53,52,53,49,53,52,53,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li466[] C_aligned={C_lihdr(0,0,25),40,109,109,58,118,101,108,45,115,101,116,33,32,109,53,52,52,57,32,118,53,52,53,48,41,0};
static C_char C_TLS li467[] C_aligned={C_lihdr(0,0,29),40,102,95,51,49,51,51,57,32,97,53,52,54,54,53,52,55,48,32,97,53,52,54,53,53,52,55,49,41,0,0,0,0,0};
static C_char C_TLS li468[] C_aligned={C_lihdr(0,0,29),40,102,95,51,49,51,53,53,32,97,53,52,55,52,53,52,55,56,32,97,53,52,55,51,53,52,55,57,41,0,0,0,0,0};
static C_char C_TLS li469[] C_aligned={C_lihdr(0,0,14),40,109,109,58,118,97,108,32,109,53,52,54,50,41,0,0,0,0,0,0};
static C_char C_TLS li470[] C_aligned={C_lihdr(0,0,39),40,102,95,51,49,51,56,54,32,97,53,52,56,55,53,52,57,49,32,97,53,52,56,54,53,52,57,50,32,97,53,52,56,53,53,52,57,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li471[] C_aligned={C_lihdr(0,0,39),40,102,95,51,49,52,48,54,32,97,53,52,57,55,53,53,48,49,32,97,53,52,57,54,53,53,48,50,32,97,53,52,57,53,53,53,48,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li472[] C_aligned={C_lihdr(0,0,25),40,109,109,58,118,97,108,45,115,101,116,33,32,109,53,52,56,49,32,118,53,52,56,50,41,0};
static C_char C_TLS li473[] C_aligned={C_lihdr(0,0,29),40,102,95,51,49,52,51,50,32,97,53,53,48,56,53,53,49,50,32,97,53,53,48,55,53,53,49,51,41,0,0,0,0,0};
static C_char C_TLS li474[] C_aligned={C_lihdr(0,0,14),40,109,109,58,110,117,109,32,109,53,53,48,54,41,0,0,0,0,0,0};
static C_char C_TLS li475[] C_aligned={C_lihdr(0,0,39),40,102,95,51,49,52,53,49,32,97,53,53,49,57,53,53,50,51,32,97,53,53,49,56,53,53,50,52,32,97,53,53,49,55,53,53,50,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li476[] C_aligned={C_lihdr(0,0,25),40,109,109,58,110,117,109,45,115,101,116,33,32,109,53,53,49,53,32,118,53,53,49,54,41,0};
static C_char C_TLS li477[] C_aligned={C_lihdr(0,0,59),40,102,95,51,49,52,55,52,32,97,53,53,51,55,53,53,52,48,32,97,53,53,51,54,53,53,52,49,32,97,53,53,51,53,53,53,52,50,32,97,53,53,51,52,53,53,52,51,32,97,53,53,51,51,53,53,52,52,41,0,0,0};
static C_char C_TLS li478[] C_aligned={C_lihdr(0,0,51),40,109,112,58,110,111,116,101,32,116,105,109,101,53,53,50,56,32,100,117,114,53,53,50,57,32,107,101,121,53,53,51,48,32,97,109,112,53,53,51,49,32,99,104,97,110,53,53,51,50,41,0,0,0};
static C_char C_TLS li479[] C_aligned={C_lihdr(0,0,59),40,102,95,51,49,53,48,50,32,97,53,53,53,52,53,53,53,55,32,97,53,53,53,51,53,53,53,56,32,97,53,53,53,50,53,53,53,57,32,97,53,53,53,49,53,53,54,48,32,97,53,53,53,48,53,53,54,49,41,0,0,0};
static C_char C_TLS li480[] C_aligned={C_lihdr(0,0,51),40,109,112,58,109,105,100,105,32,116,105,109,101,53,53,52,53,32,100,117,114,53,53,52,54,32,107,101,121,53,53,52,55,32,97,109,112,53,53,52,56,32,99,104,97,110,53,53,52,57,41,0,0,0};
static C_char C_TLS li481[] C_aligned={C_lihdr(0,0,59),40,102,95,51,49,53,51,48,32,97,53,53,54,57,53,53,55,50,32,97,53,53,54,56,53,53,55,51,32,97,53,53,54,55,53,53,55,52,32,97,53,53,54,54,53,53,55,53,32,97,53,53,54,53,53,53,55,54,41,0,0,0};
static C_char C_TLS li482[] C_aligned={C_lihdr(0,0,34),40,109,112,58,111,102,102,32,116,105,109,101,53,53,54,50,32,107,101,121,53,53,54,51,32,99,104,97,110,53,53,54,52,41,0,0};
static C_char C_TLS li483[] C_aligned={C_lihdr(0,0,59),40,102,95,51,49,53,53,56,32,97,53,53,56,53,53,53,56,56,32,97,53,53,56,52,53,53,56,57,32,97,53,53,56,51,53,53,57,48,32,97,53,53,56,50,53,53,57,49,32,97,53,53,56,49,53,53,57,50,41,0,0,0};
static C_char C_TLS li484[] C_aligned={C_lihdr(0,0,41),40,109,112,58,111,110,32,116,105,109,101,53,53,55,55,32,107,101,121,53,53,55,56,32,118,101,108,53,53,55,57,32,99,104,97,110,53,53,56,48,41,0};
static C_char C_TLS li485[] C_aligned={C_lihdr(0,0,59),40,102,95,51,49,53,56,54,32,97,53,54,48,49,53,54,48,52,32,97,53,54,48,48,53,54,48,53,32,97,53,53,57,57,53,54,48,54,32,97,53,53,57,56,53,54,48,55,32,97,53,53,57,55,53,54,48,56,41,0,0,0};
static C_char C_TLS li486[] C_aligned={C_lihdr(0,0,44),40,109,112,58,116,111,117,99,104,32,116,105,109,101,53,53,57,51,32,107,101,121,53,53,57,52,32,118,97,108,53,53,57,53,32,99,104,97,110,53,53,57,54,41,0,0,0,0};
static C_char C_TLS li487[] C_aligned={C_lihdr(0,0,59),40,102,95,51,49,54,49,52,32,97,53,54,49,55,53,54,50,48,32,97,53,54,49,54,53,54,50,49,32,97,53,54,49,53,53,54,50,50,32,97,53,54,49,52,53,54,50,51,32,97,53,54,49,51,53,54,50,52,41,0,0,0};
static C_char C_TLS li488[] C_aligned={C_lihdr(0,0,43),40,109,112,58,99,116,114,108,32,116,105,109,101,53,54,48,57,32,110,117,109,53,54,49,48,32,118,97,108,53,54,49,49,32,99,104,97,110,53,54,49,50,41,0,0,0};
static C_char C_TLS li489[] C_aligned={C_lihdr(0,0,59),40,102,95,51,49,54,52,50,32,97,53,54,51,50,53,54,51,53,32,97,53,54,51,49,53,54,51,54,32,97,53,54,51,48,53,54,51,55,32,97,53,54,50,57,53,54,51,56,32,97,53,54,50,56,53,54,51,57,41,0,0,0};
static C_char C_TLS li490[] C_aligned={C_lihdr(0,0,35),40,109,112,58,112,114,111,103,32,116,105,109,101,53,54,50,53,32,118,97,108,53,54,50,54,32,99,104,97,110,53,54,50,55,41,0,0,0};
static C_char C_TLS li491[] C_aligned={C_lihdr(0,0,59),40,102,95,51,49,54,55,48,32,97,53,54,52,55,53,54,53,48,32,97,53,54,52,54,53,54,53,49,32,97,53,54,52,53,53,54,53,50,32,97,53,54,52,52,53,54,53,51,32,97,53,54,52,51,53,54,53,52,41,0,0,0};
static C_char C_TLS li492[] C_aligned={C_lihdr(0,0,36),40,109,112,58,112,114,101,115,115,32,116,105,109,101,53,54,52,48,32,118,97,108,53,54,52,49,32,99,104,97,110,53,54,52,50,41,0,0,0,0};
static C_char C_TLS li493[] C_aligned={C_lihdr(0,0,59),40,102,95,51,49,54,57,56,32,97,53,54,54,50,53,54,54,53,32,97,53,54,54,49,53,54,54,54,32,97,53,54,54,48,53,54,54,55,32,97,53,54,53,57,53,54,54,56,32,97,53,54,53,56,53,54,54,57,41,0,0,0};
static C_char C_TLS li494[] C_aligned={C_lihdr(0,0,35),40,109,112,58,98,101,110,100,32,116,105,109,101,53,54,53,53,32,118,97,108,53,54,53,54,32,99,104,97,110,53,54,53,55,41,0,0,0};
static C_char C_TLS li495[] C_aligned={C_lihdr(0,0,19),40,102,95,51,49,55,50,54,32,97,53,54,55,49,53,54,55,53,41,0,0,0};
static C_char C_TLS li496[] C_aligned={C_lihdr(0,0,15),40,109,112,58,109,109,32,112,116,114,53,54,55,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li497[] C_aligned={C_lihdr(0,0,17),40,97,51,49,55,53,57,32,37,101,114,114,53,54,56,52,41,0};
static C_char C_TLS li498[] C_aligned={C_lihdr(0,0,8),40,97,51,49,55,55,57,41};
static C_char C_TLS li499[] C_aligned={C_lihdr(0,0,18),40,97,51,49,55,53,51,32,37,99,111,110,116,53,54,56,51,41,0,0};
static C_char C_TLS li500[] C_aligned={C_lihdr(0,0,17),40,97,51,49,55,52,55,32,37,109,115,103,53,54,56,50,41,0};
static C_char C_TLS li501[] C_aligned={C_lihdr(0,0,19),40,102,95,51,49,55,56,53,32,97,53,54,55,56,53,54,56,49,41,0,0,0};
static C_char C_TLS li502[] C_aligned={C_lihdr(0,0,19),40,102,95,51,49,55,57,48,32,97,53,54,56,55,53,54,57,48,41,0,0,0};
static C_char C_TLS li503[] C_aligned={C_lihdr(0,0,21),40,109,112,58,105,110,104,111,111,107,32,37,104,111,111,107,53,54,55,55,41,0,0,0,0,0};
static C_char C_TLS li504[] C_aligned={C_lihdr(0,0,39),40,102,95,51,49,56,52,55,32,97,53,55,52,51,53,55,52,54,32,97,53,55,52,50,53,55,52,55,32,97,53,55,52,49,53,55,52,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li505[] C_aligned={C_lihdr(0,0,17),40,99,115,58,105,32,46,32,97,114,103,115,53,55,52,48,41,0};
static C_char C_TLS li506[] C_aligned={C_lihdr(0,0,39),40,102,95,51,49,57,48,52,32,97,53,55,53,52,53,55,53,55,32,97,53,55,53,51,53,55,53,56,32,97,53,55,53,50,53,55,53,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li507[] C_aligned={C_lihdr(0,0,17),40,99,115,58,102,32,46,32,97,114,103,115,53,55,53,49,41,0};
static C_char C_TLS li508[] C_aligned={C_lihdr(0,0,9),40,102,95,51,49,57,52,53,41,0};
static C_char C_TLS li509[] C_aligned={C_lihdr(0,0,10),40,99,115,58,99,108,101,97,114,41,0,0};
static C_char C_TLS li510[] C_aligned={C_lihdr(0,0,14),40,100,111,53,55,56,52,32,120,53,55,56,54,41,0,0,0,0,0,0};
static C_char C_TLS li511[] C_aligned={C_lihdr(0,0,26),40,100,111,53,55,55,48,32,101,53,55,56,49,32,118,53,55,56,50,32,121,53,55,56,51,41,0,0};
static C_char C_TLS li512[] C_aligned={C_lihdr(0,0,18),40,99,109,45,108,111,103,111,32,118,101,114,115,53,55,54,57,41,0,0};
static C_char C_TLS li513[] C_aligned={C_lihdr(0,0,25),40,112,114,105,110,116,45,109,101,115,115,97,103,101,32,97,53,55,57,53,53,55,57,57,41,0};
static C_char C_TLS li514[] C_aligned={C_lihdr(0,0,23),40,112,114,105,110,116,45,101,114,114,111,114,32,97,53,56,48,49,53,56,48,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li515[] C_aligned={C_lihdr(0,0,27),40,99,117,114,114,101,110,116,45,116,105,109,101,45,109,105,108,108,105,115,101,99,111,110,100,115,41,0,0,0};
static C_char C_TLS li516[] C_aligned={C_lihdr(0,0,22),40,99,117,114,114,101,110,116,45,116,105,109,101,45,115,101,99,111,110,100,115,41,0,0,0,0,0,0};
static C_char C_TLS li517[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li518[] C_aligned={C_lihdr(0,0,43),40,115,99,104,101,100,117,108,101,114,45,115,101,116,45,116,105,109,101,45,109,105,108,108,105,115,101,99,111,110,100,115,32,97,53,56,49,55,53,56,50,48,41,0,0,0};
static C_char C_TLS li519[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li520[] C_aligned={C_lihdr(0,0,48),40,115,99,104,101,100,117,108,101,114,45,115,112,114,111,117,116,32,97,53,56,50,53,53,56,50,56,32,97,53,56,50,52,53,56,50,57,32,97,53,56,50,51,53,56,51,48,41};
static C_char C_TLS li521[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li522[] C_aligned={C_lihdr(0,0,26),40,115,99,104,101,100,117,108,101,114,45,115,116,111,112,32,97,53,56,52,53,53,56,52,56,41,0,0};
static C_char C_TLS li523[] C_aligned={C_lihdr(0,0,19),40,102,95,51,50,50,55,48,32,97,53,56,53,54,53,56,54,48,41,0,0,0};
static C_char C_TLS li524[] C_aligned={C_lihdr(0,0,24),40,108,111,97,100,45,115,97,108,45,102,105,108,101,32,102,105,108,101,53,56,53,53,41};
static C_char C_TLS li525[] C_aligned={C_lihdr(0,0,11),40,110,101,120,116,115,116,97,114,116,41,0,0,0};
static C_char C_TLS li526[] C_aligned={C_lihdr(0,0,8),40,110,101,120,116,105,100,41};
static C_char C_TLS li527[] C_aligned={C_lihdr(0,0,14),40,100,111,53,56,56,48,32,112,53,56,56,50,41,0,0,0,0,0,0};
static C_char C_TLS li528[] C_aligned={C_lihdr(0,0,27),40,98,111,100,121,53,56,54,54,32,115,116,97,114,116,53,56,55,50,32,105,100,53,56,55,51,41,0,0,0};
static C_char C_TLS li529[] C_aligned={C_lihdr(0,0,27),40,100,101,102,45,105,100,53,56,54,57,32,37,115,116,97,114,116,53,56,54,52,53,56,56,56,41,0,0,0};
static C_char C_TLS li530[] C_aligned={C_lihdr(0,0,15),40,100,101,102,45,115,116,97,114,116,53,56,54,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li531[] C_aligned={C_lihdr(0,0,28),40,115,112,114,111,117,116,32,112,114,111,99,53,56,54,50,32,46,32,97,114,103,115,53,56,54,51,41,0,0,0,0};
static C_char C_TLS li532[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li533[] C_aligned={C_lihdr(0,0,23),40,116,105,109,101,45,102,111,114,109,97,116,32,46,32,97,114,103,53,56,57,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li534[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li535[] C_aligned={C_lihdr(0,0,7),40,112,97,117,115,101,41,0,0,0,0,0,0,0};
static C_char C_TLS li536[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li537[] C_aligned={C_lihdr(0,0,9),40,112,97,117,115,101,100,63,41,0};
static C_char C_TLS li538[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li539[] C_aligned={C_lihdr(0,0,6),40,99,111,110,116,41,0,0,0,0,0,0};
static C_char C_TLS li540[] C_aligned={C_lihdr(0,0,17),40,100,111,53,57,48,57,32,116,97,105,108,53,57,49,49,41,0};
static C_char C_TLS li541[] C_aligned={C_lihdr(0,0,19),40,115,116,111,112,32,46,32,112,114,111,99,105,100,53,57,48,56,41,0,0,0};
static C_char C_TLS li542[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li543[] C_aligned={C_lihdr(0,0,6),40,104,117,115,104,41,0,0,0,0,0,0};
static C_char C_TLS li544[] C_aligned={C_lihdr(0,0,47),40,114,117,110,45,119,104,105,108,101,45,117,110,116,105,108,32,102,111,114,109,115,53,57,49,54,32,99,108,97,117,115,101,115,53,57,49,55,32,111,112,115,53,57,49,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li545[] C_aligned={C_lihdr(0,0,44),40,112,114,111,99,101,115,115,45,99,111,100,101,45,116,101,114,109,105,110,97,116,101,115,63,32,99,111,100,101,53,57,52,54,32,115,116,111,112,53,57,52,55,41,0,0,0,0};
static C_char C_TLS li546[] C_aligned={C_lihdr(0,0,31),40,97,51,50,57,56,51,32,102,111,114,109,97,108,115,53,57,54,55,32,46,32,98,111,100,121,53,57,54,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li547[] C_aligned={C_lihdr(0,0,17),40,97,51,51,48,49,50,32,97,114,103,115,53,57,54,54,41,0};
static C_char C_TLS li548[] C_aligned={C_lihdr(0,0,16),40,100,111,53,57,51,57,32,111,112,115,53,57,52,49,41};
static C_char C_TLS li549[] C_aligned={C_lihdr(0,0,17),40,97,51,51,48,56,49,32,97,114,103,115,52,53,51,54,41,0};
static C_char C_TLS li550[] C_aligned={C_lihdr(0,0,16),40,97,51,51,50,50,51,32,115,121,109,51,56,52,57,41};
static C_char C_TLS li551[] C_aligned={C_lihdr(0,0,16),40,97,51,51,50,50,54,32,115,121,109,51,56,52,55,41};
static C_char C_TLS li552[] C_aligned={C_lihdr(0,0,24),40,97,51,51,50,53,53,32,118,97,108,51,56,52,53,32,115,121,109,51,56,52,54,41};
static C_char C_TLS li553[] C_aligned={C_lihdr(0,0,17),40,97,51,51,50,54,57,32,97,114,103,115,51,56,52,52,41,0};
static C_char C_TLS li554[] C_aligned={C_lihdr(0,0,26),40,97,51,51,50,56,51,32,97,114,103,115,51,54,53,48,32,101,114,114,102,51,54,53,49,41,0,0};
static C_char C_TLS li555[] C_aligned={C_lihdr(0,0,35),40,97,51,51,50,57,55,32,117,110,105,116,51,54,53,50,32,105,110,102,111,51,54,53,51,32,101,114,114,102,51,54,53,52,41,0,0,0};
static C_char C_TLS li556[] C_aligned={C_lihdr(0,0,26),40,97,51,51,52,48,51,32,97,114,103,115,51,53,57,57,32,101,114,114,102,51,54,48,48,41,0,0};
static C_char C_TLS li557[] C_aligned={C_lihdr(0,0,17),40,100,111,51,54,49,49,32,114,101,115,116,51,54,49,51,41,0};
static C_char C_TLS li558[] C_aligned={C_lihdr(0,0,26),40,100,111,51,54,51,55,32,97,114,103,115,51,54,51,57,32,116,97,105,108,51,54,52,48,41,0,0};
static C_char C_TLS li559[] C_aligned={C_lihdr(0,0,35),40,97,51,51,52,52,50,32,117,110,105,116,51,54,48,52,32,105,110,102,111,51,54,48,53,32,101,114,114,102,51,54,48,54,41,0,0,0};
static C_char C_TLS li560[] C_aligned={C_lihdr(0,0,26),40,97,51,51,56,54,48,32,97,114,103,115,51,53,57,50,32,101,114,114,102,51,53,57,51,41,0,0};
static C_char C_TLS li561[] C_aligned={C_lihdr(0,0,26),40,97,51,52,48,48,53,32,97,114,103,115,51,53,55,56,32,101,114,114,102,51,53,55,57,41,0,0};
static C_char C_TLS li562[] C_aligned={C_lihdr(0,0,17),40,100,111,51,53,53,53,32,116,97,105,108,51,53,53,55,41,0};
static C_char C_TLS li563[] C_aligned={C_lihdr(0,0,17),40,100,111,51,53,53,48,32,116,97,105,108,51,53,53,50,41,0};
static C_char C_TLS li564[] C_aligned={C_lihdr(0,0,20),40,100,111,51,53,51,57,32,99,108,97,117,115,101,115,51,53,52,49,41,0,0,0,0};
static C_char C_TLS li565[] C_aligned={C_lihdr(0,0,17),40,100,111,51,53,51,54,32,116,97,105,108,51,53,51,56,41,0};
static C_char C_TLS li566[] C_aligned={C_lihdr(0,0,35),40,97,51,52,48,53,49,32,117,110,105,116,51,53,56,56,32,105,110,102,111,51,53,56,57,32,101,114,114,102,51,53,57,48,41,0,0,0};
static C_char C_TLS li567[] C_aligned={C_lihdr(0,0,26),40,97,51,52,53,48,53,32,97,114,103,115,51,52,53,50,32,101,114,114,102,51,52,53,51,41,0,0};
static C_char C_TLS li568[] C_aligned={C_lihdr(0,0,35),40,97,51,52,53,55,51,32,117,110,105,116,51,52,54,52,32,105,110,102,111,51,52,54,53,32,101,114,114,102,51,52,54,54,41,0,0,0};
static C_char C_TLS li569[] C_aligned={C_lihdr(0,0,26),40,97,51,52,55,48,50,32,97,114,103,115,51,52,52,48,32,101,114,114,102,51,52,52,49,41,0,0};
static C_char C_TLS li570[] C_aligned={C_lihdr(0,0,35),40,97,51,52,55,50,56,32,117,110,105,116,51,52,52,53,32,105,110,102,111,51,52,52,54,32,101,114,114,102,51,52,52,55,41,0,0,0};
static C_char C_TLS li571[] C_aligned={C_lihdr(0,0,26),40,97,51,52,56,49,54,32,97,114,103,115,51,52,49,56,32,101,114,114,102,51,52,49,57,41,0,0};
static C_char C_TLS li572[] C_aligned={C_lihdr(0,0,17),40,100,111,51,52,50,54,32,105,116,101,114,51,52,50,56,41,0};
static C_char C_TLS li573[] C_aligned={C_lihdr(0,0,35),40,97,51,52,56,53,57,32,117,110,105,116,51,52,50,48,32,105,110,102,111,51,52,50,49,32,101,114,114,102,51,52,50,50,41,0,0,0};
static C_char C_TLS li574[] C_aligned={C_lihdr(0,0,26),40,97,51,53,48,57,54,32,97,114,103,115,51,52,49,53,32,101,114,114,102,51,52,49,54,41,0,0};
static C_char C_TLS li575[] C_aligned={C_lihdr(0,0,26),40,97,51,53,49,56,50,32,97,114,103,115,51,52,48,55,32,101,114,114,102,51,52,48,56,41,0,0};
static C_char C_TLS li576[] C_aligned={C_lihdr(0,0,14),40,97,51,53,50,51,52,32,101,51,52,49,51,41,0,0,0,0,0,0};
static C_char C_TLS li577[] C_aligned={C_lihdr(0,0,35),40,97,51,53,50,50,53,32,117,110,105,116,51,52,48,57,32,105,110,102,111,51,52,49,48,32,101,114,114,102,51,52,49,49,41,0,0,0};
static C_char C_TLS li578[] C_aligned={C_lihdr(0,0,26),40,97,51,53,50,56,52,32,97,114,103,115,51,52,48,48,32,101,114,114,102,51,52,48,49,41,0,0};
static C_char C_TLS li579[] C_aligned={C_lihdr(0,0,14),40,97,51,53,51,50,53,32,101,51,52,48,53,41,0,0,0,0,0,0};
static C_char C_TLS li580[] C_aligned={C_lihdr(0,0,35),40,97,51,53,51,49,57,32,117,110,105,116,51,52,48,50,32,105,110,102,111,51,52,48,51,32,101,114,114,102,51,52,48,52,41,0,0,0};
static C_char C_TLS li581[] C_aligned={C_lihdr(0,0,35),40,97,51,53,51,55,57,32,117,110,105,116,51,51,57,51,32,105,110,102,111,51,51,57,52,32,101,114,114,102,51,51,57,53,41,0,0,0};
static C_char C_TLS li582[] C_aligned={C_lihdr(0,0,35),40,97,51,53,52,52,48,32,117,110,105,116,51,51,56,55,32,105,110,102,111,51,51,56,56,32,101,114,114,102,51,51,56,57,41,0,0,0};
static C_char C_TLS li583[] C_aligned={C_lihdr(0,0,26),40,97,51,53,52,57,52,32,97,114,103,115,51,51,56,49,32,101,114,114,102,51,51,56,50,41,0,0};
static C_char C_TLS li584[] C_aligned={C_lihdr(0,0,35),40,97,51,53,53,50,52,32,117,110,105,116,51,51,56,51,32,105,110,102,111,51,51,56,52,32,101,114,114,102,51,51,56,53,41,0,0,0};
static C_char C_TLS li585[] C_aligned={C_lihdr(0,0,26),40,97,51,53,55,52,51,32,97,114,103,115,51,51,55,52,32,101,114,114,102,51,51,55,53,41,0,0};
static C_char C_TLS li586[] C_aligned={C_lihdr(0,0,26),40,97,51,53,55,54,57,32,97,114,103,115,51,51,54,49,32,101,114,114,102,51,51,54,50,41,0,0};
static C_char C_TLS li587[] C_aligned={C_lihdr(0,0,27),40,97,51,53,56,54,52,32,115,116,114,51,51,55,49,32,46,32,97,114,103,115,51,51,55,50,41,0,0,0};
static C_char C_TLS li588[] C_aligned={C_lihdr(0,0,35),40,97,51,53,56,52,52,32,117,110,105,116,51,51,54,54,32,105,110,102,111,51,51,54,55,32,101,114,114,102,51,51,54,56,41,0,0,0};
static C_char C_TLS li589[] C_aligned={C_lihdr(0,0,26),40,97,51,53,57,56,50,32,97,114,103,115,51,51,53,52,32,101,114,114,102,51,51,53,53,41,0,0};
static C_char C_TLS li590[] C_aligned={C_lihdr(0,0,35),40,97,51,54,48,48,52,32,117,110,105,116,51,51,53,54,32,105,110,102,111,51,51,53,55,32,101,114,114,102,51,51,53,56,41,0,0,0};
static C_char C_TLS li591[] C_aligned={C_lihdr(0,0,26),40,97,51,54,48,53,55,32,97,114,103,115,51,51,52,48,32,101,114,114,102,51,51,52,49,41,0,0};
static C_char C_TLS li592[] C_aligned={C_lihdr(0,0,17),40,100,111,51,51,52,55,32,97,114,103,115,51,51,52,57,41,0};
static C_char C_TLS li593[] C_aligned={C_lihdr(0,0,35),40,97,51,54,48,55,57,32,117,110,105,116,51,51,52,50,32,105,110,102,111,51,51,52,51,32,101,114,114,102,51,51,52,52,41,0,0,0};
static C_char C_TLS li594[] C_aligned={C_lihdr(0,0,26),40,97,51,54,50,49,49,32,97,114,103,115,51,51,51,51,32,101,114,114,102,51,51,51,52,41,0,0};
static C_char C_TLS li595[] C_aligned={C_lihdr(0,0,35),40,97,51,54,50,51,55,32,117,110,105,116,51,51,51,53,32,105,110,102,111,51,51,51,54,32,101,114,114,102,51,51,51,55,41,0,0,0};
static C_char C_TLS li596[] C_aligned={C_lihdr(0,0,26),40,97,51,54,51,52,55,32,97,114,103,115,51,51,50,57,32,101,114,114,102,51,51,51,48,41,0,0};
static C_char C_TLS li597[] C_aligned={C_lihdr(0,0,26),40,97,51,54,53,48,51,32,97,114,103,115,51,50,57,50,32,101,114,114,102,51,50,57,51,41,0,0};
static C_char C_TLS li598[] C_aligned={C_lihdr(0,0,35),40,97,51,54,53,50,49,32,117,110,105,116,51,50,57,52,32,105,110,102,111,51,50,57,53,32,101,114,114,102,51,50,57,54,41,0,0,0};
static C_char C_TLS li599[] C_aligned={C_lihdr(0,0,26),40,97,51,54,53,55,52,32,97,114,103,115,51,50,56,54,32,101,114,114,102,51,50,56,55,41,0,0};
static C_char C_TLS li600[] C_aligned={C_lihdr(0,0,26),40,97,51,54,55,50,54,32,97,114,103,115,51,50,56,51,32,101,114,114,102,51,50,56,52,41,0,0};
static C_char C_TLS li601[] C_aligned={C_lihdr(0,0,26),40,97,51,54,56,54,53,32,97,114,103,115,51,50,56,48,32,101,114,114,102,51,50,56,49,41,0,0};
static C_char C_TLS li602[] C_aligned={C_lihdr(0,0,26),40,97,51,54,57,56,53,32,97,114,103,115,51,50,53,57,32,101,114,114,102,51,50,54,48,41,0,0};
static C_char C_TLS li603[] C_aligned={C_lihdr(0,0,35),40,97,51,55,48,49,54,32,117,110,105,116,51,50,54,50,32,105,110,102,111,51,50,54,51,32,101,114,114,102,51,50,54,52,41,0,0,0};
static C_char C_TLS li604[] C_aligned={C_lihdr(0,0,26),40,97,51,55,49,48,56,32,97,114,103,115,51,50,53,51,32,101,114,114,102,51,50,53,52,41,0,0};
static C_char C_TLS li605[] C_aligned={C_lihdr(0,0,35),40,97,51,55,49,50,54,32,117,110,105,116,51,50,53,53,32,105,110,102,111,51,50,53,54,32,101,114,114,102,51,50,53,55,41,0,0,0};
static C_char C_TLS li606[] C_aligned={C_lihdr(0,0,35),40,97,51,55,50,48,48,32,117,110,105,116,51,50,52,50,32,105,110,102,111,51,50,52,51,32,101,114,114,102,51,50,52,52,41,0,0,0};
static C_char C_TLS li607[] C_aligned={C_lihdr(0,0,26),40,97,51,55,50,57,54,32,97,114,103,115,51,50,51,48,32,101,114,114,102,51,50,51,49,41,0,0};
static C_char C_TLS li608[] C_aligned={C_lihdr(0,0,35),40,97,51,55,51,48,54,32,117,110,105,116,51,50,51,50,32,105,110,102,111,51,50,51,51,32,101,114,114,102,51,50,51,52,41,0,0,0};
static C_char C_TLS li609[] C_aligned={C_lihdr(0,0,20),40,97,51,55,52,56,50,32,117,50,56,56,48,32,112,50,56,56,49,41,0,0,0,0};
static C_char C_TLS li610[] C_aligned={C_lihdr(0,0,20),40,97,51,55,53,48,56,32,101,50,56,53,50,32,112,50,56,53,51,41,0,0,0,0};
static C_char C_TLS li611[] C_aligned={C_lihdr(0,0,12),40,112,112,97,116,32,112,50,56,49,53,41,0,0,0,0};
static C_char C_TLS li612[] C_aligned={C_lihdr(0,0,35),40,97,51,55,53,50,50,32,116,121,112,50,56,49,49,32,112,97,116,50,56,49,50,32,46,32,97,114,103,115,50,56,49,51,41,0,0,0};
static C_char C_TLS li613[] C_aligned={C_lihdr(0,0,20),40,97,51,55,54,50,53,32,114,50,56,48,56,32,112,50,56,48,57,41,0,0,0,0};
static C_char C_TLS li614[] C_aligned={C_lihdr(0,0,20),40,97,51,55,54,51,53,32,116,50,55,53,57,32,112,50,55,54,48,41,0,0,0,0};
static C_char C_TLS li615[] C_aligned={C_lihdr(0,0,23),40,97,51,55,54,52,57,32,111,98,106,57,51,52,32,112,111,114,116,57,51,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li616[] C_aligned={C_lihdr(0,0,71),40,100,111,54,57,55,32,100,54,57,57,32,107,55,48,48,32,112,55,48,49,32,107,60,55,48,50,32,107,62,55,48,51,32,102,55,48,52,32,102,62,55,48,53,32,102,60,55,48,54,32,111,55,48,55,32,120,55,48,56,32,110,55,48,57,32,101,55,49,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li617[] C_aligned={C_lihdr(0,0,14),40,100,111,54,57,49,32,107,101,121,54,57,51,41,0,0,0,0,0,0};
static C_char C_TLS li618[] C_aligned={C_lihdr(0,0,24),40,97,51,55,56,55,53,32,109,101,115,115,56,56,32,46,32,100,97,116,97,56,57,41};
static C_char C_TLS li619[] C_aligned={C_lihdr(0,0,22),40,97,51,55,56,56,49,32,102,117,110,99,51,56,32,105,110,102,111,51,57,41,0,0,0,0,0,0};
static C_char C_TLS li620[] C_aligned={C_lihdr(0,0,24),40,97,51,55,57,51,51,32,115,112,101,99,51,54,32,46,32,98,111,100,121,51,55,41};
static C_char C_TLS li621[] C_aligned={C_lihdr(0,0,10),40,116,111,112,108,101,118,101,108,41,0,0};


/* from k32273 */
static C_word C_fcall stub5857(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub5857(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
load_sal_file(t0);
return C_r;}

/* from k32258 in hush in k31953 in k31950 in k31947 in k31822 in k31819 in k31816 in k31813 in k31810 in k31807 in k31804 in k31801 in k31798 in k31795 in k31792 in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
C_noret_decl(stub5851)
static void C_ccall stub5851(C_word C_c,C_word C_self,C_word C_k,C_word C_buf) C_noret;
static void C_ccall stub5851(C_word C_c,C_word C_self,C_word C_k,C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int C_level=C_save_callback_continuation(&C_a,C_k);
scheduler_hush();
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from k32252 */
C_noret_decl(stub5846)
static void C_ccall stub5846(C_word C_c,C_word C_self,C_word C_k,C_word C_buf,C_word C_a0) C_noret;
static void C_ccall stub5846(C_word C_c,C_word C_self,C_word C_k,C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
int C_level=C_save_callback_continuation(&C_a,C_k);
scheduler_stop(t0);
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from k32236 in cont in k31953 in k31950 in k31947 in k31822 in k31819 in k31816 in k31813 in k31810 in k31807 in k31804 in k31801 in k31798 in k31795 in k31792 in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
C_noret_decl(stub5841)
static void C_ccall stub5841(C_word C_c,C_word C_self,C_word C_k,C_word C_buf) C_noret;
static void C_ccall stub5841(C_word C_c,C_word C_self,C_word C_k,C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int C_level=C_save_callback_continuation(&C_a,C_k);
scheduler_cont();
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from k32227 in pause in k31953 in k31950 in k31947 in k31822 in k31819 in k31816 in k31813 in k31810 in k31807 in k31804 in k31801 in k31798 in k31795 in k31792 in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
C_noret_decl(stub5837)
static void C_ccall stub5837(C_word C_c,C_word C_self,C_word C_k,C_word C_buf) C_noret;
static void C_ccall stub5837(C_word C_c,C_word C_self,C_word C_k,C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int C_level=C_save_callback_continuation(&C_a,C_k);
scheduler_pause();
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from k32218 in paused? in k31953 in k31950 in k31947 in k31822 in k31819 in k31816 in k31813 in k31810 in k31807 in k31804 in k31801 in k31798 in k31795 in k31792 in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
C_noret_decl(stub5833)
static void C_ccall stub5833(C_word C_c,C_word C_self,C_word C_k,C_word C_buf) C_noret;
static void C_ccall stub5833(C_word C_c,C_word C_self,C_word C_k,C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int C_level=C_save_callback_continuation(&C_a,C_k);
C_r=C_mk_bool(scheduler_is_paused());
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from k32212 */
C_noret_decl(stub5826)
static void C_ccall stub5826(C_word C_c,C_word C_self,C_word C_k,C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_noret;
static void C_ccall stub5826(C_word C_c,C_word C_self,C_word C_k,C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_word t0=(C_word )(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int C_level=C_save_callback_continuation(&C_a,C_k);
scheduler_sprout(t0,t1,t2);
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from k32192 in scheduler-set-time-milliseconds in k31953 in k31950 in k31947 in k31822 in k31819 in k31816 in k31813 in k31810 in k31807 in k31804 in k31801 in k31798 in k31795 in k31792 in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
C_noret_decl(stub5818)
static void C_ccall stub5818(C_word C_c,C_word C_self,C_word C_k,C_word C_buf,C_word C_a0) C_noret;
static void C_ccall stub5818(C_word C_c,C_word C_self,C_word C_k,C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_truep(C_a0);
int C_level=C_save_callback_continuation(&C_a,C_k);
scheduler_set_time_milliseconds(t0);
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from k32183 in time-format in k31953 in k31950 in k31947 in k31822 in k31819 in k31816 in k31813 in k31810 in k31807 in k31804 in k31801 in k31798 in k31795 in k31792 in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
C_noret_decl(stub5813)
static void C_ccall stub5813(C_word C_c,C_word C_self,C_word C_k,C_word C_buf) C_noret;
static void C_ccall stub5813(C_word C_c,C_word C_self,C_word C_k,C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int C_level=C_save_callback_continuation(&C_a,C_k);
C_r=C_mk_bool(scheduler_is_time_milliseconds());
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from current-time-seconds in k31953 in k31950 in k31947 in k31822 in k31819 in k31816 in k31813 in k31810 in k31807 in k31804 in k31801 in k31798 in k31795 in k31792 in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
#define return(x) C_cblock C_r = (C_flonum(&C_a,(x))); goto C_ret; C_cblockend
static C_word C_fcall stub5810(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub5810(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
 C_return( (Time::getMillisecondCounterHiRes() / 1000.0) );
C_ret:
#undef return

return C_r;}

/* from current-time-milliseconds in k31953 in k31950 in k31947 in k31822 in k31819 in k31816 in k31813 in k31810 in k31807 in k31804 in k31801 in k31798 in k31795 in k31792 in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
#define return(x) C_cblock C_r = (C_flonum(&C_a,(x))); goto C_ret; C_cblockend
static C_word C_fcall stub5807(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub5807(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
 C_return( Time::getMillisecondCounterHiRes());
C_ret:
#undef return

return C_r;}

/* from k32164 in print-error in k31953 in k31950 in k31947 in k31822 in k31819 in k31816 in k31813 in k31810 in k31807 in k31804 in k31801 in k31798 in k31795 in k31792 in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static C_word C_fcall stub5802(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub5802(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
print_error(t0);
return C_r;}

/* from k32150 in print-message in k31953 in k31950 in k31947 in k31822 in k31819 in k31816 in k31813 in k31810 in k31807 in k31804 in k31801 in k31798 in k31795 in k31792 in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static C_word C_fcall stub5796(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub5796(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
print_message(t0);
return C_r;}

/* from f_31945 in cs:clear in k31822 in k31819 in k31816 in k31813 in k31810 in k31807 in k31804 in k31801 in k31798 in k31795 in k31792 in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static C_word C_fcall stub5762(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub5762(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
cs_clear_score();
return C_r;}

/* from k31911 */
static C_word C_fcall stub5755(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub5755(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
int t1=(int )C_unfix(C_a1);
C_word t2=(C_word )(C_a2);
cs_send_score_event(t0,t1,t2);
return C_r;}

/* from k31854 */
static C_word C_fcall stub5744(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub5744(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
int t1=(int )C_unfix(C_a1);
C_word t2=(C_word )(C_a2);
cs_send_score_event(t0,t1,t2);
return C_r;}

/* from f_31790 in mp:inhook in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static C_word C_fcall stub5688(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub5688(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_word t0=(C_word )(C_a0);
set_input_hook(t0);
return C_r;}

/* from f_31785 in mp:inhook in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static C_word C_fcall stub5679(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub5679(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_word t0=(C_word )(C_a0);
set_input_hook(t0);
return C_r;}

/* from k31729 */
static C_word C_fcall stub5672(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub5672(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
mp_message(t0);
return C_r;}

/* from k31717 */
static C_word C_fcall stub5663(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5663(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_data(t0,t1,t2,t3,t4);
return C_r;}

/* from k31689 */
static C_word C_fcall stub5648(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5648(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_data(t0,t1,t2,t3,t4);
return C_r;}

/* from k31661 */
static C_word C_fcall stub5633(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5633(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_data(t0,t1,t2,t3,t4);
return C_r;}

/* from k31633 */
static C_word C_fcall stub5618(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5618(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_data(t0,t1,t2,t3,t4);
return C_r;}

/* from k31605 */
static C_word C_fcall stub5602(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5602(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_data(t0,t1,t2,t3,t4);
return C_r;}

/* from k31577 */
static C_word C_fcall stub5586(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5586(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_data(t0,t1,t2,t3,t4);
return C_r;}

/* from k31549 */
static C_word C_fcall stub5570(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5570(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_data(t0,t1,t2,t3,t4);
return C_r;}

/* from k31521 */
static C_word C_fcall stub5555(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5555(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
double t0=(double )C_c_double(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_note(t0,t1,t2,t3,t4);
return C_r;}

/* from k31493 */
static C_word C_fcall stub5538(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5538(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
double t0=(double )C_c_double(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_note(t0,t1,t2,t3,t4);
return C_r;}

/* from k31462 */
static C_word C_fcall stub5520(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub5520(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
int t2=(int )C_unfix(C_a2);
mm_set_data(t0,t1,t2);
return C_r;}

/* from k31439 */
static C_word C_fcall stub5509(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub5509(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_fix((C_word)mm_data(t0,t1));
return C_r;}

/* from k31417 */
static C_word C_fcall stub5498(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub5498(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
int t2=(int )C_unfix(C_a2);
mm_set_data(t0,t1,t2);
return C_r;}

/* from k31397 */
static C_word C_fcall stub5488(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub5488(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
int t2=(int )C_unfix(C_a2);
mm_set_data(t0,t1,t2);
return C_r;}

/* from k31362 */
static C_word C_fcall stub5475(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub5475(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_fix((C_word)mm_data(t0,t1));
return C_r;}

/* from k31346 */
static C_word C_fcall stub5467(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub5467(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_fix((C_word)mm_data(t0,t1));
return C_r;}

/* from k31318 */
static C_word C_fcall stub5454(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub5454(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
int t2=(int )C_unfix(C_a2);
mm_set_data(t0,t1,t2);
return C_r;}

/* from k31295 */
static C_word C_fcall stub5443(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub5443(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_fix((C_word)mm_data(t0,t1));
return C_r;}

/* from k31276 */
static C_word C_fcall stub5432(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub5432(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
int t2=(int )C_unfix(C_a2);
mm_set_data(t0,t1,t2);
return C_r;}

/* from k31253 */
static C_word C_fcall stub5421(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub5421(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_fix((C_word)mm_data(t0,t1));
return C_r;}

/* from k31234 */
static C_word C_fcall stub5411(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub5411(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
mm_set_chan(t0,t1);
return C_r;}

/* from k31215 */
static C_word C_fcall stub5402(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub5402(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
C_r=C_fix((C_word)mm_chan(t0));
return C_r;}

/* from k31200 */
static C_word C_fcall stub5393(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub5393(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
double t1=(double )C_c_double(C_a1);
mm_set_time(t0,t1);
return C_r;}

/* from k31181 */
static C_word C_fcall stub5383(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub5383(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
C_r=C_flonum(&C_a,mm_time(t0));
return C_r;}

/* from k31166 */
static C_word C_fcall stub5375(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub5375(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
C_r=C_mpointer_or_false(&C_a,(void*)mm_copy(t0));
return C_r;}

/* from k31151 */
static C_word C_fcall stub5367(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub5367(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
mm_free(t0);
return C_r;}

/* from k31133 */
static C_word C_fcall stub5359(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub5359(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_mk_bool(mm_is_type(t0,t1));
return C_r;}

/* from k30706 */
static C_word C_fcall stub5344(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5344(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
C_r=C_mpointer_or_false(&C_a,(void*)mm_make(t0,t1,t2,t3,t4));
return C_r;}

/* from k30663 */
static C_word C_fcall stub5265(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub5265(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_mk_bool(mm_is_type(t0,t1));
return C_r;}

/* from k30236 */
static C_word C_fcall stub5250(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5250(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
C_r=C_mpointer_or_false(&C_a,(void*)mm_make(t0,t1,t2,t3,t4));
return C_r;}

/* from k30193 */
static C_word C_fcall stub5171(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub5171(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_mk_bool(mm_is_type(t0,t1));
return C_r;}

/* from k29766 */
static C_word C_fcall stub5156(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5156(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
C_r=C_mpointer_or_false(&C_a,(void*)mm_make(t0,t1,t2,t3,t4));
return C_r;}

/* from k29723 */
static C_word C_fcall stub5077(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub5077(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_mk_bool(mm_is_type(t0,t1));
return C_r;}

/* from k29021 */
static C_word C_fcall stub5061(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5061(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
C_r=C_mpointer_or_false(&C_a,(void*)mm_make(t0,t1,t2,t3,t4));
return C_r;}

/* from k28975 */
static C_word C_fcall stub4945(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub4945(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_mk_bool(mm_is_type(t0,t1));
return C_r;}

/* from k28273 */
static C_word C_fcall stub4929(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub4929(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
C_r=C_mpointer_or_false(&C_a,(void*)mm_make(t0,t1,t2,t3,t4));
return C_r;}

/* from k28227 */
static C_word C_fcall stub4813(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub4813(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_mk_bool(mm_is_type(t0,t1));
return C_r;}

/* from k27800 */
static C_word C_fcall stub4798(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub4798(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
C_r=C_mpointer_or_false(&C_a,(void*)mm_make(t0,t1,t2,t3,t4));
return C_r;}

/* from k27757 */
static C_word C_fcall stub4719(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub4719(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_mk_bool(mm_is_type(t0,t1));
return C_r;}

/* from k27055 */
static C_word C_fcall stub4703(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub4703(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
C_r=C_mpointer_or_false(&C_a,(void*)mm_make(t0,t1,t2,t3,t4));
return C_r;}

/* from k7593 */
static C_word C_fcall stub375(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub375(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
C_r=C_flonum(&C_a,jn(t0,t1));
return C_r;}

/* from tb:ranbrown in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static C_word C_fcall stub368(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub368(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,Toolbox::ranbrown());
return C_r;}

/* from tb:ranpink in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static C_word C_fcall stub365(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub365(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,Toolbox::ranpink());
return C_r;}

/* from k7571 */
static C_word C_fcall stub362(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub362(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_fix((C_word)Toolbox::ranpoisson(t0));
return C_r;}

/* from tb:rancauchy in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static C_word C_fcall stub358(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub358(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,Toolbox::rancauchy());
return C_r;}

/* from k7561 */
static C_word C_fcall stub354(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub354(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_flonum(&C_a,Toolbox::rangamma(t0));
return C_r;}

/* from k7554 */
static C_word C_fcall stub348(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub348(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
C_r=C_flonum(&C_a,Toolbox::ranbeta(t0,t1));
return C_r;}

/* from k7543 */
static C_word C_fcall stub342(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub342(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_flonum(&C_a,Toolbox::ranexp(t0));
return C_r;}

/* from k7536 */
static C_word C_fcall stub336(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub336(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
C_r=C_flonum(&C_a,Toolbox::rangauss(t0,t1));
return C_r;}

/* from tb:ranmiddle in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static C_word C_fcall stub331(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub331(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,Toolbox::ranmiddle());
return C_r;}

/* from tb:ranhigh in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static C_word C_fcall stub328(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub328(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,Toolbox::ranhigh());
return C_r;}

/* from tb:ranlow in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static C_word C_fcall stub325(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub325(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,Toolbox::ranlow());
return C_r;}

/* from k7516 */
static C_word C_fcall stub320(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub320(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
C_r=C_flonum(&C_a,Toolbox::ran(t0,t1));
return C_r;}

/* from k7505 */
static C_word C_fcall stub314(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub314(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_fix((C_word)Toolbox::ran(t0,t1));
return C_r;}

/* from k7494 */
static C_word C_fcall stub308(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub308(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_flonum(&C_a,Toolbox::ran(t0));
return C_r;}

/* from k7487 */
static C_word C_fcall stub304(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub304(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
C_r=C_fix((C_word)Toolbox::ran(t0));
return C_r;}

/* from tb:ran-set! in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static C_word C_fcall stub300(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub300(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_s64 t0=(C_s64 )C_num_to_int64(C_a0);
Toolbox::ranstate_set(t0);
return C_r;}

/* from k7477 */
static C_word C_fcall stub295(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub295(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_flonum(&C_a,Toolbox::hertz_to_keynum(t0));
return C_r;}

/* from k7470 */
static C_word C_fcall stub291(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub291(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_fix((C_word)Toolbox::keynum_to_pc(t0));
return C_r;}

/* from k7463 */
static C_word C_fcall stub286(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub286(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_flonum(&C_a,Toolbox::keynum_to_hertz(t0));
return C_r;}

/* from k7456 */
static C_word C_fcall stub278(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3) C_regparm;
C_regparm static C_word C_fcall stub278(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
int t1=(int )C_unfix(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
C_r=C_flonum(&C_a,Toolbox::geoseg(t0,t1,t2,t3));
return C_r;}

/* from k7437 */
static C_word C_fcall stub267(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3) C_regparm;
C_regparm static C_word C_fcall stub267(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
int t1=(int )C_unfix(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
C_r=C_flonum(&C_a,Toolbox::explseg(t0,t1,t2,t3));
return C_r;}

/* from k7418 */
static C_word C_fcall stub260(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub260(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_fix((C_word)Toolbox::scaler_to_cents(t0));
return C_r;}

/* from k7411 */
static C_word C_fcall stub255(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub255(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
C_r=C_flonum(&C_a,Toolbox::cents_to_scaler(t0));
return C_r;}

/* from k7404 */
static C_word C_fcall stub248(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub248(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
C_r=C_flonum(&C_a,Toolbox::rhythm_to_seconds(t0,t1,t2));
return C_r;}

/* from k7389 */
static C_word C_fcall stub240(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub240(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
C_r=C_flonum(&C_a,Toolbox::quantize(t0,t1));
return C_r;}

/* from k7378 */
static C_word C_fcall stub235(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub235(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_fix((C_word)Toolbox::float_to_fixnum(t0));
return C_r;}

/* from k7371 */
static C_word C_fcall stub226(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4,C_word C_a5) C_regparm;
C_regparm static C_word C_fcall stub226(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4,C_word C_a5){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
float t5=(float )C_c_double(C_a5);
C_r=C_fix((C_word)Toolbox::discrete(t0,t1,t2,t3,t4,t5));
return C_r;}

/* from k7344 */
static C_word C_fcall stub211(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4,C_word C_a5) C_regparm;
C_regparm static C_word C_fcall stub211(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4,C_word C_a5){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
float t5=(float )C_c_double(C_a5);
C_r=C_flonum(&C_a,Toolbox::rescale(t0,t1,t2,t3,t4,t5));
return C_r;}

/* from k6652 */
static C_word C_fcall stub95(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub95(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
set_current_directory(t0);
return C_r;}

/* from f_6634 in cwd in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static C_word C_fcall stub90(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub90(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_mpointer(&C_a,(void*)get_current_directory());
return C_r;}

C_noret_decl(C_grace_toplevel)
C_externexport void C_ccall C_grace_toplevel(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6027)
static void C_ccall f_6027(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6030)
static void C_ccall f_6030(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6033)
static void C_ccall f_6033(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6036)
static void C_ccall f_6036(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37934)
static void C_ccall f_37934(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_37934)
static void C_ccall f_37934r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_6327)
static void C_ccall f_6327(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6331)
static void C_ccall f_6331(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37882)
static void C_ccall f_37882(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_37929)
static void C_ccall f_37929(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37919)
static void C_ccall f_37919(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37886)
static void C_ccall f_37886(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6334)
static void C_ccall f_6334(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37876)
static void C_ccall f_37876(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_37876)
static void C_ccall f_37876r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_6627)
static void C_ccall f_6627(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9652)
static void C_ccall f_9652(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37660)
static void C_fcall f_37660(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_37874)
static void C_ccall f_37874(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37694)
static void C_ccall f_37694(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37706)
static void C_ccall f_37706(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37710)
static void C_ccall f_37710(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37714)
static void C_ccall f_37714(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37858)
static void C_ccall f_37858(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37720)
static void C_fcall f_37720(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7,C_word t8,C_word t9,C_word t10,C_word t11,C_word t12,C_word t13) C_noret;
C_noret_decl(f_37740)
static void C_fcall f_37740(C_word t0,C_word t1) C_noret;
C_noret_decl(f_37743)
static void C_fcall f_37743(C_word t0,C_word t1) C_noret;
C_noret_decl(f_37751)
static void C_ccall f_37751(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37758)
static void C_ccall f_37758(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37761)
static void C_ccall f_37761(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37765)
static void C_ccall f_37765(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37772)
static void C_ccall f_37772(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37775)
static void C_ccall f_37775(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37779)
static void C_ccall f_37779(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37786)
static void C_ccall f_37786(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37730)
static void C_ccall f_37730(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37683)
static void C_ccall f_37683(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37673)
static void C_ccall f_37673(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37676)
static void C_ccall f_37676(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9655)
static void C_ccall f_9655(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37650)
static void C_ccall f_37650(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_37658)
static void C_ccall f_37658(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10720)
static void C_ccall f_10720(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37636)
static void C_ccall f_37636(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_37644)
static void C_ccall f_37644(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37648)
static void C_ccall f_37648(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19930)
static void C_ccall f_19930(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19981)
static void C_ccall f_19981(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37626)
static void C_ccall f_37626(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_37634)
static void C_ccall f_37634(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20086)
static void C_ccall f_20086(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37523)
static void C_ccall f_37523(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...) C_noret;
C_noret_decl(f_37523)
static void C_ccall f_37523r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t5) C_noret;
C_noret_decl(f_37586)
static void C_ccall f_37586(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37590)
static void C_ccall f_37590(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37604)
static void C_fcall f_37604(C_word t0,C_word t1) C_noret;
C_noret_decl(f_37526)
static void C_fcall f_37526(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_37546)
static void C_ccall f_37546(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37550)
static void C_ccall f_37550(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20089)
static void C_ccall f_20089(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37509)
static void C_ccall f_37509(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_37517)
static void C_ccall f_37517(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37521)
static void C_ccall f_37521(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20282)
static void C_ccall f_20282(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37483)
static void C_ccall f_37483(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_37487)
static void C_ccall f_37487(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37493)
static void C_ccall f_37493(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37504)
static void C_ccall f_37504(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37500)
static void C_ccall f_37500(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20351)
static void C_ccall f_20351(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37461)
static void C_ccall f_37461(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21596)
static void C_ccall f_21596(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37441)
static void C_ccall f_37441(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21599)
static void C_ccall f_21599(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37401)
static void C_ccall f_37401(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21602)
static void C_ccall f_21602(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37307)
static void C_ccall f_37307(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_37311)
static void C_ccall f_37311(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37314)
static void C_ccall f_37314(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37332)
static void C_ccall f_37332(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37335)
static void C_ccall f_37335(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37366)
static void C_ccall f_37366(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37338)
static void C_fcall f_37338(C_word t0,C_word t1) C_noret;
C_noret_decl(f_37344)
static void C_ccall f_37344(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37297)
static void C_ccall f_37297(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_37291)
static void C_ccall f_37291(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21605)
static void C_ccall f_21605(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37199)
static void C_ccall f_37199(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37201)
static void C_ccall f_37201(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_37205)
static void C_ccall f_37205(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37208)
static void C_ccall f_37208(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37211)
static void C_ccall f_37211(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37251)
static void C_ccall f_37251(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37243)
static void C_ccall f_37243(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37214)
static void C_ccall f_37214(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37217)
static void C_ccall f_37217(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37220)
static void C_ccall f_37220(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37191)
static void C_ccall f_37191(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21608)
static void C_ccall f_21608(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37163)
static void C_ccall f_37163(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21611)
static void C_ccall f_21611(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37127)
static void C_ccall f_37127(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_37139)
static void C_ccall f_37139(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37135)
static void C_ccall f_37135(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37109)
static void C_ccall f_37109(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_37103)
static void C_ccall f_37103(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21614)
static void C_ccall f_21614(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37017)
static void C_ccall f_37017(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_37021)
static void C_ccall f_37021(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37024)
static void C_ccall f_37024(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37027)
static void C_ccall f_37027(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37040)
static void C_ccall f_37040(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36986)
static void C_ccall f_36986(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_36990)
static void C_ccall f_36990(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37005)
static void C_ccall f_37005(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36980)
static void C_ccall f_36980(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21617)
static void C_ccall f_21617(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36866)
static void C_ccall f_36866(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_36882)
static void C_ccall f_36882(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36893)
static void C_ccall f_36893(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36860)
static void C_ccall f_36860(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21673)
static void C_ccall f_21673(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36727)
static void C_ccall f_36727(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_36750)
static void C_ccall f_36750(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36747)
static void C_ccall f_36747(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36721)
static void C_ccall f_36721(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21676)
static void C_ccall f_21676(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36575)
static void C_ccall f_36575(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_36593)
static void C_ccall f_36593(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36602)
static void C_ccall f_36602(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36569)
static void C_ccall f_36569(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21679)
static void C_ccall f_21679(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36522)
static void C_ccall f_36522(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_36526)
static void C_ccall f_36526(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36529)
static void C_ccall f_36529(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36545)
static void C_ccall f_36545(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36504)
static void C_ccall f_36504(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_36498)
static void C_ccall f_36498(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21682)
static void C_ccall f_21682(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36422)
static void C_ccall f_36422(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21821)
static void C_ccall f_21821(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36348)
static void C_ccall f_36348(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_36355)
static void C_ccall f_36355(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36342)
static void C_ccall f_36342(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21824)
static void C_ccall f_21824(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36238)
static void C_ccall f_36238(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_36246)
static void C_ccall f_36246(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36212)
static void C_ccall f_36212(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_36229)
static void C_ccall f_36229(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36220)
static void C_fcall f_36220(C_word t0,C_word t1) C_noret;
C_noret_decl(f_36206)
static void C_ccall f_36206(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21827)
static void C_ccall f_21827(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36162)
static void C_ccall f_36162(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21830)
static void C_ccall f_21830(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36080)
static void C_ccall f_36080(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_36091)
static void C_ccall f_36091(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36093)
static void C_fcall f_36093(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_36122)
static void C_ccall f_36122(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36058)
static void C_ccall f_36058(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_36074)
static void C_ccall f_36074(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36052)
static void C_ccall f_36052(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21833)
static void C_ccall f_21833(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36005)
static void C_ccall f_36005(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_36009)
static void C_ccall f_36009(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36016)
static void C_ccall f_36016(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35983)
static void C_ccall f_35983(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_35999)
static void C_ccall f_35999(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35977)
static void C_ccall f_35977(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21836)
static void C_ccall f_21836(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35845)
static void C_ccall f_35845(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_35885)
static void C_ccall f_35885(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35849)
static void C_ccall f_35849(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35865)
static void C_ccall f_35865(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_35865)
static void C_ccall f_35865r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_35877)
static void C_ccall f_35877(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35881)
static void C_ccall f_35881(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35873)
static void C_ccall f_35873(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35770)
static void C_ccall f_35770(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_35813)
static void C_ccall f_35813(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35817)
static void C_ccall f_35817(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35777)
static void C_fcall f_35777(C_word t0,C_word t1) C_noret;
C_noret_decl(f_35788)
static void C_ccall f_35788(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35764)
static void C_ccall f_35764(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21839)
static void C_ccall f_21839(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35744)
static void C_ccall f_35744(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_35738)
static void C_ccall f_35738(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21842)
static void C_ccall f_21842(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35718)
static void C_ccall f_35718(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35722)
static void C_ccall f_35722(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35710)
static void C_ccall f_35710(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21845)
static void C_ccall f_21845(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35690)
static void C_ccall f_35690(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35694)
static void C_ccall f_35694(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35682)
static void C_ccall f_35682(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21848)
static void C_ccall f_21848(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35662)
static void C_ccall f_35662(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35666)
static void C_ccall f_35666(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35654)
static void C_ccall f_35654(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21851)
static void C_ccall f_21851(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35634)
static void C_ccall f_35634(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35638)
static void C_ccall f_35638(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35626)
static void C_ccall f_35626(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21854)
static void C_ccall f_21854(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35525)
static void C_ccall f_35525(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_35495)
static void C_ccall f_35495(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_35519)
static void C_ccall f_35519(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35489)
static void C_ccall f_35489(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21857)
static void C_ccall f_21857(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35439)
static void C_ccall f_35439(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35441)
static void C_ccall f_35441(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_35445)
static void C_ccall f_35445(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35473)
static void C_ccall f_35473(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35465)
static void C_ccall f_35465(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35461)
static void C_ccall f_35461(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35448)
static void C_ccall f_35448(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35431)
static void C_ccall f_35431(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21860)
static void C_ccall f_21860(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35378)
static void C_ccall f_35378(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35380)
static void C_ccall f_35380(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_35384)
static void C_ccall f_35384(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35415)
static void C_ccall f_35415(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35407)
static void C_ccall f_35407(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35403)
static void C_ccall f_35403(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35387)
static void C_ccall f_35387(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35390)
static void C_ccall f_35390(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35370)
static void C_ccall f_35370(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21863)
static void C_ccall f_21863(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35320)
static void C_ccall f_35320(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_35334)
static void C_ccall f_35334(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35326)
static void C_ccall f_35326(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_35285)
static void C_ccall f_35285(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_35318)
static void C_ccall f_35318(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35279)
static void C_ccall f_35279(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21866)
static void C_ccall f_21866(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35226)
static void C_ccall f_35226(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_35230)
static void C_ccall f_35230(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35243)
static void C_ccall f_35243(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35235)
static void C_ccall f_35235(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_35183)
static void C_ccall f_35183(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_35216)
static void C_ccall f_35216(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35177)
static void C_ccall f_35177(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21869)
static void C_ccall f_21869(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35097)
static void C_ccall f_35097(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_35091)
static void C_ccall f_35091(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21872)
static void C_ccall f_21872(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34860)
static void C_ccall f_34860(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_34864)
static void C_ccall f_34864(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34872)
static void C_fcall f_34872(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_34895)
static void C_ccall f_34895(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34898)
static void C_ccall f_34898(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34901)
static void C_ccall f_34901(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34904)
static void C_ccall f_34904(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34964)
static void C_ccall f_34964(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34971)
static void C_ccall f_34971(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34981)
static void C_ccall f_34981(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34991)
static void C_ccall f_34991(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35005)
static void C_ccall f_35005(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35015)
static void C_ccall f_35015(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35025)
static void C_ccall f_35025(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35035)
static void C_ccall f_35035(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34907)
static void C_fcall f_34907(C_word t0,C_word t1) C_noret;
C_noret_decl(f_34931)
static void C_fcall f_34931(C_word t0,C_word t1) C_noret;
C_noret_decl(f_34910)
static void C_fcall f_34910(C_word t0,C_word t1) C_noret;
C_noret_decl(f_34817)
static void C_ccall f_34817(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_34850)
static void C_ccall f_34850(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34811)
static void C_ccall f_34811(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21875)
static void C_ccall f_21875(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34729)
static void C_ccall f_34729(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_34733)
static void C_ccall f_34733(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34739)
static void C_ccall f_34739(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34759)
static void C_ccall f_34759(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34703)
static void C_ccall f_34703(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_34713)
static void C_fcall f_34713(C_word t0,C_word t1) C_noret;
C_noret_decl(f_34697)
static void C_ccall f_34697(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21878)
static void C_ccall f_21878(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34574)
static void C_ccall f_34574(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_34578)
static void C_ccall f_34578(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34506)
static void C_ccall f_34506(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_34525)
static void C_ccall f_34525(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34560)
static void C_ccall f_34560(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34531)
static void C_fcall f_34531(C_word t0,C_word t1) C_noret;
C_noret_decl(f_34535)
static void C_ccall f_34535(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34549)
static void C_ccall f_34549(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34538)
static void C_fcall f_34538(C_word t0,C_word t1) C_noret;
C_noret_decl(f_34519)
static void C_fcall f_34519(C_word t0,C_word t1) C_noret;
C_noret_decl(f_34500)
static void C_ccall f_34500(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21881)
static void C_ccall f_21881(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34228)
static void C_ccall f_34228(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22404)
static void C_ccall f_22404(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34180)
static void C_ccall f_34180(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34172)
static void C_ccall f_34172(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22407)
static void C_ccall f_22407(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34052)
static void C_ccall f_34052(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_22413)
static void C_ccall f_22413(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22872)
static void C_ccall f_22872(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22906)
static void C_ccall f_22906(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22898)
static void C_ccall f_22898(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22894)
static void C_ccall f_22894(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22879)
static void C_ccall f_22879(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22883)
static void C_ccall f_22883(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22876)
static void C_ccall f_22876(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22431)
static void C_fcall f_22431(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22865)
static void C_ccall f_22865(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22861)
static void C_ccall f_22861(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22438)
static void C_fcall f_22438(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22736)
static void C_fcall f_22736(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_22757)
static void C_ccall f_22757(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22759)
static void C_fcall f_22759(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_22773)
static void C_ccall f_22773(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22826)
static void C_ccall f_22826(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22776)
static void C_fcall f_22776(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22811)
static void C_ccall f_22811(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22779)
static void C_fcall f_22779(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22792)
static void C_ccall f_22792(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22804)
static void C_ccall f_22804(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22796)
static void C_ccall f_22796(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22782)
static void C_fcall f_22782(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22746)
static void C_ccall f_22746(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22441)
static void C_ccall f_22441(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22700)
static void C_fcall f_22700(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_22726)
static void C_ccall f_22726(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22711)
static void C_ccall f_22711(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22444)
static void C_ccall f_22444(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22448)
static void C_ccall f_22448(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22644)
static void C_fcall f_22644(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_22654)
static void C_ccall f_22654(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22657)
static void C_ccall f_22657(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22678)
static void C_ccall f_22678(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22660)
static void C_fcall f_22660(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22664)
static void C_ccall f_22664(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22451)
static void C_ccall f_22451(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22454)
static void C_fcall f_22454(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22607)
static void C_ccall f_22607(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22615)
static void C_ccall f_22615(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22611)
static void C_ccall f_22611(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22457)
static void C_fcall f_22457(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22485)
static void C_ccall f_22485(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22488)
static void C_ccall f_22488(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22491)
static void C_ccall f_22491(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22494)
static void C_ccall f_22494(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22497)
static void C_ccall f_22497(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22556)
static void C_ccall f_22556(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34006)
static void C_ccall f_34006(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_34022)
static void C_ccall f_34022(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34025)
static void C_ccall f_34025(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34028)
static void C_fcall f_34028(C_word t0,C_word t1) C_noret;
C_noret_decl(f_34031)
static void C_fcall f_34031(C_word t0,C_word t1) C_noret;
C_noret_decl(f_34042)
static void C_ccall f_34042(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34000)
static void C_ccall f_34000(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22913)
static void C_ccall f_22913(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33861)
static void C_ccall f_33861(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_33900)
static void C_ccall f_33900(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33874)
static void C_fcall f_33874(C_word t0,C_word t1) C_noret;
C_noret_decl(f_33855)
static void C_ccall f_33855(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22916)
static void C_ccall f_22916(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33443)
static void C_ccall f_33443(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_33447)
static void C_ccall f_33447(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33459)
static void C_ccall f_33459(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33517)
static void C_ccall f_33517(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33520)
static void C_ccall f_33520(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33523)
static void C_ccall f_33523(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33735)
static void C_ccall f_33735(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33673)
static void C_ccall f_33673(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33707)
static void C_ccall f_33707(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33682)
static void C_fcall f_33682(C_word t0,C_word t1) C_noret;
C_noret_decl(f_33693)
static void C_ccall f_33693(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33689)
static void C_ccall f_33689(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33532)
static void C_fcall f_33532(C_word t0,C_word t1) C_noret;
C_noret_decl(f_33610)
static void C_ccall f_33610(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33651)
static void C_ccall f_33651(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33655)
static void C_ccall f_33655(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33659)
static void C_ccall f_33659(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33614)
static void C_ccall f_33614(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33618)
static void C_ccall f_33618(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33645)
static void C_ccall f_33645(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33621)
static void C_fcall f_33621(C_word t0,C_word t1) C_noret;
C_noret_decl(f_33535)
static void C_fcall f_33535(C_word t0,C_word t1) C_noret;
C_noret_decl(f_33607)
static void C_ccall f_33607(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33549)
static void C_ccall f_33549(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33551)
static void C_fcall f_33551(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_33599)
static void C_ccall f_33599(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33570)
static void C_ccall f_33570(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33587)
static void C_ccall f_33587(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33573)
static void C_fcall f_33573(C_word t0,C_word t1) C_noret;
C_noret_decl(f_33566)
static void C_ccall f_33566(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33538)
static void C_ccall f_33538(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33468)
static void C_fcall f_33468(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_33478)
static void C_ccall f_33478(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33484)
static void C_ccall f_33484(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33456)
static void C_ccall f_33456(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33404)
static void C_ccall f_33404(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_33421)
static void C_ccall f_33421(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33437)
static void C_ccall f_33437(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33415)
static void C_fcall f_33415(C_word t0,C_word t1) C_noret;
C_noret_decl(f_33398)
static void C_ccall f_33398(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22919)
static void C_ccall f_22919(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33322)
static void C_ccall f_33322(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22922)
static void C_ccall f_22922(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33298)
static void C_ccall f_33298(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_33310)
static void C_ccall f_33310(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33306)
static void C_ccall f_33306(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33284)
static void C_ccall f_33284(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_33292)
static void C_ccall f_33292(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33278)
static void C_ccall f_33278(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22925)
static void C_ccall f_22925(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33270)
static void C_ccall f_33270(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26696)
static void C_ccall f_26696(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26699)
static void C_ccall f_26699(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26865)
static void C_ccall f_26865(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26861)
static void C_ccall f_26861(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26851)
static void C_fcall f_26851(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26706)
static void C_ccall f_26706(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26710)
static void C_ccall f_26710(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26713)
static void C_fcall f_26713(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26724)
static void C_ccall f_26724(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26732)
static void C_ccall f_26732(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26804)
static void C_ccall f_26804(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26812)
static void C_ccall f_26812(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26808)
static void C_ccall f_26808(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26800)
static void C_ccall f_26800(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26796)
static void C_ccall f_26796(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26768)
static void C_ccall f_26768(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26764)
static void C_ccall f_26764(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26728)
static void C_ccall f_26728(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23343)
static void C_ccall f_23343(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33256)
static void C_ccall f_33256(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_23346)
static void C_ccall f_23346(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33227)
static void C_ccall f_33227(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_33231)
static void C_ccall f_33231(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23349)
static void C_ccall f_23349(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33224)
static void C_ccall f_33224(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23352)
static void C_ccall f_23352(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33082)
static void C_ccall f_33082(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26878)
static void C_ccall f_26878(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27010)
static void C_ccall f_27010(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26881)
static void C_ccall f_26881(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26892)
static void C_ccall f_26892(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26900)
static void C_ccall f_26900(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26924)
static void C_ccall f_26924(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26927)
static void C_fcall f_26927(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26935)
static void C_ccall f_26935(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26943)
static void C_ccall f_26943(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26963)
static void C_ccall f_26963(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26959)
static void C_ccall f_26959(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26939)
static void C_ccall f_26939(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26931)
static void C_ccall f_26931(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26920)
static void C_ccall f_26920(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26896)
static void C_ccall f_26896(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26872)
static void C_ccall f_26872(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31794)
static void C_ccall f_31794(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31797)
static void C_ccall f_31797(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31800)
static void C_ccall f_31800(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31803)
static void C_ccall f_31803(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31806)
static void C_ccall f_31806(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31809)
static void C_ccall f_31809(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31812)
static void C_ccall f_31812(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31815)
static void C_ccall f_31815(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31818)
static void C_ccall f_31818(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31821)
static void C_ccall f_31821(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31824)
static void C_ccall f_31824(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31949)
static void C_ccall f_31949(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31952)
static void C_ccall f_31952(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31955)
static void C_ccall f_31955(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33019)
static void C_fcall f_33019(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_33047)
static void C_fcall f_33047(C_word t0,C_word t1) C_noret;
C_noret_decl(f_32686)
static void C_ccall f_32686(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33013)
static void C_ccall f_33013(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_32731)
static void C_ccall f_32731(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32737)
static void C_ccall f_32737(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32740)
static void C_ccall f_32740(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32743)
static void C_ccall f_32743(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32747)
static void C_ccall f_32747(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32957)
static void C_ccall f_32957(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32969)
static void C_ccall f_32969(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32965)
static void C_ccall f_32965(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32750)
static void C_fcall f_32750(C_word t0,C_word t1) C_noret;
C_noret_decl(f_32914)
static void C_fcall f_32914(C_word t0,C_word t1) C_noret;
C_noret_decl(f_32950)
static void C_ccall f_32950(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32943)
static void C_ccall f_32943(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32753)
static void C_ccall f_32753(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32852)
static void C_ccall f_32852(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32860)
static void C_ccall f_32860(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32856)
static void C_ccall f_32856(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32848)
static void C_ccall f_32848(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32844)
static void C_ccall f_32844(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32800)
static void C_ccall f_32800(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32796)
static void C_ccall f_32796(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32763)
static void C_fcall f_32763(C_word t0,C_word t1) C_noret;
C_noret_decl(f_32774)
static void C_ccall f_32774(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32782)
static void C_ccall f_32782(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32778)
static void C_ccall f_32778(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32976)
static void C_ccall f_32976(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32984)
static void C_ccall f_32984(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_32984)
static void C_ccall f_32984r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_32998)
static void C_fcall f_32998(C_word t0,C_word t1) C_noret;
C_noret_decl(f_32988)
static void C_ccall f_32988(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32979)
static void C_ccall f_32979(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32982)
static void C_ccall f_32982(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32688)
static void C_fcall f_32688(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_32704)
static void C_ccall f_32704(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32615)
static void C_ccall f_32615(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_32626)
static void C_ccall f_32626(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32629)
static void C_fcall f_32629(C_word t0,C_word t1) C_noret;
C_noret_decl(f_32636)
static void C_ccall f_32636(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32605)
static void C_ccall f_32605(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32260)
static void C_ccall f_32260(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32609)
static void C_ccall f_32609(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32547)
static void C_ccall f_32547(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_32547)
static void C_ccall f_32547r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_32565)
static void C_fcall f_32565(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_32575)
static void C_ccall f_32575(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32551)
static void C_ccall f_32551(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32538)
static void C_ccall f_32538(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32238)
static void C_ccall f_32238(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32542)
static void C_ccall f_32542(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32532)
static void C_ccall f_32532(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32220)
static void C_ccall f_32220(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32523)
static void C_ccall f_32523(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32229)
static void C_ccall f_32229(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32527)
static void C_ccall f_32527(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32460)
static void C_ccall f_32460(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_32460)
static void C_ccall f_32460r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_32485)
static void C_fcall f_32485(C_word t0,C_word t1) C_noret;
C_noret_decl(f_32185)
static void C_ccall f_32185(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32473)
static void C_ccall f_32473(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32284)
static void C_ccall f_32284(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_32284)
static void C_ccall f_32284r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_32411)
static void C_fcall f_32411(C_word t0,C_word t1) C_noret;
C_noret_decl(f_32406)
static void C_fcall f_32406(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_32286)
static void C_fcall f_32286(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_32405)
static void C_ccall f_32405(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32401)
static void C_ccall f_32401(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32393)
static void C_ccall f_32393(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32357)
static void C_fcall f_32357(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_32390)
static void C_ccall f_32390(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32386)
static void C_ccall f_32386(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32367)
static void C_ccall f_32367(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32346)
static void C_ccall f_32346(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32316)
static void C_fcall f_32316(C_word t0,C_word t1) C_noret;
C_noret_decl(f_32288)
static void C_fcall f_32288(C_word t0,C_word t1) C_noret;
C_noret_decl(f_32265)
static void C_ccall f_32265(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_32270)
static void C_ccall f_32270(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_32275)
static void C_ccall f_32275(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32243)
static void C_fcall f_32243(C_word t0,C_word t1) C_noret;
C_noret_decl(f_32247)
static void C_ccall f_32247(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32199)
static void C_fcall f_32199(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_32203)
static void C_ccall f_32203(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32190)
static void C_fcall f_32190(C_word t0,C_word t1) C_noret;
C_noret_decl(f_32194)
static void C_ccall f_32194(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32178)
static void C_ccall f_32178(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32175)
static void C_ccall f_32175(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32161)
static void C_ccall f_32161(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_32166)
static void C_ccall f_32166(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32147)
static void C_ccall f_32147(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_32152)
static void C_ccall f_32152(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31957)
static void C_ccall f_31957(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_32018)
static void C_ccall f_32018(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32020)
static void C_fcall f_32020(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_32030)
static void C_ccall f_32030(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32049)
static void C_fcall f_32049(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_32089)
static void C_ccall f_32089(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32131)
static void C_ccall f_32131(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32101)
static void C_ccall f_32101(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32086)
static void C_fcall f_32086(C_word t0,C_word t1) C_noret;
C_noret_decl(f_32004)
static void C_ccall f_32004(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31969)
static void C_ccall f_31969(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31996)
static void C_ccall f_31996(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31977)
static void C_ccall f_31977(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31984)
static void C_ccall f_31984(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31988)
static void C_ccall f_31988(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31992)
static void C_ccall f_31992(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32069)
static void C_ccall f_32069(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32047)
static void C_ccall f_32047(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32033)
static void C_ccall f_32033(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32036)
static void C_ccall f_32036(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32011)
static void C_ccall f_32011(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31940)
static void C_ccall f_31940(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31945)
static void C_ccall f_31945(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31883)
static void C_ccall f_31883(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_31883)
static void C_ccall f_31883r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_31916)
static void C_fcall f_31916(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31896)
static void C_fcall f_31896(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31904)
static void C_ccall f_31904(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_31887)
static void C_ccall f_31887(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31826)
static void C_ccall f_31826(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_31826)
static void C_ccall f_31826r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_31859)
static void C_fcall f_31859(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31839)
static void C_fcall f_31839(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31847)
static void C_ccall f_31847(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_31830)
static void C_ccall f_31830(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31736)
static void C_ccall f_31736(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_31790)
static void C_ccall f_31790(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_31785)
static void C_ccall f_31785(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_31748)
static void C_ccall f_31748(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_31754)
static void C_ccall f_31754(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_31780)
static void C_ccall f_31780(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31784)
static void C_ccall f_31784(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31760)
static void C_ccall f_31760(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_31778)
static void C_ccall f_31778(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31775)
static void C_ccall f_31775(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31771)
static void C_ccall f_31771(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31764)
static void C_ccall f_31764(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31721)
static void C_ccall f_31721(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_31726)
static void C_ccall f_31726(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_31693)
static void C_ccall f_31693(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_31698)
static void C_ccall f_31698(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_31665)
static void C_ccall f_31665(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_31670)
static void C_ccall f_31670(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_31637)
static void C_ccall f_31637(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_31642)
static void C_ccall f_31642(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_31609)
static void C_ccall f_31609(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_31614)
static void C_ccall f_31614(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_31581)
static void C_ccall f_31581(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_31586)
static void C_ccall f_31586(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_31553)
static void C_ccall f_31553(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_31558)
static void C_ccall f_31558(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_31525)
static void C_ccall f_31525(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_31530)
static void C_ccall f_31530(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_31497)
static void C_ccall f_31497(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_31502)
static void C_ccall f_31502(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_31469)
static void C_ccall f_31469(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_31474)
static void C_ccall f_31474(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_31446)
static void C_ccall f_31446(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_31451)
static void C_ccall f_31451(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_31450)
static void C_ccall f_31450(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31427)
static void C_ccall f_31427(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_31432)
static void C_ccall f_31432(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_31372)
static void C_ccall f_31372(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_31379)
static void C_ccall f_31379(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31382)
static void C_ccall f_31382(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31406)
static void C_ccall f_31406(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_31386)
static void C_ccall f_31386(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_31376)
static void C_ccall f_31376(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31325)
static void C_ccall f_31325(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_31332)
static void C_ccall f_31332(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31335)
static void C_ccall f_31335(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31355)
static void C_ccall f_31355(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_31339)
static void C_ccall f_31339(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_31302)
static void C_ccall f_31302(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_31307)
static void C_ccall f_31307(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_31306)
static void C_ccall f_31306(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31283)
static void C_ccall f_31283(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_31288)
static void C_ccall f_31288(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_31260)
static void C_ccall f_31260(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_31265)
static void C_ccall f_31265(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_31264)
static void C_ccall f_31264(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31241)
static void C_ccall f_31241(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_31246)
static void C_ccall f_31246(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_31222)
static void C_ccall f_31222(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_31227)
static void C_ccall f_31227(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_31226)
static void C_ccall f_31226(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31207)
static void C_ccall f_31207(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_31212)
static void C_ccall f_31212(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_31188)
static void C_ccall f_31188(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_31193)
static void C_ccall f_31193(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_31192)
static void C_ccall f_31192(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31173)
static void C_ccall f_31173(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_31178)
static void C_ccall f_31178(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_31158)
static void C_ccall f_31158(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_31163)
static void C_ccall f_31163(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_31140)
static void C_ccall f_31140(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_31148)
static void C_ccall f_31148(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_31144)
static void C_ccall f_31144(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30670)
static void C_ccall f_30670(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_30670)
static void C_ccall f_30670r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_31098)
static void C_ccall f_31098(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31113)
static void C_ccall f_31113(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31105)
static void C_ccall f_31105(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31069)
static void C_ccall f_31069(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31073)
static void C_ccall f_31073(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31034)
static void C_ccall f_31034(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31038)
static void C_ccall f_31038(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30999)
static void C_ccall f_30999(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31003)
static void C_ccall f_31003(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30674)
static void C_fcall f_30674(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30963)
static void C_ccall f_30963(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30978)
static void C_ccall f_30978(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30970)
static void C_ccall f_30970(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30934)
static void C_ccall f_30934(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30938)
static void C_ccall f_30938(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30899)
static void C_ccall f_30899(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30903)
static void C_ccall f_30903(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30864)
static void C_ccall f_30864(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30868)
static void C_ccall f_30868(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30677)
static void C_fcall f_30677(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30828)
static void C_ccall f_30828(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30843)
static void C_ccall f_30843(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30835)
static void C_ccall f_30835(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30799)
static void C_ccall f_30799(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30803)
static void C_ccall f_30803(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30764)
static void C_ccall f_30764(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30768)
static void C_ccall f_30768(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30729)
static void C_ccall f_30729(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30733)
static void C_ccall f_30733(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30680)
static void C_fcall f_30680(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30683)
static void C_ccall f_30683(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30687)
static void C_ccall f_30687(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_30651)
static void C_ccall f_30651(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_30656)
static void C_ccall f_30656(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_30200)
static void C_ccall f_30200(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_30200)
static void C_ccall f_30200r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_30628)
static void C_ccall f_30628(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30643)
static void C_ccall f_30643(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30635)
static void C_ccall f_30635(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30599)
static void C_ccall f_30599(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30603)
static void C_ccall f_30603(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30564)
static void C_ccall f_30564(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30568)
static void C_ccall f_30568(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30529)
static void C_ccall f_30529(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30533)
static void C_ccall f_30533(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30204)
static void C_fcall f_30204(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30493)
static void C_ccall f_30493(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30508)
static void C_ccall f_30508(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30500)
static void C_ccall f_30500(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30464)
static void C_ccall f_30464(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30468)
static void C_ccall f_30468(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30429)
static void C_ccall f_30429(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30433)
static void C_ccall f_30433(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30394)
static void C_ccall f_30394(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30398)
static void C_ccall f_30398(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30207)
static void C_fcall f_30207(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30358)
static void C_ccall f_30358(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30373)
static void C_ccall f_30373(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30365)
static void C_ccall f_30365(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30329)
static void C_ccall f_30329(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30333)
static void C_ccall f_30333(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30294)
static void C_ccall f_30294(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30298)
static void C_ccall f_30298(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30259)
static void C_ccall f_30259(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30263)
static void C_ccall f_30263(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30210)
static void C_fcall f_30210(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30213)
static void C_ccall f_30213(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30217)
static void C_ccall f_30217(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_30181)
static void C_ccall f_30181(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_30186)
static void C_ccall f_30186(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_29730)
static void C_ccall f_29730(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_29730)
static void C_ccall f_29730r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_30158)
static void C_ccall f_30158(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30173)
static void C_ccall f_30173(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30165)
static void C_ccall f_30165(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30129)
static void C_ccall f_30129(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30133)
static void C_ccall f_30133(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30094)
static void C_ccall f_30094(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30098)
static void C_ccall f_30098(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30059)
static void C_ccall f_30059(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30063)
static void C_ccall f_30063(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29734)
static void C_fcall f_29734(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30023)
static void C_ccall f_30023(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30038)
static void C_ccall f_30038(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30030)
static void C_ccall f_30030(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29994)
static void C_ccall f_29994(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29998)
static void C_ccall f_29998(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29959)
static void C_ccall f_29959(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29963)
static void C_ccall f_29963(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29924)
static void C_ccall f_29924(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29928)
static void C_ccall f_29928(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29737)
static void C_fcall f_29737(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29888)
static void C_ccall f_29888(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29903)
static void C_ccall f_29903(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29895)
static void C_ccall f_29895(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29859)
static void C_ccall f_29859(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29863)
static void C_ccall f_29863(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29824)
static void C_ccall f_29824(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29828)
static void C_ccall f_29828(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29789)
static void C_ccall f_29789(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29793)
static void C_ccall f_29793(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29740)
static void C_fcall f_29740(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29743)
static void C_ccall f_29743(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29747)
static void C_ccall f_29747(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_29711)
static void C_ccall f_29711(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_29716)
static void C_ccall f_29716(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_28982)
static void C_ccall f_28982(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_28982)
static void C_ccall f_28982r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_29688)
static void C_ccall f_29688(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29703)
static void C_ccall f_29703(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29695)
static void C_ccall f_29695(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29659)
static void C_ccall f_29659(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29663)
static void C_ccall f_29663(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29624)
static void C_ccall f_29624(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29628)
static void C_ccall f_29628(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29589)
static void C_ccall f_29589(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29593)
static void C_ccall f_29593(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29554)
static void C_ccall f_29554(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29558)
static void C_ccall f_29558(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28986)
static void C_fcall f_28986(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29518)
static void C_ccall f_29518(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29533)
static void C_ccall f_29533(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29525)
static void C_ccall f_29525(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29489)
static void C_ccall f_29489(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29493)
static void C_ccall f_29493(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29454)
static void C_ccall f_29454(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29458)
static void C_ccall f_29458(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29419)
static void C_ccall f_29419(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29423)
static void C_ccall f_29423(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29384)
static void C_ccall f_29384(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29388)
static void C_ccall f_29388(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28989)
static void C_fcall f_28989(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29348)
static void C_ccall f_29348(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29363)
static void C_ccall f_29363(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29355)
static void C_ccall f_29355(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29319)
static void C_ccall f_29319(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29323)
static void C_ccall f_29323(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29284)
static void C_ccall f_29284(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29288)
static void C_ccall f_29288(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29249)
static void C_ccall f_29249(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29253)
static void C_ccall f_29253(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29214)
static void C_ccall f_29214(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29218)
static void C_ccall f_29218(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28992)
static void C_fcall f_28992(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29178)
static void C_ccall f_29178(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29193)
static void C_ccall f_29193(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29185)
static void C_ccall f_29185(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29149)
static void C_ccall f_29149(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29153)
static void C_ccall f_29153(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29114)
static void C_ccall f_29114(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29118)
static void C_ccall f_29118(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29079)
static void C_ccall f_29079(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29083)
static void C_ccall f_29083(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29044)
static void C_ccall f_29044(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29048)
static void C_ccall f_29048(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28995)
static void C_fcall f_28995(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28998)
static void C_ccall f_28998(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29002)
static void C_ccall f_29002(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_28963)
static void C_ccall f_28963(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_28968)
static void C_ccall f_28968(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_28234)
static void C_ccall f_28234(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_28234)
static void C_ccall f_28234r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_28940)
static void C_ccall f_28940(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28955)
static void C_ccall f_28955(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28947)
static void C_ccall f_28947(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28911)
static void C_ccall f_28911(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28915)
static void C_ccall f_28915(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28876)
static void C_ccall f_28876(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28880)
static void C_ccall f_28880(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28841)
static void C_ccall f_28841(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28845)
static void C_ccall f_28845(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28806)
static void C_ccall f_28806(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28810)
static void C_ccall f_28810(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28238)
static void C_fcall f_28238(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28770)
static void C_ccall f_28770(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28785)
static void C_ccall f_28785(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28777)
static void C_ccall f_28777(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28741)
static void C_ccall f_28741(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28745)
static void C_ccall f_28745(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28706)
static void C_ccall f_28706(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28710)
static void C_ccall f_28710(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28671)
static void C_ccall f_28671(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28675)
static void C_ccall f_28675(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28636)
static void C_ccall f_28636(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28640)
static void C_ccall f_28640(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28241)
static void C_fcall f_28241(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28600)
static void C_ccall f_28600(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28615)
static void C_ccall f_28615(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28607)
static void C_ccall f_28607(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28571)
static void C_ccall f_28571(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28575)
static void C_ccall f_28575(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28536)
static void C_ccall f_28536(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28540)
static void C_ccall f_28540(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28501)
static void C_ccall f_28501(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28505)
static void C_ccall f_28505(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28466)
static void C_ccall f_28466(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28470)
static void C_ccall f_28470(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28244)
static void C_fcall f_28244(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28430)
static void C_ccall f_28430(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28445)
static void C_ccall f_28445(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28437)
static void C_ccall f_28437(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28401)
static void C_ccall f_28401(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28405)
static void C_ccall f_28405(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28366)
static void C_ccall f_28366(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28370)
static void C_ccall f_28370(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28331)
static void C_ccall f_28331(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28335)
static void C_ccall f_28335(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28296)
static void C_ccall f_28296(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28300)
static void C_ccall f_28300(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28247)
static void C_fcall f_28247(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28250)
static void C_ccall f_28250(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28254)
static void C_ccall f_28254(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_28215)
static void C_ccall f_28215(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_28220)
static void C_ccall f_28220(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_27764)
static void C_ccall f_27764(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_27764)
static void C_ccall f_27764r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_28192)
static void C_ccall f_28192(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28207)
static void C_ccall f_28207(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28199)
static void C_ccall f_28199(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28163)
static void C_ccall f_28163(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28167)
static void C_ccall f_28167(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28128)
static void C_ccall f_28128(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28132)
static void C_ccall f_28132(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28093)
static void C_ccall f_28093(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28097)
static void C_ccall f_28097(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27768)
static void C_fcall f_27768(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28057)
static void C_ccall f_28057(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28072)
static void C_ccall f_28072(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28064)
static void C_ccall f_28064(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28028)
static void C_ccall f_28028(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28032)
static void C_ccall f_28032(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27993)
static void C_ccall f_27993(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27997)
static void C_ccall f_27997(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27958)
static void C_ccall f_27958(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27962)
static void C_ccall f_27962(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27771)
static void C_fcall f_27771(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27922)
static void C_ccall f_27922(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27937)
static void C_ccall f_27937(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27929)
static void C_ccall f_27929(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27893)
static void C_ccall f_27893(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27897)
static void C_ccall f_27897(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27858)
static void C_ccall f_27858(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27862)
static void C_ccall f_27862(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27823)
static void C_ccall f_27823(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27827)
static void C_ccall f_27827(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27774)
static void C_fcall f_27774(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27777)
static void C_ccall f_27777(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27781)
static void C_ccall f_27781(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_27745)
static void C_ccall f_27745(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27750)
static void C_ccall f_27750(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_27016)
static void C_ccall f_27016(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_27016)
static void C_ccall f_27016r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_27722)
static void C_ccall f_27722(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27737)
static void C_ccall f_27737(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27729)
static void C_ccall f_27729(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27693)
static void C_ccall f_27693(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27697)
static void C_ccall f_27697(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27658)
static void C_ccall f_27658(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27662)
static void C_ccall f_27662(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27623)
static void C_ccall f_27623(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27627)
static void C_ccall f_27627(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27588)
static void C_ccall f_27588(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27592)
static void C_ccall f_27592(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27020)
static void C_fcall f_27020(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27552)
static void C_ccall f_27552(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27567)
static void C_ccall f_27567(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27559)
static void C_ccall f_27559(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27523)
static void C_ccall f_27523(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27527)
static void C_ccall f_27527(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27488)
static void C_ccall f_27488(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27492)
static void C_ccall f_27492(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27453)
static void C_ccall f_27453(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27457)
static void C_ccall f_27457(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27418)
static void C_ccall f_27418(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27422)
static void C_ccall f_27422(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27023)
static void C_fcall f_27023(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27382)
static void C_ccall f_27382(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27397)
static void C_ccall f_27397(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27389)
static void C_ccall f_27389(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27353)
static void C_ccall f_27353(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27357)
static void C_ccall f_27357(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27318)
static void C_ccall f_27318(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27322)
static void C_ccall f_27322(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27283)
static void C_ccall f_27283(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27287)
static void C_ccall f_27287(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27248)
static void C_ccall f_27248(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27252)
static void C_ccall f_27252(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27026)
static void C_fcall f_27026(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27212)
static void C_ccall f_27212(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27227)
static void C_ccall f_27227(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27219)
static void C_ccall f_27219(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27183)
static void C_ccall f_27183(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27187)
static void C_ccall f_27187(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27148)
static void C_ccall f_27148(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27152)
static void C_ccall f_27152(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27113)
static void C_ccall f_27113(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27117)
static void C_ccall f_27117(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27078)
static void C_ccall f_27078(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27082)
static void C_ccall f_27082(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27029)
static void C_fcall f_27029(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27032)
static void C_ccall f_27032(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27036)
static void C_ccall f_27036(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_26678)
static void C_fcall f_26678(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_26518)
static void C_fcall f_26518(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26553)
static void C_fcall f_26553(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_26563)
static void C_fcall f_26563(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26567)
static void C_ccall f_26567(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26570)
static void C_ccall f_26570(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26631)
static void C_ccall f_26631(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_26622)
static void C_ccall f_26622(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26573)
static void C_ccall f_26573(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26592)
static void C_ccall f_26592(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26599)
static void C_ccall f_26599(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26576)
static void C_ccall f_26576(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26582)
static void C_ccall f_26582(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26551)
static void C_ccall f_26551(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26526)
static void C_fcall f_26526(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26525)
static void C_ccall f_26525(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26686)
static void C_fcall f_26686(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26264)
static void C_ccall f_26264(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_26286)
static void C_ccall f_26286(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26301)
static void C_ccall f_26301(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26304)
static void C_fcall f_26304(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26480)
static void C_ccall f_26480(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_26474)
static void C_ccall f_26474(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26307)
static void C_ccall f_26307(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26456)
static void C_ccall f_26456(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26310)
static void C_fcall f_26310(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26313)
static void C_ccall f_26313(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26449)
static void C_ccall f_26449(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26437)
static void C_ccall f_26437(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26333)
static void C_fcall f_26333(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26340)
static void C_ccall f_26340(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26410)
static void C_ccall f_26410(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_26396)
static void C_ccall f_26396(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26404)
static void C_ccall f_26404(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26343)
static void C_ccall f_26343(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26382)
static void C_ccall f_26382(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26346)
static void C_fcall f_26346(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26375)
static void C_ccall f_26375(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26352)
static void C_ccall f_26352(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26355)
static void C_ccall f_26355(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26359)
static void C_ccall f_26359(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26320)
static void C_fcall f_26320(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26323)
static void C_ccall f_26323(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26133)
static void C_fcall f_26133(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_26142)
static void C_fcall f_26142(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_26090)
static void C_ccall f_26090(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26096)
static void C_fcall f_26096(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26159)
static void C_ccall f_26159(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26245)
static void C_ccall f_26245(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_26232)
static void C_ccall f_26232(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26240)
static void C_ccall f_26240(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26162)
static void C_ccall f_26162(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26166)
static void C_ccall f_26166(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26209)
static void C_ccall f_26209(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26171)
static void C_ccall f_26171(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26137)
static void C_ccall f_26137(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26032)
static void C_ccall f_26032(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_26039)
static void C_ccall f_26039(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26070)
static void C_ccall f_26070(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26066)
static void C_ccall f_26066(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26058)
static void C_ccall f_26058(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25941)
static void C_ccall f_25941(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_25948)
static void C_ccall f_25948(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26016)
static void C_ccall f_26016(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25959)
static void C_fcall f_25959(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25986)
static void C_ccall f_25986(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25970)
static void C_ccall f_25970(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25875)
static void C_ccall f_25875(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_25886)
static void C_ccall f_25886(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25889)
static void C_fcall f_25889(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25896)
static void C_ccall f_25896(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25869)
static void C_ccall f_25869(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25323)
static void C_ccall f_25323(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_25354)
static void C_ccall f_25354(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25818)
static void C_ccall f_25818(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25824)
static void C_ccall f_25824(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25365)
static void C_ccall f_25365(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25250)
static void C_fcall f_25250(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25275)
static void C_ccall f_25275(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25210)
static void C_fcall f_25210(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25223)
static void C_fcall f_25223(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25264)
static void C_ccall f_25264(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25369)
static void C_ccall f_25369(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25806)
static void C_ccall f_25806(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25802)
static void C_fcall f_25802(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25798)
static void C_ccall f_25798(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25372)
static void C_ccall f_25372(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25592)
static void C_fcall f_25592(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25701)
static void C_ccall f_25701(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25766)
static void C_ccall f_25766(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25708)
static void C_fcall f_25708(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25712)
static void C_ccall f_25712(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25716)
static void C_ccall f_25716(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25758)
static void C_ccall f_25758(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25754)
static void C_ccall f_25754(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25732)
static void C_ccall f_25732(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25595)
static void C_fcall f_25595(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25598)
static void C_fcall f_25598(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25497)
static void C_ccall f_25497(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25580)
static void C_ccall f_25580(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25547)
static void C_ccall f_25547(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25573)
static void C_ccall f_25573(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25555)
static void C_ccall f_25555(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25503)
static void C_fcall f_25503(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25543)
static void C_ccall f_25543(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25485)
static void C_ccall f_25485(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25456)
static void C_ccall f_25456(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25478)
static void C_ccall f_25478(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25464)
static void C_ccall f_25464(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25418)
static void C_fcall f_25418(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25375)
static void C_fcall f_25375(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25386)
static void C_ccall f_25386(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25390)
static void C_ccall f_25390(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25394)
static void C_ccall f_25394(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25398)
static void C_ccall f_25398(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25382)
static void C_ccall f_25382(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25342)
static void C_fcall f_25342(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25337)
static void C_fcall f_25337(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25332)
static void C_fcall f_25332(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_25164)
static void C_ccall f_25164(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_25175)
static void C_ccall f_25175(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25190)
static void C_ccall f_25190(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25126)
static void C_ccall f_25126(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_25137)
static void C_ccall f_25137(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25152)
static void C_ccall f_25152(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25059)
static void C_ccall f_25059(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_25079)
static void C_fcall f_25079(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25089)
static void C_ccall f_25089(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25102)
static void C_ccall f_25102(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25070)
static void C_ccall f_25070(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25077)
static void C_ccall f_25077(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24866)
static void C_ccall f_24866(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_24926)
static void C_fcall f_24926(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_24936)
static void C_ccall f_24936(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25050)
static void C_ccall f_25050(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25015)
static void C_ccall f_25015(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25007)
static void C_ccall f_25007(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24978)
static void C_ccall f_24978(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24956)
static void C_ccall f_24956(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24959)
static void C_ccall f_24959(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24947)
static void C_ccall f_24947(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24873)
static void C_ccall f_24873(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24924)
static void C_ccall f_24924(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24916)
static void C_ccall f_24916(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24876)
static void C_ccall f_24876(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24887)
static void C_ccall f_24887(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24891)
static void C_ccall f_24891(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24883)
static void C_ccall f_24883(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24724)
static void C_ccall f_24724(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_24772)
static void C_fcall f_24772(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_24782)
static void C_ccall f_24782(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24793)
static void C_ccall f_24793(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24830)
static void C_ccall f_24830(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24805)
static void C_ccall f_24805(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24796)
static void C_ccall f_24796(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24734)
static void C_ccall f_24734(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24770)
static void C_ccall f_24770(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24741)
static void C_ccall f_24741(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24373)
static void C_ccall f_24373(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_24380)
static void C_ccall f_24380(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24614)
static void C_fcall f_24614(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_24624)
static void C_ccall f_24624(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24635)
static void C_ccall f_24635(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24647)
static void C_fcall f_24647(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24650)
static void C_ccall f_24650(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24638)
static void C_ccall f_24638(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24386)
static void C_ccall f_24386(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24612)
static void C_ccall f_24612(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24608)
static void C_ccall f_24608(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24554)
static void C_fcall f_24554(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24519)
static void C_fcall f_24519(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24535)
static void C_fcall f_24535(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24490)
static void C_fcall f_24490(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24414)
static void C_ccall f_24414(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24417)
static void C_ccall f_24417(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24481)
static void C_ccall f_24481(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24477)
static void C_ccall f_24477(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24397)
static void C_fcall f_24397(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24408)
static void C_ccall f_24408(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24404)
static void C_ccall f_24404(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24326)
static void C_ccall f_24326(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_24359)
static void C_ccall f_24359(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_24341)
static void C_ccall f_24341(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24353)
static void C_ccall f_24353(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23944)
static void C_ccall f_23944(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_24153)
static void C_fcall f_24153(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_24163)
static void C_ccall f_24163(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24174)
static void C_ccall f_24174(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24294)
static void C_ccall f_24294(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24273)
static void C_ccall f_24273(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24252)
static void C_ccall f_24252(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24231)
static void C_ccall f_24231(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24210)
static void C_ccall f_24210(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24189)
static void C_ccall f_24189(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24177)
static void C_ccall f_24177(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23954)
static void C_ccall f_23954(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23957)
static void C_fcall f_23957(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24120)
static void C_fcall f_24120(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23960)
static void C_fcall f_23960(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24111)
static void C_ccall f_24111(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24091)
static void C_ccall f_24091(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23963)
static void C_fcall f_23963(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24056)
static void C_ccall f_24056(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24073)
static void C_ccall f_24073(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23966)
static void C_fcall f_23966(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24005)
static void C_ccall f_24005(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24039)
static void C_ccall f_24039(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24023)
static void C_ccall f_24023(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24008)
static void C_fcall f_24008(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23973)
static void C_fcall f_23973(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23984)
static void C_ccall f_23984(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23988)
static void C_ccall f_23988(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23980)
static void C_ccall f_23980(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23862)
static void C_ccall f_23862(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_23866)
static void C_ccall f_23866(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23884)
static void C_ccall f_23884(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23702)
static void C_fcall f_23702(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_23710)
static void C_fcall f_23710(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_23720)
static void C_ccall f_23720(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23758)
static void C_ccall f_23758(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23761)
static void C_ccall f_23761(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23764)
static void C_ccall f_23764(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23839)
static void C_fcall f_23839(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23849)
static void C_ccall f_23849(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23767)
static void C_ccall f_23767(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23770)
static void C_ccall f_23770(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23773)
static void C_ccall f_23773(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23793)
static void C_fcall f_23793(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23803)
static void C_ccall f_23803(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23806)
static void C_ccall f_23806(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23809)
static void C_ccall f_23809(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23776)
static void C_ccall f_23776(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23779)
static void C_ccall f_23779(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23696)
static void C_fcall f_23696(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23690)
static void C_fcall f_23690(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23684)
static void C_fcall f_23684(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23613)
static void C_fcall f_23613(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23654)
static void C_ccall f_23654(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23658)
static void C_ccall f_23658(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23662)
static void C_ccall f_23662(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23666)
static void C_ccall f_23666(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23670)
static void C_ccall f_23670(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23674)
static void C_ccall f_23674(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23678)
static void C_ccall f_23678(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23682)
static void C_ccall f_23682(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23615)
static void C_fcall f_23615(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23621)
static void C_fcall f_23621(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23643)
static void C_ccall f_23643(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23632)
static void C_ccall f_23632(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23462)
static void C_fcall f_23462(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23477)
static void C_fcall f_23477(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23490)
static void C_ccall f_23490(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23450)
static void C_ccall f_23450(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23438)
static void C_ccall f_23438(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23426)
static void C_ccall f_23426(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23420)
static void C_fcall f_23420(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23414)
static void C_ccall f_23414(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23402)
static void C_ccall f_23402(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23390)
static void C_ccall f_23390(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23378)
static void C_ccall f_23378(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23366)
static void C_ccall f_23366(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23360)
static void C_fcall f_23360(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23324)
static void C_ccall f_23324(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_23318)
static void C_ccall f_23318(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_23271)
static void C_ccall f_23271(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23275)
static void C_ccall f_23275(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23291)
static void C_ccall f_23291(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23300)
static void C_ccall f_23300(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23278)
static void C_ccall f_23278(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23262)
static void C_ccall f_23262(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23266)
static void C_ccall f_23266(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23109)
static void C_ccall f_23109(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_23109)
static void C_ccall f_23109r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_23236)
static void C_fcall f_23236(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23249)
static void C_ccall f_23249(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23231)
static void C_ccall f_23231(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23112)
static void C_fcall f_23112(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_23228)
static void C_ccall f_23228(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23212)
static void C_ccall f_23212(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23140)
static void C_ccall f_23140(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23148)
static void C_fcall f_23148(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23158)
static void C_ccall f_23158(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23161)
static void C_ccall f_23161(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23143)
static void C_ccall f_23143(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22932)
static void C_ccall f_22932(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_22936)
static void C_ccall f_22936(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22941)
static void C_ccall f_22941(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22944)
static void C_fcall f_22944(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20756)
static void C_ccall f_20756(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20769)
static void C_ccall f_20769(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_20776)
static void C_fcall f_20776(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20783)
static void C_ccall f_20783(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20762)
static void C_ccall f_20762(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22948)
static void C_ccall f_22948(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22985)
static void C_ccall f_22985(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23078)
static void C_fcall f_23078(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23088)
static void C_fcall f_23088(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22991)
static void C_ccall f_22991(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23048)
static void C_fcall f_23048(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23058)
static void C_fcall f_23058(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22999)
static void C_ccall f_22999(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23013)
static void C_ccall f_23013(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23017)
static void C_ccall f_23017(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23021)
static void C_ccall f_23021(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23025)
static void C_ccall f_23025(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23032)
static void C_ccall f_23032(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23009)
static void C_ccall f_23009(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23002)
static void C_ccall f_23002(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22951)
static void C_ccall f_22951(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21883)
static void C_ccall f_21883(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_21896)
static void C_ccall f_21896(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21946)
static void C_ccall f_21946(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22043)
static void C_ccall f_22043(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22111)
static void C_ccall f_22111(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22368)
static void C_ccall f_22368(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22118)
static void C_fcall f_22118(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22356)
static void C_ccall f_22356(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22307)
static void C_ccall f_22307(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22313)
static void C_ccall f_22313(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22337)
static void C_ccall f_22337(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22333)
static void C_ccall f_22333(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22321)
static void C_ccall f_22321(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22121)
static void C_fcall f_22121(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22283)
static void C_ccall f_22283(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22287)
static void C_ccall f_22287(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22124)
static void C_fcall f_22124(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22260)
static void C_ccall f_22260(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22264)
static void C_ccall f_22264(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22127)
static void C_fcall f_22127(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22237)
static void C_ccall f_22237(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22241)
static void C_ccall f_22241(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22130)
static void C_fcall f_22130(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22162)
static void C_ccall f_22162(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22180)
static void C_ccall f_22180(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22198)
static void C_ccall f_22198(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22216)
static void C_ccall f_22216(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22133)
static void C_fcall f_22133(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22137)
static void C_ccall f_22137(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22047)
static void C_ccall f_22047(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22051)
static void C_ccall f_22051(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22055)
static void C_ccall f_22055(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21950)
static void C_ccall f_21950(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21954)
static void C_ccall f_21954(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21958)
static void C_ccall f_21958(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21977)
static void C_ccall f_21977(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21981)
static void C_ccall f_21981(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21961)
static void C_fcall f_21961(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21965)
static void C_ccall f_21965(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21900)
static void C_ccall f_21900(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21904)
static void C_ccall f_21904(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21908)
static void C_ccall f_21908(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21890)
static void C_fcall f_21890(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21705)
static void C_fcall f_21705(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21717)
static void C_fcall f_21717(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21736)
static void C_ccall f_21736(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21754)
static void C_fcall f_21754(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_21786)
static void C_ccall f_21786(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21789)
static void C_fcall f_21789(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21782)
static void C_ccall f_21782(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21768)
static void C_ccall f_21768(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21739)
static void C_ccall f_21739(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21684)
static void C_fcall f_21684(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21691)
static void C_ccall f_21691(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21694)
static void C_ccall f_21694(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21700)
static void C_ccall f_21700(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21619)
static void C_fcall f_21619(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21628)
static void C_fcall f_21628(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21651)
static void C_ccall f_21651(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21641)
static void C_fcall f_21641(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21575)
static void C_fcall f_21575(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21563)
static void C_fcall f_21563(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21461)
static void C_fcall f_21461(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21413)
static void C_fcall f_21413(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20794)
static void C_fcall f_20794(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_20798)
static void C_ccall f_20798(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20801)
static void C_ccall f_20801(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21227)
static void C_ccall f_21227(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21223)
static void C_ccall f_21223(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21219)
static void C_ccall f_21219(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20804)
static void C_fcall f_20804(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20927)
static void C_ccall f_20927(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20160)
static void C_ccall f_20160(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20933)
static void C_fcall f_20933(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20176)
static void C_ccall f_20176(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21021)
static void C_fcall f_21021(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21091)
static void C_ccall f_21091(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20192)
static void C_ccall f_20192(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21094)
static void C_fcall f_21094(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20224)
static void C_ccall f_20224(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21172)
static void C_fcall f_21172(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21198)
static void C_ccall f_21198(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_21192)
static void C_ccall f_21192(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21181)
static void C_ccall f_21181(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21123)
static void C_fcall f_21123(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21133)
static void C_ccall f_21133(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21159)
static void C_ccall f_21159(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_21153)
static void C_ccall f_21153(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21136)
static void C_ccall f_21136(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21146)
static void C_ccall f_21146(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21139)
static void C_fcall f_21139(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21100)
static void C_ccall f_21100(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21109)
static void C_ccall f_21109(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21103)
static void C_fcall f_21103(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21027)
static void C_ccall f_21027(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21045)
static void C_fcall f_21045(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21078)
static void C_ccall f_21078(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_21064)
static void C_ccall f_21064(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21072)
static void C_ccall f_21072(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21055)
static void C_ccall f_21055(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21030)
static void C_ccall f_21030(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20942)
static void C_ccall f_20942(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20964)
static void C_fcall f_20964(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21011)
static void C_ccall f_21011(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_20997)
static void C_ccall f_20997(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21005)
static void C_ccall f_21005(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20977)
static void C_ccall f_20977(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20980)
static void C_fcall f_20980(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20945)
static void C_ccall f_20945(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20962)
static void C_ccall f_20962(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20948)
static void C_fcall f_20948(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20813)
static void C_ccall f_20813(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20819)
static void C_ccall f_20819(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20877)
static void C_ccall f_20877(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20880)
static void C_ccall f_20880(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20901)
static void C_ccall f_20901(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_20912)
static void C_ccall f_20912(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20891)
static void C_ccall f_20891(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20825)
static void C_ccall f_20825(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20835)
static void C_ccall f_20835(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20871)
static void C_ccall f_20871(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20841)
static void C_ccall f_20841(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20856)
static void C_ccall f_20856(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20860)
static void C_ccall f_20860(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20864)
static void C_ccall f_20864(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20848)
static void C_ccall f_20848(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20690)
static void C_fcall f_20690(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20692)
static void C_ccall f_20692(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_20740)
static void C_ccall f_20740(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20696)
static void C_ccall f_20696(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20699)
static void C_fcall f_20699(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20704)
static void C_fcall f_20704(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20725)
static void C_ccall f_20725(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20682)
static void C_fcall f_20682(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20684)
static void C_ccall f_20684(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_20474)
static void C_fcall f_20474(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_20491)
static void C_ccall f_20491(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20495)
static void C_ccall f_20495(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20441)
static void C_fcall f_20441(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_20448)
static void C_ccall f_20448(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20392)
static void C_ccall f_20392(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20399)
static void C_ccall f_20399(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20457)
static void C_ccall f_20457(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20680)
static void C_ccall f_20680(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20657)
static void C_ccall f_20657(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20673)
static void C_ccall f_20673(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20519)
static void C_ccall f_20519(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20522)
static void C_ccall f_20522(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20546)
static void C_ccall f_20546(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20603)
static void C_ccall f_20603(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20609)
static void C_ccall f_20609(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20618)
static void C_ccall f_20618(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20627)
static void C_ccall f_20627(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20636)
static void C_ccall f_20636(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20645)
static void C_ccall f_20645(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20597)
static void C_ccall f_20597(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20552)
static void C_ccall f_20552(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20558)
static void C_ccall f_20558(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20564)
static void C_ccall f_20564(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20570)
static void C_ccall f_20570(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20576)
static void C_ccall f_20576(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20582)
static void C_ccall f_20582(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20423)
static void C_fcall f_20423(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_20430)
static void C_ccall f_20430(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20413)
static void C_fcall f_20413(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_20401)
static void C_fcall f_20401(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20369)
static void C_fcall f_20369(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20376)
static void C_ccall f_20376(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20383)
static void C_ccall f_20383(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20353)
static void C_fcall f_20353(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20360)
static void C_ccall f_20360(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20367)
static void C_ccall f_20367(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20341)
static void C_fcall f_20341(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20323)
static void C_fcall f_20323(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20305)
static void C_fcall f_20305(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20290)
static void C_fcall f_20290(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20284)
static void C_fcall f_20284(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_20272)
static void C_fcall f_20272(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20254)
static void C_fcall f_20254(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20233)
static void C_fcall f_20233(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20201)
static void C_fcall f_20201(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20208)
static void C_ccall f_20208(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20143)
static void C_fcall f_20143(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20151)
static void C_ccall f_20151(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20133)
static void C_fcall f_20133(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20141)
static void C_ccall f_20141(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20127)
static void C_fcall f_20127(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20115)
static void C_fcall f_20115(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20112)
static void C_ccall f_20112(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20091)
static void C_fcall f_20091(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20004)
static void C_fcall f_20004(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19983)
static void C_fcall f_19983(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_19973)
static void C_fcall f_19973(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19961)
static void C_fcall f_19961(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19932)
static void C_ccall f_19932(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19920)
static void C_fcall f_19920(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19902)
static void C_fcall f_19902(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19884)
static void C_fcall f_19884(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19863)
static void C_ccall f_19863(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_18841)
static void C_ccall f_18841(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_18841)
static void C_ccall f_18841r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_19840)
static void C_ccall f_19840(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19855)
static void C_ccall f_19855(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19847)
static void C_ccall f_19847(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19811)
static void C_ccall f_19811(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19815)
static void C_ccall f_19815(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19776)
static void C_ccall f_19776(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19780)
static void C_ccall f_19780(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18851)
static void C_fcall f_18851(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19740)
static void C_ccall f_19740(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19755)
static void C_ccall f_19755(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19747)
static void C_ccall f_19747(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19711)
static void C_ccall f_19711(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19715)
static void C_ccall f_19715(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19676)
static void C_ccall f_19676(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19680)
static void C_ccall f_19680(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18854)
static void C_fcall f_18854(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18857)
static void C_ccall f_18857(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18862)
static void C_ccall f_18862(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19569)
static void C_fcall f_19569(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19592)
static void C_fcall f_19592(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_19645)
static void C_ccall f_19645(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19627)
static void C_fcall f_19627(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19620)
static void C_ccall f_19620(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19602)
static void C_ccall f_19602(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19579)
static void C_ccall f_19579(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19056)
static void C_ccall f_19056(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19531)
static void C_fcall f_19531(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19553)
static void C_ccall f_19553(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19537)
static void C_ccall f_19537(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_19545)
static void C_ccall f_19545(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19549)
static void C_ccall f_19549(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19535)
static void C_ccall f_19535(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19525)
static void C_ccall f_19525(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19059)
static void C_fcall f_19059(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19402)
static void C_fcall f_19402(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_19426)
static void C_ccall f_19426(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19488)
static void C_fcall f_19488(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_19429)
static void C_ccall f_19429(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19445)
static void C_fcall f_19445(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19470)
static void C_ccall f_19470(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19436)
static void C_ccall f_19436(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19413)
static void C_ccall f_19413(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19062)
static void C_ccall f_19062(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19388)
static void C_ccall f_19388(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_19066)
static void C_ccall f_19066(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19110)
static void C_ccall f_19110(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19113)
static void C_ccall f_19113(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19369)
static void C_fcall f_19369(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19379)
static void C_ccall f_19379(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19116)
static void C_ccall f_19116(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19307)
static void C_fcall f_19307(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19317)
static void C_ccall f_19317(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19320)
static void C_ccall f_19320(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19340)
static void C_ccall f_19340(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19342)
static void C_fcall f_19342(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_19352)
static void C_ccall f_19352(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19326)
static void C_ccall f_19326(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19329)
static void C_ccall f_19329(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19119)
static void C_ccall f_19119(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19127)
static void C_fcall f_19127(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19140)
static void C_ccall f_19140(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19014)
static void C_ccall f_19014(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19023)
static void C_fcall f_19023(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19045)
static void C_ccall f_19045(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19034)
static void C_ccall f_19034(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19143)
static void C_ccall f_19143(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19278)
static void C_ccall f_19278(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19280)
static void C_fcall f_19280(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_19290)
static void C_ccall f_19290(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19149)
static void C_ccall f_19149(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19251)
static void C_ccall f_19251(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19253)
static void C_fcall f_19253(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_19263)
static void C_ccall f_19263(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19152)
static void C_ccall f_19152(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19164)
static void C_fcall f_19164(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19190)
static void C_ccall f_19190(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19196)
static void C_ccall f_19196(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19202)
static void C_ccall f_19202(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19212)
static void C_ccall f_19212(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19214)
static void C_fcall f_19214(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_19224)
static void C_ccall f_19224(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19205)
static void C_ccall f_19205(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19177)
static void C_ccall f_19177(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19155)
static void C_ccall f_19155(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19122)
static void C_ccall f_19122(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19069)
static void C_ccall f_19069(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19092)
static void C_ccall f_19092(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19081)
static void C_ccall f_19081(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18946)
static void C_fcall f_18946(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_18994)
static void C_ccall f_18994(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18956)
static void C_ccall f_18956(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18984)
static void C_ccall f_18984(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18959)
static void C_ccall f_18959(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18864)
static void C_fcall f_18864(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_18936)
static void C_ccall f_18936(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18868)
static void C_ccall f_18868(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18886)
static void C_ccall f_18886(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18918)
static void C_ccall f_18918(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18747)
static void C_ccall f_18747(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18751)
static void C_ccall f_18751(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18780)
static void C_ccall f_18780(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18785)
static void C_fcall f_18785(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18810)
static void C_fcall f_18810(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18795)
static void C_ccall f_18795(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18229)
static void C_ccall f_18229(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_18229)
static void C_ccall f_18229r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_18500)
static void C_ccall f_18500(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18504)
static void C_ccall f_18504(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18509)
static void C_ccall f_18509(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_18509)
static void C_ccall f_18509r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_18715)
static void C_ccall f_18715(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18730)
static void C_ccall f_18730(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18722)
static void C_ccall f_18722(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18686)
static void C_ccall f_18686(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18690)
static void C_ccall f_18690(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18651)
static void C_ccall f_18651(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18655)
static void C_ccall f_18655(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18513)
static void C_fcall f_18513(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18615)
static void C_ccall f_18615(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18630)
static void C_ccall f_18630(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18622)
static void C_ccall f_18622(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18586)
static void C_ccall f_18586(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18590)
static void C_ccall f_18590(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18551)
static void C_ccall f_18551(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18555)
static void C_ccall f_18555(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18516)
static void C_fcall f_18516(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18519)
static void C_ccall f_18519(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18522)
static void C_fcall f_18522(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18491)
static void C_ccall f_18491(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18233)
static void C_ccall f_18233(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18460)
static void C_ccall f_18460(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18475)
static void C_ccall f_18475(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18467)
static void C_ccall f_18467(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18431)
static void C_ccall f_18431(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18435)
static void C_ccall f_18435(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18396)
static void C_ccall f_18396(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18400)
static void C_ccall f_18400(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18236)
static void C_fcall f_18236(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18360)
static void C_ccall f_18360(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18375)
static void C_ccall f_18375(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18367)
static void C_ccall f_18367(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18331)
static void C_ccall f_18331(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18335)
static void C_ccall f_18335(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18296)
static void C_ccall f_18296(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18300)
static void C_ccall f_18300(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18239)
static void C_fcall f_18239(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18242)
static void C_ccall f_18242(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18245)
static void C_ccall f_18245(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18257)
static void C_ccall f_18257(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_18275)
static void C_ccall f_18275(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18263)
static void C_ccall f_18263(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18251)
static void C_ccall f_18251(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18166)
static void C_fcall f_18166(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17826)
static void C_ccall f_17826(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18008)
static void C_ccall f_18008(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18012)
static void C_ccall f_18012(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18014)
static void C_fcall f_18014(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_17939)
static void C_fcall f_17939(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_17949)
static void C_fcall f_17949(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17956)
static void C_fcall f_17956(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18024)
static void C_ccall f_18024(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18027)
static void C_ccall f_18027(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18031)
static void C_ccall f_18031(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18051)
static void C_fcall f_18051(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18067)
static void C_ccall f_18067(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18034)
static void C_ccall f_18034(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17829)
static void C_fcall f_17829(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_17841)
static void C_fcall f_17841(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_17877)
static void C_ccall f_17877(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17897)
static void C_ccall f_17897(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17902)
static void C_fcall f_17902(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_17339)
static void C_ccall f_17339(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_17339)
static void C_ccall f_17339r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_17266)
static void C_fcall f_17266(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_17111)
static void C_ccall f_17111(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17117)
static void C_ccall f_17117(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17202)
static void C_fcall f_17202(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17129)
static void C_ccall f_17129(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17145)
static void C_ccall f_17145(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_17149)
static void C_fcall f_17149(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17152)
static void C_fcall f_17152(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17132)
static void C_ccall f_17132(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17143)
static void C_ccall f_17143(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17283)
static void C_ccall f_17283(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17820)
static void C_ccall f_17820(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17343)
static void C_ccall f_17343(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17789)
static void C_ccall f_17789(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17804)
static void C_ccall f_17804(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17796)
static void C_ccall f_17796(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17760)
static void C_ccall f_17760(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17764)
static void C_ccall f_17764(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17725)
static void C_ccall f_17725(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17729)
static void C_ccall f_17729(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17690)
static void C_ccall f_17690(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17694)
static void C_ccall f_17694(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17346)
static void C_fcall f_17346(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17654)
static void C_ccall f_17654(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17669)
static void C_ccall f_17669(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17661)
static void C_ccall f_17661(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17625)
static void C_ccall f_17625(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17629)
static void C_ccall f_17629(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17590)
static void C_ccall f_17590(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17594)
static void C_ccall f_17594(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17555)
static void C_ccall f_17555(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17559)
static void C_ccall f_17559(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17349)
static void C_fcall f_17349(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17519)
static void C_ccall f_17519(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17534)
static void C_ccall f_17534(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17526)
static void C_ccall f_17526(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17490)
static void C_ccall f_17490(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17494)
static void C_ccall f_17494(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17455)
static void C_ccall f_17455(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17459)
static void C_ccall f_17459(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17420)
static void C_ccall f_17420(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17424)
static void C_ccall f_17424(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17352)
static void C_fcall f_17352(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17355)
static void C_ccall f_17355(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17358)
static void C_ccall f_17358(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17391)
static void C_ccall f_17391(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_17399)
static void C_ccall f_17399(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17364)
static void C_ccall f_17364(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17377)
static void C_ccall f_17377(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17367)
static void C_fcall f_17367(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17370)
static void C_ccall f_17370(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16906)
static void C_ccall f_16906(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_16910)
static void C_ccall f_16910(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16913)
static void C_ccall f_16913(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16916)
static void C_ccall f_16916(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17085)
static void C_ccall f_17085(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17098)
static void C_ccall f_17098(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17102)
static void C_ccall f_17102(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16922)
static void C_ccall f_16922(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17078)
static void C_ccall f_17078(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17059)
static void C_ccall f_17059(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17066)
static void C_ccall f_17066(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17070)
static void C_ccall f_17070(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16928)
static void C_fcall f_16928(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16934)
static void C_ccall f_16934(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17018)
static void C_ccall f_17018(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17020)
static void C_fcall f_17020(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_17042)
static void C_ccall f_17042(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17049)
static void C_ccall f_17049(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17053)
static void C_ccall f_17053(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17039)
static void C_fcall f_17039(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17035)
static void C_ccall f_17035(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16976)
static void C_ccall f_16976(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16993)
static void C_fcall f_16993(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_17003)
static void C_ccall f_17003(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16979)
static void C_ccall f_16979(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16938)
static void C_fcall f_16938(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_16946)
static void C_ccall f_16946(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16948)
static void C_fcall f_16948(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_16969)
static void C_ccall f_16969(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16794)
static void C_fcall f_16794(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_16904)
static void C_ccall f_16904(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16863)
static void C_fcall f_16863(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_16896)
static void C_ccall f_16896(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16892)
static void C_ccall f_16892(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16877)
static void C_ccall f_16877(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16801)
static void C_ccall f_16801(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16809)
static void C_fcall f_16809(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_16854)
static void C_ccall f_16854(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16842)
static void C_ccall f_16842(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16826)
static void C_ccall f_16826(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16027)
static void C_ccall f_16027(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_16027)
static void C_ccall f_16027r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_16344)
static void C_ccall f_16344(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_16351)
static void C_fcall f_16351(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16756)
static void C_ccall f_16756(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16771)
static void C_ccall f_16771(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16763)
static void C_ccall f_16763(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16727)
static void C_ccall f_16727(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16731)
static void C_ccall f_16731(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16692)
static void C_ccall f_16692(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16696)
static void C_ccall f_16696(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16657)
static void C_ccall f_16657(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16661)
static void C_ccall f_16661(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16354)
static void C_fcall f_16354(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16621)
static void C_ccall f_16621(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16636)
static void C_ccall f_16636(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16628)
static void C_ccall f_16628(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16592)
static void C_ccall f_16592(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16596)
static void C_ccall f_16596(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16557)
static void C_ccall f_16557(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16561)
static void C_ccall f_16561(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16522)
static void C_ccall f_16522(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16526)
static void C_ccall f_16526(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16357)
static void C_fcall f_16357(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16486)
static void C_ccall f_16486(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16501)
static void C_ccall f_16501(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16493)
static void C_ccall f_16493(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16457)
static void C_ccall f_16457(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16461)
static void C_ccall f_16461(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16422)
static void C_ccall f_16422(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16426)
static void C_ccall f_16426(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16387)
static void C_ccall f_16387(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16391)
static void C_ccall f_16391(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16360)
static void C_fcall f_16360(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16363)
static void C_ccall f_16363(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16031)
static void C_ccall f_16031(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16034)
static void C_ccall f_16034(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16308)
static void C_ccall f_16308(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_16312)
static void C_ccall f_16312(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16315)
static void C_ccall f_16315(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16318)
static void C_ccall f_16318(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16321)
static void C_ccall f_16321(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16334)
static void C_ccall f_16334(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16324)
static void C_fcall f_16324(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16040)
static void C_ccall f_16040(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16047)
static void C_fcall f_16047(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16278)
static void C_ccall f_16278(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16293)
static void C_ccall f_16293(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16285)
static void C_ccall f_16285(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16249)
static void C_ccall f_16249(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16253)
static void C_ccall f_16253(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16214)
static void C_ccall f_16214(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16218)
static void C_ccall f_16218(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16050)
static void C_fcall f_16050(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16178)
static void C_ccall f_16178(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16193)
static void C_ccall f_16193(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16185)
static void C_ccall f_16185(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16149)
static void C_ccall f_16149(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16153)
static void C_ccall f_16153(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16114)
static void C_ccall f_16114(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16118)
static void C_ccall f_16118(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16053)
static void C_fcall f_16053(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16056)
static void C_ccall f_16056(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16071)
static void C_ccall f_16071(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_16093)
static void C_ccall f_16093(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16077)
static void C_ccall f_16077(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_16085)
static void C_ccall f_16085(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16059)
static void C_ccall f_16059(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16062)
static void C_ccall f_16062(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15944)
static void C_fcall f_15944(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15935)
static void C_fcall f_15935(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15926)
static void C_fcall f_15926(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15908)
static void C_fcall f_15908(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15890)
static void C_fcall f_15890(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15872)
static void C_fcall f_15872(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15863)
static void C_fcall f_15863(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15854)
static void C_fcall f_15854(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15632)
static void C_ccall f_15632(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15682)
static void C_ccall f_15682(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15827)
static void C_ccall f_15827(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15708)
static void C_ccall f_15708(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15823)
static void C_ccall f_15823(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15808)
static void C_ccall f_15808(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15789)
static void C_ccall f_15789(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15762)
static void C_ccall f_15762(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15715)
static void C_ccall f_15715(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15685)
static void C_fcall f_15685(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15635)
static void C_ccall f_15635(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_15641)
static void C_fcall f_15641(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15657)
static void C_ccall f_15657(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15660)
static void C_ccall f_15660(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15158)
static void C_ccall f_15158(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_15158)
static void C_ccall f_15158r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_15622)
static void C_ccall f_15622(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15162)
static void C_fcall f_15162(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15594)
static void C_ccall f_15594(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15609)
static void C_ccall f_15609(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15601)
static void C_ccall f_15601(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15565)
static void C_ccall f_15565(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15569)
static void C_ccall f_15569(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15530)
static void C_ccall f_15530(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15534)
static void C_ccall f_15534(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15495)
static void C_ccall f_15495(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15499)
static void C_ccall f_15499(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15165)
static void C_fcall f_15165(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15459)
static void C_ccall f_15459(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15474)
static void C_ccall f_15474(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15466)
static void C_ccall f_15466(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15430)
static void C_ccall f_15430(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15434)
static void C_ccall f_15434(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15395)
static void C_ccall f_15395(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15399)
static void C_ccall f_15399(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15360)
static void C_ccall f_15360(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15364)
static void C_ccall f_15364(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15168)
static void C_fcall f_15168(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15324)
static void C_ccall f_15324(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15339)
static void C_ccall f_15339(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15331)
static void C_ccall f_15331(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15295)
static void C_ccall f_15295(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15299)
static void C_ccall f_15299(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15260)
static void C_ccall f_15260(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15264)
static void C_ccall f_15264(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15225)
static void C_ccall f_15225(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15229)
static void C_ccall f_15229(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15171)
static void C_fcall f_15171(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15174)
static void C_ccall f_15174(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15177)
static void C_ccall f_15177(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15192)
static void C_ccall f_15192(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_15204)
static void C_ccall f_15204(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15183)
static void C_ccall f_15183(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15186)
static void C_ccall f_15186(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15082)
static void C_ccall f_15082(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15086)
static void C_ccall f_15086(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15105)
static void C_ccall f_15105(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15115)
static void C_ccall f_15115(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15117)
static void C_fcall f_15117(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_15134)
static void C_ccall f_15134(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15137)
static void C_ccall f_15137(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15148)
static void C_ccall f_15148(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15089)
static void C_ccall f_15089(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14819)
static void C_ccall f_14819(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_14819)
static void C_ccall f_14819r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_15072)
static void C_ccall f_15072(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14823)
static void C_fcall f_14823(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15044)
static void C_ccall f_15044(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15059)
static void C_ccall f_15059(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15051)
static void C_ccall f_15051(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15015)
static void C_ccall f_15015(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15019)
static void C_ccall f_15019(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14980)
static void C_ccall f_14980(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14984)
static void C_ccall f_14984(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14826)
static void C_fcall f_14826(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14944)
static void C_ccall f_14944(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14959)
static void C_ccall f_14959(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14951)
static void C_ccall f_14951(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14915)
static void C_ccall f_14915(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14919)
static void C_ccall f_14919(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14880)
static void C_ccall f_14880(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14884)
static void C_ccall f_14884(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14829)
static void C_fcall f_14829(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14832)
static void C_ccall f_14832(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14835)
static void C_ccall f_14835(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14847)
static void C_ccall f_14847(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_14859)
static void C_ccall f_14859(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14841)
static void C_ccall f_14841(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14783)
static void C_ccall f_14783(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14787)
static void C_ccall f_14787(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14809)
static void C_ccall f_14809(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14803)
static void C_ccall f_14803(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14796)
static void C_ccall f_14796(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14536)
static void C_ccall f_14536(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_14536)
static void C_ccall f_14536r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_14540)
static void C_fcall f_14540(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14753)
static void C_ccall f_14753(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14768)
static void C_ccall f_14768(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14760)
static void C_ccall f_14760(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14724)
static void C_ccall f_14724(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14728)
static void C_ccall f_14728(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14689)
static void C_ccall f_14689(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14693)
static void C_ccall f_14693(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14543)
static void C_fcall f_14543(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14653)
static void C_ccall f_14653(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14668)
static void C_ccall f_14668(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14660)
static void C_ccall f_14660(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14624)
static void C_ccall f_14624(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14628)
static void C_ccall f_14628(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14589)
static void C_ccall f_14589(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14593)
static void C_ccall f_14593(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14546)
static void C_fcall f_14546(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14549)
static void C_ccall f_14549(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14552)
static void C_ccall f_14552(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14560)
static void C_ccall f_14560(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_14568)
static void C_ccall f_14568(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14558)
static void C_ccall f_14558(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14321)
static void C_ccall f_14321(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14325)
static void C_ccall f_14325(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14534)
static void C_ccall f_14534(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14487)
static void C_ccall f_14487(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14499)
static void C_fcall f_14499(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14355)
static void C_ccall f_14355(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14358)
static void C_ccall f_14358(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14364)
static void C_ccall f_14364(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14367)
static void C_ccall f_14367(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14455)
static void C_fcall f_14455(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14370)
static void C_fcall f_14370(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14449)
static void C_ccall f_14449(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14376)
static void C_ccall f_14376(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14379)
static void C_ccall f_14379(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14331)
static void C_ccall f_14331(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14334)
static void C_ccall f_14334(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14341)
static void C_ccall f_14341(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13851)
static void C_ccall f_13851(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_13851)
static void C_ccall f_13851r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_13855)
static void C_fcall f_13855(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14291)
static void C_ccall f_14291(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14306)
static void C_ccall f_14306(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14298)
static void C_ccall f_14298(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14262)
static void C_ccall f_14262(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14266)
static void C_ccall f_14266(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14227)
static void C_ccall f_14227(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14231)
static void C_ccall f_14231(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14192)
static void C_ccall f_14192(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14196)
static void C_ccall f_14196(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13858)
static void C_fcall f_13858(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14156)
static void C_ccall f_14156(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14171)
static void C_ccall f_14171(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14163)
static void C_ccall f_14163(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14127)
static void C_ccall f_14127(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14131)
static void C_ccall f_14131(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14092)
static void C_ccall f_14092(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14096)
static void C_ccall f_14096(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14057)
static void C_ccall f_14057(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14061)
static void C_ccall f_14061(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13861)
static void C_fcall f_13861(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14021)
static void C_ccall f_14021(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14036)
static void C_ccall f_14036(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14028)
static void C_ccall f_14028(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13992)
static void C_ccall f_13992(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13996)
static void C_ccall f_13996(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13957)
static void C_ccall f_13957(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13961)
static void C_ccall f_13961(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13922)
static void C_ccall f_13922(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13926)
static void C_ccall f_13926(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13864)
static void C_fcall f_13864(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13867)
static void C_ccall f_13867(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13870)
static void C_ccall f_13870(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13893)
static void C_ccall f_13893(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_13901)
static void C_ccall f_13901(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13876)
static void C_ccall f_13876(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13879)
static void C_ccall f_13879(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13771)
static void C_fcall f_13771(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_13762)
static void C_fcall f_13762(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13690)
static void C_ccall f_13690(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_13694)
static void C_ccall f_13694(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13697)
static void C_fcall f_13697(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13435)
static void C_ccall f_13435(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_13435)
static void C_ccall f_13435r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_13439)
static void C_fcall f_13439(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13660)
static void C_ccall f_13660(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13675)
static void C_ccall f_13675(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13667)
static void C_ccall f_13667(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13631)
static void C_ccall f_13631(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13635)
static void C_ccall f_13635(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13596)
static void C_ccall f_13596(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13600)
static void C_ccall f_13600(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13442)
static void C_fcall f_13442(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13560)
static void C_ccall f_13560(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13575)
static void C_ccall f_13575(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13567)
static void C_ccall f_13567(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13531)
static void C_ccall f_13531(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13535)
static void C_ccall f_13535(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13496)
static void C_ccall f_13496(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13500)
static void C_ccall f_13500(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13445)
static void C_fcall f_13445(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13448)
static void C_ccall f_13448(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13451)
static void C_ccall f_13451(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13463)
static void C_ccall f_13463(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_13475)
static void C_ccall f_13475(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13457)
static void C_ccall f_13457(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13320)
static void C_fcall f_13320(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13433)
static void C_ccall f_13433(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13330)
static void C_ccall f_13330(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13418)
static void C_ccall f_13418(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13429)
static void C_ccall f_13429(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13425)
static void C_ccall f_13425(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13333)
static void C_ccall f_13333(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13415)
static void C_ccall f_13415(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13341)
static void C_ccall f_13341(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13405)
static void C_ccall f_13405(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13350)
static void C_ccall f_13350(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13369)
static void C_ccall f_13369(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_13398)
static void C_ccall f_13398(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13379)
static void C_ccall f_13379(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13394)
static void C_ccall f_13394(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13382)
static void C_ccall f_13382(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13353)
static void C_ccall f_13353(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13363)
static void C_ccall f_13363(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13344)
static void C_fcall f_13344(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13347)
static void C_ccall f_13347(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13274)
static void C_fcall f_13274(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_13265)
static void C_fcall f_13265(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12964)
static void C_fcall f_12964(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12971)
static void C_ccall f_12971(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13260)
static void C_ccall f_13260(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12974)
static void C_ccall f_12974(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13245)
static void C_ccall f_13245(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13237)
static void C_ccall f_13237(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13229)
static void C_ccall f_13229(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13232)
static void C_ccall f_13232(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13200)
static void C_fcall f_13200(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13223)
static void C_ccall f_13223(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13206)
static void C_fcall f_13206(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13210)
static void C_ccall f_13210(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12977)
static void C_ccall f_12977(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12983)
static void C_ccall f_12983(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13075)
static void C_ccall f_13075(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13187)
static void C_ccall f_13187(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13194)
static void C_ccall f_13194(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13098)
static void C_fcall f_13098(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13100)
static void C_fcall f_13100(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_13149)
static void C_fcall f_13149(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13184)
static void C_ccall f_13184(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13173)
static void C_ccall f_13173(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13318)
static void C_ccall f_13318(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13293)
static void C_ccall f_13293(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13314)
static void C_ccall f_13314(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13310)
static void C_ccall f_13310(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13302)
static void C_ccall f_13302(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13166)
static void C_ccall f_13166(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13159)
static void C_ccall f_13159(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13107)
static void C_ccall f_13107(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13147)
static void C_ccall f_13147(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13111)
static void C_ccall f_13111(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13143)
static void C_ccall f_13143(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13130)
static void C_ccall f_13130(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13138)
static void C_ccall f_13138(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13134)
static void C_ccall f_13134(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13114)
static void C_fcall f_13114(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13117)
static void C_ccall f_13117(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13091)
static void C_ccall f_13091(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13078)
static void C_ccall f_13078(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13087)
static void C_ccall f_13087(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13082)
static void C_ccall f_13082(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12989)
static void C_ccall f_12989(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13069)
static void C_ccall f_13069(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13049)
static void C_ccall f_13049(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13055)
static void C_ccall f_13055(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13066)
static void C_ccall f_13066(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13046)
static void C_ccall f_13046(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13034)
static void C_ccall f_13034(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13037)
static void C_ccall f_13037(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12992)
static void C_ccall f_12992(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13028)
static void C_ccall f_13028(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13023)
static void C_ccall f_13023(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12995)
static void C_ccall f_12995(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13008)
static void C_ccall f_13008(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12998)
static void C_fcall f_12998(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13001)
static void C_ccall f_13001(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13004)
static void C_ccall f_13004(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12841)
static void C_ccall f_12841(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_12841)
static void C_ccall f_12841r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_12900)
static void C_ccall f_12900(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12910)
static void C_ccall f_12910(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12912)
static void C_fcall f_12912(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_12941)
static void C_ccall f_12941(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12946)
static void C_ccall f_12946(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12931)
static void C_fcall f_12931(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12862)
static void C_fcall f_12862(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_12894)
static void C_ccall f_12894(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12822)
static void C_ccall f_12822(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12829)
static void C_ccall f_12829(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12836)
static void C_ccall f_12836(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12803)
static void C_ccall f_12803(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12810)
static void C_ccall f_12810(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12817)
static void C_ccall f_12817(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12623)
static void C_fcall f_12623(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7,C_word t8,C_word t9) C_noret;
C_noret_decl(f_12627)
static void C_ccall f_12627(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12630)
static void C_ccall f_12630(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12633)
static void C_ccall f_12633(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12636)
static void C_ccall f_12636(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12793)
static void C_ccall f_12793(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12800)
static void C_ccall f_12800(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12639)
static void C_ccall f_12639(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12642)
static void C_fcall f_12642(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12648)
static void C_ccall f_12648(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12654)
static void C_ccall f_12654(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12717)
static void C_ccall f_12717(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12731)
static void C_ccall f_12731(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12657)
static void C_fcall f_12657(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12660)
static void C_ccall f_12660(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12666)
static void C_fcall f_12666(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12679)
static void C_ccall f_12679(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12669)
static void C_ccall f_12669(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12672)
static void C_ccall f_12672(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12613)
static void C_fcall f_12613(C_word t0) C_noret;
C_noret_decl(f_12558)
static void C_fcall f_12558(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12549)
static void C_fcall f_12549(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12432)
static void C_fcall f_12432(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12423)
static void C_fcall f_12423(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12414)
static void C_ccall f_12414(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12405)
static void C_fcall f_12405(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12396)
static void C_fcall f_12396(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12378)
static void C_fcall f_12378(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12369)
static void C_fcall f_12369(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12360)
static void C_fcall f_12360(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12342)
static void C_fcall f_12342(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12333)
static void C_fcall f_12333(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12324)
static void C_fcall f_12324(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12309)
static void C_fcall f_12309(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12264)
static void C_fcall f_12264(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12246)
static void C_fcall f_12246(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12237)
static void C_fcall f_12237(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12210)
static void C_fcall f_12210(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12192)
static void C_fcall f_12192(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12174)
static void C_fcall f_12174(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12165)
static void C_fcall f_12165(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12153)
static void C_fcall f_12153(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_11840)
static void C_ccall f_11840(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_12151)
static void C_ccall f_12151(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12086)
static void C_ccall f_12086(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12088)
static void C_fcall f_12088(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_7586)
static void C_ccall f_7586(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_12103)
static void C_ccall f_12103(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12106)
static void C_fcall f_12106(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11853)
static void C_ccall f_11853(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11929)
static void C_fcall f_11929(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_12082)
static void C_ccall f_12082(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12066)
static void C_ccall f_12066(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12018)
static void C_fcall f_12018(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_12032)
static void C_fcall f_12032(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11985)
static void C_ccall f_11985(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11960)
static void C_fcall f_11960(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11856)
static void C_ccall f_11856(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11864)
static void C_fcall f_11864(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_11897)
static void C_ccall f_11897(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11133)
static void C_ccall f_11133(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_11133)
static void C_ccall f_11133r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_11817)
static void C_ccall f_11817(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11832)
static void C_ccall f_11832(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11824)
static void C_ccall f_11824(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11788)
static void C_ccall f_11788(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11792)
static void C_ccall f_11792(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11753)
static void C_ccall f_11753(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11757)
static void C_ccall f_11757(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11718)
static void C_ccall f_11718(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11722)
static void C_ccall f_11722(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11683)
static void C_ccall f_11683(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11687)
static void C_ccall f_11687(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11137)
static void C_fcall f_11137(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11647)
static void C_ccall f_11647(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11662)
static void C_ccall f_11662(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11654)
static void C_ccall f_11654(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11618)
static void C_ccall f_11618(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11622)
static void C_ccall f_11622(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11583)
static void C_ccall f_11583(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11587)
static void C_ccall f_11587(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11548)
static void C_ccall f_11548(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11552)
static void C_ccall f_11552(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11513)
static void C_ccall f_11513(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11517)
static void C_ccall f_11517(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11140)
static void C_fcall f_11140(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11477)
static void C_ccall f_11477(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11492)
static void C_ccall f_11492(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11484)
static void C_ccall f_11484(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11448)
static void C_ccall f_11448(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11452)
static void C_ccall f_11452(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11413)
static void C_ccall f_11413(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11417)
static void C_ccall f_11417(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11378)
static void C_ccall f_11378(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11382)
static void C_ccall f_11382(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11343)
static void C_ccall f_11343(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11347)
static void C_ccall f_11347(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11143)
static void C_fcall f_11143(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11307)
static void C_ccall f_11307(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11322)
static void C_ccall f_11322(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11314)
static void C_ccall f_11314(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11278)
static void C_ccall f_11278(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11282)
static void C_ccall f_11282(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11243)
static void C_ccall f_11243(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11247)
static void C_ccall f_11247(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11208)
static void C_ccall f_11208(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11212)
static void C_ccall f_11212(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11173)
static void C_ccall f_11173(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11177)
static void C_ccall f_11177(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11146)
static void C_fcall f_11146(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11149)
static void C_ccall f_11149(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10899)
static void C_fcall f_10899(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10908)
static void C_ccall f_10908(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10912)
static void C_ccall f_10912(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11114)
static void C_ccall f_11114(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_11099)
static void C_ccall f_11099(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_11081)
static void C_ccall f_11081(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_11066)
static void C_ccall f_11066(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_11016)
static void C_ccall f_11016(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10996)
static void C_ccall f_10996(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11013)
static void C_ccall f_11013(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11000)
static void C_ccall f_11000(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11006)
static void C_ccall f_11006(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10981)
static void C_ccall f_10981(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10985)
static void C_ccall f_10985(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10991)
static void C_ccall f_10991(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10967)
static void C_ccall f_10967(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10979)
static void C_ccall f_10979(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10975)
static void C_ccall f_10975(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10957)
static void C_ccall f_10957(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10965)
static void C_ccall f_10965(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10947)
static void C_ccall f_10947(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10914)
static void C_ccall f_10914(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10870)
static void C_ccall f_10870(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10874)
static void C_ccall f_10874(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10885)
static void C_ccall f_10885(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10883)
static void C_ccall f_10883(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10839)
static void C_ccall f_10839(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10843)
static void C_ccall f_10843(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10854)
static void C_ccall f_10854(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10852)
static void C_ccall f_10852(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10821)
static void C_ccall f_10821(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10829)
static void C_ccall f_10829(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10837)
static void C_ccall f_10837(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10811)
static void C_ccall f_10811(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10819)
static void C_ccall f_10819(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10752)
static void C_ccall f_10752(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10759)
static void C_ccall f_10759(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10762)
static void C_ccall f_10762(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10765)
static void C_ccall f_10765(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10770)
static void C_fcall f_10770(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10722)
static void C_ccall f_10722(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_10722)
static void C_ccall f_10722r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_10726)
static void C_ccall f_10726(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10736)
static void C_ccall f_10736(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10710)
static void C_ccall f_10710(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10692)
static void C_ccall f_10692(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10674)
static void C_ccall f_10674(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10656)
static void C_ccall f_10656(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10635)
static void C_fcall f_10635(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_10493)
static void C_ccall f_10493(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_10493)
static void C_ccall f_10493r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_10497)
static void C_fcall f_10497(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10566)
static void C_ccall f_10566(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_10609)
static void C_ccall f_10609(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10613)
static void C_ccall f_10613(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10602)
static void C_ccall f_10602(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10589)
static void C_ccall f_10589(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10508)
static void C_ccall f_10508(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_10551)
static void C_ccall f_10551(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10555)
static void C_ccall f_10555(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10544)
static void C_ccall f_10544(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10531)
static void C_ccall f_10531(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10327)
static void C_ccall f_10327(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_10428)
static void C_ccall f_10428(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10477)
static void C_ccall f_10477(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10473)
static void C_ccall f_10473(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10445)
static void C_ccall f_10445(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10380)
static void C_fcall f_10380(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10389)
static void C_fcall f_10389(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_10373)
static void C_ccall f_10373(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10192)
static void C_ccall f_10192(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10318)
static void C_ccall f_10318(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10314)
static void C_ccall f_10314(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10292)
static void C_ccall f_10292(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10222)
static void C_fcall f_10222(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10238)
static void C_fcall f_10238(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_10147)
static void C_ccall f_10147(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10190)
static void C_ccall f_10190(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10179)
static void C_ccall f_10179(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10031)
static void C_ccall f_10031(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10145)
static void C_ccall f_10145(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10046)
static void C_fcall f_10046(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_10076)
static void C_fcall f_10076(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10095)
static void C_ccall f_10095(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10080)
static void C_ccall f_10080(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10059)
static void C_fcall f_10059(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9909)
static void C_ccall f_9909(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10029)
static void C_ccall f_10029(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9924)
static void C_fcall f_9924(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_9954)
static void C_fcall f_9954(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9973)
static void C_ccall f_9973(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9958)
static void C_ccall f_9958(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9937)
static void C_fcall f_9937(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9812)
static void C_ccall f_9812(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9907)
static void C_ccall f_9907(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9827)
static void C_fcall f_9827(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_9873)
static void C_ccall f_9873(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9858)
static void C_ccall f_9858(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9840)
static void C_fcall f_9840(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9759)
static void C_fcall f_9759(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_9797)
static void C_ccall f_9797(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9804)
static void C_ccall f_9804(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9782)
static void C_ccall f_9782(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9757)
static void C_ccall f_9757(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9729)
static void C_fcall f_9729(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9731)
static void C_ccall f_9731(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9709)
static void C_ccall f_9709(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9657)
static void C_fcall f_9657(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_9694)
static void C_ccall f_9694(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9661)
static void C_ccall f_9661(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9677)
static void C_ccall f_9677(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9679)
static void C_ccall f_9679(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9443)
static void C_ccall f_9443(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...) C_noret;
C_noret_decl(f_9443)
static void C_ccall f_9443r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t5) C_noret;
C_noret_decl(f_9456)
static void C_fcall f_9456(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9538)
static void C_fcall f_9538(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9541)
static void C_ccall f_9541(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9549)
static void C_fcall f_9549(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_9561)
static void C_fcall f_9561(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9582)
static void C_ccall f_9582(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9590)
static void C_ccall f_9590(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9477)
static void C_ccall f_9477(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9482)
static void C_fcall f_9482(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9514)
static void C_ccall f_9514(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9422)
static void C_ccall f_9422(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_9422)
static void C_ccall f_9422r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_9403)
static void C_ccall f_9403(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_9403)
static void C_ccall f_9403r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_9362)
static void C_ccall f_9362(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_9362)
static void C_ccall f_9362r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_9343)
static void C_ccall f_9343(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_9343)
static void C_ccall f_9343r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_9115)
static void C_ccall f_9115(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_9115)
static void C_ccall f_9115r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_9320)
static void C_ccall f_9320(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9335)
static void C_ccall f_9335(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9327)
static void C_ccall f_9327(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9291)
static void C_ccall f_9291(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9295)
static void C_ccall f_9295(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9256)
static void C_ccall f_9256(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9260)
static void C_ccall f_9260(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9119)
static void C_fcall f_9119(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9220)
static void C_ccall f_9220(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9235)
static void C_ccall f_9235(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9227)
static void C_ccall f_9227(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9191)
static void C_ccall f_9191(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9195)
static void C_ccall f_9195(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9156)
static void C_ccall f_9156(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9160)
static void C_ccall f_9160(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9122)
static void C_fcall f_9122(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9125)
static void C_ccall f_9125(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9128)
static void C_fcall f_9128(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9073)
static void C_ccall f_9073(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_9073)
static void C_ccall f_9073r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_9102)
static void C_ccall f_9102(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9087)
static void C_ccall f_9087(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9018)
static void C_ccall f_9018(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9029)
static void C_ccall f_9029(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9031)
static void C_fcall f_9031(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_9059)
static void C_ccall f_9059(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8919)
static void C_ccall f_8919(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...) C_noret;
C_noret_decl(f_8919)
static void C_ccall f_8919r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t5) C_noret;
C_noret_decl(f_8923)
static void C_fcall f_8923(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8926)
static void C_ccall f_8926(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8991)
static void C_ccall f_8991(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8928)
static void C_fcall f_8928(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_8944)
static void C_ccall f_8944(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8691)
static void C_ccall f_8691(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_8691)
static void C_ccall f_8691r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_8896)
static void C_ccall f_8896(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8911)
static void C_ccall f_8911(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8903)
static void C_ccall f_8903(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8867)
static void C_ccall f_8867(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8871)
static void C_ccall f_8871(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8832)
static void C_ccall f_8832(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8836)
static void C_ccall f_8836(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8695)
static void C_fcall f_8695(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8796)
static void C_ccall f_8796(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8811)
static void C_ccall f_8811(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8803)
static void C_ccall f_8803(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8767)
static void C_ccall f_8767(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8771)
static void C_ccall f_8771(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8732)
static void C_ccall f_8732(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8736)
static void C_ccall f_8736(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8698)
static void C_fcall f_8698(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8701)
static void C_ccall f_8701(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8711)
static void C_ccall f_8711(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8648)
static void C_ccall f_8648(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_8648)
static void C_ccall f_8648r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_8681)
static void C_ccall f_8681(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8666)
static void C_ccall f_8666(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8627)
static void C_ccall f_8627(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_8592)
static void C_ccall f_8592(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_8592)
static void C_ccall f_8592r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_8596)
static void C_fcall f_8596(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8484)
static void C_ccall f_8484(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...) C_noret;
C_noret_decl(f_8484)
static void C_ccall f_8484r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t5) C_noret;
C_noret_decl(f_8571)
static void C_ccall f_8571(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8491)
static void C_fcall f_8491(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8500)
static void C_fcall f_8500(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_8547)
static void C_ccall f_8547(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8513)
static void C_fcall f_8513(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8539)
static void C_ccall f_8539(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8351)
static void C_ccall f_8351(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,...) C_noret;
C_noret_decl(f_8351)
static void C_ccall f_8351r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t6) C_noret;
C_noret_decl(f_8355)
static void C_fcall f_8355(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8358)
static void C_fcall f_8358(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8462)
static void C_ccall f_8462(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8360)
static void C_fcall f_8360(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_8367)
static void C_ccall f_8367(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8409)
static void C_ccall f_8409(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8416)
static void C_ccall f_8416(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8390)
static void C_ccall f_8390(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8284)
static void C_ccall f_8284(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,...) C_noret;
C_noret_decl(f_8284)
static void C_ccall f_8284r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t6) C_noret;
C_noret_decl(f_8288)
static void C_fcall f_8288(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8334)
static void C_ccall f_8334(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8291)
static void C_fcall f_8291(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8327)
static void C_ccall f_8327(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8294)
static void C_fcall f_8294(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8307)
static void C_ccall f_8307(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8238)
static void C_ccall f_8238(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_8238)
static void C_ccall f_8238r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_8242)
static void C_ccall f_8242(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8152)
static void C_fcall f_8152(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_8156)
static void C_ccall f_8156(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8159)
static void C_ccall f_8159(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8168)
static void C_fcall f_8168(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8190)
static void C_ccall f_8190(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8137)
static void C_ccall f_8137(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8122)
static void C_ccall f_8122(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7886)
static void C_ccall f_7886(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_7886)
static void C_ccall f_7886r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_8099)
static void C_ccall f_8099(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8114)
static void C_ccall f_8114(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8106)
static void C_ccall f_8106(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8070)
static void C_ccall f_8070(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8074)
static void C_ccall f_8074(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8035)
static void C_ccall f_8035(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8039)
static void C_ccall f_8039(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7890)
static void C_fcall f_7890(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7999)
static void C_ccall f_7999(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8014)
static void C_ccall f_8014(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8006)
static void C_ccall f_8006(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7970)
static void C_ccall f_7970(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7974)
static void C_ccall f_7974(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7935)
static void C_ccall f_7935(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7939)
static void C_ccall f_7939(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7893)
static void C_fcall f_7893(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7896)
static void C_ccall f_7896(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7907)
static void C_ccall f_7907(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7846)
static void C_ccall f_7846(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_7850)
static void C_ccall f_7850(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7880)
static void C_ccall f_7880(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7861)
static void C_ccall f_7861(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7869)
static void C_ccall f_7869(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7825)
static void C_ccall f_7825(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_7837)
static void C_ccall f_7837(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7799)
static void C_ccall f_7799(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_7799)
static void C_ccall f_7799r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_7757)
static void C_ccall f_7757(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_7757)
static void C_ccall f_7757r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_7742)
static void C_ccall f_7742(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7631)
static void C_ccall f_7631(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,...) C_noret;
C_noret_decl(f_7631)
static void C_ccall f_7631r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t7) C_noret;
C_noret_decl(f_7706)
static void C_ccall f_7706(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7635)
static void C_fcall f_7635(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7675)
static void C_ccall f_7675(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7664)
static void C_ccall f_7664(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7649)
static void C_ccall f_7649(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7657)
static void C_ccall f_7657(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7597)
static void C_ccall f_7597(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,...) C_noret;
C_noret_decl(f_7597)
static void C_ccall f_7597r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t8) C_noret;
C_noret_decl(f_7609)
static void C_ccall f_7609(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7578)
static void C_ccall f_7578(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7575)
static void C_ccall f_7575(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7568)
static void C_fcall f_7568(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7565)
static void C_ccall f_7565(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7558)
static void C_fcall f_7558(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7540)
static void C_fcall f_7540(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7529)
static void C_fcall f_7529(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7526)
static void C_ccall f_7526(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7523)
static void C_ccall f_7523(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7520)
static void C_ccall f_7520(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7491)
static void C_fcall f_7491(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7484)
static void C_fcall f_7484(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7481)
static void C_ccall f_7481(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7460)
static void C_fcall f_7460(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7441)
static void C_ccall f_7441(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_7422)
static void C_ccall f_7422(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_7415)
static void C_ccall f_7415(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7408)
static void C_ccall f_7408(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7393)
static void C_fcall f_7393(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_7382)
static void C_fcall f_7382(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7375)
static void C_ccall f_7375(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7348)
static void C_fcall f_7348(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_7321)
static void C_fcall f_7321(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_7280)
static void C_fcall f_7280(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7286)
static void C_fcall f_7286(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7296)
static void C_fcall f_7296(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7194)
static void C_ccall f_7194(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...) C_noret;
C_noret_decl(f_7194)
static void C_ccall f_7194r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t5) C_noret;
C_noret_decl(f_7155)
static void C_ccall f_7155(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_7161)
static void C_fcall f_7161(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_7181)
static void C_ccall f_7181(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7171)
static void C_fcall f_7171(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7115)
static void C_ccall f_7115(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_7121)
static void C_fcall f_7121(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_7145)
static void C_ccall f_7145(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7131)
static void C_fcall f_7131(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7016)
static void C_ccall f_7016(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_7016)
static void C_ccall f_7016r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_7020)
static void C_ccall f_7020(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7045)
static void C_fcall f_7045(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_7062)
static void C_ccall f_7062(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7066)
static void C_ccall f_7066(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7022)
static void C_fcall f_7022(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_7039)
static void C_ccall f_7039(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6955)
static void C_ccall f_6955(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6968)
static void C_fcall f_6968(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_6945)
static void C_ccall f_6945(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_6905)
static void C_ccall f_6905(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_6905)
static void C_ccall f_6905r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_6935)
static void C_ccall f_6935(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6815)
static void C_ccall f_6815(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6767)
static void C_ccall f_6767(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6801)
static void C_ccall f_6801(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6744)
static void C_ccall f_6744(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6738)
static void C_ccall f_6738(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6723)
static void C_ccall f_6723(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6709)
static void C_ccall f_6709(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6699)
static void C_ccall f_6699(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6689)
static void C_ccall f_6689(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6679)
static void C_ccall f_6679(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6669)
static void C_ccall f_6669(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6640)
static void C_ccall f_6640(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_6640)
static void C_ccall f_6640r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_6649)
static void C_ccall f_6649(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6654)
static void C_ccall f_6654(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6629)
static void C_ccall f_6629(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6634)
static void C_ccall f_6634(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6336)
static void C_ccall f_6336(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_6346)
static void C_ccall f_6346(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6597)
static void C_ccall f_6597(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6349)
static void C_ccall f_6349(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6352)
static void C_ccall f_6352(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6367)
static void C_fcall f_6367(C_word t0,C_word t1) C_noret;
C_noret_decl(f_6377)
static void C_ccall f_6377(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6379)
static void C_fcall f_6379(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_6438)
static void C_ccall f_6438(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6448)
static void C_ccall f_6448(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6565)
static void C_ccall f_6565(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6553)
static void C_ccall f_6553(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6551)
static void C_ccall f_6551(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6538)
static void C_ccall f_6538(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6492)
static void C_ccall f_6492(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6519)
static void C_ccall f_6519(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6498)
static void C_ccall f_6498(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6432)
static void C_fcall f_6432(C_word t0,C_word t1) C_noret;
C_noret_decl(f_6391)
static void C_fcall f_6391(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6404)
static void C_fcall f_6404(C_word t0,C_word t1) C_noret;
C_noret_decl(f_6614)
static void C_ccall f_6614(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6605)
static void C_ccall f_6605(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6613)
static void C_ccall f_6613(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6616)
static void C_ccall f_6616(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_6616)
static void C_ccall f_6616r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_6624)
static void C_ccall f_6624(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6038)
static void C_ccall f_6038(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_6291)
static void C_ccall f_6291(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6324)
static void C_ccall f_6324(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6320)
static void C_ccall f_6320(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6309)
static void C_ccall f_6309(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6305)
static void C_ccall f_6305(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6199)
static void C_ccall f_6199(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6202)
static void C_ccall f_6202(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6205)
static void C_ccall f_6205(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6285)
static void C_ccall f_6285(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6110)
static void C_ccall f_6110(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6051)
static void C_ccall f_6051(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6208)
static void C_ccall f_6208(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6215)
static void C_ccall f_6215(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6275)
static void C_ccall f_6275(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6261)
static void C_ccall f_6261(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6227)
static void C_ccall f_6227(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6253)
static void C_ccall f_6253(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6188)
static void C_ccall f_6188(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6235)
static void C_ccall f_6235(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6231)
static void C_ccall f_6231(C_word c,C_word t0,C_word t1) C_noret;

C_noret_decl(trf_37660)
static void C_fcall trf_37660(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_37660(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_37660(t0,t1,t2);}

C_noret_decl(trf_37720)
static void C_fcall trf_37720(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_37720(void *dummy){
C_word t13=C_pick(0);
C_word t12=C_pick(1);
C_word t11=C_pick(2);
C_word t10=C_pick(3);
C_word t9=C_pick(4);
C_word t8=C_pick(5);
C_word t7=C_pick(6);
C_word t6=C_pick(7);
C_word t5=C_pick(8);
C_word t4=C_pick(9);
C_word t3=C_pick(10);
C_word t2=C_pick(11);
C_word t1=C_pick(12);
C_word t0=C_pick(13);
C_adjust_stack(-14);
f_37720(t0,t1,t2,t3,t4,t5,t6,t7,t8,t9,t10,t11,t12,t13);}

C_noret_decl(trf_37740)
static void C_fcall trf_37740(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_37740(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_37740(t0,t1);}

C_noret_decl(trf_37743)
static void C_fcall trf_37743(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_37743(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_37743(t0,t1);}

C_noret_decl(trf_37604)
static void C_fcall trf_37604(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_37604(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_37604(t0,t1);}

C_noret_decl(trf_37526)
static void C_fcall trf_37526(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_37526(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_37526(t0,t1,t2);}

C_noret_decl(trf_37338)
static void C_fcall trf_37338(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_37338(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_37338(t0,t1);}

C_noret_decl(trf_36220)
static void C_fcall trf_36220(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_36220(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_36220(t0,t1);}

C_noret_decl(trf_36093)
static void C_fcall trf_36093(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_36093(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_36093(t0,t1,t2);}

C_noret_decl(trf_35777)
static void C_fcall trf_35777(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_35777(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_35777(t0,t1);}

C_noret_decl(trf_34872)
static void C_fcall trf_34872(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_34872(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_34872(t0,t1,t2);}

C_noret_decl(trf_34907)
static void C_fcall trf_34907(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_34907(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_34907(t0,t1);}

C_noret_decl(trf_34931)
static void C_fcall trf_34931(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_34931(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_34931(t0,t1);}

C_noret_decl(trf_34910)
static void C_fcall trf_34910(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_34910(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_34910(t0,t1);}

C_noret_decl(trf_34713)
static void C_fcall trf_34713(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_34713(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_34713(t0,t1);}

C_noret_decl(trf_34531)
static void C_fcall trf_34531(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_34531(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_34531(t0,t1);}

C_noret_decl(trf_34538)
static void C_fcall trf_34538(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_34538(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_34538(t0,t1);}

C_noret_decl(trf_34519)
static void C_fcall trf_34519(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_34519(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_34519(t0,t1);}

C_noret_decl(trf_22431)
static void C_fcall trf_22431(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22431(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22431(t0,t1);}

C_noret_decl(trf_22438)
static void C_fcall trf_22438(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22438(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22438(t0,t1);}

C_noret_decl(trf_22736)
static void C_fcall trf_22736(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22736(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_22736(t0,t1,t2);}

C_noret_decl(trf_22759)
static void C_fcall trf_22759(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22759(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_22759(t0,t1,t2);}

C_noret_decl(trf_22776)
static void C_fcall trf_22776(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22776(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22776(t0,t1);}

C_noret_decl(trf_22779)
static void C_fcall trf_22779(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22779(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22779(t0,t1);}

C_noret_decl(trf_22782)
static void C_fcall trf_22782(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22782(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22782(t0,t1);}

C_noret_decl(trf_22700)
static void C_fcall trf_22700(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22700(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_22700(t0,t1,t2);}

C_noret_decl(trf_22644)
static void C_fcall trf_22644(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22644(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_22644(t0,t1,t2);}

C_noret_decl(trf_22660)
static void C_fcall trf_22660(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22660(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22660(t0,t1);}

C_noret_decl(trf_22454)
static void C_fcall trf_22454(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22454(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22454(t0,t1);}

C_noret_decl(trf_22457)
static void C_fcall trf_22457(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22457(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22457(t0,t1);}

C_noret_decl(trf_34028)
static void C_fcall trf_34028(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_34028(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_34028(t0,t1);}

C_noret_decl(trf_34031)
static void C_fcall trf_34031(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_34031(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_34031(t0,t1);}

C_noret_decl(trf_33874)
static void C_fcall trf_33874(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_33874(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_33874(t0,t1);}

C_noret_decl(trf_33682)
static void C_fcall trf_33682(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_33682(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_33682(t0,t1);}

C_noret_decl(trf_33532)
static void C_fcall trf_33532(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_33532(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_33532(t0,t1);}

C_noret_decl(trf_33621)
static void C_fcall trf_33621(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_33621(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_33621(t0,t1);}

C_noret_decl(trf_33535)
static void C_fcall trf_33535(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_33535(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_33535(t0,t1);}

C_noret_decl(trf_33551)
static void C_fcall trf_33551(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_33551(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_33551(t0,t1,t2,t3);}

C_noret_decl(trf_33573)
static void C_fcall trf_33573(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_33573(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_33573(t0,t1);}

C_noret_decl(trf_33468)
static void C_fcall trf_33468(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_33468(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_33468(t0,t1,t2);}

C_noret_decl(trf_33415)
static void C_fcall trf_33415(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_33415(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_33415(t0,t1);}

C_noret_decl(trf_26851)
static void C_fcall trf_26851(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26851(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26851(t0,t1);}

C_noret_decl(trf_26713)
static void C_fcall trf_26713(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26713(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26713(t0,t1);}

C_noret_decl(trf_26927)
static void C_fcall trf_26927(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26927(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26927(t0,t1);}

C_noret_decl(trf_33019)
static void C_fcall trf_33019(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_33019(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_33019(t0,t1,t2);}

C_noret_decl(trf_33047)
static void C_fcall trf_33047(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_33047(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_33047(t0,t1);}

C_noret_decl(trf_32750)
static void C_fcall trf_32750(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32750(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_32750(t0,t1);}

C_noret_decl(trf_32914)
static void C_fcall trf_32914(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32914(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_32914(t0,t1);}

C_noret_decl(trf_32763)
static void C_fcall trf_32763(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32763(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_32763(t0,t1);}

C_noret_decl(trf_32998)
static void C_fcall trf_32998(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32998(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_32998(t0,t1);}

C_noret_decl(trf_32688)
static void C_fcall trf_32688(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32688(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_32688(t0,t1,t2);}

C_noret_decl(trf_32629)
static void C_fcall trf_32629(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32629(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_32629(t0,t1);}

C_noret_decl(trf_32565)
static void C_fcall trf_32565(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32565(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_32565(t0,t1,t2);}

C_noret_decl(trf_32485)
static void C_fcall trf_32485(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32485(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_32485(t0,t1);}

C_noret_decl(trf_32411)
static void C_fcall trf_32411(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32411(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_32411(t0,t1);}

C_noret_decl(trf_32406)
static void C_fcall trf_32406(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32406(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_32406(t0,t1,t2);}

C_noret_decl(trf_32286)
static void C_fcall trf_32286(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32286(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_32286(t0,t1,t2,t3);}

C_noret_decl(trf_32357)
static void C_fcall trf_32357(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32357(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_32357(t0,t1,t2);}

C_noret_decl(trf_32316)
static void C_fcall trf_32316(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32316(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_32316(t0,t1);}

C_noret_decl(trf_32288)
static void C_fcall trf_32288(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32288(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_32288(t0,t1);}

C_noret_decl(trf_32243)
static void C_fcall trf_32243(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32243(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_32243(t0,t1);}

C_noret_decl(trf_32199)
static void C_fcall trf_32199(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32199(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_32199(t0,t1,t2,t3);}

C_noret_decl(trf_32190)
static void C_fcall trf_32190(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32190(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_32190(t0,t1);}

C_noret_decl(trf_32020)
static void C_fcall trf_32020(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32020(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_32020(t0,t1,t2,t3,t4);}

C_noret_decl(trf_32049)
static void C_fcall trf_32049(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32049(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_32049(t0,t1,t2);}

C_noret_decl(trf_32086)
static void C_fcall trf_32086(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32086(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_32086(t0,t1);}

C_noret_decl(trf_31916)
static void C_fcall trf_31916(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31916(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31916(t0,t1);}

C_noret_decl(trf_31896)
static void C_fcall trf_31896(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31896(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31896(t0,t1);}

C_noret_decl(trf_31859)
static void C_fcall trf_31859(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31859(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31859(t0,t1);}

C_noret_decl(trf_31839)
static void C_fcall trf_31839(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31839(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31839(t0,t1);}

C_noret_decl(trf_30674)
static void C_fcall trf_30674(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30674(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30674(t0,t1);}

C_noret_decl(trf_30677)
static void C_fcall trf_30677(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30677(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30677(t0,t1);}

C_noret_decl(trf_30680)
static void C_fcall trf_30680(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30680(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30680(t0,t1);}

C_noret_decl(trf_30204)
static void C_fcall trf_30204(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30204(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30204(t0,t1);}

C_noret_decl(trf_30207)
static void C_fcall trf_30207(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30207(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30207(t0,t1);}

C_noret_decl(trf_30210)
static void C_fcall trf_30210(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30210(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30210(t0,t1);}

C_noret_decl(trf_29734)
static void C_fcall trf_29734(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29734(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29734(t0,t1);}

C_noret_decl(trf_29737)
static void C_fcall trf_29737(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29737(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29737(t0,t1);}

C_noret_decl(trf_29740)
static void C_fcall trf_29740(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29740(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29740(t0,t1);}

C_noret_decl(trf_28986)
static void C_fcall trf_28986(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28986(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28986(t0,t1);}

C_noret_decl(trf_28989)
static void C_fcall trf_28989(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28989(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28989(t0,t1);}

C_noret_decl(trf_28992)
static void C_fcall trf_28992(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28992(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28992(t0,t1);}

C_noret_decl(trf_28995)
static void C_fcall trf_28995(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28995(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28995(t0,t1);}

C_noret_decl(trf_28238)
static void C_fcall trf_28238(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28238(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28238(t0,t1);}

C_noret_decl(trf_28241)
static void C_fcall trf_28241(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28241(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28241(t0,t1);}

C_noret_decl(trf_28244)
static void C_fcall trf_28244(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28244(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28244(t0,t1);}

C_noret_decl(trf_28247)
static void C_fcall trf_28247(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28247(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28247(t0,t1);}

C_noret_decl(trf_27768)
static void C_fcall trf_27768(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27768(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27768(t0,t1);}

C_noret_decl(trf_27771)
static void C_fcall trf_27771(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27771(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27771(t0,t1);}

C_noret_decl(trf_27774)
static void C_fcall trf_27774(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27774(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27774(t0,t1);}

C_noret_decl(trf_27020)
static void C_fcall trf_27020(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27020(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27020(t0,t1);}

C_noret_decl(trf_27023)
static void C_fcall trf_27023(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27023(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27023(t0,t1);}

C_noret_decl(trf_27026)
static void C_fcall trf_27026(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27026(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27026(t0,t1);}

C_noret_decl(trf_27029)
static void C_fcall trf_27029(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27029(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27029(t0,t1);}

C_noret_decl(trf_26678)
static void C_fcall trf_26678(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26678(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_26678(t0,t1,t2,t3);}

C_noret_decl(trf_26518)
static void C_fcall trf_26518(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26518(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26518(t0,t1);}

C_noret_decl(trf_26553)
static void C_fcall trf_26553(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26553(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_26553(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_26563)
static void C_fcall trf_26563(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26563(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26563(t0,t1);}

C_noret_decl(trf_26526)
static void C_fcall trf_26526(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26526(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_26526(t0,t1,t2);}

C_noret_decl(trf_26686)
static void C_fcall trf_26686(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26686(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26686(t0,t1);}

C_noret_decl(trf_26304)
static void C_fcall trf_26304(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26304(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26304(t0,t1);}

C_noret_decl(trf_26310)
static void C_fcall trf_26310(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26310(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26310(t0,t1);}

C_noret_decl(trf_26333)
static void C_fcall trf_26333(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26333(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26333(t0,t1);}

C_noret_decl(trf_26346)
static void C_fcall trf_26346(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26346(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26346(t0,t1);}

C_noret_decl(trf_26320)
static void C_fcall trf_26320(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26320(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26320(t0,t1);}

C_noret_decl(trf_26133)
static void C_fcall trf_26133(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26133(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_26133(t0,t1,t2,t3);}

C_noret_decl(trf_26142)
static void C_fcall trf_26142(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26142(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_26142(t0,t1,t2,t3,t4);}

C_noret_decl(trf_26096)
static void C_fcall trf_26096(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26096(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26096(t0,t1);}

C_noret_decl(trf_25959)
static void C_fcall trf_25959(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25959(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25959(t0,t1);}

C_noret_decl(trf_25889)
static void C_fcall trf_25889(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25889(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25889(t0,t1);}

C_noret_decl(trf_25250)
static void C_fcall trf_25250(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25250(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_25250(t0,t1,t2);}

C_noret_decl(trf_25210)
static void C_fcall trf_25210(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25210(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_25210(t0,t1,t2);}

C_noret_decl(trf_25223)
static void C_fcall trf_25223(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25223(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25223(t0,t1);}

C_noret_decl(trf_25802)
static void C_fcall trf_25802(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25802(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25802(t0,t1);}

C_noret_decl(trf_25592)
static void C_fcall trf_25592(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25592(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25592(t0,t1);}

C_noret_decl(trf_25708)
static void C_fcall trf_25708(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25708(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25708(t0,t1);}

C_noret_decl(trf_25595)
static void C_fcall trf_25595(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25595(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25595(t0,t1);}

C_noret_decl(trf_25598)
static void C_fcall trf_25598(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25598(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25598(t0,t1);}

C_noret_decl(trf_25503)
static void C_fcall trf_25503(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25503(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25503(t0,t1);}

C_noret_decl(trf_25418)
static void C_fcall trf_25418(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25418(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25418(t0,t1);}

C_noret_decl(trf_25375)
static void C_fcall trf_25375(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25375(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25375(t0,t1);}

C_noret_decl(trf_25342)
static void C_fcall trf_25342(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25342(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25342(t0,t1);}

C_noret_decl(trf_25337)
static void C_fcall trf_25337(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25337(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25337(t0,t1);}

C_noret_decl(trf_25332)
static void C_fcall trf_25332(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25332(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_25332(t0,t1,t2,t3,t4);}

C_noret_decl(trf_25079)
static void C_fcall trf_25079(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25079(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25079(t0,t1);}

C_noret_decl(trf_24926)
static void C_fcall trf_24926(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24926(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_24926(t0,t1,t2,t3);}

C_noret_decl(trf_24772)
static void C_fcall trf_24772(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24772(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_24772(t0,t1,t2);}

C_noret_decl(trf_24614)
static void C_fcall trf_24614(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24614(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_24614(t0,t1,t2);}

C_noret_decl(trf_24647)
static void C_fcall trf_24647(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24647(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24647(t0,t1);}

C_noret_decl(trf_24554)
static void C_fcall trf_24554(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24554(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24554(t0,t1);}

C_noret_decl(trf_24519)
static void C_fcall trf_24519(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24519(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24519(t0,t1);}

C_noret_decl(trf_24535)
static void C_fcall trf_24535(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24535(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24535(t0,t1);}

C_noret_decl(trf_24490)
static void C_fcall trf_24490(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24490(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24490(t0,t1);}

C_noret_decl(trf_24397)
static void C_fcall trf_24397(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24397(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24397(t0,t1);}

C_noret_decl(trf_24153)
static void C_fcall trf_24153(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24153(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_24153(t0,t1,t2);}

C_noret_decl(trf_23957)
static void C_fcall trf_23957(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23957(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23957(t0,t1);}

C_noret_decl(trf_24120)
static void C_fcall trf_24120(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24120(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24120(t0,t1);}

C_noret_decl(trf_23960)
static void C_fcall trf_23960(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23960(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23960(t0,t1);}

C_noret_decl(trf_23963)
static void C_fcall trf_23963(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23963(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23963(t0,t1);}

C_noret_decl(trf_23966)
static void C_fcall trf_23966(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23966(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23966(t0,t1);}

C_noret_decl(trf_24008)
static void C_fcall trf_24008(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24008(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24008(t0,t1);}

C_noret_decl(trf_23973)
static void C_fcall trf_23973(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23973(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23973(t0,t1);}

C_noret_decl(trf_23702)
static void C_fcall trf_23702(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23702(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_23702(t0,t1,t2,t3);}

C_noret_decl(trf_23710)
static void C_fcall trf_23710(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23710(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_23710(t0,t1,t2,t3);}

C_noret_decl(trf_23839)
static void C_fcall trf_23839(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23839(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_23839(t0,t1,t2);}

C_noret_decl(trf_23793)
static void C_fcall trf_23793(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23793(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_23793(t0,t1,t2);}

C_noret_decl(trf_23696)
static void C_fcall trf_23696(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23696(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_23696(t0,t1,t2);}

C_noret_decl(trf_23690)
static void C_fcall trf_23690(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23690(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23690(t0,t1);}

C_noret_decl(trf_23684)
static void C_fcall trf_23684(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23684(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_23684(t0,t1,t2);}

C_noret_decl(trf_23613)
static void C_fcall trf_23613(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23613(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_23613(t0,t1,t2);}

C_noret_decl(trf_23615)
static void C_fcall trf_23615(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23615(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_23615(t0,t1,t2);}

C_noret_decl(trf_23621)
static void C_fcall trf_23621(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23621(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_23621(t0,t1,t2);}

C_noret_decl(trf_23462)
static void C_fcall trf_23462(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23462(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23462(t0,t1);}

C_noret_decl(trf_23477)
static void C_fcall trf_23477(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23477(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_23477(t0,t1,t2);}

C_noret_decl(trf_23420)
static void C_fcall trf_23420(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23420(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_23420(t0,t1,t2);}

C_noret_decl(trf_23360)
static void C_fcall trf_23360(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23360(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_23360(t0,t1,t2);}

C_noret_decl(trf_23236)
static void C_fcall trf_23236(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23236(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_23236(t0,t1,t2);}

C_noret_decl(trf_23112)
static void C_fcall trf_23112(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23112(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_23112(t0,t1,t2,t3);}

C_noret_decl(trf_23148)
static void C_fcall trf_23148(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23148(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_23148(t0,t1,t2);}

C_noret_decl(trf_22944)
static void C_fcall trf_22944(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22944(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22944(t0,t1);}

C_noret_decl(trf_20776)
static void C_fcall trf_20776(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20776(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20776(t0,t1);}

C_noret_decl(trf_23078)
static void C_fcall trf_23078(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23078(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_23078(t0,t1,t2);}

C_noret_decl(trf_23088)
static void C_fcall trf_23088(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23088(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23088(t0,t1);}

C_noret_decl(trf_23048)
static void C_fcall trf_23048(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23048(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_23048(t0,t1,t2);}

C_noret_decl(trf_23058)
static void C_fcall trf_23058(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23058(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23058(t0,t1);}

C_noret_decl(trf_22118)
static void C_fcall trf_22118(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22118(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22118(t0,t1);}

C_noret_decl(trf_22121)
static void C_fcall trf_22121(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22121(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22121(t0,t1);}

C_noret_decl(trf_22124)
static void C_fcall trf_22124(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22124(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22124(t0,t1);}

C_noret_decl(trf_22127)
static void C_fcall trf_22127(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22127(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22127(t0,t1);}

C_noret_decl(trf_22130)
static void C_fcall trf_22130(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22130(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22130(t0,t1);}

C_noret_decl(trf_22133)
static void C_fcall trf_22133(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22133(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22133(t0,t1);}

C_noret_decl(trf_21961)
static void C_fcall trf_21961(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21961(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21961(t0,t1);}

C_noret_decl(trf_21890)
static void C_fcall trf_21890(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21890(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21890(t0,t1);}

C_noret_decl(trf_21705)
static void C_fcall trf_21705(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21705(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21705(t0,t1);}

C_noret_decl(trf_21717)
static void C_fcall trf_21717(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21717(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21717(t0,t1);}

C_noret_decl(trf_21754)
static void C_fcall trf_21754(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21754(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_21754(t0,t1,t2,t3,t4);}

C_noret_decl(trf_21789)
static void C_fcall trf_21789(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21789(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21789(t0,t1);}

C_noret_decl(trf_21684)
static void C_fcall trf_21684(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21684(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21684(t0,t1);}

C_noret_decl(trf_21619)
static void C_fcall trf_21619(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21619(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_21619(t0,t1,t2);}

C_noret_decl(trf_21628)
static void C_fcall trf_21628(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21628(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_21628(t0,t1,t2);}

C_noret_decl(trf_21641)
static void C_fcall trf_21641(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21641(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21641(t0,t1);}

C_noret_decl(trf_21575)
static void C_fcall trf_21575(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21575(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_21575(t0,t1,t2);}

C_noret_decl(trf_21563)
static void C_fcall trf_21563(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21563(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21563(t0,t1);}

C_noret_decl(trf_21461)
static void C_fcall trf_21461(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21461(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21461(t0,t1);}

C_noret_decl(trf_21413)
static void C_fcall trf_21413(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21413(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21413(t0,t1);}

C_noret_decl(trf_20794)
static void C_fcall trf_20794(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20794(void *dummy){
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
f_20794(t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(trf_20804)
static void C_fcall trf_20804(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20804(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20804(t0,t1);}

C_noret_decl(trf_20933)
static void C_fcall trf_20933(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20933(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20933(t0,t1);}

C_noret_decl(trf_21021)
static void C_fcall trf_21021(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21021(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21021(t0,t1);}

C_noret_decl(trf_21094)
static void C_fcall trf_21094(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21094(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21094(t0,t1);}

C_noret_decl(trf_21172)
static void C_fcall trf_21172(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21172(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21172(t0,t1);}

C_noret_decl(trf_21123)
static void C_fcall trf_21123(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21123(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21123(t0,t1);}

C_noret_decl(trf_21139)
static void C_fcall trf_21139(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21139(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21139(t0,t1);}

C_noret_decl(trf_21103)
static void C_fcall trf_21103(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21103(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21103(t0,t1);}

C_noret_decl(trf_21045)
static void C_fcall trf_21045(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21045(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_21045(t0,t1,t2);}

C_noret_decl(trf_20964)
static void C_fcall trf_20964(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20964(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_20964(t0,t1,t2);}

C_noret_decl(trf_20980)
static void C_fcall trf_20980(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20980(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20980(t0,t1);}

C_noret_decl(trf_20948)
static void C_fcall trf_20948(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20948(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20948(t0,t1);}

C_noret_decl(trf_20690)
static void C_fcall trf_20690(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20690(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20690(t0,t1);}

C_noret_decl(trf_20699)
static void C_fcall trf_20699(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20699(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20699(t0,t1);}

C_noret_decl(trf_20704)
static void C_fcall trf_20704(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20704(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_20704(t0,t1,t2);}

C_noret_decl(trf_20682)
static void C_fcall trf_20682(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20682(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20682(t0,t1);}

C_noret_decl(trf_20474)
static void C_fcall trf_20474(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20474(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_20474(t0,t1,t2,t3);}

C_noret_decl(trf_20441)
static void C_fcall trf_20441(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20441(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_20441(t0,t1,t2,t3);}

C_noret_decl(trf_20423)
static void C_fcall trf_20423(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20423(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_20423(t0,t1,t2,t3);}

C_noret_decl(trf_20413)
static void C_fcall trf_20413(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20413(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_20413(t0,t1,t2,t3);}

C_noret_decl(trf_20401)
static void C_fcall trf_20401(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20401(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_20401(t0,t1,t2);}

C_noret_decl(trf_20369)
static void C_fcall trf_20369(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20369(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_20369(t0,t1,t2);}

C_noret_decl(trf_20353)
static void C_fcall trf_20353(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20353(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20353(t0,t1);}

C_noret_decl(trf_20341)
static void C_fcall trf_20341(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20341(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20341(t0,t1);}

C_noret_decl(trf_20323)
static void C_fcall trf_20323(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20323(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20323(t0,t1);}

C_noret_decl(trf_20305)
static void C_fcall trf_20305(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20305(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20305(t0,t1);}

C_noret_decl(trf_20290)
static void C_fcall trf_20290(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20290(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20290(t0,t1);}

C_noret_decl(trf_20284)
static void C_fcall trf_20284(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20284(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_20284(t0,t1,t2,t3);}

C_noret_decl(trf_20272)
static void C_fcall trf_20272(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20272(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20272(t0,t1);}

C_noret_decl(trf_20254)
static void C_fcall trf_20254(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20254(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20254(t0,t1);}

C_noret_decl(trf_20233)
static void C_fcall trf_20233(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20233(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_20233(t0,t1,t2);}

C_noret_decl(trf_20201)
static void C_fcall trf_20201(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20201(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20201(t0,t1);}

C_noret_decl(trf_20143)
static void C_fcall trf_20143(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20143(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_20143(t0,t1,t2);}

C_noret_decl(trf_20133)
static void C_fcall trf_20133(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20133(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20133(t0,t1);}

C_noret_decl(trf_20127)
static void C_fcall trf_20127(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20127(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20127(t0,t1);}

C_noret_decl(trf_20115)
static void C_fcall trf_20115(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20115(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20115(t0,t1);}

C_noret_decl(trf_20091)
static void C_fcall trf_20091(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20091(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_20091(t0,t1,t2);}

C_noret_decl(trf_20004)
static void C_fcall trf_20004(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20004(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20004(t0,t1);}

C_noret_decl(trf_19983)
static void C_fcall trf_19983(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19983(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_19983(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_19973)
static void C_fcall trf_19973(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19973(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19973(t0,t1);}

C_noret_decl(trf_19961)
static void C_fcall trf_19961(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19961(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19961(t0,t1);}

C_noret_decl(trf_19920)
static void C_fcall trf_19920(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19920(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19920(t0,t1);}

C_noret_decl(trf_19902)
static void C_fcall trf_19902(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19902(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19902(t0,t1);}

C_noret_decl(trf_19884)
static void C_fcall trf_19884(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19884(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19884(t0,t1);}

C_noret_decl(trf_18851)
static void C_fcall trf_18851(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18851(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18851(t0,t1);}

C_noret_decl(trf_18854)
static void C_fcall trf_18854(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18854(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18854(t0,t1);}

C_noret_decl(trf_19569)
static void C_fcall trf_19569(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19569(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_19569(t0,t1,t2);}

C_noret_decl(trf_19592)
static void C_fcall trf_19592(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19592(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_19592(t0,t1,t2,t3,t4);}

C_noret_decl(trf_19627)
static void C_fcall trf_19627(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19627(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19627(t0,t1);}

C_noret_decl(trf_19531)
static void C_fcall trf_19531(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19531(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19531(t0,t1);}

C_noret_decl(trf_19059)
static void C_fcall trf_19059(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19059(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19059(t0,t1);}

C_noret_decl(trf_19402)
static void C_fcall trf_19402(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19402(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_19402(t0,t1,t2,t3);}

C_noret_decl(trf_19488)
static void C_fcall trf_19488(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19488(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_19488(t0,t1,t2,t3);}

C_noret_decl(trf_19445)
static void C_fcall trf_19445(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19445(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_19445(t0,t1,t2);}

C_noret_decl(trf_19369)
static void C_fcall trf_19369(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19369(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_19369(t0,t1,t2);}

C_noret_decl(trf_19307)
static void C_fcall trf_19307(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19307(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_19307(t0,t1,t2);}

C_noret_decl(trf_19342)
static void C_fcall trf_19342(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19342(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_19342(t0,t1,t2,t3);}

C_noret_decl(trf_19127)
static void C_fcall trf_19127(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19127(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_19127(t0,t1,t2);}

C_noret_decl(trf_19023)
static void C_fcall trf_19023(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19023(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_19023(t0,t1,t2);}

C_noret_decl(trf_19280)
static void C_fcall trf_19280(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19280(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_19280(t0,t1,t2,t3);}

C_noret_decl(trf_19253)
static void C_fcall trf_19253(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19253(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_19253(t0,t1,t2,t3);}

C_noret_decl(trf_19164)
static void C_fcall trf_19164(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19164(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_19164(t0,t1,t2);}

C_noret_decl(trf_19214)
static void C_fcall trf_19214(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19214(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_19214(t0,t1,t2,t3);}

C_noret_decl(trf_18946)
static void C_fcall trf_18946(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18946(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_18946(t0,t1,t2,t3,t4);}

C_noret_decl(trf_18864)
static void C_fcall trf_18864(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18864(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_18864(t0,t1,t2,t3);}

C_noret_decl(trf_18785)
static void C_fcall trf_18785(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18785(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_18785(t0,t1,t2);}

C_noret_decl(trf_18810)
static void C_fcall trf_18810(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18810(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18810(t0,t1);}

C_noret_decl(trf_18513)
static void C_fcall trf_18513(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18513(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18513(t0,t1);}

C_noret_decl(trf_18516)
static void C_fcall trf_18516(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18516(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18516(t0,t1);}

C_noret_decl(trf_18522)
static void C_fcall trf_18522(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18522(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18522(t0,t1);}

C_noret_decl(trf_18236)
static void C_fcall trf_18236(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18236(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18236(t0,t1);}

C_noret_decl(trf_18239)
static void C_fcall trf_18239(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18239(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18239(t0,t1);}

C_noret_decl(trf_18166)
static void C_fcall trf_18166(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18166(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18166(t0,t1);}

C_noret_decl(trf_18014)
static void C_fcall trf_18014(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18014(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_18014(t0,t1,t2,t3,t4);}

C_noret_decl(trf_17939)
static void C_fcall trf_17939(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17939(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_17939(t0,t1,t2,t3,t4);}

C_noret_decl(trf_17949)
static void C_fcall trf_17949(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17949(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17949(t0,t1);}

C_noret_decl(trf_17956)
static void C_fcall trf_17956(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17956(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17956(t0,t1);}

C_noret_decl(trf_18051)
static void C_fcall trf_18051(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18051(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_18051(t0,t1,t2);}

C_noret_decl(trf_17829)
static void C_fcall trf_17829(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17829(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_17829(t0,t1,t2,t3);}

C_noret_decl(trf_17841)
static void C_fcall trf_17841(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17841(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_17841(t0,t1,t2,t3,t4);}

C_noret_decl(trf_17902)
static void C_fcall trf_17902(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17902(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_17902(t0,t1,t2);}

C_noret_decl(trf_17266)
static void C_fcall trf_17266(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17266(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_17266(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_17202)
static void C_fcall trf_17202(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17202(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17202(t0,t1);}

C_noret_decl(trf_17149)
static void C_fcall trf_17149(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17149(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17149(t0,t1);}

C_noret_decl(trf_17152)
static void C_fcall trf_17152(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17152(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17152(t0,t1);}

C_noret_decl(trf_17346)
static void C_fcall trf_17346(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17346(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17346(t0,t1);}

C_noret_decl(trf_17349)
static void C_fcall trf_17349(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17349(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17349(t0,t1);}

C_noret_decl(trf_17352)
static void C_fcall trf_17352(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17352(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17352(t0,t1);}

C_noret_decl(trf_17367)
static void C_fcall trf_17367(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17367(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17367(t0,t1);}

C_noret_decl(trf_16928)
static void C_fcall trf_16928(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16928(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16928(t0,t1);}

C_noret_decl(trf_17020)
static void C_fcall trf_17020(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17020(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_17020(t0,t1,t2);}

C_noret_decl(trf_17039)
static void C_fcall trf_17039(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17039(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17039(t0,t1);}

C_noret_decl(trf_16993)
static void C_fcall trf_16993(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16993(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_16993(t0,t1,t2);}

C_noret_decl(trf_16938)
static void C_fcall trf_16938(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16938(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_16938(t0,t1,t2);}

C_noret_decl(trf_16948)
static void C_fcall trf_16948(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16948(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_16948(t0,t1,t2,t3);}

C_noret_decl(trf_16794)
static void C_fcall trf_16794(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16794(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_16794(t0,t1,t2);}

C_noret_decl(trf_16863)
static void C_fcall trf_16863(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16863(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_16863(t0,t1,t2);}

C_noret_decl(trf_16809)
static void C_fcall trf_16809(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16809(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_16809(t0,t1,t2,t3,t4);}

C_noret_decl(trf_16351)
static void C_fcall trf_16351(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16351(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16351(t0,t1);}

C_noret_decl(trf_16354)
static void C_fcall trf_16354(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16354(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16354(t0,t1);}

C_noret_decl(trf_16357)
static void C_fcall trf_16357(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16357(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16357(t0,t1);}

C_noret_decl(trf_16360)
static void C_fcall trf_16360(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16360(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16360(t0,t1);}

C_noret_decl(trf_16324)
static void C_fcall trf_16324(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16324(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16324(t0,t1);}

C_noret_decl(trf_16047)
static void C_fcall trf_16047(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16047(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16047(t0,t1);}

C_noret_decl(trf_16050)
static void C_fcall trf_16050(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16050(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16050(t0,t1);}

C_noret_decl(trf_16053)
static void C_fcall trf_16053(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16053(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16053(t0,t1);}

C_noret_decl(trf_15944)
static void C_fcall trf_15944(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15944(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15944(t0,t1);}

C_noret_decl(trf_15935)
static void C_fcall trf_15935(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15935(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_15935(t0,t1,t2);}

C_noret_decl(trf_15926)
static void C_fcall trf_15926(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15926(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15926(t0,t1);}

C_noret_decl(trf_15908)
static void C_fcall trf_15908(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15908(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15908(t0,t1);}

C_noret_decl(trf_15890)
static void C_fcall trf_15890(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15890(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15890(t0,t1);}

C_noret_decl(trf_15872)
static void C_fcall trf_15872(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15872(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15872(t0,t1);}

C_noret_decl(trf_15863)
static void C_fcall trf_15863(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15863(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_15863(t0,t1,t2);}

C_noret_decl(trf_15854)
static void C_fcall trf_15854(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15854(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15854(t0,t1);}

C_noret_decl(trf_15685)
static void C_fcall trf_15685(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15685(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15685(t0,t1);}

C_noret_decl(trf_15641)
static void C_fcall trf_15641(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15641(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_15641(t0,t1,t2);}

C_noret_decl(trf_15162)
static void C_fcall trf_15162(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15162(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15162(t0,t1);}

C_noret_decl(trf_15165)
static void C_fcall trf_15165(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15165(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15165(t0,t1);}

C_noret_decl(trf_15168)
static void C_fcall trf_15168(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15168(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15168(t0,t1);}

C_noret_decl(trf_15171)
static void C_fcall trf_15171(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15171(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15171(t0,t1);}

C_noret_decl(trf_15117)
static void C_fcall trf_15117(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15117(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_15117(t0,t1,t2,t3,t4);}

C_noret_decl(trf_14823)
static void C_fcall trf_14823(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14823(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14823(t0,t1);}

C_noret_decl(trf_14826)
static void C_fcall trf_14826(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14826(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14826(t0,t1);}

C_noret_decl(trf_14829)
static void C_fcall trf_14829(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14829(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14829(t0,t1);}

C_noret_decl(trf_14540)
static void C_fcall trf_14540(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14540(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14540(t0,t1);}

C_noret_decl(trf_14543)
static void C_fcall trf_14543(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14543(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14543(t0,t1);}

C_noret_decl(trf_14546)
static void C_fcall trf_14546(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14546(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14546(t0,t1);}

C_noret_decl(trf_14499)
static void C_fcall trf_14499(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14499(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14499(t0,t1);}

C_noret_decl(trf_14455)
static void C_fcall trf_14455(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14455(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14455(t0,t1);}

C_noret_decl(trf_14370)
static void C_fcall trf_14370(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14370(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14370(t0,t1);}

C_noret_decl(trf_13855)
static void C_fcall trf_13855(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13855(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13855(t0,t1);}

C_noret_decl(trf_13858)
static void C_fcall trf_13858(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13858(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13858(t0,t1);}

C_noret_decl(trf_13861)
static void C_fcall trf_13861(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13861(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13861(t0,t1);}

C_noret_decl(trf_13864)
static void C_fcall trf_13864(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13864(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13864(t0,t1);}

C_noret_decl(trf_13771)
static void C_fcall trf_13771(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13771(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_13771(t0,t1,t2);}

C_noret_decl(trf_13762)
static void C_fcall trf_13762(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13762(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13762(t0,t1);}

C_noret_decl(trf_13697)
static void C_fcall trf_13697(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13697(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13697(t0,t1);}

C_noret_decl(trf_13439)
static void C_fcall trf_13439(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13439(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13439(t0,t1);}

C_noret_decl(trf_13442)
static void C_fcall trf_13442(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13442(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13442(t0,t1);}

C_noret_decl(trf_13445)
static void C_fcall trf_13445(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13445(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13445(t0,t1);}

C_noret_decl(trf_13320)
static void C_fcall trf_13320(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13320(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13320(t0,t1);}

C_noret_decl(trf_13344)
static void C_fcall trf_13344(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13344(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13344(t0,t1);}

C_noret_decl(trf_13274)
static void C_fcall trf_13274(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13274(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_13274(t0,t1,t2);}

C_noret_decl(trf_13265)
static void C_fcall trf_13265(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13265(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13265(t0,t1);}

C_noret_decl(trf_12964)
static void C_fcall trf_12964(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12964(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12964(t0,t1);}

C_noret_decl(trf_13200)
static void C_fcall trf_13200(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13200(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13200(t0,t1);}

C_noret_decl(trf_13206)
static void C_fcall trf_13206(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13206(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13206(t0,t1);}

C_noret_decl(trf_13098)
static void C_fcall trf_13098(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13098(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13098(t0,t1);}

C_noret_decl(trf_13100)
static void C_fcall trf_13100(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13100(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_13100(t0,t1,t2,t3);}

C_noret_decl(trf_13149)
static void C_fcall trf_13149(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13149(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13149(t0,t1);}

C_noret_decl(trf_13114)
static void C_fcall trf_13114(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13114(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13114(t0,t1);}

C_noret_decl(trf_12998)
static void C_fcall trf_12998(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12998(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12998(t0,t1);}

C_noret_decl(trf_12912)
static void C_fcall trf_12912(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12912(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_12912(t0,t1,t2,t3,t4);}

C_noret_decl(trf_12931)
static void C_fcall trf_12931(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12931(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12931(t0,t1);}

C_noret_decl(trf_12862)
static void C_fcall trf_12862(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12862(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_12862(t0,t1,t2,t3);}

C_noret_decl(trf_12623)
static void C_fcall trf_12623(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12623(void *dummy){
C_word t9=C_pick(0);
C_word t8=C_pick(1);
C_word t7=C_pick(2);
C_word t6=C_pick(3);
C_word t5=C_pick(4);
C_word t4=C_pick(5);
C_word t3=C_pick(6);
C_word t2=C_pick(7);
C_word t1=C_pick(8);
C_word t0=C_pick(9);
C_adjust_stack(-10);
f_12623(t0,t1,t2,t3,t4,t5,t6,t7,t8,t9);}

C_noret_decl(trf_12642)
static void C_fcall trf_12642(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12642(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12642(t0,t1);}

C_noret_decl(trf_12657)
static void C_fcall trf_12657(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12657(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12657(t0,t1);}

C_noret_decl(trf_12666)
static void C_fcall trf_12666(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12666(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12666(t0,t1);}

C_noret_decl(trf_12613)
static void C_fcall trf_12613(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12613(void *dummy){
C_word t0=C_pick(0);
C_adjust_stack(-1);
f_12613(t0);}

C_noret_decl(trf_12558)
static void C_fcall trf_12558(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12558(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12558(t0,t1);}

C_noret_decl(trf_12549)
static void C_fcall trf_12549(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12549(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_12549(t0,t1,t2);}

C_noret_decl(trf_12432)
static void C_fcall trf_12432(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12432(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12432(t0,t1);}

C_noret_decl(trf_12423)
static void C_fcall trf_12423(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12423(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_12423(t0,t1,t2);}

C_noret_decl(trf_12405)
static void C_fcall trf_12405(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12405(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_12405(t0,t1,t2);}

C_noret_decl(trf_12396)
static void C_fcall trf_12396(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12396(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12396(t0,t1);}

C_noret_decl(trf_12378)
static void C_fcall trf_12378(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12378(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12378(t0,t1);}

C_noret_decl(trf_12369)
static void C_fcall trf_12369(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12369(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_12369(t0,t1,t2);}

C_noret_decl(trf_12360)
static void C_fcall trf_12360(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12360(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12360(t0,t1);}

C_noret_decl(trf_12342)
static void C_fcall trf_12342(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12342(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12342(t0,t1);}

C_noret_decl(trf_12333)
static void C_fcall trf_12333(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12333(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_12333(t0,t1,t2);}

C_noret_decl(trf_12324)
static void C_fcall trf_12324(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12324(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12324(t0,t1);}

C_noret_decl(trf_12309)
static void C_fcall trf_12309(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12309(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12309(t0,t1);}

C_noret_decl(trf_12264)
static void C_fcall trf_12264(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12264(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12264(t0,t1);}

C_noret_decl(trf_12246)
static void C_fcall trf_12246(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12246(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12246(t0,t1);}

C_noret_decl(trf_12237)
static void C_fcall trf_12237(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12237(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_12237(t0,t1,t2);}

C_noret_decl(trf_12210)
static void C_fcall trf_12210(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12210(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12210(t0,t1);}

C_noret_decl(trf_12192)
static void C_fcall trf_12192(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12192(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12192(t0,t1);}

C_noret_decl(trf_12174)
static void C_fcall trf_12174(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12174(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12174(t0,t1);}

C_noret_decl(trf_12165)
static void C_fcall trf_12165(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12165(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_12165(t0,t1,t2);}

C_noret_decl(trf_12153)
static void C_fcall trf_12153(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12153(void *dummy){
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
f_12153(t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(trf_12088)
static void C_fcall trf_12088(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12088(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_12088(t0,t1,t2,t3);}

C_noret_decl(trf_12106)
static void C_fcall trf_12106(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12106(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12106(t0,t1);}

C_noret_decl(trf_11929)
static void C_fcall trf_11929(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11929(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_11929(t0,t1,t2,t3);}

C_noret_decl(trf_12018)
static void C_fcall trf_12018(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12018(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_12018(t0,t1,t2,t3,t4);}

C_noret_decl(trf_12032)
static void C_fcall trf_12032(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12032(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12032(t0,t1);}

C_noret_decl(trf_11960)
static void C_fcall trf_11960(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11960(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11960(t0,t1);}

C_noret_decl(trf_11864)
static void C_fcall trf_11864(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11864(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_11864(t0,t1,t2,t3,t4);}

C_noret_decl(trf_11137)
static void C_fcall trf_11137(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11137(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11137(t0,t1);}

C_noret_decl(trf_11140)
static void C_fcall trf_11140(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11140(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11140(t0,t1);}

C_noret_decl(trf_11143)
static void C_fcall trf_11143(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11143(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11143(t0,t1);}

C_noret_decl(trf_11146)
static void C_fcall trf_11146(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11146(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11146(t0,t1);}

C_noret_decl(trf_10899)
static void C_fcall trf_10899(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10899(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10899(t0,t1);}

C_noret_decl(trf_10770)
static void C_fcall trf_10770(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10770(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_10770(t0,t1,t2);}

C_noret_decl(trf_10635)
static void C_fcall trf_10635(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10635(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_10635(t0,t1,t2,t3,t4);}

C_noret_decl(trf_10497)
static void C_fcall trf_10497(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10497(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10497(t0,t1);}

C_noret_decl(trf_10380)
static void C_fcall trf_10380(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10380(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_10380(t0,t1,t2);}

C_noret_decl(trf_10389)
static void C_fcall trf_10389(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10389(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_10389(t0,t1,t2,t3);}

C_noret_decl(trf_10222)
static void C_fcall trf_10222(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10222(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10222(t0,t1);}

C_noret_decl(trf_10238)
static void C_fcall trf_10238(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10238(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_10238(t0,t1,t2,t3);}

C_noret_decl(trf_10046)
static void C_fcall trf_10046(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10046(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_10046(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_10076)
static void C_fcall trf_10076(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10076(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10076(t0,t1);}

C_noret_decl(trf_10059)
static void C_fcall trf_10059(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10059(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10059(t0,t1);}

C_noret_decl(trf_9924)
static void C_fcall trf_9924(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9924(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_9924(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_9954)
static void C_fcall trf_9954(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9954(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9954(t0,t1);}

C_noret_decl(trf_9937)
static void C_fcall trf_9937(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9937(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9937(t0,t1);}

C_noret_decl(trf_9827)
static void C_fcall trf_9827(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9827(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_9827(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_9840)
static void C_fcall trf_9840(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9840(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9840(t0,t1);}

C_noret_decl(trf_9759)
static void C_fcall trf_9759(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9759(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_9759(t0,t1,t2,t3);}

C_noret_decl(trf_9729)
static void C_fcall trf_9729(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9729(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9729(t0,t1);}

C_noret_decl(trf_9657)
static void C_fcall trf_9657(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9657(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_9657(t0,t1,t2,t3);}

C_noret_decl(trf_9456)
static void C_fcall trf_9456(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9456(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9456(t0,t1);}

C_noret_decl(trf_9538)
static void C_fcall trf_9538(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9538(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9538(t0,t1);}

C_noret_decl(trf_9549)
static void C_fcall trf_9549(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9549(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_9549(t0,t1,t2,t3);}

C_noret_decl(trf_9561)
static void C_fcall trf_9561(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9561(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_9561(t0,t1,t2);}

C_noret_decl(trf_9482)
static void C_fcall trf_9482(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9482(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_9482(t0,t1,t2);}

C_noret_decl(trf_9119)
static void C_fcall trf_9119(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9119(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9119(t0,t1);}

C_noret_decl(trf_9122)
static void C_fcall trf_9122(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9122(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9122(t0,t1);}

C_noret_decl(trf_9128)
static void C_fcall trf_9128(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9128(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9128(t0,t1);}

C_noret_decl(trf_9031)
static void C_fcall trf_9031(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9031(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_9031(t0,t1,t2,t3,t4);}

C_noret_decl(trf_8923)
static void C_fcall trf_8923(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8923(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8923(t0,t1);}

C_noret_decl(trf_8928)
static void C_fcall trf_8928(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8928(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_8928(t0,t1,t2,t3);}

C_noret_decl(trf_8695)
static void C_fcall trf_8695(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8695(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8695(t0,t1);}

C_noret_decl(trf_8698)
static void C_fcall trf_8698(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8698(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8698(t0,t1);}

C_noret_decl(trf_8596)
static void C_fcall trf_8596(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8596(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8596(t0,t1);}

C_noret_decl(trf_8491)
static void C_fcall trf_8491(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8491(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8491(t0,t1);}

C_noret_decl(trf_8500)
static void C_fcall trf_8500(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8500(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_8500(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_8513)
static void C_fcall trf_8513(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8513(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8513(t0,t1);}

C_noret_decl(trf_8355)
static void C_fcall trf_8355(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8355(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8355(t0,t1);}

C_noret_decl(trf_8358)
static void C_fcall trf_8358(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8358(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8358(t0,t1);}

C_noret_decl(trf_8360)
static void C_fcall trf_8360(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8360(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_8360(t0,t1,t2,t3,t4);}

C_noret_decl(trf_8288)
static void C_fcall trf_8288(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8288(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8288(t0,t1);}

C_noret_decl(trf_8291)
static void C_fcall trf_8291(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8291(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8291(t0,t1);}

C_noret_decl(trf_8294)
static void C_fcall trf_8294(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8294(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8294(t0,t1);}

C_noret_decl(trf_8152)
static void C_fcall trf_8152(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8152(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_8152(t0,t1,t2,t3);}

C_noret_decl(trf_8168)
static void C_fcall trf_8168(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8168(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_8168(t0,t1,t2);}

C_noret_decl(trf_7890)
static void C_fcall trf_7890(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7890(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7890(t0,t1);}

C_noret_decl(trf_7893)
static void C_fcall trf_7893(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7893(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7893(t0,t1);}

C_noret_decl(trf_7635)
static void C_fcall trf_7635(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7635(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7635(t0,t1);}

C_noret_decl(trf_7568)
static void C_fcall trf_7568(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7568(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7568(t0,t1);}

C_noret_decl(trf_7558)
static void C_fcall trf_7558(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7558(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7558(t0,t1);}

C_noret_decl(trf_7540)
static void C_fcall trf_7540(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7540(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7540(t0,t1);}

C_noret_decl(trf_7529)
static void C_fcall trf_7529(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7529(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_7529(t0,t1,t2);}

C_noret_decl(trf_7491)
static void C_fcall trf_7491(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7491(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7491(t0,t1);}

C_noret_decl(trf_7484)
static void C_fcall trf_7484(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7484(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7484(t0,t1);}

C_noret_decl(trf_7460)
static void C_fcall trf_7460(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7460(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7460(t0,t1);}

C_noret_decl(trf_7393)
static void C_fcall trf_7393(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7393(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_7393(t0,t1,t2,t3);}

C_noret_decl(trf_7382)
static void C_fcall trf_7382(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7382(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_7382(t0,t1,t2);}

C_noret_decl(trf_7348)
static void C_fcall trf_7348(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7348(void *dummy){
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
f_7348(t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(trf_7321)
static void C_fcall trf_7321(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7321(void *dummy){
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
f_7321(t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(trf_7280)
static void C_fcall trf_7280(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7280(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_7280(t0,t1,t2);}

C_noret_decl(trf_7286)
static void C_fcall trf_7286(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7286(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_7286(t0,t1,t2);}

C_noret_decl(trf_7296)
static void C_fcall trf_7296(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7296(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7296(t0,t1);}

C_noret_decl(trf_7161)
static void C_fcall trf_7161(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7161(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_7161(t0,t1,t2,t3,t4);}

C_noret_decl(trf_7171)
static void C_fcall trf_7171(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7171(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7171(t0,t1);}

C_noret_decl(trf_7121)
static void C_fcall trf_7121(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7121(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_7121(t0,t1,t2,t3,t4);}

C_noret_decl(trf_7131)
static void C_fcall trf_7131(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7131(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7131(t0,t1);}

C_noret_decl(trf_7045)
static void C_fcall trf_7045(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7045(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_7045(t0,t1,t2,t3);}

C_noret_decl(trf_7022)
static void C_fcall trf_7022(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7022(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_7022(t0,t1,t2,t3);}

C_noret_decl(trf_6968)
static void C_fcall trf_6968(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6968(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_6968(t0,t1,t2,t3,t4);}

C_noret_decl(trf_6367)
static void C_fcall trf_6367(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6367(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_6367(t0,t1);}

C_noret_decl(trf_6379)
static void C_fcall trf_6379(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6379(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_6379(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_6432)
static void C_fcall trf_6432(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6432(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_6432(t0,t1);}

C_noret_decl(trf_6391)
static void C_fcall trf_6391(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6391(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_6391(t0,t1,t2);}

C_noret_decl(trf_6404)
static void C_fcall trf_6404(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6404(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_6404(t0,t1);}

C_noret_decl(tr6)
static void C_fcall tr6(C_proc6 k) C_regparm C_noret;
C_regparm static void C_fcall tr6(C_proc6 k){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
(k)(6,t0,t1,t2,t3,t4,t5);}

C_noret_decl(tr7)
static void C_fcall tr7(C_proc7 k) C_regparm C_noret;
C_regparm static void C_fcall tr7(C_proc7 k){
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
(k)(7,t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(tr3)
static void C_fcall tr3(C_proc3 k) C_regparm C_noret;
C_regparm static void C_fcall tr3(C_proc3 k){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
(k)(3,t0,t1,t2);}

C_noret_decl(tr5)
static void C_fcall tr5(C_proc5 k) C_regparm C_noret;
C_regparm static void C_fcall tr5(C_proc5 k){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
(k)(5,t0,t1,t2,t3,t4);}

C_noret_decl(tr4)
static void C_fcall tr4(C_proc4 k) C_regparm C_noret;
C_regparm static void C_fcall tr4(C_proc4 k){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
(k)(4,t0,t1,t2,t3);}

C_noret_decl(tr2)
static void C_fcall tr2(C_proc2 k) C_regparm C_noret;
C_regparm static void C_fcall tr2(C_proc2 k){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
(k)(2,t0,t1);}

C_noret_decl(tr7r)
static void C_fcall tr7r(C_proc7 k) C_regparm C_noret;
C_regparm static void C_fcall tr7r(C_proc7 k){
int n;
C_word *a,t7;
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
n=C_rest_count(0);
a=C_alloc(n*3);
t7=C_restore_rest(a,n);
(k)(t0,t1,t2,t3,t4,t5,t6,t7);}

C_noret_decl(tr6r)
static void C_fcall tr6r(C_proc6 k) C_regparm C_noret;
C_regparm static void C_fcall tr6r(C_proc6 k){
int n;
C_word *a,t6;
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
n=C_rest_count(0);
a=C_alloc(n*3);
t6=C_restore_rest(a,n);
(k)(t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(tr5r)
static void C_fcall tr5r(C_proc5 k) C_regparm C_noret;
C_regparm static void C_fcall tr5r(C_proc5 k){
int n;
C_word *a,t5;
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
n=C_rest_count(0);
a=C_alloc(n*3);
t5=C_restore_rest(a,n);
(k)(t0,t1,t2,t3,t4,t5);}

C_noret_decl(tr2r)
static void C_fcall tr2r(C_proc2 k) C_regparm C_noret;
C_regparm static void C_fcall tr2r(C_proc2 k){
int n;
C_word *a,t2;
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
n=C_rest_count(0);
a=C_alloc(n*3);
t2=C_restore_rest(a,n);
(k)(t0,t1,t2);}

C_noret_decl(tr4r)
static void C_fcall tr4r(C_proc4 k) C_regparm C_noret;
C_regparm static void C_fcall tr4r(C_proc4 k){
int n;
C_word *a,t4;
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
n=C_rest_count(0);
a=C_alloc(n*3);
t4=C_restore_rest(a,n);
(k)(t0,t1,t2,t3,t4);}

C_noret_decl(tr3r)
static void C_fcall tr3r(C_proc3 k) C_regparm C_noret;
C_regparm static void C_fcall tr3r(C_proc3 k){
int n;
C_word *a,t3;
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
n=C_rest_count(0);
a=C_alloc(n*3);
t3=C_restore_rest(a,n);
(k)(t0,t1,t2,t3);}

C_noret_decl(tr3rv)
static void C_fcall tr3rv(C_proc3 k) C_regparm C_noret;
C_regparm static void C_fcall tr3rv(C_proc3 k){
int n;
C_word *a,t3;
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
n=C_rest_count(0);
a=C_alloc(n+1);
t3=C_restore_rest_vector(a,n);
(k)(t0,t1,t2,t3);}

C_noret_decl(tr2rv)
static void C_fcall tr2rv(C_proc2 k) C_regparm C_noret;
C_regparm static void C_fcall tr2rv(C_proc2 k){
int n;
C_word *a,t2;
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
n=C_rest_count(0);
a=C_alloc(n+1);
t2=C_restore_rest_vector(a,n);
(k)(t0,t1,t2);}

/* toplevel */
static C_TLS int toplevel_initialized=0;
C_noret_decl(toplevel_trampoline)
static void C_fcall toplevel_trampoline(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall toplevel_trampoline(void *dummy){
C_grace_toplevel(2,C_SCHEME_UNDEFINED,C_restore);}

void C_ccall C_grace_toplevel(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(toplevel_initialized) C_kontinue(t1,C_SCHEME_UNDEFINED);
else C_toplevel_entry(C_text("grace_toplevel"));
C_check_nursery_minimum(3);
if(!C_demand(3)){
C_save(t1);
C_reclaim((void*)toplevel_trampoline,NULL);}
toplevel_initialized=1;
if(!C_demand_2(5375)){
C_save(t1);
C_rereclaim2(5375*sizeof(C_word), 1);
t1=C_restore;}
a=C_alloc(3);
C_initialize_lf(lf,914);
lf[0]=C_h_intern(&lf[0],14,"expand-optkeys");
lf[1]=C_h_intern(&lf[1],3,"let");
lf[2]=C_h_intern(&lf[2],4,"let*");
lf[3]=C_h_intern(&lf[3],5,"null\077");
lf[4]=C_h_intern(&lf[4],5,"error");
lf[5]=C_decode_literal(C_heaptop,"\376B\000\000\022Too many arguments");
lf[6]=C_h_intern(&lf[6],6,"unless");
lf[7]=C_h_intern(&lf[7],10,"\003sysappend");
lf[8]=C_h_intern(&lf[8],3,"car");
lf[9]=C_h_intern(&lf[9],4,"case");
lf[10]=C_decode_literal(C_heaptop,"\376B\000\000\031Positional after keywords");
lf[11]=C_h_intern(&lf[11],4,"when");
lf[12]=C_h_intern(&lf[12],4,"set!");
lf[13]=C_h_intern(&lf[13],8,"keyword\077");
lf[14]=C_decode_literal(C_heaptop,"\376B\000\000\017Unknown keyword");
lf[15]=C_h_intern(&lf[15],3,"cdr");
lf[16]=C_h_intern(&lf[16],4,"else");
lf[17]=C_h_intern(&lf[17],7,"\003sysmap");
lf[18]=C_h_intern(&lf[18],6,"append");
lf[19]=C_decode_literal(C_heaptop,"\376B\000\000\021Redundant keyword");
lf[20]=C_h_intern(&lf[20],2,"if");
lf[21]=C_decode_literal(C_heaptop,"\376B\000\000\030Missing keyword value in");
lf[22]=C_h_intern(&lf[22],4,"cadr");
lf[23]=C_h_intern(&lf[23],4,"cddr");
lf[24]=C_h_intern(&lf[24],15,"string->keyword");
lf[25]=C_h_intern(&lf[25],14,"symbol->string");
lf[26]=C_h_intern(&lf[26],6,"gensym");
lf[27]=C_decode_literal(C_heaptop,"\376B\000\000\004keyp");
lf[28]=C_decode_literal(C_heaptop,"\376B\000\000\004args");
lf[29]=C_h_intern(&lf[29],10,"*messages*");
lf[30]=C_h_intern(&lf[30],11,"expand-send");
lf[31]=C_h_intern(&lf[31],7,"sprintf");
lf[32]=C_decode_literal(C_heaptop,"\376B\000\000\003~A:");
lf[33]=C_h_intern(&lf[33],15,"keyword->string");
lf[34]=C_decode_literal(C_heaptop,"\376B\000\000\031~S duplicate keyword \047~S\047");
lf[35]=C_decode_literal(C_heaptop,"\376B\000\000!~S missing value for keyword \047~A\047");
lf[36]=C_decode_literal(C_heaptop,"\376B\000\000/~S invalid keyword \047~A\047~%Available keywords: ~A");
lf[37]=C_decode_literal(C_heaptop,"\376B\000\000 ~S expected keyword but got \047~S\047");
lf[38]=C_decode_literal(C_heaptop,"\376B\000\000#~S expected ~A arguments but got ~A");
lf[39]=C_h_intern(&lf[39],5,"&rest");
lf[40]=C_decode_literal(C_heaptop,"\376B\000\000\030~S is an invalid message");
lf[41]=C_h_intern(&lf[41],14,"hash-table-ref");
lf[42]=C_h_intern(&lf[42],3,"cwd");
lf[43]=C_h_intern(&lf[43],17,"\003syspeek-c-string");
lf[44]=C_h_intern(&lf[44],5,"chdir");
lf[45]=C_decode_literal(C_heaptop,"\376B\000\000\002~/");
lf[46]=C_h_intern(&lf[46],17,"\003sysmake-c-string");
lf[47]=C_h_intern(&lf[47],5,"fifth");
lf[48]=C_h_intern(&lf[48],5,"sixth");
lf[49]=C_h_intern(&lf[49],7,"seventh");
lf[50]=C_h_intern(&lf[50],6,"eighth");
lf[51]=C_h_intern(&lf[51],5,"ninth");
lf[52]=C_h_intern(&lf[52],5,"tenth");
lf[53]=C_h_intern(&lf[53],3,"nth");
lf[54]=C_h_intern(&lf[54],8,"list-ref");
lf[55]=C_h_intern(&lf[55],4,"rest");
lf[56]=C_h_intern(&lf[56],4,"last");
lf[57]=C_h_intern(&lf[57],7,"butlast");
lf[58]=C_h_intern(&lf[58],4,"tail");
lf[59]=C_h_intern(&lf[59],5,"list*");
lf[60]=C_decode_literal(C_heaptop,"\376B\000\000&>>> Error: too few arguments to list*.");
lf[61]=C_h_intern(&lf[61],9,"list-set!");
lf[62]=C_h_intern(&lf[62],8,"reverse!");
lf[63]=C_h_intern(&lf[63],9,"make-list");
lf[64]=C_decode_literal(C_heaptop,"\376B\000\000\034Negative length to make-list");
lf[65]=C_h_intern(&lf[65],10,"list-index");
lf[66]=C_h_intern(&lf[66],9,"list-find");
lf[92]=C_h_intern(&lf[92],7,"rescale");
lf[93]=C_h_intern(&lf[93],8,"discrete");
lf[94]=C_h_intern(&lf[94],4,"not\077");
lf[95]=C_h_intern(&lf[95],3,"int");
lf[96]=C_h_intern(&lf[96],4,"plus");
lf[97]=C_h_intern(&lf[97],1,"+");
lf[98]=C_h_intern(&lf[98],5,"minus");
lf[99]=C_h_intern(&lf[99],1,"-");
lf[100]=C_h_intern(&lf[100],5,"times");
lf[101]=C_h_intern(&lf[101],1,"*");
lf[102]=C_h_intern(&lf[102],6,"divide");
lf[103]=C_h_intern(&lf[103],1,"/");
lf[104]=C_h_intern(&lf[104],8,"quantize");
lf[105]=C_h_intern(&lf[105],8,"decimals");
lf[106]=C_h_intern(&lf[106],5,"round");
lf[107]=C_h_intern(&lf[107],4,"expt");
lf[108]=C_decode_literal(C_heaptop,"\376U10.0\000");
lf[109]=C_h_intern(&lf[109],15,"rhythm->seconds");
lf[110]=C_decode_literal(C_heaptop,"\376U60.0\000");
lf[111]=C_decode_literal(C_heaptop,"\376U0.25\000");
lf[112]=C_h_intern(&lf[112],6,"\000tempo");
lf[113]=C_h_intern(&lf[113],5,"\000beat");
lf[114]=C_h_intern(&lf[114],12,"cents->ratio");
lf[115]=C_h_intern(&lf[115],12,"ratio->cents");
lf[117]=C_decode_literal(C_heaptop,"\376B\000\000\033not an x y coordinate list:");
lf[118]=C_h_intern(&lf[118],3,"err");
lf[119]=C_decode_literal(C_heaptop,"\376B\000\000\032not an x y coordinate list");
lf[120]=C_decode_literal(C_heaptop,"\376B\000\000\032not an x y coordinate list");
lf[121]=C_h_intern(&lf[121],6,"interp");
lf[122]=C_decode_literal(C_heaptop,"\376B\000\000\027missing x y coordinates");
lf[123]=C_h_intern(&lf[123],8,"tendency");
lf[124]=C_h_intern(&lf[124],3,"ran");
lf[125]=C_h_intern(&lf[125],3,"fit");
lf[126]=C_h_intern(&lf[126],9,"remainder");
lf[127]=C_decode_literal(C_heaptop,"\376B\000\000\021mode not 1 2 or 3");
lf[128]=C_h_intern(&lf[128],5,"scale");
lf[129]=C_h_intern(&lf[129],6,"modulo");
lf[130]=C_decode_literal(C_heaptop,"\376B\000\000\023limit same as start");
lf[131]=C_h_intern(&lf[131],8,"ran-set!");
lf[132]=C_h_intern(&lf[132],7,"between");
lf[133]=C_h_intern(&lf[133],4,"pick");
lf[134]=C_h_intern(&lf[134],4,"odds");
lf[135]=C_decode_literal(C_heaptop,"\376U1.0\000");
lf[136]=C_h_intern(&lf[136],5,"\000true");
lf[137]=C_h_intern(&lf[137],6,"\000false");
lf[138]=C_h_intern(&lf[138],4,"vary");
lf[139]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[140]=C_decode_literal(C_heaptop,"\376B\000\000\020Not a legal mode");
lf[141]=C_h_intern(&lf[141],8,"shuffle!");
lf[142]=C_h_intern(&lf[142],7,"shuffle");
lf[143]=C_h_intern(&lf[143],6,"ranlow");
lf[144]=C_h_intern(&lf[144],7,"ranhigh");
lf[145]=C_h_intern(&lf[145],9,"ranmiddle");
lf[146]=C_h_intern(&lf[146],7,"ranbeta");
lf[147]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[148]=C_h_intern(&lf[148],2,"\000a");
lf[149]=C_h_intern(&lf[149],2,"\000b");
lf[150]=C_h_intern(&lf[150],6,"ranexp");
lf[151]=C_h_intern(&lf[151],8,"rangauss");
lf[152]=C_h_intern(&lf[152],9,"rancauchy");
lf[153]=C_h_intern(&lf[153],10,"ranpoisson");
lf[154]=C_h_intern(&lf[154],3,"arg");
lf[155]=C_h_intern(&lf[155],8,"rangamma");
lf[156]=C_h_intern(&lf[156],8,"ranbrown");
lf[157]=C_h_intern(&lf[157],7,"ranpink");
lf[158]=C_h_intern(&lf[158],4,"segs");
lf[159]=C_decode_literal(C_heaptop,"\376B\000\000\014Illegal base");
lf[160]=C_decode_literal(C_heaptop,"\376B\000\000\020Not a legal mode");
lf[163]=C_decode_literal(C_heaptop,"\376B\000\000\021Not a note or key");
lf[164]=C_h_intern(&lf[164],13,"string-append");
lf[165]=C_decode_literal(C_heaptop,"\376B\000\000\021Not a note or key");
lf[167]=C_decode_literal(C_heaptop,"\376B\000\000\021Not a note or key");
lf[168]=C_decode_literal(C_heaptop,"\376B\000\000\021Not a note or key");
lf[169]=C_decode_literal(C_heaptop,"\376U0.333333333333333\000");
lf[170]=C_decode_literal(C_heaptop,"\376U0.666666666666667\000");
lf[171]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[172]=C_h_intern(&lf[172],5,"floor");
lf[173]=C_decode_literal(C_heaptop,"\376B\000\000\021Not a note or key");
lf[174]=C_h_intern(&lf[174],4,"note");
lf[175]=C_decode_literal(C_heaptop,"\376B\000\000\0014");
lf[176]=C_h_intern(&lf[176],3,"key");
lf[177]=C_decode_literal(C_heaptop,"\376B\000\000\0014");
lf[178]=C_h_intern(&lf[178],2,"hz");
lf[179]=C_decode_literal(C_heaptop,"\376B\000\000\0014");
lf[180]=C_h_intern(&lf[180],2,"pc");
lf[181]=C_h_intern(&lf[181],6,"invert");
lf[182]=C_decode_literal(C_heaptop,"\376B\000\000\020No inversion for");
lf[183]=C_decode_literal(C_heaptop,"\376B\000\000\020No inversion for");
lf[184]=C_h_intern(&lf[184],9,"transpose");
lf[185]=C_decode_literal(C_heaptop,"\376B\000\000\022No transposion for");
lf[186]=C_h_intern(&lf[186],10,"retrograde");
lf[187]=C_h_intern(&lf[187],7,"reverse");
lf[188]=C_h_intern(&lf[188],11,"scale-order");
lf[189]=C_h_intern(&lf[189],4,"sort");
lf[190]=C_decode_literal(C_heaptop,"\376B\000\000\020Not a legal mode");
lf[192]=C_h_intern(&lf[192],8,"spektrum");
lf[197]=C_h_intern(&lf[197],13,"make-spectrum");
lf[198]=C_h_intern(&lf[198],12,"list->vector");
lf[199]=C_h_intern(&lf[199],13,"spectrum-size");
lf[200]=C_h_intern(&lf[200],14,"spectrum-freqs");
lf[201]=C_h_intern(&lf[201],13,"spectrum-amps");
lf[202]=C_h_intern(&lf[202],13,"spectrum-time");
lf[203]=C_h_intern(&lf[203],14,"spectrum-pairs");
lf[204]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[205]=C_h_intern(&lf[205],16,"spectrum-minfreq");
lf[206]=C_h_intern(&lf[206],16,"spectrum-maxfreq");
lf[207]=C_h_intern(&lf[207],15,"spectrum-minamp");
lf[208]=C_h_intern(&lf[208],12,"\003sysfor-each");
lf[209]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[210]=C_h_intern(&lf[210],15,"spectrum-maxamp");
lf[211]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[212]=C_h_intern(&lf[212],13,"spectrum-keys");
lf[213]=C_h_intern(&lf[213],8,"for-each");
lf[214]=C_h_intern(&lf[214],6,"\000order");
lf[215]=C_h_intern(&lf[215],7,"\000thresh");
lf[216]=C_h_intern(&lf[216],6,"\000quant");
lf[217]=C_h_intern(&lf[217],7,"\000unique");
lf[218]=C_h_intern(&lf[218],11,"fm-spectrum");
lf[219]=C_h_intern(&lf[219],8,"set-car!");
lf[220]=C_h_intern(&lf[220],4,"caar");
lf[221]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[223]=C_h_intern(&lf[223],6,"period");
lf[225]=C_h_intern(&lf[225],14,"\003sysblock-set!");
lf[233]=C_h_intern(&lf[233],7,"pattern");
lf[248]=C_h_intern(&lf[248],4,"\000nad");
lf[249]=C_h_intern(&lf[249],8,"\000periods");
lf[250]=C_h_intern(&lf[250],12,"\000depth-first");
lf[252]=C_decode_literal(C_heaptop,"\376U4294967287.0\000");
lf[253]=C_decode_literal(C_heaptop,"\376U4294967287.0\000");
lf[254]=C_h_intern(&lf[254],14,"\000breadth-first");
lf[255]=C_decode_literal(C_heaptop,"\376B\000\000\026Illegal for traversing");
lf[256]=C_h_intern(&lf[256],7,"\000values");
lf[257]=C_decode_literal(C_heaptop,"\376B\000\000\024Illegal for counting");
lf[259]=C_h_intern(&lf[259],4,"eop\077");
lf[260]=C_h_intern(&lf[260],4,"\000eop");
lf[261]=C_h_intern(&lf[261],4,"eod\077");
lf[262]=C_h_intern(&lf[262],4,"\000eod");
lf[263]=C_h_intern(&lf[263],4,"next");
lf[267]=C_h_intern(&lf[267],5,"force");
lf[268]=C_h_intern(&lf[268],8,"promise\077");
lf[269]=C_h_intern(&lf[269],3,"max");
lf[270]=C_h_intern(&lf[270],10,"make-cycle");
lf[272]=C_h_intern(&lf[272],4,"\000for");
lf[273]=C_h_intern(&lf[273],7,"\000repeat");
lf[275]=C_h_intern(&lf[275],5,"palin");
lf[277]=C_h_intern(&lf[277],15,"make-palindrome");
lf[279]=C_h_intern(&lf[279],6,"\000elide");
lf[280]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\377\006\000\376\003\000\000\002\376\377\006\001\376\377\016");
lf[281]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\377\006\001\376\003\000\000\002\376\377\006\000\376\377\016");
lf[282]=C_h_intern(&lf[282],9,"make-line");
lf[284]=C_h_intern(&lf[284],9,"make-heap");
lf[286]=C_h_intern(&lf[286],13,"make-rotation");
lf[288]=C_h_intern(&lf[288],7,"\000rotate");
lf[290]=C_h_intern(&lf[290],11,"random-item");
lf[298]=C_h_intern(&lf[298],14,"make-weighting");
lf[301]=C_h_intern(&lf[301],7,"\000weight");
lf[302]=C_h_intern(&lf[302],4,"\000min");
lf[303]=C_h_intern(&lf[303],4,"\000max");
lf[304]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[305]=C_h_intern(&lf[305],11,"make-markov");
lf[307]=C_h_intern(&lf[307],5,"\000past");
lf[308]=C_h_intern(&lf[308],2,"->");
lf[309]=C_decode_literal(C_heaptop,"\376B\000\000.Left hand sides have different number of items");
lf[310]=C_h_intern(&lf[310],3,"\000->");
lf[311]=C_decode_literal(C_heaptop,"\376B\000\000\042Transition missing right hand side");
lf[312]=C_decode_literal(C_heaptop,"\376B\000\000\030Transition is not a list");
lf[313]=C_decode_literal(C_heaptop,"\376B\000\000 Not a list of Markov transitions");
lf[314]=C_decode_literal(C_heaptop,"\376B\000\000\032No transition matches past");
lf[316]=C_h_intern(&lf[316],10,"graph-node");
lf[317]=C_h_intern(&lf[317],10,"make-graph");
lf[319]=C_h_intern(&lf[319],3,"\000to");
lf[320]=C_h_intern(&lf[320],3,"\000id");
lf[321]=C_decode_literal(C_heaptop,"\376B\000\000\025Graph node not a list");
lf[322]=C_decode_literal(C_heaptop,"\376B\000\000\016Not graph data");
lf[323]=C_decode_literal(C_heaptop,"\376B\000\000\024No graph node for id");
lf[324]=C_h_intern(&lf[324],14,"markov-analyze");
lf[325]=C_h_intern(&lf[325],6,"format");
lf[326]=C_decode_literal(C_heaptop,"\376B\000\000\002~s");
lf[327]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\002->\376\377\016");
lf[328]=C_decode_literal(C_heaptop,"\376B\000\000\001 ");
lf[329]=C_h_intern(&lf[329],7,"newline");
lf[330]=C_h_intern(&lf[330],7,"display");
lf[331]=C_h_intern(&lf[331],19,"\003syswrite-char/port");
lf[332]=C_h_intern(&lf[332],19,"\003sysstandard-output");
lf[333]=C_h_intern(&lf[333],3,"min");
lf[334]=C_decode_literal(C_heaptop,"\376B\000\000\000");
lf[335]=C_decode_literal(C_heaptop,"\376B\000\000\003 ~a");
lf[336]=C_decode_literal(C_heaptop,"\376B\000\000\002~a");
lf[337]=C_decode_literal(C_heaptop,"\376B\000\000\002~a");
lf[338]=C_h_intern(&lf[338],11,"make-string");
lf[339]=C_decode_literal(C_heaptop,"\376U1.0\000");
lf[340]=C_h_intern(&lf[340],1,"<");
lf[341]=C_h_intern(&lf[341],11,"string-ci<\077");
lf[342]=C_decode_literal(C_heaptop,"\376B\000\000\002~a");
lf[343]=C_decode_literal(C_heaptop,"\376B\000\000\002~a");
lf[344]=C_decode_literal(C_heaptop,"\376B\000\000\020Not a legal mode");
lf[345]=C_h_intern(&lf[345],5,"\000mode");
lf[347]=C_h_intern(&lf[347],5,"token");
lf[352]=C_h_intern(&lf[352],1,"t");
lf[357]=C_h_intern(&lf[357],4,"rule");
lf[360]=C_h_intern(&lf[360],22,"hash-table-ref/default");
lf[367]=C_h_intern(&lf[367],11,"parse-error");
lf[371]=C_h_intern(&lf[371],10,"parse-unit");
lf[383]=C_decode_literal(C_heaptop,"\376B\000\000\014no info for ");
lf[385]=C_h_intern(&lf[385],14,"string->symbol");
lf[386]=C_h_intern(&lf[386],5,"equal");
lf[387]=C_h_intern(&lf[387],3,"and");
lf[388]=C_h_intern(&lf[388],2,"or");
lf[389]=C_h_intern(&lf[389],3,"not");
lf[390]=C_decode_literal(C_heaptop,"\376B\000\0005emit-token-unit: dont know how to emit slotref token ");
lf[391]=C_decode_literal(C_heaptop,"\376B\000\000\047emit-token-unit: dont know how to emit ");
lf[394]=C_decode_literal(C_heaptop,"\376B\000\000\033emit: dont know how to emit");
lf[400]=C_decode_literal(C_heaptop,"\376B\000\000\035Not a token type or rule type");
lf[401]=C_decode_literal(C_heaptop,"\376B\000\000\047Pattern opr not one of and, or, *, +, @");
lf[402]=C_h_intern(&lf[402],1,"@");
lf[403]=C_decode_literal(C_heaptop,"\376B\000\000\047Not a pattern value or pattern operator");
lf[404]=C_h_intern(&lf[404],6,"printf");
lf[405]=C_decode_literal(C_heaptop,"\376B\000\000!~%parse[~A]: pattern=~S tokens=~S");
lf[410]=C_h_intern(&lf[410],2,">=");
lf[411]=C_decode_literal(C_heaptop,"\376B\000\000\004stop");
lf[412]=C_decode_literal(C_heaptop,"\376B\000\000\004temp");
lf[413]=C_h_intern(&lf[413],5,"begin");
lf[414]=C_decode_literal(C_heaptop,"\376B\000\000\004bool");
lf[415]=C_decode_literal(C_heaptop,"\376B\000\000\004tail");
lf[416]=C_h_intern(&lf[416],1,">");
lf[417]=C_h_intern(&lf[417],2,"<=");
lf[418]=C_decode_literal(C_heaptop,"\376B\000\000\004goal");
lf[419]=C_decode_literal(C_heaptop,"\376B\000\000\004from");
lf[420]=C_decode_literal(C_heaptop,"\376B\000\000\004step");
lf[424]=C_h_intern(&lf[424],17,"*sal-trace-input*");
lf[425]=C_h_intern(&lf[425],3,"sal");
lf[426]=C_h_intern(&lf[426],11,"print-error");
lf[427]=C_decode_literal(C_heaptop,"\376B\000\000\013>>> Error: ");
lf[428]=C_h_intern(&lf[428],9,"substring");
lf[429]=C_h_intern(&lf[429],2,"pp");
lf[430]=C_h_intern(&lf[430],4,"eval");
lf[431]=C_h_intern(&lf[431],7,"\000syntax");
lf[432]=C_h_intern(&lf[432],7,"\000scheme");
lf[433]=C_decode_literal(C_heaptop,"\376B\000\000\023Illegal statement: ");
lf[434]=C_h_intern(&lf[434],7,"call/cc");
lf[435]=C_decode_literal(C_heaptop,"\376B\000\000\002~S");
lf[436]=C_h_intern(&lf[436],9,"sal:print");
lf[437]=C_h_intern(&lf[437],13,"print-message");
lf[438]=C_decode_literal(C_heaptop,"\376B\000\000\002{}");
lf[439]=C_decode_literal(C_heaptop,"\376B\000\000\001}");
lf[440]=C_decode_literal(C_heaptop,"\376B\000\000\001 ");
lf[441]=C_decode_literal(C_heaptop,"\376B\000\000\001{");
lf[442]=C_decode_literal(C_heaptop,"\376B\000\000\002#t");
lf[443]=C_decode_literal(C_heaptop,"\376B\000\000\002~S");
lf[444]=C_decode_literal(C_heaptop,"\376B\000\000\002#f");
lf[445]=C_decode_literal(C_heaptop,"\376B\000\000\001\012");
lf[446]=C_h_intern(&lf[446],9,"sal:chdir");
lf[447]=C_h_intern(&lf[447],8,"sal:load");
lf[448]=C_h_intern(&lf[448],13,"load-sal-file");
lf[449]=C_h_intern(&lf[449],4,"load");
lf[450]=C_h_intern(&lf[450],15,"\003syssubstring=\077");
lf[451]=C_decode_literal(C_heaptop,"\376B\000\000\004.sal");
lf[452]=C_decode_literal(C_heaptop,"\376B\000\000\021>>> Error: file \042");
lf[453]=C_decode_literal(C_heaptop,"\376B\000\000\020\042does not exist\012");
lf[454]=C_h_intern(&lf[454],12,"file-exists\077");
lf[455]=C_h_intern(&lf[455],8,"sal:open");
lf[456]=C_decode_literal(C_heaptop,"\376B\000\000)>>> Error: open command not implemented.\012");
lf[457]=C_h_intern(&lf[457],10,"sal:output");
lf[458]=C_decode_literal(C_heaptop,"\376B\000\000+>>> Error: output command not implemented.\012");
lf[470]=C_h_intern(&lf[470],8,"operator");
lf[471]=C_h_intern(&lf[471],8,"bindings");
lf[472]=C_h_intern(&lf[472],10,"collectors");
lf[473]=C_h_intern(&lf[473],9,"initially");
lf[474]=C_h_intern(&lf[474],9,"end-tests");
lf[475]=C_h_intern(&lf[475],7,"looping");
lf[476]=C_h_intern(&lf[476],8,"stepping");
lf[477]=C_h_intern(&lf[477],7,"finally");
lf[478]=C_h_intern(&lf[478],9,"returning");
lf[484]=C_decode_literal(C_heaptop,"\376B\000\000\023illegal loop syntax");
lf[485]=C_decode_literal(C_heaptop,"\376B\000\000\002()");
lf[486]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[487]=C_decode_literal(C_heaptop,"\376B\000\000\001 ");
lf[488]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[489]=C_decode_literal(C_heaptop,"\376B\000\000\020clause context: ");
lf[490]=C_decode_literal(C_heaptop,"\376B\000\000\014LOOP ERROR: ");
lf[492]=C_decode_literal(C_heaptop,"\376B\000\000*Variable expected but source code ran out.");
lf[493]=C_decode_literal(C_heaptop,"\376B\000\000.\047for\047 clause expected but source code ran out.");
lf[494]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[495]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[496]=C_decode_literal(C_heaptop,"\376B\000\000\031 is not valid with \047for\047.");
lf[497]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[498]=C_decode_literal(C_heaptop,"\376B\000\000\034\047 where a variable expected.");
lf[500]=C_h_intern(&lf[500],3,"for");
lf[501]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[502]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[503]=C_h_intern(&lf[503],8,"downfrom");
lf[504]=C_h_intern(&lf[504],5,"above");
lf[505]=C_h_intern(&lf[505],5,"below");
lf[506]=C_h_intern(&lf[506],6,"downto");
lf[507]=C_h_intern(&lf[507],4,"from");
lf[508]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[509]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[510]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[511]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[512]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[513]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[514]=C_h_intern(&lf[514],2,"to");
lf[515]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[516]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[517]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[518]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[519]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[520]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[521]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[522]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[523]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[524]=C_h_intern(&lf[524],2,"by");
lf[525]=C_decode_literal(C_heaptop,"\376B\000\000\025Found duplicate \047by\047.");
lf[526]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[527]=C_decode_literal(C_heaptop,"\376B\000\000\032\047 is not valid with \047for\047.");
lf[528]=C_decode_literal(C_heaptop,"\376B\000\000,Expected expression but source code ran out.");
lf[530]=C_decode_literal(C_heaptop,"\376B\000\0001\047repeat\047 clause expected but source code ran out.");
lf[531]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[533]=C_h_intern(&lf[533],6,"across");
lf[534]=C_h_intern(&lf[534],13,"vector-length");
lf[535]=C_h_intern(&lf[535],10,"vector-ref");
lf[536]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[537]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[538]=C_h_intern(&lf[538],4,"over");
lf[539]=C_h_intern(&lf[539],2,"in");
lf[540]=C_h_intern(&lf[540],5,"quote");
lf[541]=C_decode_literal(C_heaptop,"\376B\000\000\014Extraneous \047");
lf[542]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[543]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[544]=C_decode_literal(C_heaptop,"\376B\000\000\017Duplicate \047by\047.");
lf[545]=C_decode_literal(C_heaptop,"\376B\000\000\036\047by\047 is invalid with \047across\047.");
lf[546]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[547]=C_decode_literal(C_heaptop,"\376B\000\000\032\047 is not valid with \047for\047.");
lf[548]=C_h_intern(&lf[548],2,"on");
lf[549]=C_decode_literal(C_heaptop,"\376B\000\000,Expression expected but source code ran out.");
lf[550]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[552]=C_h_intern(&lf[552],1,"=");
lf[553]=C_decode_literal(C_heaptop,"\376B\000\000\016Duplicate \047=\047.");
lf[554]=C_h_intern(&lf[554],4,"then");
lf[555]=C_decode_literal(C_heaptop,"\376B\000\000\021Duplicate \047then\047.");
lf[556]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[557]=C_decode_literal(C_heaptop,"\376B\000\000\032\047 is not valid with \047for\047.");
lf[558]=C_decode_literal(C_heaptop,"\376B\000\000,Expression expected but source code ran out.");
lf[560]=C_h_intern(&lf[560],4,"with");
lf[561]=C_decode_literal(C_heaptop,"\376B\000\000\021Extraneous \047and\047.");
lf[562]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[563]=C_decode_literal(C_heaptop,"\376B\000\000\027\047 where \047and\047 expected.");
lf[564]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[565]=C_decode_literal(C_heaptop,"\376B\000\000\027\047 where \047and\047 expected.");
lf[566]=C_decode_literal(C_heaptop,"\376B\000\000\020Duplicate \047and\047.");
lf[567]=C_decode_literal(C_heaptop,"\376B\000\000\021Extraneous \047and\047.");
lf[568]=C_decode_literal(C_heaptop,"\376B\000\000\037Found \047=\047 where \047and\047 expected.");
lf[569]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[570]=C_decode_literal(C_heaptop,"\376B\000\000\032\047 where variable expected.");
lf[571]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[572]=C_decode_literal(C_heaptop,"\376B\000\000\036\047 where \047=\047 or \047and\047 expected.");
lf[574]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[575]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[577]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[578]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[580]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[581]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[583]=C_h_intern(&lf[583],3,"sum");
lf[584]=C_h_intern(&lf[584],5,"count");
lf[585]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[586]=C_h_intern(&lf[586],8,"minimize");
lf[587]=C_h_intern(&lf[587],8,"maximize");
lf[588]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[589]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[590]=C_h_intern(&lf[590],4,"list");
lf[591]=C_h_intern(&lf[591],8,"set-cdr!");
lf[592]=C_h_intern(&lf[592],9,"last-pair");
lf[593]=C_h_intern(&lf[593],7,"collect");
lf[594]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\004list\376\003\000\000\002\376\377\006\000\376\377\016");
lf[595]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[596]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[597]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\004list\376\377\016");
lf[598]=C_h_intern(&lf[598],5,"nconc");
lf[599]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[600]=C_decode_literal(C_heaptop,"\376B\000\000\007\047 and \047");
lf[601]=C_decode_literal(C_heaptop,"\376B\000\000 \047 are incompatible accumulators.");
lf[602]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007collect\376\003\000\000\002\376\001\000\000\006append\376\003\000\000\002\376\001\000\000\005nconc\376\377\016");
lf[603]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\005never\376\003\000\000\002\376\001\000\000\006always\376\377\016");
lf[604]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\010minimize\376\003\000\000\002\376\001\000\000\010maximize\376\377\016");
lf[605]=C_h_intern(&lf[605],4,"into");
lf[606]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[607]=C_decode_literal(C_heaptop,"\376B\000\000!\047 where \047into\047 variable expected.");
lf[608]=C_decode_literal(C_heaptop,"\376B\000\000\030Missing \047into\047 variable.");
lf[609]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[610]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[612]=C_h_intern(&lf[612],6,"return");
lf[614]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\002go\376\003\000\000\002\376\377\006\001\376\377\016");
lf[615]=C_h_intern(&lf[615],5,"until");
lf[616]=C_h_intern(&lf[616],5,"while");
lf[617]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[618]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[620]=C_h_intern(&lf[620],7,"thereis");
lf[621]=C_h_intern(&lf[621],6,"always");
lf[622]=C_h_intern(&lf[622],5,"never");
lf[623]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[624]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[626]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[627]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[629]=C_decode_literal(C_heaptop,"\376B\000\000\025Missing \047and\047 clause.");
lf[630]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[631]=C_decode_literal(C_heaptop,"\376B\000\000\036\047 is not conditional operator.");
lf[632]=C_h_intern(&lf[632],4,"task");
lf[633]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007thereis\376\003\000\000\002\376\001\000\000\005never\376\003\000\000\002\376\001\000\000\006always\376\377\016");
lf[635]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\004else\376\377\016");
lf[636]=C_decode_literal(C_heaptop,"\376B\000\000\026Missing \047else\047 clause.");
lf[637]=C_decode_literal(C_heaptop,"\376B\000\000\033Missing conditional clause.");
lf[638]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[639]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[641]=C_h_intern(&lf[641],2,"do");
lf[642]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[643]=C_decode_literal(C_heaptop,"\376B\000\000\030\047 clause cannot follow \047");
lf[644]=C_decode_literal(C_heaptop,"\376B\000\000\002\047.");
lf[645]=C_h_intern(&lf[645],4,"iter");
lf[646]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[647]=C_decode_literal(C_heaptop,"\376B\000\000\032\047 where operator expected.");
lf[648]=C_h_intern(&lf[648],6,"repeat");
lf[649]=C_h_intern(&lf[649],2,"as");
lf[651]=C_h_intern(&lf[651],10,"mm:make-on");
lf[652]=C_h_intern(&lf[652],5,"\000time");
lf[653]=C_h_intern(&lf[653],4,"\000key");
lf[654]=C_h_intern(&lf[654],4,"\000vel");
lf[655]=C_h_intern(&lf[655],5,"\000chan");
lf[656]=C_h_intern(&lf[656],6,"mm:on\077");
lf[657]=C_h_intern(&lf[657],11,"mm:make-off");
lf[658]=C_h_intern(&lf[658],7,"mm:off\077");
lf[659]=C_h_intern(&lf[659],13,"mm:make-touch");
lf[660]=C_h_intern(&lf[660],4,"\000val");
lf[661]=C_h_intern(&lf[661],9,"mm:touch\077");
lf[662]=C_h_intern(&lf[662],12,"mm:make-ctrl");
lf[663]=C_h_intern(&lf[663],4,"\000num");
lf[664]=C_h_intern(&lf[664],8,"mm:ctrl\077");
lf[665]=C_h_intern(&lf[665],12,"mm:make-prog");
lf[666]=C_h_intern(&lf[666],8,"mm:prog\077");
lf[667]=C_h_intern(&lf[667],13,"mm:make-press");
lf[668]=C_h_intern(&lf[668],9,"mm:press\077");
lf[669]=C_h_intern(&lf[669],12,"mm:make-bend");
lf[670]=C_h_intern(&lf[670],7,"mm:free");
lf[671]=C_h_intern(&lf[671],7,"mm:copy");
lf[672]=C_h_intern(&lf[672],7,"mm:time");
lf[673]=C_h_intern(&lf[673],12,"mm:time-set!");
lf[674]=C_h_intern(&lf[674],7,"mm:chan");
lf[675]=C_h_intern(&lf[675],12,"mm:chan-set!");
lf[676]=C_h_intern(&lf[676],6,"mm:key");
lf[677]=C_h_intern(&lf[677],11,"mm:key-set!");
lf[678]=C_h_intern(&lf[678],6,"mm:vel");
lf[679]=C_h_intern(&lf[679],11,"mm:vel-set!");
lf[680]=C_h_intern(&lf[680],6,"mm:val");
lf[681]=C_h_intern(&lf[681],8,"mm:type\077");
lf[682]=C_h_intern(&lf[682],11,"mm:val-set!");
lf[683]=C_h_intern(&lf[683],1,"k");
lf[684]=C_h_intern(&lf[684],6,"mm:num");
lf[685]=C_h_intern(&lf[685],11,"mm:num-set!");
lf[686]=C_h_intern(&lf[686],7,"mp:note");
lf[687]=C_h_intern(&lf[687],7,"mp:midi");
lf[688]=C_h_intern(&lf[688],6,"mp:off");
lf[689]=C_h_intern(&lf[689],5,"mp:on");
lf[690]=C_h_intern(&lf[690],8,"mp:touch");
lf[691]=C_h_intern(&lf[691],7,"mp:ctrl");
lf[692]=C_h_intern(&lf[692],7,"mp:prog");
lf[693]=C_h_intern(&lf[693],8,"mp:press");
lf[694]=C_h_intern(&lf[694],7,"mp:bend");
lf[695]=C_h_intern(&lf[695],5,"mp:mm");
lf[696]=C_h_intern(&lf[696],9,"mp:inhook");
lf[697]=C_decode_literal(C_heaptop,"\376B\000\000*>>> Error: ~A~%    Aborting MIDI inhook.~%");
lf[698]=C_h_intern(&lf[698],27,"condition-property-accessor");
lf[699]=C_h_intern(&lf[699],3,"exn");
lf[700]=C_h_intern(&lf[700],7,"message");
lf[701]=C_h_intern(&lf[701],22,"with-exception-handler");
lf[702]=C_h_intern(&lf[702],30,"call-with-current-continuation");
lf[703]=C_h_intern(&lf[703],4,"cs:i");
lf[704]=C_h_intern(&lf[704],4,"cs:f");
lf[705]=C_h_intern(&lf[705],8,"cs:clear");
lf[706]=C_h_intern(&lf[706],7,"cm-logo");
lf[707]=C_decode_literal(C_heaptop,"\376B\000\000\001 ");
lf[708]=C_decode_literal(C_heaptop,"\376B\000\000\000");
lf[709]=C_decode_literal(C_heaptop,"\376B\000\000\015Common Music ");
lf[710]=C_decode_literal(C_heaptop,"\376B\000\000\001.");
lf[711]=C_decode_literal(C_heaptop,"\376B\000\000\001.");
lf[712]=C_decode_literal(C_heaptop,"\376B\000\000\000");
lf[713]=C_decode_literal(C_heaptop,"\376B\000\000\002~%");
lf[714]=C_h_intern(&lf[714],25,"current-time-milliseconds");
lf[715]=C_h_intern(&lf[715],20,"current-time-seconds");
lf[717]=C_h_intern(&lf[717],6,"\003sysgc");
lf[720]=C_h_intern(&lf[720],6,"sprout");
lf[721]=C_h_intern(&lf[721],9,"\003syserror");
lf[722]=C_decode_literal(C_heaptop,"\376B\000\000\033too many optional arguments");
lf[723]=C_h_intern(&lf[723],3,"now");
lf[724]=C_h_intern(&lf[724],11,"time-format");
lf[725]=C_decode_literal(C_heaptop,"\376U1.0\000");
lf[726]=C_decode_literal(C_heaptop,"\376U1.0\000");
lf[727]=C_h_intern(&lf[727],1,"m");
lf[728]=C_decode_literal(C_heaptop,"\376B\000\000\021not a time-format");
lf[729]=C_h_intern(&lf[729],1,"s");
lf[730]=C_h_intern(&lf[730],5,"pause");
lf[731]=C_h_intern(&lf[731],7,"paused\077");
lf[732]=C_h_intern(&lf[732],4,"cont");
lf[733]=C_h_intern(&lf[733],4,"stop");
lf[734]=C_decode_literal(C_heaptop,"\376B\000\000\021Not an integer id");
lf[735]=C_h_intern(&lf[735],4,"hush");
lf[737]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\014%%stopproc%%\376\003\000\000\002\376\377\001\377\377\377\377\376\377\016");
lf[739]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[740]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[743]=C_h_intern(&lf[743],14,"return-to-host");
lf[744]=C_h_intern(&lf[744],6,"define");
lf[745]=C_decode_literal(C_heaptop,"\376B\000\000\027Illegal process formals");
lf[746]=C_h_intern(&lf[746],18,"\003sysregister-macro");
lf[747]=C_h_intern(&lf[747],14,"define-process");
lf[748]=C_h_intern(&lf[748],6,"lambda");
lf[749]=C_h_intern(&lf[749],7,"elapsed");
lf[750]=C_h_intern(&lf[750],1,"x");
lf[751]=C_h_intern(&lf[751],4,"wait");
lf[752]=C_h_intern(&lf[752],18,"current-error-port");
lf[753]=C_h_intern(&lf[753],19,"print-error-message");
lf[754]=C_decode_literal(C_heaptop,"\376B\000\000\017>>> Error (run)");
lf[755]=C_decode_literal(C_heaptop,"\376B\000\000*Warning: possible non-terminating process.");
lf[756]=C_decode_literal(C_heaptop,"\376B\000\000\003err");
lf[757]=C_decode_literal(C_heaptop,"\376B\000\000\004wait");
lf[758]=C_decode_literal(C_heaptop,"\376B\000\000\004time");
lf[759]=C_h_intern(&lf[759],3,"run");
lf[760]=C_h_intern(&lf[760],20,"\003sysregister-macro-2");
lf[761]=C_h_intern(&lf[761],15,"hash-table-set!");
lf[762]=C_decode_literal(C_heaptop,"\376B\000\000\010cs:clear");
lf[763]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\010cs:clear\376\377\016");
lf[764]=C_decode_literal(C_heaptop,"\376B\000\000\004cs:f");
lf[765]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\004cs:f\376\003\000\000\002\376\001\000\000\005&rest\376\377\016");
lf[766]=C_decode_literal(C_heaptop,"\376B\000\000\004cs:i");
lf[767]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\004cs:i\376\003\000\000\002\376\001\000\000\005&rest\376\377\016");
lf[768]=C_decode_literal(C_heaptop,"\376B\000\000\011mp:inhook");
lf[769]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\011mp:inhook\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000func\376\003\000\000\002\376\377\006\000\376\377\016\376\377\016");
lf[770]=C_decode_literal(C_heaptop,"\376B\000\000\005mp:mm");
lf[771]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\005mp:mm\376\003\000\000\002\376\003\000\000\002\376\001\000\000\003\000mm\376\003\000\000\002\376\377\006\000\376\377\016\376\377\016");
lf[772]=C_decode_literal(C_heaptop,"\376B\000\000\007mp:bend");
lf[773]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007mp:bend\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000val\376\003\000\000\002\376\377\001\000"
"\000 \000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[774]=C_decode_literal(C_heaptop,"\376B\000\000\010mp:press");
lf[775]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\010mp:press\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000val\376\003\000\000\002\376\377\001"
"\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[776]=C_decode_literal(C_heaptop,"\376B\000\000\007mp:prog");
lf[777]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007mp:prog\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000val\376\003\000\000\002\376\377\001\000"
"\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[778]=C_decode_literal(C_heaptop,"\376B\000\000\007mp:ctrl");
lf[779]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007mp:ctrl\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000num\376\003\000\000\002\376\377\001\000"
"\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000val\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[780]=C_decode_literal(C_heaptop,"\376B\000\000\010mp:touch");
lf[781]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\010mp:touch\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000key\376\003\000\000\002\376\377\001"
"\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000val\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[782]=C_decode_literal(C_heaptop,"\376B\000\000\005mp:on");
lf[783]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\005mp:on\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000key\376\003\000\000\002\376\377\001\000\000\000"
"<\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000vel\376\003\000\000\002\376\377\001\000\000\000@\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[784]=C_decode_literal(C_heaptop,"\376B\000\000\006mp:off");
lf[785]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\006mp:off\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000key\376\003\000\000\002\376\377\001\000\000"
"\000<\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[786]=C_decode_literal(C_heaptop,"\376B\000\000\007mp:midi");
lf[787]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007mp:midi\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000dur\376\003\000\000\002\376U0."
"5\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000key\376\003\000\000\002\376\377\001\000\000\000<\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000amp\376\003\000\000\002\376U0.5\000\376\377\016\376\003\000\000\002\376\003\000"
"\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[788]=C_decode_literal(C_heaptop,"\376B\000\000\007mp:note");
lf[789]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007mp:note\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000dur\376\003\000\000\002\376U0."
"5\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000key\376\003\000\000\002\376\377\001\000\000\000<\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000amp\376\003\000\000\002\376U0.5\000\376\377\016\376\003\000\000\002\376\003\000"
"\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[790]=C_h_intern(&lf[790],5,":loop");
lf[791]=C_h_intern(&lf[791],7,"tagbody");
lf[792]=C_h_intern(&lf[792],5,"block");
lf[793]=C_h_intern(&lf[793],3,"nil");
lf[794]=C_h_intern(&lf[794],2,"go");
lf[795]=C_h_intern(&lf[795],8,"function");
lf[796]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[797]=C_h_intern(&lf[797],3,"pop");
lf[798]=C_h_intern(&lf[798],4,"cons");
lf[799]=C_h_intern(&lf[799],4,"push");
lf[800]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\002go\376\003\000\000\002\376\377\006\001\376\377\016");
lf[801]=C_h_intern(&lf[801],4,"loop");
lf[802]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[803]=C_decode_literal(C_heaptop,"\376B\000\000\030SalStatementSequenceRule");
lf[804]=C_decode_literal(C_heaptop,"\376B\000\000\020SalStatementRule");
lf[805]=C_decode_literal(C_heaptop,"\376B\000\000\017Variable: ~A = ");
lf[806]=C_decode_literal(C_heaptop,"\376B\000\000\002)\012");
lf[807]=C_decode_literal(C_heaptop,"\376B\000\000\002, ");
lf[808]=C_decode_literal(C_heaptop,"\376B\000\000\002 (");
lf[809]=C_decode_literal(C_heaptop,"\376B\000\000\012Function: ");
lf[810]=C_h_intern(&lf[810],7,"\000return");
lf[811]=C_h_intern(&lf[811],9,"\000function");
lf[812]=C_decode_literal(C_heaptop,"\376B\000\000\011Process: ");
lf[813]=C_h_intern(&lf[813],8,"\000process");
lf[814]=C_decode_literal(C_heaptop,"\376B\000\000\003...");
lf[815]=C_decode_literal(C_heaptop,"\376B\000\000\026SalDefineStatementRule");
lf[816]=C_decode_literal(C_heaptop,"\376B\000\000\016SalFunDeclRule");
lf[817]=C_decode_literal(C_heaptop,"\376B\000\000\017>>> Error (run)");
lf[818]=C_h_intern(&lf[818],4,"cond");
lf[819]=C_decode_literal(C_heaptop,"\376B\000\000\005abort");
lf[820]=C_decode_literal(C_heaptop,"\376B\000\000\005error");
lf[821]=C_decode_literal(C_heaptop,"\376B\000\000\004wait");
lf[822]=C_decode_literal(C_heaptop,"\376B\000\000\004wait");
lf[823]=C_decode_literal(C_heaptop,"\376B\000\000\004time");
lf[824]=C_h_intern(&lf[824],5,"\000loop");
lf[825]=C_h_intern(&lf[825],4,"\000run");
lf[826]=C_decode_literal(C_heaptop,"\376B\000\000\035run statement outside process");
lf[827]=C_decode_literal(C_heaptop,"\376B\000\000\024SalLoopStatementRule");
lf[828]=C_decode_literal(C_heaptop,"\376B\000\000\022SalTerminationRule");
lf[829]=C_decode_literal(C_heaptop,"\376B\000\000\017SalSteppingRule");
lf[830]=C_decode_literal(C_heaptop,"\376B\000\000\002#f");
lf[831]=C_decode_literal(C_heaptop,"\376B\000\000\002#f");
lf[832]=C_decode_literal(C_heaptop,"\376B\000\000\022SalConditionalRule");
lf[833]=C_decode_literal(C_heaptop,"\376B\000\000\014SalBlockRule");
lf[834]=C_h_intern(&lf[834],9,"list-tail");
lf[835]=C_decode_literal(C_heaptop,"\376B\000\000\021SalAssignmentRule");
lf[836]=C_decode_literal(C_heaptop,"\376B\000\000\015SalAssignRule");
lf[837]=C_h_intern(&lf[837],9,"\000bindings");
lf[838]=C_decode_literal(C_heaptop,"\376B\000\000\017SalBindingsRule");
lf[839]=C_decode_literal(C_heaptop,"\376B\000\000\002#f");
lf[840]=C_decode_literal(C_heaptop,"\376B\000\000\013SalBindRule");
lf[841]=C_decode_literal(C_heaptop,"\376B\000\000!return statement outside function");
lf[842]=C_decode_literal(C_heaptop,"\376B\000\000\025SalFunctionReturnRule");
lf[843]=C_decode_literal(C_heaptop,"\376B\000\000 wait statement outside run block");
lf[844]=C_decode_literal(C_heaptop,"\376B\000\000\022SalProcessWaitRule");
lf[845]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\006fix-me\376\003\000\000\002\376\001\000\000\004plot\376\377\016");
lf[846]=C_decode_literal(C_heaptop,"\376B\000\000\024SalPlotStatementRule");
lf[847]=C_decode_literal(C_heaptop,"\376B\000\000\026SalOutputStatementRule");
lf[848]=C_decode_literal(C_heaptop,"\376B\000\000\026SalSystemStatementRule");
lf[849]=C_h_intern(&lf[849],10,"sal:system");
lf[850]=C_decode_literal(C_heaptop,"\376B\000\000\025SalChdirStatementRule");
lf[851]=C_decode_literal(C_heaptop,"\376B\000\000\024SalLoadStatementRule");
lf[852]=C_decode_literal(C_heaptop,"\376B\000\000\024SalExecStatementRule");
lf[853]=C_decode_literal(C_heaptop,"\376B\000\000\024SalSendStatementRule");
lf[854]=C_decode_literal(C_heaptop,"\376B\000\000\026SalSproutStatementRule");
lf[855]=C_decode_literal(C_heaptop,"\376B\000\000\025SalPrintStatementRule");
lf[856]=C_decode_literal(C_heaptop,"\376B\000\000\014SalSexprRule");
lf[857]=C_decode_literal(C_heaptop,"\376B\000\000\013SalTermRule");
lf[858]=C_decode_literal(C_heaptop,"\376B\000\000\014SalMexprRule");
lf[859]=C_decode_literal(C_heaptop,"\376B\000\000\011SalOpRule");
lf[860]=C_decode_literal(C_heaptop,"\376B\000\000\016SalFuncallRule");
lf[861]=C_decode_literal(C_heaptop,"\376B\000\000\016SalFunargsRule");
lf[862]=C_decode_literal(C_heaptop,"\376B\000\000\014SalKargsRule");
lf[863]=C_decode_literal(C_heaptop,"\376B\000\000\014SalPargsRule");
lf[864]=C_decode_literal(C_heaptop,"\376B\000\000\015SalIfExprRule");
lf[865]=C_decode_literal(C_heaptop,"\376B\000\000\013SalArefRule");
lf[866]=C_decode_literal(C_heaptop,"\376B\000\000\012SalEltRule");
lf[867]=C_h_intern(&lf[867],7,"unquote");
lf[868]=C_h_intern(&lf[868],16,"unquote-splicing");
lf[869]=C_h_intern(&lf[869],5,"\000list");
lf[870]=C_h_intern(&lf[870],8,"\000unquote");
lf[871]=C_decode_literal(C_heaptop,"\376B\000\000\023#$ outside of list.");
lf[872]=C_decode_literal(C_heaptop,"\376B\000\000\023#^ outside of list.");
lf[873]=C_decode_literal(C_heaptop,"\376B\000\000\016SalUnquoteRule");
lf[874]=C_h_intern(&lf[874],10,"quasiquote");
lf[875]=C_decode_literal(C_heaptop,"\376B\000\000\013SalListRule");
lf[876]=C_decode_literal(C_heaptop,"\376B\000\000\013SalAtomRule");
lf[877]=C_decode_literal(C_heaptop,"\376B\000\000\013SalBoolRule");
lf[878]=C_decode_literal(C_heaptop,"\376B\000\000\015SalNumberRule");
lf[879]=C_h_intern(&lf[879],7,"fprintf");
lf[880]=C_decode_literal(C_heaptop,"\376B\000\000\007#<u ~A>");
lf[881]=C_decode_literal(C_heaptop,"\376B\000\000\010#<u x~X>");
lf[882]=C_h_intern(&lf[882],27,"\003sysregister-record-printer");
lf[883]=C_decode_literal(C_heaptop,"\376B\000\000\030#<parse-error ~S (@ ~S)>");
lf[884]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\004list\376\377\016");
lf[885]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\001+\376\003\000\000\002\376\001\000\000\001*\376\003\000\000\002\376\001\000\000\001@\376\003\000\000\002\376\001\000\000\003and\376\003\000\000\002\376\001\000\000\002or\376\377\016");
lf[886]=C_h_intern(&lf[886],6,"ruleid");
lf[887]=C_h_intern(&lf[887],9,"make-rule");
lf[888]=C_h_intern(&lf[888],7,"*rules*");
lf[889]=C_h_intern(&lf[889],7,"defrule");
lf[890]=C_decode_literal(C_heaptop,"\376B\000\000\007#<r ~A>");
lf[891]=C_h_intern(&lf[891],15,"make-hash-table");
lf[892]=C_h_intern(&lf[892],3,"eq\077");
lf[893]=C_decode_literal(C_heaptop,"\376B\000\000\013#<t x~X ~S>");
lf[894]=C_decode_literal(C_heaptop,"\376B\000\000\016#<spectrum ~S>");
lf[895]=C_decode_literal(C_heaptop,"\376B\000\000\001r");
lf[896]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[897]=C_decode_literal(C_heaptop,"\376B\000\000\001r");
lf[898]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\003\000\000\002\376B\000\000\001c\376\003\000\000\002\376B\000\000\002bs\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\002df\376\003\000\000\002\376B\000\000\002cs\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\001d\376"
"\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\002ef\376\003\000\000\002\376B\000\000\002ds\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\001e\376\003\000\000\002\376B\000\000\002ff\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\001"
"f\376\003\000\000\002\376B\000\000\002es\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\002fs\376\003\000\000\002\376B\000\000\002gf\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\001g\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000"
"\000\002af\376\003\000\000\002\376B\000\000\002gs\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\001a\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\002bf\376\003\000\000\002\376B\000\000\002as\376\377\016\376\003\000\000\002\376\003\000\000\002"
"\376B\000\000\001b\376\003\000\000\002\376B\000\000\002cf\376\377\016\376\377\016");
lf[899]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[900]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[901]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376B\000\000\00200\376\003\000\000\002\376B\000\000\0010\376\003\000\000\002\376B\000\000\0011\376\003\000\000\002\376B\000\000\0012\376\003\000\000\002\376B\000\000\0013\376\003\000\000\002\376B\000\000\0014\376\003\000\000\002\376B\000\000\0015\376\003"
"\000\000\002\376B\000\000\0016\376\003\000\000\002\376B\000\000\0017\376\003\000\000\002\376B\000\000\0018\376\003\000\000\002\376B\000\000\0019\376\377\016");
lf[902]=C_decode_literal(C_heaptop,"\376B\000\000\001>");
lf[903]=C_decode_literal(C_heaptop,"\376B\000\000\001<");
lf[904]=C_decode_literal(C_heaptop,"\376B\000\000\002bs");
lf[905]=C_decode_literal(C_heaptop,"\376B\000\000\002cf");
lf[906]=C_decode_literal(C_heaptop,"\376B\000\000\002bs");
lf[907]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[908]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[909]=C_h_intern(&lf[909],6,"equal\077");
lf[910]=C_h_intern(&lf[910],4,"send");
lf[911]=C_decode_literal(C_heaptop,"\376B\000\0003message function not string, symbol or list of both");
lf[912]=C_h_intern(&lf[912],19,"define-send-message");
lf[913]=C_h_intern(&lf[913],12,"with-optkeys");
C_register_lf2(lf,914,create_ptable());
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6027,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_library_toplevel(2,C_SCHEME_UNDEFINED,t2);}

/* k6025 */
static void C_ccall f_6027(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6027,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6030,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_eval_toplevel(2,C_SCHEME_UNDEFINED,t2);}

/* k6028 in k6025 */
static void C_ccall f_6030(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6030,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6033,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_extras_toplevel(2,C_SCHEME_UNDEFINED,t2);}

/* k6031 in k6028 in k6025 */
static void C_ccall f_6033(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6033,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6036,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_extras_toplevel(2,C_SCHEME_UNDEFINED,t2);}

/* k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_6036(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6036,2,t0,t1);}
t2=C_mutate((C_word*)lf[0]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6038,a[2]=((C_word)li4),tmp=(C_word)a,a+=3,tmp));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6327,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37934,a[2]=((C_word)li620),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 249  ##sys#register-macro");
t5=C_retrieve(lf[746]);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,lf[913],t4);}

/* a37933 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_37934(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr3r,(void*)f_37934r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_37934r(t0,t1,t2,t3);}}

static void C_ccall f_37934r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cdr(t2);
C_trace("ChickenBridge.scm: 250  expand-optkeys");
t6=*((C_word*)lf[0]+1);
((C_proc5)C_retrieve_proc(t6))(5,t6,t1,t4,t5,t3);}

/* k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_6327(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6327,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6331,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 256  make-hash-table");
t3=C_retrieve(lf[891]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,*((C_word*)lf[909]+1));}

/* k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_6331(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6331,2,t0,t1);}
t2=C_mutate((C_word*)lf[29]+1,t1);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6334,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37882,a[2]=((C_word)li619),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 258  ##sys#register-macro");
t5=C_retrieve(lf[746]);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,lf[912],t4);}

/* a37881 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_37882(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[18],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_37882,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_37886,a[2]=t6,a[3]=t1,a[4]=t3,a[5]=t4,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t8=(C_word)C_i_car(((C_word*)t4)[1]);
t9=C_set_block_item(t6,0,t8);
t10=(C_word)C_i_cadr(((C_word*)t4)[1]);
t11=C_set_block_item(t4,0,t10);
t12=t7;
f_37886(2,t12,t11);}
else{
if(C_truep((C_word)C_i_stringp(((C_word*)t4)[1]))){
t8=C_set_block_item(t6,0,((C_word*)t4)[1]);
t9=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37919,a[2]=t7,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 265  string->symbol");
t10=*((C_word*)lf[385]+1);
((C_proc3)C_retrieve_proc(t10))(3,t10,t9,((C_word*)t4)[1]);}
else{
if(C_truep((C_word)C_i_symbolp(((C_word*)t4)[1]))){
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37929,a[2]=t7,a[3]=t6,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 267  symbol->string");
t9=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t9))(3,t9,t8,((C_word*)t4)[1]);}
else{
C_trace("ChickenBridge.scm: 269  error");
t8=*((C_word*)lf[4]+1);
((C_proc3)C_retrieve_proc(t8))(3,t8,t7,lf[911]);}}}}

/* k37927 in a37881 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_37929(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_37886(2,t3,t2);}

/* k37917 in a37881 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_37919(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_37886(2,t3,t2);}

/* k37884 in a37881 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_37886(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37886,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[4]);
t3=(C_word)C_a_i_list(&a,2,lf[540],t2);
t4=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_list(&a,4,lf[761],lf[29],((C_word*)((C_word*)t0)[2])[1],t3));}

/* k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_6334(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6334,2,t0,t1);}
t2=C_mutate((C_word*)lf[30]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6336,a[2]=((C_word)li12),tmp=(C_word)a,a+=3,tmp));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6627,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37876,a[2]=((C_word)li618),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 354  ##sys#register-macro");
t5=C_retrieve(lf[746]);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,lf[910],t4);}

/* a37875 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_37876(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr3r,(void*)f_37876r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_37876r(t0,t1,t2,t3);}}

static void C_ccall f_37876r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_trace("ChickenBridge.scm: 355  expand-send");
t4=C_retrieve(lf[30]);
((C_proc5)C_retrieve_proc(t4))(5,t4,t1,t2,t3,C_SCHEME_FALSE);}

/* k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_6627(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word t36;
C_word t37;
C_word t38;
C_word t39;
C_word t40;
C_word t41;
C_word t42;
C_word t43;
C_word t44;
C_word t45;
C_word t46;
C_word t47;
C_word t48;
C_word t49;
C_word t50;
C_word t51;
C_word t52;
C_word t53;
C_word t54;
C_word t55;
C_word t56;
C_word t57;
C_word t58;
C_word t59;
C_word t60;
C_word t61;
C_word t62;
C_word t63;
C_word t64;
C_word t65;
C_word t66;
C_word t67;
C_word t68;
C_word t69;
C_word t70;
C_word t71;
C_word t72;
C_word t73;
C_word t74;
C_word t75;
C_word t76;
C_word t77;
C_word t78;
C_word t79;
C_word t80;
C_word t81;
C_word t82;
C_word t83;
C_word t84;
C_word ab[216],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6627,2,t0,t1);}
t2=C_mutate((C_word*)lf[42]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6629,a[2]=((C_word)li14),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate((C_word*)lf[44]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6640,a[2]=((C_word)li16),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate((C_word*)lf[47]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6669,a[2]=((C_word)li17),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate((C_word*)lf[48]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6679,a[2]=((C_word)li18),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate((C_word*)lf[49]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6689,a[2]=((C_word)li19),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate((C_word*)lf[50]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6699,a[2]=((C_word)li20),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate((C_word*)lf[51]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6709,a[2]=((C_word)li21),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate((C_word*)lf[52]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6723,a[2]=((C_word)li22),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate((C_word*)lf[53]+1,*((C_word*)lf[54]+1));
t11=C_mutate((C_word*)lf[55]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6738,a[2]=((C_word)li23),tmp=(C_word)a,a+=3,tmp));
t12=C_mutate((C_word*)lf[56]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6744,a[2]=((C_word)li24),tmp=(C_word)a,a+=3,tmp));
t13=C_mutate((C_word*)lf[57]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6767,a[2]=((C_word)li25),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate((C_word*)lf[58]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6815,a[2]=((C_word)li26),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate((C_word*)lf[59]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6905,a[2]=((C_word)li27),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate((C_word*)lf[61]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6945,a[2]=((C_word)li28),tmp=(C_word)a,a+=3,tmp));
t17=C_mutate((C_word*)lf[62]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6955,a[2]=((C_word)li30),tmp=(C_word)a,a+=3,tmp));
t18=C_mutate((C_word*)lf[63]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7016,a[2]=((C_word)li33),tmp=(C_word)a,a+=3,tmp));
t19=C_mutate((C_word*)lf[65]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7115,a[2]=((C_word)li35),tmp=(C_word)a,a+=3,tmp));
t20=C_mutate((C_word*)lf[66]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7155,a[2]=((C_word)li37),tmp=(C_word)a,a+=3,tmp));
t21=C_mutate(&lf[67],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7194,a[2]=((C_word)li38),tmp=(C_word)a,a+=3,tmp));
t22=C_mutate(&lf[68],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7280,a[2]=((C_word)li40),tmp=(C_word)a,a+=3,tmp));
t23=C_mutate(&lf[69],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7321,a[2]=((C_word)li41),tmp=(C_word)a,a+=3,tmp));
t24=C_mutate(&lf[70],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7348,a[2]=((C_word)li42),tmp=(C_word)a,a+=3,tmp));
t25=C_mutate(&lf[71],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7375,a[2]=((C_word)li43),tmp=(C_word)a,a+=3,tmp));
t26=C_mutate(&lf[72],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7382,a[2]=((C_word)li44),tmp=(C_word)a,a+=3,tmp));
t27=C_mutate(&lf[73],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7393,a[2]=((C_word)li45),tmp=(C_word)a,a+=3,tmp));
t28=C_mutate(&lf[74],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7408,a[2]=((C_word)li46),tmp=(C_word)a,a+=3,tmp));
t29=C_mutate(&lf[75],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7415,a[2]=((C_word)li47),tmp=(C_word)a,a+=3,tmp));
t30=C_mutate(&lf[76],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7422,a[2]=((C_word)li48),tmp=(C_word)a,a+=3,tmp));
t31=C_mutate(&lf[77],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7441,a[2]=((C_word)li49),tmp=(C_word)a,a+=3,tmp));
t32=C_mutate(&lf[78],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7460,a[2]=((C_word)li50),tmp=(C_word)a,a+=3,tmp));
t33=C_mutate(&lf[79],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7481,a[2]=((C_word)li51),tmp=(C_word)a,a+=3,tmp));
t34=C_mutate(&lf[80],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7484,a[2]=((C_word)li52),tmp=(C_word)a,a+=3,tmp));
t35=C_mutate(&lf[81],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7491,a[2]=((C_word)li53),tmp=(C_word)a,a+=3,tmp));
t36=C_mutate(&lf[82],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7520,a[2]=((C_word)li54),tmp=(C_word)a,a+=3,tmp));
t37=C_mutate(&lf[83],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7523,a[2]=((C_word)li55),tmp=(C_word)a,a+=3,tmp));
t38=C_mutate(&lf[84],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7526,a[2]=((C_word)li56),tmp=(C_word)a,a+=3,tmp));
t39=C_mutate(&lf[85],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7529,a[2]=((C_word)li57),tmp=(C_word)a,a+=3,tmp));
t40=C_mutate(&lf[86],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7540,a[2]=((C_word)li58),tmp=(C_word)a,a+=3,tmp));
t41=C_mutate(&lf[87],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7558,a[2]=((C_word)li59),tmp=(C_word)a,a+=3,tmp));
t42=C_mutate(&lf[88],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7565,a[2]=((C_word)li60),tmp=(C_word)a,a+=3,tmp));
t43=C_mutate(&lf[89],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7568,a[2]=((C_word)li61),tmp=(C_word)a,a+=3,tmp));
t44=C_mutate(&lf[90],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7575,a[2]=((C_word)li62),tmp=(C_word)a,a+=3,tmp));
t45=C_mutate(&lf[91],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7578,a[2]=((C_word)li63),tmp=(C_word)a,a+=3,tmp));
t46=C_mutate((C_word*)lf[92]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7597,a[2]=((C_word)li65),tmp=(C_word)a,a+=3,tmp));
t47=C_mutate((C_word*)lf[93]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7631,a[2]=((C_word)li68),tmp=(C_word)a,a+=3,tmp));
t48=C_mutate((C_word*)lf[95]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7742,a[2]=((C_word)li69),tmp=(C_word)a,a+=3,tmp));
t49=C_mutate((C_word*)lf[96]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7757,a[2]=((C_word)li70),tmp=(C_word)a,a+=3,tmp));
t50=C_mutate((C_word*)lf[98]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7799,a[2]=((C_word)li71),tmp=(C_word)a,a+=3,tmp));
t51=C_mutate((C_word*)lf[100]+1,*((C_word*)lf[101]+1));
t52=C_mutate((C_word*)lf[102]+1,*((C_word*)lf[103]+1));
t53=C_mutate((C_word*)lf[104]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7825,a[2]=((C_word)li73),tmp=(C_word)a,a+=3,tmp));
t54=C_mutate((C_word*)lf[105]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7846,a[2]=((C_word)li75),tmp=(C_word)a,a+=3,tmp));
t55=C_mutate((C_word*)lf[109]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7886,a[2]=((C_word)li77),tmp=(C_word)a,a+=3,tmp));
t56=C_mutate((C_word*)lf[114]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8122,a[2]=((C_word)li78),tmp=(C_word)a,a+=3,tmp));
t57=C_mutate((C_word*)lf[115]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8137,a[2]=((C_word)li79),tmp=(C_word)a,a+=3,tmp));
t58=C_mutate(&lf[116],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8152,a[2]=((C_word)li81),tmp=(C_word)a,a+=3,tmp));
t59=C_mutate((C_word*)lf[121]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8238,a[2]=((C_word)li82),tmp=(C_word)a,a+=3,tmp));
t60=C_mutate((C_word*)lf[123]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8284,a[2]=((C_word)li83),tmp=(C_word)a,a+=3,tmp));
t61=C_mutate((C_word*)lf[125]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8351,a[2]=((C_word)li86),tmp=(C_word)a,a+=3,tmp));
t62=C_mutate((C_word*)lf[128]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8484,a[2]=((C_word)li88),tmp=(C_word)a,a+=3,tmp));
t63=C_mutate((C_word*)lf[131]+1,C_retrieve2(lf[79],"tb:ran-set!"));
t64=C_mutate((C_word*)lf[124]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8592,a[2]=((C_word)li89),tmp=(C_word)a,a+=3,tmp));
t65=C_mutate((C_word*)lf[132]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8627,a[2]=((C_word)li90),tmp=(C_word)a,a+=3,tmp));
t66=C_mutate((C_word*)lf[133]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8648,a[2]=((C_word)li91),tmp=(C_word)a,a+=3,tmp));
t67=C_mutate((C_word*)lf[134]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8691,a[2]=((C_word)li92),tmp=(C_word)a,a+=3,tmp));
t68=C_mutate((C_word*)lf[138]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8919,a[2]=((C_word)li95),tmp=(C_word)a,a+=3,tmp));
t69=C_mutate((C_word*)lf[141]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9018,a[2]=((C_word)li97),tmp=(C_word)a,a+=3,tmp));
t70=C_mutate((C_word*)lf[142]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9073,a[2]=((C_word)li98),tmp=(C_word)a,a+=3,tmp));
t71=C_mutate((C_word*)lf[143]+1,C_retrieve2(lf[82],"tb:ranlow"));
t72=C_mutate((C_word*)lf[144]+1,C_retrieve2(lf[83],"tb:ranhigh"));
t73=C_mutate((C_word*)lf[145]+1,C_retrieve2(lf[84],"tb:ranmiddle"));
t74=C_mutate((C_word*)lf[146]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9115,a[2]=((C_word)li99),tmp=(C_word)a,a+=3,tmp));
t75=C_mutate((C_word*)lf[150]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9343,a[2]=((C_word)li100),tmp=(C_word)a,a+=3,tmp));
t76=C_mutate((C_word*)lf[151]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9362,a[2]=((C_word)li101),tmp=(C_word)a,a+=3,tmp));
t77=C_mutate((C_word*)lf[152]+1,C_retrieve2(lf[88],"tb:rancauchy"));
t78=C_mutate((C_word*)lf[153]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9403,a[2]=((C_word)li102),tmp=(C_word)a,a+=3,tmp));
t79=C_mutate((C_word*)lf[155]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9422,a[2]=((C_word)li103),tmp=(C_word)a,a+=3,tmp));
t80=C_mutate((C_word*)lf[156]+1,C_retrieve2(lf[91],"tb:ranbrown"));
t81=C_mutate((C_word*)lf[157]+1,C_retrieve2(lf[90],"tb:ranpink"));
t82=C_mutate((C_word*)lf[158]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9443,a[2]=((C_word)li107),tmp=(C_word)a,a+=3,tmp));
t83=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9652,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 376  make-hash-table");
t84=C_retrieve(lf[891]);
((C_proc3)C_retrieve_proc(t84))(3,t84,t83,*((C_word*)lf[909]+1));}

/* k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_9652(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9652,2,t0,t1);}
t2=C_mutate(&lf[161],t1);
t3=C_SCHEME_END_OF_LIST;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9655,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37660,a[2]=t7,a[3]=t4,a[4]=((C_word)li617),tmp=(C_word)a,a+=5,tmp));
t9=((C_word*)t7)[1];
f_37660(t9,t5,C_fix(0));}

/* do691 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_37660(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_37660,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nequalp(t2,C_fix(128)))){
t3=(C_word)C_a_i_list(&a,5,lf[895],C_fix(-1),lf[896],C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37673,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  hash-table-set!");
t5=C_retrieve(lf[761]);
((C_proc5)C_retrieve_proc(t5))(5,t5,t4,C_retrieve2(lf[161],"*notes*"),lf[897],t3);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_37874,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 376  modulo");
t4=*((C_word*)lf[129]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,t2,C_fix(12));}}

/* k37872 in do691 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_37874(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37874,2,t0,t1);}
t2=(C_word)C_i_list_ref(lf[898],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37683,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37694,a[2]=t4,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 376  modulo");
t6=*((C_word*)lf[129]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,((C_word*)t0)[4],C_fix(12));}

/* k37692 in k37872 in do691 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_37694(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37694,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[4],lf[899]);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],lf[900]);
t4=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_37706,a[2]=t3,a[3]=t2,a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[3],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 376  tb:keynum->hertz");
f_7460(t4,((C_word*)t0)[4]);}

/* k37704 in k37692 in k37872 in do691 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_37706(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37706,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_37710,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],lf[908]);
C_trace("ChickenBridge.scm: 376  tb:keynum->hertz");
f_7460(t2,t3);}

/* k37708 in k37704 in k37692 in k37872 in do691 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_37710(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37710,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_37714,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
t3=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[6],lf[907]);
C_trace("ChickenBridge.scm: 376  tb:keynum->hertz");
f_7460(t2,t3);}

/* k37712 in k37708 in k37704 in k37692 in k37872 in do691 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_37714(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37714,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_37858,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_a_i_divide(&a,2,((C_word*)t0)[7],C_fix(12));
C_trace("ChickenBridge.scm: 376  floor");
t4=*((C_word*)lf[172]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,t3);}

/* k37856 in k37712 in k37708 in k37704 in k37692 in k37872 in do691 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_37858(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37858,2,t0,t1);}
t2=(C_word)C_i_inexact_to_exact(t1);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37720,a[2]=((C_word*)t0)[10],a[3]=t4,a[4]=((C_word)li616),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_37720(t6,((C_word*)t0)[9],((C_word*)((C_word*)t0)[10])[1],((C_word*)t0)[8],((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t2,C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* do697 in k37856 in k37712 in k37708 in k37704 in k37692 in k37872 in do691 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_37720(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7,C_word t8,C_word t9,C_word t10,C_word t11,C_word t12,C_word t13){
C_word tmp;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[40],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_37720,NULL,14,t0,t1,t2,t3,t4,t5,t6,t7,t8,t9,t10,t11,t12,t13);}
t14=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t15=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t16=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t17=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t18=t1;
((C_proc2)(void*)(*((C_word*)t18+1)))(2,t18,C_SCHEME_FALSE);}
else{
t18=(*a=C_CLOSURE_TYPE|15,a[1]=(C_word)f_37730,a[2]=t17,a[3]=t16,a[4]=t15,a[5]=t14,a[6]=t9,a[7]=t8,a[8]=t7,a[9]=t6,a[10]=t5,a[11]=t4,a[12]=t3,a[13]=t1,a[14]=((C_word*)t0)[3],a[15]=t2,tmp=(C_word)a,a+=16,tmp);
t19=(*a=C_CLOSURE_TYPE|15,a[1]=(C_word)f_37740,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=t8,a[5]=t6,a[6]=t9,a[7]=t5,a[8]=t17,a[9]=t4,a[10]=t7,a[11]=t3,a[12]=t16,a[13]=t15,a[14]=t14,a[15]=t18,tmp=(C_word)a,a+=16,tmp);
if(C_truep((C_word)C_i_nequalp(t3,C_fix(0)))){
t20=(C_word)C_i_car(t2);
t21=t19;
f_37740(t21,(C_word)C_i_string_equal_p(t20,lf[906]));}
else{
t20=t19;
f_37740(t20,C_SCHEME_FALSE);}}}

/* k37738 in do697 in k37856 in k37712 in k37708 in k37704 in k37692 in k37872 in do691 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_37740(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_37740,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[15];
f_37730(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|15,a[1]=(C_word)f_37743,a[2]=((C_word*)t0)[15],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],a[12]=((C_word*)t0)[11],a[13]=((C_word*)t0)[12],a[14]=((C_word*)t0)[13],a[15]=((C_word*)t0)[14],tmp=(C_word)a,a+=16,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[3]);
if(C_truep((C_word)C_i_string_equal_p(t3,lf[904]))){
t4=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[14])[1],C_fix(1));
t5=C_mutate(((C_word *)((C_word*)t0)[14])+1,t4);
t6=t2;
f_37743(t6,t5);}
else{
t4=(C_word)C_i_car(((C_word*)t0)[3]);
if(C_truep((C_word)C_i_string_equal_p(t4,lf[905]))){
t5=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[14])[1],C_fix(1));
t6=C_mutate(((C_word *)((C_word*)t0)[14])+1,t5);
t7=t2;
f_37743(t7,t6);}
else{
t5=t2;
f_37743(t5,C_SCHEME_UNDEFINED);}}}}

/* k37741 in k37738 in do697 in k37856 in k37712 in k37708 in k37704 in k37692 in k37872 in do691 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_37743(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_37743,NULL,2,t0,t1);}
t2=(C_word)C_i_list_ref(lf[901],((C_word*)((C_word*)t0)[15])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[14])+1,t2);
t4=(*a=C_CLOSURE_TYPE|14,a[1]=(C_word)f_37751,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[14],a[11]=((C_word*)t0)[10],a[12]=((C_word*)t0)[11],a[13]=((C_word*)t0)[12],a[14]=((C_word*)t0)[13],tmp=(C_word)a,a+=15,tmp);
t5=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 376  string-append");
t6=*((C_word*)lf[164]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,t5,((C_word*)((C_word*)t0)[14])[1]);}

/* k37749 in k37741 in k37738 in do697 in k37856 in k37712 in k37708 in k37704 in k37692 in k37872 in do691 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_37751(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37751,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[14])+1,t1);
t3=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[14])[1],((C_word*)t0)[13],((C_word*)t0)[12],((C_word*)t0)[11],((C_word*)((C_word*)t0)[10])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[9])+1,t3);
t5=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_37758,a[2]=((C_word*)t0)[13],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[7],a[11]=((C_word*)t0)[8],a[12]=((C_word*)t0)[14],tmp=(C_word)a,a+=13,tmp);
C_trace("ChickenBridge.scm: 376  hash-table-set!");
t6=C_retrieve(lf[761]);
((C_proc5)C_retrieve_proc(t6))(5,t6,t5,C_retrieve2(lf[161],"*notes*"),((C_word*)((C_word*)t0)[14])[1],((C_word*)((C_word*)t0)[9])[1]);}

/* k37756 in k37749 in k37741 in k37738 in do697 in k37856 in k37712 in k37708 in k37704 in k37692 in k37872 in do691 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_37758(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37758,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_37761,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[12],tmp=(C_word)a,a+=12,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
if(C_truep(t3)){
C_trace("ChickenBridge.scm: 376  hash-table-set!");
t4=C_retrieve(lf[761]);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,C_retrieve2(lf[161],"*notes*"),((C_word*)t0)[2],((C_word*)((C_word*)t0)[8])[1]);}
else{
t4=t2;
f_37761(2,t4,C_SCHEME_UNDEFINED);}}

/* k37759 in k37756 in k37749 in k37741 in k37738 in do697 in k37856 in k37712 in k37708 in k37704 in k37692 in k37872 in do691 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_37761(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37761,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_37765,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 376  string-append");
t4=*((C_word*)lf[164]+1);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,t3,lf[903],((C_word*)((C_word*)t0)[8])[1]);}

/* k37763 in k37759 in k37756 in k37749 in k37741 in k37738 in do697 in k37856 in k37712 in k37708 in k37704 in k37692 in k37872 in do691 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_37765(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37765,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[11])+1,t1);
t3=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[11])[1],((C_word*)t0)[10],((C_word*)t0)[9],C_SCHEME_FALSE,((C_word*)((C_word*)t0)[8])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[7])+1,t3);
t5=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_37772,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[5],a[9]=((C_word*)t0)[6],a[10]=((C_word*)t0)[11],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 376  hash-table-set!");
t6=C_retrieve(lf[761]);
((C_proc5)C_retrieve_proc(t6))(5,t6,t5,C_retrieve2(lf[161],"*notes*"),((C_word*)((C_word*)t0)[11])[1],((C_word*)((C_word*)t0)[7])[1]);}

/* k37770 in k37763 in k37759 in k37756 in k37749 in k37741 in k37738 in do697 in k37856 in k37712 in k37708 in k37704 in k37692 in k37872 in do691 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_37772(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37772,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_37775,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],tmp=(C_word)a,a+=10,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
if(C_truep(t3)){
C_trace("ChickenBridge.scm: 376  hash-table-set!");
t4=C_retrieve(lf[761]);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,C_retrieve2(lf[161],"*notes*"),((C_word*)t0)[2],((C_word*)((C_word*)t0)[6])[1]);}
else{
t4=t2;
f_37775(2,t4,C_SCHEME_UNDEFINED);}}

/* k37773 in k37770 in k37763 in k37759 in k37756 in k37749 in k37741 in k37738 in do697 in k37856 in k37712 in k37708 in k37704 in k37692 in k37872 in do691 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_37775(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37775,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_37779,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 376  string-append");
t4=*((C_word*)lf[164]+1);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,t3,lf[902],((C_word*)((C_word*)t0)[6])[1]);}

/* k37777 in k37773 in k37770 in k37763 in k37759 in k37756 in k37749 in k37741 in k37738 in do697 in k37856 in k37712 in k37708 in k37704 in k37692 in k37872 in do691 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_37779(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37779,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,t1);
t3=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[9])[1],((C_word*)t0)[8],((C_word*)t0)[7],C_SCHEME_FALSE,((C_word*)((C_word*)t0)[6])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[5])+1,t3);
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_37786,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 376  hash-table-set!");
t6=C_retrieve(lf[761]);
((C_proc5)C_retrieve_proc(t6))(5,t6,t5,C_retrieve2(lf[161],"*notes*"),((C_word*)((C_word*)t0)[9])[1],((C_word*)((C_word*)t0)[5])[1]);}

/* k37784 in k37777 in k37773 in k37770 in k37763 in k37759 in k37756 in k37749 in k37741 in k37738 in do697 in k37856 in k37712 in k37708 in k37704 in k37692 in k37872 in do691 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_37786(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_eqp(((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1]);
if(C_truep(t2)){
C_trace("ChickenBridge.scm: 376  hash-table-set!");
t3=C_retrieve(lf[761]);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[4],C_retrieve2(lf[161],"*notes*"),((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}
else{
t3=((C_word*)t0)[4];
f_37730(2,t3,C_SCHEME_UNDEFINED);}}

/* k37728 in do697 in k37856 in k37712 in k37708 in k37704 in k37692 in k37872 in do691 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_37730(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[15]);
t3=((C_word*)((C_word*)t0)[14])[1];
f_37720(t3,((C_word*)t0)[13],t2,((C_word*)t0)[12],((C_word*)t0)[11],((C_word*)t0)[10],((C_word*)t0)[9],((C_word*)t0)[8],((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k37681 in k37872 in do691 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_37683(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37683,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t3=((C_word*)((C_word*)t0)[3])[1];
f_37660(t3,((C_word*)t0)[2],t2);}

/* k37671 in do691 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_37673(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37673,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37676,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 376  hash-table-set!");
t3=C_retrieve(lf[761]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve2(lf[161],"*notes*"),C_fix(-1),((C_word*)t0)[2]);}

/* k37674 in k37671 in do691 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_37676(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_TRUE);}

/* k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_9655(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word ab[48],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9655,2,t0,t1);}
t2=C_mutate(&lf[162],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9657,a[2]=((C_word)li110),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[166],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9759,a[2]=((C_word)li113),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate((C_word*)lf[174]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9812,a[2]=((C_word)li115),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate((C_word*)lf[176]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9909,a[2]=((C_word)li117),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate((C_word*)lf[178]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10031,a[2]=((C_word)li119),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate((C_word*)lf[180]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10147,a[2]=((C_word)li120),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate((C_word*)lf[181]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10192,a[2]=((C_word)li124),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate((C_word*)lf[184]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10327,a[2]=((C_word)li128),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate((C_word*)lf[186]+1,*((C_word*)lf[187]+1));
t11=C_mutate((C_word*)lf[188]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10493,a[2]=((C_word)li131),tmp=(C_word)a,a+=3,tmp));
t12=C_mutate(&lf[191],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10635,a[2]=((C_word)li132),tmp=(C_word)a,a+=3,tmp));
t13=C_mutate(&lf[193],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10656,a[2]=((C_word)li133),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate(&lf[194],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10674,a[2]=((C_word)li134),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate(&lf[195],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10692,a[2]=((C_word)li135),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate(&lf[196],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10710,a[2]=((C_word)li136),tmp=(C_word)a,a+=3,tmp));
t17=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10720,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t18=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37650,a[2]=((C_word)li615),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  ##sys#register-record-printer");
t19=C_retrieve(lf[882]);
((C_proc4)C_retrieve_proc(t19))(4,t19,t17,lf[192],t18);}

/* a37649 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_37650(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_37650,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37658,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  spektrum-freqs");
t5=C_retrieve2(lf[195],"spektrum-freqs");
f_10692(3,t5,t4,t2);}

/* k37656 in a37649 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_37658(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  fprintf");
t2=C_retrieve(lf[879]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[3],((C_word*)t0)[2],lf[894],t1);}

/* k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_10720(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word t36;
C_word t37;
C_word t38;
C_word t39;
C_word t40;
C_word t41;
C_word t42;
C_word t43;
C_word t44;
C_word t45;
C_word t46;
C_word t47;
C_word t48;
C_word t49;
C_word t50;
C_word t51;
C_word t52;
C_word t53;
C_word t54;
C_word t55;
C_word t56;
C_word t57;
C_word t58;
C_word t59;
C_word t60;
C_word t61;
C_word t62;
C_word t63;
C_word t64;
C_word t65;
C_word t66;
C_word t67;
C_word t68;
C_word t69;
C_word t70;
C_word t71;
C_word t72;
C_word t73;
C_word t74;
C_word t75;
C_word t76;
C_word t77;
C_word t78;
C_word t79;
C_word t80;
C_word ab[222],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10720,2,t0,t1);}
t2=C_mutate((C_word*)lf[197]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10722,a[2]=((C_word)li137),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate((C_word*)lf[199]+1,C_retrieve2(lf[194],"spektrum-size"));
t4=C_mutate((C_word*)lf[200]+1,C_retrieve2(lf[195],"spektrum-freqs"));
t5=C_mutate((C_word*)lf[201]+1,C_retrieve2(lf[196],"spektrum-amps"));
t6=C_mutate((C_word*)lf[202]+1,C_retrieve2(lf[193],"spektrum-time"));
t7=C_mutate((C_word*)lf[203]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10752,a[2]=((C_word)li139),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate((C_word*)lf[205]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10811,a[2]=((C_word)li140),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate((C_word*)lf[206]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10821,a[2]=((C_word)li141),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate((C_word*)lf[207]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10839,a[2]=((C_word)li143),tmp=(C_word)a,a+=3,tmp));
t11=C_mutate((C_word*)lf[210]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10870,a[2]=((C_word)li145),tmp=(C_word)a,a+=3,tmp));
t12=C_mutate((C_word*)lf[212]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11133,a[2]=((C_word)li156),tmp=(C_word)a,a+=3,tmp));
t13=C_mutate((C_word*)lf[218]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11840,a[2]=((C_word)li162),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate(&lf[222],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12153,a[2]=((C_word)li163),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate(&lf[224],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12165,a[2]=((C_word)li164),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate(&lf[226],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12174,a[2]=((C_word)li165),tmp=(C_word)a,a+=3,tmp));
t17=C_mutate(&lf[227],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12192,a[2]=((C_word)li166),tmp=(C_word)a,a+=3,tmp));
t18=C_mutate(&lf[228],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12210,a[2]=((C_word)li167),tmp=(C_word)a,a+=3,tmp));
t19=C_mutate(&lf[229],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12237,a[2]=((C_word)li168),tmp=(C_word)a,a+=3,tmp));
t20=C_mutate(&lf[230],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12246,a[2]=((C_word)li169),tmp=(C_word)a,a+=3,tmp));
t21=C_mutate(&lf[231],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12264,a[2]=((C_word)li170),tmp=(C_word)a,a+=3,tmp));
t22=C_mutate(&lf[232],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12309,a[2]=((C_word)li171),tmp=(C_word)a,a+=3,tmp));
t23=C_mutate(&lf[234],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12324,a[2]=((C_word)li172),tmp=(C_word)a,a+=3,tmp));
t24=C_mutate(&lf[235],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12333,a[2]=((C_word)li173),tmp=(C_word)a,a+=3,tmp));
t25=C_mutate(&lf[236],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12342,a[2]=((C_word)li174),tmp=(C_word)a,a+=3,tmp));
t26=C_mutate(&lf[237],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12360,a[2]=((C_word)li175),tmp=(C_word)a,a+=3,tmp));
t27=C_mutate(&lf[238],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12369,a[2]=((C_word)li176),tmp=(C_word)a,a+=3,tmp));
t28=C_mutate(&lf[239],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12378,a[2]=((C_word)li177),tmp=(C_word)a,a+=3,tmp));
t29=C_mutate(&lf[240],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12396,a[2]=((C_word)li178),tmp=(C_word)a,a+=3,tmp));
t30=C_mutate(&lf[241],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12405,a[2]=((C_word)li179),tmp=(C_word)a,a+=3,tmp));
t31=C_mutate(&lf[242],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12414,a[2]=((C_word)li180),tmp=(C_word)a,a+=3,tmp));
t32=C_mutate(&lf[243],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12423,a[2]=((C_word)li181),tmp=(C_word)a,a+=3,tmp));
t33=C_mutate(&lf[244],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12432,a[2]=((C_word)li182),tmp=(C_word)a,a+=3,tmp));
t34=C_mutate(&lf[245],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12549,a[2]=((C_word)li183),tmp=(C_word)a,a+=3,tmp));
t35=C_mutate(&lf[246],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12558,a[2]=((C_word)li184),tmp=(C_word)a,a+=3,tmp));
t36=C_mutate(&lf[247],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12613,a[2]=((C_word)li185),tmp=(C_word)a,a+=3,tmp));
t37=C_mutate(&lf[251],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12623,a[2]=((C_word)li187),tmp=(C_word)a,a+=3,tmp));
t38=C_mutate((C_word*)lf[259]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12803,a[2]=((C_word)li188),tmp=(C_word)a,a+=3,tmp));
t39=C_mutate((C_word*)lf[261]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12822,a[2]=((C_word)li189),tmp=(C_word)a,a+=3,tmp));
t40=C_mutate((C_word*)lf[263]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12841,a[2]=((C_word)li192),tmp=(C_word)a,a+=3,tmp));
t41=C_mutate(&lf[264],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12964,a[2]=((C_word)li195),tmp=(C_word)a,a+=3,tmp));
t42=C_mutate(&lf[265],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13265,a[2]=((C_word)li196),tmp=(C_word)a,a+=3,tmp));
t43=C_mutate(&lf[258],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13274,a[2]=((C_word)li197),tmp=(C_word)a,a+=3,tmp));
t44=C_mutate(&lf[266],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13320,a[2]=((C_word)li199),tmp=(C_word)a,a+=3,tmp));
t45=C_mutate((C_word*)lf[270]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13435,a[2]=((C_word)li201),tmp=(C_word)a,a+=3,tmp));
t46=C_mutate(&lf[271],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13690,a[2]=((C_word)li202),tmp=(C_word)a,a+=3,tmp));
t47=C_mutate(&lf[274],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13762,a[2]=((C_word)li203),tmp=(C_word)a,a+=3,tmp));
t48=C_mutate(&lf[276],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13771,a[2]=((C_word)li204),tmp=(C_word)a,a+=3,tmp));
t49=C_mutate((C_word*)lf[277]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13851,a[2]=((C_word)li206),tmp=(C_word)a,a+=3,tmp));
t50=C_mutate(&lf[278],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14321,a[2]=((C_word)li207),tmp=(C_word)a,a+=3,tmp));
t51=C_mutate((C_word*)lf[282]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14536,a[2]=((C_word)li209),tmp=(C_word)a,a+=3,tmp));
t52=C_mutate(&lf[283],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14783,a[2]=((C_word)li210),tmp=(C_word)a,a+=3,tmp));
t53=C_mutate((C_word*)lf[284]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14819,a[2]=((C_word)li212),tmp=(C_word)a,a+=3,tmp));
t54=C_mutate(&lf[285],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15082,a[2]=((C_word)li214),tmp=(C_word)a,a+=3,tmp));
t55=C_mutate((C_word*)lf[286]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15158,a[2]=((C_word)li216),tmp=(C_word)a,a+=3,tmp));
t56=C_mutate(&lf[287],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15632,a[2]=((C_word)li219),tmp=(C_word)a,a+=3,tmp));
t57=C_mutate(&lf[289],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15854,a[2]=((C_word)li220),tmp=(C_word)a,a+=3,tmp));
t58=C_mutate(&lf[291],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15863,a[2]=((C_word)li221),tmp=(C_word)a,a+=3,tmp));
t59=C_mutate(&lf[292],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15872,a[2]=((C_word)li222),tmp=(C_word)a,a+=3,tmp));
t60=C_mutate(&lf[293],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15890,a[2]=((C_word)li223),tmp=(C_word)a,a+=3,tmp));
t61=C_mutate(&lf[294],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15908,a[2]=((C_word)li224),tmp=(C_word)a,a+=3,tmp));
t62=C_mutate(&lf[295],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15926,a[2]=((C_word)li225),tmp=(C_word)a,a+=3,tmp));
t63=C_mutate(&lf[296],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15935,a[2]=((C_word)li226),tmp=(C_word)a,a+=3,tmp));
t64=C_mutate(&lf[297],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15944,a[2]=((C_word)li227),tmp=(C_word)a,a+=3,tmp));
t65=C_mutate((C_word*)lf[298]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16027,a[2]=((C_word)li232),tmp=(C_word)a,a+=3,tmp));
t66=C_mutate(&lf[299],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16794,a[2]=((C_word)li235),tmp=(C_word)a,a+=3,tmp));
t67=C_mutate(&lf[300],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16906,a[2]=((C_word)li240),tmp=(C_word)a,a+=3,tmp));
t68=C_mutate((C_word*)lf[305]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17339,a[2]=((C_word)li245),tmp=(C_word)a,a+=3,tmp));
t69=C_mutate(&lf[306],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17826,a[2]=((C_word)li252),tmp=(C_word)a,a+=3,tmp));
t70=C_mutate(&lf[315],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18166,a[2]=((C_word)li253),tmp=(C_word)a,a+=3,tmp));
t71=C_mutate((C_word*)lf[317]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18229,a[2]=((C_word)li258),tmp=(C_word)a,a+=3,tmp));
t72=C_mutate(&lf[318],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18747,a[2]=((C_word)li260),tmp=(C_word)a,a+=3,tmp));
t73=C_mutate((C_word*)lf[324]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18841,a[2]=((C_word)li283),tmp=(C_word)a,a+=3,tmp));
t74=C_mutate(&lf[346],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19863,a[2]=((C_word)li284),tmp=(C_word)a,a+=3,tmp));
t75=C_mutate(&lf[348],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19884,a[2]=((C_word)li285),tmp=(C_word)a,a+=3,tmp));
t76=C_mutate(&lf[349],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19902,a[2]=((C_word)li286),tmp=(C_word)a,a+=3,tmp));
t77=C_mutate(&lf[350],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19920,a[2]=((C_word)li287),tmp=(C_word)a,a+=3,tmp));
t78=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19930,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t79=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37636,a[2]=((C_word)li614),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  ##sys#register-record-printer");
t80=C_retrieve(lf[882]);
((C_proc4)C_retrieve_proc(t80))(4,t80,t78,lf[347],t79);}

/* a37635 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_37636(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_37636,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37644,a[2]=t2,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  token-type");
f_19884(t4,t2);}

/* k37642 in a37635 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_37644(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37644,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37648,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  token-string");
f_19902(t2,((C_word*)t0)[2]);}

/* k37646 in k37642 in a37635 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_37648(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  fprintf");
t2=C_retrieve(lf[879]);
((C_proc6)C_retrieve_proc(t2))(6,t2,((C_word*)t0)[4],((C_word*)t0)[3],lf[893],((C_word*)t0)[2],t1);}

/* k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_19930(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19930,2,t0,t1);}
t2=C_mutate(&lf[351],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19932,a[2]=((C_word)li288),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[353],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19961,a[2]=((C_word)li289),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate(&lf[354],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19973,a[2]=((C_word)li290),tmp=(C_word)a,a+=3,tmp));
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19981,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  make-hash-table");
t6=C_retrieve(lf[891]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,*((C_word*)lf[892]+1));}

/* k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_19981(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19981,2,t0,t1);}
t2=C_mutate(&lf[355],t1);
t3=C_mutate(&lf[356],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19983,a[2]=((C_word)li291),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate(&lf[358],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20004,a[2]=((C_word)li292),tmp=(C_word)a,a+=3,tmp));
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20086,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37626,a[2]=((C_word)li613),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  ##sys#register-record-printer");
t7=C_retrieve(lf[882]);
((C_proc4)C_retrieve_proc(t7))(4,t7,t5,lf[357],t6);}

/* a37625 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_37626(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_37626,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37634,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  rule-name");
f_20004(t4,t2);}

/* k37632 in a37625 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_37634(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  fprintf");
t2=C_retrieve(lf[879]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[3],((C_word*)t0)[2],lf[890],t1);}

/* k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_20086(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20086,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20089,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37523,a[2]=((C_word)li612),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  ##sys#register-macro");
t4=C_retrieve(lf[746]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[889],t3);}

/* a37522 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_37523(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...){
C_word tmp;
C_word t4;
va_list v;
C_word *a,c2=c;
C_save_rest(t3,c2,4);
if(c<4) C_bad_min_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+22)){
C_save_and_reclaim((void*)tr4r,(void*)f_37523r,4,t0,t1,t2,t3);}
else{
a=C_alloc((c-4)*3);
t4=C_restore_rest(a,C_rest_count(0));
f_37523r(t0,t1,t2,t3,t4);}}

static void C_ccall f_37523r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a=C_alloc(22);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37526,a[2]=t6,a[3]=((C_word)li611),tmp=(C_word)a,a+=4,tmp));
t8=(C_word)C_a_i_list(&a,2,lf[886],t2);
t9=(C_word)C_a_i_list(&a,1,t8);
t10=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_37586,a[2]=t3,a[3]=t6,a[4]=t9,a[5]=t1,a[6]=t4,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  symbol->string");
t11=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t11))(3,t11,t10,t2);}

/* k37584 in a37522 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_37586(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37586,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_37590,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t1,a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  ppat");
t3=((C_word*)((C_word*)t0)[3])[1];
f_37526(t3,t2,((C_word*)t0)[2]);}

/* k37588 in k37584 in a37522 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_37590(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37590,2,t0,t1);}
t2=(C_word)C_i_nullp(((C_word*)t0)[5]);
t3=(C_truep(t2)?C_SCHEME_FALSE:(C_word)C_i_car(((C_word*)t0)[5]));
t4=(C_word)C_i_nullp(((C_word*)t0)[5]);
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_37604,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t3,a[5]=t1,a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],tmp=(C_word)a,a+=8,tmp);
if(C_truep(t4)){
t6=t5;
f_37604(t6,t4);}
else{
t6=(C_word)C_i_cdr(((C_word*)t0)[5]);
t7=t5;
f_37604(t7,(C_word)C_i_nullp(t6));}}

/* k37602 in k37588 in k37584 in a37522 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_37604(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_37604,NULL,2,t0,t1);}
t2=(C_truep(t1)?C_SCHEME_FALSE:(C_word)C_i_cadr(((C_word*)t0)[7]));
t3=(C_word)C_a_i_list(&a,6,lf[887],((C_word*)t0)[6],lf[886],((C_word*)t0)[5],((C_word*)t0)[4],t2);
t4=(C_word)C_a_i_list(&a,4,lf[761],lf[888],lf[886],t3);
t5=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_a_i_list(&a,3,lf[1],((C_word*)t0)[2],t4));}

/* ppat in a37522 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_37526(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
loop:
a=C_alloc(11);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_37526,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,lf[884]);}
else{
if(C_truep((C_word)C_i_pairp(t2))){
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37546,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 379  ppat");
t7=t3;
t8=t4;
t1=t7;
t2=t8;
goto loop;}
else{
t3=(C_word)C_i_member(t2,lf[885]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_truep(t3)?(C_word)C_a_i_list(&a,2,lf[540],t2):t2));}}}

/* k37544 in ppat in a37522 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_37546(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37546,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37550,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 379  ppat");
t4=((C_word*)((C_word*)t0)[2])[1];
f_37526(t4,t2,t3);}

/* k37548 in k37544 in ppat in a37522 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_37550(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37550,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_list(&a,3,lf[798],((C_word*)t0)[2],t1));}

/* k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_20089(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[36],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20089,2,t0,t1);}
t2=C_mutate(&lf[359],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20091,a[2]=((C_word)li293),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[242],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20112,a[2]=((C_word)li294),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate(&lf[361],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20115,a[2]=((C_word)li295),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate(&lf[362],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20127,a[2]=((C_word)li296),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate(&lf[363],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20133,a[2]=((C_word)li297),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate(&lf[364],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20143,a[2]=((C_word)li298),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate(&lf[365],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20201,a[2]=((C_word)li299),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate(&lf[366],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20233,a[2]=((C_word)li300),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate(&lf[368],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20254,a[2]=((C_word)li301),tmp=(C_word)a,a+=3,tmp));
t11=C_mutate(&lf[369],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20272,a[2]=((C_word)li302),tmp=(C_word)a,a+=3,tmp));
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20282,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t13=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37509,a[2]=((C_word)li610),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  ##sys#register-record-printer");
t14=C_retrieve(lf[882]);
((C_proc4)C_retrieve_proc(t14))(4,t14,t12,lf[367],t13);}

/* a37508 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_37509(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_37509,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37517,a[2]=t2,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  parse-error-string");
f_20254(t4,t2);}

/* k37515 in a37508 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_37517(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37517,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37521,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  parse-error-position");
f_20272(t2,((C_word*)t0)[2]);}

/* k37519 in k37515 in a37508 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_37521(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  fprintf");
t2=C_retrieve(lf[879]);
((C_proc6)C_retrieve_proc(t2))(6,t2,((C_word*)t0)[4],((C_word*)t0)[3],lf[883],((C_word*)t0)[2],t1);}

/* k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_20282(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20282,2,t0,t1);}
t2=C_mutate(&lf[370],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20284,a[2]=((C_word)li303),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[372],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20290,a[2]=((C_word)li304),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate(&lf[373],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20305,a[2]=((C_word)li305),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate(&lf[374],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20323,a[2]=((C_word)li306),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate(&lf[375],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20341,a[2]=((C_word)li307),tmp=(C_word)a,a+=3,tmp));
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20351,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t8=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37483,a[2]=((C_word)li609),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  ##sys#register-record-printer");
t9=C_retrieve(lf[882]);
((C_proc4)C_retrieve_proc(t9))(4,t9,t7,lf[371],t8);}

/* a37482 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_37483(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_37483,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37487,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  parse-unit-type");
f_20305(t4,t2);}

/* k37485 in a37482 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_37487(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37487,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37493,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  SalRuleType?");
f_21563(t2,t1);}

/* k37491 in k37485 in a37482 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_37493(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37493,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37500,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37504,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  get-rule");
f_20091(t3,((C_word*)t0)[2],C_SCHEME_END_OF_LIST);}
else{
C_trace("ChickenBridge.scm: 379  fprintf");
t2=C_retrieve(lf[879]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[4],((C_word*)t0)[3],lf[881],((C_word*)t0)[2]);}}

/* k37502 in k37491 in k37485 in a37482 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_37504(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  rule-name");
f_20004(((C_word*)t0)[2],t1);}

/* k37498 in k37491 in k37485 in a37482 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_37500(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  fprintf");
t2=C_retrieve(lf[879]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[3],((C_word*)t0)[2],lf[880],t1);}

/* k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_20351(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word ab[60],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20351,2,t0,t1);}
t2=C_mutate(&lf[376],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20353,a[2]=((C_word)li308),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[378],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20369,a[2]=((C_word)li309),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate(&lf[380],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20401,a[2]=((C_word)li310),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate(&lf[381],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20413,a[2]=((C_word)li311),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate(&lf[382],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20423,a[2]=((C_word)li312),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate(&lf[384],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20441,a[2]=((C_word)li313),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate(&lf[393],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20474,a[2]=((C_word)li314),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate(&lf[396],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20682,a[2]=((C_word)li316),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate(&lf[397],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20690,a[2]=((C_word)li319),tmp=(C_word)a,a+=3,tmp));
t11=lf[398]=C_SCHEME_FALSE;;
t12=C_mutate(&lf[399],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20794,a[2]=((C_word)li333),tmp=(C_word)a,a+=3,tmp));
t13=C_mutate(&lf[377],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21413,a[2]=((C_word)li334),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate(&lf[392],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21461,a[2]=((C_word)li335),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate(&lf[395],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21563,a[2]=((C_word)li336),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate(&lf[379],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21575,a[2]=((C_word)li337),tmp=(C_word)a,a+=3,tmp));
t17=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21596,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t18=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37461,a[2]=t17,tmp=(C_word)a,a+=3,tmp);
t19=(C_word)C_a_i_cons(&a,2,C_fix(3072),C_SCHEME_END_OF_LIST);
t20=(C_word)C_a_i_cons(&a,2,C_fix(3328),t19);
t21=(C_word)C_a_i_cons(&a,2,C_fix(2816),t20);
t22=(C_word)C_a_i_cons(&a,2,lf[388],t21);
C_trace("ChickenBridge.scm: 379  make-rule");
f_19983(t18,lf[878],C_fix(25856),t22,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k37459 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_37461(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[761]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[355],"*rules*"),C_fix(25856),t1);}

/* k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_21596(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21596,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21599,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37441,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(4608),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(4352),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[388],t5);
C_trace("ChickenBridge.scm: 379  make-rule");
f_19983(t3,lf[877],C_fix(26112),t6,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k37439 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_37441(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[761]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[355],"*rules*"),C_fix(26112),t1);}

/* k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_21599(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21599,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21602,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37401,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(4608),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(4352),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(25088),t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(3840),t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(3072),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(3328),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(2816),t9);
t11=(C_word)C_a_i_cons(&a,2,lf[388],t10);
C_trace("ChickenBridge.scm: 379  make-rule");
f_19983(t3,lf[876],C_fix(26368),t11,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k37399 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_37401(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[761]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[355],"*rules*"),C_fix(26368),t1);}

/* k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_21602(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21602,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21605,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37291,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(26880),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,lf[101],t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(1280),C_SCHEME_END_OF_LIST);
t7=(C_word)C_a_i_cons(&a,2,t5,t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(1024),t7);
t9=(C_word)C_a_i_cons(&a,2,lf[387],t8);
t10=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37297,a[2]=((C_word)li607),tmp=(C_word)a,a+=3,tmp);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37307,a[2]=((C_word)li608),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  make-rule");
f_19983(t3,lf[875],C_fix(26624),t9,t10,t11);}

/* a37306 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_37307(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_37307,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_37311,a[2]=t2,a[3]=t4,a[4]=t3,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  get-emit-info");
f_20401(t5,lf[869],t3);}

/* k37309 in a37306 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_37311(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37311,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_37314,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  parse-unit-parsed");
f_20323(t2,((C_word*)t0)[2]);}

/* k37312 in k37309 in a37306 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_37314(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37314,2,t0,t1);}
t2=((C_word*)t0)[5];
if(C_truep(t2)){
C_trace("ChickenBridge.scm: 379  emit");
f_20441(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
if(C_truep((C_word)C_i_nullp(t1))){
t3=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_list(&a,1,lf[590]));}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_37332,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  add-emit-info");
f_20413(t3,lf[869],C_SCHEME_TRUE,((C_word*)t0)[3]);}}}

/* k37330 in k37312 in k37309 in a37306 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_37332(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37332,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37335,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  emit");
f_20441(t2,((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* k37333 in k37330 in k37312 in k37309 in a37306 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_37335(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37335,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37338,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37366,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  get-emit-info");
f_20401(t5,lf[869],((C_word*)t0)[2]);}

/* k37364 in k37333 in k37330 in k37312 in k37309 in a37306 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_37366(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37366,2,t0,t1);}
t2=(C_word)C_eqp(t1,lf[870]);
if(C_truep(t2)){
t3=(C_word)C_a_i_list(&a,2,lf[874],((C_word*)t0)[4]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_37338(t5,t4);}
else{
t3=(C_word)C_a_i_list(&a,2,lf[540],((C_word*)t0)[4]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_37338(t5,t4);}}

/* k37336 in k37333 in k37330 in k37312 in k37309 in a37306 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_37338(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_37338,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37344,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  get-emit-info");
f_20401(t2,lf[837],((C_word*)t0)[2]);}

/* k37342 in k37336 in k37333 in k37330 in k37312 in k37309 in a37306 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_37344(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37344,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,1,lf[590]);
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_list(&a,3,lf[18],((C_word*)((C_word*)t0)[2])[1],t2));}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}}

/* a37296 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_37297(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_37297,4,t0,t1,t2,t3);}
t4=(C_word)C_i_cadr(t2);
C_trace("ChickenBridge.scm: 379  make-parse-unit");
f_20284(t1,C_fix(26624),t4,C_SCHEME_FALSE);}

/* k37289 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_37291(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[761]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[355],"*rules*"),C_fix(26624),t1);}

/* k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_21605(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21605,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21608,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37191,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(5632),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(5376),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[388],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,t6,t7);
t9=(C_word)C_a_i_cons(&a,2,lf[387],t8);
t10=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37199,a[2]=t9,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  simple-unit-parser");
f_20682(t10,C_fix(27648));}

/* k37197 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_37199(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37199,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37201,a[2]=((C_word)li606),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  make-rule");
f_19983(((C_word*)t0)[3],lf[873],C_fix(27648),((C_word*)t0)[2],t1,t2);}

/* a37200 in k37197 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_37201(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_37201,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37205,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  parse-unit-parsed");
f_20323(t5,t2);}

/* k37203 in a37200 in k37197 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_37205(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37205,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_37208,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(t1);
C_trace("ChickenBridge.scm: 379  token-unit-type=?");
f_20369(t2,t3,C_fix(5376));}

/* k37206 in k37203 in a37200 in k37197 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_37208(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37208,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_37211,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  get-emit-info");
f_20401(t2,lf[869],((C_word*)t0)[4]);}

/* k37209 in k37206 in k37203 in a37200 in k37197 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_37211(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37211,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_37214,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
if(C_truep(t1)){
t3=t2;
f_37214(2,t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37243,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t4=(C_truep(((C_word*)t0)[5])?lf[871]:lf[872]);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37251,a[2]=t4,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_car(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 379  parse-unit-position");
f_20341(t5,t6);}}

/* k37249 in k37209 in k37206 in k37203 in a37200 in k37197 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_37251(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  make-parse-error");
f_20233(((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k37241 in k37209 in k37206 in k37203 in a37200 in k37197 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_37243(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  errf");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k37212 in k37209 in k37206 in k37203 in a37200 in k37197 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_37214(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37214,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37217,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 379  emit");
f_20441(t2,t3,((C_word*)t0)[4],((C_word*)t0)[2]);}

/* k37215 in k37212 in k37209 in k37206 in k37203 in a37200 in k37197 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_37217(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37217,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37220,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  set-emit-info!");
f_20423(t2,lf[869],lf[870],((C_word*)t0)[2]);}

/* k37218 in k37215 in k37212 in k37209 in k37206 in k37203 in a37200 in k37197 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_37220(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37220,2,t0,t1);}
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_truep(((C_word*)t0)[3])?(C_word)C_a_i_list(&a,2,lf[867],((C_word*)t0)[2]):(C_word)C_a_i_list(&a,2,lf[868],((C_word*)t0)[2])));}

/* k37189 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_37191(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[761]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[355],"*rules*"),C_fix(27648),t1);}

/* k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_21608(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21608,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21611,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37163,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(27648),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(2304),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(26624),t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(26368),t6);
t8=(C_word)C_a_i_cons(&a,2,lf[388],t7);
C_trace("ChickenBridge.scm: 379  make-rule");
f_19983(t3,lf[866],C_fix(26880),t8,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k37161 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_37163(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[761]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[355],"*rules*"),C_fix(26880),t1);}

/* k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_21611(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21611,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21614,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37103,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(1792),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(29696),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(1536),t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(25088),t6);
t8=(C_word)C_a_i_cons(&a,2,lf[387],t7);
t9=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37109,a[2]=((C_word)li604),tmp=(C_word)a,a+=3,tmp);
t10=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37127,a[2]=((C_word)li605),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  make-rule");
f_19983(t3,lf[865],C_fix(27136),t8,t9,t10);}

/* a37126 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_37127(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_37127,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37135,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37139,a[2]=t4,a[3]=t3,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  parse-unit-parsed");
f_20323(t6,t2);}

/* k37137 in a37126 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_37139(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  emit");
f_20441(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k37133 in a37126 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_37135(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37135,2,t0,t1);}
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,lf[54],t1));}

/* a37108 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_37109(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_37109,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_caddr(t2);
t6=(C_word)C_a_i_list(&a,2,t4,t5);
C_trace("ChickenBridge.scm: 379  make-parse-unit");
f_20284(t1,C_fix(27136),t6,C_SCHEME_FALSE);}

/* k37101 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_37103(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[761]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[355],"*rules*"),C_fix(27136),t1);}

/* k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_21614(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21614,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21617,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36980,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[402],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,t6,t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(29696),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(256),t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(29696),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(512),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(5120),t12);
t14=(C_word)C_a_i_cons(&a,2,lf[387],t13);
t15=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36986,a[2]=((C_word)li602),tmp=(C_word)a,a+=3,tmp);
t16=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37017,a[2]=((C_word)li603),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  make-rule");
f_19983(t3,lf[864],C_fix(27392),t14,t15,t16);}

/* a37016 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_37017(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_37017,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37021,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  parse-unit-parsed");
f_20323(t5,t2);}

/* k37019 in a37016 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_37021(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37021,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_37024,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(t1);
C_trace("ChickenBridge.scm: 379  emit");
f_20441(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k37022 in k37019 in a37016 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_37024(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37024,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_37027,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[5]);
C_trace("ChickenBridge.scm: 379  emit");
f_20441(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k37025 in k37022 in k37019 in a37016 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_37027(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37027,2,t0,t1);}
t2=(C_word)C_i_caddr(((C_word*)t0)[6]);
if(C_truep(t2)){
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37040,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  emit");
f_20441(t3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
t3=((C_word*)t0)[5];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_list(&a,4,lf[20],((C_word*)t0)[4],t1,C_SCHEME_FALSE));}}

/* k37038 in k37025 in k37022 in k37019 in a37016 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_37040(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37040,2,t0,t1);}
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_list(&a,4,lf[20],((C_word*)t0)[3],((C_word*)t0)[2],t1));}

/* a36985 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_36986(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_36986,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_36990,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  sixth");
t5=C_retrieve(lf[48]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}

/* k36988 in a36985 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_36990(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36990,2,t0,t1);}
t2=(C_word)C_i_caddr(((C_word*)t0)[3]);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37005,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  fifth");
t4=C_retrieve(lf[47]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[3]);}

/* k37003 in k36988 in a36985 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_37005(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37005,2,t0,t1);}
t2=(C_word)C_i_pairp(((C_word*)t0)[4]);
t3=(C_truep(t2)?(C_word)C_i_cadr(((C_word*)t0)[4]):C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,3,((C_word*)t0)[3],t1,t3);
C_trace("ChickenBridge.scm: 379  make-parse-unit");
f_20284(((C_word*)t0)[2],C_fix(27392),t4,C_SCHEME_FALSE);}

/* k36978 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_36980(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[761]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[355],"*rules*"),C_fix(27392),t1);}

/* k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_21617(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21617,2,t0,t1);}
t2=C_mutate(&lf[406],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21619,a[2]=((C_word)li339),tmp=(C_word)a,a+=3,tmp));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21673,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36860,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t6=(C_word)C_a_i_cons(&a,2,C_fix(256),t5);
t7=(C_word)C_a_i_cons(&a,2,lf[97],t6);
t8=(C_word)C_a_i_cons(&a,2,t7,C_SCHEME_END_OF_LIST);
t9=(C_word)C_a_i_cons(&a,2,C_fix(29696),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[387],t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,t10,t11);
t13=(C_word)C_a_i_cons(&a,2,lf[388],t12);
t14=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36866,a[2]=((C_word)li601),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  make-rule");
f_19983(t4,lf[863],C_fix(28416),t13,t14,C_SCHEME_FALSE);}

/* a36865 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_36866(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_36866,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_pairp(t2))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_36882,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_pairp(t5))){
t6=(C_word)C_i_cadr(t2);
if(C_truep((C_word)C_i_pairp(t6))){
t7=(C_word)C_i_cadr(t2);
t8=(C_word)C_i_car(t7);
C_trace("ChickenBridge.scm: 379  token-unit-type=?");
f_20369(t4,t8,C_fix(256));}
else{
t7=t4;
f_36882(2,t7,C_SCHEME_FALSE);}}
else{
t6=t4;
f_36882(2,t6,C_SCHEME_FALSE);}}
else{
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_list(&a,1,t2));}}

/* k36880 in a36865 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_36882(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36882,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_36893,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_i_cadr(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 379  remove-token-type");
f_21619(t3,t4,C_fix(256));}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_list(&a,1,((C_word*)t0)[3]));}}

/* k36891 in k36880 in a36865 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_36893(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36893,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* k36858 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_36860(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[761]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[355],"*rules*"),C_fix(28416),t1);}

/* k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_21673(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word ab[51],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21673,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21676,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36721,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(6144),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(256),t5);
t7=(C_word)C_a_i_cons(&a,2,lf[97],t6);
t8=(C_word)C_a_i_cons(&a,2,t7,C_SCHEME_END_OF_LIST);
t9=(C_word)C_a_i_cons(&a,2,C_fix(29696),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(6144),t9);
t11=(C_word)C_a_i_cons(&a,2,lf[387],t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t13=(C_word)C_a_i_cons(&a,2,C_fix(6144),t12);
t14=(C_word)C_a_i_cons(&a,2,lf[387],t13);
t15=(C_word)C_a_i_cons(&a,2,t14,C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,t11,t15);
t17=(C_word)C_a_i_cons(&a,2,lf[388],t16);
t18=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36727,a[2]=((C_word)li600),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  make-rule");
f_19983(t3,lf[862],C_fix(28672),t17,t18,C_SCHEME_FALSE);}

/* a36726 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_36727(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[9],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_36727,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_36747,a[2]=t4,a[3]=t1,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_36750,a[2]=t6,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t8=(C_word)C_i_cddr(t2);
if(C_truep((C_word)C_i_pairp(t8))){
t9=(C_word)C_i_caddr(t2);
if(C_truep((C_word)C_i_pairp(t9))){
t10=(C_word)C_i_caddr(t2);
t11=(C_word)C_i_car(t10);
C_trace("ChickenBridge.scm: 379  token-unit-type=?");
f_20369(t7,t11,C_fix(256));}
else{
t10=t7;
f_36750(2,t10,C_SCHEME_FALSE);}}
else{
t9=t7;
f_36750(2,t9,C_SCHEME_FALSE);}}

/* k36748 in a36726 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_36750(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_caddr(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 379  remove-token-type");
f_21619(((C_word*)t0)[2],t2,C_fix(256));}
else{
t2=((C_word*)t0)[2];
f_36747(2,t2,C_SCHEME_END_OF_LIST);}}

/* k36745 in a36726 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_36747(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36747,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t1);
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t2));}

/* k36719 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_36721(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[761]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[355],"*rules*"),C_fix(28672),t1);}

/* k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_21676(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word ab[75],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21676,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21679,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36569,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(512),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[387],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(28416),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(512),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[387],t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,C_fix(28672),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(512),t12);
t14=(C_word)C_a_i_cons(&a,2,lf[387],t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,C_fix(28672),t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(256),t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(28416),t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(512),t18);
t20=(C_word)C_a_i_cons(&a,2,lf[387],t19);
t21=(C_word)C_a_i_cons(&a,2,t20,C_SCHEME_END_OF_LIST);
t22=(C_word)C_a_i_cons(&a,2,t14,t21);
t23=(C_word)C_a_i_cons(&a,2,t10,t22);
t24=(C_word)C_a_i_cons(&a,2,t6,t23);
t25=(C_word)C_a_i_cons(&a,2,lf[388],t24);
t26=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36575,a[2]=((C_word)li599),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  make-rule");
f_19983(t3,lf[861],C_fix(28160),t25,t26,C_SCHEME_FALSE);}

/* a36574 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_36575(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_36575,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(C_word)C_i_cdr(((C_word*)t4)[1]);
t6=C_set_block_item(t4,0,t5);
t7=(C_word)C_i_car(((C_word*)t4)[1]);
t8=(C_word)C_i_cdr(((C_word*)t4)[1]);
t9=C_set_block_item(t4,0,t8);
t10=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_36593,a[2]=t7,a[3]=t4,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  token-unit-type=?");
f_20369(t10,t7,C_fix(768));}

/* k36591 in a36574 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_36593(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36593,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_END_OF_LIST);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_36602,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 379  token-unit-type=?");
f_20369(t2,t3,C_fix(256));}}

/* k36600 in k36591 in a36574 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_36602(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 379  append");
t3=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}}

/* k36567 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_36569(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[761]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[355],"*rules*"),C_fix(28160),t1);}

/* k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_21679(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21679,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21682,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36498,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(28160),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(25088),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[387],t5);
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36504,a[2]=((C_word)li597),tmp=(C_word)a,a+=3,tmp);
t8=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36522,a[2]=((C_word)li598),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  make-rule");
f_19983(t3,lf[860],C_fix(27904),t6,t7,t8);}

/* a36521 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_36522(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_36522,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_36526,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  parse-unit-parsed");
f_20323(t5,t2);}

/* k36524 in a36521 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_36526(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36526,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_36529,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(t1);
C_trace("ChickenBridge.scm: 379  emit");
f_20441(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k36527 in k36524 in a36521 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_36529(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36529,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_36545,a[2]=t1,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 379  emit");
f_20441(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k36543 in k36527 in k36524 in a36521 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_36545(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36545,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* a36503 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_36504(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_36504,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=(C_word)C_a_i_cons(&a,2,t4,t5);
C_trace("ChickenBridge.scm: 379  make-parse-unit");
f_20284(t1,C_fix(27904),t6,C_SCHEME_FALSE);}

/* k36496 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_36498(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[761]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[355],"*rules*"),C_fix(27904),t1);}

/* k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_21682(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word ab[63],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21682,2,t0,t1);}
t2=C_mutate(&lf[407],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21684,a[2]=((C_word)li340),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[408],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21705,a[2]=((C_word)li343),tmp=(C_word)a,a+=3,tmp));
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21821,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36422,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
t6=(C_word)C_a_i_cons(&a,2,C_fix(8705),C_SCHEME_END_OF_LIST);
t7=(C_word)C_a_i_cons(&a,2,C_fix(8450),t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(8963),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(10244),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(11268),t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(11012),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(9732),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(9476),t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(9988),t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(10756),t14);
t16=(C_word)C_a_i_cons(&a,2,C_fix(8199),t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(7941),t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(7686),t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(7430),t18);
t20=(C_word)C_a_i_cons(&a,2,C_fix(7173),t19);
t21=(C_word)C_a_i_cons(&a,2,C_fix(6917),t20);
t22=(C_word)C_a_i_cons(&a,2,lf[388],t21);
C_trace("ChickenBridge.scm: 379  make-rule");
f_19983(t5,lf[859],C_fix(28928),t22,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k36420 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_36422(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[761]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[355],"*rules*"),C_fix(28928),t1);}

/* k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_21821(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21821,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21824,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36342,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29440),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(28928),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[101],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(29440),t7);
t9=(C_word)C_a_i_cons(&a,2,lf[387],t8);
t10=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36348,a[2]=((C_word)li596),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  make-rule");
f_19983(t3,lf[858],C_fix(29184),t9,t10,C_SCHEME_FALSE);}

/* a36347 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_36348(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_36348,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_36355,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_cadr(t2);
if(C_truep((C_word)C_i_pairp(t5))){
t6=(C_word)C_i_cadr(t2);
t7=(C_word)C_i_car(t6);
C_trace("ChickenBridge.scm: 379  is-op?");
f_21684(t4,t7);}
else{
t6=t4;
f_36355(2,t6,C_SCHEME_FALSE);}}

/* k36353 in a36347 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_36355(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36355,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=(C_word)C_i_cadr(((C_word*)t0)[3]);
t4=(C_word)C_a_i_cons(&a,2,t2,t3);
C_trace("ChickenBridge.scm: 379  inf->pre");
f_21705(((C_word*)t0)[2],t4);}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_car(((C_word*)t0)[3]));}}

/* k36340 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_36342(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[761]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[355],"*rules*"),C_fix(29184),t1);}

/* k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_21824(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word ab[72],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21824,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21827,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36206,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29440),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(7173),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[387],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(29440),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(8963),t7);
t9=(C_word)C_a_i_cons(&a,2,lf[387],t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t11=(C_word)C_a_i_cons(&a,2,C_fix(29184),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(512),t11);
t13=(C_word)C_a_i_cons(&a,2,lf[387],t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(2304),C_SCHEME_END_OF_LIST);
t15=(C_word)C_a_i_cons(&a,2,C_fix(26624),t14);
t16=(C_word)C_a_i_cons(&a,2,C_fix(26368),t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(27136),t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(27904),t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(27392),t18);
t20=(C_word)C_a_i_cons(&a,2,t13,t19);
t21=(C_word)C_a_i_cons(&a,2,t9,t20);
t22=(C_word)C_a_i_cons(&a,2,t6,t21);
t23=(C_word)C_a_i_cons(&a,2,lf[388],t22);
t24=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36212,a[2]=((C_word)li594),tmp=(C_word)a,a+=3,tmp);
t25=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36238,a[2]=((C_word)li595),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  make-rule");
f_19983(t3,lf[857],C_fix(29440),t23,t24,t25);}

/* a36237 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_36238(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_36238,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_36246,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  parse-unit-parsed");
f_20323(t5,t2);}

/* k36244 in a36237 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_36246(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  emit");
f_20441(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* a36211 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_36212(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_36212,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36220,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_pairp(t2))){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_36229,a[2]=t2,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 379  token-unit-type=?");
f_20369(t5,t6,C_fix(512));}
else{
t5=t4;
f_36220(t5,t2);}}

/* k36227 in a36211 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_36229(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_36220(t2,(C_truep(t1)?(C_word)C_i_cadr(((C_word*)t0)[2]):((C_word*)t0)[2]));}

/* k36218 in a36211 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_36220(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  make-parse-unit");
f_20284(((C_word*)t0)[2],C_fix(29440),t1,C_SCHEME_FALSE);}

/* k36204 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_36206(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[761]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[355],"*rules*"),C_fix(29440),t1);}

/* k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_21827(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21827,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21830,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36162,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(26368),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(6400),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(2304),t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(26624),t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(27136),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(27904),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(27392),t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(29184),t10);
t12=(C_word)C_a_i_cons(&a,2,lf[388],t11);
C_trace("ChickenBridge.scm: 379  make-rule");
f_19983(t3,lf[856],C_fix(29696),t12,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k36160 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_36162(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[761]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[355],"*rules*"),C_fix(29696),t1);}

/* k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_21830(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21830,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21833,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36052,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[101],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(29696),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(15872),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[387],t9);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36058,a[2]=((C_word)li591),tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36080,a[2]=((C_word)li593),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  make-rule");
f_19983(t3,lf[855],C_fix(33536),t10,t11,t12);}

/* a36079 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_36080(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_36080,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_a_i_list(&a,1,lf[436]);
t6=t5;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36091,a[2]=t1,a[3]=t4,a[4]=t3,a[5]=t7,a[6]=t5,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  parse-unit-parsed");
f_20323(t8,t2);}

/* k36089 in a36079 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_36091(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36091,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36093,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t3,a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word)li592),tmp=(C_word)a,a+=8,tmp));
t5=((C_word*)t3)[1];
f_36093(t5,((C_word*)t0)[2],t1);}

/* do3347 in k36089 in a36079 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_36093(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_36093,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)t0)[6]);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_36122,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 379  emit");
f_20441(t3,t4,((C_word*)t0)[3],((C_word*)t0)[2]);}}

/* k36120 in do3347 in k36089 in a36079 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_36122(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36122,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
t3=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[5])[1],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t4);
t6=(C_word)C_i_cdr(((C_word*)t0)[4]);
t7=((C_word*)((C_word*)t0)[3])[1];
f_36093(t7,((C_word*)t0)[2],t6);}

/* a36057 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_36058(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_36058,4,t0,t1,t2,t3);}
t4=(C_word)C_i_cadr(t2);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_36074,a[2]=t1,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_caddr(t2);
C_trace("ChickenBridge.scm: 379  remove-token-type");
f_21619(t5,t6,C_fix(256));}

/* k36072 in a36057 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_36074(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36074,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 379  make-parse-unit");
f_20284(((C_word*)t0)[2],C_fix(33536),t2,C_SCHEME_FALSE);}

/* k36050 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_36052(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[761]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[355],"*rules*"),C_fix(33536),t1);}

/* k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_21833(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21833,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21836,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35977,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[101],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(29696),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(16896),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[387],t9);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35983,a[2]=((C_word)li589),tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36005,a[2]=((C_word)li590),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  make-rule");
f_19983(t3,lf[854],C_fix(34560),t10,t11,t12);}

/* a36004 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_36005(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_36005,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_36009,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  parse-unit-parsed");
f_20323(t5,t2);}

/* k36007 in a36004 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_36009(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36009,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36016,a[2]=((C_word*)t0)[4],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  emit");
f_20441(t2,t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k36014 in k36007 in a36004 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_36016(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36016,2,t0,t1);}
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,lf[720],t1));}

/* a35982 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_35983(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_35983,4,t0,t1,t2,t3);}
t4=(C_word)C_i_cadr(t2);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35999,a[2]=t1,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_caddr(t2);
C_trace("ChickenBridge.scm: 379  remove-token-type");
f_21619(t5,t6,C_fix(256));}

/* k35997 in a35982 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_35999(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35999,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 379  make-parse-unit");
f_20284(((C_word*)t0)[2],C_fix(34560),t2,C_SCHEME_FALSE);}

/* k35975 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_35977(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[761]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[355],"*rules*"),C_fix(34560),t1);}

/* k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_21836(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word ab[66],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21836,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21839,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35764,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(25088),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(2304),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[388],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(28672),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(256),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(28416),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[387],t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(28672),C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,C_fix(28416),t11);
t13=(C_word)C_a_i_cons(&a,2,t10,t12);
t14=(C_word)C_a_i_cons(&a,2,lf[388],t13);
t15=(C_word)C_a_i_cons(&a,2,t14,C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,C_fix(256),t15);
t17=(C_word)C_a_i_cons(&a,2,lf[402],t16);
t18=(C_word)C_a_i_cons(&a,2,t17,C_SCHEME_END_OF_LIST);
t19=(C_word)C_a_i_cons(&a,2,t6,t18);
t20=(C_word)C_a_i_cons(&a,2,C_fix(16384),t19);
t21=(C_word)C_a_i_cons(&a,2,lf[387],t20);
t22=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35770,a[2]=((C_word)li586),tmp=(C_word)a,a+=3,tmp);
t23=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35845,a[2]=((C_word)li588),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  make-rule");
f_19983(t3,lf[853],C_fix(34304),t21,t22,t23);}

/* a35844 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_35845(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_35845,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35849,a[2]=t1,a[3]=t2,a[4]=t4,tmp=(C_word)a,a+=5,tmp);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35885,a[2]=t4,a[3]=t3,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  parse-unit-parsed");
f_20323(t6,t2);}

/* k35883 in a35844 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_35885(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  emit");
f_20441(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k35847 in a35844 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_35849(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35849,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=(C_word)C_i_car(t1);
t4=(C_word)C_i_cdr(t1);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35865,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word)li587),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  expand-send");
t6=C_retrieve(lf[30]);
((C_proc5)C_retrieve_proc(t6))(5,t6,((C_word*)t0)[2],t3,t4,t5);}

/* a35864 in k35847 in a35844 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_35865(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+8)){
C_save_and_reclaim((void*)tr3r,(void*)f_35865r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_35865r(t0,t1,t2,t3);}}

static void C_ccall f_35865r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a=C_alloc(8);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35873,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35877,a[2]=((C_word*)t0)[2],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_apply(5,0,t5,C_retrieve(lf[31]),t2,t3);}

/* k35875 in a35864 in k35847 in a35844 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_35877(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35877,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35881,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  parse-unit-position");
f_20341(t2,((C_word*)t0)[2]);}

/* k35879 in k35875 in a35864 in k35847 in a35844 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_35881(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  make-parse-error");
f_20233(((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k35871 in a35864 in k35847 in a35844 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_35873(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  errf");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* a35769 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_35770(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[11],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_35770,4,t0,t1,t2,t3);}
t4=(C_word)C_i_caddr(t2);
t5=t4;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35777,a[2]=t1,a[3]=t6,a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t8=((C_word*)t6)[1];
if(C_truep(t8)){
t9=(C_word)C_i_cadr(((C_word*)t6)[1]);
t10=C_set_block_item(t6,0,t9);
t11=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35813,a[2]=t7,a[3]=t6,tmp=(C_word)a,a+=4,tmp);
t12=(C_word)C_i_cdr(((C_word*)t6)[1]);
if(C_truep((C_word)C_i_nullp(t12))){
t13=t11;
f_35813(2,t13,C_SCHEME_FALSE);}
else{
t13=(C_word)C_i_cadr(((C_word*)t6)[1]);
C_trace("ChickenBridge.scm: 379  token-unit-type=?");
f_20369(t11,t13,C_fix(256));}}
else{
t9=C_set_block_item(t6,0,C_SCHEME_END_OF_LIST);
t10=t7;
f_35777(t10,t9);}}

/* k35811 in a35769 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_35813(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35813,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35817,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t4=(C_word)C_i_caddr(((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 379  append");
t5=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,t3,t4);}
else{
t2=((C_word*)t0)[2];
f_35777(t2,C_SCHEME_UNDEFINED);}}

/* k35815 in k35811 in a35769 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_35817(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_35777(t3,t2);}

/* k35775 in a35769 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_35777(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_35777,NULL,2,t0,t1);}
t2=(C_word)C_i_cadr(((C_word*)t0)[4]);
t3=(C_word)C_a_i_cons(&a,2,t2,((C_word*)((C_word*)t0)[3])[1]);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35788,a[2]=t3,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 379  parse-unit-position");
f_20341(t4,t5);}

/* k35786 in k35775 in a35769 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_35788(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  make-parse-unit");
f_20284(((C_word*)t0)[3],C_fix(34304),((C_word*)t0)[2],t1);}

/* k35762 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_35764(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[761]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[355],"*rules*"),C_fix(34304),t1);}

/* k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_21839(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21839,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21842,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35738,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(14080),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[387],t5);
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35744,a[2]=((C_word)li585),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  make-rule");
f_19983(t3,lf[852],C_fix(33792),t6,t7,C_SCHEME_FALSE);}

/* a35743 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_35744(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_35744,4,t0,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_cadr(t2));}

/* k35736 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_35738(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[761]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[355],"*rules*"),C_fix(33792),t1);}

/* k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_21842(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21842,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21845,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35710,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(14592),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[387],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35718,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  simple-unit-parser");
f_20682(t7,C_fix(35072));}

/* k35716 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_35718(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35718,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35722,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  simple-unit-emitter");
f_20690(t2,lf[447]);}

/* k35720 in k35716 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_35722(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  make-rule");
f_19983(((C_word*)t0)[4],lf[851],C_fix(35072),((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k35708 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_35710(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[761]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[355],"*rules*"),C_fix(35072),t1);}

/* k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_21845(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21845,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21848,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35682,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(13568),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[387],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35690,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  simple-unit-parser");
f_20682(t7,C_fix(35584));}

/* k35688 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_35690(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35690,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35694,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  simple-unit-emitter");
f_20690(t2,lf[446]);}

/* k35692 in k35688 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_35694(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  make-rule");
f_19983(((C_word*)t0)[4],lf[850],C_fix(35584),((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k35680 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_35682(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[761]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[355],"*rules*"),C_fix(35584),t1);}

/* k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_21848(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21848,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21851,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35654,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(17152),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[387],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35662,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  simple-unit-parser");
f_20682(t7,C_fix(35328));}

/* k35660 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_35662(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35662,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35666,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  simple-unit-emitter");
f_20690(t2,lf[849]);}

/* k35664 in k35660 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_35666(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  make-rule");
f_19983(((C_word*)t0)[4],lf[848],C_fix(35328),((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k35652 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_35654(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[761]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[355],"*rules*"),C_fix(35328),t1);}

/* k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_21851(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21851,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21854,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35626,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(18432),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[387],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35634,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  simple-unit-parser");
f_20682(t7,C_fix(34816));}

/* k35632 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_35634(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35634,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35638,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  simple-unit-emitter");
f_20690(t2,lf[457]);}

/* k35636 in k35632 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_35638(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  make-rule");
f_19983(((C_word*)t0)[4],lf[847],C_fix(34816),((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k35624 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_35626(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[761]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[355],"*rules*"),C_fix(34816),t1);}

/* k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_21854(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word ab[69],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21854,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21857,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35489,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(6144),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[387],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,t6,t7);
t9=(C_word)C_a_i_cons(&a,2,lf[388],t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t11=(C_word)C_a_i_cons(&a,2,C_fix(6144),t10);
t12=(C_word)C_a_i_cons(&a,2,lf[387],t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t14=(C_word)C_a_i_cons(&a,2,t12,t13);
t15=(C_word)C_a_i_cons(&a,2,lf[388],t14);
t16=(C_word)C_a_i_cons(&a,2,t15,C_SCHEME_END_OF_LIST);
t17=(C_word)C_a_i_cons(&a,2,C_fix(256),t16);
t18=(C_word)C_a_i_cons(&a,2,lf[101],t17);
t19=(C_word)C_a_i_cons(&a,2,t18,C_SCHEME_END_OF_LIST);
t20=(C_word)C_a_i_cons(&a,2,t9,t19);
t21=(C_word)C_a_i_cons(&a,2,C_fix(15616),t20);
t22=(C_word)C_a_i_cons(&a,2,lf[387],t21);
t23=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35495,a[2]=((C_word)li583),tmp=(C_word)a,a+=3,tmp);
t24=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35525,a[2]=((C_word)li584),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  make-rule");
f_19983(t3,lf[846],C_fix(36096),t22,t23,t24);}

/* a35524 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_35525(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_35525,5,t0,t1,t2,t3,t4);}
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,lf[845]);}

/* a35494 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_35495(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[5],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_35495,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35519,a[2]=t1,a[3]=t4,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
t7=(C_word)C_i_caddr(t2);
C_trace("ChickenBridge.scm: 379  remove-token-type");
f_21619(t6,t7,C_fix(256));}

/* k35517 in a35494 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_35519(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35519,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t1);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t2);
C_trace("ChickenBridge.scm: 379  make-parse-unit");
f_20284(((C_word*)t0)[2],C_fix(36096),t3,C_SCHEME_FALSE);}

/* k35487 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_35489(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[761]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[355],"*rules*"),C_fix(36096),t1);}

/* k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_21857(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21857,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21860,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35431,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(19712),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[387],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35439,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  simple-unit-parser");
f_20682(t7,C_fix(31744));}

/* k35437 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_35439(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35439,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35441,a[2]=((C_word)li582),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  make-rule");
f_19983(((C_word*)t0)[3],lf[844],C_fix(31744),((C_word*)t0)[2],t1,t2);}

/* a35440 in k35437 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_35441(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_35441,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35445,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  parse-unit-parsed");
f_20323(t5,t2);}

/* k35443 in a35440 in k35437 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_35445(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35445,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_35448,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35473,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  get-emit-info");
f_20401(t3,lf[825],((C_word*)t0)[3]);}

/* k35471 in k35443 in a35440 in k35437 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_35473(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35473,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_35448(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35461,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35465,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_i_car(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 379  parse-unit-position");
f_20341(t3,t4);}}

/* k35463 in k35471 in k35443 in a35440 in k35437 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_35465(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  make-parse-error");
f_20233(((C_word*)t0)[2],lf[843],t1);}

/* k35459 in k35471 in k35443 in a35440 in k35437 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_35461(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  errf");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k35446 in k35443 in a35440 in k35437 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_35448(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  emit");
f_20441(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k35429 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_35431(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[761]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[355],"*rules*"),C_fix(31744),t1);}

/* k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_21860(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21860,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21863,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35370,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(18688),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[387],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35378,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  simple-unit-parser");
f_20682(t7,C_fix(31488));}

/* k35376 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_35378(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35378,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35380,a[2]=((C_word)li581),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  make-rule");
f_19983(((C_word*)t0)[3],lf[842],C_fix(31488),((C_word*)t0)[2],t1,t2);}

/* a35379 in k35376 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_35380(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_35380,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35384,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  parse-unit-parsed");
f_20323(t5,t2);}

/* k35382 in a35379 in k35376 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_35384(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35384,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_35387,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35415,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  get-emit-info");
f_20401(t3,lf[811],((C_word*)t0)[3]);}

/* k35413 in k35382 in a35379 in k35376 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_35415(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35415,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_35387(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35403,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35407,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_i_car(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 379  parse-unit-position");
f_20341(t3,t4);}}

/* k35405 in k35413 in k35382 in a35379 in k35376 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_35407(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  make-parse-error");
f_20233(((C_word*)t0)[2],lf[841],t1);}

/* k35401 in k35413 in k35382 in a35379 in k35376 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_35403(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  errf");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k35385 in k35382 in a35379 in k35376 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_35387(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35387,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_35390,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  set-emit-info!");
f_20423(t2,lf[811],lf[810],((C_word*)t0)[3]);}

/* k35388 in k35385 in k35382 in a35379 in k35376 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_35390(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  emit");
f_20441(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k35368 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_35370(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[761]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[355],"*rules*"),C_fix(31488),t1);}

/* k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_21863(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21863,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21866,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35279,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(10756),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(25088),t5);
t7=(C_word)C_a_i_cons(&a,2,lf[387],t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(25088),C_SCHEME_END_OF_LIST);
t9=(C_word)C_a_i_cons(&a,2,t7,t8);
t10=(C_word)C_a_i_cons(&a,2,lf[388],t9);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35285,a[2]=((C_word)li578),tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35320,a[2]=((C_word)li580),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  make-rule");
f_19983(t3,lf[840],C_fix(30208),t10,t11,t12);}

/* a35319 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_35320(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_35320,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35326,a[2]=t4,a[3]=t3,a[4]=((C_word)li579),tmp=(C_word)a,a+=5,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35334,a[2]=t5,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  parse-unit-parsed");
f_20323(t6,t2);}

/* k35332 in a35319 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_35334(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("map");
t2=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* a35325 in a35319 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_35326(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_35326,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 379  emit");
f_20441(t1,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* a35284 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_35285(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[10],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_35285,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_pairp(t2))){
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_caddr(t2);
t6=(C_word)C_a_i_list(&a,2,t4,t5);
C_trace("ChickenBridge.scm: 379  make-parse-unit");
f_20284(t1,C_fix(30208),t6,C_SCHEME_FALSE);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35318,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  make-parse-unit");
f_20284(t4,C_fix(4608),lf[839],C_SCHEME_FALSE);}}

/* k35316 in a35284 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_35318(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35318,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 379  make-parse-unit");
f_20284(((C_word*)t0)[2],C_fix(30208),t2,C_SCHEME_FALSE);}

/* k35277 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_35279(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[761]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[355],"*rules*"),C_fix(30208),t1);}

/* k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_21866(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21866,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21869,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35177,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(30208),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[101],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(30208),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(20480),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[387],t9);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35183,a[2]=((C_word)li575),tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35226,a[2]=((C_word)li577),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  make-rule");
f_19983(t3,lf[838],C_fix(29952),t10,t11,t12);}

/* a35225 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_35226(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_35226,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35230,a[2]=t2,a[3]=t1,a[4]=t4,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  add-emit-info");
f_20413(t5,lf[837],C_SCHEME_TRUE,t3);}

/* k35228 in a35225 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_35230(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35230,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35235,a[2]=((C_word*)t0)[4],a[3]=t1,a[4]=((C_word)li576),tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35243,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  parse-unit-parsed");
f_20323(t3,((C_word*)t0)[2]);}

/* k35241 in k35228 in a35225 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_35243(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("map");
t2=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* a35234 in k35228 in a35225 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_35235(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_35235,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 379  emit");
f_20441(t1,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* a35182 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_35183(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_35183,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_caddr(t2))){
t4=(C_word)C_i_cadr(t2);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35216,a[2]=t1,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_caddr(t2);
C_trace("ChickenBridge.scm: 379  remove-token-type");
f_21619(t5,t6,C_fix(256));}
else{
t4=(C_word)C_i_cadr(t2);
t5=(C_word)C_a_i_list(&a,1,t4);
C_trace("ChickenBridge.scm: 379  make-parse-unit");
f_20284(t1,C_fix(29952),t5,C_SCHEME_FALSE);}}

/* k35214 in a35182 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_35216(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35216,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 379  make-parse-unit");
f_20284(((C_word*)t0)[2],C_fix(29952),t2,C_SCHEME_FALSE);}

/* k35175 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_35177(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[761]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[355],"*rules*"),C_fix(29952),t1);}

/* k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_21869(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[57],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21869,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21872,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35091,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(25088),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(27136),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[388],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(12800),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(12544),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(12288),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(12032),t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(11776),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(11268),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(11012),t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(10756),t13);
t15=(C_word)C_a_i_cons(&a,2,lf[388],t14);
t16=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t17=(C_word)C_a_i_cons(&a,2,t15,t16);
t18=(C_word)C_a_i_cons(&a,2,t6,t17);
t19=(C_word)C_a_i_cons(&a,2,lf[387],t18);
t20=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35097,a[2]=((C_word)li574),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  make-rule");
f_19983(t3,lf[836],C_fix(30720),t19,t20,C_SCHEME_FALSE);}

/* a35096 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_35097(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_35097,4,t0,t1,t2,t3);}
C_trace("ChickenBridge.scm: 379  make-parse-unit");
f_20284(t1,C_fix(30720),t2,C_SCHEME_FALSE);}

/* k35089 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_35091(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[761]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[355],"*rules*"),C_fix(30720),t1);}

/* k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_21872(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21872,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21875,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34811,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(30720),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[101],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(30720),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(16640),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[387],t9);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34817,a[2]=((C_word)li571),tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34860,a[2]=((C_word)li573),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  make-rule");
f_19983(t3,lf[835],C_fix(30464),t10,t11,t12);}

/* a34859 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_34860(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_34860,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_34864,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  parse-unit-parsed");
f_20323(t5,t2);}

/* k34862 in a34859 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_34864(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34864,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,lf[413]);
t3=t2;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34872,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t6,a[5]=t4,a[6]=t2,a[7]=((C_word)li572),tmp=(C_word)a,a+=8,tmp));
t8=((C_word*)t6)[1];
f_34872(t8,((C_word*)t0)[2],t1);}

/* do3426 in k34862 in a34859 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_34872(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_34872,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=(C_word)C_i_cddr(((C_word*)t0)[6]);
t4=(C_word)C_i_nullp(t3);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_truep(t4)?(C_word)C_i_cadr(((C_word*)t0)[6]):((C_word*)t0)[6]));}
else{
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34895,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=t2,a[7]=((C_word*)t0)[5],tmp=(C_word)a,a+=8,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 379  parse-unit-parsed");
f_20323(t3,t4);}}

/* k34893 in do3426 in k34862 in a34859 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_34895(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34895,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_34898,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
t3=(C_word)C_i_car(t1);
C_trace("ChickenBridge.scm: 379  emit");
f_20441(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k34896 in k34893 in do3426 in k34862 in a34859 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_34898(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34898,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_34901,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 379  parse-unit-type");
f_20305(t2,t3);}

/* k34899 in k34896 in k34893 in do3426 in k34862 in a34859 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_34901(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34901,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34904,a[2]=t1,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
t3=(C_word)C_i_caddr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 379  emit");
f_20441(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k34902 in k34899 in k34896 in k34893 in do3426 in k34862 in a34859 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_34904(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34904,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34907,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=t3,tmp=(C_word)a,a+=8,tmp);
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34964,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t4,a[5]=t1,a[6]=t3,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  SalType=?");
f_21575(t5,((C_word*)t0)[2],C_fix(10756));}

/* k34962 in k34902 in k34899 in k34896 in k34893 in do3426 in k34862 in a34859 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_34964(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34964,2,t0,t1);}
if(C_truep(t1)){
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,((C_word*)t0)[5]);
t3=((C_word*)t0)[4];
f_34907(t3,t2);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34971,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  SalType=?");
f_21575(t2,((C_word*)t0)[2],C_fix(11776));}}

/* k34969 in k34962 in k34902 in k34899 in k34896 in k34893 in do3426 in k34862 in a34859 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_34971(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34971,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[97],((C_word*)t0)[6],((C_word*)t0)[5]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=((C_word*)t0)[3];
f_34907(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34981,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  SalType=?");
f_21575(t2,((C_word*)t0)[2],C_fix(12032));}}

/* k34979 in k34969 in k34962 in k34902 in k34899 in k34896 in k34893 in do3426 in k34862 in a34859 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_34981(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34981,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[101],((C_word*)t0)[6],((C_word*)t0)[5]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=((C_word*)t0)[3];
f_34907(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34991,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  SalType=?");
f_21575(t2,((C_word*)t0)[2],C_fix(12288));}}

/* k34989 in k34979 in k34969 in k34962 in k34902 in k34899 in k34896 in k34893 in do3426 in k34862 in a34859 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_34991(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34991,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,2,lf[590],((C_word*)t0)[6]);
t3=(C_word)C_a_i_list(&a,3,lf[18],((C_word*)t0)[5],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=((C_word*)t0)[3];
f_34907(t5,t4);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35005,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  SalType=?");
f_21575(t2,((C_word*)t0)[2],C_fix(12544));}}

/* k35003 in k34989 in k34979 in k34969 in k34962 in k34902 in k34899 in k34896 in k34893 in do3426 in k34862 in a34859 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_35005(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35005,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[798],((C_word*)t0)[6],((C_word*)t0)[5]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=((C_word*)t0)[3];
f_34907(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35015,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  SalType=?");
f_21575(t2,((C_word*)t0)[2],C_fix(12800));}}

/* k35013 in k35003 in k34989 in k34979 in k34969 in k34962 in k34902 in k34899 in k34896 in k34893 in do3426 in k34862 in a34859 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_35015(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35015,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[18],((C_word*)t0)[6],((C_word*)t0)[5]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=((C_word*)t0)[3];
f_34907(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35025,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  SalType=?");
f_21575(t2,((C_word*)t0)[2],C_fix(11012));}}

/* k35023 in k35013 in k35003 in k34989 in k34979 in k34969 in k34962 in k34902 in k34899 in k34896 in k34893 in do3426 in k34862 in a34859 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_35025(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35025,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[333],((C_word*)t0)[6],((C_word*)t0)[5]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=((C_word*)t0)[3];
f_34907(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_35035,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  SalType=?");
f_21575(t2,((C_word*)t0)[2],C_fix(11268));}}

/* k35033 in k35023 in k35013 in k35003 in k34989 in k34979 in k34969 in k34962 in k34902 in k34899 in k34896 in k34893 in do3426 in k34862 in a34859 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_35035(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35035,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[269],((C_word*)t0)[5],((C_word*)t0)[4]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_34907(t4,t3);}
else{
t2=((C_word*)t0)[2];
f_34907(t2,C_SCHEME_UNDEFINED);}}

/* k34905 in k34902 in k34899 in k34896 in k34893 in do3426 in k34862 in a34859 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_34907(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_34907,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34910,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_34931,a[2]=t2,a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t0)[2]))){
t4=(C_word)C_i_car(((C_word*)t0)[2]);
t5=t3;
f_34931(t5,(C_word)C_eqp(t4,lf[54]));}
else{
t4=t3;
f_34931(t4,C_SCHEME_FALSE);}}

/* k34929 in k34905 in k34902 in k34899 in k34896 in k34893 in do3426 in k34862 in a34859 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_34931(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_34931,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cadr(((C_word*)t0)[4]);
t3=(C_word)C_i_caddr(((C_word*)t0)[4]);
t4=(C_word)C_a_i_list(&a,3,lf[834],t2,t3);
t5=(C_word)C_a_i_list(&a,3,lf[219],t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34910(t7,t6);}
else{
t2=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_34910(t4,t3);}}

/* k34908 in k34905 in k34902 in k34899 in k34896 in k34893 in do3426 in k34862 in a34859 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_34910(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_34910,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[6])[1]);
t3=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[5])[1],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t4);
t6=(C_word)C_i_cdr(((C_word*)t0)[4]);
t7=((C_word*)((C_word*)t0)[3])[1];
f_34872(t7,((C_word*)t0)[2],t6);}

/* a34816 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_34817(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_34817,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_caddr(t2))){
t4=(C_word)C_i_cadr(t2);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34850,a[2]=t1,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_caddr(t2);
C_trace("ChickenBridge.scm: 379  remove-token-type");
f_21619(t5,t6,C_fix(256));}
else{
t4=(C_word)C_i_cadr(t2);
t5=(C_word)C_a_i_list(&a,1,t4);
C_trace("ChickenBridge.scm: 379  make-parse-unit");
f_20284(t1,C_fix(30464),t5,C_SCHEME_FALSE);}}

/* k34848 in a34816 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_34850(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34850,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 379  make-parse-unit");
f_20284(((C_word*)t0)[2],C_fix(30464),t2,C_SCHEME_FALSE);}

/* k34809 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_34811(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[761]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[355],"*rules*"),C_fix(30464),t1);}

/* k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_21875(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21875,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21878,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34697,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29952),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,lf[402],t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t7=(C_word)C_a_i_cons(&a,2,lf[101],t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(18193),C_SCHEME_END_OF_LIST);
t9=(C_word)C_a_i_cons(&a,2,t7,t8);
t10=(C_word)C_a_i_cons(&a,2,t5,t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(13328),t10);
t12=(C_word)C_a_i_cons(&a,2,lf[387],t11);
t13=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34703,a[2]=((C_word)li569),tmp=(C_word)a,a+=3,tmp);
t14=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34729,a[2]=((C_word)li570),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  make-rule");
f_19983(t3,lf[833],C_fix(32000),t12,t13,t14);}

/* a34728 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_34729(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_34729,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_34733,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  parse-unit-parsed");
f_20323(t5,t2);}

/* k34731 in a34728 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_34733(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34733,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_34739,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_i_cdr(t1);
C_trace("ChickenBridge.scm: 379  emit");
f_20441(t3,t4,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k34737 in k34731 in a34728 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_34739(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34739,2,t0,t1);}
if(C_truep(((C_word*)t0)[5])){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34759,a[2]=((C_word*)t0)[4],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  emit");
f_20441(t2,((C_word*)t0)[5],((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,lf[413],t1));}}

/* k34757 in k34737 in k34731 in a34728 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_34759(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34759,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,lf[2],t2));}

/* a34702 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_34703(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_34703,4,t0,t1,t2,t3);}
t4=(C_word)C_i_cadr(t2);
t5=t4;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(C_word)C_i_caddr(t2);
t8=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_34713,a[2]=t1,a[3]=t7,a[4]=t6,tmp=(C_word)a,a+=5,tmp);
t9=((C_word*)t6)[1];
if(C_truep(t9)){
t10=(C_word)C_i_car(((C_word*)t6)[1]);
t11=C_set_block_item(t6,0,t10);
t12=t8;
f_34713(t12,t11);}
else{
t10=t8;
f_34713(t10,C_SCHEME_FALSE);}}

/* k34711 in a34702 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_34713(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_34713,NULL,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 379  make-parse-unit");
f_20284(((C_word*)t0)[2],C_fix(32000),t2,C_SCHEME_FALSE);}

/* k34695 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_34697(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[761]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[355],"*rules*"),C_fix(32000),t1);}

/* k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_21878(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word ab[81],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21878,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21881,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34500,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,lf[402],t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t7=(C_word)C_a_i_cons(&a,2,C_fix(17920),t6);
t8=(C_word)C_a_i_cons(&a,2,lf[402],t7);
t9=(C_word)C_a_i_cons(&a,2,t8,C_SCHEME_END_OF_LIST);
t10=(C_word)C_a_i_cons(&a,2,t5,t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(18944),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(29696),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(14336),t12);
t14=(C_word)C_a_i_cons(&a,2,lf[387],t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,C_fix(29696),t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(19968),t16);
t18=(C_word)C_a_i_cons(&a,2,lf[387],t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t20=(C_word)C_a_i_cons(&a,2,C_fix(29696),t19);
t21=(C_word)C_a_i_cons(&a,2,C_fix(19200),t20);
t22=(C_word)C_a_i_cons(&a,2,lf[387],t21);
t23=(C_word)C_a_i_cons(&a,2,t22,C_SCHEME_END_OF_LIST);
t24=(C_word)C_a_i_cons(&a,2,t18,t23);
t25=(C_word)C_a_i_cons(&a,2,t14,t24);
t26=(C_word)C_a_i_cons(&a,2,lf[388],t25);
t27=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34506,a[2]=((C_word)li567),tmp=(C_word)a,a+=3,tmp);
t28=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34574,a[2]=((C_word)li568),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  make-rule");
f_19983(t3,lf[832],C_fix(32256),t26,t27,t28);}

/* a34573 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_34574(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_34574,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_34578,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  parse-unit-parsed");
f_20323(t5,t2);}

/* k34576 in a34573 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_34578(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  emit");
f_20441(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* a34505 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_34506(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[13],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_34506,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=C_SCHEME_END_OF_LIST;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34519,a[2]=t7,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t9=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34525,a[2]=t8,a[3]=t7,a[4]=t5,a[5]=t4,a[6]=t2,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  token-unit-type=?");
f_20369(t9,t4,C_fix(14336));}

/* k34523 in a34505 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_34525(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[29],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34525,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cadddr(((C_word*)t0)[6]);
t3=t2;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_34531,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t8,a[6]=t6,a[7]=((C_word*)t0)[4],a[8]=((C_word*)t0)[5],a[9]=t4,tmp=(C_word)a,a+=10,tmp);
t10=((C_word*)t4)[1];
if(C_truep(t10)){
t11=(C_word)C_i_car(((C_word*)t4)[1]);
t12=C_set_block_item(t6,0,t11);
t13=t9;
f_34531(t13,t12);}
else{
t11=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34560,a[2]=t9,a[3]=t6,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  make-parse-unit");
f_20284(t11,C_fix(4608),lf[831],C_SCHEME_FALSE);}}
else{
t2=(C_word)C_i_caddr(((C_word*)t0)[6]);
t3=(C_word)C_a_i_list(&a,3,((C_word*)t0)[5],((C_word*)t0)[4],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_34519(t5,t4);}}

/* k34558 in k34523 in a34505 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_34560(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_34531(t3,t2);}

/* k34529 in k34523 in a34505 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_34531(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_34531,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_34535,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 379  fifth");
t3=C_retrieve(lf[47]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k34533 in k34529 in k34523 in a34505 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_34535(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34535,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34538,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t4=((C_word*)((C_word*)t0)[8])[1];
if(C_truep(t4)){
t5=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[8])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=t3;
f_34538(t7,t6);}
else{
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34549,a[2]=t3,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  make-parse-unit");
f_20284(t5,C_fix(4608),lf[830],C_SCHEME_FALSE);}}

/* k34547 in k34533 in k34529 in k34523 in a34505 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_34549(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_34538(t3,t2);}

/* k34536 in k34533 in k34529 in k34523 in a34505 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_34538(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_34538,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,4,((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_34519(t4,t3);}

/* k34517 in a34505 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_34519(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  make-parse-unit");
f_20284(((C_word*)t0)[3],C_fix(32256),((C_word*)((C_word*)t0)[2])[1],C_SCHEME_FALSE);}

/* k34498 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_34500(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[761]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[355],"*rules*"),C_fix(32256),t1);}

/* k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_21881(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word t36;
C_word t37;
C_word t38;
C_word t39;
C_word t40;
C_word t41;
C_word t42;
C_word t43;
C_word t44;
C_word t45;
C_word t46;
C_word t47;
C_word t48;
C_word t49;
C_word t50;
C_word t51;
C_word t52;
C_word t53;
C_word t54;
C_word t55;
C_word t56;
C_word t57;
C_word t58;
C_word t59;
C_word t60;
C_word ab[174],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21881,2,t0,t1);}
t2=C_mutate(&lf[409],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21883,a[2]=((C_word)li344),tmp=(C_word)a,a+=3,tmp));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22404,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34228,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t6=(C_word)C_a_i_cons(&a,2,C_fix(23296),t5);
t7=(C_word)C_a_i_cons(&a,2,lf[387],t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t9=(C_word)C_a_i_cons(&a,2,C_fix(18944),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[402],t9);
t11=(C_word)C_a_i_cons(&a,2,t10,C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,C_fix(29696),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(10756),t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(25088),t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(22272),t14);
t16=(C_word)C_a_i_cons(&a,2,lf[387],t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t18=(C_word)C_a_i_cons(&a,2,C_fix(22784),t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(25088),t18);
t20=(C_word)C_a_i_cons(&a,2,C_fix(22272),t19);
t21=(C_word)C_a_i_cons(&a,2,lf[387],t20);
t22=(C_word)C_a_i_cons(&a,2,C_fix(21760),C_SCHEME_END_OF_LIST);
t23=(C_word)C_a_i_cons(&a,2,C_fix(20992),t22);
t24=(C_word)C_a_i_cons(&a,2,C_fix(23552),t23);
t25=(C_word)C_a_i_cons(&a,2,C_fix(21248),t24);
t26=(C_word)C_a_i_cons(&a,2,lf[388],t25);
t27=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t28=(C_word)C_a_i_cons(&a,2,t26,t27);
t29=(C_word)C_a_i_cons(&a,2,lf[402],t28);
t30=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t31=(C_word)C_a_i_cons(&a,2,C_fix(21504),t30);
t32=(C_word)C_a_i_cons(&a,2,lf[402],t31);
t33=(C_word)C_a_i_cons(&a,2,t32,C_SCHEME_END_OF_LIST);
t34=(C_word)C_a_i_cons(&a,2,t29,t33);
t35=(C_word)C_a_i_cons(&a,2,C_fix(29696),t34);
t36=(C_word)C_a_i_cons(&a,2,C_fix(22528),t35);
t37=(C_word)C_a_i_cons(&a,2,C_fix(25088),t36);
t38=(C_word)C_a_i_cons(&a,2,C_fix(22272),t37);
t39=(C_word)C_a_i_cons(&a,2,lf[387],t38);
t40=(C_word)C_a_i_cons(&a,2,C_fix(21760),C_SCHEME_END_OF_LIST);
t41=(C_word)C_a_i_cons(&a,2,C_fix(20992),t40);
t42=(C_word)C_a_i_cons(&a,2,C_fix(23552),t41);
t43=(C_word)C_a_i_cons(&a,2,C_fix(21248),t42);
t44=(C_word)C_a_i_cons(&a,2,lf[388],t43);
t45=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t46=(C_word)C_a_i_cons(&a,2,C_fix(21504),t45);
t47=(C_word)C_a_i_cons(&a,2,lf[402],t46);
t48=(C_word)C_a_i_cons(&a,2,t47,C_SCHEME_END_OF_LIST);
t49=(C_word)C_a_i_cons(&a,2,C_fix(29696),t48);
t50=(C_word)C_a_i_cons(&a,2,t44,t49);
t51=(C_word)C_a_i_cons(&a,2,C_fix(25088),t50);
t52=(C_word)C_a_i_cons(&a,2,C_fix(22272),t51);
t53=(C_word)C_a_i_cons(&a,2,lf[387],t52);
t54=(C_word)C_a_i_cons(&a,2,t53,C_SCHEME_END_OF_LIST);
t55=(C_word)C_a_i_cons(&a,2,t39,t54);
t56=(C_word)C_a_i_cons(&a,2,t21,t55);
t57=(C_word)C_a_i_cons(&a,2,t16,t56);
t58=(C_word)C_a_i_cons(&a,2,t7,t57);
t59=(C_word)C_a_i_cons(&a,2,lf[388],t58);
C_trace("ChickenBridge.scm: 379  make-rule");
f_19983(t4,lf[829],C_fix(33024),t59,C_retrieve2(lf[409],"sal-parse-stepping"),C_SCHEME_FALSE);}

/* k34226 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_34228(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[761]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[355],"*rules*"),C_fix(33024),t1);}

/* k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_22404(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[37],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22404,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22407,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34172,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(20224),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[387],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(19456),t7);
t9=(C_word)C_a_i_cons(&a,2,lf[387],t8);
t10=(C_word)C_a_i_cons(&a,2,t9,C_SCHEME_END_OF_LIST);
t11=(C_word)C_a_i_cons(&a,2,t6,t10);
t12=(C_word)C_a_i_cons(&a,2,lf[388],t11);
t13=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34180,a[2]=t12,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  simple-unit-parser");
f_20682(t13,C_fix(33280));}

/* k34178 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_34180(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  make-rule");
f_19983(((C_word*)t0)[3],lf[828],C_fix(33280),((C_word*)t0)[2],t1,C_SCHEME_FALSE);}

/* k34170 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_34172(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[761]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[355],"*rules*"),C_fix(33280),t1);}

/* k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_22407(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word ab[78],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22407,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22913,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34000,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(16144),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(14864),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[388],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(29952),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,lf[402],t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(33024),C_SCHEME_END_OF_LIST);
t10=(C_word)C_a_i_cons(&a,2,lf[101],t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(33280),C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,lf[101],t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t14=(C_word)C_a_i_cons(&a,2,lf[97],t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,C_fix(22016),t15);
t17=(C_word)C_a_i_cons(&a,2,lf[402],t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(18193),C_SCHEME_END_OF_LIST);
t19=(C_word)C_a_i_cons(&a,2,t17,t18);
t20=(C_word)C_a_i_cons(&a,2,t14,t19);
t21=(C_word)C_a_i_cons(&a,2,t12,t20);
t22=(C_word)C_a_i_cons(&a,2,t10,t21);
t23=(C_word)C_a_i_cons(&a,2,t8,t22);
t24=(C_word)C_a_i_cons(&a,2,t6,t23);
t25=(C_word)C_a_i_cons(&a,2,lf[387],t24);
t26=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34006,a[2]=((C_word)li561),tmp=(C_word)a,a+=3,tmp);
t27=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34052,a[2]=((C_word)li566),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  make-rule");
f_19983(t3,lf[827],C_fix(32512),t25,t26,t27);}

/* a34051 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_34052(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[7],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_34052,5,t0,t1,t2,t3,t4);}
t5=t3;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22413,a[2]=t4,a[3]=t6,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  parse-unit-parsed");
f_20323(t7,t2);}

/* k22411 in a34051 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_22413(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22413,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_END_OF_LIST;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_END_OF_LIST;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_END_OF_LIST;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_END_OF_LIST;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_END_OF_LIST;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_22431,a[2]=t11,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t7,a[6]=((C_word*)t0)[4],a[7]=t15,a[8]=t13,a[9]=t5,a[10]=t9,a[11]=t3,tmp=(C_word)a,a+=12,tmp);
t17=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22872,a[2]=t3,a[3]=((C_word*)t0)[2],a[4]=t5,a[5]=t16,a[6]=((C_word*)t0)[3],tmp=(C_word)a,a+=7,tmp);
t18=(C_word)C_i_car(((C_word*)t3)[1]);
C_trace("ChickenBridge.scm: 379  token-unit-type=?");
f_20369(t17,t18,C_fix(14864));}

/* k22870 in k22411 in a34051 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_22872(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22872,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22876,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  add-emit-info");
f_20413(t2,lf[824],C_SCHEME_TRUE,((C_word*)((C_word*)t0)[6])[1]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22879,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22906,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  get-emit-info");
f_20401(t3,lf[813],((C_word*)((C_word*)t0)[6])[1]);}}

/* k22904 in k22870 in k22411 in a34051 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_22906(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22906,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_22879(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22894,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22898,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
C_trace("ChickenBridge.scm: 379  parse-unit-position");
f_20341(t3,t4);}}

/* k22896 in k22904 in k22870 in k22411 in a34051 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_22898(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  make-parse-error");
f_20233(((C_word*)t0)[2],lf[826],t1);}

/* k22892 in k22904 in k22870 in k22411 in a34051 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_22894(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  errf");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k22877 in k22870 in k22411 in a34051 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_22879(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22879,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22883,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  add-emit-info");
f_20413(t2,lf[825],C_SCHEME_TRUE,((C_word*)((C_word*)t0)[4])[1]);}

/* k22881 in k22877 in k22870 in k22411 in a34051 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_22883(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_TRUE);
t4=((C_word*)t0)[2];
f_22431(t4,t3);}

/* k22874 in k22870 in k22411 in a34051 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_22876(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_22431(t3,t2);}

/* k22429 in k22411 in a34051 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_22431(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22431,NULL,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[11])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t4=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_22438,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[11],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_car(((C_word*)((C_word*)t0)[11])[1]))){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22861,a[2]=t4,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22865,a[2]=((C_word*)t0)[5],a[3]=t5,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_car(((C_word*)((C_word*)t0)[11])[1]);
C_trace("ChickenBridge.scm: 379  emit");
f_20441(t6,t7,((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]);}
else{
t5=t4;
f_22438(t5,C_SCHEME_UNDEFINED);}}

/* k22863 in k22429 in k22411 in a34051 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_22865(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  append");
t2=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k22859 in k22429 in k22411 in a34051 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_22861(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_22438(t3,t2);}

/* k22436 in k22429 in k22411 in a34051 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_22438(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22438,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_22441,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
t3=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22736,a[2]=((C_word*)t0)[11],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[6],a[6]=t5,a[7]=((C_word)li565),tmp=(C_word)a,a+=8,tmp));
t7=((C_word*)t5)[1];
f_22736(t7,t2,t3);}

/* do3536 in k22436 in k22429 in k22411 in a34051 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_22736(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22736,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22746,a[2]=t1,a[3]=((C_word*)t0)[6],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22757,a[2]=t3,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 379  parse-unit-parsed");
f_20323(t4,t5);}}

/* k22755 in do3536 in k22436 in k22429 in k22411 in a34051 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_22757(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22757,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22759,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t3,a[6]=((C_word*)t0)[6],a[7]=((C_word)li564),tmp=(C_word)a,a+=8,tmp));
t5=((C_word*)t3)[1];
f_22759(t5,((C_word*)t0)[2],t1);}

/* do3539 in k22755 in do3536 in k22436 in k22429 in k22411 in a34051 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_22759(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22759,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(C_word)C_i_car(t2);
t4=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_22773,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t3,a[5]=((C_word*)t0)[4],a[6]=t1,a[7]=((C_word*)t0)[5],a[8]=t2,a[9]=((C_word*)t0)[6],tmp=(C_word)a,a+=10,tmp);
t5=(C_word)C_i_car(t3);
t6=(C_word)C_i_cadr(t3);
t7=(C_word)C_a_i_list(&a,2,t5,t6);
t8=(C_word)C_a_i_list(&a,1,t7);
C_trace("ChickenBridge.scm: 379  append");
t9=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t4,((C_word*)((C_word*)t0)[6])[1],t8);}}

/* k22771 in do3539 in k22755 in do3536 in k22436 in k22429 in k22411 in a34051 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_22773(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22773,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,t1);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22776,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_caddr(((C_word*)t0)[4]))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22826,a[2]=t3,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_caddr(((C_word*)t0)[4]);
t6=(C_word)C_a_i_list(&a,1,t5);
C_trace("ChickenBridge.scm: 379  append");
t7=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t4,((C_word*)((C_word*)t0)[2])[1],t6);}
else{
t4=t3;
f_22776(t4,C_SCHEME_UNDEFINED);}}

/* k22824 in k22771 in do3539 in k22755 in do3536 in k22436 in k22429 in k22411 in a34051 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_22826(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_22776(t3,t2);}

/* k22774 in k22771 in do3539 in k22755 in do3536 in k22436 in k22429 in k22411 in a34051 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_22776(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22776,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22779,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_cadddr(((C_word*)t0)[3]))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22811,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_i_cadddr(((C_word*)t0)[3]);
t5=(C_word)C_a_i_list(&a,1,t4);
C_trace("ChickenBridge.scm: 379  append");
t6=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t3,((C_word*)((C_word*)t0)[2])[1],t5);}
else{
t3=t2;
f_22779(t3,C_SCHEME_UNDEFINED);}}

/* k22809 in k22774 in k22771 in do3539 in k22755 in do3536 in k22436 in k22429 in k22411 in a34051 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_22811(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_22779(t3,t2);}

/* k22777 in k22774 in k22771 in do3539 in k22755 in do3536 in k22436 in k22429 in k22411 in a34051 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_22779(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22779,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22782,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22792,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  fifth");
t4=C_retrieve(lf[47]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k22790 in k22777 in k22774 in k22771 in do3539 in k22755 in do3536 in k22436 in k22429 in k22411 in a34051 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_22792(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22792,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22796,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22804,a[2]=((C_word*)t0)[4],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  fifth");
t4=C_retrieve(lf[47]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_22782(t2,C_SCHEME_UNDEFINED);}}

/* k22802 in k22790 in k22777 in k22774 in k22771 in do3539 in k22755 in do3536 in k22436 in k22429 in k22411 in a34051 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_22804(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22804,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
C_trace("ChickenBridge.scm: 379  append");
t3=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t2);}

/* k22794 in k22790 in k22777 in k22774 in k22771 in do3539 in k22755 in do3536 in k22436 in k22429 in k22411 in a34051 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_22796(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_22782(t3,t2);}

/* k22780 in k22777 in k22774 in k22771 in do3539 in k22755 in do3536 in k22436 in k22429 in k22411 in a34051 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_22782(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_22759(t3,((C_word*)t0)[2],t2);}

/* k22744 in do3536 in k22436 in k22429 in k22411 in a34051 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_22746(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_22736(t3,((C_word*)t0)[2],t2);}

/* k22439 in k22436 in k22429 in k22411 in a34051 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_22441(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22441,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_22444,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
t3=(C_word)C_i_cadddr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22700,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t5,a[5]=((C_word*)t0)[11],a[6]=((C_word)li563),tmp=(C_word)a,a+=7,tmp));
t7=((C_word*)t5)[1];
f_22700(t7,t2,t3);}

/* do3550 in k22439 in k22436 in k22429 in k22411 in a34051 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_22700(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22700,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22711,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22726,a[2]=((C_word*)t0)[5],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 379  emit");
f_20441(t4,t5,((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2]);}}

/* k22724 in do3550 in k22439 in k22436 in k22429 in k22411 in a34051 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_22726(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22726,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
C_trace("ChickenBridge.scm: 379  append");
t3=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t2);}

/* k22709 in do3550 in k22439 in k22436 in k22429 in k22411 in a34051 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_22711(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_22700(t4,((C_word*)t0)[2],t3);}

/* k22442 in k22439 in k22436 in k22429 in k22411 in a34051 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_22444(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22444,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_22448,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 379  append");
t3=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)((C_word*)t0)[11])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k22446 in k22442 in k22439 in k22436 in k22429 in k22411 in a34051 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_22448(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22448,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[10])+1,t1);
t3=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_22451,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
t4=(C_word)C_i_caddr(((C_word*)((C_word*)t0)[2])[1]);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22644,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t6,a[5]=((C_word*)t0)[8],a[6]=((C_word)li562),tmp=(C_word)a,a+=7,tmp));
t8=((C_word*)t6)[1];
f_22644(t8,t3,t4);}

/* do3555 in k22446 in k22442 in k22439 in k22436 in k22429 in k22411 in a34051 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_22644(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22644,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22654,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=t2,a[7]=((C_word*)t0)[5],tmp=(C_word)a,a+=8,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 379  parse-unit-parsed");
f_20323(t3,t4);}}

/* k22652 in do3555 in k22446 in k22442 in k22439 in k22436 in k22429 in k22411 in a34051 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_22654(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22654,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22657,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cadr(t1);
C_trace("ChickenBridge.scm: 379  emit");
f_20441(t2,t3,((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2]);}

/* k22655 in k22652 in do3555 in k22446 in k22442 in k22439 in k22436 in k22429 in k22411 in a34051 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_22657(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22657,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22660,a[2]=t3,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22678,a[2]=t4,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_car(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 379  token-unit-type=?");
f_20369(t5,t6,C_fix(20224));}

/* k22676 in k22655 in k22652 in do3555 in k22446 in k22442 in k22439 in k22436 in k22429 in k22411 in a34051 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_22678(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22678,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,2,lf[389],((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_22660(t4,t3);}
else{
t2=((C_word*)t0)[2];
f_22660(t2,C_SCHEME_UNDEFINED);}}

/* k22658 in k22655 in k22652 in do3555 in k22446 in k22442 in k22439 in k22436 in k22429 in k22411 in a34051 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_22660(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22660,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22664,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[2])[1]);
C_trace("ChickenBridge.scm: 379  append");
t4=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,((C_word*)((C_word*)t0)[6])[1],t3);}

/* k22662 in k22658 in k22655 in k22652 in do3555 in k22446 in k22442 in k22439 in k22436 in k22429 in k22411 in a34051 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_22664(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_22644(t4,((C_word*)t0)[2],t3);}

/* k22449 in k22446 in k22442 in k22439 in k22436 in k22429 in k22411 in a34051 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_22451(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22451,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_22454,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[9])[1]))){
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[9])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[9])+1,t4);
t6=t2;
f_22454(t6,t5);}
else{
t4=(C_word)C_a_i_cons(&a,2,lf[388],((C_word*)((C_word*)t0)[9])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[9])+1,t4);
t6=t2;
f_22454(t6,t5);}}
else{
t3=C_set_block_item(((C_word*)t0)[9],0,C_SCHEME_FALSE);
t4=t2;
f_22454(t4,t3);}}

/* k22452 in k22449 in k22446 in k22442 in k22439 in k22436 in k22429 in k22411 in a34051 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_22454(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22454,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22457,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22607,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t2,a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  fifth");
t4=C_retrieve(lf[47]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k22605 in k22452 in k22449 in k22446 in k22442 in k22439 in k22436 in k22429 in k22411 in a34051 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_22607(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22607,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22611,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22615,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  fifth");
t4=C_retrieve(lf[47]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_FALSE);
t3=((C_word*)t0)[5];
f_22457(t3,t2);}}

/* k22613 in k22605 in k22452 in k22449 in k22446 in k22442 in k22439 in k22436 in k22429 in k22411 in a34051 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_22615(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  emit");
f_20441(((C_word*)t0)[4],t1,((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2]);}

/* k22609 in k22605 in k22452 in k22449 in k22446 in k22442 in k22439 in k22436 in k22429 in k22411 in a34051 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_22611(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_22457(t3,t2);}

/* k22455 in k22452 in k22449 in k22446 in k22442 in k22439 in k22436 in k22429 in k22411 in a34051 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_22457(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[31],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22457,NULL,2,t0,t1);}
t2=((C_word*)((C_word*)t0)[7])[1];
if(C_truep(t2)){
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22485,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[823]);}
else{
t3=(C_word)C_a_i_list(&a,2,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1]);
t4=(C_word)C_a_i_cons(&a,2,t3,((C_word*)((C_word*)t0)[2])[1]);
t5=(C_word)C_a_i_cons(&a,2,C_SCHEME_END_OF_LIST,t4);
t6=(C_word)C_a_i_cons(&a,2,lf[641],t5);
t7=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_a_i_list(&a,3,lf[2],((C_word*)((C_word*)t0)[3])[1],t6));}}

/* k22483 in k22455 in k22452 in k22449 in k22446 in k22442 in k22439 in k22436 in k22429 in k22411 in a34051 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_22485(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22485,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22488,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 379  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[822]);}

/* k22486 in k22483 in k22455 in k22452 in k22449 in k22446 in k22442 in k22439 in k22436 in k22429 in k22411 in a34051 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_22488(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22488,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_22491,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 379  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[821]);}

/* k22489 in k22486 in k22483 in k22455 in k22452 in k22449 in k22446 in k22442 in k22439 in k22436 in k22429 in k22411 in a34051 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_22491(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22491,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_22494,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 379  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[820]);}

/* k22492 in k22489 in k22486 in k22483 in k22455 in k22452 in k22449 in k22446 in k22442 in k22439 in k22436 in k22429 in k22411 in a34051 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_22494(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22494,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_22497,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 379  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[819]);}

/* k22495 in k22492 in k22489 in k22486 in k22483 in k22455 in k22452 in k22449 in k22446 in k22442 in k22439 in k22436 in k22429 in k22411 in a34051 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_22497(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word ab[120],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22497,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)t0)[10]);
t3=(C_word)C_a_i_list(&a,2,((C_word*)t0)[9],C_fix(0));
t4=(C_word)C_a_i_list(&a,3,lf[748],C_SCHEME_END_OF_LIST,((C_word*)t0)[10]);
t5=(C_word)C_a_i_list(&a,2,lf[749],t4);
t6=(C_word)C_a_i_list(&a,1,((C_word*)t0)[8]);
t7=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[9],((C_word*)t0)[8]);
t8=(C_word)C_a_i_list(&a,3,lf[748],t6,t7);
t9=(C_word)C_a_i_list(&a,2,lf[751],t8);
t10=(C_word)C_a_i_list(&a,3,t3,t5,t9);
t11=(C_word)C_a_i_list(&a,1,t1);
t12=(C_word)C_a_i_list(&a,1,((C_word*)t0)[7]);
t13=(C_word)C_a_i_list(&a,1,lf[752]);
t14=(C_word)C_a_i_list(&a,4,lf[753],((C_word*)t0)[7],t13,lf[817]);
t15=(C_word)C_a_i_list(&a,2,t1,C_fix(-2));
t16=(C_word)C_a_i_list(&a,4,lf[748],t12,t14,t15);
t17=(C_word)C_a_i_list(&a,3,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1],C_fix(-1));
t18=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_22556,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t2,a[5]=t10,a[6]=t11,a[7]=t16,a[8]=t17,tmp=(C_word)a,a+=9,tmp);
t19=(C_word)C_a_i_list(&a,1,((C_word*)t0)[9]);
C_trace("##sys#append");
t20=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t20+1)))(4,t20,t18,((C_word*)((C_word*)t0)[2])[1],t19);}

/* k22554 in k22495 in k22492 in k22489 in k22486 in k22483 in k22455 in k22452 in k22449 in k22446 in k22442 in k22439 in k22436 in k22429 in k22411 in a34051 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_22556(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[72],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22556,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[16],t1);
t3=(C_word)C_a_i_list(&a,3,lf[818],((C_word*)t0)[8],t2);
t4=(C_word)C_a_i_list(&a,3,lf[748],C_SCHEME_END_OF_LIST,t3);
t5=(C_word)C_a_i_list(&a,3,lf[701],((C_word*)t0)[7],t4);
t6=(C_word)C_a_i_list(&a,3,lf[748],((C_word*)t0)[6],t5);
t7=(C_word)C_a_i_list(&a,2,lf[702],t6);
t8=(C_word)C_a_i_list(&a,3,lf[2],((C_word*)t0)[5],t7);
t9=(C_word)C_a_i_list(&a,3,lf[748],((C_word*)t0)[4],t8);
t10=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t10+1)))(2,t10,(C_word)C_a_i_list(&a,3,lf[2],((C_word*)((C_word*)t0)[2])[1],t9));}

/* a34005 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_34006(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[10],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_34006,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=t5;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_caddr(t2);
t9=(C_word)C_i_cadddr(t2);
t10=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34022,a[2]=t2,a[3]=t1,a[4]=t9,a[5]=t8,a[6]=t7,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 379  fifth");
t11=C_retrieve(lf[47]);
((C_proc3)C_retrieve_proc(t11))(3,t11,t10,t2);}

/* k34020 in a34005 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_34022(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34022,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34025,a[2]=((C_word*)t0)[3],a[3]=t1,a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 379  sixth");
t3=C_retrieve(lf[48]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k34023 in k34020 in a34005 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_34025(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34025,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_34028,a[2]=((C_word*)t0)[2],a[3]=t3,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[6])+1,t5);
t7=t4;
f_34028(t7,t6);}
else{
t5=t4;
f_34028(t5,C_SCHEME_UNDEFINED);}}

/* k34026 in k34023 in k34020 in a34005 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_34028(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_34028,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_34031,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
t3=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=t2;
f_34031(t5,t4);}
else{
t3=t2;
f_34031(t3,C_SCHEME_UNDEFINED);}}

/* k34029 in k34026 in k34023 in k34020 in a34005 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_34031(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_34031,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,6,((C_word*)t0)[8],((C_word*)((C_word*)t0)[7])[1],((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34042,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  parse-unit-position");
f_20341(t3,((C_word*)t0)[8]);}

/* k34040 in k34029 in k34026 in k34023 in k34020 in a34005 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_34042(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  make-parse-unit");
f_20284(((C_word*)t0)[3],C_fix(32512),((C_word*)t0)[2],t1);}

/* k33998 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_34000(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[761]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[355],"*rules*"),C_fix(32512),t1);}

/* k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_22913(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word ab[63],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22913,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22916,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33855,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(512),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[387],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(25088),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(256),t7);
t9=(C_word)C_a_i_cons(&a,2,lf[101],t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t11=(C_word)C_a_i_cons(&a,2,t9,t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(25088),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(512),t12);
t14=(C_word)C_a_i_cons(&a,2,lf[387],t13);
t15=(C_word)C_a_i_cons(&a,2,t14,C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,t6,t15);
t17=(C_word)C_a_i_cons(&a,2,lf[388],t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t19=(C_word)C_a_i_cons(&a,2,t17,t18);
t20=(C_word)C_a_i_cons(&a,2,C_fix(25088),t19);
t21=(C_word)C_a_i_cons(&a,2,lf[387],t20);
t22=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33861,a[2]=((C_word)li560),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  make-rule");
f_19983(t3,lf[816],C_fix(37632),t21,t22,C_SCHEME_FALSE);}

/* a33860 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_33861(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[13],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_33861,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=t5;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_caddr(t2);
t9=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_33874,a[2]=t1,a[3]=t8,a[4]=t7,a[5]=t4,tmp=(C_word)a,a+=6,tmp);
t10=(C_word)C_i_length(((C_word*)t7)[1]);
if(C_truep((C_word)C_i_nequalp(t10,C_fix(2)))){
t11=C_set_block_item(t7,0,C_SCHEME_END_OF_LIST);
t12=t9;
f_33874(t12,t11);}
else{
t11=(C_word)C_i_cadr(((C_word*)t7)[1]);
t12=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33900,a[2]=t9,a[3]=t7,a[4]=t11,tmp=(C_word)a,a+=5,tmp);
t13=(C_word)C_i_caddr(((C_word*)t7)[1]);
C_trace("ChickenBridge.scm: 379  remove-token-type");
f_21619(t12,t13,C_fix(256));}}

/* k33898 in a33860 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_33900(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33900,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_33874(t4,t3);}

/* k33872 in a33860 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_33874(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_33874,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 379  make-parse-unit");
f_20284(((C_word*)t0)[2],C_fix(37632),t2,C_SCHEME_FALSE);}

/* k33853 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_33855(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[761]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[355],"*rules*"),C_fix(37632),t1);}

/* k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_22916(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word ab[72],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22916,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22919,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33398,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(30208),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[101],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(30208),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(24576),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[387],t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(37632),C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,C_fix(24064),t11);
t13=(C_word)C_a_i_cons(&a,2,lf[387],t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(37632),C_SCHEME_END_OF_LIST);
t15=(C_word)C_a_i_cons(&a,2,C_fix(24320),t14);
t16=(C_word)C_a_i_cons(&a,2,lf[387],t15);
t17=(C_word)C_a_i_cons(&a,2,t16,C_SCHEME_END_OF_LIST);
t18=(C_word)C_a_i_cons(&a,2,t13,t17);
t19=(C_word)C_a_i_cons(&a,2,t10,t18);
t20=(C_word)C_a_i_cons(&a,2,lf[388],t19);
t21=(C_word)C_a_i_cons(&a,2,t20,C_SCHEME_END_OF_LIST);
t22=(C_word)C_a_i_cons(&a,2,C_fix(13824),t21);
t23=(C_word)C_a_i_cons(&a,2,lf[387],t22);
t24=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33404,a[2]=((C_word)li556),tmp=(C_word)a,a+=3,tmp);
t25=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33443,a[2]=((C_word)li559),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  make-rule");
f_19983(t3,lf[815],C_fix(36352),t23,t24,t25);}

/* a33442 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_33443(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_33443,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33447,a[2]=t4,a[3]=t5,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  parse-unit-parsed");
f_20323(t6,t2);}

/* k33445 in a33442 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_33447(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33447,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=(C_word)C_a_i_list(&a,1,lf[413]);
t4=t3;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33456,a[2]=t3,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t7=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_33459,a[2]=t2,a[3]=t3,a[4]=t6,a[5]=((C_word*)t0)[2],a[6]=((C_word*)t0)[3],a[7]=t5,a[8]=t1,tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 379  token-unit-type=?");
f_20369(t7,t2,C_fix(24576));}

/* k33457 in k33445 in a33442 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_33459(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33459,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cdr(((C_word*)t0)[8]);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33468,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=t4,a[5]=((C_word*)t0)[7],a[6]=((C_word)li557),tmp=(C_word)a,a+=7,tmp));
t6=((C_word*)t4)[1];
f_33468(t6,((C_word*)t0)[4],t2);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33517,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[8]);
C_trace("ChickenBridge.scm: 379  parse-unit-parsed");
f_20323(t2,t3);}}

/* k33515 in k33457 in k33445 in a33442 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_33517(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33517,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33520,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,tmp=(C_word)a,a+=8,tmp);
t3=(C_word)C_i_car(t1);
C_trace("ChickenBridge.scm: 379  emit");
f_20441(t2,t3,((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]);}

/* k33518 in k33515 in k33457 in k33445 in a33442 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_33520(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33520,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_33523,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=t1,tmp=(C_word)a,a+=9,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[7]);
C_trace("ChickenBridge.scm: 379  emit");
f_20441(t2,t3,((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]);}

/* k33521 in k33518 in k33515 in k33457 in k33445 in a33442 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_33523(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33523,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_33735,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 379  append");
t3=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,t1,C_SCHEME_END_OF_LIST);}

/* k33733 in k33521 in k33518 in k33515 in k33457 in k33445 in a33442 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_33735(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33735,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[9],t1);
t3=(C_word)C_i_caddr(((C_word*)t0)[8]);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_33532,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t3,a[5]=t2,a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[5],a[9]=((C_word*)t0)[6],a[10]=((C_word*)t0)[7],a[11]=t7,a[12]=t5,tmp=(C_word)a,a+=13,tmp);
t9=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t9))){
t10=t8;
f_33532(t10,C_SCHEME_UNDEFINED);}
else{
t10=(C_word)C_i_length(t2);
t11=(C_word)C_a_i_minus(&a,2,t10,C_fix(2));
t12=(C_word)C_i_list_tail(t2,t11);
t13=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33673,a[2]=t12,a[3]=t8,tmp=(C_word)a,a+=4,tmp);
t14=(C_word)C_i_cadr(t12);
C_trace("ChickenBridge.scm: 379  symbol->string");
t15=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t15))(3,t15,t13,t14);}}

/* k33671 in k33733 in k33521 in k33518 in k33515 in k33457 in k33445 in a33442 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_33673(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33673,2,t0,t1);}
t2=(C_word)C_i_string_length(t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_33682,a[2]=t1,a[3]=t2,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_greaterp(t2,C_fix(3)))){
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33707,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_a_i_minus(&a,2,t2,C_fix(3));
C_trace("ChickenBridge.scm: 379  substring");
t6=*((C_word*)lf[428]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,t1,t5);}
else{
t4=t3;
f_33682(t4,C_SCHEME_FALSE);}}

/* k33705 in k33671 in k33733 in k33521 in k33518 in k33515 in k33457 in k33445 in a33442 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_33707(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_33682(t2,(C_word)C_i_string_equal_p(t1,lf[814]));}

/* k33680 in k33671 in k33733 in k33521 in k33518 in k33515 in k33457 in k33445 in a33442 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_33682(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_33682,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33689,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33693,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[3],C_fix(3));
C_trace("ChickenBridge.scm: 379  substring");
t5=*((C_word*)lf[428]+1);
((C_proc5)C_retrieve_proc(t5))(5,t5,t3,((C_word*)t0)[2],C_fix(0),t4);}
else{
t2=((C_word*)t0)[5];
f_33532(t2,C_SCHEME_UNDEFINED);}}

/* k33691 in k33680 in k33671 in k33733 in k33521 in k33518 in k33515 in k33457 in k33445 in a33442 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_33693(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  string->symbol");
t2=*((C_word*)lf[385]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k33687 in k33680 in k33671 in k33733 in k33521 in k33518 in k33515 in k33457 in k33445 in a33442 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_33689(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_33532(t2,(C_word)C_i_set_cdr(((C_word*)t0)[2],t1));}

/* k33530 in k33733 in k33521 in k33518 in k33515 in k33457 in k33445 in a33442 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_33532(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_33532,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33535,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[11],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_33610,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t2,a[6]=((C_word*)t0)[12],a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[6],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 379  token-unit-type=?");
f_20369(t3,((C_word*)t0)[2],C_fix(24064));}

/* k33608 in k33530 in k33733 in k33521 in k33518 in k33515 in k33457 in k33445 in a33442 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_33610(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33610,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_33614,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 379  add-emit-info");
f_20413(t2,lf[811],C_SCHEME_TRUE,((C_word*)((C_word*)t0)[9])[1]);}
else{
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_33651,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 379  token-unit-type=?");
f_20369(t2,((C_word*)t0)[2],C_fix(24320));}}

/* k33649 in k33608 in k33530 in k33733 in k33521 in k33518 in k33515 in k33457 in k33445 in a33442 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_33651(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33651,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_33655,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 379  add-emit-info");
f_20413(t2,lf[813],C_SCHEME_TRUE,((C_word*)((C_word*)t0)[8])[1]);}
else{
t2=((C_word*)t0)[4];
f_33535(t2,C_SCHEME_UNDEFINED);}}

/* k33653 in k33649 in k33608 in k33530 in k33733 in k33521 in k33518 in k33515 in k33457 in k33445 in a33442 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_33655(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33655,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_33659,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  emit");
f_20441(t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[8])[1],((C_word*)t0)[2]);}

/* k33657 in k33653 in k33649 in k33608 in k33530 in k33733 in k33521 in k33518 in k33515 in k33457 in k33445 in a33442 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_33659(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33659,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_a_i_list(&a,3,lf[744],((C_word*)t0)[4],((C_word*)((C_word*)t0)[5])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[5])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[812]);
t6=((C_word*)t0)[2];
f_33535(t6,t5);}

/* k33612 in k33608 in k33530 in k33733 in k33521 in k33518 in k33515 in k33457 in k33445 in a33442 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_33614(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33614,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33618,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  emit");
f_20441(t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[8])[1],((C_word*)t0)[2]);}

/* k33616 in k33612 in k33608 in k33530 in k33733 in k33521 in k33518 in k33515 in k33457 in k33445 in a33442 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_33618(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33618,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_33621,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33645,a[2]=t3,a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  get-emit-info");
f_20401(t4,lf[811],((C_word*)((C_word*)t0)[2])[1]);}

/* k33643 in k33616 in k33612 in k33608 in k33530 in k33733 in k33521 in k33518 in k33515 in k33457 in k33445 in a33442 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_33645(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33645,2,t0,t1);}
t2=(C_word)C_eqp(lf[810],t1);
if(C_truep(t2)){
t3=(C_word)C_a_i_list(&a,1,lf[612]);
t4=(C_word)C_a_i_list(&a,3,lf[748],t3,((C_word*)((C_word*)t0)[3])[1]);
t5=(C_word)C_a_i_list(&a,2,lf[702],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33621(t7,t6);}
else{
t3=((C_word*)t0)[2];
f_33621(t3,C_SCHEME_UNDEFINED);}}

/* k33619 in k33616 in k33612 in k33608 in k33530 in k33733 in k33521 in k33518 in k33515 in k33457 in k33445 in a33442 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_33621(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_33621,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,lf[744],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[809]);
t5=((C_word*)t0)[2];
f_33535(t5,t4);}

/* k33533 in k33530 in k33733 in k33521 in k33518 in k33515 in k33457 in k33445 in a33442 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_33535(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_33535,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_33538,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33549,a[2]=((C_word*)t0)[3],a[3]=t2,a[4]=((C_word*)t0)[7],tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33607,a[2]=((C_word*)t0)[7],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  symbol->string");
t5=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,((C_word*)t0)[2]);}

/* k33605 in k33533 in k33530 in k33733 in k33521 in k33518 in k33515 in k33457 in k33445 in a33442 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_33607(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  string-append");
t2=*((C_word*)lf[164]+1);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1,lf[808]);}

/* k33547 in k33533 in k33530 in k33733 in k33521 in k33518 in k33515 in k33457 in k33445 in a33442 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_33549(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33549,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33551,a[2]=t3,a[3]=((C_word*)t0)[4],a[4]=((C_word)li558),tmp=(C_word)a,a+=5,tmp));
t5=((C_word*)t3)[1];
f_33551(t5,((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* do3637 in k33547 in k33533 in k33530 in k33733 in k33521 in k33518 in k33515 in k33457 in k33445 in a33442 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_33551(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_33551,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t3))){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33566,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  string-append");
t6=*((C_word*)lf[164]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,((C_word*)t4)[1],lf[806]);}
else{
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_33570,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t3,a[5]=t4,tmp=(C_word)a,a+=6,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33599,a[2]=t4,a[3]=t5,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_car(t3);
C_trace("ChickenBridge.scm: 379  symbol->string");
t8=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t8))(3,t8,t6,t7);}}

/* k33597 in do3637 in k33547 in k33533 in k33530 in k33733 in k33521 in k33518 in k33515 in k33457 in k33445 in a33442 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_33599(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  string-append");
t2=*((C_word*)lf[164]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k33568 in do3637 in k33547 in k33533 in k33530 in k33733 in k33521 in k33518 in k33515 in k33457 in k33445 in a33442 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_33570(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33570,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_33573,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_i_cdr(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_nullp(t4))){
t5=t3;
f_33573(t5,C_SCHEME_UNDEFINED);}
else{
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33587,a[2]=t3,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  string-append");
t6=*((C_word*)lf[164]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,((C_word*)((C_word*)t0)[5])[1],lf[807]);}}

/* k33585 in k33568 in do3637 in k33547 in k33533 in k33530 in k33733 in k33521 in k33518 in k33515 in k33457 in k33445 in a33442 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_33587(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_33573(t3,t2);}

/* k33571 in k33568 in do3637 in k33547 in k33533 in k33530 in k33733 in k33521 in k33518 in k33515 in k33457 in k33445 in a33442 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_33573(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
t3=((C_word*)((C_word*)t0)[4])[1];
f_33551(t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t2);}

/* k33564 in do3637 in k33547 in k33533 in k33530 in k33733 in k33521 in k33518 in k33515 in k33457 in k33445 in a33442 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_33566(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33566,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,lf[437],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t3);}

/* k33536 in k33533 in k33530 in k33733 in k33521 in k33518 in k33515 in k33457 in k33445 in a33442 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_33538(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33538,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t3=((C_word*)t0)[3];
f_33456(2,t3,(C_word)C_i_set_cdr(((C_word*)t0)[2],t2));}

/* do3611 in k33457 in k33445 in a33442 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_33468(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_33468,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_33478,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 379  emit");
f_20441(t3,t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2]);}}

/* k33476 in do3611 in k33457 in k33445 in a33442 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_33478(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33478,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33484,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t2,a[7]=t1,tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 379  sprintf");
t4=C_retrieve(lf[31]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,lf[805],t2);}

/* k33482 in k33476 in do3611 in k33457 in k33445 in a33442 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_33484(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33484,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[744],((C_word*)t0)[7]);
t3=(C_word)C_a_i_list(&a,3,lf[436],t1,((C_word*)t0)[6]);
t4=(C_word)C_a_i_list(&a,2,t2,t3);
t5=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[5])[1],t4);
t6=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[5])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[5])+1,t6);
t8=(C_word)C_i_cdr(((C_word*)t0)[4]);
t9=((C_word*)((C_word*)t0)[3])[1];
f_33468(t9,((C_word*)t0)[2],t8);}

/* k33454 in k33445 in a33442 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_33456(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* a33403 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_33404(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[11],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_33404,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(C_word)C_i_cadr(((C_word*)t4)[1]);
t6=C_set_block_item(t4,0,t5);
t7=(C_word)C_i_car(((C_word*)t4)[1]);
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33415,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33421,a[2]=t8,a[3]=t7,a[4]=t4,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  token-unit-type=?");
f_20369(t9,t7,C_fix(24576));}

/* k33419 in a33403 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_33421(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33421,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_33437,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_i_caddr(((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 379  remove-token-type");
f_21619(t3,t4,C_fix(256));}
else{
t2=((C_word*)t0)[2];
f_33415(t2,C_SCHEME_UNDEFINED);}}

/* k33435 in k33419 in a33403 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_33437(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33437,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[5],t1);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_33415(t5,t4);}

/* k33413 in a33403 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_33415(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  make-parse-unit");
f_20284(((C_word*)t0)[3],C_fix(36352),((C_word*)((C_word*)t0)[2])[1],C_SCHEME_FALSE);}

/* k33396 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_33398(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[761]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[355],"*rules*"),C_fix(36352),t1);}

/* k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_22919(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[57],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22919,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22922,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33322,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(33792),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(35584),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(35072),t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(36096),t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(34816),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(35328),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(31488),t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(31744),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(32512),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(32256),t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(30464),t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(34304),t14);
t16=(C_word)C_a_i_cons(&a,2,C_fix(34560),t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(33536),t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(32000),t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(36352),t18);
t20=(C_word)C_a_i_cons(&a,2,lf[388],t19);
C_trace("ChickenBridge.scm: 379  make-rule");
f_19983(t3,lf[804],C_fix(36608),t20,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k33320 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_33322(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[761]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[355],"*rules*"),C_fix(36608),t1);}

/* k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_22922(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22922,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22925,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33278,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,lf[97],t4);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33284,a[2]=((C_word)li554),tmp=(C_word)a,a+=3,tmp);
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33298,a[2]=((C_word)li555),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  make-rule");
f_19983(t3,lf[803],C_fix(36864),t5,t6,t7);}

/* a33297 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_33298(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_33298,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33306,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33310,a[2]=t4,a[3]=t3,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  parse-unit-parsed");
f_20323(t6,t2);}

/* k33308 in a33297 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_33310(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  emit");
f_20441(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k33304 in a33297 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_33306(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33306,2,t0,t1);}
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,lf[413],t1));}

/* a33283 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_33284(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_33284,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33292,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 379  parse-unit-position");
f_20341(t4,t5);}

/* k33290 in a33283 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_33292(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  make-parse-unit");
f_20284(((C_word*)t0)[3],C_fix(36864),((C_word*)t0)[2],t1);}

/* k33276 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_33278(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  hash-table-set!");
t2=C_retrieve(lf[761]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[355],"*rules*"),C_fix(36864),t1);}

/* k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_22925(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22925,2,t0,t1);}
t2=lf[421]=C_SCHEME_FALSE;;
t3=lf[422]=C_SCHEME_FALSE;;
t4=lf[423]=C_SCHEME_FALSE;;
t5=C_set_block_item(lf[424],0,C_SCHEME_FALSE);
t6=C_mutate((C_word*)lf[425]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22932,a[2]=((C_word)li350),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate((C_word*)lf[436]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23109,a[2]=((C_word)li354),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate((C_word*)lf[446]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23262,a[2]=((C_word)li355),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate((C_word*)lf[447]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23271,a[2]=((C_word)li356),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate((C_word*)lf[455]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23318,a[2]=((C_word)li357),tmp=(C_word)a,a+=3,tmp));
t11=C_mutate((C_word*)lf[457]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23324,a[2]=((C_word)li358),tmp=(C_word)a,a+=3,tmp));
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23343,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t13=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33270,a[2]=((C_word)li553),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  ##sys#register-macro-2");
t14=C_retrieve(lf[760]);
((C_proc4)C_retrieve_proc(t14))(4,t14,t12,lf[801],t13);}

/* a33269 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_33270(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_33270,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26696,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[802]);}

/* k26694 in a33269 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_26696(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26696,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26699,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  parse-iteration");
f_26678(t2,lf[801],((C_word*)t0)[2],C_retrieve2(lf[650],"*loop-operators*"));}

/* k26697 in k26694 in a33269 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_26699(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26699,2,t0,t1);}
t2=C_SCHEME_END_OF_LIST;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_assoc(lf[612],C_retrieve2(lf[650],"*loop-operators*"));
t7=(C_word)C_i_cadddr(t6);
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26706,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t3,a[6]=t5,tmp=(C_word)a,a+=7,tmp);
t9=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26851,a[2]=t8,a[3]=t7,tmp=(C_word)a,a+=4,tmp);
t10=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26865,a[2]=t1,a[3]=t9,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  loop-returning");
t11=C_retrieve2(lf[468],"loop-returning");
f_23450(3,t11,t10,t1);}

/* k26863 in k26697 in k26694 in a33269 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_26865(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26865,2,t0,t1);}
if(C_truep((C_word)C_i_nullp(t1))){
t2=((C_word*)t0)[3];
f_26851(t2,C_SCHEME_FALSE);}
else{
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26861,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  loop-returning");
t3=C_retrieve2(lf[468],"loop-returning");
f_23450(3,t3,t2,((C_word*)t0)[2]);}}

/* k26859 in k26863 in k26697 in k26694 in a33269 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_26861(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_26851(t2,(C_word)C_i_car(t1));}

/* k26849 in k26697 in k26694 in a33269 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_26851(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  returnfn");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k26704 in k26697 in k26694 in a33269 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_26706(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26706,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26710,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 380  loop-end-tests");
t4=C_retrieve2(lf[463],"loop-end-tests");
f_23402(3,t4,t3,((C_word*)t0)[2]);}

/* k26708 in k26704 in k26697 in k26694 in a33269 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_26710(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26710,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26713,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(t1))){
t3=t2;
f_26713(t3,C_SCHEME_END_OF_LIST);}
else{
t3=(C_word)C_i_cdr(t1);
t4=(C_word)C_i_nullp(t3);
t5=(C_truep(t4)?(C_word)C_i_car(t1):(C_word)C_a_i_cons(&a,2,lf[388],t1));
t6=(C_word)C_a_i_list(&a,4,lf[20],t5,lf[800],C_SCHEME_FALSE);
t7=t2;
f_26713(t7,(C_word)C_a_i_list(&a,1,t6));}}

/* k26711 in k26708 in k26704 in k26697 in k26694 in a33269 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_26713(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26713,NULL,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26724,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 380  loop-bindings");
t4=C_retrieve2(lf[460],"loop-bindings");
f_23366(3,t4,t3,((C_word*)t0)[2]);}

/* k26722 in k26711 in k26708 in k26704 in k26697 in k26694 in a33269 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_26724(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26724,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26728,a[2]=((C_word*)t0)[6],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26732,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t2,a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 380  loop-initially");
t4=C_retrieve2(lf[462],"loop-initially");
f_23390(3,t4,t3,((C_word*)t0)[3]);}

/* k26730 in k26722 in k26711 in k26708 in k26704 in k26697 in k26694 in a33269 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_26732(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26732,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,lf[612]);
t3=(C_word)C_a_i_list(&a,1,lf[794]);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_26796,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t1,a[5]=((C_word*)t0)[5],a[6]=t2,a[7]=t3,a[8]=((C_word*)t0)[6],tmp=(C_word)a,a+=9,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26800,a[2]=((C_word*)t0)[2],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26804,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[6],a[4]=t5,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  loop-looping");
t7=C_retrieve2(lf[464],"loop-looping");
f_23414(3,t7,t6,((C_word*)t0)[3]);}

/* k26802 in k26730 in k26722 in k26711 in k26708 in k26704 in k26697 in k26694 in a33269 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_26804(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26804,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26808,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26812,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  loop-stepping");
t4=C_retrieve2(lf[466],"loop-stepping");
f_23426(3,t4,t3,((C_word*)t0)[2]);}

/* k26810 in k26802 in k26730 in k26722 in k26711 in k26708 in k26704 in k26697 in k26694 in a33269 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_26812(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26812,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)t0)[3]);
t3=(C_word)C_a_i_list(&a,1,t2);
C_trace("ChickenBridge.scm: 380  ##sys#append");
t4=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,((C_word*)t0)[2],t1,t3);}

/* k26806 in k26802 in k26730 in k26722 in k26711 in k26708 in k26704 in k26697 in k26694 in a33269 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_26808(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  ##sys#append");
t2=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k26798 in k26730 in k26722 in k26711 in k26708 in k26704 in k26697 in k26694 in a33269 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_26800(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  ##sys#append");
t2=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k26794 in k26730 in k26722 in k26711 in k26708 in k26704 in k26697 in k26694 in a33269 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_26796(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[34],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26796,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,C_SCHEME_END_OF_LIST,t1);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[8],t2);
t4=(C_word)C_a_i_cons(&a,2,lf[1],t3);
t5=(C_word)C_a_i_list(&a,3,lf[748],((C_word*)t0)[7],t4);
t6=(C_word)C_a_i_list(&a,2,lf[702],t5);
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26764,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=t6,tmp=(C_word)a,a+=6,tmp);
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26768,a[2]=t7,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  loop-finally");
t9=C_retrieve2(lf[467],"loop-finally");
f_23438(3,t9,t8,((C_word*)t0)[2]);}

/* k26766 in k26794 in k26730 in k26722 in k26711 in k26708 in k26704 in k26697 in k26694 in a33269 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_26768(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26768,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 380  ##sys#append");
t3=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[2],t1,t2);}

/* k26762 in k26794 in k26730 in k26722 in k26711 in k26708 in k26704 in k26697 in k26694 in a33269 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_26764(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26764,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[5],t1);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t2);
t4=(C_word)C_a_i_cons(&a,2,lf[748],t3);
t5=(C_word)C_a_i_list(&a,2,lf[702],t4);
t6=(C_word)C_a_i_list(&a,1,t5);
C_trace("ChickenBridge.scm: 380  ##sys#append");
t7=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t7+1)))(4,t7,((C_word*)t0)[3],((C_word*)t0)[2],t6);}

/* k26726 in k26722 in k26711 in k26708 in k26704 in k26697 in k26694 in a33269 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_26728(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26728,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,lf[1],t2));}

/* k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_23343(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23343,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23346,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33256,a[2]=((C_word)li552),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  ##sys#register-macro");
t4=C_retrieve(lf[746]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[799],t3);}

/* a33255 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_33256(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[27],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_33256,4,t0,t1,t2,t3);}
t4=(C_word)C_a_i_list(&a,3,lf[798],t2,t3);
t5=(C_word)C_a_i_list(&a,3,lf[12],t3,t4);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_a_i_list(&a,3,lf[413],t5,t3));}

/* k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_23346(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23346,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23349,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33227,a[2]=((C_word)li551),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  ##sys#register-macro");
t4=C_retrieve(lf[746]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[797],t3);}

/* a33226 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_33227(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_33227,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33231,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[796]);}

/* k33229 in a33226 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_33231(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[42],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33231,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,lf[8],((C_word*)t0)[3]);
t3=(C_word)C_a_i_list(&a,2,t1,t2);
t4=(C_word)C_a_i_list(&a,1,t3);
t5=(C_word)C_a_i_list(&a,2,lf[15],((C_word*)t0)[3]);
t6=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[3],t5);
t7=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_a_i_list(&a,4,lf[1],t4,t6,t1));}

/* k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_23349(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23349,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23352,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33224,a[2]=((C_word)li550),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  ##sys#register-macro");
t4=C_retrieve(lf[746]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[795],t3);}

/* a33223 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_33224(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_33224,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}

/* k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_23352(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word t36;
C_word t37;
C_word t38;
C_word t39;
C_word t40;
C_word t41;
C_word t42;
C_word t43;
C_word t44;
C_word t45;
C_word t46;
C_word t47;
C_word t48;
C_word t49;
C_word t50;
C_word t51;
C_word t52;
C_word t53;
C_word t54;
C_word t55;
C_word t56;
C_word t57;
C_word t58;
C_word t59;
C_word t60;
C_word t61;
C_word t62;
C_word t63;
C_word t64;
C_word t65;
C_word t66;
C_word t67;
C_word t68;
C_word t69;
C_word t70;
C_word t71;
C_word t72;
C_word t73;
C_word ab[492],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23352,2,t0,t1);}
t2=C_mutate(&lf[459],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23360,a[2]=((C_word)li359),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[460],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23366,a[2]=((C_word)li360),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate(&lf[461],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23378,a[2]=((C_word)li361),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate(&lf[462],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23390,a[2]=((C_word)li362),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate(&lf[463],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23402,a[2]=((C_word)li363),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate(&lf[464],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23414,a[2]=((C_word)li364),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate(&lf[465],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23420,a[2]=((C_word)li365),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate(&lf[466],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23426,a[2]=((C_word)li366),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate(&lf[467],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23438,a[2]=((C_word)li367),tmp=(C_word)a,a+=3,tmp));
t11=C_mutate(&lf[468],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23450,a[2]=((C_word)li368),tmp=(C_word)a,a+=3,tmp));
t12=C_mutate(&lf[469],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23462,a[2]=((C_word)li370),tmp=(C_word)a,a+=3,tmp));
t13=C_mutate(&lf[479],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23613,a[2]=((C_word)li373),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate(&lf[480],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23684,a[2]=((C_word)li374),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate(&lf[481],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23690,a[2]=((C_word)li375),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate(&lf[482],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23696,a[2]=((C_word)li376),tmp=(C_word)a,a+=3,tmp));
t17=C_mutate(&lf[483],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23702,a[2]=((C_word)li380),tmp=(C_word)a,a+=3,tmp));
t18=C_mutate(&lf[491],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23862,a[2]=((C_word)li381),tmp=(C_word)a,a+=3,tmp));
t19=C_mutate(&lf[499],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23944,a[2]=((C_word)li383),tmp=(C_word)a,a+=3,tmp));
t20=C_mutate(&lf[529],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24326,a[2]=((C_word)li386),tmp=(C_word)a,a+=3,tmp));
t21=C_mutate(&lf[532],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24373,a[2]=((C_word)li388),tmp=(C_word)a,a+=3,tmp));
t22=C_mutate(&lf[551],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24724,a[2]=((C_word)li390),tmp=(C_word)a,a+=3,tmp));
t23=C_mutate(&lf[559],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24866,a[2]=((C_word)li392),tmp=(C_word)a,a+=3,tmp));
t24=C_mutate(&lf[573],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25059,a[2]=((C_word)li394),tmp=(C_word)a,a+=3,tmp));
t25=C_mutate(&lf[576],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25126,a[2]=((C_word)li395),tmp=(C_word)a,a+=3,tmp));
t26=C_mutate(&lf[579],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25164,a[2]=((C_word)li396),tmp=(C_word)a,a+=3,tmp));
t27=C_mutate(&lf[582],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25323,a[2]=((C_word)li402),tmp=(C_word)a,a+=3,tmp));
t28=C_mutate(&lf[611],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25869,a[2]=((C_word)li403),tmp=(C_word)a,a+=3,tmp));
t29=C_mutate(&lf[613],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25875,a[2]=((C_word)li404),tmp=(C_word)a,a+=3,tmp));
t30=C_mutate(&lf[619],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25941,a[2]=((C_word)li405),tmp=(C_word)a,a+=3,tmp));
t31=C_mutate(&lf[625],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26032,a[2]=((C_word)li406),tmp=(C_word)a,a+=3,tmp));
t32=C_mutate(&lf[628],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26133,a[2]=((C_word)li410),tmp=(C_word)a,a+=3,tmp));
t33=C_mutate(&lf[634],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26264,a[2]=((C_word)li415),tmp=(C_word)a,a+=3,tmp));
t34=C_mutate(&lf[640],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26678,a[2]=((C_word)li420),tmp=(C_word)a,a+=3,tmp));
t35=(C_word)C_a_i_list(&a,3,lf[560],C_retrieve2(lf[559],"parse-with"),C_SCHEME_FALSE);
t36=(C_word)C_a_i_list(&a,3,lf[473],C_retrieve2(lf[579],"parse-initially"),C_SCHEME_FALSE);
t37=(C_word)C_a_i_list(&a,3,lf[648],C_retrieve2(lf[529],"parse-repeat"),lf[645]);
t38=(C_word)C_a_i_list(&a,2,lf[507],C_retrieve2(lf[499],"parse-numerical-for"));
t39=(C_word)C_a_i_list(&a,2,lf[503],C_retrieve2(lf[499],"parse-numerical-for"));
t40=(C_word)C_a_i_list(&a,2,lf[505],C_retrieve2(lf[499],"parse-numerical-for"));
t41=(C_word)C_a_i_list(&a,2,lf[514],C_retrieve2(lf[499],"parse-numerical-for"));
t42=(C_word)C_a_i_list(&a,2,lf[504],C_retrieve2(lf[499],"parse-numerical-for"));
t43=(C_word)C_a_i_list(&a,2,lf[506],C_retrieve2(lf[499],"parse-numerical-for"));
t44=(C_word)C_a_i_list(&a,2,lf[539],C_retrieve2(lf[532],"parse-sequence-iteration"));
t45=(C_word)C_a_i_list(&a,2,lf[548],C_retrieve2(lf[532],"parse-sequence-iteration"));
t46=(C_word)C_a_i_list(&a,2,lf[533],C_retrieve2(lf[532],"parse-sequence-iteration"));
t47=(C_word)C_a_i_list(&a,2,lf[552],C_retrieve2(lf[551],"parse-general-iteration"));
t48=(C_word)C_a_i_list(&a,2,lf[538],C_retrieve2(lf[532],"parse-sequence-iteration"));
t49=(C_word)C_a_i_list(&a,14,lf[500],C_retrieve2(lf[491],"parse-for"),lf[645],t38,t39,t40,t41,t42,t43,t44,t45,t46,t47,t48);
t50=(C_word)C_a_i_list(&a,3,lf[649],C_retrieve2(lf[491],"parse-for"),lf[645]);
t51=(C_word)C_a_i_list(&a,3,lf[641],C_retrieve2(lf[573],"parse-do"),lf[632]);
t52=(C_word)C_a_i_list(&a,3,lf[593],C_retrieve2(lf[582],"parse-accumulation"),lf[632]);
t53=(C_word)C_a_i_list(&a,3,lf[18],C_retrieve2(lf[582],"parse-accumulation"),lf[632]);
t54=(C_word)C_a_i_list(&a,3,lf[598],C_retrieve2(lf[582],"parse-accumulation"),lf[632]);
t55=(C_word)C_a_i_list(&a,3,lf[583],C_retrieve2(lf[582],"parse-accumulation"),lf[632]);
t56=(C_word)C_a_i_list(&a,3,lf[584],C_retrieve2(lf[582],"parse-accumulation"),lf[632]);
t57=(C_word)C_a_i_list(&a,3,lf[586],C_retrieve2(lf[582],"parse-accumulation"),lf[632]);
t58=(C_word)C_a_i_list(&a,3,lf[587],C_retrieve2(lf[582],"parse-accumulation"),lf[632]);
t59=(C_word)C_a_i_list(&a,4,lf[620],C_retrieve2(lf[619],"parse-thereis"),lf[632],C_retrieve2(lf[611],"loop-return"));
t60=(C_word)C_a_i_list(&a,4,lf[621],C_retrieve2(lf[619],"parse-thereis"),lf[632],C_retrieve2(lf[611],"loop-return"));
t61=(C_word)C_a_i_list(&a,4,lf[622],C_retrieve2(lf[619],"parse-thereis"),lf[632],C_retrieve2(lf[611],"loop-return"));
t62=(C_word)C_a_i_list(&a,4,lf[612],C_retrieve2(lf[625],"parse-return"),lf[632],C_retrieve2(lf[611],"loop-return"));
t63=(C_word)C_a_i_list(&a,3,lf[616],C_retrieve2(lf[613],"parse-while-until"),C_SCHEME_FALSE);
t64=(C_word)C_a_i_list(&a,3,lf[615],C_retrieve2(lf[613],"parse-while-until"),C_SCHEME_FALSE);
t65=(C_word)C_a_i_list(&a,3,lf[11],C_retrieve2(lf[634],"parse-conditional"),lf[632]);
t66=(C_word)C_a_i_list(&a,3,lf[6],C_retrieve2(lf[634],"parse-conditional"),lf[632]);
t67=(C_word)C_a_i_list(&a,3,lf[20],C_retrieve2(lf[634],"parse-conditional"),lf[632]);
t68=(C_word)C_a_i_list(&a,3,lf[477],C_retrieve2(lf[576],"parse-finally"),C_SCHEME_FALSE);
t69=(C_word)C_a_i_list(&a,23,t35,t36,t37,t49,t50,t51,t52,t53,t54,t55,t56,t57,t58,t59,t60,t61,t62,t63,t64,t65,t66,t67,t68);
t70=C_mutate(&lf[650],t69);
t71=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26872,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t72=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33082,a[2]=((C_word)li549),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  ##sys#register-macro-2");
t73=C_retrieve(lf[760]);
((C_proc4)C_retrieve_proc(t73))(4,t73,t71,lf[645],t72);}

/* a33081 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_33082(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_33082,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26878,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  parse-iteration");
f_26678(t3,lf[645],t2,C_retrieve2(lf[650],"*loop-operators*"));}

/* k26876 in a33081 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_26878(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26878,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26881,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_assoc(lf[612],C_retrieve2(lf[650],"*loop-operators*"));
t4=(C_word)C_i_cadddr(t3);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27010,a[2]=t4,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  loop-returning");
t6=C_retrieve2(lf[468],"loop-returning");
f_23450(3,t6,t5,t1);}

/* k27008 in k26876 in a33081 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_27010(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27010,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=(C_word)C_a_i_list(&a,1,t2);
C_apply(4,0,((C_word*)t0)[3],((C_word*)t0)[2],t3);}

/* k26879 in k26876 in a33081 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_26881(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26881,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26892,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  loop-bindings");
t3=C_retrieve2(lf[460],"loop-bindings");
f_23366(3,t3,t2,((C_word*)t0)[2]);}

/* k26890 in k26879 in k26876 in a33081 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_26892(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26892,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26896,a[2]=((C_word*)t0)[4],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26900,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  loop-initially");
t4=C_retrieve2(lf[462],"loop-initially");
f_23390(3,t4,t3,((C_word*)t0)[2]);}

/* k26898 in k26890 in k26879 in k26876 in a33081 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_26900(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26900,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26920,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26924,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  loop-end-tests");
t4=C_retrieve2(lf[463],"loop-end-tests");
f_23402(3,t4,t3,((C_word*)t0)[2]);}

/* k26922 in k26898 in k26890 in k26879 in k26876 in a33081 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_26924(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26924,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26927,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
if(C_truep(t1)){
t3=(C_word)C_i_cdr(t1);
t4=(C_truep(t3)?(C_word)C_a_i_cons(&a,2,lf[388],t1):(C_word)C_i_car(t1));
t5=(C_word)C_a_i_list(&a,2,lf[794],lf[352]);
t6=(C_word)C_a_i_list(&a,3,lf[20],t4,t5);
t7=t2;
f_26927(t7,(C_word)C_a_i_list(&a,1,t6));}
else{
t3=t2;
f_26927(t3,C_SCHEME_END_OF_LIST);}}

/* k26925 in k26922 in k26898 in k26890 in k26879 in k26876 in a33081 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_26927(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26927,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26931,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26935,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  loop-looping");
t4=C_retrieve2(lf[464],"loop-looping");
f_23414(3,t4,t3,((C_word*)t0)[2]);}

/* k26933 in k26925 in k26922 in k26898 in k26890 in k26879 in k26876 in a33081 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_26935(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26935,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26939,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26943,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  loop-stepping");
t4=C_retrieve2(lf[466],"loop-stepping");
f_23426(3,t4,t3,((C_word*)t0)[2]);}

/* k26941 in k26933 in k26925 in k26922 in k26898 in k26890 in k26879 in k26876 in a33081 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_26943(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26943,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,lf[794],lf[790]);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26959,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26963,a[2]=t3,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  loop-finally");
t5=C_retrieve2(lf[467],"loop-finally");
f_23438(3,t5,t4,((C_word*)t0)[2]);}

/* k26961 in k26941 in k26933 in k26925 in k26922 in k26898 in k26890 in k26879 in k26876 in a33081 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_26963(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26963,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)t0)[3]);
C_trace("##sys#append");
t3=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[2],t1,t2);}

/* k26957 in k26941 in k26933 in k26925 in k26922 in k26898 in k26890 in k26879 in k26876 in a33081 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_26959(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26959,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[352],t1);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t2);
C_trace("##sys#append");
t4=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,((C_word*)t0)[3],((C_word*)t0)[2],t3);}

/* k26937 in k26933 in k26925 in k26922 in k26898 in k26890 in k26879 in k26876 in a33081 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_26939(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("##sys#append");
t2=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k26929 in k26925 in k26922 in k26898 in k26890 in k26879 in k26876 in a33081 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_26931(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("##sys#append");
t2=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k26918 in k26898 in k26890 in k26879 in k26876 in a33081 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_26920(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26920,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[790],t1);
t3=(C_word)C_a_i_cons(&a,2,lf[791],t2);
t4=(C_word)C_a_i_list(&a,3,lf[792],lf[793],t3);
t5=(C_word)C_a_i_list(&a,1,t4);
C_trace("##sys#append");
t6=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t6+1)))(4,t6,((C_word*)t0)[3],((C_word*)t0)[2],t5);}

/* k26894 in k26890 in k26879 in k26876 in a33081 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_26896(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26896,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,lf[1],t2));}

/* k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_26872(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word t36;
C_word t37;
C_word t38;
C_word t39;
C_word t40;
C_word t41;
C_word ab[117],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26872,2,t0,t1);}
t2=C_mutate((C_word*)lf[651]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27016,a[2]=((C_word)li422),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate((C_word*)lf[656]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27745,a[2]=((C_word)li424),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate((C_word*)lf[657]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27764,a[2]=((C_word)li426),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate((C_word*)lf[658]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28215,a[2]=((C_word)li428),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate((C_word*)lf[659]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28234,a[2]=((C_word)li430),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate((C_word*)lf[661]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28963,a[2]=((C_word)li432),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate((C_word*)lf[662]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28982,a[2]=((C_word)li434),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate((C_word*)lf[664]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29711,a[2]=((C_word)li436),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate((C_word*)lf[665]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29730,a[2]=((C_word)li438),tmp=(C_word)a,a+=3,tmp));
t11=C_mutate((C_word*)lf[666]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30181,a[2]=((C_word)li440),tmp=(C_word)a,a+=3,tmp));
t12=C_mutate((C_word*)lf[667]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30200,a[2]=((C_word)li442),tmp=(C_word)a,a+=3,tmp));
t13=C_mutate((C_word*)lf[668]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30651,a[2]=((C_word)li444),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate((C_word*)lf[669]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30670,a[2]=((C_word)li446),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate((C_word*)lf[670]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31140,a[2]=((C_word)li448),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate((C_word*)lf[671]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31158,a[2]=((C_word)li450),tmp=(C_word)a,a+=3,tmp));
t17=C_mutate((C_word*)lf[672]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31173,a[2]=((C_word)li452),tmp=(C_word)a,a+=3,tmp));
t18=C_mutate((C_word*)lf[673]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31188,a[2]=((C_word)li454),tmp=(C_word)a,a+=3,tmp));
t19=C_mutate((C_word*)lf[674]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31207,a[2]=((C_word)li456),tmp=(C_word)a,a+=3,tmp));
t20=C_mutate((C_word*)lf[675]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31222,a[2]=((C_word)li458),tmp=(C_word)a,a+=3,tmp));
t21=C_mutate((C_word*)lf[676]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31241,a[2]=((C_word)li460),tmp=(C_word)a,a+=3,tmp));
t22=C_mutate((C_word*)lf[677]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31260,a[2]=((C_word)li462),tmp=(C_word)a,a+=3,tmp));
t23=C_mutate((C_word*)lf[678]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31283,a[2]=((C_word)li464),tmp=(C_word)a,a+=3,tmp));
t24=C_mutate((C_word*)lf[679]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31302,a[2]=((C_word)li466),tmp=(C_word)a,a+=3,tmp));
t25=C_mutate((C_word*)lf[680]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31325,a[2]=((C_word)li469),tmp=(C_word)a,a+=3,tmp));
t26=C_mutate((C_word*)lf[682]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31372,a[2]=((C_word)li472),tmp=(C_word)a,a+=3,tmp));
t27=C_mutate((C_word*)lf[684]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31427,a[2]=((C_word)li474),tmp=(C_word)a,a+=3,tmp));
t28=C_mutate((C_word*)lf[685]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31446,a[2]=((C_word)li476),tmp=(C_word)a,a+=3,tmp));
t29=C_mutate((C_word*)lf[686]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31469,a[2]=((C_word)li478),tmp=(C_word)a,a+=3,tmp));
t30=C_mutate((C_word*)lf[687]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31497,a[2]=((C_word)li480),tmp=(C_word)a,a+=3,tmp));
t31=C_mutate((C_word*)lf[688]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31525,a[2]=((C_word)li482),tmp=(C_word)a,a+=3,tmp));
t32=C_mutate((C_word*)lf[689]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31553,a[2]=((C_word)li484),tmp=(C_word)a,a+=3,tmp));
t33=C_mutate((C_word*)lf[690]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31581,a[2]=((C_word)li486),tmp=(C_word)a,a+=3,tmp));
t34=C_mutate((C_word*)lf[691]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31609,a[2]=((C_word)li488),tmp=(C_word)a,a+=3,tmp));
t35=C_mutate((C_word*)lf[692]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31637,a[2]=((C_word)li490),tmp=(C_word)a,a+=3,tmp));
t36=C_mutate((C_word*)lf[693]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31665,a[2]=((C_word)li492),tmp=(C_word)a,a+=3,tmp));
t37=C_mutate((C_word*)lf[694]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31693,a[2]=((C_word)li494),tmp=(C_word)a,a+=3,tmp));
t38=C_mutate((C_word*)lf[695]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31721,a[2]=((C_word)li496),tmp=(C_word)a,a+=3,tmp));
t39=C_mutate((C_word*)lf[696]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31736,a[2]=((C_word)li503),tmp=(C_word)a,a+=3,tmp));
t40=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31794,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 381  hash-table-set!");
t41=C_retrieve(lf[761]);
((C_proc5)C_retrieve_proc(t41))(5,t41,t40,C_retrieve(lf[29]),lf[788],lf[789]);}

/* k31792 in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_31794(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31794,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31797,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 381  hash-table-set!");
t3=C_retrieve(lf[761]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[786],lf[787]);}

/* k31795 in k31792 in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_31797(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31797,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31800,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 381  hash-table-set!");
t3=C_retrieve(lf[761]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[784],lf[785]);}

/* k31798 in k31795 in k31792 in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_31800(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31800,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31803,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 381  hash-table-set!");
t3=C_retrieve(lf[761]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[782],lf[783]);}

/* k31801 in k31798 in k31795 in k31792 in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_31803(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31803,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31806,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 381  hash-table-set!");
t3=C_retrieve(lf[761]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[780],lf[781]);}

/* k31804 in k31801 in k31798 in k31795 in k31792 in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_31806(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31806,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31809,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 381  hash-table-set!");
t3=C_retrieve(lf[761]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[778],lf[779]);}

/* k31807 in k31804 in k31801 in k31798 in k31795 in k31792 in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_31809(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31809,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31812,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 381  hash-table-set!");
t3=C_retrieve(lf[761]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[776],lf[777]);}

/* k31810 in k31807 in k31804 in k31801 in k31798 in k31795 in k31792 in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_31812(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31812,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31815,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 381  hash-table-set!");
t3=C_retrieve(lf[761]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[774],lf[775]);}

/* k31813 in k31810 in k31807 in k31804 in k31801 in k31798 in k31795 in k31792 in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_31815(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31815,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31818,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 381  hash-table-set!");
t3=C_retrieve(lf[761]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[772],lf[773]);}

/* k31816 in k31813 in k31810 in k31807 in k31804 in k31801 in k31798 in k31795 in k31792 in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_31818(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31818,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31821,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 381  hash-table-set!");
t3=C_retrieve(lf[761]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[770],lf[771]);}

/* k31819 in k31816 in k31813 in k31810 in k31807 in k31804 in k31801 in k31798 in k31795 in k31792 in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_31821(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31821,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31824,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 381  hash-table-set!");
t3=C_retrieve(lf[761]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[768],lf[769]);}

/* k31822 in k31819 in k31816 in k31813 in k31810 in k31807 in k31804 in k31801 in k31798 in k31795 in k31792 in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_31824(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31824,2,t0,t1);}
t2=C_mutate((C_word*)lf[703]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31826,a[2]=((C_word)li505),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate((C_word*)lf[704]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31883,a[2]=((C_word)li507),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate((C_word*)lf[705]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31940,a[2]=((C_word)li509),tmp=(C_word)a,a+=3,tmp));
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31949,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 382  hash-table-set!");
t6=C_retrieve(lf[761]);
((C_proc5)C_retrieve_proc(t6))(5,t6,t5,C_retrieve(lf[29]),lf[766],lf[767]);}

/* k31947 in k31822 in k31819 in k31816 in k31813 in k31810 in k31807 in k31804 in k31801 in k31798 in k31795 in k31792 in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_31949(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31949,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31952,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 382  hash-table-set!");
t3=C_retrieve(lf[761]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[764],lf[765]);}

/* k31950 in k31947 in k31822 in k31819 in k31816 in k31813 in k31810 in k31807 in k31804 in k31801 in k31798 in k31795 in k31792 in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_31952(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31952,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31955,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 382  hash-table-set!");
t3=C_retrieve(lf[761]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[762],lf[763]);}

/* k31953 in k31950 in k31947 in k31822 in k31819 in k31816 in k31813 in k31810 in k31807 in k31804 in k31801 in k31798 in k31795 in k31792 in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_31955(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word ab[67],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31955,2,t0,t1);}
t2=C_mutate((C_word*)lf[706]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31957,a[2]=((C_word)li512),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate((C_word*)lf[437]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32147,a[2]=((C_word)li513),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate((C_word*)lf[426]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32161,a[2]=((C_word)li514),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate((C_word*)lf[714]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32175,a[2]=((C_word)li515),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate((C_word*)lf[715]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32178,a[2]=((C_word)li516),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate(&lf[716],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32190,a[2]=((C_word)li518),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate(&lf[718],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32199,a[2]=((C_word)li520),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate(&lf[719],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32243,a[2]=((C_word)li522),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate((C_word*)lf[448]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32265,a[2]=((C_word)li524),tmp=(C_word)a,a+=3,tmp));
t11=C_mutate((C_word*)lf[720]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32284,a[2]=((C_word)li531),tmp=(C_word)a,a+=3,tmp));
t12=C_mutate((C_word*)lf[723]+1,C_retrieve(lf[715]));
t13=C_mutate((C_word*)lf[724]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32460,a[2]=((C_word)li533),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate((C_word*)lf[730]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32523,a[2]=((C_word)li535),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate((C_word*)lf[731]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32532,a[2]=((C_word)li537),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate((C_word*)lf[732]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32538,a[2]=((C_word)li539),tmp=(C_word)a,a+=3,tmp));
t17=C_mutate((C_word*)lf[733]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32547,a[2]=((C_word)li541),tmp=(C_word)a,a+=3,tmp));
t18=C_mutate((C_word*)lf[735]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32605,a[2]=((C_word)li543),tmp=(C_word)a,a+=3,tmp));
t19=C_mutate(&lf[736],lf[737]);
t20=C_mutate(&lf[738],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32615,a[2]=((C_word)li544),tmp=(C_word)a,a+=3,tmp));
t21=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t22=t21;
t23=(*a=C_VECTOR_TYPE|1,a[1]=t22,tmp=(C_word)a,a+=2,tmp);
t24=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32686,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t25=C_SCHEME_UNDEFINED;
t26=(*a=C_VECTOR_TYPE|1,a[1]=t25,tmp=(C_word)a,a+=2,tmp);
t27=C_set_block_item(t26,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_33019,a[2]=t26,a[3]=t21,a[4]=t23,a[5]=((C_word)li548),tmp=(C_word)a,a+=6,tmp));
t28=((C_word*)t26)[1];
f_33019(t28,t24,C_retrieve2(lf[650],"*loop-operators*"));}

/* do5939 in k31953 in k31950 in k31947 in k31822 in k31819 in k31816 in k31813 in k31810 in k31807 in k31804 in k31801 in k31798 in k31795 in k31792 in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_33019(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[32],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_33019,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=(C_word)C_a_i_list(&a,3,lf[616],C_retrieve2(lf[738],"run-while-until"),C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,3,lf[615],C_retrieve2(lf[738],"run-while-until"),C_SCHEME_FALSE);
t5=(C_word)C_a_i_list(&a,2,t3,t4);
t6=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[4])[1],t5);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_i_cdr(((C_word*)t0)[3]));}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33047,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_car(t4);
if(C_truep((C_truep((C_word)C_i_equalp(t5,lf[593]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[18]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[598]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[583]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[584]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[586]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[587]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[620]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[621]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[622]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[612]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[616]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[615]))?C_SCHEME_TRUE:C_SCHEME_FALSE))))))))))))))){
t6=t3;
f_33047(t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_i_car(t2);
t7=(C_word)C_a_i_list(&a,1,t6);
t8=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[4])[1],t7);
t9=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t10=C_mutate(((C_word *)((C_word*)t0)[4])+1,t9);
t11=t3;
f_33047(t11,t10);}}}

/* k33045 in do5939 in k31953 in k31950 in k31947 in k31822 in k31819 in k31816 in k31813 in k31810 in k31807 in k31804 in k31801 in k31798 in k31795 in k31792 in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_33047(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_33019(t3,((C_word*)t0)[2],t2);}

/* k32684 in k31953 in k31950 in k31947 in k31822 in k31819 in k31816 in k31813 in k31810 in k31807 in k31804 in k31801 in k31798 in k31795 in k31792 in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_32686(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32686,2,t0,t1);}
t2=C_mutate(&lf[741],t1);
t3=C_mutate(&lf[742],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32688,a[2]=((C_word)li545),tmp=(C_word)a,a+=3,tmp));
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32976,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33013,a[2]=((C_word)li547),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 660  ##sys#register-macro-2");
t6=C_retrieve(lf[760]);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,lf[759],t5);}

/* a33012 in k32684 in k31953 in k31950 in k31947 in k31822 in k31819 in k31816 in k31813 in k31810 in k31807 in k31804 in k31801 in k31798 in k31795 in k31792 in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_33013(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_33013,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32731,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 605  parse-iteration");
f_26678(t3,lf[759],t2,C_retrieve2(lf[741],"*run-operators*"));}

/* k32729 in a33012 in k32684 in k31953 in k31950 in k31947 in k31822 in k31819 in k31816 in k31813 in k31810 in k31807 in k31804 in k31801 in k31798 in k31795 in k31792 in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_32731(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32731,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_END_OF_LIST;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_retrieve2(lf[736],"*process-stop*");
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_car(((C_word*)t7)[1]);
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32737,a[2]=t7,a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t3,a[6]=t8,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 613  gensym");
t10=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t10))(3,t10,t9,lf[758]);}

/* k32735 in k32729 in a33012 in k32684 in k31953 in k31950 in k31947 in k31822 in k31819 in k31816 in k31813 in k31810 in k31807 in k31804 in k31801 in k31798 in k31795 in k31792 in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_32737(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32737,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_32740,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 614  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[757]);}

/* k32738 in k32735 in k32729 in a33012 in k32684 in k31953 in k31950 in k31947 in k31822 in k31819 in k31816 in k31813 in k31810 in k31807 in k31804 in k31801 in k31798 in k31795 in k31792 in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_32740(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32740,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_32743,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 615  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[756]);}

/* k32741 in k32738 in k32735 in k32729 in a33012 in k32684 in k31953 in k31950 in k31947 in k31822 in k31819 in k31816 in k31813 in k31810 in k31807 in k31804 in k31801 in k31798 in k31795 in k31792 in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_32743(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32743,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_32747,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t1,a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 617  loop-end-tests");
t3=C_retrieve2(lf[463],"loop-end-tests");
f_23402(3,t3,t2,((C_word*)t0)[3]);}

/* k32745 in k32741 in k32738 in k32735 in k32729 in a33012 in k32684 in k31953 in k31950 in k31947 in k31822 in k31819 in k31816 in k31813 in k31810 in k31807 in k31804 in k31801 in k31798 in k31795 in k31792 in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_32747(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32747,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[10])+1,t1);
t3=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_32750,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[10],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32957,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 618  loop-finally");
t5=C_retrieve2(lf[467],"loop-finally");
f_23438(3,t5,t4,((C_word*)t0)[3]);}

/* k32955 in k32745 in k32741 in k32738 in k32735 in k32729 in a33012 in k32684 in k31953 in k31950 in k31947 in k31822 in k31819 in k31816 in k31813 in k31810 in k31807 in k31804 in k31801 in k31798 in k31795 in k31792 in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_32957(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32957,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32965,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32969,a[2]=t2,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 619  loop-finally");
t4=C_retrieve2(lf[467],"loop-finally");
f_23438(3,t4,t3,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_32750(t2,C_SCHEME_UNDEFINED);}}

/* k32967 in k32955 in k32745 in k32741 in k32738 in k32735 in k32729 in a33012 in k32684 in k31953 in k31950 in k31947 in k31822 in k31819 in k31816 in k31813 in k31810 in k31807 in k31804 in k31801 in k31798 in k31795 in k31792 in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_32969(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32969,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 604  ##sys#append");
t3=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[2],t1,t2);}

/* k32963 in k32955 in k32745 in k32741 in k32738 in k32735 in k32729 in a33012 in k32684 in k31953 in k31950 in k31947 in k31822 in k31819 in k31816 in k31813 in k31810 in k31807 in k31804 in k31801 in k31798 in k31795 in k31792 in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_32965(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32965,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[413],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_32750(t4,t3);}

/* k32748 in k32745 in k32741 in k32738 in k32735 in k32729 in a33012 in k32684 in k31953 in k31950 in k31947 in k31822 in k31819 in k31816 in k31813 in k31810 in k31807 in k31804 in k31801 in k31798 in k31795 in k31792 in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_32750(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32750,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_32753,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32943,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32950,a[2]=((C_word*)t0)[2],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 627  loop-looping");
t5=C_retrieve2(lf[464],"loop-looping");
f_23414(3,t5,t4,((C_word*)t0)[4]);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32914,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
if(C_truep((C_word)C_i_nullp(t4))){
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=t3;
f_32914(t7,t6);}
else{
t5=(C_word)C_a_i_cons(&a,2,lf[388],((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=t3;
f_32914(t7,t6);}}}

/* k32912 in k32748 in k32745 in k32741 in k32738 in k32735 in k32729 in a33012 in k32684 in k31953 in k31950 in k31947 in k31822 in k31819 in k31816 in k31813 in k31810 in k31807 in k31804 in k31801 in k31798 in k31795 in k31792 in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_32914(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32914,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,lf[20],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]);
t3=(C_word)C_a_i_list(&a,1,t2);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=((C_word*)t0)[2];
f_32753(2,t5,t4);}

/* k32948 in k32748 in k32745 in k32741 in k32738 in k32735 in k32729 in a33012 in k32684 in k31953 in k31950 in k31947 in k31822 in k31819 in k31816 in k31813 in k31810 in k31807 in k31804 in k31801 in k31798 in k31795 in k31792 in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_32950(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 626  process-code-terminates?");
f_32688(((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* k32941 in k32748 in k32745 in k32741 in k32738 in k32735 in k32729 in a33012 in k32684 in k31953 in k31950 in k31947 in k31822 in k31819 in k31816 in k31813 in k31810 in k31807 in k31804 in k31801 in k31798 in k31795 in k31792 in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_32943(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[2];
f_32753(2,t2,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 628  printf");
t2=C_retrieve(lf[404]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],lf[755]);}}

/* k32751 in k32748 in k32745 in k32741 in k32738 in k32735 in k32729 in a33012 in k32684 in k31953 in k31950 in k31947 in k31822 in k31819 in k31816 in k31813 in k31810 in k31807 in k31804 in k31801 in k31798 in k31795 in k31792 in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_32753(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word ab[117],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32753,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)t0)[9]);
t3=(C_word)C_a_i_list(&a,2,((C_word*)t0)[8],C_fix(0));
t4=(C_word)C_a_i_list(&a,3,lf[748],C_SCHEME_END_OF_LIST,((C_word*)t0)[9]);
t5=(C_word)C_a_i_list(&a,2,lf[749],t4);
t6=(C_word)C_a_i_list(&a,1,lf[750]);
t7=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[8],lf[750]);
t8=(C_word)C_a_i_list(&a,3,lf[748],t6,t7);
t9=(C_word)C_a_i_list(&a,2,lf[751],t8);
t10=(C_word)C_a_i_list(&a,3,t3,t5,t9);
t11=(C_word)C_a_i_list(&a,1,((C_word*)t0)[7]);
t12=(C_word)C_a_i_list(&a,1,((C_word*)t0)[6]);
t13=(C_word)C_a_i_list(&a,1,lf[752]);
t14=(C_word)C_a_i_list(&a,4,lf[753],((C_word*)t0)[6],t13,lf[754]);
t15=(C_word)C_a_i_list(&a,2,((C_word*)t0)[7],C_fix(-2));
t16=(C_word)C_a_i_list(&a,4,lf[748],t12,t14,t15);
t17=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_32844,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t2,a[6]=t10,a[7]=t11,a[8]=t16,tmp=(C_word)a,a+=9,tmp);
t18=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32848,a[2]=((C_word*)t0)[2],a[3]=t17,tmp=(C_word)a,a+=4,tmp);
t19=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32852,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[8],a[4]=t18,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 647  loop-looping");
t20=C_retrieve2(lf[464],"loop-looping");
f_23414(3,t20,t19,((C_word*)t0)[3]);}

/* k32850 in k32751 in k32748 in k32745 in k32741 in k32738 in k32735 in k32729 in a33012 in k32684 in k31953 in k31950 in k31947 in k31822 in k31819 in k31816 in k31813 in k31810 in k31807 in k31804 in k31801 in k31798 in k31795 in k31792 in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_32852(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32852,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32856,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32860,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 648  loop-stepping");
t4=C_retrieve2(lf[466],"loop-stepping");
f_23426(3,t4,t3,((C_word*)t0)[2]);}

/* k32858 in k32850 in k32751 in k32748 in k32745 in k32741 in k32738 in k32735 in k32729 in a33012 in k32684 in k31953 in k31950 in k31947 in k31822 in k31819 in k31816 in k31813 in k31810 in k31807 in k31804 in k31801 in k31798 in k31795 in k31792 in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_32860(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32860,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 604  ##sys#append");
t3=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[2],t1,t2);}

/* k32854 in k32850 in k32751 in k32748 in k32745 in k32741 in k32738 in k32735 in k32729 in a33012 in k32684 in k31953 in k31950 in k31947 in k31822 in k31819 in k31816 in k31813 in k31810 in k31807 in k31804 in k31801 in k31798 in k31795 in k31792 in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_32856(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 604  ##sys#append");
t2=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k32846 in k32751 in k32748 in k32745 in k32741 in k32738 in k32735 in k32729 in a33012 in k32684 in k31953 in k31950 in k31947 in k31822 in k31819 in k31816 in k31813 in k31810 in k31807 in k31804 in k31801 in k31798 in k31795 in k31792 in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_32848(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 604  ##sys#append");
t2=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k32842 in k32751 in k32748 in k32745 in k32741 in k32738 in k32735 in k32729 in a33012 in k32684 in k31953 in k31950 in k31947 in k31822 in k31819 in k31816 in k31813 in k31810 in k31807 in k31804 in k31801 in k31798 in k31795 in k31792 in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_32844(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[57],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32844,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,C_SCHEME_END_OF_LIST,t1);
t3=(C_word)C_a_i_cons(&a,2,lf[748],t2);
t4=(C_word)C_a_i_list(&a,3,lf[701],((C_word*)t0)[8],t3);
t5=(C_word)C_a_i_list(&a,3,lf[748],((C_word*)t0)[7],t4);
t6=(C_word)C_a_i_list(&a,2,lf[702],t5);
t7=(C_word)C_a_i_list(&a,3,lf[2],((C_word*)t0)[6],t6);
t8=(C_word)C_a_i_list(&a,3,lf[748],((C_word*)t0)[5],t7);
t9=C_mutate(((C_word *)((C_word*)t0)[4])+1,t8);
t10=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32763,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t11=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32800,a[2]=((C_word*)t0)[2],a[3]=t10,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 652  loop-bindings");
t12=C_retrieve2(lf[460],"loop-bindings");
f_23366(3,t12,t11,((C_word*)t0)[2]);}

/* k32798 in k32842 in k32751 in k32748 in k32745 in k32741 in k32738 in k32735 in k32729 in a33012 in k32684 in k31953 in k31950 in k31947 in k31822 in k31819 in k31816 in k31813 in k31810 in k31807 in k31804 in k31801 in k31798 in k31795 in k31792 in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_32800(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32800,2,t0,t1);}
if(C_truep((C_word)C_i_nullp(t1))){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32796,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 653  loop-initially");
t3=C_retrieve2(lf[462],"loop-initially");
f_23390(3,t3,t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_32763(t2,C_SCHEME_FALSE);}}

/* k32794 in k32798 in k32842 in k32751 in k32748 in k32745 in k32741 in k32738 in k32735 in k32729 in a33012 in k32684 in k31953 in k31950 in k31947 in k31822 in k31819 in k31816 in k31813 in k31810 in k31807 in k31804 in k31801 in k31798 in k31795 in k31792 in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_32796(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_32763(t2,(C_word)C_i_nullp(t1));}

/* k32761 in k32842 in k32751 in k32748 in k32745 in k32741 in k32738 in k32735 in k32729 in a33012 in k32684 in k31953 in k31950 in k31947 in k31822 in k31819 in k31816 in k31813 in k31810 in k31807 in k31804 in k31801 in k31798 in k31795 in k31792 in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_32763(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32763,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[3])[1]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32774,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 656  loop-bindings");
t3=C_retrieve2(lf[460],"loop-bindings");
f_23366(3,t3,t2,((C_word*)t0)[2]);}}

/* k32772 in k32761 in k32842 in k32751 in k32748 in k32745 in k32741 in k32738 in k32735 in k32729 in a33012 in k32684 in k31953 in k31950 in k31947 in k31822 in k31819 in k31816 in k31813 in k31810 in k31807 in k31804 in k31801 in k31798 in k31795 in k31792 in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_32774(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32774,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32778,a[2]=((C_word*)t0)[4],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32782,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 657  loop-initially");
t4=C_retrieve2(lf[462],"loop-initially");
f_23390(3,t4,t3,((C_word*)t0)[2]);}

/* k32780 in k32772 in k32761 in k32842 in k32751 in k32748 in k32745 in k32741 in k32738 in k32735 in k32729 in a33012 in k32684 in k31953 in k31950 in k31947 in k31822 in k31819 in k31816 in k31813 in k31810 in k31807 in k31804 in k31801 in k31798 in k31795 in k31792 in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_32782(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32782,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 604  ##sys#append");
t3=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[2],t1,t2);}

/* k32776 in k32772 in k32761 in k32842 in k32751 in k32748 in k32745 in k32741 in k32738 in k32735 in k32729 in a33012 in k32684 in k31953 in k31950 in k31947 in k31822 in k31819 in k31816 in k31813 in k31810 in k31807 in k31804 in k31801 in k31798 in k31795 in k31792 in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_32778(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32778,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,lf[2],t2));}

/* k32974 in k32684 in k31953 in k31950 in k31947 in k31822 in k31819 in k31816 in k31813 in k31810 in k31807 in k31804 in k31801 in k31798 in k31795 in k31792 in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_32976(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32976,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32979,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32984,a[2]=((C_word)li546),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 663  ##sys#register-macro");
t4=C_retrieve(lf[746]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[747],t3);}

/* a32983 in k32974 in k32684 in k31953 in k31950 in k31947 in k31822 in k31819 in k31816 in k31813 in k31810 in k31807 in k31804 in k31801 in k31798 in k31795 in k31792 in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_32984(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+9)){
C_save_and_reclaim((void*)tr3r,(void*)f_32984r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_32984r(t0,t1,t2,t3);}}

static void C_ccall f_32984r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a=C_alloc(9);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32988,a[2]=t1,a[3]=t3,a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32998,a[2]=t2,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_pairp(t2))){
t6=(C_word)C_i_car(t2);
t7=t5;
f_32998(t7,(C_word)C_i_symbolp(t6));}
else{
t6=t5;
f_32998(t6,C_SCHEME_FALSE);}}

/* k32996 in a32983 in k32974 in k32684 in k31953 in k31950 in k31947 in k31822 in k31819 in k31816 in k31813 in k31810 in k31807 in k31804 in k31801 in k31798 in k31795 in k31792 in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_32998(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[3];
f_32988(2,t2,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 665  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[745],((C_word*)t0)[2]);}}

/* k32986 in a32983 in k32974 in k32684 in k31953 in k31950 in k31947 in k31822 in k31819 in k31816 in k31813 in k31810 in k31807 in k31804 in k31801 in k31798 in k31795 in k31792 in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_32988(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32988,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,lf[744],t2));}

/* k32977 in k32974 in k32684 in k31953 in k31950 in k31947 in k31822 in k31819 in k31816 in k31813 in k31810 in k31807 in k31804 in k31801 in k31798 in k31795 in k31792 in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_32979(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32979,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32982,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 772  return-to-host");
t3=C_retrieve(lf[743]);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k32980 in k32977 in k32974 in k32684 in k31953 in k31950 in k31947 in k31822 in k31819 in k31816 in k31813 in k31810 in k31807 in k31804 in k31801 in k31798 in k31795 in k31792 in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_32982(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}

/* process-code-terminates? in k32684 in k31953 in k31950 in k31947 in k31822 in k31819 in k31816 in k31813 in k31810 in k31807 in k31804 in k31801 in k31798 in k31795 in k31792 in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_32688(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word *a;
loop:
a=C_alloc(5);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_32688,NULL,3,t1,t2,t3);}
if(C_truep((C_word)C_i_nullp(t2))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_FALSE);}
else{
if(C_truep((C_word)C_i_pairp(t2))){
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32704,a[2]=t3,a[3]=t2,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 600  process-code-terminates?");
t8=t4;
t9=t5;
t10=t3;
t1=t8;
t2=t9;
t3=t10;
goto loop;}
else{
t4=(C_word)C_i_car(t3);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_eqp(t2,t4));}}}

/* k32702 in process-code-terminates? in k32684 in k31953 in k31950 in k31947 in k31822 in k31819 in k31816 in k31813 in k31810 in k31807 in k31804 in k31801 in k31798 in k31795 in k31792 in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_32704(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,t1);}
else{
t2=(C_word)C_i_cdr(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 601  process-code-terminates?");
f_32688(((C_word*)t0)[4],t2,((C_word*)t0)[2]);}}

/* run-while-until in k31953 in k31950 in k31947 in k31822 in k31819 in k31816 in k31813 in k31810 in k31807 in k31804 in k31801 in k31798 in k31795 in k31792 in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_32615(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[19],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_32615,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t5)[1];
t7=(C_word)C_i_car(((C_word*)t5)[1]);
t8=(C_word)C_i_cdr(((C_word*)t5)[1]);
t9=C_set_block_item(t5,0,t8);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_32626,a[2]=t7,a[3]=t11,a[4]=t5,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t5)[1]))){
C_trace("ChickenBridge.scm: 568  loop-error");
f_23702(t12,t4,t6,(C_word)C_a_i_list(&a,3,lf[739],t7,lf[740]));}
else{
t13=t12;
f_32626(2,t13,C_SCHEME_UNDEFINED);}}

/* k32624 in run-while-until in k31953 in k31950 in k31947 in k31822 in k31819 in k31816 in k31813 in k31810 in k31807 in k31804 in k31801 in k31798 in k31795 in k31792 in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_32626(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32626,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_32629,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[2],lf[615]);
if(C_truep(t3)){
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t8=t2;
f_32629(t8,t7);}
else{
t4=(C_word)C_eqp(((C_word*)t0)[2],lf[616]);
if(C_truep(t4)){
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[4])+1,t6);
t8=(C_word)C_a_i_list(&a,2,lf[389],t5);
t9=C_mutate(((C_word *)((C_word*)t0)[3])+1,t8);
t10=t2;
f_32629(t10,t9);}
else{
t5=t2;
f_32629(t5,C_SCHEME_UNDEFINED);}}}

/* k32627 in k32624 in run-while-until in k31953 in k31950 in k31947 in k31822 in k31819 in k31816 in k31813 in k31810 in k31807 in k31804 in k31801 in k31798 in k31795 in k31792 in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_32629(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32629,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32636,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_list(&a,3,lf[20],((C_word*)((C_word*)t0)[3])[1],C_retrieve2(lf[736],"*process-stop*"));
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 572  make-loop-clause");
f_23462(t2,(C_word)C_a_i_list(&a,4,lf[470],((C_word*)t0)[2],lf[475],t4));}

/* k32634 in k32627 in k32624 in run-while-until in k31953 in k31950 in k31947 in k31822 in k31819 in k31816 in k31813 in k31810 in k31807 in k31804 in k31801 in k31798 in k31795 in k31792 in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_32636(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 572  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* hush in k31953 in k31950 in k31947 in k31822 in k31819 in k31816 in k31813 in k31810 in k31807 in k31804 in k31801 in k31798 in k31795 in k31792 in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_32605(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32605,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32609,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32260,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("##sys#gc");
t4=C_retrieve(lf[717]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,C_SCHEME_FALSE);}

/* k32258 in hush in k31953 in k31950 in k31947 in k31822 in k31819 in k31816 in k31813 in k31810 in k31807 in k31804 in k31801 in k31798 in k31795 in k31792 in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_32260(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32260,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub5851,a[2]=((C_word)li542),tmp=(C_word)a,a+=3,tmp);
((C_proc3)C_retrieve_proc(t3))(3,t3,((C_word*)t0)[2],t2);}

/* k32607 in hush in k31953 in k31950 in k31947 in k31822 in k31819 in k31816 in k31813 in k31810 in k31807 in k31804 in k31801 in k31798 in k31795 in k31792 in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_32609(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 553  values");
C_values(2,0,((C_word*)t0)[2]);}

/* stop in k31953 in k31950 in k31947 in k31822 in k31819 in k31816 in k31813 in k31810 in k31807 in k31804 in k31801 in k31798 in k31795 in k31792 in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_32547(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+9)){
C_save_and_reclaim((void*)tr2r,(void*)f_32547r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_32547r(t0,t1,t2);}}

static void C_ccall f_32547r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a=C_alloc(9);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32551,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 543  scheduler-stop");
f_32243(t3,C_fix(-1));}
else{
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32565,a[2]=t5,a[3]=((C_word)li540),tmp=(C_word)a,a+=4,tmp));
t7=((C_word*)t5)[1];
f_32565(t7,t3,t2);}}

/* do5909 in stop in k31953 in k31950 in k31947 in k31822 in k31819 in k31816 in k31813 in k31810 in k31807 in k31804 in k31801 in k31798 in k31795 in k31792 in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_32565(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32565,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32575,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
if(C_truep((C_word)C_fixnump(t4))){
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 547  scheduler-stop");
f_32243(t3,t5);}
else{
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 548  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t3,lf[734],t5);}}}

/* k32573 in do5909 in stop in k31953 in k31950 in k31947 in k31822 in k31819 in k31816 in k31813 in k31810 in k31807 in k31804 in k31801 in k31798 in k31795 in k31792 in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_32575(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_32565(t3,((C_word*)t0)[2],t2);}

/* k32549 in stop in k31953 in k31950 in k31947 in k31822 in k31819 in k31816 in k31813 in k31810 in k31807 in k31804 in k31801 in k31798 in k31795 in k31792 in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_32551(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 549  values");
C_values(2,0,((C_word*)t0)[2]);}

/* cont in k31953 in k31950 in k31947 in k31822 in k31819 in k31816 in k31813 in k31810 in k31807 in k31804 in k31801 in k31798 in k31795 in k31792 in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_32538(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32538,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32542,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32238,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("##sys#gc");
t4=C_retrieve(lf[717]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,C_SCHEME_FALSE);}

/* k32236 in cont in k31953 in k31950 in k31947 in k31822 in k31819 in k31816 in k31813 in k31810 in k31807 in k31804 in k31801 in k31798 in k31795 in k31792 in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_32238(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32238,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub5841,a[2]=((C_word)li538),tmp=(C_word)a,a+=3,tmp);
((C_proc3)C_retrieve_proc(t3))(3,t3,((C_word*)t0)[2],t2);}

/* k32540 in cont in k31953 in k31950 in k31947 in k31822 in k31819 in k31816 in k31813 in k31810 in k31807 in k31804 in k31801 in k31798 in k31795 in k31792 in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_32542(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 539  values");
C_values(2,0,((C_word*)t0)[2]);}

/* paused? in k31953 in k31950 in k31947 in k31822 in k31819 in k31816 in k31813 in k31810 in k31807 in k31804 in k31801 in k31798 in k31795 in k31792 in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_32532(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32532,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32220,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("##sys#gc");
t3=C_retrieve(lf[717]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,C_SCHEME_FALSE);}

/* k32218 in paused? in k31953 in k31950 in k31947 in k31822 in k31819 in k31816 in k31813 in k31810 in k31807 in k31804 in k31801 in k31798 in k31795 in k31792 in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_32220(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32220,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub5833,a[2]=((C_word)li536),tmp=(C_word)a,a+=3,tmp);
((C_proc3)C_retrieve_proc(t3))(3,t3,((C_word*)t0)[2],t2);}

/* pause in k31953 in k31950 in k31947 in k31822 in k31819 in k31816 in k31813 in k31810 in k31807 in k31804 in k31801 in k31798 in k31795 in k31792 in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_32523(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32523,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32527,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32229,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("##sys#gc");
t4=C_retrieve(lf[717]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,C_SCHEME_FALSE);}

/* k32227 in pause in k31953 in k31950 in k31947 in k31822 in k31819 in k31816 in k31813 in k31810 in k31807 in k31804 in k31801 in k31798 in k31795 in k31792 in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_32229(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32229,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub5837,a[2]=((C_word)li534),tmp=(C_word)a,a+=3,tmp);
((C_proc3)C_retrieve_proc(t3))(3,t3,((C_word*)t0)[2],t2);}

/* k32525 in pause in k31953 in k31950 in k31947 in k31822 in k31819 in k31816 in k31813 in k31810 in k31807 in k31804 in k31801 in k31798 in k31795 in k31792 in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_32527(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 532  values");
C_values(2,0,((C_word*)t0)[2]);}

/* time-format in k31953 in k31950 in k31947 in k31822 in k31819 in k31816 in k31813 in k31810 in k31807 in k31804 in k31801 in k31798 in k31795 in k31792 in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_32460(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+11)){
C_save_and_reclaim((void*)tr2rv,(void*)f_32460r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest_vector(a,C_rest_count(0));
f_32460r(t0,t1,t2);}}

static void C_ccall f_32460r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(11);
if(C_truep((C_word)C_vemptyp(t2))){
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32473,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32185,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
C_trace("##sys#gc");
t5=C_retrieve(lf[717]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,C_SCHEME_FALSE);}
else{
t3=(C_word)C_i_vector_ref(t2,C_fix(0));
t4=(C_word)C_i_eqvp(t3,lf[726]);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32485,a[2]=t2,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
if(C_truep(t4)){
t6=t5;
f_32485(t6,t4);}
else{
t6=(C_word)C_eqp(t3,C_fix(1));
t7=t5;
f_32485(t7,(C_truep(t6)?t6:(C_word)C_eqp(t3,lf[729])));}}}

/* k32483 in time-format in k31953 in k31950 in k31947 in k31822 in k31819 in k31816 in k31813 in k31810 in k31807 in k31804 in k31801 in k31798 in k31795 in k31792 in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_32485(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
if(C_truep(t1)){
t2=C_mutate((C_word*)lf[723]+1,C_retrieve(lf[715]));
C_trace("ChickenBridge.scm: 521  scheduler-set-time-milliseconds");
f_32190(((C_word*)t0)[4],C_SCHEME_FALSE);}
else{
t2=(C_word)C_eqp(((C_word*)t0)[3],C_fix(1000));
t3=(C_truep(t2)?t2:(C_word)C_eqp(((C_word*)t0)[3],lf[727]));
if(C_truep(t3)){
t4=C_mutate((C_word*)lf[723]+1,C_retrieve(lf[714]));
C_trace("ChickenBridge.scm: 525  scheduler-set-time-milliseconds");
f_32190(((C_word*)t0)[4],C_SCHEME_TRUE);}
else{
t4=(C_word)C_i_vector_ref(((C_word*)t0)[2],C_fix(0));
C_trace("ChickenBridge.scm: 528  error");
t5=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,((C_word*)t0)[4],lf[728],t4);}}}

/* k32183 in time-format in k31953 in k31950 in k31947 in k31822 in k31819 in k31816 in k31813 in k31810 in k31807 in k31804 in k31801 in k31798 in k31795 in k31792 in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_32185(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32185,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub5813,a[2]=((C_word)li532),tmp=(C_word)a,a+=3,tmp);
((C_proc3)C_retrieve_proc(t3))(3,t3,((C_word*)t0)[2],t2);}

/* k32471 in time-format in k31953 in k31950 in k31947 in k31822 in k31819 in k31816 in k31813 in k31810 in k31807 in k31804 in k31801 in k31798 in k31795 in k31792 in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_32473(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_truep(t1)?C_fix(1000):lf[725]));}

/* sprout in k31953 in k31950 in k31947 in k31822 in k31819 in k31816 in k31813 in k31810 in k31807 in k31804 in k31801 in k31798 in k31795 in k31792 in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_32284(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+12)){
C_save_and_reclaim((void*)tr3r,(void*)f_32284r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_32284r(t0,t1,t2,t3);}}

static void C_ccall f_32284r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a=C_alloc(12);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32286,a[2]=t2,a[3]=((C_word)li528),tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32406,a[2]=t4,a[3]=((C_word)li529),tmp=(C_word)a,a+=4,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32411,a[2]=t5,a[3]=((C_word)li530),tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("def-start58685889");
t7=t6;
f_32411(t7,t1);}
else{
t7=(C_word)C_i_car(t3);
t8=(C_word)C_i_cdr(t3);
if(C_truep((C_word)C_i_nullp(t8))){
C_trace("def-id58695887");
t9=t5;
f_32406(t9,t1,t7);}
else{
t9=(C_word)C_i_car(t8);
t10=(C_word)C_i_cdr(t8);
if(C_truep((C_word)C_i_nullp(t10))){
C_trace("body58665871");
t11=t4;
f_32286(t11,t1,t7,t9);}
else{
C_trace("##sys#error");
t11=*((C_word*)lf[721]+1);
((C_proc4)(void*)(*((C_word*)t11+1)))(4,t11,t1,lf[722],t10);}}}}

/* def-start5868 in sprout in k31953 in k31950 in k31947 in k31822 in k31819 in k31816 in k31813 in k31810 in k31807 in k31804 in k31801 in k31798 in k31795 in k31792 in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_32411(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32411,NULL,2,t0,t1);}
C_trace("def-id58695887");
t2=((C_word*)t0)[2];
f_32406(t2,t1,C_fix(0));}

/* def-id5869 in sprout in k31953 in k31950 in k31947 in k31822 in k31819 in k31816 in k31813 in k31810 in k31807 in k31804 in k31801 in k31798 in k31795 in k31792 in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_32406(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32406,NULL,3,t0,t1,t2);}
C_trace("body58665871");
t3=((C_word*)t0)[2];
f_32286(t3,t1,t2,C_fix(-1));}

/* body5866 in sprout in k31953 in k31950 in k31947 in k31822 in k31819 in k31816 in k31813 in k31810 in k31807 in k31804 in k31801 in k31798 in k31795 in k31792 in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_32286(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32286,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32288,a[2]=t4,a[3]=((C_word)li525),tmp=(C_word)a,a+=4,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32316,a[2]=t5,a[3]=((C_word)li526),tmp=(C_word)a,a+=4,tmp);
t8=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32346,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t0)[2]))){
t9=C_SCHEME_UNDEFINED;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_set_block_item(t10,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32357,a[2]=t6,a[3]=t7,a[4]=t10,a[5]=((C_word*)t0)[2],a[6]=((C_word)li527),tmp=(C_word)a,a+=7,tmp));
t12=((C_word*)t10)[1];
f_32357(t12,t8,((C_word*)t0)[2]);}
else{
t9=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32393,a[2]=((C_word*)t0)[2],a[3]=t8,tmp=(C_word)a,a+=4,tmp);
t10=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32405,a[2]=t7,a[3]=((C_word*)t0)[2],a[4]=t9,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 505  nextstart");
t11=t6;
f_32288(t11,t10);}}

/* k32403 in body5866 in sprout in k31953 in k31950 in k31947 in k31822 in k31819 in k31816 in k31813 in k31810 in k31807 in k31804 in k31801 in k31798 in k31795 in k31792 in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_32405(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32405,2,t0,t1);}
t2=(C_word)C_a_i_times(&a,2,t1,C_fix(1000));
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32401,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 505  nextid");
t4=((C_word*)t0)[2];
f_32316(t4,t3);}

/* k32399 in k32403 in body5866 in sprout in k31953 in k31950 in k31947 in k31822 in k31819 in k31816 in k31813 in k31810 in k31807 in k31804 in k31801 in k31798 in k31795 in k31792 in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_32401(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 505  scheduler-sprout");
f_32199(((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k32391 in body5866 in sprout in k31953 in k31950 in k31947 in k31822 in k31819 in k31816 in k31813 in k31810 in k31807 in k31804 in k31801 in k31798 in k31795 in k31792 in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_32393(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_32346(2,t2,((C_word*)t0)[2]);}

/* do5880 in body5866 in sprout in k31953 in k31950 in k31947 in k31822 in k31819 in k31816 in k31813 in k31810 in k31807 in k31804 in k31801 in k31798 in k31795 in k31792 in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_32357(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32357,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)t0)[5]);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32367,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32390,a[2]=((C_word*)t0)[3],a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 502  nextstart");
t6=((C_word*)t0)[2];
f_32288(t6,t5);}}

/* k32388 in do5880 in body5866 in sprout in k31953 in k31950 in k31947 in k31822 in k31819 in k31816 in k31813 in k31810 in k31807 in k31804 in k31801 in k31798 in k31795 in k31792 in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_32390(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32390,2,t0,t1);}
t2=(C_word)C_a_i_times(&a,2,t1,C_fix(1000));
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32386,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 503  nextid");
t4=((C_word*)t0)[2];
f_32316(t4,t3);}

/* k32384 in k32388 in do5880 in body5866 in sprout in k31953 in k31950 in k31947 in k31822 in k31819 in k31816 in k31813 in k31810 in k31807 in k31804 in k31801 in k31798 in k31795 in k31792 in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_32386(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 502  scheduler-sprout");
f_32199(((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k32365 in do5880 in body5866 in sprout in k31953 in k31950 in k31947 in k31822 in k31819 in k31816 in k31813 in k31810 in k31807 in k31804 in k31801 in k31798 in k31795 in k31792 in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_32367(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_32357(t3,((C_word*)t0)[2],t2);}

/* k32344 in body5866 in sprout in k31953 in k31950 in k31947 in k31822 in k31819 in k31816 in k31813 in k31810 in k31807 in k31804 in k31801 in k31798 in k31795 in k31792 in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_32346(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 509  values");
C_values(2,0,((C_word*)t0)[2]);}

/* nextid in body5866 in sprout in k31953 in k31950 in k31947 in k31822 in k31819 in k31816 in k31813 in k31810 in k31807 in k31804 in k31801 in k31798 in k31795 in k31792 in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_32316(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32316,NULL,2,t0,t1);}
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[2])[1]))){
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t4=(C_word)C_i_nullp(t3);
t5=(C_truep(t4)?(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]):(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]));
t6=C_mutate(((C_word *)((C_word*)t0)[2])+1,t5);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,t2);}
else{
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}}

/* nextstart in body5866 in sprout in k31953 in k31950 in k31947 in k31822 in k31819 in k31816 in k31813 in k31810 in k31807 in k31804 in k31801 in k31798 in k31795 in k31792 in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_32288(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32288,NULL,2,t0,t1);}
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[2])[1]))){
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t4=(C_word)C_i_nullp(t3);
t5=(C_truep(t4)?(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]):(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]));
t6=C_mutate(((C_word *)((C_word*)t0)[2])+1,t5);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,t2);}
else{
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}}

/* load-sal-file in k31953 in k31950 in k31947 in k31822 in k31819 in k31816 in k31813 in k31810 in k31807 in k31804 in k31801 in k31798 in k31795 in k31792 in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_32265(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_32265,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32270,a[2]=((C_word)li523),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t3+1)))(3,t3,t1,t2);}

/* f_32270 in load-sal-file in k31953 in k31950 in k31947 in k31822 in k31819 in k31816 in k31813 in k31810 in k31807 in k31804 in k31801 in k31798 in k31795 in k31792 in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_32270(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_32270,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32275,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep(t2)){
t4=(C_word)C_i_foreign_string_argumentp(t2);
C_trace("##sys#make-c-string");
t5=C_retrieve(lf[46]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}
else{
t4=t3;
f_32275(2,t4,C_SCHEME_FALSE);}}

/* k32273 */
static void C_ccall f_32275(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub5857(C_SCHEME_UNDEFINED,t1));}

/* scheduler-stop in k31953 in k31950 in k31947 in k31822 in k31819 in k31816 in k31813 in k31810 in k31807 in k31804 in k31801 in k31798 in k31795 in k31792 in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_32243(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32243,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32247,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("##sys#gc");
t4=C_retrieve(lf[717]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,C_SCHEME_FALSE);}

/* k32245 in scheduler-stop in k31953 in k31950 in k31947 in k31822 in k31819 in k31816 in k31813 in k31810 in k31807 in k31804 in k31801 in k31798 in k31795 in k31792 in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_32247(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32247,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(C_word)C_i_foreign_fixnum_argumentp(((C_word*)t0)[3]);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub5846,a[2]=((C_word)li521),tmp=(C_word)a,a+=3,tmp);
((C_proc4)C_retrieve_proc(t4))(4,t4,((C_word*)t0)[2],t2,t3);}

/* scheduler-sprout in k31953 in k31950 in k31947 in k31822 in k31819 in k31816 in k31813 in k31810 in k31807 in k31804 in k31801 in k31798 in k31795 in k31792 in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_32199(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32199,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_32203,a[2]=t2,a[3]=t1,a[4]=t4,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
C_trace("##sys#gc");
t6=C_retrieve(lf[717]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,C_SCHEME_FALSE);}

/* k32201 in scheduler-sprout in k31953 in k31950 in k31947 in k31822 in k31819 in k31816 in k31813 in k31810 in k31807 in k31804 in k31801 in k31798 in k31795 in k31792 in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_32203(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32203,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(C_word)C_i_foreign_flonum_argumentp(((C_word*)t0)[5]);
t4=(C_word)C_i_foreign_fixnum_argumentp(((C_word*)t0)[4]);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub5826,a[2]=((C_word)li519),tmp=(C_word)a,a+=3,tmp);
((C_proc6)C_retrieve_proc(t5))(6,t5,((C_word*)t0)[3],t2,((C_word*)t0)[2],t3,t4);}

/* scheduler-set-time-milliseconds in k31953 in k31950 in k31947 in k31822 in k31819 in k31816 in k31813 in k31810 in k31807 in k31804 in k31801 in k31798 in k31795 in k31792 in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_32190(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32190,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32194,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("##sys#gc");
t4=C_retrieve(lf[717]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,C_SCHEME_FALSE);}

/* k32192 in scheduler-set-time-milliseconds in k31953 in k31950 in k31947 in k31822 in k31819 in k31816 in k31813 in k31810 in k31807 in k31804 in k31801 in k31798 in k31795 in k31792 in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_32194(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32194,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub5818,a[2]=((C_word)li517),tmp=(C_word)a,a+=3,tmp);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],t2,((C_word*)t0)[2]);}

/* current-time-seconds in k31953 in k31950 in k31947 in k31822 in k31819 in k31816 in k31813 in k31810 in k31807 in k31804 in k31801 in k31798 in k31795 in k31792 in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_32178(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32178,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub5810(t2));}

/* current-time-milliseconds in k31953 in k31950 in k31947 in k31822 in k31819 in k31816 in k31813 in k31810 in k31807 in k31804 in k31801 in k31798 in k31795 in k31792 in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_32175(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32175,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub5807(t2));}

/* print-error in k31953 in k31950 in k31947 in k31822 in k31819 in k31816 in k31813 in k31810 in k31807 in k31804 in k31801 in k31798 in k31795 in k31792 in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_32161(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_32161,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32166,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep(t2)){
t4=(C_word)C_i_foreign_string_argumentp(t2);
C_trace("##sys#make-c-string");
t5=C_retrieve(lf[46]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}
else{
t4=t3;
f_32166(2,t4,C_SCHEME_FALSE);}}

/* k32164 in print-error in k31953 in k31950 in k31947 in k31822 in k31819 in k31816 in k31813 in k31810 in k31807 in k31804 in k31801 in k31798 in k31795 in k31792 in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_32166(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub5802(C_SCHEME_UNDEFINED,t1));}

/* print-message in k31953 in k31950 in k31947 in k31822 in k31819 in k31816 in k31813 in k31810 in k31807 in k31804 in k31801 in k31798 in k31795 in k31792 in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_32147(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_32147,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32152,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep(t2)){
t4=(C_word)C_i_foreign_string_argumentp(t2);
C_trace("##sys#make-c-string");
t5=C_retrieve(lf[46]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}
else{
t4=t3;
f_32152(2,t4,C_SCHEME_FALSE);}}

/* k32150 in print-message in k31953 in k31950 in k31947 in k31822 in k31819 in k31816 in k31813 in k31810 in k31807 in k31804 in k31801 in k31798 in k31795 in k31792 in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_32152(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub5796(C_SCHEME_UNDEFINED,t1));}

/* cm-logo in k31953 in k31950 in k31947 in k31822 in k31819 in k31816 in k31813 in k31810 in k31807 in k31804 in k31801 in k31798 in k31795 in k31792 in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_31957(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_31957,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32011,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32018,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 398  make-string");
t5=*((C_word*)lf[338]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,C_fix(15));}

/* k32016 in cm-logo in k31953 in k31950 in k31947 in k31822 in k31819 in k31816 in k31813 in k31810 in k31807 in k31804 in k31801 in k31798 in k31795 in k31792 in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_32018(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32018,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32020,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word)li511),tmp=(C_word)a,a+=5,tmp));
t5=((C_word*)t3)[1];
f_32020(t5,((C_word*)t0)[2],lf[713],t1,C_fix(0));}

/* do5770 in k32016 in cm-logo in k31953 in k31950 in k31947 in k31822 in k31819 in k31816 in k31813 in k31810 in k31807 in k31804 in k31801 in k31798 in k31795 in k31792 in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_32020(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32020,NULL,5,t0,t1,t2,t3,t4);}
if(C_truep((C_word)C_i_nequalp(t4,C_fix(7)))){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_FALSE);}
else{
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32030,a[2]=((C_word*)t0)[2],a[3]=t3,a[4]=t2,a[5]=t1,a[6]=((C_word*)t0)[3],a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nequalp(t4,C_fix(0)))){
C_trace("ChickenBridge.scm: 401  printf");
t6=C_retrieve(lf[404]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,t2);}
else{
t6=t5;
f_32030(2,t6,C_SCHEME_UNDEFINED);}}}

/* k32028 in do5770 in k32016 in cm-logo in k31953 in k31950 in k31947 in k31822 in k31819 in k31816 in k31813 in k31810 in k31807 in k31804 in k31801 in k31798 in k31795 in k31792 in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_32030(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32030,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32033,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32047,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32049,a[2]=t5,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[7],a[6]=((C_word)li510),tmp=(C_word)a,a+=7,tmp));
t7=((C_word*)t5)[1];
f_32049(t7,t3,C_fix(0));}

/* do5784 in k32028 in do5770 in k32016 in cm-logo in k31953 in k31950 in k31947 in k31822 in k31819 in k31816 in k31813 in k31810 in k31807 in k31804 in k31801 in k31798 in k31795 in k31792 in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_32049(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32049,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nequalp(t2,C_fix(15)))){
if(C_truep((C_word)C_i_nequalp(((C_word*)t0)[5],C_fix(3)))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32069,a[2]=((C_word*)t0)[4],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t4=((C_word*)t0)[3];
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_fix(0);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_fix(0);
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_fix(0);
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32004,a[2]=t3,a[3]=t11,a[4]=t9,a[5]=t5,a[6]=t7,tmp=(C_word)a,a+=7,tmp);
t13=(C_word)C_a_i_divide(&a,2,((C_word*)t5)[1],C_fix(10000));
C_trace("ChickenBridge.scm: 390  floor");
t14=*((C_word*)lf[172]+1);
((C_proc3)C_retrieve_proc(t14))(3,t14,t12,t13);}
else{
C_trace("ChickenBridge.scm: 406  string-append");
t3=*((C_word*)lf[164]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t1,((C_word*)t0)[4],lf[712]);}}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_32086,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32089,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_a_i_minus(&a,2,t2,((C_word*)t0)[5]);
C_trace("ChickenBridge.scm: 408  <=");
C_less_or_equal_p(5,0,t4,C_fix(2),t5,C_fix(4));}}

/* k32087 in do5784 in k32028 in do5770 in k32016 in cm-logo in k31953 in k31950 in k31947 in k31822 in k31819 in k31816 in k31813 in k31810 in k31807 in k31804 in k31801 in k31798 in k31795 in k31792 in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_32089(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32089,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_32086(t2,C_make_character(92));}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32131,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_a_i_plus(&a,2,C_fix(13),((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 409  modulo");
t4=*((C_word*)lf[129]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,t3,C_fix(15));}}

/* k32129 in k32087 in do5784 in k32028 in do5770 in k32016 in cm-logo in k31953 in k31950 in k31947 in k31822 in k31819 in k31816 in k31813 in k31810 in k31807 in k31804 in k31801 in k31798 in k31795 in k31792 in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_32131(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32131,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,C_fix(4),t1);
t3=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[4],t2);
if(C_truep((C_word)C_i_nequalp(t3,C_fix(1)))){
t4=((C_word*)t0)[3];
f_32086(t4,C_make_character(47));}
else{
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32101,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 411  <=");
C_less_or_equal_p(5,0,t4,C_fix(1),((C_word*)t0)[2],C_fix(5));}}

/* k32099 in k32129 in k32087 in do5784 in k32028 in do5770 in k32016 in cm-logo in k31953 in k31950 in k31947 in k31822 in k31819 in k31816 in k31813 in k31810 in k31807 in k31804 in k31801 in k31798 in k31795 in k31792 in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_32101(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32101,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_32086(t2,C_make_character(45));}
else{
t2=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[3],C_fix(6));
t3=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[2],C_fix(3));
t4=(C_word)C_a_i_times(&a,2,t2,t3);
t5=(C_word)C_i_nequalp(t4,C_fix(15));
t6=((C_word*)t0)[4];
f_32086(t6,(C_truep(t5)?C_make_character(47):C_make_character(32)));}}

/* k32084 in do5784 in k32028 in do5770 in k32016 in cm-logo in k31953 in k31950 in k31947 in k31822 in k31819 in k31816 in k31813 in k31810 in k31807 in k31804 in k31801 in k31798 in k31795 in k31792 in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_32086(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32086,NULL,2,t0,t1);}
t2=(C_word)C_i_string_set(((C_word*)t0)[5],((C_word*)t0)[4],t1);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t4=((C_word*)((C_word*)t0)[3])[1];
f_32049(t4,((C_word*)t0)[2],t3);}

/* k32002 in do5784 in k32028 in do5770 in k32016 in cm-logo in k31953 in k31950 in k31947 in k31822 in k31819 in k31816 in k31813 in k31810 in k31807 in k31804 in k31801 in k31798 in k31795 in k31792 in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_32004(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32004,2,t0,t1);}
t2=(C_word)C_i_inexact_to_exact(t1);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31969,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 391  modulo");
t5=*((C_word*)lf[129]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,((C_word*)((C_word*)t0)[5])[1],C_fix(10000));}

/* k31967 in k32002 in do5784 in k32028 in do5770 in k32016 in cm-logo in k31953 in k31950 in k31947 in k31822 in k31819 in k31816 in k31813 in k31810 in k31807 in k31804 in k31801 in k31798 in k31795 in k31792 in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_31969(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31969,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31996,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
t4=(C_word)C_a_i_divide(&a,2,((C_word*)((C_word*)t0)[6])[1],C_fix(100));
C_trace("ChickenBridge.scm: 392  floor");
t5=*((C_word*)lf[172]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}

/* k31994 in k31967 in k32002 in do5784 in k32028 in do5770 in k32016 in cm-logo in k31953 in k31950 in k31947 in k31822 in k31819 in k31816 in k31813 in k31810 in k31807 in k31804 in k31801 in k31798 in k31795 in k31792 in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_31996(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31996,2,t0,t1);}
t2=(C_word)C_i_inexact_to_exact(t1);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_31977,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 393  modulo");
t5=*((C_word*)lf[129]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,((C_word*)((C_word*)t0)[2])[1],C_fix(100));}

/* k31975 in k31994 in k31967 in k32002 in do5784 in k32028 in do5770 in k32016 in cm-logo in k31953 in k31950 in k31947 in k31822 in k31819 in k31816 in k31813 in k31810 in k31807 in k31804 in k31801 in k31798 in k31795 in k31792 in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_31977(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31977,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31984,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 394  number->string");
C_number_to_string(3,0,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k31982 in k31975 in k31994 in k31967 in k32002 in do5784 in k32028 in do5770 in k32016 in cm-logo in k31953 in k31950 in k31947 in k31822 in k31819 in k31816 in k31813 in k31810 in k31807 in k31804 in k31801 in k31798 in k31795 in k31792 in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_31984(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31984,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31988,a[2]=((C_word*)t0)[3],a[3]=t1,a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 395  number->string");
C_number_to_string(3,0,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k31986 in k31982 in k31975 in k31994 in k31967 in k32002 in do5784 in k32028 in do5770 in k32016 in cm-logo in k31953 in k31950 in k31947 in k31822 in k31819 in k31816 in k31813 in k31810 in k31807 in k31804 in k31801 in k31798 in k31795 in k31792 in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_31988(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31988,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31992,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 396  number->string");
C_number_to_string(3,0,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k31990 in k31986 in k31982 in k31975 in k31994 in k31967 in k32002 in do5784 in k32028 in do5770 in k32016 in cm-logo in k31953 in k31950 in k31947 in k31822 in k31819 in k31816 in k31813 in k31810 in k31807 in k31804 in k31801 in k31798 in k31795 in k31792 in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_31992(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 394  string-append");
t2=*((C_word*)lf[164]+1);
((C_proc8)C_retrieve_proc(t2))(8,t2,((C_word*)t0)[4],lf[709],((C_word*)t0)[3],lf[710],((C_word*)t0)[2],lf[711],t1);}

/* k32067 in do5784 in k32028 in do5770 in k32016 in cm-logo in k31953 in k31950 in k31947 in k31822 in k31819 in k31816 in k31813 in k31810 in k31807 in k31804 in k31801 in k31798 in k31795 in k31792 in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_32069(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 405  string-append");
t2=*((C_word*)lf[164]+1);
((C_proc6)C_retrieve_proc(t2))(6,t2,((C_word*)t0)[3],((C_word*)t0)[2],lf[707],t1,lf[708]);}

/* k32045 in k32028 in do5770 in k32016 in cm-logo in k31953 in k31950 in k31947 in k31822 in k31819 in k31816 in k31813 in k31810 in k31807 in k31804 in k31801 in k31798 in k31795 in k31792 in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_32047(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 402  printf");
t2=C_retrieve(lf[404]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k32031 in k32028 in do5770 in k32016 in cm-logo in k31953 in k31950 in k31947 in k31822 in k31819 in k31816 in k31813 in k31810 in k31807 in k31804 in k31801 in k31798 in k31795 in k31792 in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_32033(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32033,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32036,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 414  printf");
t3=C_retrieve(lf[404]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[3]);}

/* k32034 in k32031 in k32028 in do5770 in k32016 in cm-logo in k31953 in k31950 in k31947 in k31822 in k31819 in k31816 in k31813 in k31810 in k31807 in k31804 in k31801 in k31798 in k31795 in k31792 in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_32036(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32036,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
t3=((C_word*)((C_word*)t0)[5])[1];
f_32020(t3,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k32009 in cm-logo in k31953 in k31950 in k31947 in k31822 in k31819 in k31816 in k31813 in k31810 in k31807 in k31804 in k31801 in k31798 in k31795 in k31792 in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_32011(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 415  values");
C_values(2,0,((C_word*)t0)[2]);}

/* cs:clear in k31822 in k31819 in k31816 in k31813 in k31810 in k31807 in k31804 in k31801 in k31798 in k31795 in k31792 in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_31940(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31940,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31945,a[2]=((C_word)li508),tmp=(C_word)a,a+=3,tmp);
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,t1);}

/* f_31945 in cs:clear in k31822 in k31819 in k31816 in k31813 in k31810 in k31807 in k31804 in k31801 in k31798 in k31795 in k31792 in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_31945(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31945,2,t0,t1);}
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub5762(C_SCHEME_UNDEFINED));}

/* cs:f in k31822 in k31819 in k31816 in k31813 in k31810 in k31807 in k31804 in k31801 in k31798 in k31795 in k31792 in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_31883(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+13)){
C_save_and_reclaim((void*)tr2r,(void*)f_31883r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_31883r(t0,t1,t2);}}

static void C_ccall f_31883r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(13);
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31887,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t3)[1]))){
t5=t4;
f_31887(2,t5,C_SCHEME_UNDEFINED);}
else{
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31896,a[2]=t4,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31916,a[2]=t5,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_cdr(((C_word*)t3)[1]);
if(C_truep((C_word)C_i_nullp(t7))){
t8=(C_word)C_i_car(((C_word*)t3)[1]);
t9=t6;
f_31916(t9,(C_word)C_i_pairp(t8));}
else{
t8=t6;
f_31916(t8,C_SCHEME_FALSE);}}}

/* k31914 in cs:f in k31822 in k31819 in k31816 in k31813 in k31810 in k31807 in k31804 in k31801 in k31798 in k31795 in k31792 in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_31916(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_31896(t4,t3);}
else{
t2=((C_word*)t0)[2];
f_31896(t2,C_SCHEME_UNDEFINED);}}

/* k31894 in cs:f in k31822 in k31819 in k31816 in k31813 in k31810 in k31807 in k31804 in k31801 in k31798 in k31795 in k31792 in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_31896(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31896,NULL,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[3])[1]);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31904,a[2]=((C_word)li506),tmp=(C_word)a,a+=3,tmp);
((C_proc5)(void*)(*((C_word*)t3+1)))(5,t3,((C_word*)t0)[2],C_fix(2),t2,((C_word*)((C_word*)t0)[3])[1]);}

/* f_31904 in k31894 in cs:f in k31822 in k31819 in k31816 in k31813 in k31810 in k31807 in k31804 in k31801 in k31798 in k31795 in k31792 in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_31904(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_31904,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_i_foreign_fixnum_argumentp(t2);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)stub5755(C_SCHEME_UNDEFINED,t5,t6,t4));}

/* k31885 in cs:f in k31822 in k31819 in k31816 in k31813 in k31810 in k31807 in k31804 in k31801 in k31798 in k31795 in k31792 in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_31887(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 382  values");
C_values(2,0,((C_word*)t0)[2]);}

/* cs:i in k31822 in k31819 in k31816 in k31813 in k31810 in k31807 in k31804 in k31801 in k31798 in k31795 in k31792 in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_31826(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+13)){
C_save_and_reclaim((void*)tr2r,(void*)f_31826r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_31826r(t0,t1,t2);}}

static void C_ccall f_31826r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(13);
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31830,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t3)[1]))){
t5=t4;
f_31830(2,t5,C_SCHEME_UNDEFINED);}
else{
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31839,a[2]=t4,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31859,a[2]=t5,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_cdr(((C_word*)t3)[1]);
if(C_truep((C_word)C_i_nullp(t7))){
t8=(C_word)C_i_car(((C_word*)t3)[1]);
t9=t6;
f_31859(t9,(C_word)C_i_pairp(t8));}
else{
t8=t6;
f_31859(t8,C_SCHEME_FALSE);}}}

/* k31857 in cs:i in k31822 in k31819 in k31816 in k31813 in k31810 in k31807 in k31804 in k31801 in k31798 in k31795 in k31792 in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_31859(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_31839(t4,t3);}
else{
t2=((C_word*)t0)[2];
f_31839(t2,C_SCHEME_UNDEFINED);}}

/* k31837 in cs:i in k31822 in k31819 in k31816 in k31813 in k31810 in k31807 in k31804 in k31801 in k31798 in k31795 in k31792 in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_31839(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31839,NULL,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[3])[1]);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31847,a[2]=((C_word)li504),tmp=(C_word)a,a+=3,tmp);
((C_proc5)(void*)(*((C_word*)t3+1)))(5,t3,((C_word*)t0)[2],C_fix(1),t2,((C_word*)((C_word*)t0)[3])[1]);}

/* f_31847 in k31837 in cs:i in k31822 in k31819 in k31816 in k31813 in k31810 in k31807 in k31804 in k31801 in k31798 in k31795 in k31792 in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_31847(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_31847,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_i_foreign_fixnum_argumentp(t2);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)stub5744(C_SCHEME_UNDEFINED,t5,t6,t4));}

/* k31828 in cs:i in k31822 in k31819 in k31816 in k31813 in k31810 in k31807 in k31804 in k31801 in k31798 in k31795 in k31792 in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_31830(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 382  values");
C_values(2,0,((C_word*)t0)[2]);}

/* mp:inhook in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_31736(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_31736,3,t0,t1,t2);}
if(C_truep((C_word)C_i_closurep(t2))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31748,a[2]=t2,a[3]=((C_word)li500),tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31785,a[2]=((C_word)li501),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t4+1)))(3,t4,t1,t3);}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31790,a[2]=((C_word)li502),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t3+1)))(3,t3,t1,C_SCHEME_FALSE);}}

/* f_31790 in mp:inhook in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_31790(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_31790,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub5688(C_SCHEME_UNDEFINED,t2));}

/* f_31785 in mp:inhook in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_31785(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_31785,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub5679(C_SCHEME_UNDEFINED,t2));}

/* a31747 in mp:inhook in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_31748(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_31748,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31754,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word)li499),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 381  call-with-current-continuation");
t4=*((C_word*)lf[702]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t1,t3);}

/* a31753 in a31747 in mp:inhook in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_31754(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_31754,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31760,a[2]=t2,a[3]=((C_word)li497),tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31780,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word)li498),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 381  with-exception-handler");
t5=C_retrieve(lf[701]);
((C_proc4)C_retrieve_proc(t5))(4,t5,t1,t3,t4);}

/* a31779 in a31753 in a31747 in mp:inhook in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_31780(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31780,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31784,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 381  %hook");
t3=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k31782 in a31779 in a31753 in a31747 in mp:inhook in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_31784(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_fix(0));}

/* a31759 in a31753 in a31747 in mp:inhook in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_31760(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[14],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_31760,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31764,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31771,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31775,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31778,a[2]=t2,a[3]=t5,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 381  condition-property-accessor");
t7=C_retrieve(lf[698]);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[699],lf[700]);}

/* k31776 in a31759 in a31753 in a31747 in mp:inhook in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_31778(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=t1;
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k31773 in a31759 in a31753 in a31747 in mp:inhook in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_31775(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 381  sprintf");
t2=C_retrieve(lf[31]);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],lf[697],t1);}

/* k31769 in a31759 in a31753 in a31747 in mp:inhook in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_31771(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 381  print-error");
t2=C_retrieve(lf[426]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k31762 in a31759 in a31753 in a31747 in mp:inhook in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_31764(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 381  %cont");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],C_fix(-1));}

/* mp:mm in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_31721(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_31721,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31726,a[2]=((C_word)li495),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t3+1)))(3,t3,t1,t2);}

/* f_31726 in mp:mm in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_31726(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_31726,3,t0,t1,t2);}
t3=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub5672(C_SCHEME_UNDEFINED,t3));}

/* mp:bend in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_31693(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word ab[3],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_31693,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31698,a[2]=((C_word)li493),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t5+1)))(7,t5,t1,C_fix(14),t2,t4,t3,C_fix(0));}

/* f_31698 in mp:bend in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_31698(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_31698,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub5663(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:press in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_31665(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word ab[3],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_31665,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31670,a[2]=((C_word)li491),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t5+1)))(7,t5,t1,C_fix(13),t2,t4,t3,C_fix(0));}

/* f_31670 in mp:press in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_31670(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_31670,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub5648(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:prog in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_31637(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word ab[3],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_31637,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31642,a[2]=((C_word)li489),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t5+1)))(7,t5,t1,C_fix(12),t2,t4,t3,C_fix(0));}

/* f_31642 in mp:prog in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_31642(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_31642,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub5633(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:ctrl in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_31609(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word ab[3],*a=ab;
if(c!=6) C_bad_argc_2(c,6,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr6,(void*)f_31609,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31614,a[2]=((C_word)li487),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t6+1)))(7,t6,t1,C_fix(11),t2,t5,t3,t4);}

/* f_31614 in mp:ctrl in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_31614(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_31614,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub5618(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:touch in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_31581(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word ab[3],*a=ab;
if(c!=6) C_bad_argc_2(c,6,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr6,(void*)f_31581,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31586,a[2]=((C_word)li485),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t6+1)))(7,t6,t1,C_fix(10),t2,t5,t3,t4);}

/* f_31586 in mp:touch in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_31586(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_31586,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub5602(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:on in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_31553(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word ab[3],*a=ab;
if(c!=6) C_bad_argc_2(c,6,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr6,(void*)f_31553,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31558,a[2]=((C_word)li483),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t6+1)))(7,t6,t1,C_fix(9),t2,t5,t3,t4);}

/* f_31558 in mp:on in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_31558(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_31558,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub5586(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:off in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_31525(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word ab[3],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_31525,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31530,a[2]=((C_word)li481),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t5+1)))(7,t5,t1,C_fix(8),t2,t4,t3,C_fix(0));}

/* f_31530 in mp:off in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_31530(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_31530,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub5570(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:midi in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_31497(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word ab[3],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_31497,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31502,a[2]=((C_word)li479),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t7+1)))(7,t7,t1,t2,t3,t4,t5,t6);}

/* f_31502 in mp:midi in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_31502(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_31502,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_flonum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub5555(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:note in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_31469(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word ab[3],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_31469,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31474,a[2]=((C_word)li477),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t7+1)))(7,t7,t1,t2,t3,t4,t5,t6);}

/* f_31474 in mp:note in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_31474(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_31474,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_flonum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub5538(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mm:num-set! in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_31446(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_31446,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31450,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31451,a[2]=((C_word)li475),tmp=(C_word)a,a+=3,tmp);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t4,t2,C_fix(1),t3);}

/* f_31451 in mm:num-set! in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_31451(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_31451,5,t0,t1,t2,t3,t4);}
t5=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=(C_word)C_i_foreign_fixnum_argumentp(t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)stub5520(C_SCHEME_UNDEFINED,t5,t6,t7));}

/* k31448 in mm:num-set! in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_31450(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* mm:num in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_31427(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_31427,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31432,a[2]=((C_word)li473),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(1));}

/* f_31432 in mm:num in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_31432(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_31432,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub5509(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:val-set! in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_31372(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_31372,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31376,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31379,a[2]=t3,a[3]=t2,a[4]=t4,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 381  mm:type?");
t6=C_retrieve(lf[681]);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,t2,C_fix(11));}

/* k31377 in mm:val-set! in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_31379(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31379,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31382,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
if(C_truep(t1)){
t3=t2;
f_31382(2,t3,t1);}
else{
C_trace("ChickenBridge.scm: 381  mm:type?");
t3=C_retrieve(lf[681]);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)t0)[3],C_fix(10));}}

/* k31380 in k31377 in mm:val-set! in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_31382(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31382,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31386,a[2]=((C_word)li470),tmp=(C_word)a,a+=3,tmp);
((C_proc5)(void*)(*((C_word*)t2+1)))(5,t2,((C_word*)t0)[4],((C_word*)t0)[3],C_fix(2),((C_word*)t0)[2]);}
else{
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31406,a[2]=((C_word)li471),tmp=(C_word)a,a+=3,tmp);
((C_proc5)(void*)(*((C_word*)t2+1)))(5,t2,((C_word*)t0)[4],((C_word*)t0)[3],C_fix(1),C_retrieve(lf[683]));}}

/* f_31406 in k31380 in k31377 in mm:val-set! in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_31406(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_31406,5,t0,t1,t2,t3,t4);}
t5=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=(C_word)C_i_foreign_fixnum_argumentp(t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)stub5498(C_SCHEME_UNDEFINED,t5,t6,t7));}

/* f_31386 in k31380 in k31377 in mm:val-set! in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_31386(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_31386,5,t0,t1,t2,t3,t4);}
t5=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=(C_word)C_i_foreign_fixnum_argumentp(t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)stub5488(C_SCHEME_UNDEFINED,t5,t6,t7));}

/* k31374 in mm:val-set! in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_31376(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* mm:val in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_31325(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_31325,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31332,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 381  mm:type?");
t4=C_retrieve(lf[681]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,t2,C_fix(11));}

/* k31330 in mm:val in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_31332(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31332,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31335,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
if(C_truep(t1)){
t3=t2;
f_31335(2,t3,t1);}
else{
C_trace("ChickenBridge.scm: 381  mm:type?");
t3=C_retrieve(lf[681]);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)t0)[2],C_fix(10));}}

/* k31333 in k31330 in mm:val in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_31335(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31335,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31339,a[2]=((C_word)li467),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],C_fix(2));}
else{
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31355,a[2]=((C_word)li468),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],C_fix(1));}}

/* f_31355 in k31333 in k31330 in mm:val in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_31355(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_31355,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub5475(C_SCHEME_UNDEFINED,t4,t5));}

/* f_31339 in k31333 in k31330 in mm:val in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_31339(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_31339,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub5467(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:vel-set! in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_31302(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_31302,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31306,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31307,a[2]=((C_word)li465),tmp=(C_word)a,a+=3,tmp);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t4,t2,C_fix(2),t3);}

/* f_31307 in mm:vel-set! in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_31307(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_31307,5,t0,t1,t2,t3,t4);}
t5=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=(C_word)C_i_foreign_fixnum_argumentp(t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)stub5454(C_SCHEME_UNDEFINED,t5,t6,t7));}

/* k31304 in mm:vel-set! in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_31306(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* mm:vel in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_31283(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_31283,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31288,a[2]=((C_word)li463),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(2));}

/* f_31288 in mm:vel in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_31288(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_31288,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub5443(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:key-set! in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_31260(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_31260,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31264,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31265,a[2]=((C_word)li461),tmp=(C_word)a,a+=3,tmp);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t4,t2,C_fix(1),t3);}

/* f_31265 in mm:key-set! in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_31265(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_31265,5,t0,t1,t2,t3,t4);}
t5=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=(C_word)C_i_foreign_fixnum_argumentp(t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)stub5432(C_SCHEME_UNDEFINED,t5,t6,t7));}

/* k31262 in mm:key-set! in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_31264(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* mm:key in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_31241(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_31241,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31246,a[2]=((C_word)li459),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(1));}

/* f_31246 in mm:key in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_31246(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_31246,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub5421(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:chan-set! in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_31222(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_31222,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31226,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31227,a[2]=((C_word)li457),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t4,t2,t3);}

/* f_31227 in mm:chan-set! in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_31227(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_31227,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub5411(C_SCHEME_UNDEFINED,t4,t5));}

/* k31224 in mm:chan-set! in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_31226(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* mm:chan in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_31207(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_31207,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31212,a[2]=((C_word)li455),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t3+1)))(3,t3,t1,t2);}

/* f_31212 in mm:chan in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_31212(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_31212,3,t0,t1,t2);}
t3=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub5402(C_SCHEME_UNDEFINED,t3));}

/* mm:time-set! in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_31188(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_31188,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31192,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31193,a[2]=((C_word)li453),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t4,t2,t3);}

/* f_31193 in mm:time-set! in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_31193(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_31193,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_flonum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub5393(C_SCHEME_UNDEFINED,t4,t5));}

/* k31190 in mm:time-set! in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_31192(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* mm:time in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_31173(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_31173,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31178,a[2]=((C_word)li451),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t3+1)))(3,t3,t1,t2);}

/* f_31178 in mm:time in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_31178(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_31178,3,t0,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub5383(t3,t4));}

/* mm:copy in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_31158(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_31158,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31163,a[2]=((C_word)li449),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t3+1)))(3,t3,t1,t2);}

/* f_31163 in mm:copy in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_31163(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_31163,3,t0,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub5375(t3,t4));}

/* mm:free in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_31140(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_31140,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31144,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31148,a[2]=((C_word)li447),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t4+1)))(3,t4,t3,t2);}

/* f_31148 in mm:free in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_31148(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_31148,3,t0,t1,t2);}
t3=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub5367(C_SCHEME_UNDEFINED,t3));}

/* k31142 in mm:free in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_31144(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 381  values");
C_values(2,0,((C_word*)t0)[2]);}

/* mm:make-bend in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_30670(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+58)){
C_save_and_reclaim((void*)tr2r,(void*)f_30670r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_30670r(t0,t1,t2);}}

static void C_ccall f_30670r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word *a=C_alloc(58);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(8192);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=t2;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_30674,a[2]=t14,a[3]=t12,a[4]=t18,a[5]=t10,a[6]=t2,a[7]=t16,a[8]=t6,a[9]=t8,a[10]=t4,a[11]=t1,tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t16)[1]))){
t20=t19;
f_30674(t20,C_SCHEME_UNDEFINED);}
else{
t20=(C_word)C_i_car(((C_word*)t16)[1]);
t21=(C_word)C_eqp(t20,lf[652]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30999,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t10,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t10)[1])){
C_trace("error");
t23=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[19],lf[652]);}
else{
t23=t22;
f_30999(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t20,lf[660]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31034,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t12,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[19],lf[660]);}
else{
t24=t23;
f_31034(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(C_word)C_eqp(t20,lf[655]);
if(C_truep(t23)){
t24=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31069,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t14,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t25=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[19],lf[655]);}
else{
t25=t24;
f_31069(2,t25,C_SCHEME_UNDEFINED);}}
else{
t24=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_31098,a[2]=t19,a[3]=t10,a[4]=t4,a[5]=t16,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t25=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[10],t2);}
else{
t25=t24;
f_31098(2,t25,C_SCHEME_UNDEFINED);}}}}}}

/* k31096 in mm:make-bend in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_31098(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31098,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31105,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31113,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k31111 in k31096 in mm:make-bend in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_31113(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_31105(2,t2,C_SCHEME_UNDEFINED);}}

/* k31103 in k31096 in mm:make-bend in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_31105(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_30674(t5,t4);}

/* k31067 in mm:make-bend in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_31069(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31069,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31073,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31073(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31071 in k31067 in mm:make-bend in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_31073(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30674(t7,t6);}

/* k31032 in mm:make-bend in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_31034(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31034,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31038,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31038(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31036 in k31032 in mm:make-bend in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_31038(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30674(t7,t6);}

/* k30997 in mm:make-bend in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_30999(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30999,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31003,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31003(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31001 in k30997 in mm:make-bend in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_31003(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30674(t7,t6);}

/* k30672 in mm:make-bend in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_30674(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[42],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30674,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_30677,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_30677(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[652]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30864,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[652]);}
else{
t6=t5;
f_30864(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[660]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30899,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[660]);}
else{
t7=t6;
f_30899(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[655]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30934,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[655]);}
else{
t8=t7;
f_30934(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_30963,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_30963(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k30961 in k30672 in mm:make-bend in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_30963(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30963,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30970,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30978,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k30976 in k30961 in k30672 in mm:make-bend in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_30978(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_30970(2,t2,C_SCHEME_UNDEFINED);}}

/* k30968 in k30961 in k30672 in mm:make-bend in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_30970(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_30677(t5,t4);}

/* k30932 in k30672 in mm:make-bend in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_30934(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30934,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30938,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30938(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30936 in k30932 in k30672 in mm:make-bend in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_30938(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30677(t7,t6);}

/* k30897 in k30672 in mm:make-bend in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_30899(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30899,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30903,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30903(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30901 in k30897 in k30672 in mm:make-bend in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_30903(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30677(t7,t6);}

/* k30862 in k30672 in mm:make-bend in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_30864(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30864,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30868,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30868(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30866 in k30862 in k30672 in mm:make-bend in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_30868(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30677(t7,t6);}

/* k30675 in k30672 in mm:make-bend in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_30677(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30677,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30680,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_30680(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[652]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30729,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[652]);}
else{
t6=t5;
f_30729(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[660]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30764,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[660]);}
else{
t7=t6;
f_30764(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[655]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30799,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[655]);}
else{
t8=t7;
f_30799(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_30828,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_30828(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k30826 in k30675 in k30672 in mm:make-bend in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_30828(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30828,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30835,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30843,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k30841 in k30826 in k30675 in k30672 in mm:make-bend in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_30843(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_30835(2,t2,C_SCHEME_UNDEFINED);}}

/* k30833 in k30826 in k30675 in k30672 in mm:make-bend in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_30835(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_30680(t5,t4);}

/* k30797 in k30675 in k30672 in mm:make-bend in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_30799(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30799,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30803,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30803(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30801 in k30797 in k30675 in k30672 in mm:make-bend in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_30803(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30680(t7,t6);}

/* k30762 in k30675 in k30672 in mm:make-bend in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_30764(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30764,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30768,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30768(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30766 in k30762 in k30675 in k30672 in mm:make-bend in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_30768(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30680(t7,t6);}

/* k30727 in k30675 in k30672 in mm:make-bend in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_30729(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30729,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30733,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30733(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30731 in k30727 in k30675 in k30672 in mm:make-bend in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_30733(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30680(t7,t6);}

/* k30678 in k30675 in k30672 in mm:make-bend in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_30680(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30680,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_30683,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_30683(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k30681 in k30678 in k30675 in k30672 in mm:make-bend in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_30683(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30683,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30687,a[2]=((C_word)li445),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t2+1)))(7,t2,((C_word*)t0)[5],C_fix(14),((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0));}

/* f_30687 in k30681 in k30678 in k30675 in k30672 in mm:make-bend in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_30687(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_30687,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t8=(C_word)C_i_foreign_fixnum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_fixnum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=t1;
((C_proc2)(void*)(*((C_word*)t13+1)))(2,t13,(C_word)stub5344(t7,t8,t9,t10,t11,t12));}

/* mm:press? in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_30651(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_30651,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30656,a[2]=((C_word)li443),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(13));}

/* f_30656 in mm:press? in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_30656(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_30656,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub5265(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:make-press in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_30200(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+58)){
C_save_and_reclaim((void*)tr2r,(void*)f_30200r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_30200r(t0,t1,t2);}}

static void C_ccall f_30200r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word *a=C_alloc(58);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(0);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=t2;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_30204,a[2]=t14,a[3]=t12,a[4]=t18,a[5]=t10,a[6]=t2,a[7]=t16,a[8]=t6,a[9]=t8,a[10]=t4,a[11]=t1,tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t16)[1]))){
t20=t19;
f_30204(t20,C_SCHEME_UNDEFINED);}
else{
t20=(C_word)C_i_car(((C_word*)t16)[1]);
t21=(C_word)C_eqp(t20,lf[652]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30529,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t10,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t10)[1])){
C_trace("error");
t23=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[19],lf[652]);}
else{
t23=t22;
f_30529(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t20,lf[660]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30564,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t12,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[19],lf[660]);}
else{
t24=t23;
f_30564(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(C_word)C_eqp(t20,lf[655]);
if(C_truep(t23)){
t24=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30599,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t14,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t25=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[19],lf[655]);}
else{
t25=t24;
f_30599(2,t25,C_SCHEME_UNDEFINED);}}
else{
t24=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_30628,a[2]=t19,a[3]=t10,a[4]=t4,a[5]=t16,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t25=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[10],t2);}
else{
t25=t24;
f_30628(2,t25,C_SCHEME_UNDEFINED);}}}}}}

/* k30626 in mm:make-press in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_30628(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30628,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30635,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30643,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k30641 in k30626 in mm:make-press in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_30643(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_30635(2,t2,C_SCHEME_UNDEFINED);}}

/* k30633 in k30626 in mm:make-press in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_30635(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_30204(t5,t4);}

/* k30597 in mm:make-press in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_30599(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30599,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30603,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30603(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30601 in k30597 in mm:make-press in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_30603(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30204(t7,t6);}

/* k30562 in mm:make-press in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_30564(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30564,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30568,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30568(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30566 in k30562 in mm:make-press in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_30568(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30204(t7,t6);}

/* k30527 in mm:make-press in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_30529(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30529,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30533,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30533(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30531 in k30527 in mm:make-press in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_30533(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30204(t7,t6);}

/* k30202 in mm:make-press in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_30204(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[42],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30204,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_30207,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_30207(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[652]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30394,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[652]);}
else{
t6=t5;
f_30394(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[660]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30429,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[660]);}
else{
t7=t6;
f_30429(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[655]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30464,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[655]);}
else{
t8=t7;
f_30464(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_30493,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_30493(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k30491 in k30202 in mm:make-press in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_30493(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30493,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30500,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30508,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k30506 in k30491 in k30202 in mm:make-press in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_30508(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_30500(2,t2,C_SCHEME_UNDEFINED);}}

/* k30498 in k30491 in k30202 in mm:make-press in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_30500(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_30207(t5,t4);}

/* k30462 in k30202 in mm:make-press in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_30464(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30464,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30468,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30468(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30466 in k30462 in k30202 in mm:make-press in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_30468(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30207(t7,t6);}

/* k30427 in k30202 in mm:make-press in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_30429(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30429,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30433,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30433(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30431 in k30427 in k30202 in mm:make-press in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_30433(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30207(t7,t6);}

/* k30392 in k30202 in mm:make-press in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_30394(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30394,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30398,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30398(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30396 in k30392 in k30202 in mm:make-press in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_30398(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30207(t7,t6);}

/* k30205 in k30202 in mm:make-press in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_30207(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30207,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30210,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_30210(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[652]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30259,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[652]);}
else{
t6=t5;
f_30259(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[660]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30294,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[660]);}
else{
t7=t6;
f_30294(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[655]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30329,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[655]);}
else{
t8=t7;
f_30329(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_30358,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_30358(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k30356 in k30205 in k30202 in mm:make-press in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_30358(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30358,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30365,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30373,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k30371 in k30356 in k30205 in k30202 in mm:make-press in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_30373(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_30365(2,t2,C_SCHEME_UNDEFINED);}}

/* k30363 in k30356 in k30205 in k30202 in mm:make-press in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_30365(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_30210(t5,t4);}

/* k30327 in k30205 in k30202 in mm:make-press in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_30329(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30329,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30333,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30333(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30331 in k30327 in k30205 in k30202 in mm:make-press in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_30333(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30210(t7,t6);}

/* k30292 in k30205 in k30202 in mm:make-press in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_30294(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30294,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30298,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30298(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30296 in k30292 in k30205 in k30202 in mm:make-press in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_30298(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30210(t7,t6);}

/* k30257 in k30205 in k30202 in mm:make-press in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_30259(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30259,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30263,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30263(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30261 in k30257 in k30205 in k30202 in mm:make-press in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_30263(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30210(t7,t6);}

/* k30208 in k30205 in k30202 in mm:make-press in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_30210(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30210,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_30213,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_30213(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k30211 in k30208 in k30205 in k30202 in mm:make-press in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_30213(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30213,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30217,a[2]=((C_word)li441),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t2+1)))(7,t2,((C_word*)t0)[5],C_fix(13),((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0));}

/* f_30217 in k30211 in k30208 in k30205 in k30202 in mm:make-press in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_30217(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_30217,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t8=(C_word)C_i_foreign_fixnum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_fixnum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=t1;
((C_proc2)(void*)(*((C_word*)t13+1)))(2,t13,(C_word)stub5250(t7,t8,t9,t10,t11,t12));}

/* mm:prog? in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_30181(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_30181,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30186,a[2]=((C_word)li439),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(12));}

/* f_30186 in mm:prog? in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_30186(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_30186,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub5171(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:make-prog in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_29730(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+58)){
C_save_and_reclaim((void*)tr2r,(void*)f_29730r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_29730r(t0,t1,t2);}}

static void C_ccall f_29730r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word *a=C_alloc(58);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(0);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=t2;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_29734,a[2]=t14,a[3]=t12,a[4]=t18,a[5]=t10,a[6]=t2,a[7]=t16,a[8]=t6,a[9]=t8,a[10]=t4,a[11]=t1,tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t16)[1]))){
t20=t19;
f_29734(t20,C_SCHEME_UNDEFINED);}
else{
t20=(C_word)C_i_car(((C_word*)t16)[1]);
t21=(C_word)C_eqp(t20,lf[652]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30059,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t10,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t10)[1])){
C_trace("error");
t23=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[19],lf[652]);}
else{
t23=t22;
f_30059(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t20,lf[660]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30094,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t12,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[19],lf[660]);}
else{
t24=t23;
f_30094(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(C_word)C_eqp(t20,lf[655]);
if(C_truep(t23)){
t24=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30129,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t14,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t25=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[19],lf[655]);}
else{
t25=t24;
f_30129(2,t25,C_SCHEME_UNDEFINED);}}
else{
t24=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_30158,a[2]=t19,a[3]=t10,a[4]=t4,a[5]=t16,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t25=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[10],t2);}
else{
t25=t24;
f_30158(2,t25,C_SCHEME_UNDEFINED);}}}}}}

/* k30156 in mm:make-prog in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_30158(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30158,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30165,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30173,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k30171 in k30156 in mm:make-prog in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_30173(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_30165(2,t2,C_SCHEME_UNDEFINED);}}

/* k30163 in k30156 in mm:make-prog in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_30165(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_29734(t5,t4);}

/* k30127 in mm:make-prog in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_30129(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30129,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30133,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30133(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30131 in k30127 in mm:make-prog in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_30133(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_29734(t7,t6);}

/* k30092 in mm:make-prog in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_30094(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30094,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30098,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30098(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30096 in k30092 in mm:make-prog in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_30098(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_29734(t7,t6);}

/* k30057 in mm:make-prog in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_30059(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30059,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30063,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30063(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30061 in k30057 in mm:make-prog in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_30063(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_29734(t7,t6);}

/* k29732 in mm:make-prog in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_29734(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[42],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29734,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_29737,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_29737(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[652]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29924,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[652]);}
else{
t6=t5;
f_29924(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[660]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29959,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[660]);}
else{
t7=t6;
f_29959(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[655]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29994,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[655]);}
else{
t8=t7;
f_29994(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_30023,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_30023(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k30021 in k29732 in mm:make-prog in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_30023(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30023,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30030,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30038,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k30036 in k30021 in k29732 in mm:make-prog in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_30038(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_30030(2,t2,C_SCHEME_UNDEFINED);}}

/* k30028 in k30021 in k29732 in mm:make-prog in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_30030(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_29737(t5,t4);}

/* k29992 in k29732 in mm:make-prog in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_29994(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29994,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29998,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_29998(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k29996 in k29992 in k29732 in mm:make-prog in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_29998(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_29737(t7,t6);}

/* k29957 in k29732 in mm:make-prog in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_29959(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29959,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29963,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_29963(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k29961 in k29957 in k29732 in mm:make-prog in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_29963(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_29737(t7,t6);}

/* k29922 in k29732 in mm:make-prog in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_29924(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29924,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29928,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_29928(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k29926 in k29922 in k29732 in mm:make-prog in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_29928(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_29737(t7,t6);}

/* k29735 in k29732 in mm:make-prog in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_29737(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29737,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29740,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_29740(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[652]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29789,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[652]);}
else{
t6=t5;
f_29789(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[660]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29824,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[660]);}
else{
t7=t6;
f_29824(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[655]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29859,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[655]);}
else{
t8=t7;
f_29859(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29888,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_29888(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k29886 in k29735 in k29732 in mm:make-prog in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_29888(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29888,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29895,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29903,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k29901 in k29886 in k29735 in k29732 in mm:make-prog in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_29903(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_29895(2,t2,C_SCHEME_UNDEFINED);}}

/* k29893 in k29886 in k29735 in k29732 in mm:make-prog in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_29895(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_29740(t5,t4);}

/* k29857 in k29735 in k29732 in mm:make-prog in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_29859(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29859,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29863,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_29863(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k29861 in k29857 in k29735 in k29732 in mm:make-prog in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_29863(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_29740(t7,t6);}

/* k29822 in k29735 in k29732 in mm:make-prog in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_29824(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29824,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29828,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_29828(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k29826 in k29822 in k29735 in k29732 in mm:make-prog in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_29828(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_29740(t7,t6);}

/* k29787 in k29735 in k29732 in mm:make-prog in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_29789(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29789,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29793,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_29793(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k29791 in k29787 in k29735 in k29732 in mm:make-prog in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_29793(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_29740(t7,t6);}

/* k29738 in k29735 in k29732 in mm:make-prog in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_29740(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29740,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29743,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_29743(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k29741 in k29738 in k29735 in k29732 in mm:make-prog in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_29743(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29743,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29747,a[2]=((C_word)li437),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t2+1)))(7,t2,((C_word*)t0)[5],C_fix(12),((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0));}

/* f_29747 in k29741 in k29738 in k29735 in k29732 in mm:make-prog in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_29747(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_29747,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t8=(C_word)C_i_foreign_fixnum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_fixnum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=t1;
((C_proc2)(void*)(*((C_word*)t13+1)))(2,t13,(C_word)stub5156(t7,t8,t9,t10,t11,t12));}

/* mm:ctrl? in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_29711(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_29711,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29716,a[2]=((C_word)li435),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(11));}

/* f_29716 in mm:ctrl? in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_29716(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_29716,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub5077(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:make-ctrl in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_28982(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+72)){
C_save_and_reclaim((void*)tr2r,(void*)f_28982r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_28982r(t0,t1,t2);}}

static void C_ccall f_28982r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word *a=C_alloc(72);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(0);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_fix(0);
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_FALSE;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=t2;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_SCHEME_FALSE;
t22=(*a=C_VECTOR_TYPE|1,a[1]=t21,tmp=(C_word)a,a+=2,tmp);
t23=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_28986,a[2]=t18,a[3]=t16,a[4]=t14,a[5]=t22,a[6]=t12,a[7]=t2,a[8]=t20,a[9]=t8,a[10]=t6,a[11]=t10,a[12]=t4,a[13]=t1,tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t20)[1]))){
t24=t23;
f_28986(t24,C_SCHEME_UNDEFINED);}
else{
t24=(C_word)C_i_car(((C_word*)t20)[1]);
t25=(C_word)C_eqp(t24,lf[652]);
if(C_truep(t25)){
t26=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29554,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t12,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t27=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t27))(4,t27,t26,lf[19],lf[652]);}
else{
t27=t26;
f_29554(2,t27,C_SCHEME_UNDEFINED);}}
else{
t26=(C_word)C_eqp(t24,lf[663]);
if(C_truep(t26)){
t27=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29589,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t14,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t28=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t28))(4,t28,t27,lf[19],lf[663]);}
else{
t28=t27;
f_29589(2,t28,C_SCHEME_UNDEFINED);}}
else{
t27=(C_word)C_eqp(t24,lf[660]);
if(C_truep(t27)){
t28=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29624,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t16,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t16)[1])){
C_trace("error");
t29=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t29))(4,t29,t28,lf[19],lf[660]);}
else{
t29=t28;
f_29624(2,t29,C_SCHEME_UNDEFINED);}}
else{
t28=(C_word)C_eqp(t24,lf[655]);
if(C_truep(t28)){
t29=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29659,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t18,a[7]=t10,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t30=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t30))(4,t30,t29,lf[19],lf[655]);}
else{
t30=t29;
f_29659(2,t30,C_SCHEME_UNDEFINED);}}
else{
t29=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29688,a[2]=t23,a[3]=t12,a[4]=t4,a[5]=t20,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t22)[1])){
C_trace("error");
t30=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t30))(4,t30,t29,lf[10],t2);}
else{
t30=t29;
f_29688(2,t30,C_SCHEME_UNDEFINED);}}}}}}}

/* k29686 in mm:make-ctrl in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_29688(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29688,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29695,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29703,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k29701 in k29686 in mm:make-ctrl in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_29703(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_29695(2,t2,C_SCHEME_UNDEFINED);}}

/* k29693 in k29686 in mm:make-ctrl in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_29695(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_28986(t5,t4);}

/* k29657 in mm:make-ctrl in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_29659(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29659,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29663,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_29663(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k29661 in k29657 in mm:make-ctrl in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_29663(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_28986(t7,t6);}

/* k29622 in mm:make-ctrl in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_29624(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29624,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29628,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_29628(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k29626 in k29622 in mm:make-ctrl in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_29628(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_28986(t7,t6);}

/* k29587 in mm:make-ctrl in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_29589(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29589,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29593,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_29593(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k29591 in k29587 in mm:make-ctrl in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_29593(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_28986(t7,t6);}

/* k29552 in mm:make-ctrl in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_29554(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29554,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29558,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_29558(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k29556 in k29552 in mm:make-ctrl in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_29558(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_28986(t7,t6);}

/* k28984 in mm:make-ctrl in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_28986(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[52],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28986,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_28989,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_28989(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[652]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29384,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[652]);}
else{
t6=t5;
f_29384(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[663]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29419,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[663]);}
else{
t7=t6;
f_29419(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[660]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29454,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[660]);}
else{
t8=t7;
f_29454(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[655]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29489,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[655]);}
else{
t9=t8;
f_29489(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29518,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[10],((C_word*)t0)[7]);}
else{
t9=t8;
f_29518(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k29516 in k28984 in mm:make-ctrl in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_29518(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29518,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29525,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29533,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k29531 in k29516 in k28984 in mm:make-ctrl in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_29533(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_29525(2,t2,C_SCHEME_UNDEFINED);}}

/* k29523 in k29516 in k28984 in mm:make-ctrl in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_29525(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_28989(t5,t4);}

/* k29487 in k28984 in mm:make-ctrl in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_29489(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29489,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29493,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_29493(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k29491 in k29487 in k28984 in mm:make-ctrl in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_29493(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_28989(t7,t6);}

/* k29452 in k28984 in mm:make-ctrl in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_29454(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29454,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29458,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_29458(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k29456 in k29452 in k28984 in mm:make-ctrl in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_29458(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_28989(t7,t6);}

/* k29417 in k28984 in mm:make-ctrl in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_29419(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29419,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29423,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_29423(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k29421 in k29417 in k28984 in mm:make-ctrl in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_29423(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_28989(t7,t6);}

/* k29382 in k28984 in mm:make-ctrl in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_29384(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29384,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29388,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_29388(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k29386 in k29382 in k28984 in mm:make-ctrl in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_29388(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_28989(t7,t6);}

/* k28987 in k28984 in mm:make-ctrl in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_28989(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[52],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28989,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_28992,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_28992(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[652]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29214,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[652]);}
else{
t6=t5;
f_29214(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[663]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29249,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[663]);}
else{
t7=t6;
f_29249(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[660]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29284,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[660]);}
else{
t8=t7;
f_29284(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[655]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29319,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[655]);}
else{
t9=t8;
f_29319(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29348,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[10],((C_word*)t0)[7]);}
else{
t9=t8;
f_29348(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k29346 in k28987 in k28984 in mm:make-ctrl in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_29348(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29348,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29355,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29363,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k29361 in k29346 in k28987 in k28984 in mm:make-ctrl in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_29363(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_29355(2,t2,C_SCHEME_UNDEFINED);}}

/* k29353 in k29346 in k28987 in k28984 in mm:make-ctrl in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_29355(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_28992(t5,t4);}

/* k29317 in k28987 in k28984 in mm:make-ctrl in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_29319(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29319,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29323,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_29323(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k29321 in k29317 in k28987 in k28984 in mm:make-ctrl in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_29323(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_28992(t7,t6);}

/* k29282 in k28987 in k28984 in mm:make-ctrl in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_29284(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29284,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29288,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_29288(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k29286 in k29282 in k28987 in k28984 in mm:make-ctrl in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_29288(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_28992(t7,t6);}

/* k29247 in k28987 in k28984 in mm:make-ctrl in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_29249(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29249,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29253,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_29253(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k29251 in k29247 in k28987 in k28984 in mm:make-ctrl in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_29253(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_28992(t7,t6);}

/* k29212 in k28987 in k28984 in mm:make-ctrl in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_29214(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29214,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29218,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_29218(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k29216 in k29212 in k28987 in k28984 in mm:make-ctrl in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_29218(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_28992(t7,t6);}

/* k28990 in k28987 in k28984 in mm:make-ctrl in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_28992(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[47],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28992,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_28995,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[11],a[7]=((C_word*)t0)[12],a[8]=((C_word*)t0)[13],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_28995(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[652]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29044,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[652]);}
else{
t6=t5;
f_29044(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[663]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29079,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[663]);}
else{
t7=t6;
f_29079(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[660]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29114,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[660]);}
else{
t8=t7;
f_29114(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[655]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29149,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[655]);}
else{
t9=t8;
f_29149(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29178,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[10],((C_word*)t0)[7]);}
else{
t9=t8;
f_29178(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k29176 in k28990 in k28987 in k28984 in mm:make-ctrl in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_29178(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29178,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29185,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29193,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k29191 in k29176 in k28990 in k28987 in k28984 in mm:make-ctrl in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_29193(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_29185(2,t2,C_SCHEME_UNDEFINED);}}

/* k29183 in k29176 in k28990 in k28987 in k28984 in mm:make-ctrl in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_29185(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_28995(t5,t4);}

/* k29147 in k28990 in k28987 in k28984 in mm:make-ctrl in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_29149(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29149,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29153,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_29153(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k29151 in k29147 in k28990 in k28987 in k28984 in mm:make-ctrl in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_29153(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_28995(t7,t6);}

/* k29112 in k28990 in k28987 in k28984 in mm:make-ctrl in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_29114(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29114,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29118,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_29118(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k29116 in k29112 in k28990 in k28987 in k28984 in mm:make-ctrl in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_29118(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_28995(t7,t6);}

/* k29077 in k28990 in k28987 in k28984 in mm:make-ctrl in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_29079(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29079,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29083,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_29083(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k29081 in k29077 in k28990 in k28987 in k28984 in mm:make-ctrl in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_29083(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_28995(t7,t6);}

/* k29042 in k28990 in k28987 in k28984 in mm:make-ctrl in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_29044(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29044,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29048,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_29048(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k29046 in k29042 in k28990 in k28987 in k28984 in mm:make-ctrl in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_29048(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_28995(t7,t6);}

/* k28993 in k28990 in k28987 in k28984 in mm:make-ctrl in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_28995(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28995,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28998,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_28998(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k28996 in k28993 in k28990 in k28987 in k28984 in mm:make-ctrl in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_28998(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28998,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29002,a[2]=((C_word)li433),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t2+1)))(7,t2,((C_word*)t0)[6],C_fix(11),((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* f_29002 in k28996 in k28993 in k28990 in k28987 in k28984 in mm:make-ctrl in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_29002(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_29002,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t8=(C_word)C_i_foreign_fixnum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_fixnum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=t1;
((C_proc2)(void*)(*((C_word*)t13+1)))(2,t13,(C_word)stub5061(t7,t8,t9,t10,t11,t12));}

/* mm:touch? in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_28963(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_28963,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28968,a[2]=((C_word)li431),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(10));}

/* f_28968 in mm:touch? in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_28968(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_28968,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub4945(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:make-touch in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_28234(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+72)){
C_save_and_reclaim((void*)tr2r,(void*)f_28234r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_28234r(t0,t1,t2);}}

static void C_ccall f_28234r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word *a=C_alloc(72);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(0);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_fix(0);
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_FALSE;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=t2;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_SCHEME_FALSE;
t22=(*a=C_VECTOR_TYPE|1,a[1]=t21,tmp=(C_word)a,a+=2,tmp);
t23=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_28238,a[2]=t18,a[3]=t16,a[4]=t14,a[5]=t22,a[6]=t12,a[7]=t2,a[8]=t20,a[9]=t8,a[10]=t6,a[11]=t10,a[12]=t4,a[13]=t1,tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t20)[1]))){
t24=t23;
f_28238(t24,C_SCHEME_UNDEFINED);}
else{
t24=(C_word)C_i_car(((C_word*)t20)[1]);
t25=(C_word)C_eqp(t24,lf[652]);
if(C_truep(t25)){
t26=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28806,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t12,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t27=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t27))(4,t27,t26,lf[19],lf[652]);}
else{
t27=t26;
f_28806(2,t27,C_SCHEME_UNDEFINED);}}
else{
t26=(C_word)C_eqp(t24,lf[653]);
if(C_truep(t26)){
t27=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28841,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t14,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t28=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t28))(4,t28,t27,lf[19],lf[653]);}
else{
t28=t27;
f_28841(2,t28,C_SCHEME_UNDEFINED);}}
else{
t27=(C_word)C_eqp(t24,lf[660]);
if(C_truep(t27)){
t28=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28876,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t16,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t16)[1])){
C_trace("error");
t29=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t29))(4,t29,t28,lf[19],lf[660]);}
else{
t29=t28;
f_28876(2,t29,C_SCHEME_UNDEFINED);}}
else{
t28=(C_word)C_eqp(t24,lf[655]);
if(C_truep(t28)){
t29=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28911,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t18,a[7]=t10,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t30=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t30))(4,t30,t29,lf[19],lf[655]);}
else{
t30=t29;
f_28911(2,t30,C_SCHEME_UNDEFINED);}}
else{
t29=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28940,a[2]=t23,a[3]=t12,a[4]=t4,a[5]=t20,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t22)[1])){
C_trace("error");
t30=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t30))(4,t30,t29,lf[10],t2);}
else{
t30=t29;
f_28940(2,t30,C_SCHEME_UNDEFINED);}}}}}}}

/* k28938 in mm:make-touch in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_28940(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28940,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28947,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28955,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k28953 in k28938 in mm:make-touch in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_28955(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_28947(2,t2,C_SCHEME_UNDEFINED);}}

/* k28945 in k28938 in mm:make-touch in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_28947(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_28238(t5,t4);}

/* k28909 in mm:make-touch in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_28911(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28911,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28915,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_28915(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k28913 in k28909 in mm:make-touch in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_28915(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_28238(t7,t6);}

/* k28874 in mm:make-touch in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_28876(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28876,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28880,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_28880(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k28878 in k28874 in mm:make-touch in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_28880(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_28238(t7,t6);}

/* k28839 in mm:make-touch in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_28841(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28841,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28845,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_28845(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k28843 in k28839 in mm:make-touch in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_28845(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_28238(t7,t6);}

/* k28804 in mm:make-touch in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_28806(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28806,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28810,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_28810(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k28808 in k28804 in mm:make-touch in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_28810(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_28238(t7,t6);}

/* k28236 in mm:make-touch in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_28238(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[52],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28238,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_28241,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_28241(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[652]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28636,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[652]);}
else{
t6=t5;
f_28636(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[653]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28671,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[653]);}
else{
t7=t6;
f_28671(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[660]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28706,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[660]);}
else{
t8=t7;
f_28706(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[655]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28741,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[655]);}
else{
t9=t8;
f_28741(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28770,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[10],((C_word*)t0)[7]);}
else{
t9=t8;
f_28770(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k28768 in k28236 in mm:make-touch in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_28770(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28770,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28777,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28785,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k28783 in k28768 in k28236 in mm:make-touch in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_28785(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_28777(2,t2,C_SCHEME_UNDEFINED);}}

/* k28775 in k28768 in k28236 in mm:make-touch in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_28777(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_28241(t5,t4);}

/* k28739 in k28236 in mm:make-touch in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_28741(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28741,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28745,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_28745(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k28743 in k28739 in k28236 in mm:make-touch in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_28745(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_28241(t7,t6);}

/* k28704 in k28236 in mm:make-touch in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_28706(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28706,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28710,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_28710(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k28708 in k28704 in k28236 in mm:make-touch in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_28710(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_28241(t7,t6);}

/* k28669 in k28236 in mm:make-touch in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_28671(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28671,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28675,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_28675(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k28673 in k28669 in k28236 in mm:make-touch in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_28675(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_28241(t7,t6);}

/* k28634 in k28236 in mm:make-touch in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_28636(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28636,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28640,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_28640(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k28638 in k28634 in k28236 in mm:make-touch in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_28640(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_28241(t7,t6);}

/* k28239 in k28236 in mm:make-touch in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_28241(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[52],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28241,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_28244,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_28244(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[652]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28466,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[652]);}
else{
t6=t5;
f_28466(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[653]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28501,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[653]);}
else{
t7=t6;
f_28501(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[660]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28536,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[660]);}
else{
t8=t7;
f_28536(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[655]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28571,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[655]);}
else{
t9=t8;
f_28571(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28600,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[10],((C_word*)t0)[7]);}
else{
t9=t8;
f_28600(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k28598 in k28239 in k28236 in mm:make-touch in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_28600(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28600,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28607,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28615,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k28613 in k28598 in k28239 in k28236 in mm:make-touch in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_28615(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_28607(2,t2,C_SCHEME_UNDEFINED);}}

/* k28605 in k28598 in k28239 in k28236 in mm:make-touch in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_28607(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_28244(t5,t4);}

/* k28569 in k28239 in k28236 in mm:make-touch in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_28571(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28571,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28575,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_28575(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k28573 in k28569 in k28239 in k28236 in mm:make-touch in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_28575(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_28244(t7,t6);}

/* k28534 in k28239 in k28236 in mm:make-touch in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_28536(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28536,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28540,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_28540(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k28538 in k28534 in k28239 in k28236 in mm:make-touch in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_28540(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_28244(t7,t6);}

/* k28499 in k28239 in k28236 in mm:make-touch in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_28501(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28501,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28505,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_28505(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k28503 in k28499 in k28239 in k28236 in mm:make-touch in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_28505(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_28244(t7,t6);}

/* k28464 in k28239 in k28236 in mm:make-touch in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_28466(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28466,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28470,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_28470(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k28468 in k28464 in k28239 in k28236 in mm:make-touch in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_28470(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_28244(t7,t6);}

/* k28242 in k28239 in k28236 in mm:make-touch in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_28244(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[47],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28244,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_28247,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[11],a[7]=((C_word*)t0)[12],a[8]=((C_word*)t0)[13],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_28247(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[652]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28296,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[652]);}
else{
t6=t5;
f_28296(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[653]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28331,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[653]);}
else{
t7=t6;
f_28331(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[660]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28366,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[660]);}
else{
t8=t7;
f_28366(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[655]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28401,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[655]);}
else{
t9=t8;
f_28401(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28430,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[10],((C_word*)t0)[7]);}
else{
t9=t8;
f_28430(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k28428 in k28242 in k28239 in k28236 in mm:make-touch in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_28430(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28430,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28437,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28445,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k28443 in k28428 in k28242 in k28239 in k28236 in mm:make-touch in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_28445(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_28437(2,t2,C_SCHEME_UNDEFINED);}}

/* k28435 in k28428 in k28242 in k28239 in k28236 in mm:make-touch in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_28437(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_28247(t5,t4);}

/* k28399 in k28242 in k28239 in k28236 in mm:make-touch in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_28401(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28401,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28405,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_28405(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k28403 in k28399 in k28242 in k28239 in k28236 in mm:make-touch in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_28405(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_28247(t7,t6);}

/* k28364 in k28242 in k28239 in k28236 in mm:make-touch in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_28366(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28366,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28370,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_28370(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k28368 in k28364 in k28242 in k28239 in k28236 in mm:make-touch in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_28370(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_28247(t7,t6);}

/* k28329 in k28242 in k28239 in k28236 in mm:make-touch in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_28331(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28331,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28335,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_28335(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k28333 in k28329 in k28242 in k28239 in k28236 in mm:make-touch in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_28335(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_28247(t7,t6);}

/* k28294 in k28242 in k28239 in k28236 in mm:make-touch in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_28296(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28296,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28300,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_28300(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k28298 in k28294 in k28242 in k28239 in k28236 in mm:make-touch in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_28300(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_28247(t7,t6);}

/* k28245 in k28242 in k28239 in k28236 in mm:make-touch in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_28247(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28247,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28250,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_28250(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k28248 in k28245 in k28242 in k28239 in k28236 in mm:make-touch in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_28250(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28250,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28254,a[2]=((C_word)li429),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t2+1)))(7,t2,((C_word*)t0)[6],C_fix(10),((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* f_28254 in k28248 in k28245 in k28242 in k28239 in k28236 in mm:make-touch in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_28254(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_28254,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t8=(C_word)C_i_foreign_fixnum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_fixnum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=t1;
((C_proc2)(void*)(*((C_word*)t13+1)))(2,t13,(C_word)stub4929(t7,t8,t9,t10,t11,t12));}

/* mm:off? in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_28215(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_28215,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28220,a[2]=((C_word)li427),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(8));}

/* f_28220 in mm:off? in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_28220(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_28220,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub4813(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:make-off in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_27764(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+58)){
C_save_and_reclaim((void*)tr2r,(void*)f_27764r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_27764r(t0,t1,t2);}}

static void C_ccall f_27764r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word *a=C_alloc(58);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(60);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=t2;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_27768,a[2]=t14,a[3]=t12,a[4]=t18,a[5]=t10,a[6]=t2,a[7]=t16,a[8]=t6,a[9]=t8,a[10]=t4,a[11]=t1,tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t16)[1]))){
t20=t19;
f_27768(t20,C_SCHEME_UNDEFINED);}
else{
t20=(C_word)C_i_car(((C_word*)t16)[1]);
t21=(C_word)C_eqp(t20,lf[652]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28093,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t10,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t10)[1])){
C_trace("error");
t23=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[19],lf[652]);}
else{
t23=t22;
f_28093(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t20,lf[653]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28128,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t12,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[19],lf[653]);}
else{
t24=t23;
f_28128(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(C_word)C_eqp(t20,lf[655]);
if(C_truep(t23)){
t24=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28163,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t14,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t25=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[19],lf[655]);}
else{
t25=t24;
f_28163(2,t25,C_SCHEME_UNDEFINED);}}
else{
t24=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28192,a[2]=t19,a[3]=t10,a[4]=t4,a[5]=t16,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t25=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[10],t2);}
else{
t25=t24;
f_28192(2,t25,C_SCHEME_UNDEFINED);}}}}}}

/* k28190 in mm:make-off in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_28192(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28192,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28199,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28207,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k28205 in k28190 in mm:make-off in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_28207(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_28199(2,t2,C_SCHEME_UNDEFINED);}}

/* k28197 in k28190 in mm:make-off in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_28199(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_27768(t5,t4);}

/* k28161 in mm:make-off in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_28163(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28163,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28167,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_28167(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k28165 in k28161 in mm:make-off in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_28167(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_27768(t7,t6);}

/* k28126 in mm:make-off in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_28128(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28128,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28132,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_28132(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k28130 in k28126 in mm:make-off in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_28132(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_27768(t7,t6);}

/* k28091 in mm:make-off in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_28093(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28093,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28097,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_28097(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k28095 in k28091 in mm:make-off in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_28097(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_27768(t7,t6);}

/* k27766 in mm:make-off in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_27768(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[42],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27768,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_27771,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_27771(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[652]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27958,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[652]);}
else{
t6=t5;
f_27958(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[653]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27993,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[653]);}
else{
t7=t6;
f_27993(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[655]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28028,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[655]);}
else{
t8=t7;
f_28028(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28057,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_28057(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k28055 in k27766 in mm:make-off in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_28057(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28057,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28064,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28072,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k28070 in k28055 in k27766 in mm:make-off in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_28072(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_28064(2,t2,C_SCHEME_UNDEFINED);}}

/* k28062 in k28055 in k27766 in mm:make-off in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_28064(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_27771(t5,t4);}

/* k28026 in k27766 in mm:make-off in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_28028(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28028,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28032,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_28032(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k28030 in k28026 in k27766 in mm:make-off in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_28032(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_27771(t7,t6);}

/* k27991 in k27766 in mm:make-off in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_27993(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27993,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27997,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_27997(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k27995 in k27991 in k27766 in mm:make-off in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_27997(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_27771(t7,t6);}

/* k27956 in k27766 in mm:make-off in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_27958(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27958,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27962,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_27962(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k27960 in k27956 in k27766 in mm:make-off in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_27962(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_27771(t7,t6);}

/* k27769 in k27766 in mm:make-off in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_27771(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27771,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27774,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_27774(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[652]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27823,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[652]);}
else{
t6=t5;
f_27823(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[653]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27858,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[653]);}
else{
t7=t6;
f_27858(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[655]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27893,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[655]);}
else{
t8=t7;
f_27893(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27922,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_27922(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k27920 in k27769 in k27766 in mm:make-off in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_27922(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27922,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27929,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27937,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k27935 in k27920 in k27769 in k27766 in mm:make-off in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_27937(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_27929(2,t2,C_SCHEME_UNDEFINED);}}

/* k27927 in k27920 in k27769 in k27766 in mm:make-off in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_27929(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_27774(t5,t4);}

/* k27891 in k27769 in k27766 in mm:make-off in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_27893(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27893,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27897,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_27897(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k27895 in k27891 in k27769 in k27766 in mm:make-off in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_27897(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_27774(t7,t6);}

/* k27856 in k27769 in k27766 in mm:make-off in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_27858(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27858,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27862,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_27862(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k27860 in k27856 in k27769 in k27766 in mm:make-off in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_27862(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_27774(t7,t6);}

/* k27821 in k27769 in k27766 in mm:make-off in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_27823(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27823,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27827,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_27827(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k27825 in k27821 in k27769 in k27766 in mm:make-off in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_27827(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_27774(t7,t6);}

/* k27772 in k27769 in k27766 in mm:make-off in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_27774(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27774,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27777,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_27777(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k27775 in k27772 in k27769 in k27766 in mm:make-off in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_27777(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27777,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27781,a[2]=((C_word)li425),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t2+1)))(7,t2,((C_word*)t0)[5],C_fix(8),((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0));}

/* f_27781 in k27775 in k27772 in k27769 in k27766 in mm:make-off in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_27781(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_27781,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t8=(C_word)C_i_foreign_fixnum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_fixnum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=t1;
((C_proc2)(void*)(*((C_word*)t13+1)))(2,t13,(C_word)stub4798(t7,t8,t9,t10,t11,t12));}

/* mm:on? in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_27745(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_27745,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27750,a[2]=((C_word)li423),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(9));}

/* f_27750 in mm:on? in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_27750(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_27750,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub4719(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:make-on in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_27016(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+72)){
C_save_and_reclaim((void*)tr2r,(void*)f_27016r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_27016r(t0,t1,t2);}}

static void C_ccall f_27016r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word *a=C_alloc(72);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(60);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(64);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_fix(0);
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_FALSE;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=t2;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_SCHEME_FALSE;
t22=(*a=C_VECTOR_TYPE|1,a[1]=t21,tmp=(C_word)a,a+=2,tmp);
t23=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_27020,a[2]=t18,a[3]=t16,a[4]=t14,a[5]=t22,a[6]=t12,a[7]=t2,a[8]=t20,a[9]=t8,a[10]=t6,a[11]=t10,a[12]=t4,a[13]=t1,tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t20)[1]))){
t24=t23;
f_27020(t24,C_SCHEME_UNDEFINED);}
else{
t24=(C_word)C_i_car(((C_word*)t20)[1]);
t25=(C_word)C_eqp(t24,lf[652]);
if(C_truep(t25)){
t26=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27588,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t12,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t27=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t27))(4,t27,t26,lf[19],lf[652]);}
else{
t27=t26;
f_27588(2,t27,C_SCHEME_UNDEFINED);}}
else{
t26=(C_word)C_eqp(t24,lf[653]);
if(C_truep(t26)){
t27=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27623,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t14,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t28=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t28))(4,t28,t27,lf[19],lf[653]);}
else{
t28=t27;
f_27623(2,t28,C_SCHEME_UNDEFINED);}}
else{
t27=(C_word)C_eqp(t24,lf[654]);
if(C_truep(t27)){
t28=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27658,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t16,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t16)[1])){
C_trace("error");
t29=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t29))(4,t29,t28,lf[19],lf[654]);}
else{
t29=t28;
f_27658(2,t29,C_SCHEME_UNDEFINED);}}
else{
t28=(C_word)C_eqp(t24,lf[655]);
if(C_truep(t28)){
t29=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27693,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t18,a[7]=t10,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t30=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t30))(4,t30,t29,lf[19],lf[655]);}
else{
t30=t29;
f_27693(2,t30,C_SCHEME_UNDEFINED);}}
else{
t29=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27722,a[2]=t23,a[3]=t12,a[4]=t4,a[5]=t20,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t22)[1])){
C_trace("error");
t30=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t30))(4,t30,t29,lf[10],t2);}
else{
t30=t29;
f_27722(2,t30,C_SCHEME_UNDEFINED);}}}}}}}

/* k27720 in mm:make-on in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_27722(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27722,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27729,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27737,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k27735 in k27720 in mm:make-on in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_27737(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_27729(2,t2,C_SCHEME_UNDEFINED);}}

/* k27727 in k27720 in mm:make-on in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_27729(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_27020(t5,t4);}

/* k27691 in mm:make-on in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_27693(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27693,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27697,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_27697(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k27695 in k27691 in mm:make-on in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_27697(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_27020(t7,t6);}

/* k27656 in mm:make-on in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_27658(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27658,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27662,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_27662(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k27660 in k27656 in mm:make-on in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_27662(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_27020(t7,t6);}

/* k27621 in mm:make-on in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_27623(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27623,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27627,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_27627(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k27625 in k27621 in mm:make-on in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_27627(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_27020(t7,t6);}

/* k27586 in mm:make-on in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_27588(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27588,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27592,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_27592(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k27590 in k27586 in mm:make-on in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_27592(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_27020(t7,t6);}

/* k27018 in mm:make-on in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_27020(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[52],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27020,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_27023,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_27023(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[652]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27418,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[652]);}
else{
t6=t5;
f_27418(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[653]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27453,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[653]);}
else{
t7=t6;
f_27453(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[654]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27488,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[654]);}
else{
t8=t7;
f_27488(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[655]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27523,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[655]);}
else{
t9=t8;
f_27523(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27552,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[10],((C_word*)t0)[7]);}
else{
t9=t8;
f_27552(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k27550 in k27018 in mm:make-on in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_27552(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27552,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27559,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27567,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k27565 in k27550 in k27018 in mm:make-on in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_27567(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_27559(2,t2,C_SCHEME_UNDEFINED);}}

/* k27557 in k27550 in k27018 in mm:make-on in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_27559(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_27023(t5,t4);}

/* k27521 in k27018 in mm:make-on in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_27523(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27523,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27527,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_27527(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k27525 in k27521 in k27018 in mm:make-on in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_27527(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_27023(t7,t6);}

/* k27486 in k27018 in mm:make-on in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_27488(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27488,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27492,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_27492(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k27490 in k27486 in k27018 in mm:make-on in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_27492(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_27023(t7,t6);}

/* k27451 in k27018 in mm:make-on in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_27453(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27453,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27457,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_27457(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k27455 in k27451 in k27018 in mm:make-on in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_27457(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_27023(t7,t6);}

/* k27416 in k27018 in mm:make-on in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_27418(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27418,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27422,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_27422(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k27420 in k27416 in k27018 in mm:make-on in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_27422(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_27023(t7,t6);}

/* k27021 in k27018 in mm:make-on in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_27023(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[52],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27023,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_27026,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_27026(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[652]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27248,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[652]);}
else{
t6=t5;
f_27248(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[653]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27283,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[653]);}
else{
t7=t6;
f_27283(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[654]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27318,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[654]);}
else{
t8=t7;
f_27318(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[655]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27353,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[655]);}
else{
t9=t8;
f_27353(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27382,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[10],((C_word*)t0)[7]);}
else{
t9=t8;
f_27382(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k27380 in k27021 in k27018 in mm:make-on in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_27382(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27382,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27389,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27397,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k27395 in k27380 in k27021 in k27018 in mm:make-on in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_27397(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_27389(2,t2,C_SCHEME_UNDEFINED);}}

/* k27387 in k27380 in k27021 in k27018 in mm:make-on in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_27389(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_27026(t5,t4);}

/* k27351 in k27021 in k27018 in mm:make-on in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_27353(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27353,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27357,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_27357(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k27355 in k27351 in k27021 in k27018 in mm:make-on in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_27357(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_27026(t7,t6);}

/* k27316 in k27021 in k27018 in mm:make-on in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_27318(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27318,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27322,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_27322(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k27320 in k27316 in k27021 in k27018 in mm:make-on in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_27322(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_27026(t7,t6);}

/* k27281 in k27021 in k27018 in mm:make-on in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_27283(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27283,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27287,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_27287(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k27285 in k27281 in k27021 in k27018 in mm:make-on in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_27287(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_27026(t7,t6);}

/* k27246 in k27021 in k27018 in mm:make-on in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_27248(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27248,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27252,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_27252(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k27250 in k27246 in k27021 in k27018 in mm:make-on in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_27252(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_27026(t7,t6);}

/* k27024 in k27021 in k27018 in mm:make-on in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_27026(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[47],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27026,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_27029,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[11],a[7]=((C_word*)t0)[12],a[8]=((C_word*)t0)[13],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_27029(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[652]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27078,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[652]);}
else{
t6=t5;
f_27078(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[653]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27113,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[653]);}
else{
t7=t6;
f_27113(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[654]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27148,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[654]);}
else{
t8=t7;
f_27148(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[655]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27183,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[655]);}
else{
t9=t8;
f_27183(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27212,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[10],((C_word*)t0)[7]);}
else{
t9=t8;
f_27212(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k27210 in k27024 in k27021 in k27018 in mm:make-on in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_27212(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27212,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27219,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27227,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k27225 in k27210 in k27024 in k27021 in k27018 in mm:make-on in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_27227(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_27219(2,t2,C_SCHEME_UNDEFINED);}}

/* k27217 in k27210 in k27024 in k27021 in k27018 in mm:make-on in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_27219(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_27029(t5,t4);}

/* k27181 in k27024 in k27021 in k27018 in mm:make-on in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_27183(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27183,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27187,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_27187(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k27185 in k27181 in k27024 in k27021 in k27018 in mm:make-on in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_27187(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_27029(t7,t6);}

/* k27146 in k27024 in k27021 in k27018 in mm:make-on in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_27148(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27148,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27152,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_27152(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k27150 in k27146 in k27024 in k27021 in k27018 in mm:make-on in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_27152(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_27029(t7,t6);}

/* k27111 in k27024 in k27021 in k27018 in mm:make-on in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_27113(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27113,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27117,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_27117(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k27115 in k27111 in k27024 in k27021 in k27018 in mm:make-on in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_27117(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_27029(t7,t6);}

/* k27076 in k27024 in k27021 in k27018 in mm:make-on in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_27078(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27078,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27082,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_27082(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k27080 in k27076 in k27024 in k27021 in k27018 in mm:make-on in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_27082(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_27029(t7,t6);}

/* k27027 in k27024 in k27021 in k27018 in mm:make-on in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_27029(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27029,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27032,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_27032(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k27030 in k27027 in k27024 in k27021 in k27018 in mm:make-on in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_27032(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27032,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27036,a[2]=((C_word)li421),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t2+1)))(7,t2,((C_word*)t0)[6],C_fix(9),((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* f_27036 in k27030 in k27027 in k27024 in k27021 in k27018 in mm:make-on in k26870 in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_27036(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_27036,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t8=(C_word)C_i_foreign_fixnum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_fixnum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=t1;
((C_proc2)(void*)(*((C_word*)t13+1)))(2,t13,(C_word)stub4703(t7,t8,t9,t10,t11,t12));}

/* parse-iteration in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_26678(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26678,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26686,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t6=t3;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_nullp(((C_word*)t7)[1]);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26518,a[2]=t4,a[3]=t7,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
if(C_truep(t8)){
t10=t9;
f_26518(t10,t8);}
else{
t10=(C_word)C_i_car(((C_word*)t7)[1]);
t11=(C_word)C_i_symbolp(t10);
t12=t9;
f_26518(t12,(C_word)C_i_not(t11));}}

/* k26516 in parse-iteration in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_26518(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[37],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26518,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26525,a[2]=((C_word*)t0)[4],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  make-loop-clause");
f_23462(t2,(C_word)C_a_i_list(&a,4,lf[470],lf[641],lf[475],((C_word*)((C_word*)t0)[3])[1]));}
else{
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26526,a[2]=((C_word)li416),tmp=(C_word)a,a+=3,tmp);
t3=((C_word*)((C_word*)t0)[3])[1];
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_END_OF_LIST;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26551,a[2]=t6,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t8=C_SCHEME_UNDEFINED;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_set_block_item(t9,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_26553,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=t9,a[5]=t6,a[6]=t4,a[7]=((C_word*)t0)[3],a[8]=((C_word)li419),tmp=(C_word)a,a+=9,tmp));
t11=((C_word*)t9)[1];
f_26553(t11,t7,C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST);}}

/* do4501 in k26516 in parse-iteration in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_26553(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26553,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t10=t1;
((C_proc2)(void*)(*((C_word*)t10+1)))(2,t10,C_SCHEME_UNDEFINED);}
else{
t10=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_26563,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t9,a[5]=t7,a[6]=t1,a[7]=((C_word*)t0)[4],a[8]=((C_word*)t0)[5],a[9]=t8,a[10]=((C_word*)t0)[7],a[11]=((C_word*)t0)[6],a[12]=t6,tmp=(C_word)a,a+=13,tmp);
t11=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t12=(C_word)C_eqp(t11,lf[387]);
if(C_truep(t12)){
t13=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t14=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t15=C_mutate(((C_word *)((C_word*)t0)[7])+1,t14);
t16=t10;
f_26563(t16,t13);}
else{
t13=t10;
f_26563(t13,C_SCHEME_UNDEFINED);}}}

/* k26561 in do4501 in k26516 in parse-iteration in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_26563(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26563,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_26567,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
C_trace("ChickenBridge.scm: 380  loop-op?");
f_23684(t2,t3,((C_word*)t0)[3]);}

/* k26565 in k26561 in do4501 in k26516 in parse-iteration in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_26567(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26567,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[12])+1,t1);
t3=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_26570,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[12],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],a[12]=((C_word*)t0)[11],tmp=(C_word)a,a+=13,tmp);
t4=((C_word*)((C_word*)t0)[12])[1];
if(C_truep(t4)){
t5=t3;
f_26570(2,t5,C_SCHEME_UNDEFINED);}
else{
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
C_trace("ChickenBridge.scm: 380  loop-error");
f_23702(t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[11])[1],(C_word)C_a_i_list(&a,3,lf[646],t5,lf[647]));}}

/* k26568 in k26565 in k26561 in do4501 in k26516 in parse-iteration in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_26570(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26570,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_26573,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26622,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[6],a[6]=((C_word)li417),tmp=(C_word)a,a+=7,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26631,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[5],a[4]=((C_word)li418),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  call-with-values");
C_call_with_values(4,0,t2,t3,t4);}

/* a26630 in k26568 in k26565 in k26561 in do4501 in k26516 in parse-iteration in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_26631(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_26631,4,t0,t1,t2,t3);}
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t5);}

/* a26621 in k26568 in k26565 in k26561 in do4501 in k26516 in parse-iteration in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_26622(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26622,2,t0,t1);}
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[5])[1]);
t3=t2;
((C_proc5)C_retrieve_proc(t3))(5,t3,t1,((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2]);}

/* k26571 in k26568 in k26565 in k26561 in do4501 in k26516 in parse-iteration in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_26573(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26573,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_26576,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[12],tmp=(C_word)a,a+=11,tmp);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26592,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[3],a[5]=t2,a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[4],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 380  op-type?");
f_26526(t3,((C_word*)((C_word*)t0)[6])[1],lf[632]);}

/* k26590 in k26571 in k26568 in k26565 in k26561 in do4501 in k26516 in parse-iteration in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_26592(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26592,2,t0,t1);}
if(C_truep(t1)){
t2=C_mutate(((C_word *)((C_word*)t0)[7])+1,((C_word*)((C_word*)t0)[6])[1]);
t3=((C_word*)t0)[5];
f_26576(2,t3,t2);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26599,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 380  op-type?");
f_26526(t2,((C_word*)((C_word*)t0)[6])[1],lf[645]);}}

/* k26597 in k26590 in k26571 in k26568 in k26565 in k26561 in do4501 in k26516 in parse-iteration in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_26599(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26599,2,t0,t1);}
if(C_truep(t1)){
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t2=((C_word*)t0)[5];
f_26576(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
C_trace("ChickenBridge.scm: 380  loop-error");
f_23702(((C_word*)t0)[5],((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],(C_word)C_a_i_list(&a,5,lf[642],t2,lf[643],t3,lf[644]));}}
else{
t2=((C_word*)t0)[5];
f_26576(2,t2,C_SCHEME_UNDEFINED);}}

/* k26574 in k26571 in k26568 in k26565 in k26561 in do4501 in k26516 in parse-iteration in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_26576(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26576,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[10])+1,((C_word*)((C_word*)t0)[9])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[9])+1,((C_word*)((C_word*)t0)[8])[1]);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_26582,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
t5=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 380  append");
t6=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,((C_word*)((C_word*)t0)[7])[1],t5);}

/* k26580 in k26574 in k26571 in k26568 in k26565 in k26561 in do4501 in k26516 in parse-iteration in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_26582(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=((C_word*)((C_word*)t0)[7])[1];
f_26553(t3,((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k26549 in k26516 in parse-iteration in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_26551(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_26686(t2,((C_word*)((C_word*)t0)[2])[1]);}

/* op-type? in k26516 in parse-iteration in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_26526(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26526,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_cddr(t2);
if(C_truep((C_word)C_i_nullp(t4))){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_FALSE);}
else{
t5=(C_word)C_i_caddr(t2);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_eqp(t5,t3));}}

/* k26523 in k26516 in parse-iteration in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_26525(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26525,2,t0,t1);}
t2=((C_word*)t0)[2];
f_26686(t2,(C_word)C_a_i_list(&a,1,t1));}

/* k26684 in parse-iteration in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_26686(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  gather-clauses");
f_23613(((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* parse-conditional in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_26264(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word ab[34],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_26264,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_a_i_cons(&a,2,lf[635],t4);
t7=((C_word*)t5)[1];
t8=(C_word)C_i_car(((C_word*)t5)[1]);
t9=C_SCHEME_END_OF_LIST;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_END_OF_LIST;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_END_OF_LIST;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_END_OF_LIST;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_26286,a[2]=t8,a[3]=t7,a[4]=t3,a[5]=t6,a[6]=t16,a[7]=t14,a[8]=t1,a[9]=t10,a[10]=t12,a[11]=t5,tmp=(C_word)a,a+=12,tmp);
t18=(C_word)C_i_cdr(((C_word*)t5)[1]);
if(C_truep((C_word)C_i_nullp(t18))){
C_trace("ChickenBridge.scm: 380  loop-error");
f_23702(t17,t6,t7,(C_word)C_a_i_list(&a,3,lf[638],t8,lf[639]));}
else{
t19=t17;
f_26286(2,t19,C_SCHEME_UNDEFINED);}}

/* k26284 in parse-conditional in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_26286(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26286,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[11])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[11])[1]);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[11])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[11])+1,t5);
t7=C_mutate(((C_word *)((C_word*)t0)[10])+1,t4);
t8=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_26301,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[11])[1]))){
C_trace("ChickenBridge.scm: 380  loop-error");
f_23702(t8,((C_word*)t0)[5],((C_word*)((C_word*)t0)[11])[1],(C_word)C_a_i_list(&a,1,lf[637]));}
else{
t9=t8;
f_26301(2,t9,C_SCHEME_UNDEFINED);}}

/* k26299 in k26284 in parse-conditional in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_26301(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26301,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_26304,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[2],lf[6]);
if(C_truep(t3)){
t4=(C_word)C_a_i_list(&a,2,lf[389],((C_word*)((C_word*)t0)[11])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[11])+1,t4);
t6=t2;
f_26304(t6,t5);}
else{
t4=t2;
f_26304(t4,C_SCHEME_UNDEFINED);}}

/* k26302 in k26299 in k26284 in parse-conditional in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_26304(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26304,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_26307,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26474,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[6],a[5]=((C_word)li413),tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26480,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word)li414),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  call-with-values");
C_call_with_values(4,0,t2,t3,t4);}

/* a26479 in k26302 in k26299 in k26284 in parse-conditional in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_26480(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_26480,4,t0,t1,t2,t3);}
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t5);}

/* a26473 in k26302 in k26299 in k26284 in parse-conditional in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_26474(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26474,2,t0,t1);}
C_trace("ChickenBridge.scm: 380  parse-then-else-dependents");
f_26133(t1,((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k26305 in k26302 in k26299 in k26284 in parse-conditional in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_26307(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26307,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_26310,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[7])+1,t4);
t6=t2;
f_26310(t6,t5);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26456,a[2]=t2,a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  gather-clauses");
f_23613(t4,C_SCHEME_END_OF_LIST,((C_word*)((C_word*)t0)[7])[1]);}}

/* k26454 in k26305 in k26302 in k26299 in k26284 in parse-conditional in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_26456(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_26310(t3,t2);}

/* k26308 in k26305 in k26302 in k26299 in k26284 in parse-conditional in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_26310(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26310,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_26313,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 380  loop-operator-set!");
f_23360(t2,((C_word*)((C_word*)t0)[7])[1],lf[20]);}

/* k26311 in k26308 in k26305 in k26302 in k26299 in k26284 in parse-conditional in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_26313(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26313,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_26437,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26449,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  loop-looping");
t4=C_retrieve2(lf[464],"loop-looping");
f_23414(3,t4,t3,((C_word*)((C_word*)t0)[7])[1]);}

/* k26447 in k26311 in k26308 in k26305 in k26302 in k26299 in k26284 in parse-conditional in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_26449(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26449,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[413],t1);
C_trace("ChickenBridge.scm: 380  append");
t3=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[2],t2,C_SCHEME_END_OF_LIST);}

/* k26435 in k26311 in k26308 in k26305 in k26302 in k26299 in k26284 in parse-conditional in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_26437(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26437,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,4,lf[20],((C_word*)((C_word*)t0)[10])[1],t1,C_SCHEME_FALSE);
t3=C_mutate(((C_word *)((C_word*)t0)[9])+1,t2);
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26320,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
t5=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_26333,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t4,a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[6],tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t6=t5;
f_26333(t6,C_SCHEME_FALSE);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t7=t5;
f_26333(t7,(C_word)C_eqp(t6,lf[16]));}}

/* k26331 in k26435 in k26311 in k26308 in k26305 in k26302 in k26299 in k26284 in parse-conditional in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_26333(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26333,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[9])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[9])+1,t2);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_26340,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[9])[1]))){
C_trace("ChickenBridge.scm: 380  loop-error");
f_23702(t4,((C_word*)t0)[4],((C_word*)t0)[2],(C_word)C_a_i_list(&a,1,lf[636]));}
else{
t5=t4;
f_26340(2,t5,C_SCHEME_UNDEFINED);}}
else{
t2=((C_word*)t0)[6];
f_26320(t2,C_SCHEME_UNDEFINED);}}

/* k26338 in k26331 in k26435 in k26311 in k26308 in k26305 in k26302 in k26299 in k26284 in parse-conditional in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_26340(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26340,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26343,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26396,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word)li411),tmp=(C_word)a,a+=7,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26410,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word)li412),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  call-with-values");
C_call_with_values(4,0,t2,t3,t4);}

/* a26409 in k26338 in k26331 in k26435 in k26311 in k26308 in k26305 in k26302 in k26299 in k26284 in parse-conditional in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_26410(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_26410,4,t0,t1,t2,t3);}
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t5);}

/* a26395 in k26338 in k26331 in k26435 in k26311 in k26308 in k26305 in k26302 in k26299 in k26284 in parse-conditional in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_26396(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26396,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26404,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 380  append");
t4=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,((C_word*)t0)[2],t3);}

/* k26402 in a26395 in k26338 in k26331 in k26435 in k26311 in k26308 in k26305 in k26302 in k26299 in k26284 in parse-conditional in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_26404(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  parse-then-else-dependents");
f_26133(((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],t1,((C_word*)t0)[2]);}

/* k26341 in k26338 in k26331 in k26435 in k26311 in k26308 in k26305 in k26302 in k26299 in k26284 in parse-conditional in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_26343(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26343,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26346,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t6=t2;
f_26346(t6,t5);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26382,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  gather-clauses");
f_23613(t4,C_SCHEME_END_OF_LIST,((C_word*)((C_word*)t0)[2])[1]);}}

/* k26380 in k26341 in k26338 in k26331 in k26435 in k26311 in k26308 in k26305 in k26302 in k26299 in k26284 in parse-conditional in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_26382(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_26346(t3,t2);}

/* k26344 in k26341 in k26338 in k26331 in k26435 in k26311 in k26308 in k26305 in k26302 in k26299 in k26284 in parse-conditional in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_26346(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26346,NULL,2,t0,t1);}
t2=(C_word)C_i_cdddr(((C_word*)((C_word*)t0)[5])[1]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26375,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 380  loop-looping");
t4=C_retrieve2(lf[464],"loop-looping");
f_23414(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k26373 in k26344 in k26341 in k26338 in k26331 in k26435 in k26311 in k26308 in k26305 in k26302 in k26299 in k26284 in parse-conditional in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_26375(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26375,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[413],t1);
t3=(C_word)C_i_set_car(((C_word*)t0)[5],t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26352,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  loop-looping-set!");
f_23420(t4,((C_word*)((C_word*)t0)[4])[1],C_SCHEME_END_OF_LIST);}

/* k26350 in k26373 in k26344 in k26341 in k26338 in k26331 in k26435 in k26311 in k26308 in k26305 in k26302 in k26299 in k26284 in parse-conditional in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_26352(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26352,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26355,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  loop-looping-set!");
f_23420(t2,((C_word*)((C_word*)t0)[2])[1],C_SCHEME_END_OF_LIST);}

/* k26353 in k26350 in k26373 in k26344 in k26341 in k26338 in k26331 in k26435 in k26311 in k26308 in k26305 in k26302 in k26299 in k26284 in parse-conditional in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_26355(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26355,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26359,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_list(&a,2,((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[2])[1]);
C_trace("ChickenBridge.scm: 380  gather-clauses");
f_23613(t2,lf[20],t3);}

/* k26357 in k26353 in k26350 in k26373 in k26344 in k26341 in k26338 in k26331 in k26435 in k26311 in k26308 in k26305 in k26302 in k26299 in k26284 in parse-conditional in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_26359(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_26320(t3,t2);}

/* k26318 in k26435 in k26311 in k26308 in k26305 in k26302 in k26299 in k26284 in parse-conditional in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_26320(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26320,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26323,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[2])[1]);
C_trace("ChickenBridge.scm: 380  loop-looping-set!");
f_23420(t2,((C_word*)((C_word*)t0)[4])[1],t3);}

/* k26321 in k26318 in k26435 in k26311 in k26308 in k26305 in k26302 in k26299 in k26284 in parse-conditional in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_26323(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  values");
C_values(4,0,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* parse-then-else-dependents in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_26133(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26133,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t5)[1];
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_END_OF_LIST;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26137,a[2]=t5,a[3]=t11,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t13=C_SCHEME_UNDEFINED;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_set_block_item(t14,0,(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_26142,a[2]=t3,a[3]=t14,a[4]=t7,a[5]=t11,a[6]=t4,a[7]=t9,a[8]=t5,a[9]=((C_word)li409),tmp=(C_word)a,a+=10,tmp));
t16=((C_word*)t14)[1];
f_26142(t16,t12,C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* do4434 in parse-then-else-dependents in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_26142(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26142,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]);
t9=(C_truep(t8)?t8:((C_word*)((C_word*)t0)[7])[1]);
if(C_truep(t9)){
t10=t1;
((C_proc2)(void*)(*((C_word*)t10+1)))(2,t10,C_SCHEME_UNDEFINED);}
else{
t10=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t11=((C_word*)t0)[6];
t12=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_26090,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[6],a[5]=t6,a[6]=t1,a[7]=((C_word*)t0)[3],a[8]=t7,a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[4],a[11]=((C_word*)t0)[5],a[12]=t5,tmp=(C_word)a,a+=13,tmp);
C_trace("ChickenBridge.scm: 380  loop-op?");
f_23684(t12,t10,t11);}}

/* k26088 in do4434 in parse-then-else-dependents in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_26090(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26090,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_26096,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=t1,tmp=(C_word)a,a+=14,tmp);
if(C_truep(t1)){
t3=(C_word)C_i_cddr(t1);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t2;
f_26096(t4,C_SCHEME_FALSE);}
else{
t4=(C_word)C_i_caddr(t1);
t5=(C_word)C_eqp(t4,lf[632]);
if(C_truep(t5)){
t6=(C_word)C_i_car(t1);
t7=(C_word)C_i_member(t6,lf[633]);
t8=t2;
f_26096(t8,(C_word)C_i_not(t7));}
else{
t6=t2;
f_26096(t6,C_SCHEME_FALSE);}}}
else{
t3=t2;
f_26096(t3,C_SCHEME_FALSE);}}

/* k26094 in k26088 in do4434 in parse-then-else-dependents in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_26096(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26096,NULL,2,t0,t1);}
t2=(C_truep(t1)?((C_word*)t0)[13]:C_SCHEME_FALSE);
t3=C_mutate(((C_word *)((C_word*)t0)[12])+1,t2);
t4=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_26159,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[12],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],a[12]=((C_word*)t0)[11],tmp=(C_word)a,a+=13,tmp);
t5=((C_word*)((C_word*)t0)[12])[1];
if(C_truep(t5)){
t6=t4;
f_26159(2,t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
C_trace("ChickenBridge.scm: 380  loop-error");
f_23702(t4,((C_word*)t0)[4],((C_word*)((C_word*)t0)[10])[1],(C_word)C_a_i_list(&a,3,lf[630],t6,lf[631]));}}

/* k26157 in k26094 in k26088 in do4434 in parse-then-else-dependents in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_26159(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26159,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_26162,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[12],tmp=(C_word)a,a+=12,tmp);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26232,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[6],a[7]=((C_word)li407),tmp=(C_word)a,a+=8,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26245,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[5],a[4]=((C_word)li408),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  call-with-values");
C_call_with_values(4,0,t2,t3,t4);}

/* a26244 in k26157 in k26094 in k26088 in do4434 in parse-then-else-dependents in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_26245(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_26245,4,t0,t1,t2,t3);}
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t5);}

/* a26231 in k26157 in k26094 in k26088 in do4434 in parse-then-else-dependents in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_26232(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26232,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26240,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t1,a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 380  append");
t3=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k26238 in a26231 in k26157 in k26094 in k26088 in do4434 in parse-then-else-dependents in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_26240(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[5])[1]);
t3=t2;
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],t1,((C_word*)t0)[2]);}

/* k26160 in k26157 in k26094 in k26088 in do4434 in parse-then-else-dependents in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_26162(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26162,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_26166,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 380  append");
t4=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,((C_word*)((C_word*)t0)[11])[1],t3);}

/* k26164 in k26160 in k26157 in k26094 in k26088 in do4434 in parse-then-else-dependents in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_26166(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26166,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[11])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[10])+1,((C_word*)((C_word*)t0)[9])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[9])+1,((C_word*)((C_word*)t0)[8])[1]);
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26171,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[9])[1]))){
t6=t5;
f_26171(2,t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
t7=(C_word)C_eqp(t6,lf[387]);
if(C_truep(t7)){
t8=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[9])[1]);
t9=C_mutate(((C_word *)((C_word*)t0)[9])+1,t8);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[9])[1]))){
C_trace("ChickenBridge.scm: 380  loop-error");
f_23702(t5,((C_word*)t0)[3],((C_word*)((C_word*)t0)[10])[1],(C_word)C_a_i_list(&a,1,lf[629]));}
else{
t10=t5;
f_26171(2,t10,C_SCHEME_UNDEFINED);}}
else{
t8=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
t9=(C_word)C_eqp(t8,lf[16]);
if(C_truep(t9)){
t10=C_set_block_item(((C_word*)t0)[2],0,C_SCHEME_TRUE);
t11=t5;
f_26171(2,t11,t10);}
else{
t10=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26209,a[2]=t5,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t11=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
C_trace("ChickenBridge.scm: 380  loop-op?");
f_23684(t10,t11,((C_word*)t0)[3]);}}}}

/* k26207 in k26164 in k26160 in k26157 in k26094 in k26088 in do4434 in parse-then-else-dependents in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_26209(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_TRUE);
t3=((C_word*)t0)[2];
f_26171(2,t3,t2);}
else{
t2=((C_word*)t0)[2];
f_26171(2,t2,C_SCHEME_UNDEFINED);}}

/* k26169 in k26164 in k26160 in k26157 in k26094 in k26088 in do4434 in parse-then-else-dependents in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_26171(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[6])[1];
f_26142(t2,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k26135 in parse-then-else-dependents in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_26137(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  values");
C_values(4,0,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* parse-return in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_26032(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[23],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_26032,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_car(((C_word*)t5)[1]);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26039,a[2]=t4,a[3]=t6,a[4]=t1,a[5]=t10,a[6]=t8,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
t12=(C_word)C_i_cdr(((C_word*)t5)[1]);
if(C_truep((C_word)C_i_nullp(t12))){
t13=(C_word)C_i_car(((C_word*)t5)[1]);
C_trace("ChickenBridge.scm: 380  loop-error");
f_23702(t11,t4,((C_word*)t5)[1],(C_word)C_a_i_list(&a,3,lf[626],t13,lf[627]));}
else{
t13=t11;
f_26039(2,t13,C_SCHEME_UNDEFINED);}}

/* k26037 in parse-return in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_26039(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26039,2,t0,t1);}
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[7])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[7])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[7])+1,t4);
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26070,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 380  loop-op?");
f_23684(t6,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k26068 in k26037 in parse-return in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_26070(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26070,2,t0,t1);}
t2=(C_word)C_i_cadddr(t1);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26058,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26066,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  func");
t6=((C_word*)((C_word*)t0)[5])[1];
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[2])[1]);}

/* k26064 in k26068 in k26037 in parse-return in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_26066(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26066,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
C_trace("ChickenBridge.scm: 380  make-loop-clause");
f_23462(((C_word*)t0)[2],(C_word)C_a_i_list(&a,4,lf[470],lf[612],lf[475],t2));}

/* k26056 in k26068 in k26037 in parse-return in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_26058(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-thereis in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_25941(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[26],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_25941,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_car(((C_word*)t5)[1]);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_25948,a[2]=t4,a[3]=t6,a[4]=t10,a[5]=t1,a[6]=t12,a[7]=t8,a[8]=t5,tmp=(C_word)a,a+=9,tmp);
t14=(C_word)C_i_cdr(((C_word*)t5)[1]);
if(C_truep((C_word)C_i_nullp(t14))){
t15=(C_word)C_i_car(((C_word*)t5)[1]);
C_trace("ChickenBridge.scm: 380  loop-error");
f_23702(t13,t4,((C_word*)t5)[1],(C_word)C_a_i_list(&a,3,lf[623],t15,lf[624]));}
else{
t15=t13;
f_25948(2,t15,C_SCHEME_UNDEFINED);}}

/* k25946 in parse-thereis in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_25948(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25948,2,t0,t1);}
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[8])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26016,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 380  loop-op?");
f_23684(t4,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k26014 in k25946 in parse-thereis in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_26016(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26016,2,t0,t1);}
t2=(C_word)C_i_cadddr(t1);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25959,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
t5=(C_word)C_eqp(((C_word*)t0)[2],lf[620]);
if(C_truep(t5)){
t6=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_FALSE);
t7=t4;
f_25959(t7,t6);}
else{
t6=(C_word)C_eqp(((C_word*)t0)[2],lf[621]);
if(C_truep(t6)){
t7=(C_word)C_a_i_list(&a,2,lf[389],((C_word*)((C_word*)t0)[4])[1]);
t8=C_mutate(((C_word *)((C_word*)t0)[4])+1,t7);
t9=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_TRUE);
t10=t4;
f_25959(t10,t9);}
else{
t7=(C_word)C_eqp(((C_word*)t0)[2],lf[622]);
if(C_truep(t7)){
t8=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_TRUE);
t9=t4;
f_25959(t9,t8);}
else{
t8=t4;
f_25959(t8,C_SCHEME_UNDEFINED);}}}}

/* k25957 in k26014 in k25946 in parse-thereis in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_25959(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25959,NULL,2,t0,t1);}
t2=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25970,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25986,a[2]=t4,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t6=(C_word)C_i_not(((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 380  func");
t7=((C_word*)((C_word*)t0)[2])[1];
((C_proc3)C_retrieve_proc(t7))(3,t7,t5,t6);}

/* k25984 in k25957 in k26014 in k25946 in parse-thereis in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_25986(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25986,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,lf[20],((C_word*)((C_word*)t0)[4])[1],t1);
t3=(C_word)C_a_i_list(&a,1,t2);
t4=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 380  make-loop-clause");
f_23462(((C_word*)t0)[2],(C_word)C_a_i_list(&a,6,lf[470],lf[620],lf[475],t3,lf[478],t4));}

/* k25968 in k25957 in k26014 in k25946 in parse-thereis in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_25970(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-while-until in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_25875(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[19],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_25875,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t5)[1];
t7=(C_word)C_i_car(((C_word*)t5)[1]);
t8=(C_word)C_i_cdr(((C_word*)t5)[1]);
t9=C_set_block_item(t5,0,t8);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25886,a[2]=t7,a[3]=t11,a[4]=t5,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t5)[1]))){
C_trace("ChickenBridge.scm: 380  loop-error");
f_23702(t12,t4,t6,(C_word)C_a_i_list(&a,3,lf[617],t7,lf[618]));}
else{
t13=t12;
f_25886(2,t13,C_SCHEME_UNDEFINED);}}

/* k25884 in parse-while-until in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_25886(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25886,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25889,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[2],lf[615]);
if(C_truep(t3)){
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t8=t2;
f_25889(t8,t7);}
else{
t4=(C_word)C_eqp(((C_word*)t0)[2],lf[616]);
if(C_truep(t4)){
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[4])+1,t6);
t8=(C_word)C_a_i_list(&a,2,lf[389],t5);
t9=C_mutate(((C_word *)((C_word*)t0)[3])+1,t8);
t10=t2;
f_25889(t10,t9);}
else{
t5=t2;
f_25889(t5,C_SCHEME_UNDEFINED);}}}

/* k25887 in k25884 in parse-while-until in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_25889(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25889,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25896,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_list(&a,3,lf[20],((C_word*)((C_word*)t0)[3])[1],lf[614]);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 380  make-loop-clause");
f_23462(t2,(C_word)C_a_i_list(&a,4,lf[470],((C_word*)t0)[2],lf[475],t4));}

/* k25894 in k25887 in k25884 in parse-while-until in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_25896(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* loop-return in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_25869(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_25869,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_list(&a,2,lf[612],t2));}

/* parse-accumulation in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_25323(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word ab[55],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_25323,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t5)[1];
t7=(C_word)C_i_car(((C_word*)t5)[1]);
t8=(C_word)C_i_cdr(((C_word*)t5)[1]);
t9=C_set_block_item(t5,0,t8);
t10=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25332,a[2]=((C_word)li397),tmp=(C_word)a,a+=3,tmp);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25337,a[2]=((C_word)li398),tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25342,a[2]=((C_word)li399),tmp=(C_word)a,a+=3,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_FALSE;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=C_SCHEME_FALSE;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_SCHEME_END_OF_LIST;
t22=(*a=C_VECTOR_TYPE|1,a[1]=t21,tmp=(C_word)a,a+=2,tmp);
t23=C_SCHEME_END_OF_LIST;
t24=(*a=C_VECTOR_TYPE|1,a[1]=t23,tmp=(C_word)a,a+=2,tmp);
t25=C_SCHEME_END_OF_LIST;
t26=(*a=C_VECTOR_TYPE|1,a[1]=t25,tmp=(C_word)a,a+=2,tmp);
t27=C_SCHEME_END_OF_LIST;
t28=(*a=C_VECTOR_TYPE|1,a[1]=t27,tmp=(C_word)a,a+=2,tmp);
t29=(*a=C_CLOSURE_TYPE|18,a[1]=(C_word)f_25354,a[2]=t3,a[3]=t11,a[4]=t6,a[5]=t4,a[6]=t12,a[7]=t10,a[8]=t20,a[9]=t24,a[10]=t26,a[11]=t22,a[12]=t28,a[13]=t7,a[14]=t18,a[15]=t1,a[16]=t16,a[17]=t14,a[18]=t5,tmp=(C_word)a,a+=19,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t5)[1]))){
C_trace("ChickenBridge.scm: 380  loop-error");
f_23702(t29,t4,((C_word*)t5)[1],(C_word)C_a_i_list(&a,3,lf[609],t7,lf[610]));}
else{
t30=t29;
f_25354(2,t30,C_SCHEME_UNDEFINED);}}

/* k25352 in parse-accumulation in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_25354(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[29],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25354,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[18])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[18])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[18])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[17])+1,t2);
t6=(*a=C_CLOSURE_TYPE|18,a[1]=(C_word)f_25365,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[17],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],a[12]=((C_word*)t0)[11],a[13]=((C_word*)t0)[12],a[14]=((C_word*)t0)[13],a[15]=((C_word*)t0)[14],a[16]=((C_word*)t0)[18],a[17]=((C_word*)t0)[15],a[18]=((C_word*)t0)[16],tmp=(C_word)a,a+=19,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[18])[1]))){
t7=t6;
f_25365(2,t7,C_SCHEME_UNDEFINED);}
else{
t7=(C_word)C_i_car(((C_word*)((C_word*)t0)[18])[1]);
t8=(C_word)C_eqp(t7,lf[605]);
if(C_truep(t8)){
t9=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25818,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t6,a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[18],tmp=(C_word)a,a+=7,tmp);
t10=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[18])[1]);
if(C_truep((C_word)C_i_nullp(t10))){
C_trace("ChickenBridge.scm: 380  loop-error");
f_23702(t9,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[608]));}
else{
t11=t9;
f_25818(2,t11,C_SCHEME_UNDEFINED);}}
else{
t9=t6;
f_25365(2,t9,C_SCHEME_UNDEFINED);}}}

/* k25816 in k25352 in parse-accumulation in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_25818(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25818,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25824,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[6])[1]);
C_trace("ChickenBridge.scm: 380  loop-variable?");
f_23690(t2,t3);}

/* k25822 in k25816 in k25352 in parse-accumulation in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_25824(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25824,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[6])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[6])+1,t4);
t6=((C_word*)t0)[4];
f_25365(2,t6,t5);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
C_trace("ChickenBridge.scm: 380  loop-error");
f_23702(((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],(C_word)C_a_i_list(&a,3,lf[606],t2,lf[607]));}}

/* k25363 in k25352 in parse-accumulation in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_25365(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25365,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|17,a[1]=(C_word)f_25369,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[12],a[12]=((C_word*)t0)[13],a[13]=((C_word*)t0)[14],a[14]=((C_word*)t0)[15],a[15]=((C_word*)t0)[16],a[16]=((C_word*)t0)[17],a[17]=((C_word*)t0)[18],tmp=(C_word)a,a+=18,tmp);
t3=((C_word*)((C_word*)t0)[8])[1];
t4=((C_word*)t0)[2];
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25250,a[2]=t3,a[3]=t7,a[4]=t5,a[5]=((C_word)li401),tmp=(C_word)a,a+=6,tmp));
t9=((C_word*)t7)[1];
f_25250(t9,t2,C_SCHEME_FALSE);}

/* do4256 in k25363 in k25352 in parse-accumulation in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_25250(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25250,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[4])[1]);
t5=(C_truep(t4)?t4:((C_word*)t3)[1]);
if(C_truep(t5)){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,((C_word*)t3)[1]);}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25264,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25275,a[2]=t6,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t8=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 380  loop-collectors");
t9=C_retrieve2(lf[461],"loop-collectors");
f_23378(3,t9,t7,t8);}}

/* k25273 in do4256 in k25363 in k25352 in parse-accumulation in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_25275(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25275,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25210,a[2]=((C_word*)t0)[3],a[3]=t5,a[4]=t3,a[5]=((C_word)li400),tmp=(C_word)a,a+=6,tmp));
t7=((C_word*)t5)[1];
f_25210(t7,((C_word*)t0)[2],C_SCHEME_FALSE);}

/* do4248 in k25273 in do4256 in k25363 in k25352 in parse-accumulation in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_25210(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25210,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[4])[1]);
t5=(C_truep(t4)?t4:((C_word*)t3)[1]);
if(C_truep(t5)){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,((C_word*)t3)[1]);}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25223,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t7=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t8=(C_word)C_i_car(t7);
t9=(C_word)C_eqp(((C_word*)t0)[2],t8);
if(C_truep(t9)){
t10=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t11=C_set_block_item(t3,0,t10);
t12=t6;
f_25223(t12,t11);}
else{
t10=t6;
f_25223(t10,C_SCHEME_UNDEFINED);}}}

/* k25221 in do4248 in k25273 in do4256 in k25363 in k25352 in parse-accumulation in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_25223(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=((C_word*)((C_word*)t0)[4])[1];
f_25210(t4,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k25262 in do4256 in k25363 in k25352 in parse-accumulation in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_25264(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=((C_word*)((C_word*)t0)[3])[1];
f_25250(t5,((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1]);}

/* k25367 in k25363 in k25352 in parse-accumulation in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_25369(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25369,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[17])+1,t1);
t3=(*a=C_CLOSURE_TYPE|14,a[1]=(C_word)f_25372,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[12],a[10]=((C_word*)t0)[13],a[11]=((C_word*)t0)[17],a[12]=((C_word*)t0)[14],a[13]=((C_word*)t0)[15],a[14]=((C_word*)t0)[16],tmp=(C_word)a,a+=15,tmp);
t4=((C_word*)((C_word*)t0)[17])[1];
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25802,a[2]=((C_word*)t0)[17],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[13],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=t3,tmp=(C_word)a,a+=8,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25806,a[2]=t5,a[3]=((C_word*)t0)[13],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  collector-type");
f_25337(t6,((C_word*)((C_word*)t0)[17])[1]);}
else{
t5=C_set_block_item(((C_word*)t0)[14],0,C_SCHEME_TRUE);
t6=t3;
f_25372(2,t6,t5);}}

/* k25804 in k25367 in k25363 in k25352 in parse-accumulation in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_25806(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a;
t2=lf[602];
t3=lf[603];
t4=lf[604];
t5=(C_word)C_eqp(((C_word*)t0)[3],t1);
if(C_truep(t5)){
t6=((C_word*)t0)[2];
f_25802(t6,t5);}
else{
t6=(C_word)C_i_member(((C_word*)t0)[3],t2);
t7=(C_truep(t6)?(C_word)C_i_member(t1,t2):C_SCHEME_FALSE);
if(C_truep(t7)){
t8=((C_word*)t0)[2];
f_25802(t8,t7);}
else{
t8=(C_word)C_i_member(((C_word*)t0)[3],t3);
t9=(C_truep(t8)?(C_word)C_i_member(t1,t3):C_SCHEME_FALSE);
if(C_truep(t9)){
t10=((C_word*)t0)[2];
f_25802(t10,t9);}
else{
t10=(C_word)C_i_member(((C_word*)t0)[3],t4);
t11=((C_word*)t0)[2];
f_25802(t11,(C_truep(t10)?(C_word)C_i_member(t1,t4):C_SCHEME_FALSE));}}}}

/* k25800 in k25367 in k25363 in k25352 in parse-accumulation in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_25802(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25802,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[7];
f_25372(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25798,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 380  collector-type");
f_25337(t2,((C_word*)((C_word*)t0)[2])[1]);}}

/* k25796 in k25800 in k25367 in k25363 in k25352 in parse-accumulation in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_25798(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25798,2,t0,t1);}
C_trace("ChickenBridge.scm: 380  loop-error");
f_23702(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],(C_word)C_a_i_list(&a,5,lf[599],t1,lf[600],((C_word*)t0)[2],lf[601]));}

/* k25370 in k25367 in k25363 in k25352 in parse-accumulation in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_25372(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[61],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25372,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_25375,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[12],a[9]=((C_word*)t0)[13],a[10]=((C_word*)t0)[14],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[10],lf[583]);
t4=(C_truep(t3)?t3:(C_word)C_eqp(((C_word*)t0)[10],lf[584]));
if(C_truep(t4)){
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25418,a[2]=t2,a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[5],a[5]=t6,a[6]=((C_word*)t0)[10],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[12])[1])){
t8=((C_word*)((C_word*)t0)[4])[1];
t9=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_25456,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=t7,a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[6],a[9]=t6,tmp=(C_word)a,a+=10,tmp);
if(C_truep(t8)){
t10=t9;
f_25456(2,t10,t8);}
else{
C_trace("ChickenBridge.scm: 380  gensym");
t10=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t10))(3,t10,t9,lf[585]);}}
else{
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25485,a[2]=t7,a[3]=t6,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  collector-acc");
f_25342(t8,((C_word*)((C_word*)t0)[11])[1]);}}
else{
t5=(C_word)C_eqp(((C_word*)t0)[10],lf[586]);
t6=(C_truep(t5)?t5:(C_word)C_eqp(((C_word*)t0)[10],lf[587]));
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_25497,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[11],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[12],a[8]=t2,a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[5],a[11]=((C_word*)t0)[6],a[12]=((C_word*)t0)[10],tmp=(C_word)a,a+=13,tmp);
C_trace("ChickenBridge.scm: 380  gensym");
t8=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t8))(3,t8,t7,lf[589]);}
else{
t7=(C_word)C_eqp(((C_word*)t0)[10],lf[18]);
t8=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_25592,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[11],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[12],a[9]=((C_word*)t0)[5],a[10]=((C_word*)t0)[10],a[11]=t2,a[12]=((C_word*)t0)[8],a[13]=((C_word*)t0)[4],tmp=(C_word)a,a+=14,tmp);
if(C_truep(t7)){
t9=t8;
f_25592(t9,t7);}
else{
t9=(C_word)C_eqp(((C_word*)t0)[10],lf[593]);
t10=t8;
f_25592(t10,(C_truep(t9)?t9:(C_word)C_eqp(((C_word*)t0)[10],lf[598])));}}}}

/* k25590 in k25370 in k25367 in k25363 in k25352 in parse-accumulation in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_25592(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[35],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25592,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_25595,a[2]=t5,a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[11],a[6]=((C_word*)t0)[12],a[7]=t3,a[8]=((C_word*)t0)[13],tmp=(C_word)a,a+=9,tmp);
t7=((C_word*)((C_word*)t0)[8])[1];
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_25708,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t6,a[6]=((C_word*)t0)[13],a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[7],a[10]=t3,a[11]=t5,tmp=(C_word)a,a+=12,tmp);
if(C_truep(((C_word*)((C_word*)t0)[13])[1])){
t9=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25766,a[2]=t8,a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  make-binding");
f_23696(t9,((C_word*)((C_word*)t0)[13])[1],lf[597]);}
else{
t9=t8;
f_25708(t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25701,a[2]=t6,a[3]=t3,a[4]=((C_word*)t0)[5],a[5]=t5,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 380  collector-acc");
f_25342(t8,((C_word*)((C_word*)t0)[5])[1]);}}
else{
t2=((C_word*)t0)[11];
f_25375(t2,C_SCHEME_UNDEFINED);}}

/* k25699 in k25590 in k25370 in k25367 in k25363 in k25352 in parse-accumulation in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_25701(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=((C_word*)((C_word*)t0)[4])[1];
t4=(C_word)C_i_cadddr(t3);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=((C_word*)t0)[2];
f_25595(t6,t5);}

/* k25764 in k25590 in k25370 in k25367 in k25363 in k25352 in parse-accumulation in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_25766(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25766,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_25708(t4,((C_word*)((C_word*)t0)[3])[1]);}

/* k25706 in k25590 in k25370 in k25367 in k25363 in k25352 in parse-accumulation in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_25708(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25708,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_25712,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 380  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[596]);}

/* k25710 in k25706 in k25590 in k25370 in k25367 in k25363 in k25352 in parse-accumulation in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_25712(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25712,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[11])+1,t1);
t3=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_25716,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 380  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[595]);}

/* k25714 in k25710 in k25706 in k25590 in k25370 in k25367 in k25363 in k25352 in parse-accumulation in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_25716(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25716,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[11])+1,t1);
t3=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_25758,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 380  make-binding");
f_23696(t3,((C_word*)((C_word*)t0)[11])[1],lf[594]);}

/* k25756 in k25714 in k25710 in k25706 in k25590 in k25370 in k25367 in k25363 in k25352 in parse-accumulation in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_25758(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25758,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[11])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t4=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_25754,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 380  make-binding");
f_23696(t4,((C_word*)((C_word*)t0)[10])[1],C_SCHEME_FALSE);}

/* k25752 in k25756 in k25714 in k25710 in k25706 in k25590 in k25370 in k25367 in k25363 in k25352 in parse-accumulation in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_25754(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25754,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[11])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[10])[1],((C_word*)((C_word*)t0)[9])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[8])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[8])+1,t5);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25732,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 380  make-collector");
f_25332(t7,((C_word*)((C_word*)t0)[6])[1],((C_word*)t0)[2],((C_word*)((C_word*)t0)[10])[1],((C_word*)((C_word*)t0)[9])[1]);}

/* k25730 in k25752 in k25756 in k25714 in k25710 in k25706 in k25590 in k25370 in k25367 in k25363 in k25352 in parse-accumulation in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_25732(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25732,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=((C_word*)((C_word*)t0)[5])[1];
if(C_truep(t3)){
t4=((C_word*)t0)[4];
f_25595(t4,C_SCHEME_UNDEFINED);}
else{
t4=(C_word)C_a_i_list(&a,2,lf[15],((C_word*)((C_word*)t0)[3])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[2])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[2])+1,t5);
t7=((C_word*)t0)[4];
f_25595(t7,((C_word*)((C_word*)t0)[2])[1]);}}

/* k25593 in k25590 in k25370 in k25367 in k25363 in k25352 in parse-accumulation in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_25595(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word ab[114],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25595,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25598,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[4],lf[18]);
if(C_truep(t3)){
t4=(C_word)C_a_i_list(&a,1,lf[590]);
t5=(C_word)C_a_i_list(&a,3,lf[18],((C_word*)((C_word*)t0)[3])[1],t4);
t6=(C_word)C_a_i_list(&a,3,lf[591],((C_word*)((C_word*)t0)[2])[1],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,((C_word*)((C_word*)t0)[6])[1]);
t8=C_mutate(((C_word *)((C_word*)t0)[6])+1,t7);
t9=(C_word)C_a_i_list(&a,2,lf[592],((C_word*)((C_word*)t0)[2])[1]);
t10=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[2])[1],t9);
t11=(C_word)C_a_i_cons(&a,2,t10,((C_word*)((C_word*)t0)[6])[1]);
t12=C_mutate(((C_word *)((C_word*)t0)[6])+1,t11);
t13=t2;
f_25598(t13,((C_word*)((C_word*)t0)[6])[1]);}
else{
t4=(C_word)C_eqp(((C_word*)t0)[4],lf[593]);
if(C_truep(t4)){
t5=(C_word)C_a_i_list(&a,2,lf[590],((C_word*)((C_word*)t0)[3])[1]);
t6=(C_word)C_a_i_list(&a,3,lf[591],((C_word*)((C_word*)t0)[2])[1],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,((C_word*)((C_word*)t0)[6])[1]);
t8=C_mutate(((C_word *)((C_word*)t0)[6])+1,t7);
t9=(C_word)C_a_i_list(&a,2,lf[15],((C_word*)((C_word*)t0)[2])[1]);
t10=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[2])[1],t9);
t11=(C_word)C_a_i_cons(&a,2,t10,((C_word*)((C_word*)t0)[6])[1]);
t12=C_mutate(((C_word *)((C_word*)t0)[6])+1,t11);
t13=t2;
f_25598(t13,((C_word*)((C_word*)t0)[6])[1]);}
else{
t5=(C_word)C_a_i_list(&a,3,lf[591],((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[3])[1]);
t6=(C_word)C_a_i_cons(&a,2,t5,((C_word*)((C_word*)t0)[6])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[6])+1,t6);
t8=(C_word)C_a_i_list(&a,2,lf[592],((C_word*)((C_word*)t0)[2])[1]);
t9=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[2])[1],t8);
t10=(C_word)C_a_i_cons(&a,2,t9,((C_word*)((C_word*)t0)[6])[1]);
t11=C_mutate(((C_word *)((C_word*)t0)[6])+1,t10);
t12=t2;
f_25598(t12,((C_word*)((C_word*)t0)[6])[1]);}}}

/* k25596 in k25593 in k25590 in k25370 in k25367 in k25363 in k25352 in parse-accumulation in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_25598(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25598,NULL,2,t0,t1);}
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
t2=(C_word)C_a_i_list(&a,2,lf[15],((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[5])[1],t2);
t4=(C_word)C_a_i_cons(&a,2,t3,((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=((C_word*)t0)[2];
f_25375(t6,((C_word*)((C_word*)t0)[3])[1]);}
else{
t2=((C_word*)t0)[2];
f_25375(t2,C_SCHEME_UNDEFINED);}}

/* k25495 in k25370 in k25367 in k25363 in k25352 in parse-accumulation in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_25497(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25497,2,t0,t1);}
t2=(C_word)C_eqp(((C_word*)t0)[12],lf[586]);
t3=(C_truep(t2)?lf[340]:lf[416]);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_25503,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],a[4]=t3,a[5]=t5,a[6]=((C_word*)t0)[10],a[7]=t1,a[8]=((C_word*)t0)[11],tmp=(C_word)a,a+=9,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
t7=((C_word*)((C_word*)t0)[6])[1];
t8=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_25547,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t6,a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[11],a[9]=t5,tmp=(C_word)a,a+=10,tmp);
if(C_truep(t7)){
t9=t8;
f_25547(2,t9,t7);}
else{
C_trace("ChickenBridge.scm: 380  gensym");
t9=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t9))(3,t9,t8,lf[588]);}}
else{
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25580,a[2]=t6,a[3]=t5,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  collector-acc");
f_25342(t7,((C_word*)((C_word*)t0)[5])[1]);}}

/* k25578 in k25495 in k25370 in k25367 in k25363 in k25352 in parse-accumulation in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_25580(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_25503(t3,t2);}

/* k25545 in k25495 in k25370 in k25367 in k25363 in k25352 in parse-accumulation in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_25547(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25547,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,t1);
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_25573,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 380  make-binding");
f_23696(t3,((C_word*)((C_word*)t0)[9])[1],C_SCHEME_FALSE);}

/* k25571 in k25545 in k25495 in k25370 in k25367 in k25363 in k25352 in parse-accumulation in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_25573(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25573,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[9])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[9])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25555,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 380  make-collector");
f_25332(t4,((C_word*)((C_word*)t0)[7])[1],((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_FALSE);}

/* k25553 in k25571 in k25545 in k25495 in k25370 in k25367 in k25363 in k25352 in parse-accumulation in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_25555(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25555,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=((C_word*)((C_word*)t0)[5])[1];
if(C_truep(t3)){
t4=((C_word*)t0)[4];
f_25503(t4,C_SCHEME_UNDEFINED);}
else{
t4=(C_word)C_a_i_list(&a,3,lf[388],((C_word*)((C_word*)t0)[3])[1],C_fix(0));
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[2])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[2])+1,t5);
t7=((C_word*)t0)[4];
f_25503(t7,((C_word*)((C_word*)t0)[2])[1]);}}

/* k25501 in k25495 in k25370 in k25367 in k25363 in k25352 in parse-accumulation in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_25503(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25503,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_25543,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 380  make-binding");
f_23696(t2,((C_word*)t0)[7],C_SCHEME_FALSE);}

/* k25541 in k25501 in k25495 in k25370 in k25367 in k25363 in k25352 in parse-accumulation in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_25543(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[66],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25543,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[8])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[8])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[7],((C_word*)((C_word*)t0)[6])[1]);
t5=(C_word)C_a_i_list(&a,2,lf[389],((C_word*)((C_word*)t0)[5])[1]);
t6=(C_word)C_a_i_list(&a,3,((C_word*)t0)[4],((C_word*)t0)[7],((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_a_i_list(&a,3,lf[388],t5,t6);
t8=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[7]);
t9=(C_word)C_a_i_list(&a,3,lf[20],t7,t8);
t10=(C_word)C_a_i_list(&a,3,lf[413],t4,t9);
t11=(C_word)C_a_i_cons(&a,2,t10,((C_word*)((C_word*)t0)[3])[1]);
t12=C_mutate(((C_word *)((C_word*)t0)[3])+1,t11);
t13=((C_word*)t0)[2];
f_25375(t13,((C_word*)((C_word*)t0)[3])[1]);}

/* k25483 in k25370 in k25367 in k25363 in k25352 in parse-accumulation in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_25485(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_25418(t3,t2);}

/* k25454 in k25370 in k25367 in k25363 in k25352 in parse-accumulation in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_25456(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25456,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,t1);
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_25478,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 380  make-binding");
f_23696(t3,((C_word*)((C_word*)t0)[9])[1],C_fix(0));}

/* k25476 in k25454 in k25370 in k25367 in k25363 in k25352 in parse-accumulation in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_25478(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25478,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[9])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[9])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25464,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 380  make-collector");
f_25332(t4,((C_word*)((C_word*)t0)[7])[1],((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_FALSE);}

/* k25462 in k25476 in k25454 in k25370 in k25367 in k25363 in k25352 in parse-accumulation in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_25464(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25464,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=((C_word*)((C_word*)t0)[5])[1];
if(C_truep(t3)){
t4=((C_word*)t0)[4];
f_25418(t4,C_SCHEME_UNDEFINED);}
else{
t4=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t6=((C_word*)t0)[4];
f_25418(t6,((C_word*)((C_word*)t0)[2])[1]);}}

/* k25416 in k25370 in k25367 in k25363 in k25352 in parse-accumulation in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_25418(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[51],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25418,NULL,2,t0,t1);}
t2=(C_word)C_eqp(((C_word*)t0)[6],lf[583]);
if(C_truep(t2)){
t3=(C_word)C_a_i_list(&a,3,lf[97],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[5])[1],t3);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25375(t7,((C_word*)((C_word*)t0)[3])[1]);}
else{
t3=(C_word)C_a_i_list(&a,3,lf[97],((C_word*)((C_word*)t0)[5])[1],C_fix(1));
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[5])[1],t3);
t5=(C_word)C_a_i_list(&a,3,lf[20],((C_word*)((C_word*)t0)[4])[1],t4);
t6=(C_word)C_a_i_cons(&a,2,t5,((C_word*)((C_word*)t0)[3])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[3])+1,t6);
t8=((C_word*)t0)[2];
f_25375(t8,((C_word*)((C_word*)t0)[3])[1]);}}

/* k25373 in k25370 in k25367 in k25363 in k25352 in parse-accumulation in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_25375(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25375,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25382,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[10],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_25386,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=t2,a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 380  reverse");
t4=*((C_word*)lf[187]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k25384 in k25373 in k25370 in k25367 in k25363 in k25352 in parse-accumulation in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_25386(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25386,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_25390,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t1,a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 380  reverse");
t3=*((C_word*)lf[187]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k25388 in k25384 in k25373 in k25370 in k25367 in k25363 in k25352 in parse-accumulation in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_25390(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25390,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_25394,a[2]=((C_word*)t0)[3],a[3]=t1,a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 380  reverse");
t3=*((C_word*)lf[187]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k25392 in k25388 in k25384 in k25373 in k25370 in k25367 in k25363 in k25352 in parse-accumulation in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_25394(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25394,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_25398,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 380  reverse");
t3=*((C_word*)lf[187]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k25396 in k25392 in k25388 in k25384 in k25373 in k25370 in k25367 in k25363 in k25352 in parse-accumulation in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_25398(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25398,2,t0,t1);}
t2=(C_truep(((C_word*)((C_word*)t0)[8])[1])?(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[7])[1]):C_SCHEME_END_OF_LIST);
C_trace("ChickenBridge.scm: 380  make-loop-clause");
f_23462(((C_word*)t0)[6],(C_word)C_a_i_list(&a,14,lf[470],((C_word*)t0)[5],lf[471],((C_word*)t0)[4],lf[473],((C_word*)t0)[3],lf[475],((C_word*)t0)[2],lf[478],t1,lf[472],t2,lf[474],C_SCHEME_END_OF_LIST));}

/* k25380 in k25373 in k25370 in k25367 in k25363 in k25352 in parse-accumulation in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_25382(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* collector-acc in parse-accumulation in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_25342(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25342,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_caddr(t2));}

/* collector-type in parse-accumulation in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_25337(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25337,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_cadr(t2));}

/* make-collector in parse-accumulation in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_25332(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25332,NULL,5,t1,t2,t3,t4,t5);}
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_a_i_list(&a,4,t2,t3,t4,t5));}

/* parse-initially in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_25164(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[19],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_25164,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_car(((C_word*)t5)[1]);
t7=(C_word)C_i_cdr(((C_word*)t5)[1]);
t8=C_set_block_item(t5,0,t7);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25175,a[2]=t6,a[3]=t1,a[4]=t10,a[5]=t5,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t5)[1]))){
C_trace("ChickenBridge.scm: 380  loop-error");
f_23702(t11,t4,((C_word*)t5)[1],(C_word)C_a_i_list(&a,3,lf[580],t6,lf[581]));}
else{
t12=t11;
f_25175(2,t12,C_SCHEME_UNDEFINED);}}

/* k25173 in parse-initially in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_25175(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25175,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[5])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25190,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 380  make-loop-clause");
f_23462(t6,(C_word)C_a_i_list(&a,4,lf[470],((C_word*)t0)[2],lf[473],t7));}

/* k25188 in k25173 in parse-initially in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_25190(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-finally in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_25126(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[19],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_25126,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_car(((C_word*)t5)[1]);
t7=(C_word)C_i_cdr(((C_word*)t5)[1]);
t8=C_set_block_item(t5,0,t7);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25137,a[2]=t6,a[3]=t1,a[4]=t10,a[5]=t5,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t5)[1]))){
C_trace("ChickenBridge.scm: 380  loop-error");
f_23702(t11,t4,((C_word*)t5)[1],(C_word)C_a_i_list(&a,3,lf[577],t6,lf[578]));}
else{
t12=t11;
f_25137(2,t12,C_SCHEME_UNDEFINED);}}

/* k25135 in parse-finally in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_25137(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25137,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[5])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25152,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 380  make-loop-clause");
f_23462(t6,(C_word)C_a_i_list(&a,4,lf[470],((C_word*)t0)[2],lf[477],t7));}

/* k25150 in k25135 in parse-finally in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_25152(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-do in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_25059(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[21],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_25059,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t5)[1];
t7=(C_word)C_i_car(((C_word*)t5)[1]);
t8=(C_word)C_i_cdr(((C_word*)t5)[1]);
t9=C_set_block_item(t5,0,t8);
t10=C_SCHEME_END_OF_LIST;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25070,a[2]=t11,a[3]=t7,a[4]=t5,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
t13=C_SCHEME_UNDEFINED;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_set_block_item(t14,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_25079,a[2]=t14,a[3]=t7,a[4]=t6,a[5]=t4,a[6]=t11,a[7]=t5,a[8]=((C_word)li393),tmp=(C_word)a,a+=9,tmp));
t16=((C_word*)t14)[1];
f_25079(t16,t12);}

/* do4205 in parse-do in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_25079(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25079,NULL,2,t0,t1);}
t2=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]);
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_25089,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=t1,a[8]=((C_word*)t0)[6],tmp=(C_word)a,a+=9,tmp);
if(C_truep(t2)){
t4=t3;
f_25089(2,t4,t2);}
else{
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
C_trace("ChickenBridge.scm: 380  loop-op?");
f_23684(t3,t4,((C_word*)t0)[5]);}}

/* k25087 in do4205 in parse-do in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_25089(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25089,2,t0,t1);}
if(C_truep(t1)){
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
C_trace("ChickenBridge.scm: 380  loop-error");
f_23702(((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,3,lf[574],((C_word*)t0)[4],lf[575]));}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25102,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  reverse");
t3=*((C_word*)lf[187]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[8])[1]);}}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t3=(C_word)C_a_i_cons(&a,2,t2,((C_word*)((C_word*)t0)[8])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[8])+1,t3);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)((C_word*)t0)[2])[1];
f_25079(t7,((C_word*)t0)[7]);}}

/* k25100 in k25087 in do4205 in parse-do in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_25102(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}

/* k25068 in parse-do in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_25070(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25070,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25077,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  make-loop-clause");
f_23462(t2,(C_word)C_a_i_list(&a,4,lf[470],((C_word*)t0)[3],lf[475],((C_word*)((C_word*)t0)[2])[1]));}

/* k25075 in k25068 in parse-do in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_25077(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-with in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_24866(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word ab[37],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_24866,5,t0,t1,t2,t3,t4);}
t5=t2;
t6=(C_word)C_i_cdr(t2);
t7=t6;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_END_OF_LIST;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_END_OF_LIST;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_24873,a[2]=t12,a[3]=t10,a[4]=t5,a[5]=t4,a[6]=t14,a[7]=t16,a[8]=t18,a[9]=t8,a[10]=t1,tmp=(C_word)a,a+=11,tmp);
t20=C_SCHEME_UNDEFINED;
t21=(*a=C_VECTOR_TYPE|1,a[1]=t20,tmp=(C_word)a,a+=2,tmp);
t22=C_set_block_item(t21,0,(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_24926,a[2]=t18,a[3]=t16,a[4]=t5,a[5]=t4,a[6]=t14,a[7]=t12,a[8]=t10,a[9]=t21,a[10]=t8,a[11]=((C_word)li391),tmp=(C_word)a,a+=12,tmp));
t23=((C_word*)t21)[1];
f_24926(t23,t19,C_SCHEME_TRUE,C_SCHEME_FALSE);}

/* do4161 in parse-with in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_24926(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24926,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[10])[1]);
t7=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_24936,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=t4,a[10]=((C_word*)t0)[9],a[11]=t5,a[12]=((C_word*)t0)[10],a[13]=t1,tmp=(C_word)a,a+=14,tmp);
if(C_truep(t6)){
t8=t7;
f_24936(2,t8,t6);}
else{
t8=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
C_trace("ChickenBridge.scm: 380  loop-op?");
f_23684(t7,t8,((C_word*)t0)[5]);}}

/* k24934 in do4161 in parse-with in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_24936(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24936,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[13];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[12])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[12])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[12])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24947,a[2]=((C_word*)t0)[11],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[13],a[5]=((C_word*)t0)[10],tmp=(C_word)a,a+=6,tmp);
t7=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_25050,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=t6,a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[7],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[8],a[12]=((C_word*)t0)[9],tmp=(C_word)a,a+=13,tmp);
C_trace("ChickenBridge.scm: 380  loop-variable?");
f_23690(t7,((C_word*)((C_word*)t0)[11])[1]);}}

/* k25048 in k24934 in do4161 in parse-with in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_25050(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[64],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25050,2,t0,t1);}
t2=(C_truep(t1)?((C_word*)((C_word*)t0)[12])[1]:C_SCHEME_FALSE);
if(C_truep(t2)){
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_24956,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[12],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[11],tmp=(C_word)a,a+=10,tmp);
if(C_truep(((C_word*)((C_word*)t0)[11])[1])){
C_trace("ChickenBridge.scm: 380  loop-error");
f_23702(t3,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,3,lf[564],((C_word*)((C_word*)t0)[10])[1],lf[565]));}
else{
t4=t3;
f_24956(2,t4,C_SCHEME_UNDEFINED);}}
else{
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[10])[1],lf[387]);
if(C_truep(t3)){
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24978,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[11],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[8])[1])){
C_trace("ChickenBridge.scm: 380  loop-error");
f_23702(t4,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[566]));}
else{
if(C_truep(((C_word*)((C_word*)t0)[11])[1])){
if(C_truep(((C_word*)((C_word*)t0)[9])[1])){
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25007,a[2]=t4,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[11],a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 380  make-binding");
f_23696(t5,((C_word*)((C_word*)t0)[11])[1],C_SCHEME_FALSE);}
else{
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25015,a[2]=t4,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  make-binding");
f_23696(t5,((C_word*)((C_word*)t0)[11])[1],C_SCHEME_FALSE);}}
else{
C_trace("ChickenBridge.scm: 380  loop-error");
f_23702(t4,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[567]));}}}
else{
t4=(C_word)C_eqp(((C_word*)((C_word*)t0)[10])[1],lf[552]);
if(C_truep(t4)){
if(C_truep(((C_word*)((C_word*)t0)[9])[1])){
C_trace("ChickenBridge.scm: 380  loop-error");
f_23702(((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[568]));}
else{
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t6);
t8=C_mutate(((C_word *)((C_word*)t0)[9])+1,t5);
t9=((C_word*)t0)[7];
f_24947(2,t9,t8);}}
else{
if(C_truep(((C_word*)((C_word*)t0)[12])[1])){
C_trace("ChickenBridge.scm: 380  loop-error");
f_23702(((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,3,lf[569],((C_word*)((C_word*)t0)[10])[1],lf[570]));}
else{
C_trace("ChickenBridge.scm: 380  loop-error");
f_23702(((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,3,lf[571],((C_word*)((C_word*)t0)[10])[1],lf[572]));}}}}}

/* k25013 in k25048 in k24934 in do4161 in parse-with in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_25015(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25015,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_24978(2,t4,((C_word*)((C_word*)t0)[3])[1]);}

/* k25005 in k25048 in k24934 in do4161 in parse-with in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_25007(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25007,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24978(2,t7,((C_word*)((C_word*)t0)[3])[1]);}

/* k24976 in k25048 in k24934 in do4161 in parse-with in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_24978(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_FALSE);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_FALSE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_TRUE);
t6=((C_word*)t0)[2];
f_24947(2,t6,t5);}

/* k24954 in k25048 in k24934 in do4161 in parse-with in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_24956(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24956,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24959,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
C_trace("ChickenBridge.scm: 380  loop-error");
f_23702(t2,((C_word*)t0)[3],((C_word*)t0)[2],(C_word)C_a_i_list(&a,3,lf[562],((C_word*)((C_word*)t0)[8])[1],lf[563]));}
else{
t3=t2;
f_24959(2,t3,C_SCHEME_UNDEFINED);}}

/* k24957 in k24954 in k25048 in k24934 in do4161 in parse-with in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_24959(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[7])+1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_FALSE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_FALSE);
t5=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_FALSE);
t6=((C_word*)t0)[2];
f_24947(2,t6,t5);}

/* k24945 in k24934 in do4161 in parse-with in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_24947(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[5])[1];
f_24926(t2,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k24871 in parse-with in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_24873(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24873,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24876,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[10],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("ChickenBridge.scm: 380  loop-error");
f_23702(t2,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[561]));}
else{
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24916,a[2]=t2,a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 380  make-binding");
f_23696(t3,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24924,a[2]=t2,a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  make-binding");
f_23696(t3,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE);}}
else{
t3=t2;
f_24876(2,t3,C_SCHEME_UNDEFINED);}}}

/* k24922 in k24871 in parse-with in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_24924(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24924,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_24876(2,t4,((C_word*)((C_word*)t0)[3])[1]);}

/* k24914 in k24871 in parse-with in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_24916(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24916,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24876(2,t7,((C_word*)((C_word*)t0)[3])[1]);}

/* k24874 in k24871 in parse-with in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_24876(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24876,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24883,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24887,a[2]=((C_word*)t0)[3],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  reverse");
t4=*((C_word*)lf[187]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k24885 in k24874 in k24871 in parse-with in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_24887(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24887,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24891,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  reverse");
t3=*((C_word*)lf[187]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k24889 in k24885 in k24874 in k24871 in parse-with in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_24891(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24891,2,t0,t1);}
C_trace("ChickenBridge.scm: 380  make-loop-clause");
f_23462(((C_word*)t0)[3],(C_word)C_a_i_list(&a,6,lf[470],lf[560],lf[471],((C_word*)t0)[2],lf[473],t1));}

/* k24881 in k24874 in k24871 in parse-with in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_24883(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-general-iteration in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_24724(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word ab[32],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_24724,5,t0,t1,t2,t3,t4);}
t5=t2;
t6=(C_word)C_i_cadr(t2);
t7=(C_word)C_i_cddr(t2);
t8=t7;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_FALSE;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24734,a[2]=t6,a[3]=t17,a[4]=t15,a[5]=t11,a[6]=t9,a[7]=t1,tmp=(C_word)a,a+=8,tmp);
t19=C_SCHEME_UNDEFINED;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_set_block_item(t20,0,(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_24772,a[2]=t17,a[3]=t11,a[4]=t5,a[5]=t4,a[6]=t13,a[7]=t15,a[8]=t6,a[9]=t20,a[10]=t9,a[11]=((C_word)li389),tmp=(C_word)a,a+=12,tmp));
t22=((C_word*)t20)[1];
f_24772(t22,t18,C_SCHEME_FALSE);}

/* do4123 in parse-general-iteration in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_24772(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24772,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[10])[1]);
t5=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_24782,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=t3,a[11]=((C_word*)t0)[10],a[12]=t1,tmp=(C_word)a,a+=13,tmp);
if(C_truep(t4)){
t6=t5;
f_24782(2,t6,t4);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
C_trace("ChickenBridge.scm: 380  loop-op?");
f_23684(t5,t6,((C_word*)t0)[5]);}}

/* k24780 in do4123 in parse-general-iteration in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_24782(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24782,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[12];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[11])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[11])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[11])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[10])+1,t2);
t6=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_24793,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[12],a[11]=((C_word*)t0)[9],a[12]=((C_word*)t0)[10],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[11])[1]))){
C_trace("ChickenBridge.scm: 380  loop-error");
f_23702(t6,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[558]));}
else{
t7=t6;
f_24793(2,t7,C_SCHEME_UNDEFINED);}}}

/* k24791 in k24780 in do4123 in parse-general-iteration in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_24793(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24793,2,t0,t1);}
t2=((C_word*)((C_word*)t0)[12])[1];
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24796,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[10],a[4]=((C_word*)t0)[11],tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_eqp(t2,lf[552]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24805,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("ChickenBridge.scm: 380  loop-error");
f_23702(t5,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[553]));}
else{
t6=t5;
f_24805(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t2,lf[554]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_24830,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[2],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[3],tmp=(C_word)a,a+=10,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 380  loop-error");
f_23702(t6,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[555]));}
else{
t7=t6;
f_24830(2,t7,C_SCHEME_UNDEFINED);}}
else{
C_trace("ChickenBridge.scm: 380  loop-error");
f_23702(t3,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,3,lf[556],((C_word*)((C_word*)t0)[12])[1],lf[557]));}}}

/* k24828 in k24791 in k24780 in do4123 in parse-general-iteration in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_24830(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24830,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,((C_word*)((C_word*)t0)[8])[1]);
t3=C_set_block_item(((C_word*)t0)[8],0,C_SCHEME_FALSE);
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[7])+1,t5);
t7=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[6],t4);
t8=C_mutate(((C_word *)((C_word*)t0)[5])+1,t7);
t9=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t10=((C_word*)t0)[2];
f_24796(2,t10,t9);}

/* k24803 in k24791 in k24780 in do4123 in parse-general-iteration in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_24805(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24805,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[7])+1,t3);
t5=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[6],t2);
t6=C_mutate(((C_word *)((C_word*)t0)[5])+1,t5);
t7=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t8=((C_word*)t0)[2];
f_24796(2,t8,t7);}

/* k24794 in k24791 in k24780 in do4123 in parse-general-iteration in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_24796(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
f_24772(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k24732 in parse-general-iteration in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_24734(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24734,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24741,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24770,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 380  make-binding");
f_23696(t3,((C_word*)t0)[2],C_SCHEME_FALSE);}

/* k24768 in k24732 in parse-general-iteration in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_24770(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[42],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24770,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
t3=(C_truep(((C_word*)((C_word*)t0)[5])[1])?(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[5])[1]):C_SCHEME_END_OF_LIST);
t4=(C_truep(((C_word*)((C_word*)t0)[4])[1])?(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]):C_SCHEME_END_OF_LIST);
t5=(C_truep(((C_word*)((C_word*)t0)[3])[1])?(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]):C_SCHEME_END_OF_LIST);
C_trace("ChickenBridge.scm: 380  make-loop-clause");
f_23462(((C_word*)t0)[2],(C_word)C_a_i_list(&a,10,lf[470],lf[500],lf[471],t2,lf[473],t3,lf[475],t4,lf[476],t5));}

/* k24739 in k24732 in parse-general-iteration in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_24741(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-sequence-iteration in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_24373(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[7],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_24373,5,t0,t1,t2,t3,t4);}
t5=t2;
t6=(C_word)C_i_cadr(t2);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24380,a[2]=t5,a[3]=t4,a[4]=t6,a[5]=t1,a[6]=t2,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 380  gensym");
t8=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t8))(3,t8,t7,lf[550]);}

/* k24378 in parse-sequence-iteration in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_24380(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word ab[44],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24380,2,t0,t1);}
t2=(C_word)C_i_cddr(((C_word*)t0)[6]);
t3=t2;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_END_OF_LIST;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_END_OF_LIST;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_END_OF_LIST;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_END_OF_LIST;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_END_OF_LIST;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=C_SCHEME_FALSE;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_24386,a[2]=t8,a[3]=t14,a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=t20,a[7]=t18,a[8]=t12,a[9]=t10,a[10]=t16,a[11]=t4,a[12]=((C_word*)t0)[5],a[13]=t6,tmp=(C_word)a,a+=14,tmp);
t22=C_SCHEME_UNDEFINED;
t23=(*a=C_VECTOR_TYPE|1,a[1]=t22,tmp=(C_word)a,a+=2,tmp);
t24=C_set_block_item(t23,0,(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_24614,a[2]=t14,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t8,a[6]=t20,a[7]=t23,a[8]=t4,a[9]=((C_word)li387),tmp=(C_word)a,a+=10,tmp));
t25=((C_word*)t23)[1];
f_24614(t25,t21,C_SCHEME_FALSE);}

/* do4056 in k24378 in parse-sequence-iteration in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_24614(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24614,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]);
t5=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_24624,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=t3,a[9]=((C_word*)t0)[8],a[10]=t1,tmp=(C_word)a,a+=11,tmp);
if(C_truep(t4)){
t6=t5;
f_24624(2,t6,t4);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
C_trace("ChickenBridge.scm: 380  loop-op?");
f_23684(t5,t6,((C_word*)t0)[4]);}}

/* k24622 in do4056 in k24378 in parse-sequence-iteration in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_24624(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24624,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[10];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[9])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[9])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[8])+1,t2);
t6=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_24635,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[7],a[10]=((C_word*)t0)[8],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[9])[1]))){
C_trace("ChickenBridge.scm: 380  loop-error");
f_23702(t6,((C_word*)t0)[4],((C_word*)t0)[3],(C_word)C_a_i_list(&a,1,lf[549]));}
else{
t7=t6;
f_24635(2,t7,C_SCHEME_UNDEFINED);}}}

/* k24633 in k24622 in do4056 in k24378 in parse-sequence-iteration in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_24635(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24635,2,t0,t1);}
t2=((C_word*)((C_word*)t0)[10])[1];
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24638,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_eqp(t2,lf[539]);
t5=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_24647,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=t3,a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[7],tmp=(C_word)a,a+=11,tmp);
if(C_truep(t4)){
t6=t5;
f_24647(t6,t4);}
else{
t6=(C_word)C_eqp(t2,lf[548]);
if(C_truep(t6)){
t7=t5;
f_24647(t7,t6);}
else{
t7=(C_word)C_eqp(t2,lf[533]);
t8=t5;
f_24647(t8,(C_truep(t7)?t7:(C_word)C_eqp(t2,lf[538])));}}}

/* k24645 in k24633 in k24622 in do4056 in k24378 in parse-sequence-iteration in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_24647(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[37],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24647,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24650,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[10])[1])){
C_trace("ChickenBridge.scm: 380  loop-error");
f_23702(t2,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,5,lf[541],((C_word*)((C_word*)t0)[9])[1],lf[542],((C_word*)((C_word*)t0)[10])[1],lf[543]));}
else{
t3=t2;
f_24650(2,t3,C_SCHEME_UNDEFINED);}}
else{
t2=(C_word)C_eqp(((C_word*)t0)[3],lf[524]);
if(C_truep(t2)){
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 380  loop-error");
f_23702(((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[544]));}
else{
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[10])[1],lf[533]);
if(C_truep(t3)){
C_trace("ChickenBridge.scm: 380  loop-error");
f_23702(((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[545]));}
else{
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[8])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[8])+1,t5);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t8=((C_word*)t0)[6];
f_24638(2,t8,t7);}}}
else{
C_trace("ChickenBridge.scm: 380  loop-error");
f_23702(((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,3,lf[546],((C_word*)((C_word*)t0)[9])[1],lf[547]));}}}

/* k24648 in k24645 in k24633 in k24622 in do4056 in k24378 in parse-sequence-iteration in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_24650(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t4);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=((C_word*)t0)[2];
f_24638(2,t7,t6);}

/* k24636 in k24633 in k24622 in do4056 in k24378 in parse-sequence-iteration in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_24638(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
f_24614(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k24384 in k24378 in parse-sequence-iteration in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_24386(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24386,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_24612,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
C_trace("ChickenBridge.scm: 380  make-binding");
f_23696(t2,((C_word*)t0)[4],C_SCHEME_FALSE);}

/* k24610 in k24384 in k24378 in parse-sequence-iteration in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_24612(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24612,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[13])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[13])+1,t2);
t4=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_24608,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[12],a[12]=((C_word*)t0)[13],tmp=(C_word)a,a+=13,tmp);
C_trace("ChickenBridge.scm: 380  make-binding");
f_23696(t4,((C_word*)t0)[5],((C_word*)((C_word*)t0)[2])[1]);}

/* k24606 in k24610 in k24384 in k24378 in parse-sequence-iteration in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_24608(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word ab[92],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24608,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[12])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[12])+1,t2);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_24397,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],tmp=(C_word)a,a+=9,tmp);
t5=(C_word)C_eqp(((C_word*)((C_word*)t0)[5])[1],lf[533]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_24414,a[2]=t4,a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[4],a[9]=((C_word*)t0)[12],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 380  gensym");
t7=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t7))(3,t7,t6,lf[537]);}
else{
t6=(C_word)C_eqp(((C_word*)((C_word*)t0)[5])[1],lf[538]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24490,a[2]=t4,a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
t8=(C_word)C_a_i_list(&a,3,lf[263],((C_word*)t0)[4],((C_word*)((C_word*)t0)[2])[1]);
t9=t7;
f_24490(t9,(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[3],t8));}
else{
t8=(C_word)C_a_i_list(&a,2,lf[263],((C_word*)t0)[4]);
t9=t7;
f_24490(t9,(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[3],t8));}}
else{
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24519,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[5],a[4]=t4,a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24554,a[2]=t7,a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[2],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_listp(((C_word*)((C_word*)t0)[2])[1]))){
t9=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t10=t8;
f_24554(t10,(C_word)C_eqp(t9,lf[540]));}
else{
t9=t8;
f_24554(t9,C_SCHEME_FALSE);}}
else{
t8=(C_word)C_a_i_list(&a,2,lf[15],((C_word*)t0)[4]);
t9=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[4],t8);
t10=(C_word)C_a_i_cons(&a,2,t9,((C_word*)((C_word*)t0)[6])[1]);
t11=C_mutate(((C_word *)((C_word*)t0)[6])+1,t10);
t12=t7;
f_24519(t12,((C_word*)((C_word*)t0)[6])[1]);}}}}

/* k24552 in k24606 in k24610 in k24384 in k24378 in parse-sequence-iteration in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_24554(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[36],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24554,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_a_i_list(&a,2,t2,((C_word*)t0)[4]);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[4],t3);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24519(t7,((C_word*)((C_word*)t0)[3])[1]);}
else{
t2=(C_word)C_a_i_list(&a,2,((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[4]);
t3=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[4],t2);
t4=(C_word)C_a_i_cons(&a,2,t3,((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=((C_word*)t0)[2];
f_24519(t6,((C_word*)((C_word*)t0)[3])[1]);}}

/* k24517 in k24606 in k24610 in k24384 in k24378 in parse-sequence-iteration in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_24519(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24519,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24535,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[3])[1],lf[539]);
if(C_truep(t3)){
t4=(C_word)C_a_i_list(&a,2,lf[8],((C_word*)t0)[6]);
t5=t2;
f_24535(t5,(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[2],t4));}
else{
t4=t2;
f_24535(t4,(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[2],((C_word*)t0)[6]));}}

/* k24533 in k24517 in k24606 in k24610 in k24384 in k24378 in parse-sequence-iteration in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_24535(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24535,NULL,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_a_i_list(&a,2,lf[3],((C_word*)t0)[4]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24397(t7,((C_word*)((C_word*)t0)[3])[1]);}

/* k24488 in k24606 in k24610 in k24384 in k24378 in parse-sequence-iteration in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_24490(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24490,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,lf[261],((C_word*)t0)[4]);
t3=(C_word)C_a_i_list(&a,3,lf[413],t1,t2);
t4=(C_word)C_a_i_cons(&a,2,t3,((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=((C_word*)t0)[2];
f_24397(t6,((C_word*)((C_word*)t0)[3])[1]);}

/* k24412 in k24606 in k24610 in k24384 in k24378 in parse-sequence-iteration in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_24414(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24414,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_24417,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 380  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[536]);}

/* k24415 in k24412 in k24606 in k24610 in k24384 in k24378 in parse-sequence-iteration in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_24417(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24417,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_24481,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=t1,a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 380  make-binding");
f_23696(t2,((C_word*)t0)[7],C_fix(0));}

/* k24479 in k24415 in k24412 in k24606 in k24610 in k24384 in k24378 in parse-sequence-iteration in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_24481(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24481,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[11])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t4=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_24477,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 380  make-binding");
f_23696(t4,((C_word*)t0)[9],C_SCHEME_FALSE);}

/* k24475 in k24479 in k24415 in k24412 in k24606 in k24610 in k24384 in k24378 in parse-sequence-iteration in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_24477(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word ab[81],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24477,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[11])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t4=(C_word)C_a_i_list(&a,2,lf[534],((C_word*)t0)[10]);
t5=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[9],t4);
t6=(C_word)C_a_i_cons(&a,2,t5,((C_word*)((C_word*)t0)[8])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[8])+1,t6);
t8=(C_word)C_a_i_list(&a,3,lf[97],C_fix(1),((C_word*)t0)[7]);
t9=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[7],t8);
t10=(C_word)C_a_i_cons(&a,2,t9,((C_word*)((C_word*)t0)[6])[1]);
t11=C_mutate(((C_word *)((C_word*)t0)[6])+1,t10);
t12=(C_word)C_a_i_list(&a,3,lf[535],((C_word*)t0)[10],((C_word*)t0)[7]);
t13=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[5],t12);
t14=(C_word)C_a_i_cons(&a,2,t13,((C_word*)((C_word*)t0)[4])[1]);
t15=C_mutate(((C_word *)((C_word*)t0)[4])+1,t14);
t16=(C_word)C_a_i_list(&a,3,lf[340],((C_word*)t0)[7],((C_word*)t0)[9]);
t17=(C_word)C_a_i_list(&a,2,lf[389],t16);
t18=(C_word)C_a_i_cons(&a,2,t17,((C_word*)((C_word*)t0)[3])[1]);
t19=C_mutate(((C_word *)((C_word*)t0)[3])+1,t18);
t20=((C_word*)t0)[2];
f_24397(t20,((C_word*)((C_word*)t0)[3])[1]);}

/* k24395 in k24606 in k24610 in k24384 in k24378 in parse-sequence-iteration in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_24397(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24397,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24404,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24408,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=t2,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 380  reverse");
t4=*((C_word*)lf[187]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k24406 in k24395 in k24606 in k24610 in k24384 in k24378 in parse-sequence-iteration in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_24408(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[36],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24408,2,t0,t1);}
C_trace("ChickenBridge.scm: 380  make-loop-clause");
f_23462(((C_word*)t0)[6],(C_word)C_a_i_list(&a,12,lf[470],lf[500],lf[471],t1,lf[474],((C_word*)((C_word*)t0)[5])[1],lf[473],((C_word*)((C_word*)t0)[4])[1],lf[475],((C_word*)((C_word*)t0)[3])[1],lf[476],((C_word*)((C_word*)t0)[2])[1]));}

/* k24402 in k24395 in k24606 in k24610 in k24384 in k24378 in parse-sequence-iteration in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_24404(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-repeat in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_24326(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[13],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_24326,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t5))){
C_trace("ChickenBridge.scm: 380  loop-error");
f_23702(t1,t4,t2,(C_word)C_a_i_list(&a,1,lf[530]));}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24341,a[2]=t4,a[3]=t3,a[4]=t2,a[5]=((C_word)li384),tmp=(C_word)a,a+=6,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24359,a[2]=t2,a[3]=((C_word)li385),tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  call-with-values");
C_call_with_values(4,0,t1,t6,t7);}}

/* a24358 in parse-repeat in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_24359(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_24359,4,t0,t1,t2,t3);}
t4=(C_word)C_i_cddr(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 380  values");
C_values(4,0,t1,t2,t4);}

/* a24340 in parse-repeat in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_24341(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24341,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24353,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 380  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[531]);}

/* k24351 in a24340 in parse-repeat in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_24353(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24353,2,t0,t1);}
t2=(C_word)C_i_cadr(((C_word*)t0)[5]);
t3=(C_word)C_a_i_list(&a,4,lf[500],t1,lf[505],t2);
C_trace("ChickenBridge.scm: 380  parse-numerical-for");
t4=C_retrieve2(lf[499],"parse-numerical-for");
f_23944(5,t4,((C_word*)t0)[4],t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* parse-numerical-for in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_23944(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word ab[48],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_23944,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_i_cadr(t2);
t6=(C_word)C_i_cddr(t2);
t7=t6;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_END_OF_LIST;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_END_OF_LIST;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_FALSE;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=C_SCHEME_FALSE;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_SCHEME_FALSE;
t22=(*a=C_VECTOR_TYPE|1,a[1]=t21,tmp=(C_word)a,a+=2,tmp);
t23=C_SCHEME_FALSE;
t24=(*a=C_VECTOR_TYPE|1,a[1]=t23,tmp=(C_word)a,a+=2,tmp);
t25=C_SCHEME_FALSE;
t26=(*a=C_VECTOR_TYPE|1,a[1]=t25,tmp=(C_word)a,a+=2,tmp);
t27=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_23954,a[2]=t18,a[3]=t16,a[4]=t14,a[5]=t24,a[6]=t10,a[7]=t12,a[8]=t20,a[9]=t8,a[10]=t1,a[11]=t22,a[12]=t5,a[13]=t26,tmp=(C_word)a,a+=14,tmp);
t28=C_SCHEME_UNDEFINED;
t29=(*a=C_VECTOR_TYPE|1,a[1]=t28,tmp=(C_word)a,a+=2,tmp);
t30=C_set_block_item(t29,0,(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_24153,a[2]=t22,a[3]=t18,a[4]=t20,a[5]=t2,a[6]=t4,a[7]=t14,a[8]=t16,a[9]=t29,a[10]=t8,a[11]=((C_word)li382),tmp=(C_word)a,a+=12,tmp));
t31=((C_word*)t29)[1];
f_24153(t31,t27,C_SCHEME_FALSE);}

/* do3957 in parse-numerical-for in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_24153(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24153,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[10])[1]);
t5=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_24163,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=t3,a[11]=((C_word*)t0)[10],a[12]=t1,tmp=(C_word)a,a+=13,tmp);
if(C_truep(t4)){
t6=t5;
f_24163(2,t6,t4);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
C_trace("ChickenBridge.scm: 380  loop-op?");
f_23684(t5,t6,((C_word*)t0)[6]);}}

/* k24161 in do3957 in parse-numerical-for in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_24163(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24163,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[12];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[11])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[11])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[11])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[10])+1,t2);
t6=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_24174,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[12],a[11]=((C_word*)t0)[9],a[12]=((C_word*)t0)[10],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[11])[1]))){
C_trace("ChickenBridge.scm: 380  loop-error");
f_23702(t6,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[528]));}
else{
t7=t6;
f_24174(2,t7,C_SCHEME_UNDEFINED);}}}

/* k24172 in k24161 in do3957 in parse-numerical-for in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_24174(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[132],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24174,2,t0,t1);}
t2=((C_word*)((C_word*)t0)[12])[1];
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24177,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[10],a[4]=((C_word*)t0)[11],tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_eqp(t2,lf[507]);
t5=(C_truep(t4)?t4:(C_word)C_eqp(t2,lf[503]));
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24189,a[2]=t3,a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[12],a[6]=((C_word*)t0)[9],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[9])[1])){
C_trace("ChickenBridge.scm: 380  loop-error");
f_23702(t6,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,5,lf[508],((C_word*)((C_word*)t0)[12])[1],lf[509],((C_word*)((C_word*)t0)[9])[1],lf[510]));}
else{
t7=t6;
f_24189(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t2,lf[505]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24210,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 380  loop-error");
f_23702(t7,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,5,lf[511],((C_word*)((C_word*)t0)[12])[1],lf[512],((C_word*)((C_word*)t0)[3])[1],lf[513]));}
else{
t8=t7;
f_24210(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t2,lf[514]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24231,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 380  loop-error");
f_23702(t8,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,5,lf[515],((C_word*)((C_word*)t0)[12])[1],lf[516],((C_word*)((C_word*)t0)[3])[1],lf[517]));}
else{
t9=t8;
f_24231(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(C_word)C_eqp(t2,lf[504]);
if(C_truep(t8)){
t9=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24252,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 380  loop-error");
f_23702(t9,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,5,lf[518],((C_word*)((C_word*)t0)[12])[1],lf[519],((C_word*)((C_word*)t0)[3])[1],lf[520]));}
else{
t10=t9;
f_24252(2,t10,C_SCHEME_UNDEFINED);}}
else{
t9=(C_word)C_eqp(t2,lf[506]);
if(C_truep(t9)){
t10=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24273,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 380  loop-error");
f_23702(t10,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,5,lf[521],((C_word*)((C_word*)t0)[12])[1],lf[522],((C_word*)((C_word*)t0)[3])[1],lf[523]));}
else{
t11=t10;
f_24273(2,t11,C_SCHEME_UNDEFINED);}}
else{
t10=(C_word)C_eqp(t2,lf[524]);
if(C_truep(t10)){
t11=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24294,a[2]=t3,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[8],tmp=(C_word)a,a+=5,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 380  loop-error");
f_23702(t11,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[525]));}
else{
t12=t11;
f_24294(2,t12,C_SCHEME_UNDEFINED);}}
else{
C_trace("ChickenBridge.scm: 380  loop-error");
f_23702(t3,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,3,lf[526],((C_word*)((C_word*)t0)[12])[1],lf[527]));}}}}}}}

/* k24292 in k24172 in k24161 in do3957 in parse-numerical-for in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_24294(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t6=((C_word*)t0)[2];
f_24177(2,t6,t5);}

/* k24271 in k24172 in k24161 in do3957 in parse-numerical-for in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_24273(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[6])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t7=((C_word*)t0)[2];
f_24177(2,t7,t6);}

/* k24250 in k24172 in k24161 in do3957 in parse-numerical-for in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_24252(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[6])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t7=((C_word*)t0)[2];
f_24177(2,t7,t6);}

/* k24229 in k24172 in k24161 in do3957 in parse-numerical-for in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_24231(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[6])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t7=((C_word*)t0)[2];
f_24177(2,t7,t6);}

/* k24208 in k24172 in k24161 in do3957 in parse-numerical-for in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_24210(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[6])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t7=((C_word*)t0)[2];
f_24177(2,t7,t6);}

/* k24187 in k24172 in k24161 in do3957 in parse-numerical-for in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_24189(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t4);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=((C_word*)t0)[2];
f_24177(2,t7,t6);}

/* k24175 in k24172 in k24161 in do3957 in parse-numerical-for in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_24177(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
f_24153(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k23952 in parse-numerical-for in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_23954(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23954,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_23957,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
t3=((C_word*)((C_word*)t0)[3])[1];
if(C_truep(t3)){
t4=t2;
f_23957(t4,C_SCHEME_UNDEFINED);}
else{
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[507]);
t5=t2;
f_23957(t5,t4);}}

/* k23955 in k23952 in parse-numerical-for in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_23957(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23957,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_23960,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[12],a[11]=((C_word*)t0)[13],tmp=(C_word)a,a+=12,tmp);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[3])[1],lf[503]);
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24120,a[2]=t2,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[13],tmp=(C_word)a,a+=6,tmp);
if(C_truep(t3)){
t5=t4;
f_24120(t5,t3);}
else{
t5=(C_word)C_eqp(((C_word*)((C_word*)t0)[2])[1],lf[506]);
t6=t4;
f_24120(t6,(C_truep(t5)?t5:(C_word)C_eqp(((C_word*)((C_word*)t0)[2])[1],lf[504])));}}

/* k24118 in k23955 in k23952 in parse-numerical-for in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_24120(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word *a;
if(C_truep(t1)){
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,lf[99]);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[4])[1],lf[504]);
if(C_truep(t3)){
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[417]);
t5=((C_word*)t0)[2];
f_23960(t5,t4);}
else{
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[340]);
t5=((C_word*)t0)[2];
f_23960(t5,t4);}}
else{
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,lf[97]);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[4])[1],lf[505]);
if(C_truep(t3)){
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[410]);
t5=((C_word*)t0)[2];
f_23960(t5,t4);}
else{
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[416]);
t5=((C_word*)t0)[2];
f_23960(t5,t4);}}}

/* k23958 in k23955 in k23952 in parse-numerical-for in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_23960(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23960,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_23963,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_i_not(((C_word*)((C_word*)t0)[2])[1]);
t4=(C_truep(t3)?t3:(C_word)C_i_numberp(((C_word*)((C_word*)t0)[2])[1]));
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24091,a[2]=t2,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t6=((C_word*)((C_word*)t0)[2])[1];
t7=(C_truep(t6)?t6:C_fix(0));
C_trace("ChickenBridge.scm: 380  make-binding");
f_23696(t5,((C_word*)t0)[10],t7);}
else{
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24111,a[2]=t2,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 380  make-binding");
f_23696(t5,((C_word*)t0)[10],C_SCHEME_FALSE);}}

/* k24109 in k23958 in k23955 in k23952 in parse-numerical-for in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_24111(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24111,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23963(t7,((C_word*)((C_word*)t0)[3])[1]);}

/* k24089 in k23958 in k23955 in k23952 in parse-numerical-for in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_24091(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24091,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_23963(t4,((C_word*)((C_word*)t0)[3])[1]);}

/* k23961 in k23958 in k23955 in k23952 in parse-numerical-for in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_23963(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23963,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_23966,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
t3=((C_word*)((C_word*)t0)[8])[1];
if(C_truep(t3)){
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[8])[1]))){
t4=t2;
f_23966(t4,C_SCHEME_UNDEFINED);}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24056,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 380  gensym");
t5=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,lf[502]);}}
else{
t4=C_set_block_item(((C_word*)t0)[8],0,C_fix(1));
t5=t2;
f_23966(t5,t4);}}

/* k24054 in k23961 in k23958 in k23955 in k23952 in parse-numerical-for in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_24056(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24056,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24073,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 380  make-binding");
f_23696(t2,t1,C_SCHEME_FALSE);}

/* k24071 in k24054 in k23961 in k23958 in k23955 in k23952 in parse-numerical-for in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_24073(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24073,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)t0)[5]);
t8=((C_word*)t0)[2];
f_23966(t8,t7);}

/* k23964 in k23961 in k23958 in k23955 in k23952 in parse-numerical-for in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_23966(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[34],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23966,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,((C_word*)((C_word*)t0)[10])[1],((C_word*)t0)[9],((C_word*)((C_word*)t0)[8])[1]);
t3=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[9],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[8])+1,t3);
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23973,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24005,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],a[4]=t5,a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[2],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 380  gensym");
t7=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t7))(3,t7,t6,lf[501]);}
else{
t6=t5;
f_23973(t6,C_SCHEME_UNDEFINED);}}

/* k24003 in k23964 in k23961 in k23958 in k23955 in k23952 in parse-numerical-for in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_24005(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24005,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24008,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t1,a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[5])[1]))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24023,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  make-binding");
f_23696(t3,t1,((C_word*)((C_word*)t0)[5])[1]);}
else{
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24039,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[5],a[5]=t1,a[6]=((C_word*)t0)[3],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 380  make-binding");
f_23696(t3,t1,C_SCHEME_FALSE);}}

/* k24037 in k24003 in k23964 in k23961 in k23958 in k23955 in k23952 in parse-numerical-for in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_24039(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24039,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24008(t7,((C_word*)((C_word*)t0)[3])[1]);}

/* k24021 in k24003 in k23964 in k23961 in k23958 in k23955 in k23952 in parse-numerical-for in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_24023(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24023,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_24008(t4,((C_word*)((C_word*)t0)[3])[1]);}

/* k24006 in k24003 in k23964 in k23961 in k23958 in k23955 in k23952 in parse-numerical-for in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_24008(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24008,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,((C_word*)((C_word*)t0)[6])[1],((C_word*)t0)[5],((C_word*)t0)[4]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_23973(t4,t3);}

/* k23971 in k23964 in k23961 in k23958 in k23955 in k23952 in parse-numerical-for in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_23973(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23973,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23980,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23984,a[2]=((C_word*)t0)[3],a[3]=t2,a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 380  reverse");
t4=*((C_word*)lf[187]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k23982 in k23971 in k23964 in k23961 in k23958 in k23955 in k23952 in parse-numerical-for in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_23984(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23984,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23988,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 380  reverse");
t3=*((C_word*)lf[187]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k23986 in k23982 in k23971 in k23964 in k23961 in k23958 in k23955 in k23952 in parse-numerical-for in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_23988(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[36],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23988,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[5])[1]);
t3=((C_word*)((C_word*)t0)[4])[1];
t4=(C_truep(t3)?(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]):C_SCHEME_END_OF_LIST);
C_trace("ChickenBridge.scm: 380  make-loop-clause");
f_23462(((C_word*)t0)[3],(C_word)C_a_i_list(&a,10,lf[470],lf[500],lf[471],((C_word*)t0)[2],lf[473],t1,lf[476],t2,lf[474],t4));}

/* k23978 in k23971 in k23964 in k23961 in k23958 in k23955 in k23952 in parse-numerical-for in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_23980(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-for in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_23862(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_23862,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23866,a[2]=t3,a[3]=t4,a[4]=t1,a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t6=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 380  loop-op?");
f_23684(t5,t6,t4);}

/* k23864 in parse-for in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_23866(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23866,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 380  loop-error");
f_23702(((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[492]));}
else{
t3=(C_word)C_i_cadr(((C_word*)t0)[5]);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23884,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 380  loop-variable?");
f_23690(t4,t3);}}

/* k23882 in k23864 in parse-for in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_23884(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23884,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cddr(((C_word*)t0)[6]);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 380  loop-error");
f_23702(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[6],(C_word)C_a_i_list(&a,1,lf[493]));}
else{
t3=(C_word)C_i_caddr(((C_word*)t0)[6]);
t4=(C_word)C_i_cdddr(((C_word*)t0)[3]);
t5=(C_word)C_i_assoc(t3,t4);
if(C_truep(t5)){
t6=(C_word)C_i_cadr(t5);
t7=t6;
((C_proc5)C_retrieve_proc(t7))(5,t7,((C_word*)t0)[5],((C_word*)t0)[6],((C_word*)t0)[2],((C_word*)t0)[4]);}
else{
t6=(C_word)C_i_caddr(((C_word*)t0)[6]);
C_trace("ChickenBridge.scm: 380  loop-error");
f_23702(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[6],(C_word)C_a_i_list(&a,4,lf[494],t6,lf[495],lf[496]));}}}
else{
t2=(C_word)C_i_cadr(((C_word*)t0)[6]);
C_trace("ChickenBridge.scm: 380  loop-error");
f_23702(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[6],(C_word)C_a_i_list(&a,3,lf[497],t2,lf[498]));}}

/* loop-error in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_23702(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23702,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23758,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t6=t3;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_UNDEFINED;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_set_block_item(t9,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23710,a[2]=t2,a[3]=t9,a[4]=t7,a[5]=((C_word)li379),tmp=(C_word)a,a+=6,tmp));
t11=((C_word*)t9)[1];
f_23710(t11,t5,((C_word*)t7)[1],C_SCHEME_END_OF_LIST);}

/* do3908 in loop-error in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_23710(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23710,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[4])[1]);
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23720,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t4,a[6]=t1,tmp=(C_word)a,a+=7,tmp);
if(C_truep(t5)){
t7=t6;
f_23720(2,t7,t5);}
else{
t7=(C_word)C_eqp(t2,((C_word*)((C_word*)t0)[4])[1]);
if(C_truep(t7)){
t8=t6;
f_23720(2,t8,C_SCHEME_FALSE);}
else{
t8=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 380  loop-op?");
f_23684(t6,t8,((C_word*)t0)[2]);}}}

/* k23718 in do3908 in loop-error in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_23720(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23720,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 380  reverse");
t2=*((C_word*)lf[187]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1]);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_a_i_cons(&a,2,t2,((C_word*)((C_word*)t0)[5])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[5])+1,t3);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=((C_word*)((C_word*)t0)[3])[1];
f_23710(t7,((C_word*)t0)[6],((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1]);}}

/* k23756 in loop-error in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_23758(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23758,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23761,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  newline");
t3=*((C_word*)lf[329]+1);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k23759 in k23756 in loop-error in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_23761(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23761,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23764,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  display");
t3=*((C_word*)lf[330]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[490]);}

/* k23762 in k23759 in k23756 in loop-error in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_23764(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23764,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23767,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23839,a[2]=t4,a[3]=((C_word)li378),tmp=(C_word)a,a+=4,tmp));
t6=((C_word*)t4)[1];
f_23839(t6,t2,((C_word*)t0)[2]);}

/* do3918 in k23762 in k23759 in k23756 in loop-error in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_23839(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23839,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23849,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 380  display");
t5=*((C_word*)lf[330]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}}

/* k23847 in do3918 in k23762 in k23759 in k23756 in loop-error in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_23849(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_23839(t3,((C_word*)t0)[2],t2);}

/* k23765 in k23762 in k23759 in k23756 in loop-error in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_23767(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23767,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23770,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  newline");
t3=*((C_word*)lf[329]+1);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k23768 in k23765 in k23762 in k23759 in k23756 in loop-error in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_23770(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23770,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23773,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  display");
t3=*((C_word*)lf[330]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[489]);}

/* k23771 in k23768 in k23765 in k23762 in k23759 in k23756 in loop-error in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_23773(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23773,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23776,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[2]))){
C_trace("ChickenBridge.scm: 380  display");
t3=*((C_word*)lf[330]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[485]);}
else{
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23793,a[2]=((C_word*)t0)[2],a[3]=t4,a[4]=((C_word)li377),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_23793(t6,t2,((C_word*)t0)[2]);}}

/* do3923 in k23771 in k23768 in k23765 in k23762 in k23759 in k23756 in loop-error in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_23793(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23793,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23803,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_eqp(t2,((C_word*)t0)[2]);
if(C_truep(t4)){
C_trace("ChickenBridge.scm: 380  display");
t5=*((C_word*)lf[330]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,lf[488]);}
else{
t5=t3;
f_23803(2,t5,C_SCHEME_UNDEFINED);}}}

/* k23801 in do3923 in k23771 in k23768 in k23765 in k23762 in k23759 in k23756 in loop-error in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_23803(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23803,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23806,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 380  display");
t4=*((C_word*)lf[330]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,t3);}

/* k23804 in k23801 in do3923 in k23771 in k23768 in k23765 in k23762 in k23759 in k23756 in loop-error in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_23806(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23806,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23809,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=(C_word)C_i_nullp(t3);
t5=(C_truep(t4)?lf[486]:lf[487]);
C_trace("ChickenBridge.scm: 380  display");
t6=*((C_word*)lf[330]+1);
((C_proc3)C_retrieve_proc(t6))(3,t6,t2,t5);}

/* k23807 in k23804 in k23801 in do3923 in k23771 in k23768 in k23765 in k23762 in k23759 in k23756 in loop-error in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_23809(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_23793(t3,((C_word*)t0)[2],t2);}

/* k23774 in k23771 in k23768 in k23765 in k23762 in k23759 in k23756 in loop-error in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_23776(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23776,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23779,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  newline");
t3=*((C_word*)lf[329]+1);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k23777 in k23774 in k23771 in k23768 in k23765 in k23762 in k23759 in k23756 in loop-error in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_23779(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  error");
t2=*((C_word*)lf[4]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],lf[484]);}

/* make-binding in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_23696(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23696,NULL,3,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_list(&a,2,t2,t3));}

/* loop-variable? in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_23690(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23690,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_symbolp(t2));}

/* loop-op? in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_23684(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23684,NULL,3,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_assoc(t2,t3));}

/* gather-clauses in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_23613(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23613,NULL,3,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23615,a[2]=((C_word)li372),tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23654,a[2]=t3,a[3]=t4,a[4]=t2,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 380  gather-clause");
f_23615(t5,t3,C_retrieve2(lf[460],"loop-bindings"));}

/* k23652 in gather-clauses in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_23654(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23654,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23658,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 380  gather-clause");
f_23615(t2,((C_word*)t0)[2],C_retrieve2(lf[461],"loop-collectors"));}

/* k23656 in k23652 in gather-clauses in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_23658(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23658,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23662,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 380  gather-clause");
f_23615(t2,((C_word*)t0)[2],C_retrieve2(lf[462],"loop-initially"));}

/* k23660 in k23656 in k23652 in gather-clauses in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_23662(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23662,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_23666,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 380  gather-clause");
f_23615(t2,((C_word*)t0)[2],C_retrieve2(lf[463],"loop-end-tests"));}

/* k23664 in k23660 in k23656 in k23652 in gather-clauses in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_23666(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23666,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_23670,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 380  gather-clause");
f_23615(t2,((C_word*)t0)[2],C_retrieve2(lf[464],"loop-looping"));}

/* k23668 in k23664 in k23660 in k23656 in k23652 in gather-clauses in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_23670(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23670,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_23674,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 380  gather-clause");
f_23615(t2,((C_word*)t0)[2],C_retrieve2(lf[466],"loop-stepping"));}

/* k23672 in k23668 in k23664 in k23660 in k23656 in k23652 in gather-clauses in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_23674(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23674,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_23678,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 380  gather-clause");
f_23615(t2,((C_word*)t0)[2],C_retrieve2(lf[467],"loop-finally"));}

/* k23676 in k23672 in k23668 in k23664 in k23660 in k23656 in k23652 in gather-clauses in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_23678(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23678,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_23682,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 380  gather-clause");
f_23615(t2,((C_word*)t0)[2],C_retrieve2(lf[468],"loop-returning"));}

/* k23680 in k23676 in k23672 in k23668 in k23664 in k23660 in k23656 in k23652 in gather-clauses in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_23682(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[54],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23682,2,t0,t1);}
C_trace("ChickenBridge.scm: 380  make-loop-clause");
f_23462(((C_word*)t0)[10],(C_word)C_a_i_list(&a,18,lf[470],((C_word*)t0)[9],lf[471],((C_word*)t0)[8],lf[472],((C_word*)t0)[7],lf[473],((C_word*)t0)[6],lf[474],((C_word*)t0)[5],lf[475],((C_word*)t0)[4],lf[476],((C_word*)t0)[3],lf[477],((C_word*)t0)[2],lf[478],t1));}

/* gather-clause in gather-clauses in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_23615(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23615,NULL,3,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23621,a[2]=t3,a[3]=t6,a[4]=t4,a[5]=((C_word)li371),tmp=(C_word)a,a+=6,tmp));
t8=((C_word*)t6)[1];
f_23621(t8,t1,C_SCHEME_END_OF_LIST);}

/* do3891 in gather-clause in gather-clauses in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_23621(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23621,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[4])[1]))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,((C_word*)t3)[1]);}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23632,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23643,a[2]=t3,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 380  accessor");
t7=((C_word*)t0)[2];
((C_proc3)C_retrieve_proc(t7))(3,t7,t5,t6);}}

/* k23641 in do3891 in gather-clause in gather-clauses in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_23643(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  append");
t2=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k23630 in do3891 in gather-clause in gather-clauses in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_23632(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=((C_word*)((C_word*)t0)[3])[1];
f_23621(t5,((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1]);}

/* make-loop-clause in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_23462(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23462,NULL,2,t1,t2);}
t3=(C_word)C_a_i_vector(&a,9,C_SCHEME_FALSE,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST);
if(C_truep((C_word)C_i_nullp(t2))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t3);}
else{
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23477,a[2]=t5,a[3]=t3,a[4]=((C_word)li369),tmp=(C_word)a,a+=5,tmp));
t7=((C_word*)t5)[1];
f_23477(t7,t1,t2);}}

/* do3879 in make-loop-clause in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_23477(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23477,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)t0)[3]);}
else{
t3=(C_word)C_i_car(t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23490,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_eqp(t3,lf[470]);
if(C_truep(t5)){
t6=(C_word)C_i_cadr(t2);
C_trace("ChickenBridge.scm: 380  loop-operator-set!");
f_23360(t4,((C_word*)t0)[3],t6);}
else{
t6=(C_word)C_eqp(t3,lf[471]);
if(C_truep(t6)){
t7=(C_word)C_i_cadr(t2);
t8=t4;
f_23490(2,t8,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(1),t7));}
else{
t7=(C_word)C_eqp(t3,lf[472]);
if(C_truep(t7)){
t8=(C_word)C_i_cadr(t2);
t9=t4;
f_23490(2,t9,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(2),t8));}
else{
t8=(C_word)C_eqp(t3,lf[473]);
if(C_truep(t8)){
t9=(C_word)C_i_cadr(t2);
t10=t4;
f_23490(2,t10,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(3),t9));}
else{
t9=(C_word)C_eqp(t3,lf[474]);
if(C_truep(t9)){
t10=(C_word)C_i_cadr(t2);
t11=t4;
f_23490(2,t11,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(4),t10));}
else{
t10=(C_word)C_eqp(t3,lf[475]);
if(C_truep(t10)){
t11=(C_word)C_i_cadr(t2);
C_trace("ChickenBridge.scm: 380  loop-looping-set!");
f_23420(t4,((C_word*)t0)[3],t11);}
else{
t11=(C_word)C_eqp(t3,lf[476]);
if(C_truep(t11)){
t12=(C_word)C_i_cadr(t2);
t13=t4;
f_23490(2,t13,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(6),t12));}
else{
t12=(C_word)C_eqp(t3,lf[477]);
if(C_truep(t12)){
t13=(C_word)C_i_cadr(t2);
t14=t4;
f_23490(2,t14,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(7),t13));}
else{
t13=(C_word)C_eqp(t3,lf[478]);
if(C_truep(t13)){
t14=(C_word)C_i_cadr(t2);
t15=t4;
f_23490(2,t15,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(8),t14));}
else{
t14=t4;
f_23490(2,t14,C_SCHEME_UNDEFINED);}}}}}}}}}}}

/* k23488 in do3879 in make-loop-clause in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_23490(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cddr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_23477(t3,((C_word*)t0)[2],t2);}

/* loop-returning in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_23450(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_23450,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(8)));}

/* loop-finally in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_23438(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_23438,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(7)));}

/* loop-stepping in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_23426(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_23426,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(6)));}

/* loop-looping-set! in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_23420(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23420,NULL,3,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_vector_set(t2,C_fix(5),t3));}

/* loop-looping in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_23414(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_23414,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(5)));}

/* loop-end-tests in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_23402(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_23402,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(4)));}

/* loop-initially in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_23390(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_23390,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(3)));}

/* loop-collectors in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_23378(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_23378,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(2)));}

/* loop-bindings in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_23366(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_23366,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(1)));}

/* loop-operator-set! in k23350 in k23347 in k23344 in k23341 in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_23360(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23360,NULL,3,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_vector_set(t2,C_fix(0),t3));}

/* sal:output in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_23324(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23324,2,t0,t1);}
C_trace("ChickenBridge.scm: 379  print-error");
t2=C_retrieve(lf[426]);
((C_proc3)C_retrieve_proc(t2))(3,t2,t1,lf[458]);}

/* sal:open in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_23318(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23318,2,t0,t1);}
C_trace("ChickenBridge.scm: 379  print-error");
t2=C_retrieve(lf[426]);
((C_proc3)C_retrieve_proc(t2))(3,t2,t1,lf[456]);}

/* sal:load in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_23271(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_23271,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23275,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  file-exists?");
t4=C_retrieve(lf[454]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k23273 in sal:load in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_23275(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23275,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23278,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
if(C_truep(t1)){
t3=(C_word)C_i_string_length(((C_word*)t0)[2]);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23300,a[2]=((C_word*)t0)[2],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_greaterp(t3,C_fix(4)))){
t5=(C_word)C_a_i_minus(&a,2,t3,C_fix(4));
C_trace("substring=?");
t6=C_retrieve(lf[450]);
((C_proc7)(void*)(*((C_word*)t6+1)))(7,t6,t4,((C_word*)t0)[2],lf[451],t5,C_fix(0),C_SCHEME_FALSE);}
else{
t5=t4;
f_23300(2,t5,C_SCHEME_FALSE);}}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23291,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  string-append");
t4=*((C_word*)lf[164]+1);
((C_proc5)C_retrieve_proc(t4))(5,t4,t3,lf[452],((C_word*)t0)[2],lf[453]);}}

/* k23289 in k23273 in sal:load in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_23291(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  print-error");
t2=C_retrieve(lf[426]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k23298 in k23273 in sal:load in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_23300(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 379  load-sal-file");
t2=C_retrieve(lf[448]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
C_trace("ChickenBridge.scm: 379  load");
t2=C_retrieve(lf[449]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}}

/* k23276 in k23273 in sal:load in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_23278(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  values");
C_values(2,0,((C_word*)t0)[2]);}

/* sal:chdir in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_23262(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_23262,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23266,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  chdir");
t4=C_retrieve(lf[44]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k23264 in sal:chdir in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_23266(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  values");
C_values(2,0,((C_word*)t0)[2]);}

/* sal:print in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_23109(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+16)){
C_save_and_reclaim((void*)tr2r,(void*)f_23109r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_23109r(t0,t1,t2);}}

static void C_ccall f_23109r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word *a=C_alloc(16);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23112,a[2]=t4,a[3]=((C_word)li352),tmp=(C_word)a,a+=4,tmp));
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23231,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23236,a[2]=t4,a[3]=t8,a[4]=((C_word)li353),tmp=(C_word)a,a+=5,tmp));
t10=((C_word*)t8)[1];
f_23236(t10,t6,t2);}

/* do3706 in sal:print in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_23236(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23236,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 379  print-message");
t3=C_retrieve(lf[437]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t1,lf[445]);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23249,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 379  printer");
t5=((C_word*)((C_word*)t0)[2])[1];
f_23112(t5,t3,t4,C_fix(0));}}

/* k23247 in do3706 in sal:print in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_23249(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_23236(t3,((C_word*)t0)[2],t2);}

/* k23229 in sal:print in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_23231(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  values");
C_values(2,0,((C_word*)t0)[2]);}

/* printer in sal:print in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_23112(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23112,NULL,4,t0,t1,t2,t3);}
t4=t2;
if(C_truep(t4)){
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 379  print-message");
t5=C_retrieve(lf[437]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t1,lf[438]);}
else{
if(C_truep((C_word)C_i_pairp(t2))){
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23140,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=t3,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  print-message");
t6=C_retrieve(lf[437]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,lf[441]);}
else{
t5=(C_word)C_eqp(t2,C_SCHEME_TRUE);
if(C_truep(t5)){
C_trace("ChickenBridge.scm: 379  print-message");
t6=C_retrieve(lf[437]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t1,lf[442]);}
else{
if(C_truep((C_word)C_i_numberp(t2))){
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23212,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  number->string");
C_number_to_string(3,0,t6,t2);}
else{
if(C_truep((C_word)C_i_stringp(t2))){
C_trace("ChickenBridge.scm: 379  print-message");
t6=C_retrieve(lf[437]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t1,t2);}
else{
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23228,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  sprintf");
t7=C_retrieve(lf[31]);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[443],t2);}}}}}}
else{
C_trace("ChickenBridge.scm: 379  print-message");
t5=C_retrieve(lf[437]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t1,lf[444]);}}

/* k23226 in printer in sal:print in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_23228(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  print-message");
t2=C_retrieve(lf[437]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k23210 in printer in sal:print in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_23212(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  print-message");
t2=C_retrieve(lf[437]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k23138 in printer in sal:print in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_23140(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23140,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23143,a[2]=((C_word*)t0)[5],tmp=(C_word)a,a+=3,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23148,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t4,a[5]=((C_word)li351),tmp=(C_word)a,a+=6,tmp));
t6=((C_word*)t4)[1];
f_23148(t6,t2,((C_word*)t0)[2]);}

/* do3698 in k23138 in printer in sal:print in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_23148(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23148,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23158,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
t5=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[3],C_fix(1));
C_trace("ChickenBridge.scm: 379  printer");
t6=((C_word*)((C_word*)t0)[2])[1];
f_23112(t6,t3,t4,t5);}}

/* k23156 in do3698 in k23138 in printer in sal:print in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_23158(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23158,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23161,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t2;
f_23161(2,t4,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 379  print-message");
t4=C_retrieve(lf[437]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,lf[440]);}}

/* k23159 in k23156 in do3698 in k23138 in printer in sal:print in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_23161(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_23148(t3,((C_word*)t0)[2],t2);}

/* k23141 in k23138 in printer in sal:print in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_23143(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  print-message");
t2=C_retrieve(lf[437]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],lf[439]);}

/* sal in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_22932(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
if(c!=6) C_bad_argc_2(c,6,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr6,(void*)f_22932,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22936,a[2]=t4,a[3]=t6,a[4]=t5,a[5]=t1,a[6]=t2,tmp=(C_word)a,a+=7,tmp);
if(C_truep(C_retrieve(lf[424]))){
C_trace("ChickenBridge.scm: 379  printf");
t8=C_retrieve(lf[404]);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[435],t4);}
else{
t8=t7;
f_22936(2,t8,C_SCHEME_UNDEFINED);}}

/* k22934 in sal in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_22936(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22936,2,t0,t1);}
t2=C_mutate(&lf[421],((C_word*)t0)[6]);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22941,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t4=((C_word*)t0)[2];
C_trace("map");
t5=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t3,C_retrieve2(lf[351],"list->token"),t4);}

/* k22939 in k22934 in sal in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_22941(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22941,2,t0,t1);}
t2=C_mutate(&lf[422],t1);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22944,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[2])[1],C_fix(0)))){
t4=C_set_block_item(((C_word*)t0)[2],0,C_fix(36608));
t5=t3;
f_22944(t5,t4);}
else{
t4=t3;
f_22944(t4,C_SCHEME_FALSE);}}

/* k22942 in k22939 in k22934 in sal in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_22944(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22944,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22948,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=((C_word*)((C_word*)t0)[2])[1];
t4=C_retrieve2(lf[422],"*sal-tokens*");
t5=(C_word)C_a_i_list(&a,4,C_SCHEME_FALSE,C_fix(0),C_SCHEME_FALSE,C_SCHEME_FALSE);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20756,a[2]=t4,a[3]=t3,a[4]=((C_word)li349),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  call/cc");
t7=*((C_word*)lf[434]+1);
((C_proc3)C_retrieve_proc(t7))(3,t7,t2,t6);}

/* a20755 in k22942 in k22939 in k22934 in sal in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_20756(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_20756,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20762,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word)li347),tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20769,a[2]=t2,a[3]=((C_word)li348),tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  call-with-values");
C_call_with_values(4,0,t1,t3,t4);}

/* a20768 in a20755 in k22942 in k22939 in k22934 in sal in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_20769(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_20769,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20776,a[2]=((C_word*)t0)[2],a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
if(C_truep(t2)){
t6=(C_word)C_i_nullp(t4);
t7=t5;
f_20776(t7,(C_truep(t6)?t6:C_SCHEME_FALSE));}
else{
t6=t5;
f_20776(t6,C_SCHEME_FALSE);}}

/* k20774 in a20768 in a20755 in k22942 in k22939 in k22934 in sal in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_20776(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20776,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20783,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  add-emit-info");
f_20413(t2,lf[431],lf[432],C_SCHEME_END_OF_LIST);}
else{
C_trace("ChickenBridge.scm: 379  make-parse-error");
f_20233(((C_word*)t0)[4],lf[433],C_retrieve2(lf[398],"*maxtokpos*"));}}

/* k20781 in k20774 in a20768 in a20755 in k22942 in k22939 in k22934 in sal in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_20783(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  emit");
f_20441(((C_word*)t0)[4],((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* a20761 in a20755 in k22942 in k22939 in k22934 in sal in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_20762(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20762,2,t0,t1);}
t2=lf[398]=C_fix(0);;
C_trace("ChickenBridge.scm: 379  parser");
f_20794(t1,((C_word*)t0)[4],((C_word*)t0)[3],C_SCHEME_FALSE,C_fix(0),C_SCHEME_FALSE,((C_word*)t0)[2]);}

/* k22946 in k22942 in k22939 in k22934 in sal in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_22948(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22948,2,t0,t1);}
t2=C_mutate(&lf[423],t1);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22951,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
t4=C_retrieve2(lf[423],"*sal-output*");
if(C_truep((C_word)C_i_structurep(t4,lf[367]))){
t5=C_retrieve2(lf[421],"*sal-string*");
t6=C_retrieve2(lf[423],"*sal-output*");
t7=(C_word)C_i_string_length(t5);
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22985,a[2]=t7,a[3]=t6,a[4]=t5,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  parse-error-position");
f_20272(t8,t6);}
else{
if(C_truep(((C_word*)t0)[2])){
C_trace("ChickenBridge.scm: 379  pp");
t5=C_retrieve(lf[429]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,C_retrieve2(lf[423],"*sal-output*"));}
else{
C_trace("ChickenBridge.scm: 379  eval");
t5=C_retrieve(lf[430]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,C_retrieve2(lf[423],"*sal-output*"));}}}

/* k22983 in k22946 in k22942 in k22939 in k22934 in sal in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_22985(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22985,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
t3=t2;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(0);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_22991,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t1,a[7]=t6,a[8]=t4,tmp=(C_word)a,a+=9,tmp);
t8=C_SCHEME_UNDEFINED;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_set_block_item(t9,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23078,a[2]=((C_word*)t0)[4],a[3]=t9,a[4]=t4,a[5]=((C_word)li346),tmp=(C_word)a,a+=6,tmp));
t11=((C_word*)t9)[1];
f_23078(t11,t7,C_SCHEME_FALSE);}

/* do3671 in k22983 in k22946 in k22942 in k22939 in k22934 in sal in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_23078(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23078,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=((C_word*)t3)[1];
t5=(C_truep(t4)?t4:(C_word)C_i_nequalp(((C_word*)((C_word*)t0)[4])[1],C_fix(-1)));
if(C_truep(t5)){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,C_SCHEME_FALSE);}
else{
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23088,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t7=(C_word)C_i_string_ref(((C_word*)t0)[2],((C_word*)((C_word*)t0)[4])[1]);
t8=(C_word)C_eqp(t7,C_make_character(10));
if(C_truep(t8)){
t9=C_set_block_item(t3,0,C_SCHEME_TRUE);
t10=t6;
f_23088(t10,t9);}
else{
t9=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[4])[1],C_fix(1));
t10=C_mutate(((C_word *)((C_word*)t0)[4])+1,t9);
t11=t6;
f_23088(t11,t10);}}}

/* k23086 in do3671 in k22983 in k22946 in k22942 in k22939 in k22934 in sal in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_23088(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
f_23078(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k22989 in k22983 in k22946 in k22942 in k22939 in k22934 in sal in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_22991(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22991,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[8])[1],C_fix(1));
t3=C_mutate(((C_word *)((C_word*)t0)[8])+1,t2);
t4=C_mutate(((C_word *)((C_word*)t0)[7])+1,((C_word*)t0)[6]);
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22999,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[5],tmp=(C_word)a,a+=8,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23048,a[2]=((C_word*)t0)[4],a[3]=t7,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[7],a[6]=((C_word)li345),tmp=(C_word)a,a+=7,tmp));
t9=((C_word*)t7)[1];
f_23048(t9,t5,C_SCHEME_FALSE);}

/* do3678 in k22989 in k22983 in k22946 in k22942 in k22939 in k22934 in sal in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_23048(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23048,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=((C_word*)t3)[1];
t5=(C_truep(t4)?t4:(C_word)C_i_nequalp(((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[4]));
if(C_truep(t5)){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,C_SCHEME_FALSE);}
else{
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23058,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t7=(C_word)C_i_string_ref(((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1]);
t8=(C_word)C_eqp(t7,C_make_character(10));
if(C_truep(t8)){
t9=C_set_block_item(t3,0,C_SCHEME_TRUE);
t10=t6;
f_23058(t10,t9);}
else{
t9=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[5])[1],C_fix(1));
t10=C_mutate(((C_word *)((C_word*)t0)[5])+1,t9);
t11=t6;
f_23058(t11,t10);}}}

/* k23056 in do3678 in k22989 in k22983 in k22946 in k22942 in k22939 in k22934 in sal in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_23058(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
f_23048(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k22997 in k22989 in k22983 in k22946 in k22942 in k22939 in k22934 in sal in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_22999(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22999,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23002,a[2]=((C_word*)t0)[7],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23009,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23013,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t3,a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  parse-error-string");
f_20254(t4,((C_word*)t0)[2]);}

/* k23011 in k22997 in k22989 in k22983 in k22946 in k22942 in k22939 in k22934 in sal in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_23013(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23013,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23017,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 379  make-string");
t3=*((C_word*)lf[338]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,C_fix(1),C_make_character(10));}

/* k23015 in k23011 in k22997 in k22989 in k22983 in k22946 in k22942 in k22939 in k22934 in sal in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_23017(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23017,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23021,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  substring");
t3=*((C_word*)lf[428]+1);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k23019 in k23015 in k23011 in k22997 in k22989 in k22983 in k22946 in k22942 in k22939 in k22934 in sal in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_23021(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23021,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23025,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 379  make-string");
t3=*((C_word*)lf[338]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,C_fix(1),C_make_character(10));}

/* k23023 in k23019 in k23015 in k23011 in k22997 in k22989 in k22983 in k22946 in k22942 in k22939 in k22934 in sal in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_23025(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23025,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[7],((C_word*)((C_word*)t0)[6])[1]);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23032,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=t2,tmp=(C_word)a,a+=8,tmp);
t4=(C_word)C_a_i_plus(&a,2,t2,C_fix(2));
C_trace("ChickenBridge.scm: 379  make-string");
t5=*((C_word*)lf[338]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,t4,C_make_character(32));}

/* k23030 in k23023 in k23019 in k23015 in k23011 in k22997 in k22989 in k22983 in k22946 in k22942 in k22939 in k22934 in sal in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_23032(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23032,2,t0,t1);}
t2=(C_word)C_i_string_set(t1,((C_word*)t0)[7],C_make_character(94));
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[7],C_fix(1));
t4=(C_word)C_i_string_set(t1,t3,C_make_character(10));
C_trace("ChickenBridge.scm: 379  string-append");
t5=*((C_word*)lf[164]+1);
((C_proc8)C_retrieve_proc(t5))(8,t5,((C_word*)t0)[6],lf[427],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k23007 in k22997 in k22989 in k22983 in k22946 in k22942 in k22939 in k22934 in sal in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_23009(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  print-error");
t2=C_retrieve(lf[426]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k23000 in k22997 in k22989 in k22983 in k22946 in k22942 in k22939 in k22934 in sal in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_23002(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  values");
C_values(2,0,((C_word*)t0)[2]);}

/* k22949 in k22946 in k22942 in k22939 in k22934 in sal in k22923 in k22920 in k22917 in k22914 in k22911 in k22405 in k22402 in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_22951(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  values");
C_values(2,0,((C_word*)t0)[2]);}

/* sal-parse-stepping in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_21883(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word ab[51],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_21883,4,t0,t1,t2,t3);}
t4=C_SCHEME_END_OF_LIST;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_FALSE;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=C_SCHEME_FALSE;
t19=(*a=C_VECTOR_TYPE|1,a[1]=t18,tmp=(C_word)a,a+=2,tmp);
t20=C_SCHEME_FALSE;
t21=(*a=C_VECTOR_TYPE|1,a[1]=t20,tmp=(C_word)a,a+=2,tmp);
t22=C_SCHEME_FALSE;
t23=(*a=C_VECTOR_TYPE|1,a[1]=t22,tmp=(C_word)a,a+=2,tmp);
t24=C_SCHEME_FALSE;
t25=(*a=C_VECTOR_TYPE|1,a[1]=t24,tmp=(C_word)a,a+=2,tmp);
t26=C_SCHEME_FALSE;
t27=(*a=C_VECTOR_TYPE|1,a[1]=t26,tmp=(C_word)a,a+=2,tmp);
t28=C_SCHEME_FALSE;
t29=(*a=C_VECTOR_TYPE|1,a[1]=t28,tmp=(C_word)a,a+=2,tmp);
t30=C_SCHEME_FALSE;
t31=(*a=C_VECTOR_TYPE|1,a[1]=t30,tmp=(C_word)a,a+=2,tmp);
t32=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21890,a[2]=t5,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t33=(*a=C_CLOSURE_TYPE|18,a[1]=(C_word)f_21896,a[2]=t27,a[3]=t25,a[4]=t29,a[5]=t31,a[6]=t23,a[7]=t19,a[8]=t17,a[9]=t21,a[10]=t15,a[11]=t7,a[12]=t3,a[13]=t2,a[14]=t32,a[15]=t5,a[16]=t13,a[17]=t11,a[18]=t9,tmp=(C_word)a,a+=19,tmp);
t34=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 379  token-unit-type=?");
f_20369(t33,t34,C_fix(23296));}

/* k21894 in sal-parse-stepping in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_21896(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21896,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21900,a[2]=((C_word*)t0)[14],a[3]=((C_word*)t0)[15],a[4]=((C_word*)t0)[16],a[5]=((C_word*)t0)[17],a[6]=((C_word*)t0)[18],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[13]);
C_trace("ChickenBridge.scm: 379  emit");
f_20441(t2,t3,C_SCHEME_END_OF_LIST,((C_word*)t0)[12]);}
else{
t2=(*a=C_CLOSURE_TYPE|17,a[1]=(C_word)f_21946,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[16],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[13],a[10]=((C_word*)t0)[12],a[11]=((C_word*)t0)[8],a[12]=((C_word*)t0)[9],a[13]=((C_word*)t0)[14],a[14]=((C_word*)t0)[15],a[15]=((C_word*)t0)[10],a[16]=((C_word*)t0)[18],a[17]=((C_word*)t0)[11],tmp=(C_word)a,a+=18,tmp);
t3=(C_word)C_i_caddr(((C_word*)t0)[13]);
C_trace("ChickenBridge.scm: 379  token-unit-type=?");
f_20369(t2,t3,C_fix(10756));}}

/* k21944 in k21894 in sal-parse-stepping in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_21946(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21946,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_21950,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[10],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[12],a[6]=((C_word*)t0)[13],a[7]=((C_word*)t0)[14],a[8]=((C_word*)t0)[15],a[9]=((C_word*)t0)[16],a[10]=((C_word*)t0)[17],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[9]);
C_trace("ChickenBridge.scm: 379  emit");
f_20441(t2,t3,C_SCHEME_END_OF_LIST,((C_word*)t0)[10]);}
else{
t2=(*a=C_CLOSURE_TYPE|14,a[1]=(C_word)f_22043,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[13],a[11]=((C_word*)t0)[14],a[12]=((C_word*)t0)[8],a[13]=((C_word*)t0)[16],a[14]=((C_word*)t0)[17],tmp=(C_word)a,a+=15,tmp);
t3=(C_word)C_i_caddr(((C_word*)t0)[9]);
C_trace("ChickenBridge.scm: 379  token-unit-type=?");
f_20369(t2,t3,C_fix(22784));}}

/* k22041 in k21944 in k21894 in sal-parse-stepping in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_22043(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22043,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_22047,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[11],a[6]=((C_word*)t0)[12],a[7]=((C_word*)t0)[13],a[8]=((C_word*)t0)[14],tmp=(C_word)a,a+=9,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[9]);
C_trace("ChickenBridge.scm: 379  emit");
f_20441(t2,t3,C_SCHEME_END_OF_LIST,((C_word*)t0)[8]);}
else{
t2=(C_word)C_i_length(((C_word*)t0)[9]);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_22111,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[6],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[7],a[12]=((C_word*)t0)[14],tmp=(C_word)a,a+=13,tmp);
t5=(C_word)C_i_cadr(((C_word*)t0)[9]);
C_trace("ChickenBridge.scm: 379  emit");
f_20441(t4,t5,C_SCHEME_END_OF_LIST,((C_word*)t0)[8]);}}

/* k22109 in k22041 in k21944 in k21894 in sal-parse-stepping in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_22111(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22111,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[12])+1,t1);
t3=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[11])[1],C_fix(1));
t4=(C_word)C_i_list_ref(((C_word*)t0)[10],t3);
t5=C_mutate(((C_word *)((C_word*)t0)[9])+1,t4);
t6=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_22118,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[6],a[10]=((C_word*)t0)[12],a[11]=((C_word*)t0)[7],a[12]=((C_word*)t0)[8],tmp=(C_word)a,a+=13,tmp);
if(C_truep(((C_word*)((C_word*)t0)[9])[1])){
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22368,a[2]=t6,a[3]=((C_word*)t0)[9],tmp=(C_word)a,a+=4,tmp);
t8=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[9])[1]);
C_trace("ChickenBridge.scm: 379  emit");
f_20441(t7,t8,C_SCHEME_END_OF_LIST,((C_word*)t0)[2]);}
else{
t7=C_set_block_item(((C_word*)t0)[9],0,C_fix(1));
t8=t6;
f_22118(t8,t7);}}

/* k22366 in k22109 in k22041 in k21944 in k21894 in sal-parse-stepping in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_22368(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_22118(t3,t2);}

/* k22116 in k22109 in k22041 in k21944 in k21894 in sal-parse-stepping in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_22118(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22118,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_22121,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[12],tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[4])[1],C_fix(6)))){
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22307,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
t4=(C_word)C_i_cadddr(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 379  emit");
f_20441(t3,t4,C_SCHEME_END_OF_LIST,((C_word*)t0)[3]);}
else{
t3=C_set_block_item(((C_word*)t0)[9],0,C_fix(0));
t4=(C_word)C_i_caddr(((C_word*)t0)[2]);
t5=C_mutate(((C_word *)((C_word*)t0)[6])+1,t4);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22356,a[2]=t2,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_cadddr(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 379  emit");
f_20441(t6,t7,C_SCHEME_END_OF_LIST,((C_word*)t0)[3]);}}

/* k22354 in k22116 in k22109 in k22041 in k21944 in k21894 in sal-parse-stepping in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_22356(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_22121(t3,t2);}

/* k22305 in k22116 in k22109 in k22041 in k21944 in k21894 in sal-parse-stepping in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_22307(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22307,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[7])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22313,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  fifth");
t4=C_retrieve(lf[47]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k22311 in k22305 in k22116 in k22109 in k22041 in k21944 in k21894 in sal-parse-stepping in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_22313(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22313,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22337,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  fifth");
t3=C_retrieve(lf[47]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}
else{
t2=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_FALSE);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_FALSE);
t4=((C_word*)t0)[4];
f_22121(t4,t3);}}

/* k22335 in k22311 in k22305 in k22116 in k22109 in k22041 in k21944 in k21894 in sal-parse-stepping in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_22337(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22337,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22321,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22333,a[2]=((C_word*)t0)[3],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  fifth");
t6=C_retrieve(lf[47]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)t0)[2]);}

/* k22331 in k22335 in k22311 in k22305 in k22116 in k22109 in k22041 in k21944 in k21894 in sal-parse-stepping in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_22333(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cadr(t1);
C_trace("ChickenBridge.scm: 379  emit");
f_20441(((C_word*)t0)[3],t2,C_SCHEME_END_OF_LIST,((C_word*)t0)[2]);}

/* k22319 in k22335 in k22311 in k22305 in k22116 in k22109 in k22041 in k21944 in k21894 in sal-parse-stepping in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_22321(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_22121(t3,t2);}

/* k22119 in k22116 in k22109 in k22041 in k21944 in k21894 in sal-parse-stepping in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_22121(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22121,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_22124,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[5])[1]))){
t3=t2;
f_22124(t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22283,a[2]=t2,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[9],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[420]);}}

/* k22281 in k22119 in k22116 in k22109 in k22041 in k21944 in k21894 in sal-parse-stepping in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_22283(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22283,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22287,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_a_i_list(&a,5,t1,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 379  append");
t5=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,((C_word*)((C_word*)t0)[4])[1],t4);}

/* k22285 in k22281 in k22119 in k22116 in k22109 in k22041 in k21944 in k21894 in sal-parse-stepping in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_22287(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)t0)[3]);
t4=((C_word*)t0)[2];
f_22124(t4,t3);}

/* k22122 in k22119 in k22116 in k22109 in k22041 in k21944 in k21894 in sal-parse-stepping in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_22124(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22124,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_22127,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_22127(t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22260,a[2]=t2,a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[9],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[419]);}}

/* k22258 in k22122 in k22119 in k22116 in k22109 in k22041 in k21944 in k21894 in sal-parse-stepping in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_22260(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22260,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22264,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_a_i_list(&a,5,t1,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 379  append");
t5=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,((C_word*)((C_word*)t0)[4])[1],t4);}

/* k22262 in k22258 in k22122 in k22119 in k22116 in k22109 in k22041 in k21944 in k21894 in sal-parse-stepping in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_22264(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)t0)[3]);
t4=((C_word*)t0)[2];
f_22127(t4,t3);}

/* k22125 in k22122 in k22119 in k22116 in k22109 in k22041 in k21944 in k21894 in sal-parse-stepping in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_22127(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22127,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_22130,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[2])[1]))){
t3=t2;
f_22130(t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22237,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[9],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[418]);}}
else{
t3=t2;
f_22130(t3,C_SCHEME_UNDEFINED);}}

/* k22235 in k22125 in k22122 in k22119 in k22116 in k22109 in k22041 in k21944 in k21894 in sal-parse-stepping in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_22237(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22237,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22241,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_a_i_list(&a,5,t1,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 379  append");
t5=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,((C_word*)((C_word*)t0)[4])[1],t4);}

/* k22239 in k22235 in k22125 in k22122 in k22119 in k22116 in k22109 in k22041 in k21944 in k21894 in sal-parse-stepping in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_22241(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)t0)[3]);
t4=((C_word*)t0)[2];
f_22130(t4,t3);}

/* k22128 in k22125 in k22122 in k22119 in k22116 in k22109 in k22041 in k21944 in k21894 in sal-parse-stepping in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_22130(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[34],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22130,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22133,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
t3=((C_word*)((C_word*)t0)[3])[1];
if(C_truep(t3)){
t4=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22162,a[2]=((C_word*)t0)[3],a[3]=t2,a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 379  token-unit-type=?");
f_20369(t4,((C_word*)((C_word*)t0)[3])[1],C_fix(21248));}
else{
t4=(C_word)C_a_i_list(&a,3,lf[97],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[5])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[7])[1],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[5])+1,t5);
t7=t2;
f_22133(t7,t6);}}

/* k22160 in k22128 in k22125 in k22122 in k22119 in k22116 in k22109 in k22041 in k21944 in k21894 in sal-parse-stepping in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_22162(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[35],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22162,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[410],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[97],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[7])[1],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=((C_word*)t0)[3];
f_22133(t7,t6);}
else{
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22180,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 379  token-unit-type=?");
f_20369(t2,((C_word*)((C_word*)t0)[2])[1],C_fix(23552));}}

/* k22178 in k22160 in k22128 in k22125 in k22122 in k22119 in k22116 in k22109 in k22041 in k21944 in k21894 in sal-parse-stepping in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_22180(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[35],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22180,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[416],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[97],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[7])[1],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=((C_word*)t0)[3];
f_22133(t7,t6);}
else{
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22198,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 379  token-unit-type=?");
f_20369(t2,((C_word*)((C_word*)t0)[2])[1],C_fix(20992));}}

/* k22196 in k22178 in k22160 in k22128 in k22125 in k22122 in k22119 in k22116 in k22109 in k22041 in k21944 in k21894 in sal-parse-stepping in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_22198(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[34],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22198,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[417],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[99],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[7])[1],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=((C_word*)t0)[3];
f_22133(t7,t6);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22216,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  token-unit-type=?");
f_20369(t2,((C_word*)((C_word*)t0)[2])[1],C_fix(21760));}}

/* k22214 in k22196 in k22178 in k22160 in k22128 in k22125 in k22122 in k22119 in k22116 in k22109 in k22041 in k21944 in k21894 in sal-parse-stepping in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_22216(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22216,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[340],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[99],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[3])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[6])[1],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_22133(t7,t6);}
else{
t2=((C_word*)t0)[2];
f_22133(t2,C_SCHEME_UNDEFINED);}}

/* k22131 in k22128 in k22125 in k22122 in k22119 in k22116 in k22109 in k22041 in k21944 in k21894 in sal-parse-stepping in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_22133(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22133,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22137,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],C_SCHEME_FALSE,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 379  append");
t5=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,((C_word*)((C_word*)t0)[7])[1],t4);}

/* k22135 in k22131 in k22128 in k22125 in k22122 in k22119 in k22116 in k22109 in k22041 in k21944 in k21894 in sal-parse-stepping in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_22137(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_21890(t3,t2);}

/* k22045 in k22041 in k21944 in k21894 in sal-parse-stepping in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_22047(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22047,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22051,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t4=(C_word)C_i_cadddr(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 379  emit");
f_20441(t3,t4,C_SCHEME_END_OF_LIST,((C_word*)t0)[2]);}

/* k22049 in k22045 in k22041 in k21944 in k21894 in sal-parse-stepping in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_22051(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22051,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22055,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[415]);}

/* k22053 in k22049 in k22045 in k22041 in k21944 in k21894 in sal-parse-stepping in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_22055(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[72],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22055,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(C_word)C_a_i_list(&a,2,lf[15],((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[6])[1],t3);
t5=(C_word)C_a_i_list(&a,2,lf[3],((C_word*)((C_word*)t0)[6])[1]);
t6=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_FALSE,t4,t5);
t7=(C_word)C_a_i_list(&a,2,lf[8],((C_word*)((C_word*)t0)[6])[1]);
t8=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[4])[1],t7);
t9=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[4])[1],C_SCHEME_FALSE,t8,C_SCHEME_FALSE,C_SCHEME_FALSE);
t10=(C_word)C_a_i_list(&a,2,t6,t9);
t11=C_mutate(((C_word *)((C_word*)t0)[3])+1,t10);
t12=((C_word*)t0)[2];
f_21890(t12,t11);}

/* k21948 in k21944 in k21894 in sal-parse-stepping in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_21950(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21950,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[10])+1,t1);
t3=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_21954,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
t4=(C_word)C_i_cadddr(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 379  emit");
f_20441(t3,t4,C_SCHEME_END_OF_LIST,((C_word*)t0)[3]);}

/* k21952 in k21948 in k21944 in k21894 in sal-parse-stepping in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_21954(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21954,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[10])+1,t1);
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_21958,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[10],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 379  fifth");
t4=C_retrieve(lf[47]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k21956 in k21952 in k21948 in k21944 in k21894 in sal-parse-stepping in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_21958(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21958,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21961,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[9])[1])){
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_21977,a[2]=t3,a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[4],a[8]=((C_word*)t0)[9],tmp=(C_word)a,a+=9,tmp);
t5=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[9])[1]);
C_trace("ChickenBridge.scm: 379  emit");
f_20441(t4,t5,C_SCHEME_END_OF_LIST,((C_word*)t0)[2]);}
else{
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t4);
t6=t3;
f_21961(t6,t5);}}

/* k21975 in k21956 in k21952 in k21948 in k21944 in k21894 in sal-parse-stepping in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_21977(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21977,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_21981,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 379  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[414]);}

/* k21979 in k21975 in k21956 in k21952 in k21948 in k21944 in k21894 in sal-parse-stepping in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_21981(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[66],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21981,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[8])[1],C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[6])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[413],t3,t4);
t6=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_a_i_list(&a,4,lf[20],((C_word*)((C_word*)t0)[8])[1],t5,t6);
t8=C_mutate(((C_word *)((C_word*)t0)[4])+1,t7);
t9=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[8])[1],C_SCHEME_TRUE,C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);
t10=(C_word)C_a_i_list(&a,1,t9);
t11=C_mutate(((C_word *)((C_word*)t0)[3])+1,t10);
t12=((C_word*)t0)[2];
f_21961(t12,t11);}

/* k21959 in k21956 in k21952 in k21948 in k21944 in k21894 in sal-parse-stepping in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_21961(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21961,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21965,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE,((C_word*)((C_word*)t0)[2])[1],C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 379  append");
t5=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,((C_word*)((C_word*)t0)[5])[1],t4);}

/* k21963 in k21959 in k21956 in k21952 in k21948 in k21944 in k21894 in sal-parse-stepping in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_21965(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_21890(t3,t2);}

/* k21898 in k21894 in sal-parse-stepping in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_21900(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21900,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21904,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[412]);}

/* k21902 in k21898 in k21894 in sal-parse-stepping in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_21904(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21904,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21908,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[411]);}

/* k21906 in k21902 in k21898 in k21894 in sal-parse-stepping in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_21908(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[63],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21908,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,3,lf[97],((C_word*)((C_word*)t0)[4])[1],C_fix(1));
t5=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[4])[1],t4);
t6=(C_word)C_a_i_list(&a,3,lf[410],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[6])[1]);
t7=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[4])[1],C_fix(0),C_SCHEME_FALSE,t5,t6);
t8=(C_word)C_a_i_list(&a,2,t3,t7);
t9=C_mutate(((C_word *)((C_word*)t0)[3])+1,t8);
t10=((C_word*)t0)[2];
f_21890(t10,t9);}

/* k21888 in sal-parse-stepping in k21879 in k21876 in k21873 in k21870 in k21867 in k21864 in k21861 in k21858 in k21855 in k21852 in k21849 in k21846 in k21843 in k21840 in k21837 in k21834 in k21831 in k21828 in k21825 in k21822 in k21819 in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_21890(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  make-parse-unit");
f_20284(((C_word*)t0)[3],C_fix(33024),((C_word*)((C_word*)t0)[2])[1],C_SCHEME_FALSE);}

/* inf->pre in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_21705(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21705,NULL,2,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t3)[1]))){
t12=C_SCHEME_UNDEFINED;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_set_block_item(t13,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_21717,a[2]=t9,a[3]=t13,a[4]=t11,a[5]=t5,a[6]=t7,a[7]=t3,a[8]=((C_word)li342),tmp=(C_word)a,a+=9,tmp));
t15=((C_word*)t13)[1];
f_21717(t15,t1);}
else{
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,((C_word*)t3)[1]);}}

/* do3307 in inf->pre in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_21717(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21717,NULL,2,t0,t1);}
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[6])[1]);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[7])+1,t4);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_21736,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[7],a[6]=t1,a[7]=((C_word*)t0)[3],a[8]=((C_word*)t0)[4],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 379  is-op?");
f_21684(t6,((C_word*)((C_word*)t0)[5])[1]);}}

/* k21734 in do3307 in inf->pre in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_21736(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21736,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21739,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[8])[1]))){
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_21754,a[2]=((C_word*)t0)[8],a[3]=t5,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],a[8]=((C_word)li341),tmp=(C_word)a,a+=9,tmp));
t7=((C_word*)t5)[1];
f_21754(t7,t3,C_SCHEME_FALSE,C_SCHEME_TRUE,C_SCHEME_END_OF_LIST);}
else{
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,((C_word*)((C_word*)t0)[2])[1]);
t5=t3;
f_21739(2,t5,t4);}}

/* do3309 in k21734 in do3307 in inf->pre in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_21754(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21754,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]);
t9=(C_truep(t8)?t8:(C_word)C_i_not(((C_word*)t6)[1]));
if(C_truep(t9)){
t10=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21768,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21782,a[2]=t10,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  reverse");
t12=*((C_word*)lf[187]+1);
((C_proc3)C_retrieve_proc(t12))(3,t12,t11,((C_word*)t7)[1]);}
else{
t10=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_21786,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[2],a[4]=t7,a[5]=t6,a[6]=t1,a[7]=((C_word*)t0)[3],a[8]=t5,tmp=(C_word)a,a+=9,tmp);
t11=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
C_trace("ChickenBridge.scm: 379  is-op?");
f_21684(t10,t11);}}

/* k21784 in do3309 in k21734 in do3307 in inf->pre in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_21786(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21786,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21789,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t4=(C_truep(((C_word*)((C_word*)t0)[8])[1])?(C_word)C_i_less_or_equalp(((C_word*)((C_word*)t0)[8])[1],((C_word*)((C_word*)t0)[3])[1]):C_SCHEME_FALSE);
if(C_truep(t4)){
t5=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_FALSE);
t6=t3;
f_21789(t6,t5);}
else{
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t6);
t8=(C_word)C_a_i_cons(&a,2,t5,((C_word*)((C_word*)t0)[4])[1]);
t9=C_mutate(((C_word *)((C_word*)t0)[4])+1,t8);
t10=t3;
f_21789(t10,t9);}}

/* k21787 in k21784 in do3309 in k21734 in do3307 in inf->pre in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_21789(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[6])[1];
f_21754(t2,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k21780 in do3309 in k21734 in do3307 in inf->pre in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_21782(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  inf->pre");
f_21705(((C_word*)t0)[2],t1);}

/* k21766 in do3309 in k21734 in do3307 in inf->pre in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_21768(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21768,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_truep(((C_word*)((C_word*)t0)[4])[1])?(C_word)C_a_i_list(&a,3,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[5])[1]):(C_word)C_a_i_list(&a,3,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_FALSE));
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,t4);}

/* k21737 in k21734 in do3307 in inf->pre in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_21739(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[3])[1];
f_21717(t2,((C_word*)t0)[2]);}

/* is-op? in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_21684(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21684,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21691,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  token-unit?");
f_20353(t3,t2);}

/* k21689 in is-op? in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_21691(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21691,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21694,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  parse-unit-type");
f_20305(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* k21692 in k21689 in is-op? in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_21694(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21694,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21700,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  SalOpType?");
f_21461(t2,t1);}

/* k21698 in k21692 in k21689 in is-op? in k21680 in k21677 in k21674 in k21671 in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_21700(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21700,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[3];
t3=((C_word*)t0)[2];
t4=t2;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_bitwise_and(&a,2,t3,C_fix(255)));}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* remove-token-type in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_21619(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21619,NULL,3,t1,t2,t3);}
t4=(C_word)C_a_i_list(&a,1,C_SCHEME_TRUE);
t5=t4;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21628,a[2]=t3,a[3]=t6,a[4]=t8,a[5]=t4,a[6]=((C_word)li338),tmp=(C_word)a,a+=7,tmp));
t10=((C_word*)t8)[1];
f_21628(t10,t1,t2);}

/* do3273 in remove-token-type in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_21628(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21628,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_cdr(((C_word*)t0)[5]));}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21641,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21651,a[2]=((C_word*)t0)[3],a[3]=t2,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 379  token-unit-type=?");
f_20369(t4,t5,((C_word*)t0)[2]);}}

/* k21649 in do3273 in remove-token-type in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_21651(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21651,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_21641(t2,C_SCHEME_FALSE);}
else{
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=(C_word)C_a_i_list(&a,1,t2);
t4=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t3);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[2])+1,t5);
t7=((C_word*)t0)[4];
f_21641(t7,t6);}}

/* k21639 in do3273 in remove-token-type in k21615 in k21612 in k21609 in k21606 in k21603 in k21600 in k21597 in k21594 in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_21641(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_21628(t3,((C_word*)t0)[2],t2);}

/* SalType=? in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_21575(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21575,NULL,3,t1,t2,t3);}
t4=(C_word)C_a_i_arithmetic_shift(&a,2,t2,C_fix(-8));
t5=(C_word)C_a_i_arithmetic_shift(&a,2,t3,C_fix(-8));
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_i_nequalp(t4,t5));}

/* SalRuleType? in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_21563(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21563,NULL,2,t1,t2);}
t3=(C_word)C_i_lessp(C_fix(25600),t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_truep(t3)?(C_word)C_i_lessp(t2,C_fix(38400)):C_SCHEME_FALSE));}

/* SalOpType? in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_21461(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21461,NULL,2,t1,t2);}
t3=(C_word)C_i_lessp(C_fix(6656),t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_truep(t3)?(C_word)C_i_lessp(t2,C_fix(11520)):C_SCHEME_FALSE));}

/* SalTokenType? in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_21413(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21413,NULL,2,t1,t2);}
t3=(C_word)C_i_lessp(C_fix(0),t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_truep(t3)?(C_word)C_i_lessp(t2,C_fix(25600)):C_SCHEME_FALSE));}

/* parser in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_20794(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7){
C_word tmp;
C_word t8;
C_word t9;
C_word t10;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20794,NULL,7,t1,t2,t3,t4,t5,t6,t7);}
t8=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_20798,a[2]=t4,a[3]=t7,a[4]=t6,a[5]=t5,a[6]=t8,a[7]=t1,a[8]=t2,tmp=(C_word)a,a+=9,tmp);
if(C_truep(t6)){
C_trace("ChickenBridge.scm: 379  printf");
t10=C_retrieve(lf[404]);
((C_proc6)C_retrieve_proc(t10))(6,t10,t9,lf[405],t5,t2,((C_word*)t8)[1]);}
else{
t10=t9;
f_20798(2,t10,C_SCHEME_UNDEFINED);}}

/* k20796 in parser in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_20798(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20798,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_20801,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 379  null-tokens?");
f_19973(t2,((C_word*)((C_word*)t0)[6])[1]);}

/* k20799 in k20796 in parser in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_20801(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20801,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_20804,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
if(C_truep(t1)){
t3=t2;
f_20804(t3,t1);}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21219,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21223,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21227,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  first-token");
f_19961(t5,((C_word*)((C_word*)t0)[6])[1]);}}

/* k21225 in k20799 in k20796 in parser in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_21227(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  token-position");
f_19920(((C_word*)t0)[2],t1);}

/* k21221 in k20799 in k20796 in parser in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_21223(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  max");
t2=*((C_word*)lf[269]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],C_retrieve2(lf[398],"*maxtokpos*"),t1);}

/* k21217 in k20799 in k20796 in parser in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_21219(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(&lf[398],t1);
t3=((C_word*)t0)[2];
f_20804(t3,t2);}

/* k20802 in k20799 in k20796 in parser in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_20804(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20804,NULL,2,t0,t1);}
t2=((C_word*)t0)[8];
if(C_truep((C_word)C_i_numberp(t2))){
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20813,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  pattern-value");
t4=C_retrieve2(lf[242],"pattern-value");
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[8]);}
else{
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_20927,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[2],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 379  pattern-clause?");
f_20115(t3,((C_word*)t0)[8]);}}

/* k20925 in k20802 in k20799 in k20796 in parser in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_20927(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20927,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_20933,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
t3=((C_word*)t0)[2];
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20160,a[2]=t2,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  pattern-clause?");
f_20115(t4,t3);}
else{
C_trace("ChickenBridge.scm: 379  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[6],lf[403],((C_word*)t0)[2]);}}

/* k20158 in k20925 in k20802 in k20799 in k20796 in parser in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_20160(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
f_20933(t3,(C_word)C_eqp(t2,lf[387]));}
else{
t2=((C_word*)t0)[2];
f_20933(t2,C_SCHEME_FALSE);}}

/* k20931 in k20925 in k20802 in k20799 in k20796 in parser in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_20933(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[32],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20933,NULL,2,t0,t1);}
t2=(C_truep(t1)?t1:((C_word*)t0)[8]);
if(C_truep(t2)){
t3=C_SCHEME_FALSE;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=((C_word*)((C_word*)t0)[7])[1];
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_END_OF_LIST;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_20942,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t10,a[7]=((C_word*)t0)[7],a[8]=t6,a[9]=t8,a[10]=t4,a[11]=((C_word*)t0)[6],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 379  pattern-nsubs");
f_20133(t11,((C_word*)t0)[2]);}
else{
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21021,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
t4=((C_word*)t0)[2];
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20176,a[2]=t3,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  pattern-clause?");
f_20115(t5,t4);}}

/* k20174 in k20931 in k20925 in k20802 in k20799 in k20796 in parser in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_20176(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
f_21021(t3,(C_word)C_eqp(t2,lf[388]));}
else{
t2=((C_word*)t0)[2];
f_21021(t2,C_SCHEME_FALSE);}}

/* k21019 in k20931 in k20925 in k20802 in k20799 in k20796 in parser in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_21021(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21021,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_END_OF_LIST;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_21027,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t7,a[8]=t5,a[9]=((C_word*)t0)[7],a[10]=t3,tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 379  pattern-nsubs");
f_20133(t8,((C_word*)t0)[2]);}
else{
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21091,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[2],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 379  pattern-zero-or-more?");
f_20201(t2,((C_word*)t0)[2]);}}

/* k21089 in k21019 in k20931 in k20925 in k20802 in k20799 in k20796 in parser in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_21091(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21091,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21094,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(t1)){
t3=t2;
f_21094(t3,t1);}
else{
t3=((C_word*)t0)[5];
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20192,a[2]=t2,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  pattern-clause?");
f_20115(t4,t3);}}

/* k20190 in k21089 in k21019 in k20931 in k20925 in k20802 in k20799 in k20796 in parser in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_20192(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
f_21094(t3,(C_word)C_eqp(t2,lf[97]));}
else{
t2=((C_word*)t0)[2];
f_21094(t2,C_SCHEME_FALSE);}}

/* k21092 in k21089 in k21019 in k20931 in k20925 in k20802 in k20799 in k20796 in parser in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_21094(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word ab[46],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21094,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_SCHEME_TRUE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)((C_word*)t0)[7])[1];
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_END_OF_LIST;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_fix(0);
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21100,a[2]=((C_word*)t0)[5],a[3]=t11,a[4]=((C_word*)t0)[7],a[5]=t9,a[6]=t3,a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
t13=C_SCHEME_UNDEFINED;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_set_block_item(t14,0,(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_21123,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t5,a[7]=t11,a[8]=t7,a[9]=((C_word*)t0)[7],a[10]=t9,a[11]=t14,a[12]=t3,a[13]=((C_word)li330),tmp=(C_word)a,a+=14,tmp));
t16=((C_word*)t14)[1];
f_21123(t16,t12);}
else{
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21172,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
t3=((C_word*)t0)[5];
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20224,a[2]=t2,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  pattern-clause?");
f_20115(t4,t3);}}

/* k20222 in k21092 in k21089 in k21019 in k20931 in k20925 in k20802 in k20799 in k20796 in parser in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_20224(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
f_21172(t3,(C_word)C_eqp(t2,lf[402]));}
else{
t2=((C_word*)t0)[2];
f_21172(t2,C_SCHEME_FALSE);}}

/* k21170 in k21092 in k21089 in k21019 in k20931 in k20925 in k20802 in k20799 in k20796 in parser in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_21172(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21172,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_END_OF_LIST;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_END_OF_LIST;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21181,a[2]=((C_word*)t0)[6],a[3]=t7,a[4]=t5,a[5]=((C_word*)t0)[7],a[6]=t3,tmp=(C_word)a,a+=7,tmp);
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21192,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],a[7]=((C_word)li331),tmp=(C_word)a,a+=8,tmp);
t10=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21198,a[2]=t7,a[3]=t5,a[4]=t3,a[5]=((C_word)li332),tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  call-with-values");
C_call_with_values(4,0,t8,t9,t10);}
else{
t2=((C_word*)t0)[5];
t3=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 379  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,((C_word*)t0)[7],lf[401],t3);}}

/* a21197 in k21170 in k21092 in k21089 in k21019 in k20931 in k20925 in k20802 in k20799 in k20796 in parser in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_21198(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_21198,5,t0,t1,t2,t3,t4);}
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,t7);}

/* a21191 in k21170 in k21092 in k21089 in k21019 in k20931 in k20925 in k20802 in k20799 in k20796 in parser in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_21192(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21192,2,t0,t1);}
C_trace("ChickenBridge.scm: 379  parser");
f_20794(t1,((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_TRUE,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k21179 in k21170 in k21092 in k21089 in k21019 in k20931 in k20925 in k20802 in k20799 in k20796 in parser in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_21181(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("ChickenBridge.scm: 379  values");
C_values(5,0,((C_word*)t0)[5],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]);}
else{
C_trace("ChickenBridge.scm: 379  values");
C_values(5,0,((C_word*)t0)[5],C_SCHEME_TRUE,C_SCHEME_FALSE,((C_word*)((C_word*)t0)[2])[1]);}}

/* do3010 in k21092 in k21089 in k21019 in k20931 in k20925 in k20802 in k20799 in k20796 in parser in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_21123(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21123,NULL,2,t0,t1);}
t2=(C_word)C_i_not(((C_word*)((C_word*)t0)[12])[1]);
t3=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_21133,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[12],a[12]=((C_word*)t0)[11],a[13]=t1,tmp=(C_word)a,a+=14,tmp);
if(C_truep(t2)){
t4=t3;
f_21133(2,t4,t2);}
else{
C_trace("ChickenBridge.scm: 379  null-tokens?");
f_19973(t3,((C_word*)((C_word*)t0)[8])[1]);}}

/* k21131 in do3010 in k21092 in k21089 in k21019 in k20931 in k20925 in k20802 in k20799 in k20796 in parser in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_21133(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21133,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[13];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}
else{
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_21136,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[13],a[9]=((C_word*)t0)[12],tmp=(C_word)a,a+=10,tmp);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21153,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[5],a[7]=((C_word)li328),tmp=(C_word)a,a+=8,tmp);
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21159,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[11],a[5]=((C_word)li329),tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  call-with-values");
C_call_with_values(4,0,t2,t3,t4);}}

/* a21158 in k21131 in do3010 in k21092 in k21089 in k21019 in k20931 in k20925 in k20802 in k20799 in k20796 in parser in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_21159(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_21159,5,t0,t1,t2,t3,t4);}
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,t7);}

/* a21152 in k21131 in do3010 in k21092 in k21089 in k21019 in k20931 in k20925 in k20802 in k20799 in k20796 in parser in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_21153(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21153,2,t0,t1);}
C_trace("ChickenBridge.scm: 379  parser");
f_20794(t1,((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_TRUE,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k21134 in k21131 in do3010 in k21092 in k21089 in k21019 in k20931 in k20925 in k20802 in k20799 in k20796 in parser in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_21136(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21136,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21139,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],tmp=(C_word)a,a+=4,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21146,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  append");
t4=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[2])[1]);}
else{
t3=t2;
f_21139(t3,C_SCHEME_UNDEFINED);}}

/* k21144 in k21134 in k21131 in do3010 in k21092 in k21089 in k21019 in k20931 in k20925 in k20802 in k20799 in k20796 in parser in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_21146(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21146,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,((C_word*)((C_word*)t0)[4])[1]);
t4=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(1));
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=((C_word*)t0)[2];
f_21139(t6,t5);}

/* k21137 in k21134 in k21131 in do3010 in k21092 in k21089 in k21019 in k20931 in k20925 in k20802 in k20799 in k20796 in parser in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_21139(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[3])[1];
f_21123(t2,((C_word*)t0)[2]);}

/* k21098 in k21092 in k21089 in k21019 in k20931 in k20925 in k20802 in k20799 in k20796 in parser in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_21100(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21100,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21103,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21109,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  pattern-zero-or-more?");
f_20201(t3,((C_word*)t0)[2]);}

/* k21107 in k21098 in k21092 in k21089 in k21019 in k20931 in k20925 in k20802 in k20799 in k20796 in parser in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_21109(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=(C_truep(t1)?t1:(C_word)C_i_greaterp(((C_word*)((C_word*)t0)[5])[1],C_fix(0)));
if(C_truep(t2)){
t3=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t4=((C_word*)t0)[3];
f_21103(t4,t3);}
else{
t3=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_FALSE);
t4=C_set_block_item(((C_word*)t0)[2],0,C_SCHEME_END_OF_LIST);
t5=((C_word*)t0)[3];
f_21103(t5,t4);}}

/* k21101 in k21098 in k21092 in k21089 in k21019 in k20931 in k20925 in k20802 in k20799 in k20796 in parser in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_21103(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  values");
C_values(5,0,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k21025 in k21019 in k20931 in k20925 in k20802 in k20799 in k20796 in parser in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_21027(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21027,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21030,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],tmp=(C_word)a,a+=7,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_21045,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[5],a[9]=t4,a[10]=t1,a[11]=((C_word*)t0)[10],a[12]=((C_word)li327),tmp=(C_word)a,a+=13,tmp));
t6=((C_word*)t4)[1];
f_21045(t6,t2,C_fix(0));}

/* do2990 in k21025 in k21019 in k20931 in k20925 in k20802 in k20799 in k20796 in parser in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_21045(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21045,NULL,3,t0,t1,t2);}
t3=((C_word*)((C_word*)t0)[11])[1];
t4=(C_truep(t3)?t3:(C_word)C_i_nequalp(t2,((C_word*)t0)[10]));
if(C_truep(t4)){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_FALSE);}
else{
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21055,a[2]=t1,a[3]=((C_word*)t0)[9],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_21064,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word)li325),tmp=(C_word)a,a+=9,tmp);
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21078,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[11],a[5]=((C_word)li326),tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  call-with-values");
C_call_with_values(4,0,t5,t6,t7);}}

/* a21077 in do2990 in k21025 in k21019 in k20931 in k20925 in k20802 in k20799 in k20796 in parser in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_21078(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_21078,5,t0,t1,t2,t3,t4);}
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,t7);}

/* a21063 in do2990 in k21025 in k21019 in k20931 in k20925 in k20802 in k20799 in k20796 in parser in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_21064(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21064,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21072,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=t1,a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  pattern-sub");
f_20143(t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k21070 in a21063 in do2990 in k21025 in k21019 in k20931 in k20925 in k20802 in k20799 in k20796 in parser in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_21072(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21072,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
C_trace("ChickenBridge.scm: 379  parser");
f_20794(((C_word*)t0)[5],t1,((C_word*)((C_word*)t0)[4])[1],C_SCHEME_FALSE,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k21053 in do2990 in k21025 in k21019 in k20931 in k20925 in k20802 in k20799 in k20796 in parser in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_21055(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21055,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t3=((C_word*)((C_word*)t0)[3])[1];
f_21045(t3,((C_word*)t0)[2],t2);}

/* k21028 in k21025 in k21019 in k20931 in k20925 in k20802 in k20799 in k20796 in parser in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_21030(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("ChickenBridge.scm: 379  values");
C_values(5,0,((C_word*)t0)[5],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]);}
else{
C_trace("ChickenBridge.scm: 379  values");
C_values(5,0,((C_word*)t0)[5],C_SCHEME_FALSE,C_SCHEME_END_OF_LIST,((C_word*)((C_word*)t0)[2])[1]);}}

/* k20940 in k20931 in k20925 in k20802 in k20799 in k20796 in parser in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_20942(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20942,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20945,a[2]=((C_word*)t0)[7],a[3]=t3,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_20964,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[10],a[10]=t6,a[11]=t3,a[12]=t1,a[13]=((C_word)li324),tmp=(C_word)a,a+=14,tmp));
t8=((C_word*)t6)[1];
f_20964(t8,t4,C_fix(0));}

/* do2968 in k20940 in k20931 in k20925 in k20802 in k20799 in k20796 in parser in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_20964(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20964,NULL,3,t0,t1,t2);}
t3=(C_word)C_i_nequalp(t2,((C_word*)t0)[12]);
t4=(C_truep(t3)?t3:((C_word*)((C_word*)t0)[11])[1]);
if(C_truep(t4)){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_FALSE);}
else{
t5=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_20977,a[2]=((C_word*)t0)[11],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=t1,a[7]=((C_word*)t0)[10],a[8]=t2,tmp=(C_word)a,a+=9,tmp);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_20997,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word)li322),tmp=(C_word)a,a+=9,tmp);
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21011,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word)li323),tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  call-with-values");
C_call_with_values(4,0,t5,t6,t7);}}

/* a21010 in do2968 in k20940 in k20931 in k20925 in k20802 in k20799 in k20796 in parser in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_21011(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_21011,5,t0,t1,t2,t3,t4);}
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,t7);}

/* a20996 in do2968 in k20940 in k20931 in k20925 in k20802 in k20799 in k20796 in parser in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_20997(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20997,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21005,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=t1,a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  pattern-sub");
f_20143(t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k21003 in a20996 in do2968 in k20940 in k20931 in k20925 in k20802 in k20799 in k20796 in parser in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_21005(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21005,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
C_trace("ChickenBridge.scm: 379  parser");
f_20794(((C_word*)t0)[5],t1,((C_word*)((C_word*)t0)[4])[1],C_SCHEME_FALSE,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k20975 in do2968 in k20940 in k20931 in k20925 in k20802 in k20799 in k20796 in parser in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_20977(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20977,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20980,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],tmp=(C_word)a,a+=5,tmp);
t3=((C_word*)((C_word*)t0)[5])[1];
if(C_truep(t3)){
t4=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=t2;
f_20980(t6,t5);}
else{
t4=C_set_block_item(((C_word*)t0)[2],0,C_SCHEME_TRUE);
t5=t2;
f_20980(t5,t4);}}

/* k20978 in k20975 in do2968 in k20940 in k20931 in k20925 in k20802 in k20799 in k20796 in parser in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_20980(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20980,NULL,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t3=((C_word*)((C_word*)t0)[3])[1];
f_20964(t3,((C_word*)t0)[2],t2);}

/* k20943 in k20940 in k20931 in k20925 in k20802 in k20799 in k20796 in parser in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_20945(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20945,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20948,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
t3=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_FALSE);
t4=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_END_OF_LIST);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[2])[1]);
t6=t2;
f_20948(t6,t5);}
else{
t3=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_TRUE);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20962,a[2]=t2,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  reverse");
t5=*((C_word*)lf[187]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,((C_word*)((C_word*)t0)[5])[1]);}}

/* k20960 in k20943 in k20940 in k20931 in k20925 in k20802 in k20799 in k20796 in parser in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_20962(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_20948(t3,t2);}

/* k20946 in k20943 in k20940 in k20931 in k20925 in k20802 in k20799 in k20796 in parser in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_20948(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  values");
C_values(5,0,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k20811 in k20802 in k20799 in k20796 in parser in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_20813(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20813,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20819,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 379  SalTokenType?");
f_21413(t2,t1);}

/* k20817 in k20811 in k20802 in k20799 in k20796 in parser in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_20819(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20819,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20825,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  null-tokens?");
f_19973(t2,((C_word*)((C_word*)t0)[6])[1]);}
else{
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20877,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[4],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 379  SalRuleType?");
f_21563(t2,((C_word*)t0)[5]);}}

/* k20875 in k20817 in k20811 in k20802 in k20799 in k20796 in parser in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_20877(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20877,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20880,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  get-rule");
f_20091(t2,((C_word*)t0)[2],C_SCHEME_END_OF_LIST);}
else{
C_trace("ChickenBridge.scm: 379  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[400],((C_word*)t0)[2]);}}

/* k20878 in k20875 in k20817 in k20811 in k20802 in k20799 in k20796 in parser in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_20880(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20880,2,t0,t1);}
t2=t1;
t3=(C_word)C_i_check_structure(t2,lf[357]);
t4=(C_word)C_i_block_ref(t2,C_fix(3));
t5=t1;
t6=(C_word)C_i_check_structure(t5,lf[357]);
t7=(C_word)C_i_block_ref(t5,C_fix(4));
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20891,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t4,a[6]=((C_word*)t0)[6],a[7]=((C_word)li320),tmp=(C_word)a,a+=8,tmp);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20901,a[2]=((C_word*)t0)[3],a[3]=t7,a[4]=((C_word)li321),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  call-with-values");
C_call_with_values(4,0,((C_word*)t0)[2],t8,t9);}

/* a20900 in k20878 in k20875 in k20817 in k20811 in k20802 in k20799 in k20796 in parser in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_20901(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_20901,5,t0,t1,t2,t3,t4);}
if(C_truep(t2)){
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20912,a[2]=t4,a[3]=t2,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
if(C_truep(((C_word*)t0)[3])){
C_trace("ChickenBridge.scm: 379  func");
t6=((C_word*)t0)[3];
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,t3,((C_word*)t0)[2]);}
else{
t6=t5;
f_20912(2,t6,t3);}}
else{
C_trace("ChickenBridge.scm: 379  values");
C_values(5,0,t1,C_SCHEME_FALSE,C_SCHEME_FALSE,t4);}}

/* k20910 in a20900 in k20878 in k20875 in k20817 in k20811 in k20802 in k20799 in k20796 in parser in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_20912(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  values");
C_values(5,0,((C_word*)t0)[4],((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* a20890 in k20878 in k20875 in k20817 in k20811 in k20802 in k20799 in k20796 in parser in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_20891(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20891,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
C_trace("ChickenBridge.scm: 379  parser");
f_20794(t1,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],C_SCHEME_FALSE,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k20823 in k20817 in k20811 in k20802 in k20799 in k20796 in parser in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_20825(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20825,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 379  values");
C_values(5,0,((C_word*)t0)[4],C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_END_OF_LIST);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20835,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  first-token");
f_19961(t2,((C_word*)((C_word*)t0)[3])[1]);}}

/* k20833 in k20823 in k20817 in k20811 in k20802 in k20799 in k20796 in parser in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_20835(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20835,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20841,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20871,a[2]=((C_word*)t0)[2],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  token-type");
f_19884(t3,t1);}

/* k20869 in k20833 in k20823 in k20817 in k20811 in k20802 in k20799 in k20796 in parser in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_20871(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  SalType=?");
f_21575(((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* k20839 in k20833 in k20823 in k20817 in k20811 in k20802 in k20799 in k20796 in parser in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_20841(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20841,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20848,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20856,a[2]=((C_word*)t0)[2],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  token-type");
f_19884(t3,((C_word*)t0)[2]);}
else{
C_trace("ChickenBridge.scm: 379  values");
C_values(5,0,((C_word*)t0)[3],C_SCHEME_FALSE,C_SCHEME_FALSE,((C_word*)((C_word*)t0)[4])[1]);}}

/* k20854 in k20839 in k20833 in k20823 in k20817 in k20811 in k20802 in k20799 in k20796 in parser in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_20856(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20856,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20860,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  token-string");
f_19902(t2,((C_word*)t0)[2]);}

/* k20858 in k20854 in k20839 in k20833 in k20823 in k20817 in k20811 in k20802 in k20799 in k20796 in parser in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_20860(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20860,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20864,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  token-position");
f_19920(t2,((C_word*)t0)[2]);}

/* k20862 in k20858 in k20854 in k20839 in k20833 in k20823 in k20817 in k20811 in k20802 in k20799 in k20796 in parser in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_20864(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  make-parse-unit");
f_20284(((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k20846 in k20839 in k20833 in k20823 in k20817 in k20811 in k20802 in k20799 in k20796 in parser in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_20848(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=((C_word*)((C_word*)t0)[3])[1];
t3=(C_word)C_i_cdr(t2);
C_trace("ChickenBridge.scm: 379  values");
C_values(5,0,((C_word*)t0)[2],C_SCHEME_TRUE,t1,t3);}

/* simple-unit-emitter in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_20690(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20690,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20692,a[2]=t2,a[3]=((C_word)li318),tmp=(C_word)a,a+=4,tmp));}

/* f_20692 in simple-unit-emitter in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_20692(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_20692,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20696,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=t4,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20740,a[2]=t5,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  parse-unit-parsed");
f_20323(t6,t2);}

/* k20738 */
static void C_ccall f_20740(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  append");
t2=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],t1,C_SCHEME_END_OF_LIST);}

/* k20694 */
static void C_ccall f_20696(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20696,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=((C_word*)t3)[1];
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20699,a[2]=t3,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t4,tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)t0)[2])){
t6=(C_word)C_i_set_car(((C_word*)t3)[1],((C_word*)t0)[2]);
t7=(C_word)C_i_cdr(((C_word*)t3)[1]);
t8=C_set_block_item(t3,0,t7);
t9=t5;
f_20699(t9,t8);}
else{
t6=t5;
f_20699(t6,C_SCHEME_UNDEFINED);}}

/* k20697 in k20694 */
static void C_fcall f_20699(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20699,NULL,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20704,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t3,a[5]=((C_word*)t0)[6],a[6]=((C_word)li317),tmp=(C_word)a,a+=7,tmp));
t5=((C_word*)t3)[1];
f_20704(t5,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* do2925 in k20697 in k20694 */
static void C_fcall f_20704(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20704,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)t0)[5]);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20725,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 379  emit");
f_20441(t3,t4,((C_word*)t0)[3],((C_word*)t0)[2]);}}

/* k20723 in do2925 in k20697 in k20694 */
static void C_ccall f_20725(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=(C_word)C_i_set_car(((C_word*)t0)[4],t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_20704(t4,((C_word*)t0)[2],t3);}

/* simple-unit-parser in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_20682(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20682,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20684,a[2]=t2,a[3]=((C_word)li315),tmp=(C_word)a,a+=4,tmp));}

/* f_20684 in simple-unit-parser in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_20684(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_20684,4,t0,t1,t2,t3);}
C_trace("ChickenBridge.scm: 379  make-parse-unit");
f_20284(t1,((C_word*)t0)[2],t2,C_SCHEME_FALSE);}

/* emit-list in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_20474(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20474,NULL,4,t1,t2,t3,t4);}
if(C_truep((C_word)C_i_nullp(t2))){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_END_OF_LIST);}
else{
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20491,a[2]=t4,a[3]=t3,a[4]=t2,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
t6=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 379  emit");
f_20441(t5,t6,t3,t4);}}

/* k20489 in emit-list in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_20491(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20491,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20495,a[2]=t1,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 379  emit-list");
f_20474(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k20493 in k20489 in emit-list in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_20495(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20495,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* emit in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_20441(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20441,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20448,a[2]=t4,a[3]=t3,a[4]=t2,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  token-unit?");
f_20353(t5,t2);}

/* k20446 in emit in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_20448(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20448,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[5];
t3=((C_word*)t0)[4];
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20519,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  parse-unit-type");
f_20305(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20457,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=((C_word*)t0)[4];
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20392,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  parse-unit?");
f_20290(t4,t3);}}

/* k20390 in k20446 in emit in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_20392(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20392,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20399,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  parse-unit-type");
f_20305(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_20457(2,t2,C_SCHEME_FALSE);}}

/* k20397 in k20390 in k20446 in emit in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_20399(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  SalRuleType?");
f_21563(((C_word*)t0)[2],t1);}

/* k20455 in k20446 in emit in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_20457(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20457,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[5];
t3=((C_word*)t0)[4];
t4=((C_word*)t0)[3];
t5=((C_word*)t0)[2];
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20657,a[2]=t5,a[3]=t4,a[4]=t3,a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20680,a[2]=t6,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  parse-unit-type");
f_20305(t7,t3);}
else{
if(C_truep((C_word)C_i_listp(((C_word*)t0)[4]))){
C_trace("ChickenBridge.scm: 379  emit-list");
f_20474(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
C_trace("ChickenBridge.scm: 379  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[5],lf[394],((C_word*)t0)[4]);}}}

/* k20678 in k20455 in k20446 in emit in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_20680(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  get-rule");
f_20091(((C_word*)t0)[2],t1,C_SCHEME_END_OF_LIST);}

/* k20655 in k20455 in k20446 in emit in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_20657(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20657,2,t0,t1);}
t2=(C_word)C_i_check_structure(t1,lf[357]);
t3=(C_word)C_i_block_ref(t1,C_fix(5));
if(C_truep(t3)){
C_trace("ChickenBridge.scm: 379  meth");
t4=t3;
((C_proc5)C_retrieve_proc(t4))(5,t4,((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20673,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  parse-unit-parsed");
f_20323(t4,((C_word*)t0)[4]);}}

/* k20671 in k20655 in k20455 in k20446 in emit in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_20673(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  emit");
f_20441(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k20517 in k20446 in emit in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_20519(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20519,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20522,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  parse-unit-parsed");
f_20323(t2,((C_word*)t0)[2]);}

/* k20520 in k20517 in k20446 in emit in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_20522(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20522,2,t0,t1);}
t2=((C_word*)t0)[4];
t3=(C_word)C_i_lessp(C_fix(2560),t2);
t4=(C_truep(t3)?(C_word)C_i_lessp(t2,C_fix(3584)):C_SCHEME_FALSE);
if(C_truep(t4)){
C_trace("ChickenBridge.scm: 379  string->number");
C_string_to_number(3,0,((C_word*)t0)[3],t1);}
else{
t5=((C_word*)t0)[4];
t6=(C_word)C_i_lessp(C_fix(13056),t5);
t7=(C_truep(t6)?(C_word)C_i_lessp(t5,C_fix(23808)):C_SCHEME_FALSE);
if(C_truep(t7)){
C_trace("ChickenBridge.scm: 379  string->symbol");
t8=*((C_word*)lf[385]+1);
((C_proc3)C_retrieve_proc(t8))(3,t8,((C_word*)t0)[3],t1);}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20546,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=t1,a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  SalOpType?");
f_21461(t8,((C_word*)t0)[4]);}}}

/* k20544 in k20520 in k20517 in k20446 in emit in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_20546(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20546,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20552,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  SalType=?");
f_21575(t2,((C_word*)t0)[3],C_fix(7941));}
else{
t2=((C_word*)t0)[3];
t3=(C_word)C_i_lessp(C_fix(4096),t2);
t4=(C_truep(t3)?(C_word)C_i_lessp(t2,C_fix(4864)):C_SCHEME_FALSE);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20597,a[2]=((C_word*)t0)[5],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  SalType=?");
f_21575(t5,((C_word*)t0)[3],C_fix(4352));}
else{
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20603,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  SalType=?");
f_21575(t5,((C_word*)t0)[3],C_fix(2304));}}}

/* k20601 in k20544 in k20520 in k20517 in k20446 in emit in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_20603(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20603,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[5];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20609,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  SalType=?");
f_21575(t2,((C_word*)t0)[2],C_fix(6144));}}

/* k20607 in k20601 in k20544 in k20520 in k20517 in k20446 in emit in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_20609(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20609,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 379  string->keyword");
t2=C_retrieve(lf[24]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[5],((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20618,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  SalType=?");
f_21575(t2,((C_word*)t0)[2],C_fix(3840));}}

/* k20616 in k20607 in k20601 in k20544 in k20520 in k20517 in k20446 in emit in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_20618(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20618,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 379  string->keyword");
t2=C_retrieve(lf[24]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[5],((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20627,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  SalType=?");
f_21575(t2,((C_word*)t0)[2],C_fix(6400));}}

/* k20625 in k20616 in k20607 in k20601 in k20544 in k20520 in k20517 in k20446 in emit in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_20627(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20627,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 379  string->symbol");
t2=*((C_word*)lf[385]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[5],((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20636,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  SalType=?");
f_21575(t2,((C_word*)t0)[2],C_fix(25344));}}

/* k20634 in k20625 in k20616 in k20607 in k20601 in k20544 in k20520 in k20517 in k20446 in emit in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_20636(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20636,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 379  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[5],lf[390],((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20645,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  SalType=?");
f_21575(t2,((C_word*)t0)[2],C_fix(25088));}}

/* k20643 in k20634 in k20625 in k20616 in k20607 in k20601 in k20544 in k20520 in k20517 in k20446 in emit in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_20645(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 379  string->symbol");
t2=*((C_word*)lf[385]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[4],((C_word*)t0)[3]);}
else{
C_trace("ChickenBridge.scm: 379  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[4],lf[391],((C_word*)t0)[2]);}}

/* k20595 in k20544 in k20520 in k20517 in k20446 in emit in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_20597(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_truep(t1)?C_SCHEME_TRUE:C_SCHEME_FALSE));}

/* k20550 in k20544 in k20520 in k20517 in k20446 in emit in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_20552(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20552,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[129]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20558,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  SalType=?");
f_21575(t2,((C_word*)t0)[2],C_fix(8199));}}

/* k20556 in k20550 in k20544 in k20520 in k20517 in k20446 in emit in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_20558(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20558,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[107]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20564,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  SalType=?");
f_21575(t2,((C_word*)t0)[2],C_fix(10244));}}

/* k20562 in k20556 in k20550 in k20544 in k20520 in k20517 in k20446 in emit in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_20564(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20564,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[386]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20570,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  SalType=?");
f_21575(t2,((C_word*)t0)[2],C_fix(8450));}}

/* k20568 in k20562 in k20556 in k20550 in k20544 in k20520 in k20517 in k20446 in emit in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_20570(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20570,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[387]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20576,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  SalType=?");
f_21575(t2,((C_word*)t0)[2],C_fix(8705));}}

/* k20574 in k20568 in k20562 in k20556 in k20550 in k20544 in k20520 in k20517 in k20446 in emit in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_20576(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20576,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[388]);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20582,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  SalType=?");
f_21575(t2,((C_word*)t0)[2],C_fix(8963));}}

/* k20580 in k20574 in k20568 in k20562 in k20556 in k20550 in k20544 in k20520 in k20517 in k20446 in emit in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_20582(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[389]);}
else{
C_trace("ChickenBridge.scm: 379  string->symbol");
t2=*((C_word*)lf[385]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}}

/* set-emit-info! in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_20423(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20423,NULL,4,t1,t2,t3,t4);}
t5=(C_word)C_i_assoc(t2,t4);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20430,a[2]=t3,a[3]=t5,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
if(C_truep(t5)){
t7=t6;
f_20430(2,t7,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 379  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[383],t2);}}

/* k20428 in set-emit-info! in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_20430(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_set_cdr(((C_word*)t0)[3],((C_word*)t0)[2]));}

/* add-emit-info in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_20413(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20413,NULL,4,t1,t2,t3,t4);}
t5=(C_word)C_a_i_cons(&a,2,t2,t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_a_i_cons(&a,2,t5,t4));}

/* get-emit-info in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_20401(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20401,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_assoc(t2,t3);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_truep(t4)?(C_word)C_i_cdr(t4):C_SCHEME_FALSE));}

/* token-unit-type=? in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_20369(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20369,NULL,3,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20376,a[2]=t2,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  token-unit?");
f_20353(t4,t2);}

/* k20374 in token-unit-type=? in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_20376(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20376,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20383,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  parse-unit-type");
f_20305(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* k20381 in k20374 in token-unit-type=? in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_20383(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  SalType=?");
f_21575(((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* token-unit? in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_20353(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20353,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20360,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  parse-unit?");
f_20290(t3,t2);}

/* k20358 in token-unit? in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_20360(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20360,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20367,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  parse-unit-type");
f_20305(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* k20365 in k20358 in token-unit? in k20349 in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_20367(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  SalTokenType?");
f_21413(((C_word*)t0)[2],t1);}

/* parse-unit-position in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_20341(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20341,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[371]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(3)));}

/* parse-unit-parsed in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_20323(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20323,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[371]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* parse-unit-type in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_20305(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20305,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[371]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* parse-unit? in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_20290(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20290,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_structurep(t2,lf[371]));}

/* make-parse-unit in k20280 in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_20284(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20284,NULL,4,t1,t2,t3,t4);}
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_a_i_record(&a,4,lf[371],t2,t3,t4));}

/* parse-error-position in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_20272(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20272,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[367]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* parse-error-string in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_20254(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20254,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[367]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* make-parse-error in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_20233(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20233,NULL,3,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_record(&a,3,lf[367],t2,t3));}

/* pattern-zero-or-more? in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_20201(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20201,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20208,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  pattern-clause?");
f_20115(t3,t2);}

/* k20206 in pattern-zero-or-more? in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_20208(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_eqp(t2,lf[101]));}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* pattern-sub in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_20143(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20143,NULL,3,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20151,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  pattern-subs");
f_20127(t4,t2);}

/* k20149 in pattern-sub in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_20151(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_list_ref(t1,((C_word*)t0)[2]));}

/* pattern-nsubs in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_20133(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20133,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20141,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  pattern-subs");
f_20127(t3,t2);}

/* k20139 in pattern-nsubs in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_20141(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_length(t1));}

/* pattern-subs in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_20127(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20127,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_cdr(t2));}

/* pattern-clause? in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_20115(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20115,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_pairp(t2));}

/* pattern-value in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_20112(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_20112,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}

/* get-rule in k20087 in k20084 in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_20091(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20091,NULL,3,t1,t2,t3);}
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 379  hash-table-ref");
t4=*((C_word*)lf[41]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t1,C_retrieve2(lf[355],"*rules*"),t2);}
else{
C_trace("ChickenBridge.scm: 379  hash-table-ref/default");
t4=C_retrieve(lf[360]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t1,C_retrieve2(lf[355],"*rules*"),t3);}}

/* rule-name in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_20004(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20004,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[357]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* make-rule in k19979 in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_19983(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19983,NULL,6,t1,t2,t3,t4,t5,t6);}
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_a_i_record(&a,6,lf[357],t2,t3,t4,t5,t6));}

/* null-tokens? in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_19973(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19973,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_nullp(t2));}

/* first-token in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_19961(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19961,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_car(t2));}

/* list->token in k19928 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_19932(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_19932,3,t0,t1,t2);}
t3=(C_word)C_i_car(t2);
t4=(C_word)C_eqp(t3,lf[352]);
if(C_truep(t4)){
t5=(C_word)C_i_cdr(t2);
C_apply(4,0,t1,C_retrieve2(lf[346],"make-token"),t5);}
else{
C_apply(4,0,t1,C_retrieve2(lf[346],"make-token"),t2);}}

/* token-position in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_19920(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19920,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[347]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(3)));}

/* token-string in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_19902(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19902,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[347]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* token-type in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_19884(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19884,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[347]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* make-token in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_19863(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_19863,5,t0,t1,t2,t3,t4);}
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_a_i_record(&a,4,lf[347],t2,t3,t4));}

/* markov-analyze in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_18841(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+61)){
C_save_and_reclaim((void*)tr3r,(void*)f_18841r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_18841r(t0,t1,t2,t3);}}

static void C_ccall f_18841r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word *a=C_alloc(61);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_length(t2);
t9=C_SCHEME_END_OF_LIST;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_END_OF_LIST;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_fix(8);
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_fix(1);
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_fix(1);
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=C_SCHEME_FALSE;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_SCHEME_FALSE;
t22=(*a=C_VECTOR_TYPE|1,a[1]=t21,tmp=(C_word)a,a+=2,tmp);
t23=t3;
t24=(*a=C_VECTOR_TYPE|1,a[1]=t23,tmp=(C_word)a,a+=2,tmp);
t25=C_SCHEME_FALSE;
t26=(*a=C_VECTOR_TYPE|1,a[1]=t25,tmp=(C_word)a,a+=2,tmp);
t27=(*a=C_CLOSURE_TYPE|16,a[1]=(C_word)f_18851,a[2]=t22,a[3]=t26,a[4]=t20,a[5]=t3,a[6]=t24,a[7]=t2,a[8]=t8,a[9]=t14,a[10]=t10,a[11]=t1,a[12]=t12,a[13]=t18,a[14]=t7,a[15]=t16,a[16]=t5,tmp=(C_word)a,a+=17,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t24)[1]))){
t28=t27;
f_18851(t28,C_SCHEME_UNDEFINED);}
else{
t28=(C_word)C_i_car(((C_word*)t24)[1]);
t29=(C_word)C_eqp(t28,lf[214]);
if(C_truep(t29)){
t30=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19776,a[2]=t3,a[3]=t27,a[4]=t24,a[5]=t26,a[6]=t20,a[7]=t16,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t20)[1])){
C_trace("error");
t31=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t31))(4,t31,t30,lf[19],lf[214]);}
else{
t31=t30;
f_19776(2,t31,C_SCHEME_UNDEFINED);}}
else{
t30=(C_word)C_eqp(t28,lf[345]);
if(C_truep(t30)){
t31=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19811,a[2]=t3,a[3]=t27,a[4]=t24,a[5]=t26,a[6]=t22,a[7]=t18,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t22)[1])){
C_trace("error");
t32=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t32))(4,t32,t31,lf[19],lf[345]);}
else{
t32=t31;
f_19811(2,t32,C_SCHEME_UNDEFINED);}}
else{
t31=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19840,a[2]=t27,a[3]=t20,a[4]=t16,a[5]=t24,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t26)[1])){
C_trace("error");
t32=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t32))(4,t32,t31,lf[10],t3);}
else{
t32=t31;
f_19840(2,t32,C_SCHEME_UNDEFINED);}}}}}

/* k19838 in markov-analyze in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_19840(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19840,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19847,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19855,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k19853 in k19838 in markov-analyze in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_19855(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_19847(2,t2,C_SCHEME_UNDEFINED);}}

/* k19845 in k19838 in markov-analyze in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_19847(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_18851(t5,t4);}

/* k19809 in markov-analyze in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_19811(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19811,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19815,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_19815(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k19813 in k19809 in markov-analyze in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_19815(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18851(t7,t6);}

/* k19774 in markov-analyze in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_19776(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19776,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19780,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_19780(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k19778 in k19774 in markov-analyze in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_19780(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18851(t7,t6);}

/* k18849 in markov-analyze in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_18851(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[36],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18851,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_18854,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[12],a[10]=((C_word*)t0)[13],a[11]=((C_word*)t0)[14],a[12]=((C_word*)t0)[15],a[13]=((C_word*)t0)[16],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_18854(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[214]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19676,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[15],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[214]);}
else{
t6=t5;
f_19676(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[345]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19711,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[13],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[345]);}
else{
t7=t6;
f_19711(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19740,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[13],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_19740(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k19738 in k18849 in markov-analyze in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_19740(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19740,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19747,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19755,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k19753 in k19738 in k18849 in markov-analyze in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_19755(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_19747(2,t2,C_SCHEME_UNDEFINED);}}

/* k19745 in k19738 in k18849 in markov-analyze in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_19747(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_18854(t5,t4);}

/* k19709 in k18849 in markov-analyze in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_19711(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19711,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19715,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_19715(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k19713 in k19709 in k18849 in markov-analyze in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_19715(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18854(t7,t6);}

/* k19674 in k18849 in markov-analyze in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_19676(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19676,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19680,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_19680(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k19678 in k19674 in k18849 in markov-analyze in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_19680(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18854(t7,t6);}

/* k18852 in k18849 in markov-analyze in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_18854(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18854,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_18857,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[12],a[11]=((C_word*)t0)[13],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_18857(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k18855 in k18852 in k18849 in markov-analyze in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_18857(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18857,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[11])+1,((C_word*)((C_word*)t0)[10])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[9])+1,((C_word*)((C_word*)t0)[8])[1]);
t4=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_18862,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[11],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[7],tmp=(C_word)a,a+=10,tmp);
t5=((C_word*)((C_word*)t0)[9])[1];
if(C_truep((C_truep((C_word)C_i_equalp(t5,C_fix(1)))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,C_fix(2)))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,C_fix(3)))?C_SCHEME_TRUE:C_SCHEME_FALSE))))){
t6=t4;
f_18862(2,t6,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 378  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,lf[344],((C_word*)((C_word*)t0)[9])[1]);}}

/* k18860 in k18855 in k18852 in k18849 in markov-analyze in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_18862(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[29],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18862,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18864,a[2]=((C_word*)t0)[9],a[3]=((C_word)li262),tmp=(C_word)a,a+=4,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18946,a[2]=t4,a[3]=((C_word)li265),tmp=(C_word)a,a+=4,tmp));
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19056,a[2]=t4,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_19569,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=t8,a[7]=((C_word*)t0)[4],a[8]=((C_word)li282),tmp=(C_word)a,a+=9,tmp));
t10=((C_word*)t8)[1];
f_19569(t10,t6,C_fix(0));}

/* do2574 in k18860 in k18855 in k18852 in k18849 in markov-analyze in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_19569(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19569,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nequalp(t2,((C_word*)t0)[7]))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19579,a[2]=t1,a[3]=((C_word*)t0)[6],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_19592,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=t5,a[5]=((C_word*)t0)[2],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[4],a[8]=((C_word*)t0)[5],a[9]=((C_word)li281),tmp=(C_word)a,a+=10,tmp));
t7=((C_word*)t5)[1];
f_19592(t7,t3,C_SCHEME_END_OF_LIST,C_fix(0),C_SCHEME_FALSE);}}

/* do2577 in do2574 in k18860 in k18855 in k18852 in k18849 in markov-analyze in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_19592(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19592,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_greaterp(t3,((C_word*)((C_word*)t0)[8])[1]))){
t7=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19602,a[2]=t1,a[3]=((C_word*)t0)[7],a[4]=t6,tmp=(C_word)a,a+=5,tmp);
t8=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19620,a[2]=t6,a[3]=t7,a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  reverse");
t9=*((C_word*)lf[187]+1);
((C_proc3)C_retrieve_proc(t9))(3,t9,t8,((C_word*)t5)[1]);}
else{
t7=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_19645,a[2]=((C_word*)t0)[8],a[3]=t5,a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=t3,a[7]=t6,a[8]=((C_word*)t0)[5],tmp=(C_word)a,a+=9,tmp);
t8=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[3],t3);
C_trace("ChickenBridge.scm: 378  modulo");
t9=*((C_word*)lf[129]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t7,t8,((C_word*)t0)[2]);}}

/* k19643 in do2577 in do2574 in k18860 in k18855 in k18852 in k18849 in markov-analyze in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_19645(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19645,2,t0,t1);}
t2=(C_word)C_i_list_ref(((C_word*)t0)[8],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19627,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_lessp(((C_word*)t0)[6],((C_word*)((C_word*)t0)[2])[1]))){
t5=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=t4;
f_19627(t7,t6);}
else{
t5=t4;
f_19627(t5,C_SCHEME_UNDEFINED);}}

/* k19625 in k19643 in do2577 in do2574 in k18860 in k18855 in k18852 in k18849 in markov-analyze in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_19627(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19627,NULL,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
t3=((C_word*)((C_word*)t0)[5])[1];
f_19592(t3,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k19618 in do2577 in do2574 in k18860 in k18855 in k18852 in k18849 in markov-analyze in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_19620(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  add-outcome");
t2=((C_word*)t0)[4];
f_18864(t2,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* k19600 in do2577 in do2574 in k18860 in k18855 in k18852 in k18849 in markov-analyze in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_19602(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19602,2,t0,t1);}
if(C_truep((C_word)C_i_member(((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]))){
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t3);}}

/* k19577 in do2574 in k18860 in k18855 in k18852 in k18849 in markov-analyze in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_19579(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19579,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t3=((C_word*)((C_word*)t0)[3])[1];
f_19569(t3,((C_word*)t0)[2],t2);}

/* k19054 in k18860 in k18855 in k18852 in k18849 in markov-analyze in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_19056(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19056,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19059,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_numberp(t3))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19525,a[2]=t2,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  sort");
t5=C_retrieve(lf[189]);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,((C_word*)((C_word*)t0)[4])[1],*((C_word*)lf[340]+1));}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19531,a[2]=t2,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]))){
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t6=t4;
f_19531(t6,(C_word)C_i_symbolp(t5));}
else{
t5=t4;
f_19531(t5,C_SCHEME_FALSE);}}}

/* k19529 in k19054 in k18860 in k18855 in k18852 in k18849 in markov-analyze in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_19531(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19531,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19535,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19537,a[2]=((C_word)li280),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  sort");
t4=C_retrieve(lf[189]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,((C_word*)((C_word*)t0)[3])[1],t3);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19553,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  reverse");
t3=*((C_word*)lf[187]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[3])[1]);}}

/* k19551 in k19529 in k19054 in k18860 in k18855 in k18852 in k18849 in markov-analyze in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_19553(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_19059(t3,t2);}

/* a19536 in k19529 in k19054 in k18860 in k18855 in k18852 in k18849 in markov-analyze in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_19537(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_19537,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19545,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  format");
t5=C_retrieve(lf[325]);
((C_proc5)C_retrieve_proc(t5))(5,t5,t4,C_SCHEME_FALSE,lf[343],t2);}

/* k19543 in a19536 in k19529 in k19054 in k18860 in k18855 in k18852 in k18849 in markov-analyze in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_19545(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19545,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19549,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  format");
t3=C_retrieve(lf[325]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_SCHEME_FALSE,lf[342],((C_word*)t0)[2]);}

/* k19547 in k19543 in a19536 in k19529 in k19054 in k18860 in k18855 in k18852 in k18849 in markov-analyze in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_19549(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  string-ci<?");
t2=*((C_word*)lf[341]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k19533 in k19529 in k19054 in k18860 in k18855 in k18852 in k18849 in markov-analyze in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_19535(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_19059(t3,t2);}

/* k19523 in k19054 in k18860 in k18855 in k18852 in k18849 in markov-analyze in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_19525(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_19059(t3,t2);}

/* k19057 in k19054 in k18860 in k18855 in k18852 in k18849 in markov-analyze in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_19059(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19059,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19062,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19402,a[2]=t4,a[3]=((C_word*)t0)[3],a[4]=((C_word)li279),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_19402(t6,t2,((C_word*)((C_word*)t0)[7])[1],C_fix(0));}

/* do2590 in k19057 in k19054 in k18860 in k18855 in k18852 in k18849 in markov-analyze in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_19402(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19402,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19413,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  max");
t6=*((C_word*)lf[269]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,((C_word*)t4)[1],((C_word*)((C_word*)t0)[3])[1]);}
else{
t5=(C_word)C_i_car(t2);
t6=(C_word)C_i_cadr(t5);
t7=(C_word)C_i_cddr(t5);
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19426,a[2]=t7,a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t2,a[6]=t4,tmp=(C_word)a,a+=7,tmp);
t9=(C_word)C_i_string_length(t6);
C_trace("ChickenBridge.scm: 378  max");
t10=*((C_word*)lf[269]+1);
((C_proc4)C_retrieve_proc(t10))(4,t10,t8,((C_word*)t4)[1],t9);}}

/* k19424 in do2590 in k19057 in k19054 in k18860 in k18855 in k18852 in k18849 in markov-analyze in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_19426(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19426,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19429,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19488,a[2]=t5,a[3]=((C_word)li278),tmp=(C_word)a,a+=4,tmp));
t7=((C_word*)t5)[1];
f_19488(t7,t3,((C_word*)t0)[2],C_fix(0));}

/* do2598 in k19424 in do2590 in k19057 in k19054 in k18860 in k18855 in k18852 in k18849 in markov-analyze in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_19488(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
loop:
a=C_alloc(4);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_19488,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nullp(t2))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t3);}
else{
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t4);
t6=(C_word)C_a_i_plus(&a,2,t3,t5);
t7=t3=t6;
t8=(C_word)C_i_cdr(t2);
t10=t1;
t11=t8;
t12=t3;
t1=t10;
t2=t11;
t3=t12;
goto loop;}}

/* k19427 in k19424 in do2590 in k19057 in k19054 in k18860 in k18855 in k18852 in k18849 in markov-analyze in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_19429(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19429,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_a_i_times(&a,2,((C_word*)t3)[1],lf[339]);
t5=C_set_block_item(t3,0,t4);
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19436,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19445,a[2]=t3,a[3]=t8,a[4]=((C_word)li277),tmp=(C_word)a,a+=5,tmp));
t10=((C_word*)t8)[1];
f_19445(t10,t6,((C_word*)t0)[2]);}

/* do2604 in k19427 in k19424 in do2590 in k19057 in k19054 in k18860 in k18855 in k18852 in k18849 in markov-analyze in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_19445(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19445,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(C_word)C_i_car(t2);
t4=(C_word)C_i_cdr(t3);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19470,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=t4,tmp=(C_word)a,a+=6,tmp);
t6=(C_word)C_i_car(t2);
t7=(C_word)C_i_cadr(t6);
t8=(C_word)C_a_i_divide(&a,2,t7,((C_word*)((C_word*)t0)[2])[1]);
C_trace("ChickenBridge.scm: 378  decimals");
t9=C_retrieve(lf[105]);
((C_proc4)C_retrieve_proc(t9))(4,t9,t5,t8,C_fix(3));}}

/* k19468 in do2604 in k19427 in k19424 in do2590 in k19057 in k19054 in k18860 in k18855 in k18852 in k18849 in markov-analyze in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_19470(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=(C_word)C_i_set_car(((C_word*)t0)[5],t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_19445(t4,((C_word*)t0)[2],t3);}

/* k19434 in k19427 in k19424 in do2590 in k19057 in k19054 in k18860 in k18855 in k18852 in k18849 in markov-analyze in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_19436(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
t3=((C_word*)((C_word*)t0)[4])[1];
f_19402(t3,((C_word*)t0)[3],t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k19411 in do2590 in k19057 in k19054 in k18860 in k18855 in k18852 in k18849 in markov-analyze in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_19413(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}

/* k19060 in k19057 in k19054 in k18860 in k18855 in k18852 in k18849 in markov-analyze in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_19062(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19062,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19066,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19388,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[2],a[4]=((C_word)li276),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  sort");
t4=C_retrieve(lf[189]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,((C_word*)((C_word*)t0)[7])[1],t3);}

/* a19387 in k19060 in k19057 in k19054 in k18860 in k18855 in k18852 in k18849 in markov-analyze in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_19388(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_19388,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_car(t3);
C_trace("ChickenBridge.scm: 378  before?");
t6=((C_word*)((C_word*)t0)[3])[1];
f_18946(t6,t1,t4,t5,((C_word*)((C_word*)t0)[2])[1]);}

/* k19064 in k19060 in k19057 in k19054 in k18860 in k18855 in k18852 in k18849 in markov-analyze in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_19066(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19066,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19069,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_eqp(((C_word*)((C_word*)t0)[5])[1],C_fix(1));
if(C_truep(t4)){
t5=lf[328];
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19110,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t5,a[6]=t3,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  make-string");
t7=*((C_word*)lf[338]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,C_fix(5),C_make_character(45));}
else{
t5=t3;
f_19069(2,t5,C_SCHEME_UNDEFINED);}}

/* k19108 in k19064 in k19060 in k19057 in k19054 in k18860 in k18855 in k18852 in k18849 in markov-analyze in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_19110(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19110,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19113,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 378  newline");
t3=*((C_word*)lf[329]+1);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k19111 in k19108 in k19064 in k19060 in k19057 in k19054 in k18860 in k18855 in k18852 in k18849 in markov-analyze in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_19113(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19113,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19116,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19369,a[2]=t4,a[3]=((C_word*)t0)[3],a[4]=((C_word)li275),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_19369(t6,t2,C_fix(0));}

/* do2617 in k19111 in k19108 in k19064 in k19060 in k19057 in k19054 in k18860 in k18855 in k18852 in k18849 in markov-analyze in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_19369(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19369,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nequalp(t2,((C_word*)((C_word*)t0)[3])[1]))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19379,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("write-char/port");
t4=C_retrieve(lf[331]);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,t3,C_make_character(42),*((C_word*)lf[332]+1));}}

/* k19377 in do2617 in k19111 in k19108 in k19064 in k19060 in k19057 in k19054 in k18860 in k18855 in k18852 in k18849 in markov-analyze in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_19379(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19379,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t3=((C_word*)((C_word*)t0)[3])[1];
f_19369(t3,((C_word*)t0)[2],t2);}

/* k19114 in k19111 in k19108 in k19064 in k19060 in k19057 in k19054 in k18860 in k18855 in k18852 in k18849 in markov-analyze in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_19116(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19116,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19119,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19307,a[2]=((C_word*)t0)[6],a[3]=t4,a[4]=((C_word)li274),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_19307(t6,t2,((C_word*)((C_word*)t0)[4])[1]);}

/* do2622 in k19114 in k19111 in k19108 in k19064 in k19060 in k19057 in k19054 in k18860 in k18855 in k18852 in k18849 in markov-analyze in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_19307(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19307,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19317,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  display");
t4=*((C_word*)lf[330]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}}

/* k19315 in do2622 in k19114 in k19111 in k19108 in k19064 in k19060 in k19057 in k19054 in k18860 in k18855 in k18852 in k18849 in markov-analyze in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_19317(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19317,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19320,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 378  format");
t4=C_retrieve(lf[325]);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,C_SCHEME_FALSE,lf[337],t3);}

/* k19318 in k19315 in do2622 in k19114 in k19111 in k19108 in k19064 in k19060 in k19057 in k19054 in k18860 in k18855 in k18852 in k18849 in markov-analyze in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_19320(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19320,2,t0,t1);}
t2=(C_word)C_i_string_length(t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19326,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19340,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_a_i_minus(&a,2,C_fix(5),t2);
C_trace("ChickenBridge.scm: 378  max");
t6=*((C_word*)lf[269]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,t5,C_fix(0));}

/* k19338 in k19318 in k19315 in do2622 in k19114 in k19111 in k19108 in k19064 in k19060 in k19057 in k19054 in k18860 in k18855 in k18852 in k18849 in markov-analyze in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_19340(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19340,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19342,a[2]=t3,a[3]=((C_word)li273),tmp=(C_word)a,a+=4,tmp));
t5=((C_word*)t3)[1];
f_19342(t5,((C_word*)t0)[2],C_fix(0),t1);}

/* do2627 in k19338 in k19318 in k19315 in do2622 in k19114 in k19111 in k19108 in k19064 in k19060 in k19057 in k19054 in k18860 in k18855 in k18852 in k18849 in markov-analyze in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_19342(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19342,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nequalp(t2,t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_FALSE);}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19352,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
C_trace("write-char/port");
t5=C_retrieve(lf[331]);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t4,C_make_character(32),*((C_word*)lf[332]+1));}}

/* k19350 in do2627 in k19338 in k19318 in k19315 in do2622 in k19114 in k19111 in k19108 in k19064 in k19060 in k19057 in k19054 in k18860 in k18855 in k18852 in k18849 in markov-analyze in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_19352(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19352,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],C_fix(1));
t3=((C_word*)((C_word*)t0)[4])[1];
f_19342(t3,((C_word*)t0)[3],t2,((C_word*)t0)[2]);}

/* k19324 in k19318 in k19315 in do2622 in k19114 in k19111 in k19108 in k19064 in k19060 in k19057 in k19054 in k18860 in k18855 in k18852 in k18849 in markov-analyze in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_19326(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19326,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19329,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  display");
t3=*((C_word*)lf[330]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k19327 in k19324 in k19318 in k19315 in do2622 in k19114 in k19111 in k19108 in k19064 in k19060 in k19057 in k19054 in k18860 in k18855 in k18852 in k18849 in markov-analyze in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_19329(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_19307(t3,((C_word*)t0)[2],t2);}

/* k19117 in k19114 in k19111 in k19108 in k19064 in k19060 in k19057 in k19054 in k18860 in k18855 in k18852 in k18849 in markov-analyze in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_19119(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19119,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19122,a[2]=((C_word*)t0)[7],tmp=(C_word)a,a+=3,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19127,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=t4,a[7]=((C_word)li272),tmp=(C_word)a,a+=8,tmp));
t6=((C_word*)t4)[1];
f_19127(t6,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* do2637 in k19117 in k19114 in k19111 in k19108 in k19064 in k19060 in k19057 in k19054 in k18860 in k18855 in k18852 in k18849 in markov-analyze in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_19127(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19127,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(C_word)C_i_car(t2);
t4=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_19140,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t3,a[7]=t1,a[8]=((C_word*)t0)[6],a[9]=t2,tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 378  newline");
t5=*((C_word*)lf[329]+1);
((C_proc2)C_retrieve_proc(t5))(2,t5,t4);}}

/* k19138 in do2637 in k19117 in k19114 in k19111 in k19108 in k19064 in k19060 in k19057 in k19054 in k18860 in k18855 in k18852 in k18849 in markov-analyze in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_19140(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19140,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_19143,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[6]);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t2;
f_19143(2,t4,lf[334]);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19014,a[2]=t2,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_car(t3);
C_trace("ChickenBridge.scm: 378  format");
t6=C_retrieve(lf[325]);
((C_proc5)C_retrieve_proc(t6))(5,t6,t4,C_SCHEME_FALSE,lf[336],t5);}}

/* k19012 in k19138 in do2637 in k19117 in k19114 in k19111 in k19108 in k19064 in k19060 in k19057 in k19054 in k18860 in k18855 in k18852 in k18849 in markov-analyze in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_19014(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19014,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_cdr(((C_word*)t0)[3]);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19023,a[2]=t6,a[3]=t3,a[4]=((C_word)li271),tmp=(C_word)a,a+=5,tmp));
t8=((C_word*)t6)[1];
f_19023(t8,((C_word*)t0)[2],t4);}

/* do2569 in k19012 in k19138 in do2637 in k19117 in k19114 in k19111 in k19108 in k19064 in k19060 in k19057 in k19054 in k18860 in k18855 in k18852 in k18849 in markov-analyze in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_19023(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19023,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)((C_word*)t0)[3])[1]);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19034,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19045,a[2]=((C_word*)t0)[3],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 378  format");
t6=C_retrieve(lf[325]);
((C_proc5)C_retrieve_proc(t6))(5,t6,t4,C_SCHEME_FALSE,lf[335],t5);}}

/* k19043 in do2569 in k19012 in k19138 in do2637 in k19117 in k19114 in k19111 in k19108 in k19064 in k19060 in k19057 in k19054 in k18860 in k18855 in k18852 in k18849 in markov-analyze in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_19045(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  string-append");
t2=*((C_word*)lf[164]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k19032 in do2569 in k19012 in k19138 in do2637 in k19117 in k19114 in k19111 in k19108 in k19064 in k19060 in k19057 in k19054 in k18860 in k18855 in k18852 in k18849 in markov-analyze in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_19034(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_19023(t4,((C_word*)t0)[2],t3);}

/* k19141 in k19138 in do2637 in k19117 in k19114 in k19111 in k19108 in k19064 in k19060 in k19057 in k19054 in k18860 in k18855 in k18852 in k18849 in markov-analyze in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_19143(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19143,2,t0,t1);}
t2=(C_word)C_i_string_length(t1);
t3=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_19149,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=t1,a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[7],a[10]=((C_word*)t0)[8],a[11]=((C_word*)t0)[9],tmp=(C_word)a,a+=12,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19278,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[2])[1],t2);
C_trace("ChickenBridge.scm: 378  max");
t6=*((C_word*)lf[269]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,t5,C_fix(0));}

/* k19276 in k19141 in k19138 in do2637 in k19117 in k19114 in k19111 in k19108 in k19064 in k19060 in k19057 in k19054 in k18860 in k18855 in k18852 in k18849 in markov-analyze in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_19278(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19278,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19280,a[2]=t3,a[3]=((C_word)li270),tmp=(C_word)a,a+=4,tmp));
t5=((C_word*)t3)[1];
f_19280(t5,((C_word*)t0)[2],C_fix(0),t1);}

/* do2643 in k19276 in k19141 in k19138 in do2637 in k19117 in k19114 in k19111 in k19108 in k19064 in k19060 in k19057 in k19054 in k18860 in k18855 in k18852 in k18849 in markov-analyze in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_19280(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19280,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nequalp(t2,t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_FALSE);}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19290,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
C_trace("write-char/port");
t5=C_retrieve(lf[331]);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t4,C_make_character(32),*((C_word*)lf[332]+1));}}

/* k19288 in do2643 in k19276 in k19141 in k19138 in do2637 in k19117 in k19114 in k19111 in k19108 in k19064 in k19060 in k19057 in k19054 in k18860 in k18855 in k18852 in k18849 in markov-analyze in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_19290(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19290,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],C_fix(1));
t3=((C_word*)((C_word*)t0)[4])[1];
f_19280(t3,((C_word*)t0)[3],t2,((C_word*)t0)[2]);}

/* k19147 in k19141 in k19138 in do2637 in k19117 in k19114 in k19111 in k19108 in k19064 in k19060 in k19057 in k19054 in k18860 in k18855 in k18852 in k18849 in markov-analyze in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_19149(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19149,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_19152,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],tmp=(C_word)a,a+=9,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19251,a[2]=t2,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  min");
t4=*((C_word*)lf[333]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2]);}

/* k19249 in k19147 in k19141 in k19138 in do2637 in k19117 in k19114 in k19111 in k19108 in k19064 in k19060 in k19057 in k19054 in k18860 in k18855 in k18852 in k18849 in markov-analyze in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_19251(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19251,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19253,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word)li269),tmp=(C_word)a,a+=5,tmp));
t5=((C_word*)t3)[1];
f_19253(t5,((C_word*)t0)[2],C_fix(0),t1);}

/* do2649 in k19249 in k19147 in k19141 in k19138 in do2637 in k19117 in k19114 in k19111 in k19108 in k19064 in k19060 in k19057 in k19054 in k18860 in k18855 in k18852 in k18849 in markov-analyze in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_19253(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19253,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nequalp(t2,t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_FALSE);}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19263,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t5=(C_word)C_i_string_ref(((C_word*)t0)[2],t2);
C_trace("write-char/port");
t6=C_retrieve(lf[331]);
((C_proc4)(void*)(*((C_word*)t6+1)))(4,t6,t4,t5,*((C_word*)lf[332]+1));}}

/* k19261 in do2649 in k19249 in k19147 in k19141 in k19138 in do2637 in k19117 in k19114 in k19111 in k19108 in k19064 in k19060 in k19057 in k19054 in k18860 in k18855 in k18852 in k18849 in markov-analyze in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_19263(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19263,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],C_fix(1));
t3=((C_word*)((C_word*)t0)[4])[1];
f_19253(t3,((C_word*)t0)[3],t2,((C_word*)t0)[2]);}

/* k19150 in k19147 in k19141 in k19138 in do2637 in k19117 in k19114 in k19111 in k19108 in k19064 in k19060 in k19057 in k19054 in k18860 in k18855 in k18852 in k18849 in markov-analyze in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_19152(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19152,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19155,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],tmp=(C_word)a,a+=5,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19164,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t4,a[5]=((C_word*)t0)[5],a[6]=((C_word)li268),tmp=(C_word)a,a+=7,tmp));
t6=((C_word*)t4)[1];
f_19164(t6,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* do2656 in k19150 in k19147 in k19141 in k19138 in do2637 in k19117 in k19114 in k19111 in k19108 in k19064 in k19060 in k19057 in k19054 in k18860 in k18855 in k18852 in k18849 in markov-analyze in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_19164(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19164,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(C_word)C_i_car(t2);
t4=(C_word)C_i_cddr(((C_word*)t0)[5]);
t5=(C_word)C_i_assoc(t3,t4);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19177,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
if(C_truep(t5)){
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19196,a[2]=((C_word*)t0)[3],a[3]=t6,tmp=(C_word)a,a+=4,tmp);
t8=(C_word)C_i_cadr(t5);
C_trace("ChickenBridge.scm: 378  number->string");
C_number_to_string(3,0,t7,t8);}
else{
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19190,a[2]=((C_word*)t0)[2],a[3]=t6,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  display");
t8=*((C_word*)lf[330]+1);
((C_proc3)C_retrieve_proc(t8))(3,t8,t7,((C_word*)t0)[3]);}}}

/* k19188 in do2656 in k19150 in k19147 in k19141 in k19138 in do2637 in k19117 in k19114 in k19111 in k19108 in k19064 in k19060 in k19057 in k19054 in k18860 in k18855 in k18852 in k18849 in markov-analyze in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_19190(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  display");
t2=*((C_word*)lf[330]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k19194 in do2656 in k19150 in k19147 in k19141 in k19138 in do2637 in k19117 in k19114 in k19111 in k19108 in k19064 in k19060 in k19057 in k19054 in k18860 in k18855 in k18852 in k18849 in markov-analyze in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_19196(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19196,2,t0,t1);}
t2=(C_word)C_i_string_length(t1);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19202,a[2]=t2,a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  display");
t4=*((C_word*)lf[330]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k19200 in k19194 in do2656 in k19150 in k19147 in k19141 in k19138 in do2637 in k19117 in k19114 in k19111 in k19108 in k19064 in k19060 in k19057 in k19054 in k18860 in k18855 in k18852 in k18849 in markov-analyze in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_19202(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19202,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19205,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19212,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_minus(&a,2,C_fix(5),((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 378  max");
t5=*((C_word*)lf[269]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,t4,C_fix(0));}

/* k19210 in k19200 in k19194 in do2656 in k19150 in k19147 in k19141 in k19138 in do2637 in k19117 in k19114 in k19111 in k19108 in k19064 in k19060 in k19057 in k19054 in k18860 in k18855 in k18852 in k18849 in markov-analyze in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_19212(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19212,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19214,a[2]=t3,a[3]=((C_word)li267),tmp=(C_word)a,a+=4,tmp));
t5=((C_word*)t3)[1];
f_19214(t5,((C_word*)t0)[2],C_fix(0),t1);}

/* do2663 in k19210 in k19200 in k19194 in do2656 in k19150 in k19147 in k19141 in k19138 in do2637 in k19117 in k19114 in k19111 in k19108 in k19064 in k19060 in k19057 in k19054 in k18860 in k18855 in k18852 in k18849 in markov-analyze in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_19214(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19214,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nequalp(t2,t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_FALSE);}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19224,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
C_trace("write-char/port");
t5=C_retrieve(lf[331]);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t4,C_make_character(32),*((C_word*)lf[332]+1));}}

/* k19222 in do2663 in k19210 in k19200 in k19194 in do2656 in k19150 in k19147 in k19141 in k19138 in do2637 in k19117 in k19114 in k19111 in k19108 in k19064 in k19060 in k19057 in k19054 in k18860 in k18855 in k18852 in k18849 in markov-analyze in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_19224(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19224,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],C_fix(1));
t3=((C_word*)((C_word*)t0)[4])[1];
f_19214(t3,((C_word*)t0)[3],t2,((C_word*)t0)[2]);}

/* k19203 in k19200 in k19194 in do2656 in k19150 in k19147 in k19141 in k19138 in do2637 in k19117 in k19114 in k19111 in k19108 in k19064 in k19060 in k19057 in k19054 in k18860 in k18855 in k18852 in k18849 in markov-analyze in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_19205(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  display");
t2=*((C_word*)lf[330]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k19175 in do2656 in k19150 in k19147 in k19141 in k19138 in do2637 in k19117 in k19114 in k19111 in k19108 in k19064 in k19060 in k19057 in k19054 in k18860 in k18855 in k18852 in k18849 in markov-analyze in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_19177(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_19164(t3,((C_word*)t0)[2],t2);}

/* k19153 in k19150 in k19147 in k19141 in k19138 in do2637 in k19117 in k19114 in k19111 in k19108 in k19064 in k19060 in k19057 in k19054 in k18860 in k18855 in k18852 in k18849 in markov-analyze in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_19155(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_19127(t3,((C_word*)t0)[2],t2);}

/* k19120 in k19117 in k19114 in k19111 in k19108 in k19064 in k19060 in k19057 in k19054 in k18860 in k18855 in k18852 in k18849 in markov-analyze in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_19122(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  newline");
t2=*((C_word*)lf[329]+1);
((C_proc2)C_retrieve_proc(t2))(2,t2,((C_word*)t0)[2]);}

/* k19067 in k19064 in k19060 in k19057 in k19054 in k18860 in k18855 in k18852 in k18849 in markov-analyze in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_19069(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19069,2,t0,t1);}
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[4])[1],C_fix(1)))){
C_trace("ChickenBridge.scm: 378  values");
C_values(2,0,((C_word*)t0)[3]);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19081,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19092,a[2]=((C_word)li266),tmp=(C_word)a,a+=3,tmp);
C_trace("map");
t4=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,t2,t3,((C_word*)((C_word*)t0)[2])[1]);}}

/* a19091 in k19067 in k19064 in k19060 in k19057 in k19054 in k18860 in k18855 in k18852 in k18849 in markov-analyze in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_19092(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_19092,3,t0,t1,t2);}
t3=(C_word)C_i_car(t2);
t4=(C_word)C_i_cddr(t2);
C_trace("ChickenBridge.scm: 378  append");
t5=*((C_word*)lf[18]+1);
((C_proc5)C_retrieve_proc(t5))(5,t5,t1,t3,lf[327],t4);}

/* k19079 in k19067 in k19064 in k19060 in k19057 in k19054 in k18860 in k18855 in k18852 in k18849 in markov-analyze in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_19081(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[3])[1],C_fix(2)))){
C_trace("ChickenBridge.scm: 378  make-markov");
t2=C_retrieve(lf[305]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,t1);}}

/* before? in k18860 in k18855 in k18852 in k18849 in markov-analyze in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_18946(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18946,NULL,5,t0,t1,t2,t3,t4);}
if(C_truep((C_word)C_i_nullp(t2))){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_TRUE);}
else{
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18956,a[2]=t4,a[3]=((C_word*)t0)[2],a[4]=t3,a[5]=t2,a[6]=t1,tmp=(C_word)a,a+=7,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18994,a[2]=t2,a[3]=((C_word)li264),tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  list-index");
t7=C_retrieve(lf[65]);
((C_proc4)C_retrieve_proc(t7))(4,t7,t5,t6,t4);}}

/* a18993 in before? in k18860 in k18855 in k18852 in k18849 in markov-analyze in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_18994(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_18994,3,t0,t1,t2);}
t3=(C_word)C_i_car(((C_word*)t0)[2]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_equalp(t3,t2));}

/* k18954 in before? in k18860 in k18855 in k18852 in k18849 in markov-analyze in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_18956(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18956,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18959,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,tmp=(C_word)a,a+=8,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18984,a[2]=((C_word*)t0)[4],a[3]=((C_word)li263),tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  list-index");
t4=C_retrieve(lf[65]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,t3,((C_word*)t0)[2]);}

/* a18983 in k18954 in before? in k18860 in k18855 in k18852 in k18849 in markov-analyze in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_18984(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_18984,3,t0,t1,t2);}
t3=(C_word)C_i_car(((C_word*)t0)[2]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_equalp(t3,t2));}

/* k18957 in k18954 in before? in k18860 in k18855 in k18852 in k18849 in markov-analyze in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_18959(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
if(C_truep((C_word)C_i_lessp(((C_word*)t0)[7],t1))){
t2=((C_word*)t0)[6];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_TRUE);}
else{
if(C_truep((C_word)C_i_nequalp(((C_word*)t0)[7],t1))){
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 378  before?");
t4=((C_word*)((C_word*)t0)[3])[1];
f_18946(t4,((C_word*)t0)[6],t2,t3,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[6];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}}

/* add-outcome in k18860 in k18855 in k18852 in k18849 in markov-analyze in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_18864(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18864,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18868,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=t1,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18936,a[2]=t2,a[3]=((C_word)li261),tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  list-find");
t6=C_retrieve(lf[66]);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,t5,((C_word*)((C_word*)t0)[2])[1]);}

/* a18935 in add-outcome in k18860 in k18855 in k18852 in k18849 in markov-analyze in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_18936(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_18936,3,t0,t1,t2);}
t3=(C_word)C_i_car(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_equalp(((C_word*)t0)[2],t3));}

/* k18866 in add-outcome in k18860 in k18855 in k18852 in k18849 in markov-analyze in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_18868(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18868,2,t0,t1);}
t2=t1;
if(C_truep(t2)){
t3=(C_word)C_i_cddr(t1);
t4=(C_word)C_i_assoc(((C_word*)t0)[5],t3);
if(C_truep(t4)){
t5=(C_word)C_i_cdr(t4);
t6=(C_word)C_i_cadr(t4);
t7=(C_word)C_a_i_plus(&a,2,C_fix(1),t6);
t8=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)C_i_set_car(t5,t7));}
else{
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18918,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_cdr(t1);
C_trace("ChickenBridge.scm: 378  tail");
t7=C_retrieve(lf[58]);
((C_proc3)C_retrieve_proc(t7))(3,t7,t5,t6);}}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18886,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  format");
t4=C_retrieve(lf[325]);
((C_proc5)C_retrieve_proc(t4))(5,t4,t3,C_SCHEME_FALSE,lf[326],((C_word*)t0)[3]);}}

/* k18884 in k18866 in add-outcome in k18860 in k18855 in k18852 in k18849 in markov-analyze in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_18886(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18886,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,((C_word*)t0)[5],C_fix(1));
t3=(C_word)C_a_i_list(&a,3,((C_word*)t0)[4],t1,t2);
t4=(C_word)C_a_i_cons(&a,2,t3,((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t5);}

/* k18916 in k18866 in add-outcome in k18860 in k18855 in k18852 in k18849 in markov-analyze in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_18918(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18918,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,((C_word*)t0)[3],C_fix(1));
t3=(C_word)C_a_i_list(&a,1,t2);
t4=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_set_cdr(t1,t3));}

/* next-in-graph in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_18747(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_18747,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18751,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  pattern-data");
f_12342(t3,t2);}

/* k18749 in next-in-graph in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_18751(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18751,2,t0,t1);}
t2=(C_word)C_i_cdr(t1);
t3=(C_word)C_i_car(t1);
if(C_truep(t3)){
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18780,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_i_check_structure(t3,lf[316]);
t6=(C_word)C_i_block_ref(t3,C_fix(2));
C_trace("ChickenBridge.scm: 378  next-1");
f_12964(t4,t6);}
else{
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_set_car(t1,t4);
t6=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 378  graph-node-datum");
f_18166(((C_word*)t0)[2],t6);}}

/* k18778 in k18749 in next-in-graph in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_18780(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18780,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18785,a[2]=t5,a[3]=t1,a[4]=((C_word*)t0)[4],a[5]=t3,a[6]=((C_word)li259),tmp=(C_word)a,a+=7,tmp));
t7=((C_word*)t5)[1];
f_18785(t7,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* do2492 in k18778 in k18749 in next-in-graph in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_18785(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18785,NULL,3,t0,t1,t2);}
t3=((C_word*)((C_word*)t0)[5])[1];
t4=(C_truep(t3)?t3:(C_word)C_i_nullp(t2));
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18795,a[2]=((C_word*)t0)[5],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t6=((C_word*)((C_word*)t0)[5])[1];
if(C_truep(t6)){
t7=t5;
f_18795(2,t7,(C_word)C_i_set_car(((C_word*)t0)[4],((C_word*)((C_word*)t0)[5])[1]));}
else{
C_trace("ChickenBridge.scm: 378  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t5,lf[323],((C_word*)t0)[3]);}}
else{
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18810,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t6=(C_word)C_i_car(t2);
t7=(C_word)C_i_check_structure(t6,lf[316]);
t8=(C_word)C_i_block_ref(t6,C_fix(3));
t9=(C_word)C_eqp(((C_word*)t0)[3],t8);
if(C_truep(t9)){
t10=(C_word)C_i_car(t2);
t11=C_mutate(((C_word *)((C_word*)t0)[5])+1,t10);
t12=t5;
f_18810(t12,t11);}
else{
t10=t5;
f_18810(t10,C_SCHEME_UNDEFINED);}}}

/* k18808 in do2492 in k18778 in k18749 in next-in-graph in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_18810(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_18785(t3,((C_word*)t0)[2],t2);}

/* k18793 in do2492 in k18778 in k18749 in next-in-graph in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_18795(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  graph-node-datum");
f_18166(((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* make-graph in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_18229(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+17)){
C_save_and_reclaim((void*)tr3r,(void*)f_18229r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_18229r(t0,t1,t2,t3);}}

static void C_ccall f_18229r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a=C_alloc(17);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18233,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18491,a[2]=t5,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t7=((C_word*)t4)[1];
t8=C_fix(1);
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18500,a[2]=t9,a[3]=((C_word)li257),tmp=(C_word)a,a+=4,tmp);
C_trace("map");
t11=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t11+1)))(4,t11,t6,t10,t7);}
else{
C_trace("ChickenBridge.scm: 378  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[322],((C_word*)t4)[1]);}}

/* parse-graph-item in make-graph in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_18500(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_18500,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18504,a[2]=t2,a[3]=t1,a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(t2))){
t4=t3;
f_18504(2,t4,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,lf[321],t2);}}

/* k18502 in parse-graph-item in make-graph in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_18504(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18504,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18509,a[2]=((C_word*)t0)[4],a[3]=((C_word)li256),tmp=(C_word)a,a+=4,tmp);
C_apply(4,0,((C_word*)t0)[3],t2,((C_word*)t0)[2]);}

/* a18508 in k18502 in parse-graph-item in make-graph in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_18509(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+46)){
C_save_and_reclaim((void*)tr3r,(void*)f_18509r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_18509r(t0,t1,t2,t3);}}

static void C_ccall f_18509r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word *a=C_alloc(46);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=t3;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_FALSE;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_18513,a[2]=t11,a[3]=t15,a[4]=t9,a[5]=t3,a[6]=t13,a[7]=t7,a[8]=t5,a[9]=t2,a[10]=t1,a[11]=((C_word*)t0)[2],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t13)[1]))){
t17=t16;
f_18513(t17,C_SCHEME_UNDEFINED);}
else{
t17=(C_word)C_i_car(((C_word*)t13)[1]);
t18=(C_word)C_eqp(t17,lf[319]);
if(C_truep(t18)){
t19=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18651,a[2]=t3,a[3]=t16,a[4]=t13,a[5]=t15,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("error");
t20=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t20))(4,t20,t19,lf[19],lf[319]);}
else{
t20=t19;
f_18651(2,t20,C_SCHEME_UNDEFINED);}}
else{
t19=(C_word)C_eqp(t17,lf[320]);
if(C_truep(t19)){
t20=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18686,a[2]=t3,a[3]=t16,a[4]=t13,a[5]=t15,a[6]=t11,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("error");
t21=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t21))(4,t21,t20,lf[19],lf[320]);}
else{
t21=t20;
f_18686(2,t21,C_SCHEME_UNDEFINED);}}
else{
t20=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18715,a[2]=t16,a[3]=t9,a[4]=t5,a[5]=t13,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t15)[1])){
C_trace("error");
t21=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t21))(4,t21,t20,lf[10],t3);}
else{
t21=t20;
f_18715(2,t21,C_SCHEME_UNDEFINED);}}}}}

/* k18713 in a18508 in k18502 in parse-graph-item in make-graph in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_18715(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18715,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18722,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18730,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k18728 in k18713 in a18508 in k18502 in parse-graph-item in make-graph in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_18730(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_18722(2,t2,C_SCHEME_UNDEFINED);}}

/* k18720 in k18713 in a18508 in k18502 in parse-graph-item in make-graph in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_18722(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_18513(t5,t4);}

/* k18684 in a18508 in k18502 in parse-graph-item in make-graph in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_18686(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18686,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18690,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_18690(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k18688 in k18684 in a18508 in k18502 in parse-graph-item in make-graph in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_18690(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18513(t7,t6);}

/* k18649 in a18508 in k18502 in parse-graph-item in make-graph in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_18651(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18651,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18655,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_18655(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k18653 in k18649 in a18508 in k18502 in parse-graph-item in make-graph in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_18655(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18513(t7,t6);}

/* k18511 in a18508 in k18502 in parse-graph-item in make-graph in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_18513(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[31],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18513,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_18516,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_18516(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[319]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18551,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[319]);}
else{
t6=t5;
f_18551(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[320]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18586,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[320]);}
else{
t7=t6;
f_18586(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18615,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_18615(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k18613 in k18511 in a18508 in k18502 in parse-graph-item in make-graph in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_18615(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18615,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18622,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18630,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k18628 in k18613 in k18511 in a18508 in k18502 in parse-graph-item in make-graph in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_18630(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_18622(2,t2,C_SCHEME_UNDEFINED);}}

/* k18620 in k18613 in k18511 in a18508 in k18502 in parse-graph-item in make-graph in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_18622(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_18516(t5,t4);}

/* k18584 in k18511 in a18508 in k18502 in parse-graph-item in make-graph in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_18586(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18586,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18590,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_18590(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k18588 in k18584 in k18511 in a18508 in k18502 in parse-graph-item in make-graph in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_18590(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18516(t7,t6);}

/* k18549 in k18511 in a18508 in k18502 in parse-graph-item in make-graph in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_18551(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18551,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18555,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_18555(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k18553 in k18549 in k18511 in a18508 in k18502 in parse-graph-item in make-graph in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_18555(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18516(t7,t6);}

/* k18514 in k18511 in a18508 in k18502 in parse-graph-item in make-graph in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_18516(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18516,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18519,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_18519(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k18517 in k18514 in k18511 in a18508 in k18502 in parse-graph-item in make-graph in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_18519(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18519,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18522,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
t3=t2;
f_18522(t3,C_SCHEME_UNDEFINED);}
else{
t3=C_mutate(((C_word *)((C_word*)t0)[2])+1,((C_word*)((C_word*)t0)[6])[1]);
t4=t2;
f_18522(t4,t3);}}

/* k18520 in k18517 in k18514 in k18511 in a18508 in k18502 in parse-graph-item in make-graph in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_18522(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18522,NULL,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[6])[1],C_fix(1));
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=((C_word*)t0)[5];
t5=((C_word*)t0)[4];
t6=((C_word*)((C_word*)t0)[3])[1];
t7=((C_word*)((C_word*)t0)[2])[1];
t8=t4;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)C_a_i_record(&a,4,lf[316],t5,t6,t7));}

/* k18489 in make-graph in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_18491(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_18233(2,t3,t2);}

/* k18231 in make-graph in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_18233(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18233,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=((C_word*)t0)[4];
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_18236,a[2]=t9,a[3]=t13,a[4]=t7,a[5]=((C_word*)t0)[4],a[6]=t11,a[7]=t5,a[8]=t3,a[9]=((C_word*)t0)[2],a[10]=((C_word*)t0)[3],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t11)[1]))){
t15=t14;
f_18236(t15,C_SCHEME_UNDEFINED);}
else{
t15=(C_word)C_i_car(((C_word*)t11)[1]);
t16=(C_word)C_eqp(t15,lf[272]);
if(C_truep(t16)){
t17=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18396,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t7,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t7)[1])){
C_trace("ChickenBridge.scm: 378  error");
t18=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t18))(4,t18,t17,lf[19],lf[272]);}
else{
t18=t17;
f_18396(2,t18,C_SCHEME_UNDEFINED);}}
else{
t17=(C_word)C_eqp(t15,lf[273]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18431,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 378  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[19],lf[273]);}
else{
t19=t18;
f_18431(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18460,a[2]=t14,a[3]=t7,a[4]=t3,a[5]=t11,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 378  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[10],((C_word*)t0)[4]);}
else{
t19=t18;
f_18460(2,t19,C_SCHEME_UNDEFINED);}}}}}

/* k18458 in k18231 in make-graph in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_18460(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18460,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18467,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18475,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k18473 in k18458 in k18231 in make-graph in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_18475(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 378  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_18467(2,t2,C_SCHEME_UNDEFINED);}}

/* k18465 in k18458 in k18231 in make-graph in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_18467(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_18236(t5,t4);}

/* k18429 in k18231 in make-graph in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_18431(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18431,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18435,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_18435(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k18433 in k18429 in k18231 in make-graph in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_18435(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18236(t7,t6);}

/* k18394 in k18231 in make-graph in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_18396(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18396,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18400,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_18400(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k18398 in k18394 in k18231 in make-graph in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_18400(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18236(t7,t6);}

/* k18234 in k18231 in make-graph in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_18236(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18236,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18239,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_18239(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[272]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18296,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 378  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[272]);}
else{
t6=t5;
f_18296(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[273]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18331,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 378  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[273]);}
else{
t7=t6;
f_18331(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18360,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 378  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_18360(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k18358 in k18234 in k18231 in make-graph in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_18360(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18360,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18367,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18375,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k18373 in k18358 in k18234 in k18231 in make-graph in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_18375(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 378  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_18367(2,t2,C_SCHEME_UNDEFINED);}}

/* k18365 in k18358 in k18234 in k18231 in make-graph in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_18367(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_18239(t5,t4);}

/* k18329 in k18234 in k18231 in make-graph in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_18331(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18331,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18335,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_18335(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k18333 in k18329 in k18234 in k18231 in make-graph in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_18335(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18239(t7,t6);}

/* k18294 in k18234 in k18231 in make-graph in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_18296(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18296,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18300,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_18300(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k18298 in k18294 in k18234 in k18231 in make-graph in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_18300(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18239(t7,t6);}

/* k18237 in k18234 in k18231 in make-graph in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_18239(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18239,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18242,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_18242(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 378  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k18240 in k18237 in k18234 in k18231 in make-graph in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_18242(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18242,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18245,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  %alloc-pattern");
f_12613(t2);}

/* k18243 in k18240 in k18237 in k18234 in k18231 in make-graph in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_18245(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18245,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[5])[1]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18251,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_SCHEME_FALSE,((C_word*)((C_word*)t0)[5])[1]);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18257,a[2]=((C_word)li255),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  initialize-pattern");
f_12623(t3,t1,t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t2,C_retrieve2(lf[318],"next-in-graph"),t5);}

/* a18256 in k18243 in k18240 in k18237 in k18234 in k18231 in make-graph in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_18257(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_18257,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18263,a[2]=((C_word)li254),tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18275,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern-data");
f_12342(t5,t3);}

/* k18273 in a18256 in k18243 in k18240 in k18237 in k18234 in k18231 in make-graph in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_18275(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(t1);
C_trace("for-each");
t3=*((C_word*)lf[208]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* a18262 in a18256 in k18243 in k18240 in k18237 in k18234 in k18231 in make-graph in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_18263(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_18263,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 378  graph-node-datum");
f_18166(t1,t2);}

/* k18249 in k18243 in k18240 in k18237 in k18234 in k18231 in make-graph in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_18251(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* graph-node-datum in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_18166(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18166,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[316]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* next-in-markov in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_17826(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_17826,3,t0,t1,t2);}
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17829,a[2]=t4,a[3]=((C_word)li248),tmp=(C_word)a,a+=4,tmp));
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18008,a[2]=t1,a[3]=t4,a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  pattern-data");
f_12342(t6,t2);}

/* k18006 in next-in-markov in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_18008(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18008,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18012,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  pattern-cache");
f_12558(t2,((C_word*)t0)[4]);}

/* k18010 in k18006 in next-in-markov in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_18012(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18012,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18014,a[2]=t3,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word)li251),tmp=(C_word)a,a+=6,tmp));
t5=((C_word*)t3)[1];
f_18014(t5,((C_word*)t0)[3],((C_word*)t0)[2],t1,C_SCHEME_FALSE);}

/* do2333 in k18010 in k18006 in next-in-markov in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_18014(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18014,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_nullp(t2);
t7=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_18024,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=((C_word*)t0)[4],a[6]=t3,a[7]=t1,a[8]=t5,tmp=(C_word)a,a+=9,tmp);
if(C_truep(t6)){
t8=t7;
f_18024(2,t8,t6);}
else{
t8=(C_word)C_i_nullp(t3);
if(C_truep(t8)){
t9=t7;
f_18024(2,t9,t8);}
else{
t9=(C_word)C_i_car(t2);
t10=(C_word)C_i_car(t9);
t11=t3;
t12=C_SCHEME_UNDEFINED;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_set_block_item(t13,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17939,a[2]=t13,a[3]=((C_word)li250),tmp=(C_word)a,a+=4,tmp));
t15=((C_word*)t13)[1];
f_17939(t15,t7,t10,t11,C_SCHEME_TRUE);}}}

/* do2318 in do2333 in k18010 in k18006 in next-in-markov in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_17939(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17939,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_nullp(t2);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17949,a[2]=((C_word*)t0)[2],a[3]=t3,a[4]=t2,a[5]=t5,a[6]=t1,tmp=(C_word)a,a+=7,tmp);
if(C_truep(t6)){
t8=t7;
f_17949(t8,t6);}
else{
t8=(C_word)C_i_nullp(t3);
t9=t7;
f_17949(t9,(C_truep(t8)?t8:(C_word)C_i_not(((C_word*)t5)[1])));}}

/* k17947 in do2318 in do2333 in k18010 in k18006 in next-in-markov in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_17949(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17949,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[6];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[5])[1]);}
else{
t2=(C_word)C_i_car(((C_word*)t0)[4]);
t3=(C_word)C_eqp(t2,lf[101]);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17956,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
if(C_truep(t3)){
t5=t4;
f_17956(t5,t3);}
else{
t5=(C_word)C_i_car(((C_word*)t0)[4]);
t6=(C_word)C_i_car(((C_word*)t0)[3]);
t7=(C_word)C_i_equalp(t5,t6);
if(C_truep(t7)){
t8=t4;
f_17956(t8,t7);}
else{
t8=(C_word)C_i_car(((C_word*)t0)[3]);
t9=t4;
f_17956(t9,(C_word)C_eqp(t8,lf[101]));}}}}

/* k17954 in k17947 in do2318 in do2333 in k18010 in k18006 in next-in-markov in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_17956(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[5]);
t4=(C_word)C_i_cdr(((C_word*)t0)[4]);
t5=((C_word*)((C_word*)t0)[3])[1];
f_17939(t5,((C_word*)t0)[2],t3,t4,((C_word*)((C_word*)t0)[6])[1]);}

/* k18022 in do2333 in k18010 in k18006 in next-in-markov in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_18024(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18024,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18027,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[4]))){
C_trace("ChickenBridge.scm: 378  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[314],((C_word*)t0)[6]);}
else{
t3=t2;
f_18027(2,t3,C_SCHEME_UNDEFINED);}}
else{
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[2])[1];
f_18014(t3,((C_word*)t0)[7],t2,((C_word*)t0)[6],((C_word*)((C_word*)t0)[8])[1]);}}

/* k18025 in k18022 in do2333 in k18010 in k18006 in next-in-markov in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_18027(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18027,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18031,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[3]);
t4=(C_word)C_i_cadr(t3);
t5=(C_word)C_i_car(((C_word*)t0)[3]);
t6=(C_word)C_i_cddr(t5);
C_trace("ChickenBridge.scm: 378  select-output");
t7=((C_word*)((C_word*)t0)[2])[1];
f_17829(t7,t2,t4,t6);}

/* k18029 in k18025 in k18022 in do2333 in k18010 in k18006 in next-in-markov in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_18031(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18031,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18034,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[3]))){
t4=t3;
f_18034(2,t4,C_SCHEME_UNDEFINED);}
else{
t4=(C_word)C_i_cdr(((C_word*)t0)[3]);
if(C_truep((C_word)C_i_nullp(t4))){
t5=t3;
f_18034(2,t5,(C_word)C_i_set_car(((C_word*)t0)[3],((C_word*)((C_word*)t0)[5])[1]));}
else{
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18051,a[2]=t6,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[3],a[6]=((C_word)li249),tmp=(C_word)a,a+=7,tmp));
t8=((C_word*)t6)[1];
f_18051(t8,t3,((C_word*)t0)[3]);}}}

/* do2342 in k18029 in k18025 in k18022 in do2333 in k18010 in k18006 in next-in-markov in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_18051(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a;
loop:
a=C_alloc(4);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_18051,NULL,3,t0,t1,t2);}
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_set_car(((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_i_set_cdr(t2,((C_word*)t0)[5]);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18067,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_cdr(((C_word*)t0)[5]);
C_trace("ChickenBridge.scm: 378  pattern-cache-set!");
f_12549(t6,((C_word*)t0)[3],t7);}
else{
t4=(C_word)C_i_cdr(t2);
t10=t1;
t11=t4;
t1=t10;
t2=t11;
goto loop;}}

/* k18065 in do2342 in k18029 in k18025 in k18022 in do2333 in k18010 in k18006 in next-in-markov in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_18067(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_set_cdr(t2,C_SCHEME_END_OF_LIST));}

/* k18032 in k18029 in k18025 in k18022 in do2333 in k18010 in k18006 in next-in-markov in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_18034(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* select-output in next-in-markov in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_17829(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17829,NULL,4,t0,t1,t2,t3);}
t4=t2;
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17897,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  tb:ranf");
f_7491(t5,t2);}
else{
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17841,a[2]=t6,a[3]=t3,a[4]=((C_word*)t0)[2],a[5]=((C_word)li247),tmp=(C_word)a,a+=6,tmp));
t8=((C_word*)t6)[1];
f_17841(t8,t1,t3,C_SCHEME_FALSE,C_fix(0));}}

/* do2302 in select-output in next-in-markov in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_17841(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17841,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 378  select-output");
t7=((C_word*)((C_word*)t0)[4])[1];
f_17829(t7,t1,((C_word*)t6)[1],((C_word*)t0)[3]);}
else{
t7=(C_word)C_i_car(t2);
t8=C_set_block_item(t5,0,t7);
t9=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17877,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,a[5]=t5,a[6]=t6,tmp=(C_word)a,a+=7,tmp);
t10=(C_word)C_i_caddr(((C_word*)t5)[1]);
if(C_truep((C_word)C_i_numberp(t10))){
t11=t9;
f_17877(2,t11,(C_word)C_i_caddr(((C_word*)t5)[1]));}
else{
t11=(C_word)C_i_caddr(((C_word*)t5)[1]);
C_trace("ChickenBridge.scm: 378  next-1");
f_12964(t9,t11);}}}

/* k17875 in do2302 in select-output in next-in-markov in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_17877(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17877,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[6])[1],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t5=(C_word)C_i_set_car(t4,((C_word*)((C_word*)t0)[6])[1]);
t6=(C_word)C_i_cdr(((C_word*)t0)[4]);
t7=((C_word*)((C_word*)t0)[3])[1];
f_17841(t7,((C_word*)t0)[2],t6,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[6])[1]);}

/* k17895 in select-output in next-in-markov in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_17897(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17897,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17902,a[2]=t3,a[3]=t1,a[4]=((C_word)li246),tmp=(C_word)a,a+=5,tmp));
t5=((C_word*)t3)[1];
f_17902(t5,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* do2312 in k17895 in select-output in next-in-markov in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_17902(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a;
loop:
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17902,NULL,3,t0,t1,t2);}
t3=(C_word)C_i_car(t2);
t4=(C_word)C_i_cadr(t3);
if(C_truep((C_word)C_i_lessp(((C_word*)t0)[3],t4))){
t5=(C_word)C_i_car(t2);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_i_car(t5));}
else{
t5=(C_word)C_i_cdr(t2);
t8=t1;
t9=t5;
t1=t8;
t2=t9;
goto loop;}}

/* make-markov in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_17339(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+22)){
C_save_and_reclaim((void*)tr3r,(void*)f_17339r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_17339r(t0,t1,t2,t3);}}

static void C_ccall f_17339r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a=C_alloc(22);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17343,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17820,a[2]=t5,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t7=((C_word*)t4)[1];
t8=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t9=C_SCHEME_UNDEFINED;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_set_block_item(t10,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17266,a[2]=t7,a[3]=t10,a[4]=t8,a[5]=((C_word)li244),tmp=(C_word)a,a+=6,tmp));
t12=((C_word*)t10)[1];
f_17266(t12,t6,t7,C_SCHEME_FALSE,t8,C_SCHEME_FALSE);}
else{
C_trace("ChickenBridge.scm: 378  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[313],((C_word*)t4)[1]);}}

/* do2203 in make-markov in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_17266(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17266,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,(C_word)C_i_cdr(((C_word*)t0)[4]));}
else{
t9=(C_word)C_i_car(t2);
t10=t9;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_17111,a[2]=((C_word*)t0)[2],a[3]=t6,a[4]=t1,a[5]=((C_word*)t0)[3],a[6]=t2,a[7]=t7,a[8]=t8,a[9]=t11,tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t11)[1]))){
t13=t12;
f_17111(2,t13,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 378  error");
t13=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t13))(4,t13,t12,lf[312],((C_word*)t11)[1]);}}}

/* k17109 in do2203 in make-markov in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_17111(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17111,2,t0,t1);}
t2=(C_word)C_i_member(lf[308],((C_word*)((C_word*)t0)[9])[1]);
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_17117,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
if(C_truep(t2)){
t4=t3;
f_17117(2,t4,t2);}
else{
t4=(C_word)C_i_member(lf[310],((C_word*)((C_word*)t0)[9])[1]);
if(C_truep(t4)){
t5=t3;
f_17117(2,t5,t4);}
else{
C_trace("ChickenBridge.scm: 378  error");
t5=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,lf[311],((C_word*)((C_word*)t0)[9])[1]);}}}

/* k17115 in k17109 in do2203 in make-markov in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_17117(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[37],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17117,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_END_OF_LIST;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_fix(0);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_END_OF_LIST;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t11=t10;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_17129,a[2]=t3,a[3]=t9,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=t5,a[12]=t7,tmp=(C_word)a,a+=13,tmp);
t14=C_SCHEME_UNDEFINED;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_set_block_item(t15,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_17202,a[2]=t15,a[3]=t12,a[4]=t5,a[5]=t10,a[6]=t3,a[7]=((C_word*)t0)[2],a[8]=((C_word)li243),tmp=(C_word)a,a+=9,tmp));
t17=((C_word*)t15)[1];
f_17202(t17,t13);}

/* do2181 in k17115 in k17109 in do2203 in make-markov in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_17202(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word *a;
loop:
a=C_alloc(3);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_17202,NULL,2,t0,t1);}
t2=(C_word)C_eqp(((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[6])[1]);
if(C_truep(t2)){
t3=(C_word)C_i_cdr(((C_word*)t0)[5]);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[6])+1,t5);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,t6);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_a_i_list(&a,1,t3);
t5=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[3])[1],t4);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[3])+1,t6);
t8=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t9=C_mutate(((C_word *)((C_word*)t0)[7])+1,t8);
t15=t1;
t1=t15;
goto loop;}}

/* k17127 in k17115 in k17109 in do2203 in make-markov in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_17129(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17129,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_17132,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[12],tmp=(C_word)a,a+=12,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17145,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[12],a[4]=((C_word)li242),tmp=(C_word)a,a+=5,tmp);
C_trace("for-each");
t4=*((C_word*)lf[208]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,t2,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* a17144 in k17127 in k17115 in k17109 in do2203 in make-markov in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_17145(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[14],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_17145,3,t0,t1,t2);}
t3=C_SCHEME_FALSE;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17149,a[2]=t8,a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t6,a[6]=((C_word*)t0)[3],a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_pairp(t2))){
t10=(C_word)C_i_car(t2);
t11=C_set_block_item(t4,0,t10);
t12=(C_word)C_i_cdr(t2);
t13=(C_word)C_i_nullp(t12);
t14=(C_truep(t13)?C_fix(1):(C_word)C_i_cadr(t2));
t15=C_set_block_item(t8,0,t14);
t16=C_set_block_item(t6,0,((C_word*)t8)[1]);
if(C_truep((C_word)C_i_numberp(((C_word*)t8)[1]))){
t17=t9;
f_17149(t17,C_SCHEME_UNDEFINED);}
else{
t17=C_set_block_item(t8,0,C_SCHEME_FALSE);
t18=t9;
f_17149(t18,t17);}}
else{
t10=C_set_block_item(t4,0,t2);
t11=C_set_block_item(t8,0,C_fix(1));
t12=C_set_block_item(t6,0,C_fix(1));
t13=t9;
f_17149(t13,t12);}}

/* k17147 in a17144 in k17127 in k17115 in k17109 in do2203 in make-markov in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_17149(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17149,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17152,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_truep(((C_word*)((C_word*)t0)[2])[1])?((C_word*)((C_word*)t0)[6])[1]:C_SCHEME_FALSE);
if(C_truep(t3)){
t4=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[2])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[6])+1,t4);
t6=t2;
f_17152(t6,t5);}
else{
t4=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_FALSE);
t5=t2;
f_17152(t5,t4);}}

/* k17150 in k17147 in a17144 in k17127 in k17115 in k17109 in do2203 in make-markov in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_17152(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17152,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_a_i_cons(&a,2,t2,((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,t4);}

/* k17130 in k17127 in k17115 in k17109 in do2203 in make-markov in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_17132(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17132,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_17143,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 378  reverse");
t3=*((C_word*)lf[187]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k17141 in k17130 in k17127 in k17115 in k17109 in do2203 in make-markov in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_17143(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17143,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[10])[1],t1);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[9])[1],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[8])+1,t3);
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17283,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
t6=((C_word*)((C_word*)t0)[3])[1];
if(C_truep(t6)){
t7=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t8=(C_word)C_i_length(t7);
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[3])[1],t8))){
t9=t5;
f_17283(2,t9,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 378  error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t5,lf[309],((C_word*)t0)[2]);}}
else{
t7=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t8=(C_word)C_i_length(t7);
t9=C_mutate(((C_word *)((C_word*)t0)[3])+1,t8);
t10=t5;
f_17283(2,t10,t9);}}

/* k17281 in k17141 in k17130 in k17127 in k17115 in k17109 in do2203 in make-markov in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_17283(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17283,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[7])[1]);
t3=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[6])[1],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[6])+1,t4);
t6=(C_word)C_i_cdr(((C_word*)t0)[5]);
t7=((C_word*)((C_word*)t0)[4])[1];
f_17266(t7,((C_word*)t0)[3],t6,((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[7])[1]);}

/* k17818 in make-markov in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_17820(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_17343(2,t3,t2);}

/* k17341 in make-markov in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_17343(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word ab[59],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17343,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=((C_word*)t0)[4];
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_17346,a[2]=t13,a[3]=t11,a[4]=t17,a[5]=t9,a[6]=((C_word*)t0)[4],a[7]=t15,a[8]=t5,a[9]=t3,a[10]=t7,a[11]=((C_word*)t0)[2],a[12]=((C_word*)t0)[3],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t15)[1]))){
t19=t18;
f_17346(t19,C_SCHEME_UNDEFINED);}
else{
t19=(C_word)C_i_car(((C_word*)t15)[1]);
t20=(C_word)C_eqp(t19,lf[272]);
if(C_truep(t20)){
t21=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17690,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t9,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 378  error");
t22=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t22))(4,t22,t21,lf[19],lf[272]);}
else{
t22=t21;
f_17690(2,t22,C_SCHEME_UNDEFINED);}}
else{
t21=(C_word)C_eqp(t19,lf[273]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17725,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t11,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("ChickenBridge.scm: 378  error");
t23=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[19],lf[273]);}
else{
t23=t22;
f_17725(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t19,lf[307]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17760,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t13,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 378  error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[19],lf[307]);}
else{
t24=t23;
f_17760(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17789,a[2]=t18,a[3]=t9,a[4]=t3,a[5]=t15,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t17)[1])){
C_trace("ChickenBridge.scm: 378  error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[10],((C_word*)t0)[4]);}
else{
t24=t23;
f_17789(2,t24,C_SCHEME_UNDEFINED);}}}}}}

/* k17787 in k17341 in make-markov in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_17789(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17789,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17796,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17804,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k17802 in k17787 in k17341 in make-markov in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_17804(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 378  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_17796(2,t2,C_SCHEME_UNDEFINED);}}

/* k17794 in k17787 in k17341 in make-markov in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_17796(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_17346(t5,t4);}

/* k17758 in k17341 in make-markov in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_17760(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17760,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17764,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_17764(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17762 in k17758 in k17341 in make-markov in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_17764(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17346(t7,t6);}

/* k17723 in k17341 in make-markov in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_17725(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17725,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17729,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_17729(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17727 in k17723 in k17341 in make-markov in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_17729(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17346(t7,t6);}

/* k17688 in k17341 in make-markov in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_17690(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17690,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17694,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_17694(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17692 in k17688 in k17341 in make-markov in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_17694(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17346(t7,t6);}

/* k17344 in k17341 in make-markov in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_17346(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[43],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17346,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_17349,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_17349(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[272]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17555,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 378  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[272]);}
else{
t6=t5;
f_17555(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[273]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17590,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 378  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[273]);}
else{
t7=t6;
f_17590(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[307]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17625,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 378  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[307]);}
else{
t8=t7;
f_17625(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17654,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 378  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_17654(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k17652 in k17344 in k17341 in make-markov in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_17654(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17654,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17661,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17669,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k17667 in k17652 in k17344 in k17341 in make-markov in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_17669(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 378  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_17661(2,t2,C_SCHEME_UNDEFINED);}}

/* k17659 in k17652 in k17344 in k17341 in make-markov in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_17661(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_17349(t5,t4);}

/* k17623 in k17344 in k17341 in make-markov in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_17625(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17625,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17629,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_17629(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17627 in k17623 in k17344 in k17341 in make-markov in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_17629(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17349(t7,t6);}

/* k17588 in k17344 in k17341 in make-markov in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_17590(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17590,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17594,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_17594(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17592 in k17588 in k17344 in k17341 in make-markov in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_17594(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17349(t7,t6);}

/* k17553 in k17344 in k17341 in make-markov in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_17555(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17555,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17559,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_17559(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17557 in k17553 in k17344 in k17341 in make-markov in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_17559(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17349(t7,t6);}

/* k17347 in k17344 in k17341 in make-markov in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_17349(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17349,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_17352,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[12],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_17352(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[272]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17420,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 378  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[272]);}
else{
t6=t5;
f_17420(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[273]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17455,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 378  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[273]);}
else{
t7=t6;
f_17455(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[307]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17490,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 378  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[307]);}
else{
t8=t7;
f_17490(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17519,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 378  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_17519(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k17517 in k17347 in k17344 in k17341 in make-markov in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_17519(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17519,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17526,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17534,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k17532 in k17517 in k17347 in k17344 in k17341 in make-markov in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_17534(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 378  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_17526(2,t2,C_SCHEME_UNDEFINED);}}

/* k17524 in k17517 in k17347 in k17344 in k17341 in make-markov in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_17526(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_17352(t5,t4);}

/* k17488 in k17347 in k17344 in k17341 in make-markov in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_17490(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17490,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17494,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_17494(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17492 in k17488 in k17347 in k17344 in k17341 in make-markov in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_17494(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17352(t7,t6);}

/* k17453 in k17347 in k17344 in k17341 in make-markov in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_17455(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17455,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17459,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_17459(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17457 in k17453 in k17347 in k17344 in k17341 in make-markov in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_17459(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17352(t7,t6);}

/* k17418 in k17347 in k17344 in k17341 in make-markov in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_17420(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17420,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17424,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_17424(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17422 in k17418 in k17347 in k17344 in k17341 in make-markov in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_17424(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17352(t7,t6);}

/* k17350 in k17347 in k17344 in k17341 in make-markov in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_17352(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17352,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17355,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_17355(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 378  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k17353 in k17350 in k17347 in k17344 in k17341 in make-markov in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_17355(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17355,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17358,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  %alloc-pattern");
f_12613(t2);}

/* k17356 in k17353 in k17350 in k17347 in k17344 in k17341 in make-markov in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_17358(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17358,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[6])[1]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17364,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[4],a[4]=t1,a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17391,a[2]=((C_word)li241),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  initialize-pattern");
f_12623(t3,t1,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t2,C_retrieve2(lf[306],"next-in-markov"),t4);}

/* a17390 in k17356 in k17353 in k17350 in k17347 in k17344 in k17341 in make-markov in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_17391(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_17391,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17399,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern-data");
f_12342(t4,t3);}

/* k17397 in a17390 in k17356 in k17353 in k17350 in k17347 in k17344 in k17341 in make-markov in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_17399(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("for-each");
t2=*((C_word*)lf[208]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k17362 in k17356 in k17353 in k17350 in k17347 in k17344 in k17341 in make-markov in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_17364(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17364,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17367,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_17367(t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17377,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t5=(C_word)C_i_car(t4);
t6=(C_word)C_i_length(t5);
C_trace("ChickenBridge.scm: 378  make-list");
t7=C_retrieve(lf[63]);
((C_proc4)C_retrieve_proc(t7))(4,t7,t3,t6,lf[101]);}}

/* k17375 in k17362 in k17356 in k17353 in k17350 in k17347 in k17344 in k17341 in make-markov in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_17377(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_17367(t3,t2);}

/* k17365 in k17362 in k17356 in k17353 in k17350 in k17347 in k17344 in k17341 in make-markov in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_17367(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17367,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17370,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern-cache-set!");
f_12549(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k17368 in k17365 in k17362 in k17356 in k17353 in k17350 in k17347 in k17344 in k17341 in make-markov in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_17370(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* next-in-weighting in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_16906(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_16906,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16910,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern-data");
f_12342(t3,t2);}

/* k16908 in next-in-weighting in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_16910(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16910,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16913,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  pattern-period");
f_12396(t2,((C_word*)t0)[2]);}

/* k16911 in k16908 in next-in-weighting in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_16913(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16913,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16916,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  pattern-flags");
f_12324(t2,((C_word*)t0)[2]);}

/* k16914 in k16911 in k16908 in next-in-weighting in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_16916(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16916,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16922,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[5],a[4]=t2,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17085,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t3,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  bitwise-test");
f_7280(t4,t1,C_fix(4));}

/* k17083 in k16914 in k16911 in k16908 in next-in-weighting in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_17085(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17085,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_16922(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17098,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  period-count");
f_12174(t2,((C_word*)t0)[2]);}}

/* k17096 in k17083 in k16914 in k16911 in k16908 in next-in-weighting in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_17098(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17098,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17102,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  period-length");
f_12192(t2,((C_word*)t0)[2]);}

/* k17100 in k17096 in k17083 in k16914 in k16911 in k16908 in next-in-weighting in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_17102(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep((C_word)C_i_nequalp(((C_word*)t0)[4],t1))){
C_trace("ChickenBridge.scm: 378  recalc-weightings");
f_16794(((C_word*)t0)[3],((C_word*)t0)[2],C_SCHEME_FALSE);}
else{
t2=((C_word*)t0)[3];
f_16922(2,t2,C_SCHEME_UNDEFINED);}}

/* k16920 in k16914 in k16911 in k16908 in next-in-weighting in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_16922(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16922,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16928,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[4]))){
t3=t2;
f_16928(t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17059,a[2]=((C_word*)t0)[4],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17078,a[2]=((C_word*)t0)[4],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  random-item-count");
f_15944(t4,((C_word*)t0)[4]);}}

/* k17076 in k16920 in k16914 in k16911 in k16908 in next-in-weighting in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_17078(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17078,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,C_fix(1),t1);
C_trace("ChickenBridge.scm: 378  random-item-count-set!");
f_15935(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k17057 in k16920 in k16914 in k16911 in k16908 in next-in-weighting in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_17059(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17059,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17066,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  random-item-count");
f_15944(t2,((C_word*)t0)[2]);}

/* k17064 in k17057 in k16920 in k16914 in k16911 in k16908 in next-in-weighting in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_17066(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17066,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17070,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  random-item-min");
f_15908(t2,((C_word*)t0)[2]);}

/* k17068 in k17064 in k17057 in k16920 in k16914 in k16911 in k16908 in next-in-weighting in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_17070(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_16928(t2,(C_word)C_i_lessp(((C_word*)t0)[2],t1));}

/* k16926 in k16920 in k16914 in k16911 in k16908 in next-in-weighting in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_16928(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16928,NULL,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 378  random-item-datum");
f_15854(((C_word*)t0)[5],((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16934,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  pattern-cache");
f_12558(t2,((C_word*)t0)[2]);}}

/* k16932 in k16926 in k16920 in k16914 in k16911 in k16908 in next-in-weighting in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_16934(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16934,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)t0)[4]);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16938,a[2]=((C_word)li237),tmp=(C_word)a,a+=3,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16976,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t5,a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17018,a[2]=t6,a[3]=t5,a[4]=t1,a[5]=t2,a[6]=t3,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  pick");
f_16938(t7,t2,t1);}

/* k17016 in k16932 in k16926 in k16920 in k16914 in k16911 in k16908 in next-in-weighting in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_17018(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17018,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17020,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=t3,a[7]=((C_word)li239),tmp=(C_word)a,a+=8,tmp));
t5=((C_word*)t3)[1];
f_17020(t5,((C_word*)t0)[2],t1);}

/* do2155 in k17016 in k16932 in k16926 in k16920 in k16914 in k16911 in k16908 in next-in-weighting in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_17020(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17020,NULL,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_17039,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=t1,a[8]=((C_word*)t0)[6],tmp=(C_word)a,a+=9,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17042,a[2]=t2,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  random-item-max");
f_15926(t4,t2);}

/* k17040 in do2155 in k17016 in k16932 in k16926 in k16920 in k16914 in k16911 in k16908 in next-in-weighting in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_17042(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17042,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17049,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  random-item-count");
f_15944(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_17039(t2,C_SCHEME_FALSE);}}

/* k17047 in k17040 in do2155 in k17016 in k16932 in k16926 in k16920 in k16914 in k16911 in k16908 in next-in-weighting in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_17049(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17049,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17053,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  random-item-max");
f_15926(t2,((C_word*)t0)[2]);}

/* k17051 in k17047 in k17040 in do2155 in k17016 in k16932 in k16926 in k16920 in k16914 in k16911 in k16908 in next-in-weighting in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_17053(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_17039(t2,(C_word)C_i_nequalp(((C_word*)t0)[2],t1));}

/* k17037 in do2155 in k17016 in k16932 in k16926 in k16920 in k16914 in k16911 in k16908 in next-in-weighting in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_17039(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17039,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17035,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pick");
f_16938(t2,((C_word*)t0)[5],((C_word*)t0)[4]);}
else{
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,((C_word*)t0)[2]);
t3=((C_word*)t0)[7];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}}

/* k17033 in k17037 in do2155 in k17016 in k16932 in k16926 in k16920 in k16914 in k16911 in k16908 in next-in-weighting in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_17035(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[3])[1];
f_17020(t2,((C_word*)t0)[2],t1);}

/* k16974 in k16932 in k16926 in k16920 in k16914 in k16911 in k16908 in next-in-weighting in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_16976(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16976,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16979,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[3]);
if(C_truep(t3)){
t4=t2;
f_16979(2,t4,C_SCHEME_UNDEFINED);}
else{
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16993,a[2]=t5,a[3]=((C_word)li238),tmp=(C_word)a,a+=4,tmp));
t7=((C_word*)t5)[1];
f_16993(t7,t2,((C_word*)t0)[2]);}}

/* do2159 in k16974 in k16932 in k16926 in k16920 in k16914 in k16911 in k16908 in next-in-weighting in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_16993(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16993,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17003,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 378  random-item-count-set!");
f_15935(t3,t4,C_fix(0));}}

/* k17001 in do2159 in k16974 in k16932 in k16926 in k16920 in k16914 in k16911 in k16908 in next-in-weighting in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_17003(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_16993(t3,((C_word*)t0)[2],t2);}

/* k16977 in k16974 in k16932 in k16926 in k16920 in k16914 in k16911 in k16908 in next-in-weighting in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_16979(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_set_cdr(((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 378  random-item-datum");
f_15854(((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}

/* pick in k16932 in k16926 in k16920 in k16914 in k16911 in k16908 in next-in-weighting in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_16938(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16938,NULL,3,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16946,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  tb:ranf");
f_7491(t4,t3);}

/* k16944 in pick in k16932 in k16926 in k16920 in k16914 in k16911 in k16908 in next-in-weighting in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_16946(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16946,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16948,a[2]=t3,a[3]=((C_word)li236),tmp=(C_word)a,a+=4,tmp));
t5=((C_word*)t3)[1];
f_16948(t5,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* do2150 in k16944 in pick in k16932 in k16926 in k16920 in k16914 in k16911 in k16908 in next-in-weighting in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_16948(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16948,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16969,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=t1,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 378  random-item-index");
f_15872(t4,t5);}

/* k16967 in do2150 in k16944 in pick in k16932 in k16926 in k16920 in k16914 in k16911 in k16908 in next-in-weighting in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_16969(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep((C_word)C_i_lessp(((C_word*)t0)[5],t1))){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_car(((C_word*)t0)[3]));}
else{
t2=(C_word)C_i_cdr(((C_word*)t0)[3]);
t3=((C_word*)((C_word*)t0)[2])[1];
f_16948(t3,((C_word*)t0)[4],t2,((C_word*)t0)[5]);}}

/* recalc-weightings in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_16794(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16794,NULL,3,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16904,a[2]=t1,a[3]=t2,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  pattern-data");
f_12342(t4,t2);}

/* k16902 in recalc-weightings in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_16904(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16904,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=lf[304];
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16801,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=t4,a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16863,a[2]=t7,a[3]=t4,a[4]=((C_word)li234),tmp=(C_word)a,a+=5,tmp));
t9=((C_word*)t7)[1];
f_16863(t9,t5,t2);}

/* do2122 in k16902 in recalc-weightings in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_16863(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16863,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16892,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16896,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 378  random-item-weight");
f_15890(t4,t5);}}

/* k16894 in do2122 in k16902 in recalc-weightings in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_16896(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  next-1");
f_12964(((C_word*)t0)[2],t1);}

/* k16890 in do2122 in k16902 in recalc-weightings in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_16892(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16892,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[5])[1],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16877,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 378  random-item-index-set!");
f_15863(t4,t5,((C_word*)((C_word*)t0)[5])[1]);}

/* k16875 in k16890 in do2122 in k16902 in recalc-weightings in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_16877(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_16863(t3,((C_word*)t0)[2],t2);}

/* k16799 in k16902 in recalc-weightings in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_16801(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16801,2,t0,t1);}
if(C_truep(((C_word*)t0)[6])){
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16809,a[2]=((C_word*)t0)[4],a[3]=t3,a[4]=((C_word*)t0)[5],a[5]=((C_word)li233),tmp=(C_word)a,a+=6,tmp));
t5=((C_word*)t3)[1];
f_16809(t5,((C_word*)t0)[3],((C_word*)t0)[2],C_fix(0),C_fix(0));}
else{
C_trace("ChickenBridge.scm: 378  pattern-cache-set!");
f_12549(((C_word*)t0)[3],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);}}

/* do2128 in k16799 in k16902 in recalc-weightings in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_16809(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16809,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 378  pattern-cache-set!");
f_12549(t1,((C_word*)t0)[4],((C_word*)t6)[1]);}
else{
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16842,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=t6,a[6]=t5,tmp=(C_word)a,a+=7,tmp);
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16854,a[2]=t7,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t9=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 378  random-item-index");
f_15872(t8,t9);}}

/* k16852 in do2128 in k16799 in k16902 in recalc-weightings in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_16854(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16854,2,t0,t1);}
t2=(C_word)C_a_i_divide(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=(C_word)C_a_i_times(&a,2,t2,C_fix(1073741823));
C_trace("ChickenBridge.scm: 378  floor");
t4=*((C_word*)lf[172]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,((C_word*)t0)[2],t3);}

/* k16840 in do2128 in k16799 in k16902 in recalc-weightings in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_16842(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16842,2,t0,t1);}
t2=(C_word)C_i_inexact_to_exact(t1);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16826,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
t5=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 378  random-item-index-set!");
f_15863(t4,t5,((C_word*)((C_word*)t0)[6])[1]);}

/* k16824 in k16840 in do2128 in k16799 in k16902 in recalc-weightings in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_16826(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_16809(t4,((C_word*)t0)[2],t3,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[6])[1]);}

/* make-weighting in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_16027(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+7)){
C_save_and_reclaim((void*)tr3r,(void*)f_16027r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_16027r(t0,t1,t2,t3);}}

static void C_ccall f_16027r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a=C_alloc(7);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16031,a[2]=t1,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16344,a[2]=((C_word)li231),tmp=(C_word)a,a+=3,tmp);
C_trace("map");
t6=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t6+1)))(4,t6,t4,t5,t2);}

/* %make-random-item in make-weighting in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_16344(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[9],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_16344,3,t0,t1,t2);}
t3=C_SCHEME_FALSE;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_END_OF_LIST;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16351,a[2]=t4,a[3]=t1,a[4]=t6,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(t2))){
t8=(C_word)C_i_car(t2);
t9=C_set_block_item(t4,0,t8);
t10=(C_word)C_i_cdr(t2);
t11=C_set_block_item(t6,0,t10);
t12=t7;
f_16351(t12,t11);}
else{
t8=C_set_block_item(t4,0,t2);
t9=t7;
f_16351(t9,t8);}}

/* k16349 in %make-random-item in make-weighting in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_16351(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word ab[59],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16351,NULL,2,t0,t1);}
t2=C_fix(1);
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_fix(1);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=((C_word*)((C_word*)t0)[4])[1];
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_16354,a[2]=t13,a[3]=t11,a[4]=t17,a[5]=t9,a[6]=((C_word*)t0)[4],a[7]=t15,a[8]=t7,a[9]=t5,a[10]=t3,a[11]=((C_word*)t0)[2],a[12]=((C_word*)t0)[3],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t15)[1]))){
t19=t18;
f_16354(t19,C_SCHEME_UNDEFINED);}
else{
t19=(C_word)C_i_car(((C_word*)t15)[1]);
t20=(C_word)C_eqp(t19,lf[301]);
if(C_truep(t20)){
t21=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16657,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t9,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 378  error");
t22=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t22))(4,t22,t21,lf[19],lf[301]);}
else{
t22=t21;
f_16657(2,t22,C_SCHEME_UNDEFINED);}}
else{
t21=(C_word)C_eqp(t19,lf[302]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16692,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t11,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("ChickenBridge.scm: 378  error");
t23=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[19],lf[302]);}
else{
t23=t22;
f_16692(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t19,lf[303]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16727,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t13,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 378  error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[19],lf[303]);}
else{
t24=t23;
f_16727(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16756,a[2]=t18,a[3]=t9,a[4]=t3,a[5]=t15,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t17)[1])){
C_trace("ChickenBridge.scm: 378  error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[10],((C_word*)((C_word*)t0)[4])[1]);}
else{
t24=t23;
f_16756(2,t24,C_SCHEME_UNDEFINED);}}}}}}

/* k16754 in k16349 in %make-random-item in make-weighting in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_16756(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16756,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16763,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16771,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k16769 in k16754 in k16349 in %make-random-item in make-weighting in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_16771(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 378  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_16763(2,t2,C_SCHEME_UNDEFINED);}}

/* k16761 in k16754 in k16349 in %make-random-item in make-weighting in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_16763(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_16354(t5,t4);}

/* k16725 in k16349 in %make-random-item in make-weighting in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_16727(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16727,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16731,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_16731(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16729 in k16725 in k16349 in %make-random-item in make-weighting in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_16731(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16354(t7,t6);}

/* k16690 in k16349 in %make-random-item in make-weighting in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_16692(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16692,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16696,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_16696(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16694 in k16690 in k16349 in %make-random-item in make-weighting in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_16696(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16354(t7,t6);}

/* k16655 in k16349 in %make-random-item in make-weighting in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_16657(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16657,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16661,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_16661(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16659 in k16655 in k16349 in %make-random-item in make-weighting in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_16661(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16354(t7,t6);}

/* k16352 in k16349 in %make-random-item in make-weighting in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_16354(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[43],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16354,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_16357,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_16357(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[301]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16522,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 378  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[301]);}
else{
t6=t5;
f_16522(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[302]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16557,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 378  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[302]);}
else{
t7=t6;
f_16557(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[303]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16592,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 378  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[303]);}
else{
t8=t7;
f_16592(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16621,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 378  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)((C_word*)t0)[6])[1]);}
else{
t8=t7;
f_16621(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k16619 in k16352 in k16349 in %make-random-item in make-weighting in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_16621(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16621,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16628,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16636,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k16634 in k16619 in k16352 in k16349 in %make-random-item in make-weighting in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_16636(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 378  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_16628(2,t2,C_SCHEME_UNDEFINED);}}

/* k16626 in k16619 in k16352 in k16349 in %make-random-item in make-weighting in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_16628(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_16357(t5,t4);}

/* k16590 in k16352 in k16349 in %make-random-item in make-weighting in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_16592(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16592,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16596,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_16596(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16594 in k16590 in k16352 in k16349 in %make-random-item in make-weighting in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_16596(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16357(t7,t6);}

/* k16555 in k16352 in k16349 in %make-random-item in make-weighting in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_16557(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16557,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16561,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_16561(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16559 in k16555 in k16352 in k16349 in %make-random-item in make-weighting in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_16561(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16357(t7,t6);}

/* k16520 in k16352 in k16349 in %make-random-item in make-weighting in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_16522(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16522,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16526,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_16526(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16524 in k16520 in k16352 in k16349 in %make-random-item in make-weighting in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_16526(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16357(t7,t6);}

/* k16355 in k16352 in k16349 in %make-random-item in make-weighting in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_16357(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16357,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_16360,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[12],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_16360(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[301]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16387,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 378  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[301]);}
else{
t6=t5;
f_16387(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[302]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16422,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 378  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[302]);}
else{
t7=t6;
f_16422(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[303]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16457,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 378  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[303]);}
else{
t8=t7;
f_16457(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16486,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 378  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)((C_word*)t0)[6])[1]);}
else{
t8=t7;
f_16486(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k16484 in k16355 in k16352 in k16349 in %make-random-item in make-weighting in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_16486(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16486,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16493,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16501,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k16499 in k16484 in k16355 in k16352 in k16349 in %make-random-item in make-weighting in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_16501(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 378  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_16493(2,t2,C_SCHEME_UNDEFINED);}}

/* k16491 in k16484 in k16355 in k16352 in k16349 in %make-random-item in make-weighting in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_16493(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_16360(t5,t4);}

/* k16455 in k16355 in k16352 in k16349 in %make-random-item in make-weighting in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_16457(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16457,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16461,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_16461(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16459 in k16455 in k16355 in k16352 in k16349 in %make-random-item in make-weighting in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_16461(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16360(t7,t6);}

/* k16420 in k16355 in k16352 in k16349 in %make-random-item in make-weighting in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_16422(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16422,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16426,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_16426(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16424 in k16420 in k16355 in k16352 in k16349 in %make-random-item in make-weighting in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_16426(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16360(t7,t6);}

/* k16385 in k16355 in k16352 in k16349 in %make-random-item in make-weighting in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_16387(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16387,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16391,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_16391(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16389 in k16385 in k16355 in k16352 in k16349 in %make-random-item in make-weighting in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_16391(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16360(t7,t6);}

/* k16358 in k16355 in k16352 in k16349 in %make-random-item in make-weighting in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_16360(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16360,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16363,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_16363(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 378  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)((C_word*)t0)[2])[1]);}}

/* k16361 in k16358 in k16355 in k16352 in k16349 in %make-random-item in make-weighting in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_16363(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16363,2,t0,t1);}
t2=((C_word*)t0)[6];
t3=((C_word*)((C_word*)t0)[5])[1];
t4=((C_word*)((C_word*)t0)[4])[1];
t5=((C_word*)((C_word*)t0)[3])[1];
t6=((C_word*)((C_word*)t0)[2])[1];
t7=t2;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_a_i_record(&a,9,lf[290],t3,C_SCHEME_FALSE,t4,t5,t6,C_fix(0),C_SCHEME_FALSE,C_SCHEME_FALSE));}

/* k16029 in make-weighting in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_16031(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16031,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16034,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  %alloc-pattern");
f_12613(t2);}

/* k16032 in k16029 in make-weighting in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_16034(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16034,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)t0)[4]);
t3=C_SCHEME_FALSE;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_TRUE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_fix(0);
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_16040,a[2]=t10,a[3]=((C_word*)t0)[4],a[4]=t6,a[5]=t1,a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[3],a[8]=t4,a[9]=t2,a[10]=t8,tmp=(C_word)a,a+=11,tmp);
t12=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16308,a[2]=t8,a[3]=t6,a[4]=((C_word)li230),tmp=(C_word)a,a+=5,tmp);
C_trace("for-each");
t13=*((C_word*)lf[208]+1);
((C_proc4)(void*)(*((C_word*)t13+1)))(4,t13,t11,t12,((C_word*)t0)[4]);}

/* a16307 in k16032 in k16029 in make-weighting in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_16308(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_16308,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16312,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  random-item-min");
f_15908(t3,t2);}

/* k16310 in a16307 in k16032 in k16029 in make-weighting in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_16312(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16312,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16315,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  random-item-max");
f_15926(t2,((C_word*)t0)[2]);}

/* k16313 in k16310 in a16307 in k16032 in k16029 in make-weighting in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_16315(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16315,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16318,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  random-item-weight");
f_15890(t2,((C_word*)t0)[2]);}

/* k16316 in k16313 in k16310 in a16307 in k16032 in k16029 in make-weighting in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_16318(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16318,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16321,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  random-item-datum");
f_15854(t2,((C_word*)t0)[2]);}

/* k16319 in k16316 in k16313 in k16310 in a16307 in k16032 in k16029 in make-weighting in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_16321(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16321,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16324,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16334,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern?");
f_12309(t3,t1);}

/* k16332 in k16319 in k16316 in k16313 in k16310 in a16307 in k16032 in k16029 in make-weighting in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_16334(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16334,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(1));
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_16324(t4,t3);}
else{
t2=((C_word*)t0)[2];
f_16324(t2,C_SCHEME_UNDEFINED);}}

/* k16322 in k16319 in k16316 in k16313 in k16310 in a16307 in k16032 in k16029 in make-weighting in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_16324(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep((C_word)C_i_numberp(((C_word*)t0)[4]))){
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=C_set_block_item(((C_word*)t0)[2],0,C_SCHEME_FALSE);
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}}

/* k16038 in k16032 in k16029 in make-weighting in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_16040(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16040,2,t0,t1);}
t2=(C_word)C_i_nequalp(((C_word*)((C_word*)t0)[10])[1],((C_word*)t0)[9]);
t3=(C_truep(t2)?C_fix(1):((C_word*)t0)[9]);
t4=C_mutate(((C_word *)((C_word*)t0)[8])+1,t3);
t5=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_16047,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[7],tmp=(C_word)a,a+=10,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
t6=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[2])[1],C_fix(4));
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t6);
t8=t5;
f_16047(t8,t7);}
else{
t6=t5;
f_16047(t6,C_SCHEME_UNDEFINED);}}

/* k16045 in k16038 in k16032 in k16029 in make-weighting in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_16047(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[50],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16047,NULL,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=((C_word*)t0)[9];
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=(*a=C_CLOSURE_TYPE|15,a[1]=(C_word)f_16050,a[2]=t9,a[3]=t13,a[4]=t7,a[5]=((C_word*)t0)[9],a[6]=t11,a[7]=((C_word*)t0)[2],a[8]=((C_word*)t0)[3],a[9]=((C_word*)t0)[4],a[10]=t5,a[11]=t3,a[12]=((C_word*)t0)[5],a[13]=((C_word*)t0)[6],a[14]=((C_word*)t0)[7],a[15]=((C_word*)t0)[8],tmp=(C_word)a,a+=16,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t11)[1]))){
t15=t14;
f_16050(t15,C_SCHEME_UNDEFINED);}
else{
t15=(C_word)C_i_car(((C_word*)t11)[1]);
t16=(C_word)C_eqp(t15,lf[272]);
if(C_truep(t16)){
t17=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16214,a[2]=((C_word*)t0)[9],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t7,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t7)[1])){
C_trace("ChickenBridge.scm: 378  error");
t18=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t18))(4,t18,t17,lf[19],lf[272]);}
else{
t18=t17;
f_16214(2,t18,C_SCHEME_UNDEFINED);}}
else{
t17=(C_word)C_eqp(t15,lf[273]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16249,a[2]=((C_word*)t0)[9],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 378  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[19],lf[273]);}
else{
t19=t18;
f_16249(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16278,a[2]=t14,a[3]=t7,a[4]=t3,a[5]=t11,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 378  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[10],((C_word*)t0)[9]);}
else{
t19=t18;
f_16278(2,t19,C_SCHEME_UNDEFINED);}}}}}

/* k16276 in k16045 in k16038 in k16032 in k16029 in make-weighting in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_16278(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16278,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16285,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16293,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k16291 in k16276 in k16045 in k16038 in k16032 in k16029 in make-weighting in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_16293(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 378  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_16285(2,t2,C_SCHEME_UNDEFINED);}}

/* k16283 in k16276 in k16045 in k16038 in k16032 in k16029 in make-weighting in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_16285(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_16050(t5,t4);}

/* k16247 in k16045 in k16038 in k16032 in k16029 in make-weighting in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_16249(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16249,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16253,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_16253(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16251 in k16247 in k16045 in k16038 in k16032 in k16029 in make-weighting in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_16253(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16050(t7,t6);}

/* k16212 in k16045 in k16038 in k16032 in k16029 in make-weighting in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_16214(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16214,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16218,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_16218(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16216 in k16212 in k16045 in k16038 in k16032 in k16029 in make-weighting in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_16218(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16050(t7,t6);}

/* k16048 in k16045 in k16038 in k16032 in k16029 in make-weighting in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_16050(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[35],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16050,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_16053,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[12],a[10]=((C_word*)t0)[13],a[11]=((C_word*)t0)[14],a[12]=((C_word*)t0)[15],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_16053(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[272]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16114,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 378  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[272]);}
else{
t6=t5;
f_16114(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[273]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16149,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 378  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[273]);}
else{
t7=t6;
f_16149(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16178,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 378  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_16178(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k16176 in k16048 in k16045 in k16038 in k16032 in k16029 in make-weighting in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_16178(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16178,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16185,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16193,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k16191 in k16176 in k16048 in k16045 in k16038 in k16032 in k16029 in make-weighting in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_16193(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 378  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_16185(2,t2,C_SCHEME_UNDEFINED);}}

/* k16183 in k16176 in k16048 in k16045 in k16038 in k16032 in k16029 in make-weighting in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_16185(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_16053(t5,t4);}

/* k16147 in k16048 in k16045 in k16038 in k16032 in k16029 in make-weighting in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_16149(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16149,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16153,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_16153(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16151 in k16147 in k16048 in k16045 in k16038 in k16032 in k16029 in make-weighting in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_16153(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16053(t7,t6);}

/* k16112 in k16048 in k16045 in k16038 in k16032 in k16029 in make-weighting in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_16114(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16114,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16118,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_16118(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16116 in k16112 in k16048 in k16045 in k16038 in k16032 in k16029 in make-weighting in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_16118(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16053(t7,t6);}

/* k16051 in k16048 in k16045 in k16038 in k16032 in k16029 in make-weighting in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_16053(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16053,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_16056,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[12],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_16056(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 378  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k16054 in k16051 in k16048 in k16045 in k16038 in k16032 in k16029 in make-weighting in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_16056(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16056,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16059,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[10],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_a_i_list(&a,1,((C_word*)t0)[7]);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16071,a[2]=((C_word)li229),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  initialize-pattern");
f_12623(t2,((C_word*)t0)[9],t3,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],C_retrieve2(lf[300],"next-in-weighting"),t4);}

/* a16070 in k16054 in k16051 in k16048 in k16045 in k16038 in k16032 in k16029 in make-weighting in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_16071(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_16071,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16077,a[2]=t2,a[3]=((C_word)li228),tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16093,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern-data");
f_12342(t5,t3);}

/* k16091 in a16070 in k16054 in k16051 in k16048 in k16045 in k16038 in k16032 in k16029 in make-weighting in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_16093(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_car(t1);
C_trace("for-each");
t3=*((C_word*)lf[208]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* a16076 in a16070 in k16054 in k16051 in k16048 in k16045 in k16038 in k16032 in k16029 in make-weighting in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_16077(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_16077,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16085,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  random-item-datum");
f_15854(t3,t2);}

/* k16083 in a16076 in a16070 in k16054 in k16051 in k16048 in k16045 in k16038 in k16032 in k16029 in make-weighting in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_16085(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  fn");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k16057 in k16054 in k16051 in k16048 in k16045 in k16038 in k16032 in k16029 in make-weighting in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_16059(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16059,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16062,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 378  recalc-weightings");
f_16794(t2,((C_word*)t0)[3],C_SCHEME_TRUE);}
else{
t3=t2;
f_16062(2,t3,C_SCHEME_UNDEFINED);}}

/* k16060 in k16057 in k16054 in k16051 in k16048 in k16045 in k16038 in k16032 in k16029 in make-weighting in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_16062(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* random-item-count in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_15944(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15944,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[290]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(6)));}

/* random-item-count-set! in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_15935(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15935,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[290]);
C_trace("ChickenBridge.scm: 378  ##sys#block-set!");
t5=*((C_word*)lf[225]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(6),t3);}

/* random-item-max in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_15926(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15926,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[290]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(5)));}

/* random-item-min in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_15908(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15908,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[290]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(4)));}

/* random-item-weight in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_15890(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15890,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[290]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(3)));}

/* random-item-index in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_15872(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15872,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[290]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* random-item-index-set! in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_15863(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15863,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[290]);
C_trace("ChickenBridge.scm: 378  ##sys#block-set!");
t5=*((C_word*)lf[225]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(2),t3);}

/* random-item-datum in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_15854(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15854,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[290]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* next-in-rotation in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_15632(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_15632,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15635,a[2]=((C_word)li218),tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15682,a[2]=t2,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  pattern-data");
f_12342(t4,t2);}

/* k15680 in next-in-rotation in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_15682(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15682,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15685,a[2]=((C_word*)t0)[4],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(t1);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(t1);
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15708,a[2]=((C_word*)t0)[2],a[3]=t4,a[4]=((C_word*)t0)[3],a[5]=t1,a[6]=t2,tmp=(C_word)a,a+=7,tmp);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15827,a[2]=t5,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  pattern-cache");
f_12558(t6,((C_word*)t0)[2]);}
else{
t4=t2;
f_15685(t4,C_SCHEME_UNDEFINED);}}

/* k15825 in k15680 in next-in-rotation in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_15827(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  next-1");
f_12964(((C_word*)t0)[2],t1);}

/* k15706 in k15680 in next-in-rotation in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_15708(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[32],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15708,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15715,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_pairp(t1))){
t3=(C_word)C_i_cdr(t1);
if(C_truep((C_word)C_i_pairp(t3))){
t4=(C_word)C_i_cddr(t1);
if(C_truep((C_word)C_i_pairp(t4))){
t5=(C_word)C_i_cdddr(t1);
if(C_truep((C_word)C_i_pairp(t5))){
C_apply(5,0,t2,((C_word*)t0)[4],((C_word*)t0)[3],t1);}
else{
t6=(C_word)C_i_car(t1);
t7=(C_word)C_i_cadr(t1);
t8=(C_word)C_i_caddr(t1);
t9=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_15762,a[2]=t8,a[3]=t7,a[4]=t6,a[5]=((C_word*)t0)[3],a[6]=t2,a[7]=((C_word*)t0)[4],a[8]=t1,tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 378  pattern-length");
f_12360(t9,((C_word*)t0)[2]);}}
else{
t5=(C_word)C_i_car(t1);
t6=(C_word)C_i_cadr(t1);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15789,a[2]=t6,a[3]=t5,a[4]=((C_word*)t0)[3],a[5]=t2,a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  pattern-length");
f_12360(t7,((C_word*)t0)[2]);}}
else{
t4=(C_word)C_i_car(t1);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15808,a[2]=t4,a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  pattern-length");
f_12360(t5,((C_word*)t0)[2]);}}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15823,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  pattern-length");
f_12360(t3,((C_word*)t0)[2]);}}

/* k15821 in k15706 in k15680 in next-in-rotation in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_15823(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15823,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 378  rotate-items");
t3=((C_word*)t0)[5];
f_15635(7,t3,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],C_fix(1),C_fix(1),t2);}

/* k15806 in k15706 in k15680 in next-in-rotation in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_15808(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15808,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 378  rotate-items");
t3=((C_word*)t0)[5];
f_15635(7,t3,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],C_fix(1),C_fix(1),t2);}

/* k15787 in k15706 in k15680 in next-in-rotation in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_15789(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15789,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 378  rotate-items");
t3=((C_word*)t0)[6];
f_15635(7,t3,((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],C_fix(1),t2);}

/* k15760 in k15706 in k15680 in next-in-rotation in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_15762(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15762,2,t0,t1);}
t2=(C_word)C_i_caddr(((C_word*)t0)[8]);
t3=(C_word)C_a_i_minus(&a,2,t1,t2);
C_trace("ChickenBridge.scm: 378  rotate-items");
t4=((C_word*)t0)[7];
f_15635(7,t4,((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t3);}

/* k15713 in k15706 in k15680 in next-in-rotation in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_15715(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_15685(t2,(C_word)C_i_set_cdr(((C_word*)t0)[2],t1));}

/* k15683 in k15680 in next-in-rotation in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_15685(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[3]);
t3=(C_word)C_i_car(t2);
t4=(C_word)C_i_cddr(((C_word*)t0)[3]);
t5=(C_word)C_i_set_cdr(((C_word*)t0)[3],t4);
t6=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t3);}

/* rotate-items in next-in-rotation in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_15635(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[10],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_15635,7,t0,t1,t2,t3,t4,t5,t6);}
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15641,a[2]=t8,a[3]=t4,a[4]=t5,a[5]=t2,a[6]=t6,a[7]=((C_word)li217),tmp=(C_word)a,a+=8,tmp));
t10=((C_word*)t8)[1];
f_15641(t10,t1,t3);}

/* do1890 in rotate-items in next-in-rotation in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_15641(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15641,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_lessp(t2,((C_word*)t0)[6]))){
t3=(C_word)C_i_list_ref(((C_word*)t0)[5],t2);
t4=(C_word)C_a_i_plus(&a,2,t2,((C_word*)t0)[4]);
t5=(C_word)C_i_list_ref(((C_word*)t0)[5],t4);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_15657,a[2]=t3,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[3],a[8]=t2,tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 378  list-set!");
t7=C_retrieve(lf[61]);
((C_proc5)C_retrieve_proc(t7))(5,t7,t6,((C_word*)t0)[5],t2,t5);}
else{
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)t0)[5]);}}

/* k15655 in do1890 in rotate-items in next-in-rotation in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_15657(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15657,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15660,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[8],((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 378  list-set!");
t4=C_retrieve(lf[61]);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,((C_word*)t0)[3],t3,((C_word*)t0)[2]);}

/* k15658 in k15655 in do1890 in rotate-items in next-in-rotation in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_15660(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15660,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_15641(t3,((C_word*)t0)[2],t2);}

/* make-rotation in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_15158(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+14)){
C_save_and_reclaim((void*)tr3r,(void*)f_15158r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_15158r(t0,t1,t2,t3);}}

static void C_ccall f_15158r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(14);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15162,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15622,a[2]=t5,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  append");
t7=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,((C_word*)t4)[1],C_SCHEME_END_OF_LIST);}
else{
t6=(C_word)C_a_i_list(&a,1,((C_word*)t4)[1]);
t7=C_set_block_item(t4,0,t6);
t8=t5;
f_15162(t8,t7);}}

/* k15620 in make-rotation in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_15622(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_15162(t3,t2);}

/* k15160 in make-rotation in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_15162(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word ab[59],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15162,NULL,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_fix(0);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=((C_word*)t0)[4];
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_15165,a[2]=t13,a[3]=t11,a[4]=t17,a[5]=t9,a[6]=((C_word*)t0)[4],a[7]=t15,a[8]=t5,a[9]=t3,a[10]=t7,a[11]=((C_word*)t0)[2],a[12]=((C_word*)t0)[3],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t15)[1]))){
t19=t18;
f_15165(t19,C_SCHEME_UNDEFINED);}
else{
t19=(C_word)C_i_car(((C_word*)t15)[1]);
t20=(C_word)C_eqp(t19,lf[272]);
if(C_truep(t20)){
t21=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15495,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t9,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 378  error");
t22=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t22))(4,t22,t21,lf[19],lf[272]);}
else{
t22=t21;
f_15495(2,t22,C_SCHEME_UNDEFINED);}}
else{
t21=(C_word)C_eqp(t19,lf[273]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15530,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t11,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("ChickenBridge.scm: 378  error");
t23=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[19],lf[273]);}
else{
t23=t22;
f_15530(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t19,lf[288]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15565,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t13,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 378  error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[19],lf[288]);}
else{
t24=t23;
f_15565(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15594,a[2]=t18,a[3]=t9,a[4]=t3,a[5]=t15,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t17)[1])){
C_trace("ChickenBridge.scm: 378  error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[10],((C_word*)t0)[4]);}
else{
t24=t23;
f_15594(2,t24,C_SCHEME_UNDEFINED);}}}}}}

/* k15592 in k15160 in make-rotation in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_15594(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15594,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15601,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15609,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k15607 in k15592 in k15160 in make-rotation in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_15609(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 378  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_15601(2,t2,C_SCHEME_UNDEFINED);}}

/* k15599 in k15592 in k15160 in make-rotation in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_15601(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_15165(t5,t4);}

/* k15563 in k15160 in make-rotation in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_15565(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15565,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15569,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_15569(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k15567 in k15563 in k15160 in make-rotation in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_15569(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15165(t7,t6);}

/* k15528 in k15160 in make-rotation in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_15530(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15530,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15534,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_15534(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k15532 in k15528 in k15160 in make-rotation in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_15534(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15165(t7,t6);}

/* k15493 in k15160 in make-rotation in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_15495(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15495,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15499,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_15499(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k15497 in k15493 in k15160 in make-rotation in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_15499(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15165(t7,t6);}

/* k15163 in k15160 in make-rotation in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_15165(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[43],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15165,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_15168,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_15168(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[272]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15360,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 378  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[272]);}
else{
t6=t5;
f_15360(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[273]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15395,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 378  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[273]);}
else{
t7=t6;
f_15395(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[288]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15430,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 378  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[288]);}
else{
t8=t7;
f_15430(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15459,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 378  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_15459(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k15457 in k15163 in k15160 in make-rotation in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_15459(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15459,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15466,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15474,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k15472 in k15457 in k15163 in k15160 in make-rotation in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_15474(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 378  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_15466(2,t2,C_SCHEME_UNDEFINED);}}

/* k15464 in k15457 in k15163 in k15160 in make-rotation in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_15466(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_15168(t5,t4);}

/* k15428 in k15163 in k15160 in make-rotation in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_15430(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15430,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15434,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_15434(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k15432 in k15428 in k15163 in k15160 in make-rotation in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_15434(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15168(t7,t6);}

/* k15393 in k15163 in k15160 in make-rotation in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_15395(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15395,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15399,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_15399(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k15397 in k15393 in k15163 in k15160 in make-rotation in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_15399(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15168(t7,t6);}

/* k15358 in k15163 in k15160 in make-rotation in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_15360(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15360,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15364,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_15364(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k15362 in k15358 in k15163 in k15160 in make-rotation in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_15364(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15168(t7,t6);}

/* k15166 in k15163 in k15160 in make-rotation in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_15168(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15168,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_15171,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[12],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_15171(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[272]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15225,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 378  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[272]);}
else{
t6=t5;
f_15225(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[273]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15260,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 378  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[273]);}
else{
t7=t6;
f_15260(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[288]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15295,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 378  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[288]);}
else{
t8=t7;
f_15295(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15324,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 378  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_15324(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k15322 in k15166 in k15163 in k15160 in make-rotation in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_15324(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15324,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15331,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15339,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k15337 in k15322 in k15166 in k15163 in k15160 in make-rotation in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_15339(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 378  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_15331(2,t2,C_SCHEME_UNDEFINED);}}

/* k15329 in k15322 in k15166 in k15163 in k15160 in make-rotation in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_15331(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_15171(t5,t4);}

/* k15293 in k15166 in k15163 in k15160 in make-rotation in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_15295(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15295,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15299,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_15299(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k15297 in k15293 in k15166 in k15163 in k15160 in make-rotation in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_15299(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15171(t7,t6);}

/* k15258 in k15166 in k15163 in k15160 in make-rotation in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_15260(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15260,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15264,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_15264(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k15262 in k15258 in k15166 in k15163 in k15160 in make-rotation in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_15264(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15171(t7,t6);}

/* k15223 in k15166 in k15163 in k15160 in make-rotation in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_15225(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15225,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15229,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_15229(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k15227 in k15223 in k15166 in k15163 in k15160 in make-rotation in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_15229(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15171(t7,t6);}

/* k15169 in k15166 in k15163 in k15160 in make-rotation in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_15171(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15171,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15174,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_15174(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 378  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k15172 in k15169 in k15166 in k15163 in k15160 in make-rotation in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_15174(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15174,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15177,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  %alloc-pattern");
f_12613(t2);}

/* k15175 in k15172 in k15169 in k15166 in k15163 in k15160 in make-rotation in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_15177(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15177,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[6])[1]);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15183,a[2]=((C_word*)t0)[4],a[3]=t1,a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[6])[1]);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15192,a[2]=((C_word)li215),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  initialize-pattern");
f_12623(t3,t1,t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t2,C_retrieve2(lf[287],"next-in-rotation"),t5);}

/* a15191 in k15175 in k15172 in k15169 in k15166 in k15163 in k15160 in make-rotation in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_15192(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_15192,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15204,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern-data");
f_12342(t4,t3);}

/* k15202 in a15191 in k15175 in k15172 in k15169 in k15166 in k15163 in k15160 in make-rotation in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_15204(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_car(t1);
C_trace("for-each");
t3=*((C_word*)lf[208]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k15181 in k15175 in k15172 in k15169 in k15166 in k15163 in k15160 in make-rotation in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_15183(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15183,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15186,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern-cache-set!");
f_12549(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k15184 in k15181 in k15175 in k15172 in k15169 in k15166 in k15163 in k15160 in make-rotation in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_15186(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* next-in-heap in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_15082(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_15082,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15086,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern-data");
f_12342(t3,t2);}

/* k15084 in next-in-heap in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_15086(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15086,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15089,a[2]=((C_word*)t0)[3],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(t1);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15105,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern-length");
f_12360(t4,((C_word*)t0)[2]);}
else{
t4=t2;
f_15089(2,t4,C_SCHEME_UNDEFINED);}}

/* k15103 in k15084 in next-in-heap in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_15105(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15105,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15115,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=((C_word*)t0)[3],a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  tb:rani");
f_7484(t3,t1);}

/* k15113 in k15103 in k15084 in next-in-heap in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_15115(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15115,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15117,a[2]=t3,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word)li213),tmp=(C_word)a,a+=7,tmp));
t5=((C_word*)t3)[1];
f_15117(t5,((C_word*)t0)[2],C_fix(0),t1,C_SCHEME_FALSE);}

/* do1790 in k15113 in k15103 in k15084 in next-in-heap in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_15117(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15117,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nequalp(t2,((C_word*)t0)[5]))){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_i_set_cdr(((C_word*)t0)[4],((C_word*)t0)[3]));}
else{
t6=(C_word)C_i_list_ref(((C_word*)t0)[3],t2);
t7=C_set_block_item(t5,0,t6);
t8=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_15134,a[2]=t3,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[5],a[5]=t5,a[6]=t1,a[7]=((C_word*)t0)[2],a[8]=t2,tmp=(C_word)a,a+=9,tmp);
t9=(C_word)C_i_list_ref(((C_word*)t0)[3],t3);
C_trace("ChickenBridge.scm: 378  list-set!");
t10=C_retrieve(lf[61]);
((C_proc5)C_retrieve_proc(t10))(5,t10,t8,((C_word*)t0)[3],t2,t9);}}

/* k15132 in do1790 in k15113 in k15103 in k15084 in next-in-heap in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_15134(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15134,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15137,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  list-set!");
t3=C_retrieve(lf[61]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,((C_word*)t0)[3],((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1]);}

/* k15135 in k15132 in do1790 in k15113 in k15103 in k15084 in next-in-heap in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_15137(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15137,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15148,a[2]=((C_word*)t0)[3],a[3]=t2,a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  tb:rani");
f_7484(t3,((C_word*)t0)[2]);}

/* k15146 in k15135 in k15132 in do1790 in k15113 in k15103 in k15084 in next-in-heap in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_15148(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[5])[1];
f_15117(t2,((C_word*)t0)[4],((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* k15087 in k15084 in next-in-heap in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_15089(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=(C_word)C_i_cadr(((C_word*)t0)[3]);
t3=(C_word)C_i_cddr(((C_word*)t0)[3]);
t4=(C_word)C_i_set_cdr(((C_word*)t0)[3],t3);
t5=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,t2);}

/* make-heap in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_14819(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+14)){
C_save_and_reclaim((void*)tr3r,(void*)f_14819r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_14819r(t0,t1,t2,t3);}}

static void C_ccall f_14819r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(14);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14823,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15072,a[2]=t5,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  append");
t7=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,((C_word*)t4)[1],C_SCHEME_END_OF_LIST);}
else{
t6=(C_word)C_a_i_list(&a,1,((C_word*)t4)[1]);
t7=C_set_block_item(t4,0,t6);
t8=t5;
f_14823(t8,t7);}}

/* k15070 in make-heap in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_15072(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_14823(t3,t2);}

/* k14821 in make-heap in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_14823(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14823,NULL,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=((C_word*)t0)[4];
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_14826,a[2]=t9,a[3]=t13,a[4]=t7,a[5]=((C_word*)t0)[4],a[6]=t11,a[7]=t5,a[8]=t3,a[9]=((C_word*)t0)[2],a[10]=((C_word*)t0)[3],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t11)[1]))){
t15=t14;
f_14826(t15,C_SCHEME_UNDEFINED);}
else{
t15=(C_word)C_i_car(((C_word*)t11)[1]);
t16=(C_word)C_eqp(t15,lf[272]);
if(C_truep(t16)){
t17=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14980,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t7,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t7)[1])){
C_trace("ChickenBridge.scm: 378  error");
t18=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t18))(4,t18,t17,lf[19],lf[272]);}
else{
t18=t17;
f_14980(2,t18,C_SCHEME_UNDEFINED);}}
else{
t17=(C_word)C_eqp(t15,lf[273]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15015,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 378  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[19],lf[273]);}
else{
t19=t18;
f_15015(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15044,a[2]=t14,a[3]=t7,a[4]=t3,a[5]=t11,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 378  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[10],((C_word*)t0)[4]);}
else{
t19=t18;
f_15044(2,t19,C_SCHEME_UNDEFINED);}}}}}

/* k15042 in k14821 in make-heap in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_15044(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15044,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15051,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15059,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k15057 in k15042 in k14821 in make-heap in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_15059(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 378  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_15051(2,t2,C_SCHEME_UNDEFINED);}}

/* k15049 in k15042 in k14821 in make-heap in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_15051(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_14826(t5,t4);}

/* k15013 in k14821 in make-heap in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_15015(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15015,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15019,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_15019(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k15017 in k15013 in k14821 in make-heap in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_15019(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_14826(t7,t6);}

/* k14978 in k14821 in make-heap in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_14980(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14980,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14984,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_14984(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14982 in k14978 in k14821 in make-heap in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_14984(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_14826(t7,t6);}

/* k14824 in k14821 in make-heap in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_14826(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14826,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14829,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_14829(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[272]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14880,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 378  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[272]);}
else{
t6=t5;
f_14880(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[273]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14915,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 378  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[273]);}
else{
t7=t6;
f_14915(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14944,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 378  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_14944(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k14942 in k14824 in k14821 in make-heap in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_14944(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14944,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14951,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14959,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k14957 in k14942 in k14824 in k14821 in make-heap in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_14959(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 378  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_14951(2,t2,C_SCHEME_UNDEFINED);}}

/* k14949 in k14942 in k14824 in k14821 in make-heap in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_14951(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_14829(t5,t4);}

/* k14913 in k14824 in k14821 in make-heap in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_14915(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14915,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14919,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_14919(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14917 in k14913 in k14824 in k14821 in make-heap in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_14919(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_14829(t7,t6);}

/* k14878 in k14824 in k14821 in make-heap in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_14880(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14880,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14884,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_14884(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14882 in k14878 in k14824 in k14821 in make-heap in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_14884(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_14829(t7,t6);}

/* k14827 in k14824 in k14821 in make-heap in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_14829(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14829,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14832,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_14832(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 378  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k14830 in k14827 in k14824 in k14821 in make-heap in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_14832(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14832,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14835,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  %alloc-pattern");
f_12613(t2);}

/* k14833 in k14830 in k14827 in k14824 in k14821 in make-heap in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_14835(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14835,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[5])[1]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14841,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[5])[1]);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14847,a[2]=((C_word)li211),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  initialize-pattern");
f_12623(t3,t1,t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t2,C_retrieve2(lf[285],"next-in-heap"),t5);}

/* a14846 in k14833 in k14830 in k14827 in k14824 in k14821 in make-heap in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_14847(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_14847,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14859,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern-data");
f_12342(t4,t3);}

/* k14857 in a14846 in k14833 in k14830 in k14827 in k14824 in k14821 in make-heap in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_14859(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_car(t1);
C_trace("for-each");
t3=*((C_word*)lf[208]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k14839 in k14833 in k14830 in k14827 in k14824 in k14821 in make-heap in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_14841(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* next-in-line in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_14783(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_14783,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14787,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern-data");
f_12342(t3,t2);}

/* k14785 in next-in-line in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_14787(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14787,2,t0,t1);}
t2=(C_word)C_i_cdr(t1);
if(C_truep((C_word)C_i_nullp(t2))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14796,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14803,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  pattern-period");
f_12396(t4,((C_word*)t0)[2]);}
else{
t3=(C_word)C_i_car(t1);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14809,a[2]=t3,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_cdr(t1);
C_trace("ChickenBridge.scm: 378  pattern-data-set!");
f_12333(t4,((C_word*)t0)[2],t5);}}

/* k14807 in k14785 in next-in-line in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_14809(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* k14801 in k14785 in next-in-line in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_14803(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  period-count-set!");
f_12165(((C_word*)t0)[2],t1,C_fix(1));}

/* k14794 in k14785 in next-in-line in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_14796(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_car(((C_word*)t0)[2]));}

/* make-line in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_14536(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+10)){
C_save_and_reclaim((void*)tr3r,(void*)f_14536r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_14536r(t0,t1,t2,t3);}}

static void C_ccall f_14536r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a=C_alloc(10);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14540,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=t5;
f_14540(t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_a_i_list(&a,1,((C_word*)t4)[1]);
t7=C_set_block_item(t4,0,t6);
t8=t5;
f_14540(t8,t7);}}

/* k14538 in make-line in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_14540(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14540,NULL,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=((C_word*)t0)[4];
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_14543,a[2]=t9,a[3]=t13,a[4]=t7,a[5]=((C_word*)t0)[4],a[6]=t11,a[7]=t5,a[8]=t3,a[9]=((C_word*)t0)[2],a[10]=((C_word*)t0)[3],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t11)[1]))){
t15=t14;
f_14543(t15,C_SCHEME_UNDEFINED);}
else{
t15=(C_word)C_i_car(((C_word*)t11)[1]);
t16=(C_word)C_eqp(t15,lf[272]);
if(C_truep(t16)){
t17=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14689,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t7,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t7)[1])){
C_trace("ChickenBridge.scm: 378  error");
t18=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t18))(4,t18,t17,lf[19],lf[272]);}
else{
t18=t17;
f_14689(2,t18,C_SCHEME_UNDEFINED);}}
else{
t17=(C_word)C_eqp(t15,lf[273]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14724,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 378  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[19],lf[273]);}
else{
t19=t18;
f_14724(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14753,a[2]=t14,a[3]=t7,a[4]=t3,a[5]=t11,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 378  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[10],((C_word*)t0)[4]);}
else{
t19=t18;
f_14753(2,t19,C_SCHEME_UNDEFINED);}}}}}

/* k14751 in k14538 in make-line in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_14753(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14753,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14760,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14768,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k14766 in k14751 in k14538 in make-line in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_14768(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 378  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_14760(2,t2,C_SCHEME_UNDEFINED);}}

/* k14758 in k14751 in k14538 in make-line in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_14760(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_14543(t5,t4);}

/* k14722 in k14538 in make-line in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_14724(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14724,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14728,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_14728(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14726 in k14722 in k14538 in make-line in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_14728(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_14543(t7,t6);}

/* k14687 in k14538 in make-line in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_14689(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14689,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14693,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_14693(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14691 in k14687 in k14538 in make-line in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_14693(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_14543(t7,t6);}

/* k14541 in k14538 in make-line in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_14543(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14543,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14546,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_14546(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[272]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14589,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 378  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[272]);}
else{
t6=t5;
f_14589(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[273]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14624,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 378  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[273]);}
else{
t7=t6;
f_14624(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14653,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 378  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_14653(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k14651 in k14541 in k14538 in make-line in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_14653(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14653,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14660,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14668,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k14666 in k14651 in k14541 in k14538 in make-line in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_14668(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 378  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_14660(2,t2,C_SCHEME_UNDEFINED);}}

/* k14658 in k14651 in k14541 in k14538 in make-line in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_14660(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_14546(t5,t4);}

/* k14622 in k14541 in k14538 in make-line in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_14624(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14624,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14628,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_14628(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14626 in k14622 in k14541 in k14538 in make-line in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_14628(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_14546(t7,t6);}

/* k14587 in k14541 in k14538 in make-line in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_14589(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14589,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14593,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_14593(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14591 in k14587 in k14541 in k14538 in make-line in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_14593(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_14546(t7,t6);}

/* k14544 in k14541 in k14538 in make-line in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_14546(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14546,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14549,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_14549(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 378  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k14547 in k14544 in k14541 in k14538 in make-line in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_14549(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14549,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14552,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  %alloc-pattern");
f_12613(t2);}

/* k14550 in k14547 in k14544 in k14541 in k14538 in make-line in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_14552(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14552,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[5])[1]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14558,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14560,a[2]=((C_word)li208),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  initialize-pattern");
f_12623(t3,t1,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t2,C_retrieve2(lf[283],"next-in-line"),t4);}

/* a14559 in k14550 in k14547 in k14544 in k14541 in k14538 in make-line in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_14560(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_14560,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14568,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern-data");
f_12342(t4,t3);}

/* k14566 in a14559 in k14550 in k14547 in k14544 in k14541 in k14538 in make-line in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_14568(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("for-each");
t2=*((C_word*)lf[208]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k14556 in k14550 in k14547 in k14544 in k14541 in k14538 in make-line in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_14558(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* next-in-palindrome in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_14321(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_14321,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14325,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern-cache");
f_12558(t3,t2);}

/* k14323 in next-in-palindrome in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_14325(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14325,2,t0,t1);}
t2=t1;
t3=(C_word)C_i_check_structure(t2,lf[275]);
t4=(C_word)C_i_block_ref(t2,C_fix(1));
t5=t4;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14331,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t6,a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_lessp(((C_word*)t6)[1],C_fix(0)))){
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14355,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t7,a[5]=t6,tmp=(C_word)a,a+=6,tmp);
t9=t1;
t10=(C_word)C_i_check_structure(t9,lf[275]);
t11=(C_word)C_i_block_ref(t9,C_fix(5));
C_trace("ChickenBridge.scm: 378  next-1");
f_12964(t8,t11);}
else{
t8=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14534,a[2]=t7,a[3]=t1,a[4]=t6,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  palin-len");
f_13762(t8,t1);}}

/* k14532 in k14323 in next-in-palindrome in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_14534(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14534,2,t0,t1);}
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[4])[1],t1))){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14487,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  palin-inc-set!");
f_13771(t2,((C_word*)t0)[3],C_fix(-1));}
else{
t2=((C_word*)t0)[2];
f_14331(2,t2,C_SCHEME_UNDEFINED);}}

/* k14485 in k14532 in k14323 in next-in-palindrome in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_14487(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14487,2,t0,t1);}
t2=((C_word*)t0)[4];
t3=(C_word)C_i_check_structure(t2,lf[275]);
t4=(C_word)C_i_block_ref(t2,C_fix(4));
t5=(C_word)C_eqp(t4,C_SCHEME_TRUE);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14499,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
if(C_truep(t5)){
t7=t6;
f_14499(t7,t5);}
else{
if(C_truep((C_word)C_i_pairp(t4))){
t7=(C_word)C_i_cdr(t4);
if(C_truep((C_word)C_i_pairp(t7))){
t8=(C_word)C_i_cadr(t4);
t9=t6;
f_14499(t9,(C_word)C_eqp(t8,C_SCHEME_TRUE));}
else{
t8=t6;
f_14499(t8,C_SCHEME_FALSE);}}
else{
t7=t6;
f_14499(t7,C_SCHEME_FALSE);}}}

/* k14497 in k14485 in k14532 in k14323 in next-in-palindrome in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_14499(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14499,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(2));
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_14331(2,t4,t3);}
else{
t2=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(1));
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_14331(2,t4,t3);}}

/* k14353 in k14323 in next-in-palindrome in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_14355(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14355,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14358,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  palin-len");
f_13762(t2,((C_word*)t0)[2]);}

/* k14356 in k14353 in k14323 in next-in-palindrome in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_14358(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14358,2,t0,t1);}
t2=(C_word)C_i_nequalp(((C_word*)((C_word*)t0)[6])[1],C_fix(-2));
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_14364,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[3],a[5]=t2,a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],a[8]=t1,tmp=(C_word)a,a+=9,tmp);
t4=((C_word*)t0)[2];
t5=((C_word*)t0)[5];
t6=(C_word)C_i_check_structure(t4,lf[275]);
C_trace("ChickenBridge.scm: 378  ##sys#block-set!");
t7=*((C_word*)lf[225]+1);
((C_proc5)(void*)(*((C_word*)t7+1)))(5,t7,t3,t4,C_fix(4),t5);}

/* k14362 in k14356 in k14353 in k14323 in next-in-palindrome in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_14364(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14364,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14367,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 378  palin-inc-set!");
f_13771(t2,((C_word*)t0)[2],C_fix(1));}

/* k14365 in k14362 in k14356 in k14353 in k14323 in next-in-palindrome in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_14367(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14367,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14370,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[6],C_SCHEME_TRUE);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14455,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
if(C_truep(t3)){
t5=t4;
f_14455(t5,t3);}
else{
if(C_truep((C_word)C_i_pairp(((C_word*)t0)[6]))){
t5=(C_word)C_i_car(((C_word*)t0)[6]);
t6=t4;
f_14455(t6,(C_word)C_eqp(t5,C_SCHEME_TRUE));}
else{
t5=t4;
f_14455(t5,C_SCHEME_FALSE);}}}

/* k14453 in k14365 in k14362 in k14356 in k14353 in k14323 in next-in-palindrome in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_14455(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
if(C_truep(t1)){
if(C_truep(((C_word*)t0)[4])){
t2=C_set_block_item(((C_word*)t0)[3],0,C_fix(0));
t3=((C_word*)t0)[2];
f_14370(t3,t2);}
else{
t2=C_set_block_item(((C_word*)t0)[3],0,C_fix(1));
t3=((C_word*)t0)[2];
f_14370(t3,t2);}}
else{
t2=C_set_block_item(((C_word*)t0)[3],0,C_fix(0));
t3=((C_word*)t0)[2];
f_14370(t3,t2);}}

/* k14368 in k14365 in k14362 in k14356 in k14353 in k14323 in next-in-palindrome in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_14370(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14370,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14376,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14449,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  pattern-flags");
f_12324(t3,((C_word*)t0)[2]);}

/* k14447 in k14368 in k14365 in k14362 in k14356 in k14353 in k14323 in next-in-palindrome in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_14449(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  bitwise-test");
f_7280(((C_word*)t0)[2],t1,C_fix(2));}

/* k14374 in k14368 in k14365 in k14362 in k14356 in k14353 in k14323 in next-in-palindrome in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_14376(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14376,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14379,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  pattern-period");
f_12396(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[4];
f_14331(2,t2,C_SCHEME_UNDEFINED);}}

/* k14377 in k14374 in k14368 in k14365 in k14362 in k14356 in k14353 in k14323 in next-in-palindrome in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_14379(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14379,2,t0,t1);}
t2=(C_word)C_a_i_times(&a,2,((C_word*)t0)[5],C_fix(2));
switch(((C_word*)t0)[4]){
case C_SCHEME_FALSE:
C_trace("ChickenBridge.scm: 378  period-count-set!");
f_12165(((C_word*)t0)[3],t1,t2);
case C_SCHEME_TRUE:
t3=(C_truep(((C_word*)t0)[2])?(C_word)C_a_i_minus(&a,2,t2,C_fix(2)):(C_word)C_a_i_minus(&a,2,t2,C_fix(3)));
C_trace("ChickenBridge.scm: 378  period-count-set!");
f_12165(((C_word*)t0)[3],t1,t3);
default:
if(C_truep((C_word)C_i_equalp(((C_word*)t0)[4],lf[280]))){
t3=(C_word)C_a_i_minus(&a,2,t2,C_fix(1));
C_trace("ChickenBridge.scm: 378  period-count-set!");
f_12165(((C_word*)t0)[3],t1,t3);}
else{
if(C_truep((C_word)C_i_equalp(((C_word*)t0)[4],lf[281]))){
t3=(C_truep(((C_word*)t0)[2])?(C_word)C_a_i_minus(&a,2,t2,C_fix(1)):(C_word)C_a_i_minus(&a,2,t2,C_fix(2)));
C_trace("ChickenBridge.scm: 378  period-count-set!");
f_12165(((C_word*)t0)[3],t1,t3);}
else{
C_trace("ChickenBridge.scm: 378  period-count-set!");
f_12165(((C_word*)t0)[3],t1,t2);}}}}

/* k14329 in k14323 in next-in-palindrome in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_14331(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14331,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14334,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t3=((C_word*)t0)[2];
t4=(C_word)C_i_check_structure(t3,lf[275]);
t5=(C_word)C_i_block_ref(t3,C_fix(3));
t6=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[4])[1],t5);
t7=((C_word*)t0)[2];
t8=(C_word)C_i_check_structure(t7,lf[275]);
C_trace("ChickenBridge.scm: 378  ##sys#block-set!");
t9=*((C_word*)lf[225]+1);
((C_proc5)(void*)(*((C_word*)t9+1)))(5,t9,t2,t7,C_fix(1),t6);}

/* k14332 in k14329 in k14323 in next-in-palindrome in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_14334(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14334,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14341,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern-data");
f_12342(t2,((C_word*)t0)[2]);}

/* k14339 in k14332 in k14329 in k14323 in next-in-palindrome in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_14341(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_list_ref(t1,((C_word*)((C_word*)t0)[2])[1]));}

/* make-palindrome in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_13851(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+10)){
C_save_and_reclaim((void*)tr3r,(void*)f_13851r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_13851r(t0,t1,t2,t3);}}

static void C_ccall f_13851r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a=C_alloc(10);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13855,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=t5;
f_13855(t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_a_i_list(&a,1,((C_word*)t4)[1]);
t7=C_set_block_item(t4,0,t6);
t8=t5;
f_13855(t8,t7);}}

/* k13853 in make-palindrome in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_13855(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word ab[59],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13855,NULL,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=((C_word*)t0)[4];
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_13858,a[2]=t13,a[3]=t11,a[4]=t17,a[5]=t9,a[6]=((C_word*)t0)[4],a[7]=t15,a[8]=t5,a[9]=t3,a[10]=t7,a[11]=((C_word*)t0)[2],a[12]=((C_word*)t0)[3],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t15)[1]))){
t19=t18;
f_13858(t19,C_SCHEME_UNDEFINED);}
else{
t19=(C_word)C_i_car(((C_word*)t15)[1]);
t20=(C_word)C_eqp(t19,lf[272]);
if(C_truep(t20)){
t21=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14192,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t9,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 378  error");
t22=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t22))(4,t22,t21,lf[19],lf[272]);}
else{
t22=t21;
f_14192(2,t22,C_SCHEME_UNDEFINED);}}
else{
t21=(C_word)C_eqp(t19,lf[273]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14227,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t11,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("ChickenBridge.scm: 378  error");
t23=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[19],lf[273]);}
else{
t23=t22;
f_14227(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t19,lf[279]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14262,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t13,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 378  error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[19],lf[279]);}
else{
t24=t23;
f_14262(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14291,a[2]=t18,a[3]=t9,a[4]=t3,a[5]=t15,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t17)[1])){
C_trace("ChickenBridge.scm: 378  error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[10],((C_word*)t0)[4]);}
else{
t24=t23;
f_14291(2,t24,C_SCHEME_UNDEFINED);}}}}}}

/* k14289 in k13853 in make-palindrome in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_14291(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14291,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14298,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14306,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k14304 in k14289 in k13853 in make-palindrome in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_14306(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 378  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_14298(2,t2,C_SCHEME_UNDEFINED);}}

/* k14296 in k14289 in k13853 in make-palindrome in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_14298(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_13858(t5,t4);}

/* k14260 in k13853 in make-palindrome in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_14262(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14262,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14266,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_14266(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14264 in k14260 in k13853 in make-palindrome in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_14266(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_13858(t7,t6);}

/* k14225 in k13853 in make-palindrome in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_14227(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14227,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14231,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_14231(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14229 in k14225 in k13853 in make-palindrome in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_14231(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_13858(t7,t6);}

/* k14190 in k13853 in make-palindrome in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_14192(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14192,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14196,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_14196(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14194 in k14190 in k13853 in make-palindrome in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_14196(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_13858(t7,t6);}

/* k13856 in k13853 in make-palindrome in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_13858(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[43],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13858,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_13861,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_13861(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[272]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14057,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 378  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[272]);}
else{
t6=t5;
f_14057(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[273]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14092,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 378  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[273]);}
else{
t7=t6;
f_14092(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[279]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14127,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 378  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[279]);}
else{
t8=t7;
f_14127(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14156,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 378  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_14156(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k14154 in k13856 in k13853 in make-palindrome in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_14156(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14156,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14163,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14171,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k14169 in k14154 in k13856 in k13853 in make-palindrome in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_14171(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 378  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_14163(2,t2,C_SCHEME_UNDEFINED);}}

/* k14161 in k14154 in k13856 in k13853 in make-palindrome in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_14163(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_13861(t5,t4);}

/* k14125 in k13856 in k13853 in make-palindrome in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_14127(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14127,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14131,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_14131(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14129 in k14125 in k13856 in k13853 in make-palindrome in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_14131(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_13861(t7,t6);}

/* k14090 in k13856 in k13853 in make-palindrome in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_14092(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14092,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14096,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_14096(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14094 in k14090 in k13856 in k13853 in make-palindrome in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_14096(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_13861(t7,t6);}

/* k14055 in k13856 in k13853 in make-palindrome in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_14057(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14057,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14061,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_14061(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14059 in k14055 in k13856 in k13853 in make-palindrome in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_14061(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_13861(t7,t6);}

/* k13859 in k13856 in k13853 in make-palindrome in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_13861(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13861,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_13864,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[12],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_13864(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[272]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13922,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 378  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[272]);}
else{
t6=t5;
f_13922(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[273]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13957,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 378  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[273]);}
else{
t7=t6;
f_13957(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[279]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13992,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 378  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[279]);}
else{
t8=t7;
f_13992(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14021,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 378  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_14021(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k14019 in k13859 in k13856 in k13853 in make-palindrome in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_14021(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14021,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14028,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14036,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k14034 in k14019 in k13859 in k13856 in k13853 in make-palindrome in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_14036(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 378  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_14028(2,t2,C_SCHEME_UNDEFINED);}}

/* k14026 in k14019 in k13859 in k13856 in k13853 in make-palindrome in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_14028(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_13864(t5,t4);}

/* k13990 in k13859 in k13856 in k13853 in make-palindrome in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_13992(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13992,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13996,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_13996(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13994 in k13990 in k13859 in k13856 in k13853 in make-palindrome in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_13996(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_13864(t7,t6);}

/* k13955 in k13859 in k13856 in k13853 in make-palindrome in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_13957(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13957,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13961,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_13961(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13959 in k13955 in k13859 in k13856 in k13853 in make-palindrome in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_13961(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_13864(t7,t6);}

/* k13920 in k13859 in k13856 in k13853 in make-palindrome in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_13922(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13922,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13926,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_13926(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13924 in k13920 in k13859 in k13856 in k13853 in make-palindrome in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_13926(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_13864(t7,t6);}

/* k13862 in k13859 in k13856 in k13853 in make-palindrome in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_13864(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13864,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13867,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_13867(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 378  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k13865 in k13862 in k13859 in k13856 in k13853 in make-palindrome in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_13867(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13867,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13870,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  %alloc-pattern");
f_12613(t2);}

/* k13868 in k13865 in k13862 in k13859 in k13856 in k13853 in make-palindrome in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_13870(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13870,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[6])[1]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13876,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[6],a[4]=t1,a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_a_i_times(&a,2,t2,C_fix(2));
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13893,a[2]=((C_word)li205),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  initialize-pattern");
f_12623(t3,t1,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t4,C_retrieve2(lf[278],"next-in-palindrome"),t5);}

/* a13892 in k13868 in k13865 in k13862 in k13859 in k13856 in k13853 in make-palindrome in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_13893(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_13893,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13901,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern-data");
f_12342(t4,t3);}

/* k13899 in a13892 in k13868 in k13865 in k13862 in k13859 in k13856 in k13853 in make-palindrome in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_13901(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("for-each");
t2=*((C_word*)lf[208]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k13874 in k13868 in k13865 in k13862 in k13859 in k13856 in k13853 in make-palindrome in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_13876(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13876,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13879,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_length(((C_word*)((C_word*)t0)[3])[1]);
t4=((C_word*)((C_word*)t0)[2])[1];
t5=(C_word)C_a_i_record(&a,6,lf[275],C_fix(-2),t3,C_SCHEME_FALSE,C_SCHEME_FALSE,t4);
C_trace("ChickenBridge.scm: 378  pattern-cache-set!");
f_12549(t2,((C_word*)t0)[4],t5);}

/* k13877 in k13874 in k13868 in k13865 in k13862 in k13859 in k13856 in k13853 in make-palindrome in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_13879(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* palin-inc-set! in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_13771(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13771,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[275]);
C_trace("ChickenBridge.scm: 378  ##sys#block-set!");
t5=*((C_word*)lf[225]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(3),t3);}

/* palin-len in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_13762(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13762,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[275]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* next-in-cycle in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_13690(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_13690,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13694,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  pattern-data");
f_12342(t3,t2);}

/* k13692 in next-in-cycle in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_13694(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13694,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13697,a[2]=((C_word*)t0)[2],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(t1);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(t1);
t5=t2;
f_13697(t5,(C_word)C_i_set_cdr(t1,t4));}
else{
t4=t2;
f_13697(t4,C_SCHEME_UNDEFINED);}}

/* k13695 in k13692 in next-in-cycle in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_13697(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=(C_word)C_i_cadr(((C_word*)t0)[3]);
t3=(C_word)C_i_cddr(((C_word*)t0)[3]);
t4=(C_word)C_i_set_cdr(((C_word*)t0)[3],t3);
t5=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,t2);}

/* make-cycle in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_13435(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+10)){
C_save_and_reclaim((void*)tr3r,(void*)f_13435r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_13435r(t0,t1,t2,t3);}}

static void C_ccall f_13435r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a=C_alloc(10);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13439,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=t5;
f_13439(t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_a_i_list(&a,1,((C_word*)t4)[1]);
t7=C_set_block_item(t4,0,t6);
t8=t5;
f_13439(t8,t7);}}

/* k13437 in make-cycle in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_13439(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13439,NULL,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=((C_word*)t0)[4];
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_13442,a[2]=t9,a[3]=t13,a[4]=t7,a[5]=((C_word*)t0)[4],a[6]=t11,a[7]=t5,a[8]=t3,a[9]=((C_word*)t0)[2],a[10]=((C_word*)t0)[3],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t11)[1]))){
t15=t14;
f_13442(t15,C_SCHEME_UNDEFINED);}
else{
t15=(C_word)C_i_car(((C_word*)t11)[1]);
t16=(C_word)C_eqp(t15,lf[272]);
if(C_truep(t16)){
t17=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13596,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t7,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t7)[1])){
C_trace("ChickenBridge.scm: 378  error");
t18=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t18))(4,t18,t17,lf[19],lf[272]);}
else{
t18=t17;
f_13596(2,t18,C_SCHEME_UNDEFINED);}}
else{
t17=(C_word)C_eqp(t15,lf[273]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13631,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 378  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[19],lf[273]);}
else{
t19=t18;
f_13631(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13660,a[2]=t14,a[3]=t7,a[4]=t3,a[5]=t11,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 378  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[10],((C_word*)t0)[4]);}
else{
t19=t18;
f_13660(2,t19,C_SCHEME_UNDEFINED);}}}}}

/* k13658 in k13437 in make-cycle in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_13660(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13660,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13667,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13675,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k13673 in k13658 in k13437 in make-cycle in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_13675(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 378  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_13667(2,t2,C_SCHEME_UNDEFINED);}}

/* k13665 in k13658 in k13437 in make-cycle in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_13667(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_13442(t5,t4);}

/* k13629 in k13437 in make-cycle in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_13631(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13631,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13635,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_13635(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13633 in k13629 in k13437 in make-cycle in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_13635(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_13442(t7,t6);}

/* k13594 in k13437 in make-cycle in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_13596(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13596,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13600,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_13600(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13598 in k13594 in k13437 in make-cycle in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_13600(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_13442(t7,t6);}

/* k13440 in k13437 in make-cycle in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_13442(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13442,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13445,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_13445(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[272]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13496,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 378  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[272]);}
else{
t6=t5;
f_13496(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[273]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13531,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 378  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[273]);}
else{
t7=t6;
f_13531(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13560,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 378  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_13560(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k13558 in k13440 in k13437 in make-cycle in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_13560(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13560,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13567,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13575,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k13573 in k13558 in k13440 in k13437 in make-cycle in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_13575(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 378  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_13567(2,t2,C_SCHEME_UNDEFINED);}}

/* k13565 in k13558 in k13440 in k13437 in make-cycle in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_13567(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_13445(t5,t4);}

/* k13529 in k13440 in k13437 in make-cycle in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_13531(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13531,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13535,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_13535(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13533 in k13529 in k13440 in k13437 in make-cycle in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_13535(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_13445(t7,t6);}

/* k13494 in k13440 in k13437 in make-cycle in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_13496(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13496,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13500,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_13500(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13498 in k13494 in k13440 in k13437 in make-cycle in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_13500(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_13445(t7,t6);}

/* k13443 in k13440 in k13437 in make-cycle in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_13445(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13445,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13448,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_13448(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 378  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k13446 in k13443 in k13440 in k13437 in make-cycle in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_13448(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13448,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13451,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  %alloc-pattern");
f_12613(t2);}

/* k13449 in k13446 in k13443 in k13440 in k13437 in make-cycle in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_13451(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13451,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[5])[1]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13457,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[5])[1]);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13463,a[2]=((C_word)li200),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  initialize-pattern");
f_12623(t3,t1,t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t2,C_retrieve2(lf[271],"next-in-cycle"),t5);}

/* a13462 in k13449 in k13446 in k13443 in k13440 in k13437 in make-cycle in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_13463(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_13463,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13475,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern-data");
f_12342(t4,t3);}

/* k13473 in a13462 in k13449 in k13446 in k13443 in k13440 in k13437 in make-cycle in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_13475(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_car(t1);
C_trace("for-each");
t3=*((C_word*)lf[208]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k13455 in k13449 in k13446 in k13443 in k13440 in k13437 in make-cycle in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_13457(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* reset-period in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_13320(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13320,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13433,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern?");
f_12309(t3,t2);}

/* k13431 in reset-period in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_13433(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13433,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13330,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern-period");
f_12396(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_fix(1));}}

/* k13328 in k13431 in reset-period in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_13330(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13330,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13333,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=t5,a[6]=t3,tmp=(C_word)a,a+=7,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13418,a[2]=t6,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  period-stream");
f_12210(t7,t1);}

/* k13416 in k13328 in k13431 in reset-period in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_13418(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13418,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13425,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13429,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  period-stream");
f_12210(t3,((C_word*)t0)[3]);}
else{
t2=((C_word*)t0)[2];
f_13333(2,t2,C_SCHEME_UNDEFINED);}}

/* k13427 in k13416 in k13328 in k13431 in reset-period in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_13429(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  next-1");
f_12964(((C_word*)t0)[2],t1);}

/* k13423 in k13416 in k13328 in k13431 in reset-period in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_13425(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=((C_word*)t0)[3];
t3=(C_word)C_i_check_structure(t2,lf[223]);
C_trace("ChickenBridge.scm: 378  ##sys#block-set!");
t4=*((C_word*)lf[225]+1);
((C_proc5)(void*)(*((C_word*)t4+1)))(5,t4,((C_word*)t0)[2],t2,C_fix(2),t1);}

/* k13331 in k13328 in k13431 in reset-period in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_13333(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13333,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13415,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  period-length");
f_12192(t2,((C_word*)t0)[3]);}

/* k13413 in k13331 in k13328 in k13431 in reset-period in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_13415(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13415,2,t0,t1);}
t2=(C_word)C_eqp(t1,C_SCHEME_TRUE);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13341,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
t5=((C_word*)t0)[3];
t6=(C_word)C_i_check_structure(t5,lf[223]);
t7=t4;
f_13341(2,t7,(C_word)C_i_block_ref(t5,C_fix(4)));}
else{
C_trace("ChickenBridge.scm: 378  period-length");
f_12192(t4,((C_word*)t0)[3]);}}

/* k13339 in k13413 in k13331 in k13328 in k13431 in reset-period in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_13341(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13341,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13344,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13350,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13405,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  pattern-flags");
f_12324(t5,((C_word*)t0)[3]);}
else{
t5=t4;
f_13350(2,t5,C_SCHEME_FALSE);}}

/* k13403 in k13339 in k13413 in k13331 in k13328 in k13431 in reset-period in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_13405(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  bitwise-test");
f_7280(((C_word*)t0)[2],t1,C_fix(8));}

/* k13348 in k13339 in k13413 in k13331 in k13328 in k13431 in reset-period in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_13350(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13350,2,t0,t1);}
if(C_truep(t1)){
t2=C_fix(0);
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13353,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t3,tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13369,a[2]=t3,a[3]=((C_word)li198),tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  map-pattern-data");
f_13274(t4,t5,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_13344(t2,C_SCHEME_UNDEFINED);}}

/* a13368 in k13348 in k13339 in k13413 in k13331 in k13328 in k13431 in reset-period in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_13369(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_13369,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13398,a[2]=t2,a[3]=t1,a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  reset-period");
f_13320(t3,t2);}

/* k13396 in a13368 in k13348 in k13339 in k13413 in k13331 in k13328 in k13431 in reset-period in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_13398(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13398,2,t0,t1);}
if(C_truep((C_word)C_i_nequalp(t1,C_fix(0)))){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13379,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern-period");
f_12396(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}}

/* k13377 in k13396 in a13368 in k13348 in k13339 in k13413 in k13331 in k13328 in k13431 in reset-period in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_13379(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13379,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13382,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13394,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  period-omit");
f_12246(t3,t1);}

/* k13392 in k13377 in k13396 in a13368 in k13348 in k13339 in k13413 in k13331 in k13328 in k13431 in reset-period in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_13394(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13394,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 378  period-omit-set!");
f_12237(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k13380 in k13377 in k13396 in a13368 in k13348 in k13339 in k13413 in k13331 in k13328 in k13431 in reset-period in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_13382(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13382,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(1));
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t3);}

/* k13351 in k13348 in k13339 in k13413 in k13331 in k13328 in k13431 in reset-period in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_13353(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13353,2,t0,t1);}
if(C_truep((C_word)C_i_greaterp(((C_word*)((C_word*)t0)[4])[1],C_fix(0)))){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13363,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 378  max");
t4=*((C_word*)lf[269]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,t3,C_fix(0));}
else{
t2=((C_word*)t0)[2];
f_13344(t2,C_SCHEME_UNDEFINED);}}

/* k13361 in k13351 in k13348 in k13339 in k13413 in k13331 in k13328 in k13431 in reset-period in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_13363(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_13344(t3,t2);}

/* k13342 in k13339 in k13413 in k13331 in k13328 in k13431 in reset-period in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_13344(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13344,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13347,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  period-count-set!");
f_12165(t2,((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}

/* k13345 in k13342 in k13339 in k13413 in k13331 in k13328 in k13431 in reset-period in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_13347(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* map-pattern-data in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_13274(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13274,NULL,3,t1,t2,t3);}
t4=t3;
t5=(C_word)C_i_check_structure(t4,lf[233]);
t6=(C_word)C_i_block_ref(t4,C_fix(13));
t7=t6;
((C_proc4)C_retrieve_proc(t7))(4,t7,t1,t2,t3);}

/* next-in-pattern in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_13265(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13265,NULL,2,t1,t2);}
t3=t2;
t4=(C_word)C_i_check_structure(t3,lf[233]);
t5=(C_word)C_i_block_ref(t3,C_fix(12));
t6=t5;
((C_proc3)C_retrieve_proc(t6))(3,t6,t1,t2);}

/* next-1 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_12964(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12964,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12971,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern?");
f_12309(t3,t2);}

/* k12969 in next-1 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_12971(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12971,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12974,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern-period");
f_12396(t2,((C_word*)t0)[2]);}
else{
if(C_truep((C_word)C_i_closurep(((C_word*)t0)[2]))){
C_trace("ChickenBridge.scm: 378  obj");
t2=((C_word*)t0)[2];
((C_proc2)C_retrieve_proc(t2))(2,t2,((C_word*)t0)[3]);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13260,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  promise?");
t3=C_retrieve(lf[268]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}}}

/* k13258 in k12969 in next-1 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_13260(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 378  force");
t2=C_retrieve(lf[267]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}}

/* k12972 in k12969 in next-1 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_12974(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12974,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12977,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13245,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t4,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  period-count");
f_12174(t5,t1);}

/* k13243 in k12972 in k12969 in next-1 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_13245(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13245,2,t0,t1);}
if(C_truep((C_word)C_i_nequalp(t1,C_fix(0)))){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13200,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13237,a[2]=t2,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  period-reps");
f_12264(t3,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[4];
f_12977(2,t2,C_SCHEME_UNDEFINED);}}

/* k13235 in k13243 in k12972 in k12969 in next-1 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_13237(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13237,2,t0,t1);}
t2=((C_word*)t0)[4];
t3=(C_word)C_i_check_structure(t2,lf[233]);
t4=(C_word)C_i_block_ref(t2,C_fix(8));
if(C_truep((C_word)C_i_greater_or_equalp(t1,t4))){
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13229,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  pattern-value-set!");
f_12405(t5,((C_word*)t0)[4],lf[262]);}
else{
t5=((C_word*)t0)[2];
f_13200(t5,C_SCHEME_UNDEFINED);}}

/* k13227 in k13235 in k13243 in k12972 in k12969 in next-1 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_13229(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13229,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13232,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern-state-set!");
f_12423(t2,((C_word*)t0)[2],lf[260]);}

/* k13230 in k13227 in k13235 in k13243 in k12972 in k12969 in next-1 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_13232(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[262]);
t3=((C_word*)t0)[2];
f_13200(t3,t2);}

/* k13198 in k13243 in k12972 in k12969 in next-1 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_13200(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13200,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13206,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=((C_word*)((C_word*)t0)[4])[1];
if(C_truep(t3)){
t4=t2;
f_13206(t4,C_SCHEME_FALSE);}
else{
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13223,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  reset-period");
f_13320(t4,((C_word*)t0)[2]);}}

/* k13221 in k13198 in k13243 in k12972 in k12969 in next-1 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_13223(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_13206(t2,(C_word)C_i_nequalp(t1,C_fix(0)));}

/* k13204 in k13198 in k13243 in k12972 in k12969 in next-1 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_13206(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13206,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,lf[248]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13210,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern-value-set!");
f_12405(t3,((C_word*)t0)[2],lf[248]);}
else{
t2=((C_word*)t0)[3];
f_12977(2,t2,C_SCHEME_UNDEFINED);}}

/* k13208 in k13204 in k13198 in k13243 in k12972 in k12969 in next-1 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_13210(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  pattern-state-set!");
f_12423(((C_word*)t0)[3],((C_word*)t0)[2],lf[260]);}

/* k12975 in k12972 in k12969 in next-1 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_12977(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12977,2,t0,t1);}
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[5])[1]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12983,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  pattern-flags");
f_12324(t2,((C_word*)t0)[3]);}}

/* k12981 in k12975 in k12972 in k12969 in next-1 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_12983(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12983,2,t0,t1);}
t2=((C_word*)t0)[4];
t3=(C_word)C_i_check_structure(t2,lf[233]);
t4=(C_word)C_i_block_ref(t2,C_fix(9));
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_12989,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t4,a[5]=t8,a[6]=((C_word*)t0)[4],a[7]=t6,a[8]=((C_word*)t0)[3],tmp=(C_word)a,a+=9,tmp);
t10=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13075,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],a[5]=t9,a[6]=t8,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 378  bitwise-test");
f_7280(t10,t1,C_fix(1));}

/* k13073 in k12981 in k12975 in k12972 in k12969 in next-1 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_13075(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13075,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13078,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13091,a[2]=((C_word*)t0)[4],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  next-in-pattern");
f_13265(t3,((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13098,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13187,a[2]=((C_word*)t0)[3],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  bitwise-test");
f_7280(t3,((C_word*)t0)[2],C_fix(8));}}

/* k13185 in k13073 in k12981 in k12975 in k12972 in k12969 in next-1 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_13187(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13187,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13194,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  period-length");
f_12192(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_13098(t2,C_SCHEME_FALSE);}}

/* k13192 in k13185 in k13073 in k12981 in k12975 in k12972 in k12969 in next-1 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_13194(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_13098(t2,(C_word)C_eqp(t1,C_SCHEME_TRUE));}

/* k13096 in k13073 in k12981 in k12975 in k12972 in k12969 in next-1 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_13098(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13098,NULL,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13100,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t3,a[5]=((C_word*)t0)[5],a[6]=((C_word)li194),tmp=(C_word)a,a+=7,tmp));
t5=((C_word*)t3)[1];
f_13100(t5,((C_word*)t0)[2],t1,C_SCHEME_FALSE);}

/* do1438 in k13096 in k13073 in k12981 in k12975 in k12972 in k12969 in next-1 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_13100(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13100,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
if(C_truep(((C_word*)t4)[1])){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_FALSE);}
else{
t5=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_13107,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t4,a[5]=t2,a[6]=t1,a[7]=((C_word*)t0)[4],a[8]=((C_word*)t0)[5],tmp=(C_word)a,a+=9,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13149,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=t7,a[5]=((C_word)li193),tmp=(C_word)a,a+=6,tmp));
t9=((C_word*)t7)[1];
f_13149(t9,t5);}}

/* do1442 in do1438 in k13096 in k13073 in k12981 in k12975 in k12972 in k12969 in next-1 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_13149(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13149,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13184,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  pattern-datum");
f_12378(t2,((C_word*)t0)[3]);}

/* k13182 in do1442 in do1438 in k13096 in k13073 in k12981 in k12975 in k12972 in k12969 in next-1 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_13184(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13184,2,t0,t1);}
t2=(C_word)C_eqp(t1,lf[248]);
if(C_truep(t2)){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13159,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13166,a[2]=((C_word*)t0)[3],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
if(C_truep(((C_word*)t0)[2])){
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13173,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  next-in-pattern");
f_13265(t5,((C_word*)t0)[3]);}
else{
C_trace("ChickenBridge.scm: 378  next-in-pattern");
f_13265(t4,((C_word*)t0)[3]);}}
else{
t3=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}}

/* k13171 in k13182 in do1442 in do1438 in k13096 in k13073 in k12981 in k12975 in k12972 in k12969 in next-1 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_13173(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13173,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13318,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern?");
f_12309(t2,t1);}

/* k13316 in k13171 in k13182 in do1442 in do1438 in k13096 in k13073 in k12981 in k12975 in k12972 in k12969 in next-1 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_13318(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13318,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13293,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern-period");
f_12396(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_13166(2,t2,((C_word*)t0)[2]);}}

/* k13291 in k13316 in k13171 in k13182 in do1442 in do1438 in k13096 in k13073 in k12981 in k12975 in k12972 in k12969 in next-1 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_13293(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13293,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13314,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  period-omit");
f_12246(t2,t1);}

/* k13312 in k13291 in k13316 in k13171 in k13182 in do1442 in do1438 in k13096 in k13073 in k12981 in k12975 in k12972 in k12969 in next-1 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_13314(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13314,2,t0,t1);}
if(C_truep((C_word)C_i_greaterp(t1,C_fix(0)))){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13302,a[2]=((C_word*)t0)[4],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13310,a[2]=((C_word*)t0)[3],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  period-omit");
f_12246(t3,((C_word*)t0)[3]);}
else{
t2=((C_word*)t0)[4];
f_13166(2,t2,((C_word*)t0)[2]);}}

/* k13308 in k13312 in k13291 in k13316 in k13171 in k13182 in do1442 in do1438 in k13096 in k13073 in k12981 in k12975 in k12972 in k12969 in next-1 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_13310(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13310,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 378  period-omit-set!");
f_12237(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k13300 in k13312 in k13291 in k13316 in k13171 in k13182 in do1442 in do1438 in k13096 in k13073 in k12981 in k12975 in k12972 in k12969 in next-1 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_13302(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_13166(2,t2,lf[248]);}

/* k13164 in k13182 in do1442 in do1438 in k13096 in k13073 in k12981 in k12975 in k12972 in k12969 in next-1 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_13166(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  pattern-datum-set!");
f_12369(((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k13157 in k13182 in do1442 in do1438 in k13096 in k13073 in k12981 in k12975 in k12972 in k12969 in next-1 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_13159(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[3])[1];
f_13149(t2,((C_word*)t0)[2]);}

/* k13105 in do1438 in k13096 in k13073 in k12981 in k12975 in k12972 in k12969 in next-1 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_13107(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13107,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_13111,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13147,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  pattern-datum");
f_12378(t3,((C_word*)t0)[3]);}

/* k13145 in k13105 in do1438 in k13096 in k13073 in k12981 in k12975 in k12972 in k12969 in next-1 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_13147(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  next-1");
f_12964(((C_word*)t0)[2],t1);}

/* k13109 in k13105 in do1438 in k13096 in k13073 in k12981 in k12975 in k12972 in k12969 in next-1 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_13111(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13111,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13114,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13130,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13143,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  pattern-datum");
f_12378(t5,((C_word*)t0)[3]);}

/* k13141 in k13109 in k13105 in do1438 in k13096 in k13073 in k12981 in k12975 in k12972 in k12969 in next-1 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_13143(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  pattern?");
f_12309(((C_word*)t0)[2],t1);}

/* k13128 in k13109 in k13105 in do1438 in k13096 in k13073 in k12981 in k12975 in k12972 in k12969 in next-1 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_13130(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13130,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13134,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13138,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  pattern-datum");
f_12378(t3,((C_word*)t0)[2]);}
else{
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,lf[260]);
t3=((C_word*)t0)[3];
f_13114(t3,t2);}}

/* k13136 in k13128 in k13109 in k13105 in do1438 in k13096 in k13073 in k12981 in k12975 in k12972 in k12969 in next-1 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_13138(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  pattern-state");
f_12432(((C_word*)t0)[2],t1);}

/* k13132 in k13128 in k13109 in k13105 in do1438 in k13096 in k13073 in k12981 in k12975 in k12972 in k12969 in next-1 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_13134(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_13114(t3,t2);}

/* k13112 in k13109 in k13105 in do1438 in k13096 in k13073 in k12981 in k12975 in k12972 in k12969 in next-1 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_13114(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13114,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13117,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[3])[1],lf[248]);
if(C_truep(t3)){
C_trace("ChickenBridge.scm: 378  pattern-datum-set!");
f_12369(t2,((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}
else{
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=t2;
f_13117(2,t5,t4);}}

/* k13115 in k13112 in k13109 in k13105 in do1438 in k13096 in k13073 in k12981 in k12975 in k12972 in k12969 in next-1 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_13117(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[5])[1];
f_13100(t2,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k13089 in k13073 in k12981 in k12975 in k12972 in k12969 in next-1 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_13091(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  pattern-datum-set!");
f_12369(((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k13076 in k13073 in k12981 in k12975 in k12972 in k12969 in next-1 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_13078(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13078,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13082,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13087,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  pattern-datum");
f_12378(t3,((C_word*)t0)[2]);}

/* k13085 in k13076 in k13073 in k12981 in k12975 in k12972 in k12969 in next-1 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_13087(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  next-1");
f_12964(((C_word*)t0)[2],t1);}

/* k13080 in k13076 in k13073 in k12981 in k12975 in k12972 in k12969 in next-1 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_13082(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[260]);
t4=((C_word*)t0)[2];
f_12989(2,t4,t3);}

/* k12987 in k12981 in k12975 in k12972 in k12969 in next-1 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_12989(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12989,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12992,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[5])[1],lf[260]);
if(C_truep(t3)){
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13034,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13046,a[2]=((C_word*)t0)[3],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  period-count");
f_12174(t5,((C_word*)t0)[3]);}
else{
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13049,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13069,a[2]=((C_word*)t0)[6],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  bitwise-test");
f_7280(t5,((C_word*)t0)[2],C_fix(64));}}

/* k13067 in k12987 in k12981 in k12975 in k12972 in k12969 in next-1 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_13069(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 378  pattern-datum-set!");
f_12369(((C_word*)t0)[3],((C_word*)t0)[2],lf[248]);}
else{
t2=((C_word*)t0)[3];
f_13049(2,t2,C_SCHEME_UNDEFINED);}}

/* k13047 in k12987 in k12981 in k12975 in k12972 in k12969 in next-1 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_13049(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13049,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13055,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  bitwise-test");
f_7280(t2,((C_word*)t0)[2],C_fix(16));}

/* k13053 in k13047 in k12987 in k12981 in k12975 in k12972 in k12969 in next-1 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_13055(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13055,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13066,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  period-count");
f_12174(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_12992(2,t2,C_SCHEME_UNDEFINED);}}

/* k13064 in k13053 in k13047 in k12987 in k12981 in k12975 in k12972 in k12969 in next-1 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_13066(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13066,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 378  period-count-set!");
f_12165(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k13044 in k12987 in k12981 in k12975 in k12972 in k12969 in next-1 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_13046(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13046,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 378  period-count-set!");
f_12165(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k13032 in k12987 in k12981 in k12975 in k12972 in k12969 in next-1 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_13034(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13034,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13037,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern-datum-set!");
f_12369(t2,((C_word*)t0)[2],lf[248]);}

/* k13035 in k13032 in k12987 in k12981 in k12975 in k12972 in k12969 in next-1 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_13037(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_FALSE);
t3=((C_word*)t0)[2];
f_12992(2,t3,t2);}

/* k12990 in k12987 in k12981 in k12975 in k12972 in k12969 in next-1 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_12992(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12992,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12995,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13028,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  period-count");
f_12174(t3,((C_word*)t0)[2]);}

/* k13026 in k12990 in k12987 in k12981 in k12975 in k12972 in k12969 in next-1 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_13028(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13028,2,t0,t1);}
if(C_truep((C_word)C_i_nequalp(t1,C_fix(0)))){
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,lf[260]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13023,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  period-reps");
f_12264(t3,((C_word*)t0)[3]);}
else{
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[4])[1]);
t3=((C_word*)t0)[2];
f_12995(2,t3,t2);}}

/* k13021 in k13026 in k12990 in k12987 in k12981 in k12975 in k12972 in k12969 in next-1 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_13023(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13023,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,C_fix(1),t1);
t3=((C_word*)t0)[3];
t4=(C_word)C_i_check_structure(t3,lf[223]);
C_trace("ChickenBridge.scm: 378  ##sys#block-set!");
t5=*((C_word*)lf[225]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,((C_word*)t0)[2],t3,C_fix(6),t2);}

/* k12993 in k12990 in k12987 in k12981 in k12975 in k12972 in k12969 in next-1 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_12995(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12995,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12998,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t0)[2])){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13008,a[2]=t2,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  retfn");
t4=((C_word*)t0)[2];
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[5])[1]);}
else{
t3=t2;
f_12998(t3,C_SCHEME_UNDEFINED);}}

/* k13006 in k12993 in k12990 in k12987 in k12981 in k12975 in k12972 in k12969 in next-1 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_13008(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_12998(t3,t2);}

/* k12996 in k12993 in k12990 in k12987 in k12981 in k12975 in k12972 in k12969 in next-1 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_12998(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12998,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13001,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  pattern-state-set!");
f_12423(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k12999 in k12996 in k12993 in k12990 in k12987 in k12981 in k12975 in k12972 in k12969 in next-1 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_13001(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13001,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13004,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern-value-set!");
f_12405(t2,((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}

/* k13002 in k12999 in k12996 in k12993 in k12990 in k12987 in k12981 in k12975 in k12972 in k12969 in next-1 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_13004(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* next in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_12841(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+16)){
C_save_and_reclaim((void*)tr3rv,(void*)f_12841r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest_vector(a,C_rest_count(0));
f_12841r(t0,t1,t2,t3);}}

static void C_ccall f_12841r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a=C_alloc(16);
t4=(C_word)C_vemptyp(t3);
t5=(C_truep(t4)?C_SCHEME_FALSE:(C_word)C_i_vector_ref(t3,C_fix(0)));
if(C_truep(t5)){
if(C_truep((C_word)C_i_numberp(t5))){
t6=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12862,a[2]=t2,a[3]=t8,a[4]=t6,a[5]=t5,a[6]=((C_word)li190),tmp=(C_word)a,a+=7,tmp));
t10=((C_word*)t8)[1];
f_12862(t10,t1,C_fix(0),t6);}
else{
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12900,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern?");
f_12309(t6,t2);}}
else{
C_trace("ChickenBridge.scm: 378  next-1");
f_12964(t1,t2);}}

/* k12898 in next in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_12900(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12900,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12910,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  next-1");
f_12964(t3,((C_word*)t0)[3]);}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_list(&a,1,((C_word*)t0)[3]));}}

/* k12908 in k12898 in next in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_12910(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12910,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12912,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word*)t0)[4],a[5]=((C_word)li191),tmp=(C_word)a,a+=6,tmp));
t5=((C_word*)t3)[1];
f_12912(t5,((C_word*)t0)[2],t1,((C_word*)t0)[4],C_SCHEME_FALSE);}

/* do1414 in k12908 in k12898 in next in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_12912(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12912,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t7=(C_word)C_eqp(((C_word*)t5)[1],lf[262]);
t8=(C_truep(t7)?t7:((C_word*)t6)[1]);
if(C_truep(t8)){
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,(C_word)C_i_cdr(((C_word*)t0)[4]));}
else{
t9=(C_word)C_a_i_list(&a,1,((C_word*)t5)[1]);
t10=(C_word)C_i_set_cdr(t3,t9);
t11=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12931,a[2]=t6,a[3]=t5,a[4]=t1,a[5]=((C_word*)t0)[3],a[6]=t3,tmp=(C_word)a,a+=7,tmp);
t12=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12941,a[2]=((C_word*)t0)[2],a[3]=t5,a[4]=t11,a[5]=t6,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  eop?");
t13=C_retrieve(lf[259]);
((C_proc3)C_retrieve_proc(t13))(3,t13,t12,((C_word*)t0)[2]);}}

/* k12939 in do1414 in k12908 in k12898 in next in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_12941(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12941,2,t0,t1);}
if(C_truep(t1)){
t2=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t3=((C_word*)t0)[4];
f_12931(t3,t2);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12946,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  next-1");
f_12964(t2,((C_word*)t0)[2]);}}

/* k12944 in k12939 in do1414 in k12908 in k12898 in next in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_12946(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_12931(t3,t2);}

/* k12929 in do1414 in k12908 in k12898 in next in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_12931(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[6]);
t3=((C_word*)((C_word*)t0)[5])[1];
f_12912(t3,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],t2,((C_word*)((C_word*)t0)[2])[1]);}

/* do1407 in next in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_12862(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12862,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_greater_or_equalp(t2,((C_word*)t0)[5]))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_cdr(((C_word*)t0)[4]));}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12894,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  next-1");
f_12964(t4,((C_word*)t0)[2]);}}

/* k12892 in do1407 in next in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_12894(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12894,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
t3=(C_word)C_i_set_cdr(((C_word*)t0)[5],t2);
t4=(C_word)C_a_i_plus(&a,2,C_fix(1),((C_word*)t0)[4]);
t5=(C_word)C_i_cdr(((C_word*)t0)[5]);
t6=((C_word*)((C_word*)t0)[3])[1];
f_12862(t6,((C_word*)t0)[2],t4,t5);}

/* eod? in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_12822(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_12822,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12829,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern?");
f_12309(t3,t2);}

/* k12827 in eod? in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_12829(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12829,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12836,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  pattern-value");
t3=C_retrieve2(lf[242],"pattern-value");
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_eqp(((C_word*)t0)[2],lf[262]));}}

/* k12834 in k12827 in eod? in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_12836(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  eod?");
t2=C_retrieve(lf[261]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* eop? in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_12803(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_12803,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12810,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern?");
f_12309(t3,t2);}

/* k12808 in eop? in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_12810(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12810,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12817,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  pattern-state");
f_12432(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_eqp(((C_word*)t0)[2],lf[260]));}}

/* k12815 in k12808 in eop? in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_12817(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  eop?");
t2=C_retrieve(lf[259]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* initialize-pattern in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_12623(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7,C_word t8,C_word t9,C_word t10){
C_word tmp;
C_word t11;
C_word t12;
C_word t13;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12623,NULL,10,t1,t2,t3,t4,t5,t6,t7,t8,t9,t10);}
t11=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_12627,a[2]=t7,a[3]=t10,a[4]=t9,a[5]=t5,a[6]=t11,a[7]=t1,a[8]=t8,a[9]=t4,a[10]=t2,tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 378  pattern-data-set!");
f_12333(t12,t2,t3);}

/* k12625 in initialize-pattern in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_12627(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12627,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_12630,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],tmp=(C_word)a,a+=10,tmp);
t3=((C_word*)t0)[10];
t4=((C_word*)t0)[2];
t5=(C_word)C_i_check_structure(t3,lf[233]);
C_trace("ChickenBridge.scm: 378  ##sys#block-set!");
t6=*((C_word*)lf[225]+1);
((C_proc5)(void*)(*((C_word*)t6+1)))(5,t6,t2,t3,C_fix(3),t4);}

/* k12628 in k12625 in initialize-pattern in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_12630(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12630,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_12633,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],tmp=(C_word)a,a+=9,tmp);
t3=((C_word*)t0)[9];
t4=((C_word*)t0)[2];
t5=(C_word)C_i_check_structure(t3,lf[233]);
C_trace("ChickenBridge.scm: 378  ##sys#block-set!");
t6=*((C_word*)lf[225]+1);
((C_proc5)(void*)(*((C_word*)t6+1)))(5,t6,t2,t3,C_fix(13),t4);}

/* k12631 in k12628 in k12625 in initialize-pattern in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_12633(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12633,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12636,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
t3=((C_word*)t0)[8];
t4=((C_word*)t0)[2];
t5=(C_word)C_i_check_structure(t3,lf[233]);
C_trace("ChickenBridge.scm: 378  ##sys#block-set!");
t6=*((C_word*)lf[225]+1);
((C_proc5)(void*)(*((C_word*)t6+1)))(5,t6,t2,t3,C_fix(12),t4);}

/* k12634 in k12631 in k12628 in k12625 in initialize-pattern in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_12636(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12636,2,t0,t1);}
t2=C_SCHEME_TRUE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_12639,a[2]=t3,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12793,a[2]=t3,a[3]=((C_word)li186),tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  map-pattern-data");
f_13274(t4,t5,((C_word*)t0)[7]);}

/* a12792 in k12634 in k12631 in k12628 in k12625 in initialize-pattern in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_12793(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_12793,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12800,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern?");
f_12309(t3,t2);}

/* k12798 in a12792 in k12634 in k12631 in k12628 in k12625 in initialize-pattern in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_12800(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_FALSE);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}}

/* k12637 in k12634 in k12631 in k12628 in k12625 in initialize-pattern in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_12639(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12639,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12642,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
t3=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[4])[1],C_fix(1));
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=t2;
f_12642(t5,t4);}
else{
t3=t2;
f_12642(t3,C_SCHEME_UNDEFINED);}}

/* k12640 in k12637 in k12634 in k12631 in k12628 in k12625 in initialize-pattern in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_12642(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12642,NULL,2,t0,t1);}
t2=((C_word*)t0)[7];
t3=(C_word)C_i_check_structure(t2,lf[233]);
t4=(C_word)C_i_block_ref(t2,C_fix(10));
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12648,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t6=(C_word)C_eqp(t4,lf[249]);
if(C_truep(t6)){
t7=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(8));
t8=C_mutate(((C_word *)((C_word*)t0)[3])+1,t7);
t9=t5;
f_12648(2,t9,t8);}
else{
t7=(C_word)C_eqp(t4,lf[256]);
if(C_truep(t7)){
t8=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(16));
t9=C_mutate(((C_word *)((C_word*)t0)[3])+1,t8);
t10=t5;
f_12648(2,t10,t9);}
else{
C_trace("ChickenBridge.scm: 378  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t5,lf[257],t4);}}}

/* k12646 in k12640 in k12637 in k12634 in k12631 in k12628 in k12625 in initialize-pattern in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_12648(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12648,2,t0,t1);}
t2=((C_word*)t0)[7];
t3=(C_word)C_i_check_structure(t2,lf[233]);
t4=(C_word)C_i_block_ref(t2,C_fix(11));
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12654,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
t6=(C_word)C_eqp(t4,lf[250]);
if(C_truep(t6)){
t7=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(32));
t8=C_mutate(((C_word *)((C_word*)t0)[3])+1,t7);
t9=t5;
f_12654(2,t9,t8);}
else{
t7=(C_word)C_eqp(t4,lf[254]);
if(C_truep(t7)){
t8=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(64));
t9=C_mutate(((C_word *)((C_word*)t0)[3])+1,t8);
t10=t5;
f_12654(2,t10,t9);}
else{
C_trace("ChickenBridge.scm: 378  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t5,lf[255],t4);}}}

/* k12652 in k12646 in k12640 in k12637 in k12634 in k12631 in k12628 in k12625 in initialize-pattern in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_12654(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12654,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12657,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12717,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  bitwise-test");
f_7280(t3,((C_word*)((C_word*)t0)[3])[1],C_fix(16));}

/* k12715 in k12652 in k12646 in k12640 in k12637 in k12634 in k12631 in k12628 in k12625 in initialize-pattern in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_12717(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12717,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_bitwise_and(&a,2,((C_word*)((C_word*)t0)[3])[1],lf[252]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_12657(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12731,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  bitwise-test");
f_7280(t2,((C_word*)((C_word*)t0)[3])[1],C_fix(1));}}

/* k12729 in k12715 in k12652 in k12646 in k12640 in k12637 in k12634 in k12631 in k12628 in k12625 in initialize-pattern in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_12731(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12731,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_bitwise_and(&a,2,((C_word*)((C_word*)t0)[3])[1],lf[253]);
t3=(C_word)C_a_i_bitwise_ior(&a,2,t2,C_fix(16));
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_12657(t5,t4);}
else{
t2=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(8));
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_12657(t4,t3);}}

/* k12655 in k12652 in k12646 in k12640 in k12637 in k12634 in k12631 in k12628 in k12625 in initialize-pattern in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_12657(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12657,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12660,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_numberp(((C_word*)t0)[2]);
t4=(C_truep(t3)?(C_word)C_i_greaterp(((C_word*)t0)[2],C_fix(0)):C_SCHEME_FALSE);
t5=(C_truep(t4)?((C_word*)t0)[2]:C_fix(1073741823));
t6=((C_word*)t0)[4];
t7=(C_word)C_i_check_structure(t6,lf[233]);
C_trace("ChickenBridge.scm: 378  ##sys#block-set!");
t8=*((C_word*)lf[225]+1);
((C_proc5)(void*)(*((C_word*)t8+1)))(5,t8,t2,t6,C_fix(8),t5);}

/* k12658 in k12655 in k12652 in k12646 in k12640 in k12637 in k12634 in k12631 in k12628 in k12625 in initialize-pattern in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_12660(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12660,2,t0,t1);}
t2=((C_word*)t0)[6];
t3=(C_truep(t2)?t2:((C_word*)t0)[5]);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12666,a[2]=((C_word*)t0)[5],a[3]=t3,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
t5=((C_word*)t0)[6];
if(C_truep(t5)){
t6=t4;
f_12666(t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[2])[1],C_fix(2));
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t6);
t8=t4;
f_12666(t8,t7);}}

/* k12664 in k12658 in k12655 in k12652 in k12646 in k12640 in k12637 in k12634 in k12631 in k12628 in k12625 in initialize-pattern in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_12666(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12666,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12669,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12679,a[2]=t2,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_i_numberp(((C_word*)t0)[3]);
t5=(C_truep(t4)?t4:(C_word)C_eqp(((C_word*)t0)[3],C_SCHEME_TRUE));
if(C_truep(t5)){
C_trace("ChickenBridge.scm: 378  make-period");
f_12153(t3,C_fix(0),((C_word*)t0)[3],C_SCHEME_FALSE,((C_word*)t0)[2],C_fix(0),C_fix(0));}
else{
C_trace("ChickenBridge.scm: 378  make-period");
f_12153(t3,C_fix(0),C_SCHEME_FALSE,((C_word*)t0)[3],((C_word*)t0)[2],C_fix(0),C_fix(0));}}

/* k12677 in k12664 in k12658 in k12655 in k12652 in k12646 in k12640 in k12637 in k12634 in k12631 in k12628 in k12625 in initialize-pattern in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_12679(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=((C_word*)t0)[3];
t3=(C_word)C_i_check_structure(t2,lf[233]);
C_trace("ChickenBridge.scm: 378  ##sys#block-set!");
t4=*((C_word*)lf[225]+1);
((C_proc5)(void*)(*((C_word*)t4+1)))(5,t4,((C_word*)t0)[2],t2,C_fix(5),t1);}

/* k12667 in k12664 in k12658 in k12655 in k12652 in k12646 in k12640 in k12637 in k12634 in k12631 in k12628 in k12625 in initialize-pattern in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_12669(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12669,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12672,a[2]=((C_word*)t0)[4],tmp=(C_word)a,a+=3,tmp);
t3=((C_word*)t0)[3];
t4=((C_word*)((C_word*)t0)[2])[1];
t5=(C_word)C_i_check_structure(t3,lf[233]);
C_trace("ChickenBridge.scm: 378  ##sys#block-set!");
t6=*((C_word*)lf[225]+1);
((C_proc5)(void*)(*((C_word*)t6+1)))(5,t6,t2,t3,C_fix(1),t4);}

/* k12670 in k12667 in k12664 in k12658 in k12655 in k12652 in k12646 in k12640 in k12637 in k12634 in k12631 in k12628 in k12625 in initialize-pattern in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_12672(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  values");
C_values(2,0,((C_word*)t0)[2]);}

/* %alloc-pattern in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_12613(C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12613,NULL,1,t1);}
t2=lf[248];
t3=lf[248];
t4=lf[248];
t5=lf[249];
t6=lf[250];
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_a_i_record(&a,15,lf[233],C_fix(0),C_SCHEME_END_OF_LIST,C_SCHEME_FALSE,t2,C_SCHEME_FALSE,t3,t4,C_fix(1073741823),C_SCHEME_FALSE,t5,t6,C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE));}

/* pattern-cache in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_12558(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12558,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[233]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(14)));}

/* pattern-cache-set! in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_12549(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12549,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[233]);
C_trace("ChickenBridge.scm: 378  ##sys#block-set!");
t5=*((C_word*)lf[225]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(14),t3);}

/* pattern-state in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_12432(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12432,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[233]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(7)));}

/* pattern-state-set! in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_12423(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12423,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[233]);
C_trace("ChickenBridge.scm: 378  ##sys#block-set!");
t5=*((C_word*)lf[225]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(7),t3);}

/* f_12414 in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_12414(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_12414,3,t0,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[233]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(6)));}

/* pattern-value-set! in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_12405(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12405,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[233]);
C_trace("ChickenBridge.scm: 378  ##sys#block-set!");
t5=*((C_word*)lf[225]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(6),t3);}

/* pattern-period in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_12396(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12396,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[233]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(5)));}

/* pattern-datum in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_12378(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12378,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[233]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(4)));}

/* pattern-datum-set! in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_12369(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12369,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[233]);
C_trace("ChickenBridge.scm: 378  ##sys#block-set!");
t5=*((C_word*)lf[225]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(4),t3);}

/* pattern-length in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_12360(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12360,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[233]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(3)));}

/* pattern-data in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_12342(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12342,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[233]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* pattern-data-set! in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_12333(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12333,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[233]);
C_trace("ChickenBridge.scm: 378  ##sys#block-set!");
t5=*((C_word*)lf[225]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(2),t3);}

/* pattern-flags in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_12324(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12324,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[233]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* pattern? in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_12309(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12309,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_structurep(t2,lf[233]));}

/* period-reps in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_12264(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12264,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[223]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(6)));}

/* period-omit in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_12246(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12246,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[223]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(5)));}

/* period-omit-set! in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_12237(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12237,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[223]);
C_trace("ChickenBridge.scm: 378  ##sys#block-set!");
t5=*((C_word*)lf[225]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(5),t3);}

/* period-stream in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_12210(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12210,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[223]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(3)));}

/* period-length in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_12192(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12192,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[223]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* period-count in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_12174(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12174,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[223]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* period-count-set! in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_12165(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12165,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[223]);
C_trace("ChickenBridge.scm: 378  ##sys#block-set!");
t5=*((C_word*)lf[225]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(1),t3);}

/* make-period in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_12153(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7){
C_word tmp;
C_word t8;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12153,NULL,7,t1,t2,t3,t4,t5,t6,t7);}
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)C_a_i_record(&a,7,lf[223],t2,t3,t4,t5,t6,t7));}

/* fm-spectrum in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_11840(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_11840,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_a_i_times(&a,2,t2,t3);
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12151,a[2]=t4,a[3]=t2,a[4]=t5,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 377  round");
t7=*((C_word*)lf[106]+1);
((C_proc3)C_retrieve_proc(t7))(3,t7,t6,t4);}

/* k12149 in fm-spectrum in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_12151(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12151,2,t0,t1);}
t2=(C_word)C_i_inexact_to_exact(t1);
t3=(C_word)C_a_i_plus(&a,2,t2,C_fix(1));
t4=C_SCHEME_END_OF_LIST;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t7=t6;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11853,a[2]=((C_word*)t0)[5],a[3]=t5,tmp=(C_word)a,a+=4,tmp);
t10=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_12086,a[2]=t9,a[3]=((C_word*)t0)[2],a[4]=t8,a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=t5,a[8]=t6,a[9]=t3,tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 377  -");
C_minus(3,0,t10,t3);}

/* k12084 in k12149 in fm-spectrum in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_12086(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12086,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_12088,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=t3,a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word)li161),tmp=(C_word)a,a+=11,tmp));
t5=((C_word*)t3)[1];
f_12088(t5,((C_word*)t0)[2],t1,C_SCHEME_FALSE);}

/* do1134 in k12084 in k12149 in fm-spectrum in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_12088(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12088,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_greaterp(t2,((C_word*)t0)[9]))){
t5=(C_word)C_i_cdr(((C_word*)t0)[8]);
t6=C_mutate(((C_word *)((C_word*)t0)[7])+1,t5);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,t6);}
else{
t5=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_12103,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t1,a[6]=((C_word*)t0)[6],a[7]=t2,a[8]=t4,tmp=(C_word)a,a+=9,tmp);
t6=t2;
t7=((C_word*)t0)[2];
t8=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7586,a[2]=((C_word)li160),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t8+1)))(4,t8,t5,t6,t7);}}

/* f_7586 in do1134 in k12084 in k12149 in fm-spectrum in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_7586(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_7586,4,t0,t1,t2,t3);}
t4=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t5=(C_word)C_i_foreign_fixnum_argumentp(t2);
t6=(C_word)C_i_foreign_flonum_argumentp(t3);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)stub375(t4,t5,t6));}

/* k12101 in do1134 in k12084 in k12149 in fm-spectrum in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_12103(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[23],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12103,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12106,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[8])[1],lf[221]))){
t4=t3;
f_12106(t4,C_SCHEME_UNDEFINED);}
else{
t4=(C_word)C_a_i_times(&a,2,((C_word*)t0)[4],((C_word*)t0)[7]);
t5=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[3],t4);
t6=(C_word)C_a_i_list(&a,2,t5,((C_word*)((C_word*)t0)[8])[1]);
t7=(C_word)C_a_i_list(&a,1,t6);
t8=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t7);
t9=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t10=C_mutate(((C_word *)((C_word*)t0)[2])+1,t9);
t11=t3;
f_12106(t11,t10);}}

/* k12104 in k12101 in do1134 in k12084 in k12149 in fm-spectrum in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_12106(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12106,NULL,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],C_fix(1));
t3=((C_word*)((C_word*)t0)[4])[1];
f_12088(t3,((C_word*)t0)[3],t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k11851 in k12149 in fm-spectrum in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_11853(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11853,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11856,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11929,a[2]=t4,a[3]=((C_word*)t0)[3],a[4]=((C_word)li159),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_11929(t6,t2,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* do1142 in k11851 in k12149 in fm-spectrum in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_11929(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11929,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12082,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t5,a[5]=t4,a[6]=((C_word*)t0)[3],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 377  caar");
t7=*((C_word*)lf[220]+1);
((C_proc3)C_retrieve_proc(t7))(3,t7,t6,((C_word*)((C_word*)t0)[3])[1]);}

/* k12080 in do1142 in k11851 in k12149 in fm-spectrum in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_12082(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12082,2,t0,t1);}
if(C_truep((C_word)C_i_negativep(t1))){
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[6])+1,t4);
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_a_i_abs(&a,1,t6);
t8=C_mutate(((C_word *)((C_word*)t0)[4])+1,t7);
t9=(C_word)C_i_set_car(((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t10=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t11=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12066,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],a[7]=t10,tmp=(C_word)a,a+=8,tmp);
t12=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[5])[1]);
C_trace("ChickenBridge.scm: 377  -");
C_minus(3,0,t11,t12);}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* k12064 in k12080 in do1142 in k11851 in k12149 in fm-spectrum in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_12066(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12066,2,t0,t1);}
t2=(C_word)C_i_set_car(((C_word*)t0)[7],t1);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_i_assoc(t3,((C_word*)((C_word*)t0)[5])[1]);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11960,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
if(C_truep(t4)){
t6=(C_word)C_i_cdr(t4);
t7=(C_word)C_i_cadr(t4);
t8=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[6])[1]);
t9=(C_word)C_a_i_plus(&a,2,t7,t8);
t10=t5;
f_11960(t10,(C_word)C_i_set_car(t6,t9));}
else{
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11985,a[2]=t5,a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t7=(C_word)C_i_length(((C_word*)((C_word*)t0)[5])[1]);
t8=(C_word)C_a_i_minus(&a,2,t7,C_fix(1));
t9=C_SCHEME_UNDEFINED;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_set_block_item(t10,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12018,a[2]=((C_word*)t0)[2],a[3]=t10,a[4]=((C_word*)t0)[5],a[5]=((C_word)li158),tmp=(C_word)a,a+=6,tmp));
t12=((C_word*)t10)[1];
f_12018(t12,t6,t8,C_SCHEME_FALSE,C_SCHEME_FALSE);}}

/* do1148 in k12064 in k12080 in do1142 in k11851 in k12149 in fm-spectrum in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_12018(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12018,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t7=((C_word*)t5)[1];
t8=(C_truep(t7)?t7:(C_word)C_i_lessp(t2,C_fix(0)));
if(C_truep(t8)){
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,((C_word*)t5)[1]);}
else{
t9=(C_word)C_i_list_ref(((C_word*)((C_word*)t0)[4])[1],t2);
t10=(C_word)C_i_car(t9);
t11=C_set_block_item(t6,0,t10);
t12=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12032,a[2]=t6,a[3]=t5,a[4]=t1,a[5]=((C_word*)t0)[3],a[6]=t2,tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_lessp(((C_word*)t6)[1],((C_word*)((C_word*)t0)[2])[1]))){
t13=C_set_block_item(t5,0,t2);
t14=t12;
f_12032(t14,t13);}
else{
t13=t12;
f_12032(t13,C_SCHEME_UNDEFINED);}}}

/* k12030 in do1148 in k12064 in k12080 in do1142 in k11851 in k12149 in fm-spectrum in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_12032(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12032,NULL,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[6],C_fix(1));
t3=((C_word*)((C_word*)t0)[5])[1];
f_12018(t3,((C_word*)t0)[4],t2,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k11983 in k12064 in k12080 in do1142 in k11851 in k12149 in fm-spectrum in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_11985(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11985,2,t0,t1);}
t2=t1;
if(C_truep(t2)){
t3=(C_word)C_i_list_tail(((C_word*)((C_word*)t0)[4])[1],t1);
t4=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=(C_word)C_i_cdr(t3);
t7=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[3])[1],t6);
t8=((C_word*)t0)[2];
f_11960(t8,(C_word)C_i_set_cdr(t3,((C_word*)((C_word*)t0)[3])[1]));}
else{
t3=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[4])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=((C_word*)t0)[2];
f_11960(t5,t4);}}

/* k11958 in k12064 in k12080 in do1142 in k11851 in k12149 in fm-spectrum in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_11960(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[5])[1];
f_11929(t2,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k11854 in k11851 in k12149 in fm-spectrum in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_11856(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11856,2,t0,t1);}
t2=((C_word*)((C_word*)t0)[3])[1];
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11864,a[2]=t5,a[3]=t2,a[4]=t3,a[5]=((C_word)li157),tmp=(C_word)a,a+=6,tmp));
t7=((C_word*)t5)[1];
f_11864(t7,((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1],C_fix(0),t3);}

/* do1170 in k11854 in k11851 in k12149 in fm-spectrum in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_11864(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11864,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t6=(C_word)C_i_cdr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 377  make-spektrum");
f_10635(t1,C_SCHEME_FALSE,t3,((C_word*)t0)[3],t6);}
else{
t6=(C_word)C_i_car(t2);
t7=(C_word)C_i_car(t6);
t8=(C_word)C_i_cdr(t6);
t9=(C_word)C_i_cadr(t6);
t10=(C_word)C_a_i_abs(&a,1,t9);
t11=(C_word)C_i_set_car(t8,t10);
t12=(C_word)C_i_cdr(t6);
t13=(C_word)C_i_set_cdr(((C_word*)t5)[1],t12);
t14=(C_word)C_i_cdr(((C_word*)t5)[1]);
t15=C_set_block_item(t5,0,t14);
t16=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11897,a[2]=t5,a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t3,a[6]=t2,tmp=(C_word)a,a+=7,tmp);
t17=*((C_word*)lf[219]+1);
t18=t17;
((C_proc4)C_retrieve_proc(t18))(4,t18,t16,t2,t7);}}

/* k11895 in do1170 in k11854 in k11851 in k12149 in fm-spectrum in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_11897(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11897,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)t0)[6]);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],C_fix(1));
t4=((C_word*)((C_word*)t0)[4])[1];
f_11864(t4,((C_word*)t0)[3],t2,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* spectrum-keys in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_11133(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+73)){
C_save_and_reclaim((void*)tr3r,(void*)f_11133r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_11133r(t0,t1,t2,t3);}}

static void C_ccall f_11133r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word *a=C_alloc(73);
t4=C_fix(1);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_FALSE;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=C_SCHEME_FALSE;
t19=(*a=C_VECTOR_TYPE|1,a[1]=t18,tmp=(C_word)a,a+=2,tmp);
t20=t3;
t21=(*a=C_VECTOR_TYPE|1,a[1]=t20,tmp=(C_word)a,a+=2,tmp);
t22=C_SCHEME_FALSE;
t23=(*a=C_VECTOR_TYPE|1,a[1]=t22,tmp=(C_word)a,a+=2,tmp);
t24=(*a=C_CLOSURE_TYPE|14,a[1]=(C_word)f_11137,a[2]=t19,a[3]=t17,a[4]=t15,a[5]=t23,a[6]=t13,a[7]=t3,a[8]=t21,a[9]=t11,a[10]=t9,a[11]=t7,a[12]=t5,a[13]=t2,a[14]=t1,tmp=(C_word)a,a+=15,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t21)[1]))){
t25=t24;
f_11137(t25,C_SCHEME_UNDEFINED);}
else{
t25=(C_word)C_i_car(((C_word*)t21)[1]);
t26=(C_word)C_eqp(t25,lf[214]);
if(C_truep(t26)){
t27=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11683,a[2]=t3,a[3]=t24,a[4]=t21,a[5]=t23,a[6]=t13,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("error");
t28=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t28))(4,t28,t27,lf[19],lf[214]);}
else{
t28=t27;
f_11683(2,t28,C_SCHEME_UNDEFINED);}}
else{
t27=(C_word)C_eqp(t25,lf[215]);
if(C_truep(t27)){
t28=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11718,a[2]=t3,a[3]=t24,a[4]=t21,a[5]=t23,a[6]=t15,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t15)[1])){
C_trace("error");
t29=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t29))(4,t29,t28,lf[19],lf[215]);}
else{
t29=t28;
f_11718(2,t29,C_SCHEME_UNDEFINED);}}
else{
t28=(C_word)C_eqp(t25,lf[216]);
if(C_truep(t28)){
t29=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11753,a[2]=t3,a[3]=t24,a[4]=t21,a[5]=t23,a[6]=t17,a[7]=t9,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t17)[1])){
C_trace("error");
t30=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t30))(4,t30,t29,lf[19],lf[216]);}
else{
t30=t29;
f_11753(2,t30,C_SCHEME_UNDEFINED);}}
else{
t29=(C_word)C_eqp(t25,lf[217]);
if(C_truep(t29)){
t30=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11788,a[2]=t3,a[3]=t24,a[4]=t21,a[5]=t23,a[6]=t19,a[7]=t11,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t19)[1])){
C_trace("error");
t31=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t31))(4,t31,t30,lf[19],lf[217]);}
else{
t31=t30;
f_11788(2,t31,C_SCHEME_UNDEFINED);}}
else{
t30=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11817,a[2]=t24,a[3]=t13,a[4]=t5,a[5]=t21,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t23)[1])){
C_trace("error");
t31=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t31))(4,t31,t30,lf[10],t3);}
else{
t31=t30;
f_11817(2,t31,C_SCHEME_UNDEFINED);}}}}}}}

/* k11815 in spectrum-keys in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_11817(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11817,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11824,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11832,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k11830 in k11815 in spectrum-keys in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_11832(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_11824(2,t2,C_SCHEME_UNDEFINED);}}

/* k11822 in k11815 in spectrum-keys in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_11824(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_11137(t5,t4);}

/* k11786 in spectrum-keys in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_11788(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11788,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11792,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11792(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11790 in k11786 in spectrum-keys in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_11792(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11137(t7,t6);}

/* k11751 in spectrum-keys in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_11753(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11753,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11757,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11757(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11755 in k11751 in spectrum-keys in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_11757(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11137(t7,t6);}

/* k11716 in spectrum-keys in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_11718(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11718,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11722,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11722(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11720 in k11716 in spectrum-keys in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_11722(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11137(t7,t6);}

/* k11681 in spectrum-keys in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_11683(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11683,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11687,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11687(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11685 in k11681 in spectrum-keys in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_11687(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11137(t7,t6);}

/* k11135 in spectrum-keys in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_11137(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[53],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11137,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|14,a[1]=(C_word)f_11140,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],a[14]=((C_word*)t0)[14],tmp=(C_word)a,a+=15,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_11140(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[214]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11513,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[214]);}
else{
t6=t5;
f_11513(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[215]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11548,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[215]);}
else{
t7=t6;
f_11548(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[216]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11583,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[216]);}
else{
t8=t7;
f_11583(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[217]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11618,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[217]);}
else{
t9=t8;
f_11618(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11647,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[10],((C_word*)t0)[7]);}
else{
t9=t8;
f_11647(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k11645 in k11135 in spectrum-keys in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_11647(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11647,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11654,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11662,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k11660 in k11645 in k11135 in spectrum-keys in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_11662(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_11654(2,t2,C_SCHEME_UNDEFINED);}}

/* k11652 in k11645 in k11135 in spectrum-keys in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_11654(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_11140(t5,t4);}

/* k11616 in k11135 in spectrum-keys in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_11618(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11618,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11622,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11622(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11620 in k11616 in k11135 in spectrum-keys in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_11622(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11140(t7,t6);}

/* k11581 in k11135 in spectrum-keys in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_11583(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11583,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11587,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11587(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11585 in k11581 in k11135 in spectrum-keys in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_11587(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11140(t7,t6);}

/* k11546 in k11135 in spectrum-keys in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_11548(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11548,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11552,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11552(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11550 in k11546 in k11135 in spectrum-keys in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_11552(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11140(t7,t6);}

/* k11511 in k11135 in spectrum-keys in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_11513(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11513,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11517,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11517(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11515 in k11511 in k11135 in spectrum-keys in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_11517(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11140(t7,t6);}

/* k11138 in k11135 in spectrum-keys in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_11140(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[53],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11140,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|14,a[1]=(C_word)f_11143,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],a[14]=((C_word*)t0)[14],tmp=(C_word)a,a+=15,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_11143(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[214]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11343,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[214]);}
else{
t6=t5;
f_11343(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[215]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11378,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[215]);}
else{
t7=t6;
f_11378(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[216]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11413,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[216]);}
else{
t8=t7;
f_11413(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[217]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11448,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[217]);}
else{
t9=t8;
f_11448(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11477,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[10],((C_word*)t0)[7]);}
else{
t9=t8;
f_11477(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k11475 in k11138 in k11135 in spectrum-keys in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_11477(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11477,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11484,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11492,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k11490 in k11475 in k11138 in k11135 in spectrum-keys in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_11492(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_11484(2,t2,C_SCHEME_UNDEFINED);}}

/* k11482 in k11475 in k11138 in k11135 in spectrum-keys in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_11484(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_11143(t5,t4);}

/* k11446 in k11138 in k11135 in spectrum-keys in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_11448(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11448,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11452,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11452(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11450 in k11446 in k11138 in k11135 in spectrum-keys in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_11452(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11143(t7,t6);}

/* k11411 in k11138 in k11135 in spectrum-keys in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_11413(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11413,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11417,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11417(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11415 in k11411 in k11138 in k11135 in spectrum-keys in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_11417(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11143(t7,t6);}

/* k11376 in k11138 in k11135 in spectrum-keys in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_11378(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11378,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11382,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11382(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11380 in k11376 in k11138 in k11135 in spectrum-keys in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_11382(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11143(t7,t6);}

/* k11341 in k11138 in k11135 in spectrum-keys in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_11343(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11343,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11347,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11347(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11345 in k11341 in k11138 in k11135 in spectrum-keys in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_11347(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11143(t7,t6);}

/* k11141 in k11138 in k11135 in spectrum-keys in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_11143(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[48],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11143,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_11146,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[11],a[7]=((C_word*)t0)[12],a[8]=((C_word*)t0)[13],a[9]=((C_word*)t0)[14],tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_11146(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[214]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11173,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[214]);}
else{
t6=t5;
f_11173(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[215]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11208,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[215]);}
else{
t7=t6;
f_11208(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[216]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11243,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[216]);}
else{
t8=t7;
f_11243(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[217]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11278,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[217]);}
else{
t9=t8;
f_11278(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11307,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[10],((C_word*)t0)[7]);}
else{
t9=t8;
f_11307(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k11305 in k11141 in k11138 in k11135 in spectrum-keys in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_11307(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11307,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11314,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11322,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k11320 in k11305 in k11141 in k11138 in k11135 in spectrum-keys in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_11322(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_11314(2,t2,C_SCHEME_UNDEFINED);}}

/* k11312 in k11305 in k11141 in k11138 in k11135 in spectrum-keys in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_11314(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_11146(t5,t4);}

/* k11276 in k11141 in k11138 in k11135 in spectrum-keys in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_11278(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11278,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11282,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11282(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11280 in k11276 in k11141 in k11138 in k11135 in spectrum-keys in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_11282(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11146(t7,t6);}

/* k11241 in k11141 in k11138 in k11135 in spectrum-keys in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_11243(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11243,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11247,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11247(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11245 in k11241 in k11141 in k11138 in k11135 in spectrum-keys in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_11247(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11146(t7,t6);}

/* k11206 in k11141 in k11138 in k11135 in spectrum-keys in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_11208(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11208,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11212,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11212(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11210 in k11206 in k11141 in k11138 in k11135 in spectrum-keys in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_11212(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11146(t7,t6);}

/* k11171 in k11141 in k11138 in k11135 in spectrum-keys in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_11173(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11173,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11177,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11177(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11175 in k11171 in k11141 in k11138 in k11135 in spectrum-keys in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_11177(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11146(t7,t6);}

/* k11144 in k11141 in k11138 in k11135 in spectrum-keys in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_11146(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11146,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11149,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_11149(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k11147 in k11144 in k11141 in k11138 in k11135 in spectrum-keys in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_11149(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11149,2,t0,t1);}
t2=((C_word*)t0)[7];
t3=((C_word*)t0)[6];
t4=((C_word*)((C_word*)t0)[5])[1];
t5=((C_word*)((C_word*)t0)[4])[1];
t6=((C_word*)((C_word*)t0)[3])[1];
t7=((C_word*)((C_word*)t0)[2])[1];
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10899,a[2]=t3,a[3]=t8,a[4]=t5,a[5]=t2,a[6]=t6,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
t10=(C_word)C_eqp(((C_word*)t8)[1],C_SCHEME_TRUE);
if(C_truep(t10)){
t11=C_set_block_item(t8,0,C_fix(1));
t12=t9;
f_10899(t12,t11);}
else{
t11=t9;
f_10899(t11,C_SCHEME_UNDEFINED);}}

/* k10897 in k11147 in k11144 in k11141 in k11138 in k11135 in spectrum-keys in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_10899(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10899,NULL,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_UNDEFINED;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_UNDEFINED;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_UNDEFINED;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_UNDEFINED;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_UNDEFINED;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=C_SCHEME_UNDEFINED;
t19=(*a=C_VECTOR_TYPE|1,a[1]=t18,tmp=(C_word)a,a+=2,tmp);
t20=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t21=C_set_block_item(t3,0,t20);
t22=(*a=C_CLOSURE_TYPE|17,a[1]=(C_word)f_10908,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t19,a[7]=t17,a[8]=((C_word*)t0)[6],a[9]=t15,a[10]=t13,a[11]=t11,a[12]=t3,a[13]=t20,a[14]=((C_word*)t0)[7],a[15]=t9,a[16]=t7,a[17]=t5,tmp=(C_word)a,a+=18,tmp);
C_trace("ChickenBridge.scm: 377  spectrum-freqs");
t23=C_retrieve(lf[200]);
((C_proc3)C_retrieve_proc(t23))(3,t23,t22,((C_word*)t0)[2]);}

/* k10906 in k10897 in k11147 in k11144 in k11141 in k11138 in k11135 in spectrum-keys in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_10908(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10908,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[17])+1,t1);
t3=(*a=C_CLOSURE_TYPE|16,a[1]=(C_word)f_10912,a[2]=((C_word*)t0)[17],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],a[14]=((C_word*)t0)[14],a[15]=((C_word*)t0)[15],a[16]=((C_word*)t0)[16],tmp=(C_word)a,a+=17,tmp);
C_trace("ChickenBridge.scm: 377  spectrum-amps");
t4=C_retrieve(lf[201]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k10910 in k10906 in k10897 in k11147 in k11144 in k11141 in k11138 in k11135 in spectrum-keys in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_10912(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[55],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10912,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[16])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[15])+1,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10914,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[13],a[4]=((C_word*)t0)[14],a[5]=((C_word)li146),tmp=(C_word)a,a+=6,tmp));
t4=C_mutate(((C_word *)((C_word*)t0)[11])+1,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10947,a[2]=((C_word*)t0)[13],a[3]=((C_word)li147),tmp=(C_word)a,a+=4,tmp));
t5=C_mutate(((C_word *)((C_word*)t0)[10])+1,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10957,a[2]=((C_word*)t0)[15],a[3]=((C_word)li148),tmp=(C_word)a,a+=4,tmp));
t6=C_mutate(((C_word *)((C_word*)t0)[9])+1,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10967,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[15],a[4]=((C_word)li149),tmp=(C_word)a,a+=5,tmp));
t7=C_mutate(((C_word *)((C_word*)t0)[7])+1,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10981,a[2]=((C_word*)t0)[11],a[3]=((C_word*)t0)[15],a[4]=((C_word)li150),tmp=(C_word)a,a+=5,tmp));
t8=C_mutate(((C_word *)((C_word*)t0)[6])+1,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10996,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[11],a[4]=((C_word*)t0)[15],a[5]=((C_word)li151),tmp=(C_word)a,a+=6,tmp));
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11016,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[14],a[4]=((C_word*)t0)[13],tmp=(C_word)a,a+=5,tmp);
t10=(C_word)C_i_not(((C_word*)t0)[4]);
t11=(C_truep(t10)?t10:(C_word)C_i_not(((C_word*)((C_word*)t0)[16])[1]));
if(C_truep(t11)){
if(C_truep(((C_word*)t0)[8])){
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("for-each");
t12=*((C_word*)lf[208]+1);
((C_proc4)(void*)(*((C_word*)t12+1)))(4,t12,t9,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[2])[1]);}
else{
C_trace("for-each");
t12=*((C_word*)lf[208]+1);
((C_proc4)(void*)(*((C_word*)t12+1)))(4,t12,t9,((C_word*)((C_word*)t0)[9])[1],((C_word*)((C_word*)t0)[2])[1]);}}
else{
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("for-each");
t12=*((C_word*)lf[208]+1);
((C_proc4)(void*)(*((C_word*)t12+1)))(4,t12,t9,((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[2])[1]);}
else{
C_trace("for-each");
t12=*((C_word*)lf[208]+1);
((C_proc4)(void*)(*((C_word*)t12+1)))(4,t12,t9,((C_word*)((C_word*)t0)[10])[1],((C_word*)((C_word*)t0)[2])[1]);}}}
else{
if(C_truep(((C_word*)t0)[8])){
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
t12=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11066,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[4],a[4]=((C_word)li152),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  for-each");
t13=*((C_word*)lf[213]+1);
((C_proc5)C_retrieve_proc(t13))(5,t13,t9,t12,((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[16])[1]);}
else{
t12=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11081,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[4],a[4]=((C_word)li153),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  for-each");
t13=*((C_word*)lf[213]+1);
((C_proc5)C_retrieve_proc(t13))(5,t13,t9,t12,((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[16])[1]);}}
else{
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
t12=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11099,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[4],a[4]=((C_word)li154),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  for-each");
t13=*((C_word*)lf[213]+1);
((C_proc5)C_retrieve_proc(t13))(5,t13,t9,t12,((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[16])[1]);}
else{
t12=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11114,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[4],a[4]=((C_word)li155),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  for-each");
t13=*((C_word*)lf[213]+1);
((C_proc5)C_retrieve_proc(t13))(5,t13,t9,t12,((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[16])[1]);}}}}

/* a11113 in k10910 in k10906 in k10897 in k11147 in k11144 in k11141 in k11138 in k11135 in spectrum-keys in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_11114(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_11114,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_greater_or_equalp(t3,((C_word*)t0)[3]))){
C_trace("ChickenBridge.scm: 377  addkey");
t4=((C_word*)((C_word*)t0)[2])[1];
((C_proc3)C_retrieve_proc(t4))(3,t4,t1,t2);}
else{
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_UNDEFINED);}}

/* a11098 in k10910 in k10906 in k10897 in k11147 in k11144 in k11141 in k11138 in k11135 in spectrum-keys in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_11099(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_11099,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_greater_or_equalp(t3,((C_word*)t0)[3]))){
C_trace("ChickenBridge.scm: 377  adduniquekey");
t4=((C_word*)((C_word*)t0)[2])[1];
((C_proc3)C_retrieve_proc(t4))(3,t4,t1,t2);}
else{
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_UNDEFINED);}}

/* a11080 in k10910 in k10906 in k10897 in k11147 in k11144 in k11141 in k11138 in k11135 in spectrum-keys in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_11081(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_11081,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_greater_or_equalp(t3,((C_word*)t0)[3]))){
C_trace("ChickenBridge.scm: 377  addquantkey");
t4=((C_word*)((C_word*)t0)[2])[1];
((C_proc3)C_retrieve_proc(t4))(3,t4,t1,t2);}
else{
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_UNDEFINED);}}

/* a11065 in k10910 in k10906 in k10897 in k11147 in k11144 in k11141 in k11138 in k11135 in spectrum-keys in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_11066(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_11066,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_greater_or_equalp(t3,((C_word*)t0)[3]))){
C_trace("ChickenBridge.scm: 377  adduniquequantkey");
t4=((C_word*)((C_word*)t0)[2])[1];
((C_proc3)C_retrieve_proc(t4))(3,t4,t1,t2);}
else{
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_UNDEFINED);}}

/* k11014 in k10910 in k10906 in k10897 in k11147 in k11144 in k11141 in k11138 in k11135 in spectrum-keys in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_11016(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=(C_word)C_eqp(((C_word*)t0)[3],C_fix(0));
if(C_truep(t3)){
C_trace("ChickenBridge.scm: 377  shuffle!");
t4=C_retrieve(lf[141]);
((C_proc3)C_retrieve_proc(t4))(3,t4,((C_word*)t0)[2],t2);}
else{
t4=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t2);}}

/* f_10996 in k10910 in k10906 in k10897 in k11147 in k11144 in k11141 in k11138 in k11135 in spectrum-keys in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_10996(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_10996,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11000,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11013,a[2]=((C_word*)t0)[2],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  key");
t5=C_retrieve(lf[176]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}

/* k11011 */
static void C_ccall f_11013(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  quantize");
t2=C_retrieve(lf[104]);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* k10998 */
static void C_ccall f_11000(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11000,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11006,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  in?");
t3=((C_word*)((C_word*)t0)[2])[1];
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,t1);}

/* k11004 in k10998 */
static void C_ccall f_11006(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 377  add");
t2=((C_word*)((C_word*)t0)[3])[1];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[4],((C_word*)t0)[2]);}}

/* f_10981 in k10910 in k10906 in k10897 in k11147 in k11144 in k11141 in k11138 in k11135 in spectrum-keys in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_10981(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_10981,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10985,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  key");
t4=C_retrieve(lf[176]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k10983 */
static void C_ccall f_10985(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10985,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10991,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  in?");
t3=((C_word*)((C_word*)t0)[2])[1];
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,t1);}

/* k10989 in k10983 */
static void C_ccall f_10991(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 377  add");
t2=((C_word*)((C_word*)t0)[3])[1];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[4],((C_word*)t0)[2]);}}

/* f_10967 in k10910 in k10906 in k10897 in k11147 in k11144 in k11141 in k11138 in k11135 in spectrum-keys in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_10967(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_10967,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10975,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10979,a[2]=((C_word*)t0)[2],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  key");
t5=C_retrieve(lf[176]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}

/* k10977 */
static void C_ccall f_10979(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  quantize");
t2=C_retrieve(lf[104]);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* k10973 */
static void C_ccall f_10975(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  add");
t2=((C_word*)((C_word*)t0)[3])[1];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* f_10957 in k10910 in k10906 in k10897 in k11147 in k11144 in k11141 in k11138 in k11135 in spectrum-keys in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_10957(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_10957,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10965,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  key");
t4=C_retrieve(lf[176]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k10963 */
static void C_ccall f_10965(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  add");
t2=((C_word*)((C_word*)t0)[3])[1];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* f_10947 in k10910 in k10906 in k10897 in k11147 in k11144 in k11141 in k11138 in k11135 in spectrum-keys in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_10947(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_10947,3,t0,t1,t2);}
t3=(C_word)C_i_cdr(((C_word*)t0)[2]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_member(t2,t3));}

/* f_10914 in k10910 in k10906 in k10897 in k11147 in k11144 in k11141 in k11138 in k11135 in spectrum-keys in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_10914(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_10914,3,t0,t1,t2);}
t3=(C_word)C_eqp(((C_word*)t0)[4],C_fix(-1));
if(C_truep(t3)){
t4=(C_word)C_a_i_list(&a,1,t2);
t5=(C_word)C_i_cdr(((C_word*)t0)[3]);
t6=(C_word)C_i_set_cdr(t4,t5);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_i_set_cdr(((C_word*)t0)[3],t4));}
else{
t4=(C_word)C_a_i_list(&a,1,t2);
t5=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t4);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t6);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,t7);}}

/* spectrum-maxamp in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_10870(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_10870,3,t0,t1,t2);}
t3=lf[211];
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10874,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  spectrum-amps");
t6=C_retrieve(lf[201]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,t2);}

/* k10872 in spectrum-maxamp in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_10874(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10874,2,t0,t1);}
t2=t1;
if(C_truep(t2)){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10883,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10885,a[2]=((C_word*)t0)[2],a[3]=((C_word)li144),tmp=(C_word)a,a+=4,tmp);
C_trace("for-each");
t5=*((C_word*)lf[208]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t3,t4,t1);}
else{
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)((C_word*)t0)[2])[1]);}}

/* a10884 in k10872 in spectrum-maxamp in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_10885(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_10885,3,t0,t1,t2);}
if(C_truep((C_word)C_i_greaterp(t2,((C_word*)((C_word*)t0)[2])[1]))){
t3=C_mutate(((C_word *)((C_word*)t0)[2])+1,t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t3);}
else{
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_UNDEFINED);}}

/* k10881 in k10872 in spectrum-maxamp in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_10883(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* spectrum-minamp in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_10839(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_10839,3,t0,t1,t2);}
t3=C_SCHEME_FALSE;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10843,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  spectrum-amps");
t6=C_retrieve(lf[201]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,t2);}

/* k10841 in spectrum-minamp in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_10843(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10843,2,t0,t1);}
t2=t1;
if(C_truep(t2)){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10852,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10854,a[2]=((C_word*)t0)[2],a[3]=((C_word)li142),tmp=(C_word)a,a+=4,tmp);
C_trace("for-each");
t5=*((C_word*)lf[208]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t3,t4,t1);}
else{
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,lf[209]);}}

/* a10853 in k10841 in spectrum-minamp in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_10854(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_10854,3,t0,t1,t2);}
t3=(C_word)C_i_not(((C_word*)((C_word*)t0)[2])[1]);
t4=(C_truep(t3)?t3:(C_word)C_i_lessp(t2,((C_word*)((C_word*)t0)[2])[1]));
if(C_truep(t4)){
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t2);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t5);}
else{
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_UNDEFINED);}}

/* k10850 in k10841 in spectrum-minamp in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_10852(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* spectrum-maxfreq in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_10821(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_10821,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10829,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  spectrum-freqs");
t4=C_retrieve(lf[200]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k10827 in spectrum-maxfreq in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_10829(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10829,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10837,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  spectrum-size");
t3=C_retrieve(lf[199]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k10835 in k10827 in spectrum-maxfreq in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_10837(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10837,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_list_ref(((C_word*)t0)[2],t2));}

/* spectrum-minfreq in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_10811(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_10811,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10819,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  spectrum-freqs");
t4=C_retrieve(lf[200]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k10817 in spectrum-minfreq in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_10819(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_car(t1));}

/* spectrum-pairs in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_10752(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_10752,3,t0,t1,t2);}
t3=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t4=t3;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10759,a[2]=t2,a[3]=t1,a[4]=t5,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 377  spektrum-freqs");
t7=C_retrieve2(lf[195],"spektrum-freqs");
f_10692(3,t7,t6,t2);}

/* k10757 in spectrum-pairs in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_10759(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10759,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10762,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 377  spektrum-amps");
t3=C_retrieve2(lf[196],"spektrum-amps");
f_10710(3,t3,t2,((C_word*)t0)[2]);}

/* k10760 in k10757 in spectrum-pairs in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_10762(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10762,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10765,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t1,a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 377  spektrum-size");
t3=C_retrieve2(lf[194],"spektrum-size");
f_10674(3,t3,t2,((C_word*)t0)[2]);}

/* k10763 in k10760 in k10757 in spectrum-pairs in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_10765(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10765,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_10770,a[2]=t3,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,a[8]=((C_word)li138),tmp=(C_word)a,a+=9,tmp));
t5=((C_word*)t3)[1];
f_10770(t5,((C_word*)t0)[2],C_fix(0));}

/* do946 in k10763 in k10760 in k10757 in spectrum-pairs in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_10770(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
loop:
a=C_alloc(10);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_10770,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nequalp(t2,((C_word*)t0)[7]))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_cdr(((C_word*)t0)[6]));}
else{
t3=(C_word)C_i_list_ref(((C_word*)t0)[5],t2);
t4=(C_truep(((C_word*)t0)[4])?(C_word)C_i_list_ref(((C_word*)t0)[4],t2):lf[204]);
t5=(C_word)C_a_i_list(&a,2,t3,t4);
t6=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[3])[1],t5);
t7=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t8=C_mutate(((C_word *)((C_word*)t0)[3])+1,t7);
t9=(C_word)C_a_i_plus(&a,2,t2,C_fix(1));
t11=t1;
t12=t9;
t1=t11;
t2=t12;
goto loop;}}

/* make-spectrum in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_10722(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+4)){
C_save_and_reclaim((void*)tr3rv,(void*)f_10722r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest_vector(a,C_rest_count(0));
f_10722r(t0,t1,t2,t3);}}

static void C_ccall f_10722r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a=C_alloc(4);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10726,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_vemptyp(t3))){
t5=t4;
f_10726(2,t5,C_SCHEME_FALSE);}
else{
t5=(C_word)C_i_vector_ref(t3,C_fix(0));
C_trace("ChickenBridge.scm: 377  list->vector");
t6=*((C_word*)lf[198]+1);
((C_proc3)C_retrieve_proc(t6))(3,t6,t4,t5);}}

/* k10724 in make-spectrum in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_10726(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10726,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)t0)[3]);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10736,a[2]=t1,a[3]=t2,a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  list->vector");
t4=*((C_word*)lf[198]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[3]);}

/* k10734 in k10724 in make-spectrum in k10718 in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_10736(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  make-spektrum");
f_10635(((C_word*)t0)[4],C_SCHEME_FALSE,((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* spektrum-amps in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_10710(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_10710,3,t0,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[192]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(4)));}

/* spektrum-freqs in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_10692(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_10692,3,t0,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[192]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(3)));}

/* spektrum-size in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_10674(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_10674,3,t0,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[192]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* spektrum-time in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_10656(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_10656,3,t0,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[192]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* make-spektrum in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_10635(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10635,NULL,5,t1,t2,t3,t4,t5);}
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_a_i_record(&a,5,lf[192],t2,t3,t4,t5));}

/* scale-order in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_10493(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+7)){
C_save_and_reclaim((void*)tr3r,(void*)f_10493r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_10493r(t0,t1,t2,t3);}}

static void C_ccall f_10493r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(7);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10497,a[2]=t2,a[3]=t1,a[4]=t4,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t4)[1]))){
t6=C_set_block_item(t4,0,C_fix(1));
t7=t5;
f_10497(t7,t6);}
else{
t6=(C_word)C_i_car(((C_word*)t4)[1]);
t7=C_set_block_item(t4,0,t6);
t8=t5;
f_10497(t8,t7);}}

/* k10495 in scale-order in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_10497(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10497,NULL,2,t0,t1);}
switch(((C_word*)((C_word*)t0)[4])[1]){
case C_fix(1):
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10508,a[2]=((C_word)li129),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 376  sort");
t3=C_retrieve(lf[189]);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);
case C_fix(-1):
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10566,a[2]=((C_word)li130),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 376  sort");
t3=C_retrieve(lf[189]);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);
case C_fix(0):
C_trace("ChickenBridge.scm: 376  shuffle");
t2=C_retrieve(lf[142]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);
default:
C_trace("ChickenBridge.scm: 376  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[190],((C_word*)((C_word*)t0)[4])[1]);}}

/* a10565 in k10495 in scale-order in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_10566(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_10566,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_numberp(t2))){
if(C_truep((C_word)C_i_numberp(t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_greaterp(t2,t3));}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10589,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  key");
t5=C_retrieve(lf[176]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t3);}}
else{
if(C_truep((C_word)C_i_numberp(t3))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10602,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  key");
t5=C_retrieve(lf[176]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10609,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  key");
t5=C_retrieve(lf[176]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}}}

/* k10607 in a10565 in k10495 in scale-order in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_10609(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10609,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10613,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  key");
t3=C_retrieve(lf[176]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k10611 in k10607 in a10565 in k10495 in scale-order in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_10613(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_greaterp(((C_word*)t0)[2],t1));}

/* k10600 in a10565 in k10495 in scale-order in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_10602(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_greaterp(t1,((C_word*)t0)[2]));}

/* k10587 in a10565 in k10495 in scale-order in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_10589(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_greaterp(((C_word*)t0)[2],t1));}

/* a10507 in k10495 in scale-order in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_10508(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_10508,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_numberp(t2))){
if(C_truep((C_word)C_i_numberp(t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_lessp(t2,t3));}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10531,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  key");
t5=C_retrieve(lf[176]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t3);}}
else{
if(C_truep((C_word)C_i_numberp(t3))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10544,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  key");
t5=C_retrieve(lf[176]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10551,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  key");
t5=C_retrieve(lf[176]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}}}

/* k10549 in a10507 in k10495 in scale-order in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_10551(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10551,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10555,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  key");
t3=C_retrieve(lf[176]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k10553 in k10549 in a10507 in k10495 in scale-order in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_10555(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_lessp(((C_word*)t0)[2],t1));}

/* k10542 in a10507 in k10495 in scale-order in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_10544(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_lessp(t1,((C_word*)t0)[2]));}

/* k10529 in a10507 in k10495 in scale-order in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_10531(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_lessp(((C_word*)t0)[2],t1));}

/* transpose in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_10327(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[20],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_10327,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_numberp(t2))){
if(C_truep((C_word)C_i_numberp(t3))){
t4=(C_word)C_i_lessp(t2,C_fix(12));
t5=(C_truep(t4)?(C_word)C_i_lessp(t3,C_fix(12)):C_SCHEME_FALSE);
if(C_truep(t5)){
t6=(C_word)C_a_i_plus(&a,2,t2,t3);
C_trace("ChickenBridge.scm: 376  modulo");
t7=*((C_word*)lf[129]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t1,t6,C_fix(12));}
else{
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_a_i_plus(&a,2,t2,t3));}}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10373,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  key");
t5=C_retrieve(lf[176]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t3);}}
else{
if(C_truep((C_word)C_i_pairp(t2))){
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10380,a[2]=((C_word)li126),tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10428,a[2]=t4,a[3]=t1,a[4]=t2,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_numberp(t3))){
t6=t5;
f_10428(2,t6,t3);}
else{
C_trace("ChickenBridge.scm: 376  key");
t6=C_retrieve(lf[176]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,t3);}}
else{
C_trace("ChickenBridge.scm: 376  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t1,lf[185],t2);}}}

/* k10426 in transpose in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_10428(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10428,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_numberp(t2))){
t3=(C_word)C_i_car(((C_word*)t0)[4]);
t4=(C_word)C_i_lessp(t3,C_fix(12));
t5=(C_truep(t4)?(C_word)C_i_lessp(t1,C_fix(12)):C_SCHEME_FALSE);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10445,a[2]=t1,a[3]=((C_word)li127),tmp=(C_word)a,a+=4,tmp);
C_trace("map");
t7=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t7+1)))(4,t7,((C_word*)t0)[3],t6,((C_word*)t0)[4]);}
else{
C_trace("ChickenBridge.scm: 376  transpkeys");
f_10380(((C_word*)t0)[3],((C_word*)t0)[4],t1);}}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10473,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10477,a[2]=t1,a[3]=t3,a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 376  key");
t5=C_retrieve(lf[176]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,((C_word*)t0)[4]);}}

/* k10475 in k10426 in transpose in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_10477(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 376  transpkeys");
f_10380(((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* k10471 in k10426 in transpose in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_10473(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 376  note");
t2=C_retrieve(lf[174]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* a10444 in k10426 in transpose in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_10445(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_10445,3,t0,t1,t2);}
t3=(C_word)C_a_i_plus(&a,2,t2,((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 376  modulo");
t4=*((C_word*)lf[129]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t1,t3,C_fix(12));}

/* transpkeys in transpose in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_10380(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10380,NULL,3,t1,t2,t3);}
t4=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10389,a[2]=t6,a[3]=t3,a[4]=t4,a[5]=((C_word)li125),tmp=(C_word)a,a+=6,tmp));
t8=((C_word*)t6)[1];
f_10389(t8,t1,t2,t4);}

/* do807 in transpkeys in transpose in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_10389(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word *a;
loop:
a=C_alloc(7);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_10389,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nullp(t2))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_cdr(((C_word*)t0)[4]));}
else{
t4=(C_word)C_i_car(t2);
t5=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[3],t4);
t6=(C_word)C_a_i_list(&a,1,t5);
t7=(C_word)C_i_set_cdr(t3,t6);
t8=(C_word)C_i_cdr(t3);
t9=t3=t8;
t10=(C_word)C_i_cdr(t2);
t12=t1;
t13=t10;
t14=t3;
t1=t12;
t2=t13;
t3=t14;
goto loop;}}

/* k10371 in transpose in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_10373(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10373,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 376  note");
t3=C_retrieve(lf[174]);
((C_proc3)C_retrieve_proc(t3))(3,t3,((C_word*)t0)[2],t2);}

/* invert in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_10192(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[17],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_10192,3,t0,t1,t2);}
if(C_truep((C_word)C_i_numberp(t2))){
if(C_truep((C_word)C_i_lessp(t2,C_fix(12)))){
t3=(C_word)C_a_i_minus(&a,2,C_fix(12),t2);
C_trace("ChickenBridge.scm: 376  modulo");
t4=*((C_word*)lf[129]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t1,t3,C_fix(12));}
else{
C_trace("ChickenBridge.scm: 376  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t1,lf[182],t2);}}
else{
if(C_truep((C_word)C_i_pairp(t2))){
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10222,a[2]=((C_word)li122),tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_numberp(t4))){
t5=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_lessp(t5,C_fix(12)))){
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10292,a[2]=((C_word)li123),tmp=(C_word)a,a+=3,tmp);
C_trace("map");
t7=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t7+1)))(4,t7,t1,t6,t2);}
else{
C_trace("ChickenBridge.scm: 376  invkeys");
f_10222(t1,t2);}}
else{
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10314,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10318,a[2]=t5,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  key");
t7=C_retrieve(lf[176]);
((C_proc3)C_retrieve_proc(t7))(3,t7,t6,t2);}}
else{
C_trace("ChickenBridge.scm: 376  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t1,lf[183],t2);}}}

/* k10316 in invert in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_10318(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 376  invkeys");
f_10222(((C_word*)t0)[2],t1);}

/* k10312 in invert in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_10314(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 376  note");
t2=C_retrieve(lf[174]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* a10291 in invert in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_10292(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_10292,3,t0,t1,t2);}
t3=(C_word)C_a_i_minus(&a,2,C_fix(12),t2);
C_trace("ChickenBridge.scm: 376  modulo");
t4=*((C_word*)lf[129]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t1,t3,C_fix(12));}

/* invkeys in invert in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_10222(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10222,NULL,2,t1,t2);}
t3=(C_word)C_i_car(t2);
t4=(C_word)C_a_i_list(&a,1,t3);
t5=(C_word)C_i_cdr(t2);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10238,a[2]=t7,a[3]=t3,a[4]=t4,a[5]=((C_word)li121),tmp=(C_word)a,a+=6,tmp));
t9=((C_word*)t7)[1];
f_10238(t9,t1,t5,t4);}

/* do792 in invkeys in invert in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_10238(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word *a;
loop:
a=C_alloc(11);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_10238,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nullp(t2))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,((C_word*)t0)[4]);}
else{
t4=(C_word)C_i_car(t2);
t5=(C_word)C_a_i_minus(&a,2,t4,((C_word*)t0)[3]);
t6=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[3],t5);
t7=(C_word)C_a_i_list(&a,1,t6);
t8=(C_word)C_i_set_cdr(t3,t7);
t9=(C_word)C_i_cdr(t3);
t10=t3=t9;
t11=(C_word)C_i_cdr(t2);
t13=t1;
t14=t11;
t15=t3;
t1=t13;
t2=t14;
t3=t15;
goto loop;}}

/* pc in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_10147(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_10147,3,t0,t1,t2);}
if(C_truep((C_word)C_i_numberp(t2))){
C_trace("ChickenBridge.scm: 376  modulo");
t3=*((C_word*)lf[129]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t1,t2,C_fix(12));}
else{
if(C_truep((C_word)C_i_pairp(t2))){
t3=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_numberp(t3))){
C_trace("map");
t4=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,t1,C_retrieve(lf[180]),t2);}
else{
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10179,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 376  key");
t5=C_retrieve(lf[176]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10190,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 376  key");
t4=C_retrieve(lf[176]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}}}

/* k10188 in pc in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_10190(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 376  modulo");
t2=*((C_word*)lf[129]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],t1,C_fix(12));}

/* k10177 in pc in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_10179(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("map");
t2=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[2],C_retrieve(lf[180]),t1);}

/* hz in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_10031(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[13],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_10031,3,t0,t1,t2);}
if(C_truep((C_word)C_i_listp(t2))){
t3=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10046,a[2]=t5,a[3]=t3,a[4]=((C_word)li118),tmp=(C_word)a,a+=5,tmp));
t7=((C_word*)t5)[1];
f_10046(t7,t1,t2,lf[179],C_SCHEME_FALSE,t3);}
else{
if(C_truep((C_word)C_i_numberp(t2))){
C_trace("ChickenBridge.scm: 376  tb:keynum->hertz");
f_7460(t1,t2);}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10145,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 376  note-aux");
f_9759(t3,t2,C_SCHEME_FALSE,C_SCHEME_TRUE);}}}

/* k10143 in hz in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_10145(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_caddr(t1));}

/* do772 in hz in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_10046(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10046,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,(C_word)C_i_cdr(((C_word*)t0)[3]));}
else{
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10059,a[2]=t7,a[3]=t6,a[4]=t1,a[5]=((C_word*)t0)[2],a[6]=t2,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
t10=(C_word)C_i_car(t2);
t11=(C_word)C_i_numberp(t10);
t12=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10076,a[2]=t6,a[3]=t2,a[4]=t8,a[5]=t9,a[6]=t7,tmp=(C_word)a,a+=7,tmp);
if(C_truep(t11)){
t13=t12;
f_10076(t13,t11);}
else{
t13=(C_word)C_i_car(t2);
t14=t12;
f_10076(t14,(C_word)C_i_listp(t13));}}}

/* k10074 in do772 in hz in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_10076(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10076,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10080,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 376  hz");
t4=C_retrieve(lf[178]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10095,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 376  note-aux");
f_9759(t2,t3,((C_word*)((C_word*)t0)[2])[1],C_SCHEME_TRUE);}}

/* k10093 in k10074 in do772 in hz in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_10095(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10095,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_caddr(((C_word*)((C_word*)t0)[5])[1]);
t4=(C_word)C_a_i_list(&a,1,t3);
t5=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[4])[1],t4);
t6=(C_word)C_i_cddddr(((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_i_car(t6);
t8=C_mutate(((C_word *)((C_word*)t0)[3])+1,t7);
t9=((C_word*)t0)[2];
f_10059(t9,t8);}

/* k10078 in k10074 in do772 in hz in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_10080(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10080,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]);
t4=((C_word*)t0)[3];
f_10059(t4,(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t3));}

/* k10057 in do772 in hz in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_10059(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(C_word)C_i_cdr(((C_word*)t0)[6]);
t5=((C_word*)((C_word*)t0)[5])[1];
f_10046(t5,((C_word*)t0)[4],t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[7])[1]);}

/* key in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_9909(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[19],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_9909,3,t0,t1,t2);}
if(C_truep((C_word)C_i_listp(t2))){
t3=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9924,a[2]=t5,a[3]=t3,a[4]=((C_word)li116),tmp=(C_word)a,a+=5,tmp));
t7=((C_word*)t5)[1];
f_9924(t7,t1,t2,lf[177],C_SCHEME_FALSE,t3);}
else{
if(C_truep((C_word)C_i_numberp(t2))){
if(C_truep((C_word)C_i_greaterp(t2,C_fix(0)))){
t3=t1;
t4=t2;
t5=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t6=(C_word)C_i_foreign_flonum_argumentp(t4);
t7=t3;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)stub295(t5,t6));}
else{
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_fix(-1));}}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10029,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 376  note-aux");
f_9759(t3,t2,C_SCHEME_FALSE,C_SCHEME_TRUE);}}}

/* k10027 in key in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_10029(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_cadr(t1));}

/* do756 in key in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_9924(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9924,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,(C_word)C_i_cdr(((C_word*)t0)[3]));}
else{
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9937,a[2]=t7,a[3]=t6,a[4]=t1,a[5]=((C_word*)t0)[2],a[6]=t2,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
t10=(C_word)C_i_car(t2);
t11=(C_word)C_i_listp(t10);
t12=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9954,a[2]=t6,a[3]=t2,a[4]=t8,a[5]=t9,a[6]=t7,tmp=(C_word)a,a+=7,tmp);
if(C_truep(t11)){
t13=t12;
f_9954(t13,t11);}
else{
t13=(C_word)C_i_car(t2);
t14=t12;
f_9954(t14,(C_word)C_i_numberp(t13));}}}

/* k9952 in do756 in key in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_9954(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9954,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9958,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 376  key");
t4=C_retrieve(lf[176]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9973,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 376  note-aux");
f_9759(t2,t3,((C_word*)((C_word*)t0)[2])[1],C_SCHEME_TRUE);}}

/* k9971 in k9952 in do756 in key in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_9973(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9973,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[5])[1]);
t4=(C_word)C_a_i_list(&a,1,t3);
t5=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[4])[1],t4);
t6=(C_word)C_i_cddddr(((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_i_car(t6);
t8=C_mutate(((C_word *)((C_word*)t0)[3])+1,t7);
t9=((C_word*)t0)[2];
f_9937(t9,t8);}

/* k9956 in k9952 in do756 in key in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_9958(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9958,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]);
t4=((C_word*)t0)[3];
f_9937(t4,(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t3));}

/* k9935 in do756 in key in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_9937(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(C_word)C_i_cdr(((C_word*)t0)[6]);
t5=((C_word*)((C_word*)t0)[5])[1];
f_9924(t5,((C_word*)t0)[4],t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[7])[1]);}

/* note in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_9812(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[13],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_9812,3,t0,t1,t2);}
if(C_truep((C_word)C_i_listp(t2))){
t3=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9827,a[2]=t5,a[3]=t3,a[4]=((C_word)li114),tmp=(C_word)a,a+=5,tmp));
t7=((C_word*)t5)[1];
f_9827(t7,t1,t2,lf[175],C_SCHEME_FALSE,t3);}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9907,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 376  note-aux");
f_9759(t3,t2,C_SCHEME_FALSE,C_SCHEME_TRUE);}}

/* k9905 in note in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_9907(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_car(t1));}

/* do742 in note in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_9827(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9827,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,(C_word)C_i_cdr(((C_word*)t0)[3]));}
else{
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9840,a[2]=t7,a[3]=t6,a[4]=t1,a[5]=((C_word*)t0)[2],a[6]=t2,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
t10=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_listp(t10))){
t11=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9858,a[2]=t8,a[3]=t9,a[4]=t7,tmp=(C_word)a,a+=5,tmp);
t12=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 376  note");
t13=C_retrieve(lf[174]);
((C_proc3)C_retrieve_proc(t13))(3,t13,t11,t12);}
else{
t11=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9873,a[2]=t8,a[3]=t9,a[4]=t6,a[5]=t7,tmp=(C_word)a,a+=6,tmp);
t12=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 376  note-aux");
f_9759(t11,t12,((C_word*)t6)[1],C_SCHEME_TRUE);}}}

/* k9871 in do742 in note in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_9873(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9873,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cddddr(((C_word*)((C_word*)t0)[5])[1]);
t4=(C_word)C_i_car(t3);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t4);
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_a_i_list(&a,1,t6);
t8=((C_word*)t0)[3];
f_9840(t8,(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t7));}

/* k9856 in do742 in note in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_9858(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9858,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]);
t4=((C_word*)t0)[3];
f_9840(t4,(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t3));}

/* k9838 in do742 in note in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_9840(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(C_word)C_i_cdr(((C_word*)t0)[6]);
t5=((C_word*)((C_word*)t0)[5])[1];
f_9827(t5,((C_word*)t0)[4],t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[7])[1]);}

/* note-aux in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_9759(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9759,NULL,4,t1,t2,t3,t4);}
if(C_truep((C_word)C_i_numberp(t2))){
t5=t1;
t6=t2;
t7=t4;
if(C_truep((C_word)C_i_exactp(t6))){
t8=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9709,a[2]=t6,a[3]=t7,a[4]=((C_word)li111),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 376  hash-table-ref");
t9=*((C_word*)lf[41]+1);
((C_proc5)C_retrieve_proc(t9))(5,t9,t5,C_retrieve2(lf[161],"*notes*"),t6,t8);}
else{
t8=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9757,a[2]=t5,a[3]=t7,a[4]=t6,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 376  floor");
t9=*((C_word*)lf[172]+1);
((C_proc3)C_retrieve_proc(t9))(3,t9,t8,t6);}}
else{
if(C_truep((C_word)C_i_symbolp(t2))){
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9782,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 376  symbol->string");
t6=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,t2);}
else{
if(C_truep((C_word)C_i_stringp(t2))){
C_trace("ChickenBridge.scm: 376  string->note-entry");
f_9657(t1,t2,t3,t4);}
else{
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9797,a[2]=t2,a[3]=t4,a[4]=t3,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 376  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,t2);}}}}

/* k9795 in note-aux in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_9797(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9797,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9804,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 376  keyword->string");
t3=C_retrieve(lf[33]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}
else{
if(C_truep(((C_word*)t0)[3])){
C_trace("ChickenBridge.scm: 376  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[5],lf[173],((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[5];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}}

/* k9802 in k9795 in note-aux in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_9804(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 376  string->note-entry");
f_9657(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k9780 in note-aux in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_9782(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 376  string->note-entry");
f_9657(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k9755 in note-aux in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_9757(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9757,2,t0,t1);}
t2=(C_word)C_i_inexact_to_exact(t1);
t3=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[4],t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9729,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_lessp(t3,lf[169]))){
t5=t4;
f_9729(t5,t2);}
else{
t5=(C_word)C_i_lessp(t3,lf[170]);
t6=t4;
f_9729(t6,(C_truep(t5)?(C_word)C_a_i_plus(&a,2,t2,lf[171]):(C_word)C_a_i_plus(&a,2,t2,C_fix(1))));}}

/* k9727 in k9755 in note-aux in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_9729(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9729,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9731,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word)li112),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 376  hash-table-ref");
t3=*((C_word*)lf[41]+1);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[2],C_retrieve2(lf[161],"*notes*"),t1,t2);}

/* a9730 in k9727 in k9755 in note-aux in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_9731(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9731,2,t0,t1);}
if(C_truep(((C_word*)t0)[3])){
C_trace("ChickenBridge.scm: 376  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,t1,lf[168],((C_word*)t0)[2]);}
else{
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* a9708 in note-aux in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_9709(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9709,2,t0,t1);}
if(C_truep(((C_word*)t0)[3])){
C_trace("ChickenBridge.scm: 376  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,t1,lf[167],((C_word*)t0)[2]);}
else{
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* string->note-entry in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_9657(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9657,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9661,a[2]=t2,a[3]=t4,a[4]=t3,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9694,a[2]=((C_word)li109),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 376  hash-table-ref");
t7=*((C_word*)lf[41]+1);
((C_proc5)C_retrieve_proc(t7))(5,t7,t5,C_retrieve2(lf[161],"*notes*"),t2,t6);}

/* a9693 in string->note-entry in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_9694(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9694,2,t0,t1);}
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}

/* k9659 in string->note-entry in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_9661(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9661,2,t0,t1);}
t2=t1;
if(C_truep(t2)){
t3=((C_word*)t0)[5];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t1);}
else{
if(C_truep(((C_word*)t0)[4])){
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9677,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 376  string-append");
t4=*((C_word*)lf[164]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,((C_word*)t0)[2],((C_word*)t0)[4]);}
else{
if(C_truep(((C_word*)t0)[3])){
C_trace("ChickenBridge.scm: 376  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[5],lf[165],((C_word*)t0)[2]);}
else{
t3=((C_word*)t0)[5];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}}}}

/* k9675 in k9659 in string->note-entry in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_9677(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9677,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9679,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word)li108),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 376  hash-table-ref");
t3=*((C_word*)lf[41]+1);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[2],C_retrieve2(lf[161],"*notes*"),t1,t2);}

/* a9678 in k9675 in k9659 in string->note-entry in k9653 in k9650 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_9679(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9679,2,t0,t1);}
if(C_truep(((C_word*)t0)[3])){
C_trace("ChickenBridge.scm: 376  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,t1,lf[163],((C_word*)t0)[2]);}
else{
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* segs in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_9443(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...){
C_word tmp;
C_word t4;
va_list v;
C_word *a,c2=c;
C_save_rest(t3,c2,4);
if(c<4) C_bad_min_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+11)){
C_save_and_reclaim((void*)tr4r,(void*)f_9443r,4,t0,t1,t2,t3);}
else{
a=C_alloc((c-4)*3);
t4=C_restore_rest(a,C_rest_count(0));
f_9443r(t0,t1,t2,t3,t4);}}

static void C_ccall f_9443r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word *a=C_alloc(11);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_lessp(t2,C_fix(1)))){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,C_SCHEME_END_OF_LIST);}
else{
t6=C_fix(1);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9456,a[2]=t1,a[3]=t3,a[4]=t2,a[5]=t5,a[6]=t7,tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t5)[1]))){
t9=(C_word)C_i_car(((C_word*)t5)[1]);
t10=C_set_block_item(t7,0,t9);
t11=(C_word)C_i_cdr(((C_word*)t5)[1]);
t12=C_set_block_item(t5,0,t11);
t13=t8;
f_9456(t13,t12);}
else{
t9=t8;
f_9456(t9,C_SCHEME_UNDEFINED);}}}

/* k9454 in segs in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_9456(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word ab[23],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9456,NULL,2,t0,t1);}
t2=(C_word)C_eqp(((C_word*)((C_word*)t0)[6])[1],C_fix(1));
t3=(C_truep(t2)?t2:(C_word)C_eqp(((C_word*)((C_word*)t0)[6])[1],C_fix(2)));
if(C_truep(t3)){
t4=(C_word)C_eqp(((C_word*)((C_word*)t0)[6])[1],C_fix(1));
t5=(C_truep(t4)?C_retrieve2(lf[76],"tb:explseg"):C_retrieve2(lf[77],"tb:geoseg"));
t6=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[5])[1]);
t7=(C_truep(t6)?C_fix(2):(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]));
t8=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t9=t8;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_9477,a[2]=((C_word*)t0)[2],a[3]=t7,a[4]=((C_word*)t0)[3],a[5]=t5,a[6]=t10,a[7]=t8,a[8]=((C_word*)t0)[4],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_lessp(t7,C_fix(0)))){
C_trace("ChickenBridge.scm: 376  error");
t12=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t12))(4,t12,t11,lf[159],t7);}
else{
t12=t11;
f_9477(2,t12,C_SCHEME_UNDEFINED);}}
else{
t4=(C_word)C_eqp(((C_word*)((C_word*)t0)[6])[1],C_fix(3));
if(C_truep(t4)){
t5=C_retrieve(lf[124]);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9538,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[5],a[5]=t6,a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[5])[1]))){
t8=t7;
f_9538(t8,C_SCHEME_UNDEFINED);}
else{
t8=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t9=C_set_block_item(t6,0,t8);
t10=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t11=C_mutate(((C_word *)((C_word*)t0)[5])+1,t10);
t12=t7;
f_9538(t12,t11);}}
else{
C_trace("ChickenBridge.scm: 376  error");
t5=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,((C_word*)t0)[2],lf[160],((C_word*)((C_word*)t0)[6])[1]);}}}

/* k9536 in k9454 in segs in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_9538(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9538,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9541,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_apply(4,0,t2,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);}

/* k9539 in k9536 in k9454 in segs in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_9541(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9541,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_a_i_list(&a,1,((C_word*)t3)[1]);
t5=t4;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_9549,a[2]=((C_word*)t0)[3],a[3]=t4,a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t8,a[7]=t3,a[8]=t6,a[9]=((C_word*)t0)[6],a[10]=((C_word)li106),tmp=(C_word)a,a+=11,tmp));
t10=((C_word*)t8)[1];
f_9549(t10,((C_word*)t0)[2],C_fix(1),C_SCHEME_FALSE);}

/* do672 in k9539 in k9536 in k9454 in segs in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_9549(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9549,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_lessp(t2,((C_word*)t0)[9]))){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9590,a[2]=t1,a[3]=((C_word*)t0)[6],a[4]=t2,a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=t4,tmp=(C_word)a,a+=8,tmp);
C_apply(4,0,t5,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);}
else{
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9561,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[7],a[4]=t6,a[5]=((C_word*)t0)[3],a[6]=((C_word)li105),tmp=(C_word)a,a+=7,tmp));
t8=((C_word*)t6)[1];
f_9561(t8,t1,((C_word*)t0)[3]);}}

/* do676 in do672 in k9539 in k9536 in k9454 in segs in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_9561(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9561,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)t0)[5]);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9582,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 376  tb:rescale");
f_7321(t3,t4,C_fix(0),((C_word*)((C_word*)t0)[3])[1],C_fix(0),((C_word*)t0)[2],C_fix(1));}}

/* k9580 in do676 in do672 in k9539 in k9536 in k9454 in segs in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_9582(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=(C_word)C_i_set_car(((C_word*)t0)[4],t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_9561(t4,((C_word*)t0)[2],t3);}

/* k9588 in do672 in k9539 in k9536 in k9454 in segs in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_9590(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9590,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[7])+1,t1);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[6])[1],t3);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[6])+1,t5);
t7=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[7])[1]);
t8=C_mutate(((C_word *)((C_word*)t0)[5])+1,t7);
t9=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t10=((C_word*)((C_word*)t0)[3])[1];
f_9549(t10,((C_word*)t0)[2],t9,((C_word*)((C_word*)t0)[7])[1]);}

/* k9475 in k9454 in segs in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_9477(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9477,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_9482,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t3,a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word)li104),tmp=(C_word)a,a+=10,tmp));
t5=((C_word*)t3)[1];
f_9482(t5,((C_word*)t0)[2],C_fix(0));}

/* do660 in k9475 in k9454 in segs in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_9482(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9482,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nequalp(t2,((C_word*)t0)[8]))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_cdr(((C_word*)t0)[7]));}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9514,a[2]=t1,a[3]=((C_word*)t0)[5],a[4]=t2,a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 376  func");
t4=((C_word*)t0)[4];
((C_proc6)C_retrieve_proc(t4))(6,t4,t3,t2,((C_word*)t0)[8],((C_word*)t0)[3],((C_word*)t0)[2]);}}

/* k9512 in do660 in k9475 in k9454 in segs in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_9514(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9514,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
t3=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[5])[1],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t4);
t6=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t7=((C_word*)((C_word*)t0)[3])[1];
f_9482(t7,((C_word*)t0)[2],t6);}

/* rangamma in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_9422(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr2rv,(void*)f_9422r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest_vector(a,C_rest_count(0));
f_9422r(t0,t1,t2);}}

static void C_ccall f_9422r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
if(C_truep((C_word)C_vemptyp(t2))){
C_trace("ChickenBridge.scm: 376  tb:rangamma");
f_7558(t1,C_fix(1));}
else{
t3=(C_word)C_i_vector_ref(t2,C_fix(0));
C_trace("ChickenBridge.scm: 376  tb:rangamma");
f_7558(t1,t3);}}

/* ranpoisson in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_9403(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr2rv,(void*)f_9403r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest_vector(a,C_rest_count(0));
f_9403r(t0,t1,t2);}}

static void C_ccall f_9403r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
if(C_truep((C_word)C_i_nullp(C_retrieve(lf[154])))){
C_trace("ChickenBridge.scm: 376  tb:ranpoisson");
f_7568(t1,C_fix(1));}
else{
t3=(C_word)C_i_vector_ref(t2,C_fix(0));
C_trace("ChickenBridge.scm: 376  tb:ranpoisson");
f_7568(t1,t3);}}

/* rangauss in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_9362(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr2r,(void*)f_9362r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_9362r(t0,t1,t2);}}

static void C_ccall f_9362r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 376  tb:rangauss");
f_7529(t1,C_fix(1),C_fix(0));}
else{
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 376  tb:rangauss");
f_7529(t1,t4,C_fix(0));}
else{
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cdr(t2);
C_trace("ChickenBridge.scm: 376  tb:rangauss");
f_7529(t1,t4,t5);}}}

/* ranexp in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_9343(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr2rv,(void*)f_9343r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest_vector(a,C_rest_count(0));
f_9343r(t0,t1,t2);}}

static void C_ccall f_9343r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
if(C_truep((C_word)C_vemptyp(t2))){
C_trace("ChickenBridge.scm: 376  tb:ranexp");
f_7540(t1,C_fix(1));}
else{
t3=(C_word)C_i_vector_ref(t2,C_fix(0));
C_trace("ChickenBridge.scm: 376  tb:ranexp");
f_7540(t1,t3);}}

/* ranbeta in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_9115(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+44)){
C_save_and_reclaim((void*)tr2r,(void*)f_9115r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_9115r(t0,t1,t2);}}

static void C_ccall f_9115r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word *a=C_alloc(44);
t3=lf[147];
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=t2;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_9119,a[2]=t10,a[3]=t14,a[4]=t8,a[5]=t2,a[6]=t12,a[7]=t6,a[8]=t4,a[9]=t1,tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t12)[1]))){
t16=t15;
f_9119(t16,C_SCHEME_UNDEFINED);}
else{
t16=(C_word)C_i_car(((C_word*)t12)[1]);
t17=(C_word)C_eqp(t16,lf[148]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9256,a[2]=t2,a[3]=t15,a[4]=t12,a[5]=t14,a[6]=t8,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t8)[1])){
C_trace("error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[19],lf[148]);}
else{
t19=t18;
f_9256(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(C_word)C_eqp(t16,lf[149]);
if(C_truep(t18)){
t19=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9291,a[2]=t2,a[3]=t15,a[4]=t12,a[5]=t14,a[6]=t10,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t10)[1])){
C_trace("error");
t20=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t20))(4,t20,t19,lf[19],lf[149]);}
else{
t20=t19;
f_9291(2,t20,C_SCHEME_UNDEFINED);}}
else{
t19=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9320,a[2]=t15,a[3]=t8,a[4]=t4,a[5]=t12,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t20=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t20))(4,t20,t19,lf[10],t2);}
else{
t20=t19;
f_9320(2,t20,C_SCHEME_UNDEFINED);}}}}}

/* k9318 in ranbeta in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_9320(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9320,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9327,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9335,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k9333 in k9318 in ranbeta in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_9335(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_9327(2,t2,C_SCHEME_UNDEFINED);}}

/* k9325 in k9318 in ranbeta in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_9327(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_9119(t5,t4);}

/* k9289 in ranbeta in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_9291(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9291,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9295,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_9295(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k9293 in k9289 in ranbeta in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_9295(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_9119(t7,t6);}

/* k9254 in ranbeta in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_9256(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9256,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9260,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_9260(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k9258 in k9254 in ranbeta in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_9260(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_9119(t7,t6);}

/* k9117 in ranbeta in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_9119(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[29],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9119,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9122,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_9122(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[148]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9156,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[148]);}
else{
t6=t5;
f_9156(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[149]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9191,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[149]);}
else{
t7=t6;
f_9191(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9220,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_9220(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k9218 in k9117 in ranbeta in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_9220(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9220,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9227,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9235,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k9233 in k9218 in k9117 in ranbeta in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_9235(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_9227(2,t2,C_SCHEME_UNDEFINED);}}

/* k9225 in k9218 in k9117 in ranbeta in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_9227(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_9122(t5,t4);}

/* k9189 in k9117 in ranbeta in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_9191(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9191,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9195,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_9195(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k9193 in k9189 in k9117 in ranbeta in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_9195(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_9122(t7,t6);}

/* k9154 in k9117 in ranbeta in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_9156(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9156,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9160,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_9160(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k9158 in k9154 in k9117 in ranbeta in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_9160(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_9122(t7,t6);}

/* k9120 in k9117 in ranbeta in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_9122(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9122,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9125,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_9125(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k9123 in k9120 in k9117 in ranbeta in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_9125(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9125,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9128,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=((C_word*)((C_word*)t0)[2])[1];
if(C_truep(t3)){
t4=t2;
f_9128(t4,C_SCHEME_UNDEFINED);}
else{
t4=C_mutate(((C_word *)((C_word*)t0)[2])+1,((C_word*)((C_word*)t0)[3])[1]);
t5=t2;
f_9128(t5,t4);}}

/* k9126 in k9123 in k9120 in k9117 in ranbeta in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_9128(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9128,NULL,2,t0,t1);}
t2=((C_word*)t0)[4];
t3=((C_word*)((C_word*)t0)[3])[1];
t4=((C_word*)((C_word*)t0)[2])[1];
t5=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t6=(C_word)C_i_foreign_flonum_argumentp(t3);
t7=(C_word)C_i_foreign_flonum_argumentp(t4);
t8=t2;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)stub348(t5,t6,t7));}

/* shuffle in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_9073(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+6)){
C_save_and_reclaim((void*)tr2r,(void*)f_9073r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_9073r(t0,t1,t2);}}

static void C_ccall f_9073r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a=C_alloc(6);
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9087,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 376  append");
t6=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,t5,C_SCHEME_END_OF_LIST);}
else{
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9102,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 376  append");
t5=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,t2,C_SCHEME_END_OF_LIST);}}

/* k9100 in shuffle in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_9102(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 376  shuffle!");
t2=C_retrieve(lf[141]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k9085 in shuffle in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_9087(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 376  shuffle!");
t2=C_retrieve(lf[141]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* shuffle! in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_9018(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_9018,3,t0,t1,t2);}
t3=(C_word)C_i_length(t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9029,a[2]=t1,a[3]=t2,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 376  tb:rani");
f_7484(t4,t3);}

/* k9027 in shuffle! in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_9029(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9029,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9031,a[2]=t3,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word)li96),tmp=(C_word)a,a+=6,tmp));
t5=((C_word*)t3)[1];
f_9031(t5,((C_word*)t0)[2],C_fix(0),t1,C_SCHEME_FALSE);}

/* do592 in k9027 in shuffle! in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_9031(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9031,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nequalp(t2,((C_word*)t0)[4]))){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,((C_word*)t0)[3]);}
else{
t6=(C_word)C_i_list_ref(((C_word*)t0)[3],t2);
t7=C_set_block_item(t5,0,t6);
t8=(C_word)C_i_list_tail(((C_word*)t0)[3],t2);
t9=(C_word)C_i_list_ref(((C_word*)t0)[3],t3);
t10=(C_word)C_i_set_car(t8,t9);
t11=(C_word)C_i_list_tail(((C_word*)t0)[3],t3);
t12=(C_word)C_i_set_car(t11,((C_word*)t5)[1]);
t13=(C_word)C_a_i_plus(&a,2,t2,C_fix(1));
t14=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9059,a[2]=t5,a[3]=t13,a[4]=t1,a[5]=((C_word*)t0)[2],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 376  tb:rani");
f_7484(t14,((C_word*)t0)[4]);}}

/* k9057 in do592 in k9027 in shuffle! in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_9059(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[5])[1];
f_9031(t2,((C_word*)t0)[4],((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* vary in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_8919(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...){
C_word tmp;
C_word t4;
va_list v;
C_word *a,c2=c;
C_save_rest(t3,c2,4);
if(c<4) C_bad_min_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+8)){
C_save_and_reclaim((void*)tr4r,(void*)f_8919r,4,t0,t1,t2,t3);}
else{
a=C_alloc((c-4)*3);
t4=C_restore_rest(a,C_rest_count(0));
f_8919r(t0,t1,t2,t3,t4);}}

static void C_ccall f_8919r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word *a=C_alloc(8);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8923,a[2]=t1,a[3]=t5,a[4]=t3,a[5]=t2,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t5)[1]))){
t7=C_set_block_item(t5,0,C_fix(0));
t8=t6;
f_8923(t8,t7);}
else{
t7=(C_word)C_i_car(((C_word*)t5)[1]);
t8=C_set_block_item(t5,0,t7);
t9=t6;
f_8923(t9,t8);}}

/* k8921 in vary in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_8923(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8923,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8926,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=((C_word*)((C_word*)t0)[3])[1];
if(C_truep((C_truep((C_word)C_i_equalp(t3,C_fix(0)))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t3,C_fix(-1)))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t3,C_fix(1)))?C_SCHEME_TRUE:C_SCHEME_FALSE))))){
t4=t2;
f_8926(2,t4,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 376  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[140],((C_word*)((C_word*)t0)[3])[1]);}}

/* k8924 in k8921 in vary in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_8926(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8926,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8928,a[2]=((C_word)li93),tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_listp(((C_word*)t0)[5]))){
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8991,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t2,a[5]=((C_word)li94),tmp=(C_word)a,a+=6,tmp);
C_trace("map");
t4=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,((C_word*)t0)[2],t3,((C_word*)t0)[5]);}
else{
C_trace("ChickenBridge.scm: 376  vary1");
f_8928(((C_word*)t0)[2],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1]);}}

/* a8990 in k8924 in k8921 in vary in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_8991(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8991,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 376  vary1");
f_8928(t1,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* vary1 in k8924 in k8921 in vary in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_8928(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8928,NULL,4,t1,t2,t3,t4);}
t5=(C_word)C_i_less_or_equalp(t3,C_fix(0));
t6=(C_truep(t5)?t5:(C_word)C_i_nequalp(t2,C_fix(0)));
if(C_truep(t6)){
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,t2);}
else{
t7=(C_word)C_a_i_times(&a,2,t2,t3);
t8=(C_word)C_a_i_abs(&a,1,t7);
t9=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8944,a[2]=t1,a[3]=t2,a[4]=t8,a[5]=t4,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 376  tb:ranf");
f_7491(t9,t8);}}

/* k8942 in vary1 in k8924 in k8921 in vary in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_8944(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8944,2,t0,t1);}
t2=(C_word)C_eqp(((C_word*)t0)[5],C_fix(0));
if(C_truep(t2)){
t3=(C_word)C_a_i_times(&a,2,((C_word*)t0)[4],lf[139]);
t4=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[3],t3);
t5=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_a_i_plus(&a,2,t4,t1));}
else{
t3=(C_word)C_eqp(((C_word*)t0)[5],C_fix(1));
t4=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_truep(t3)?(C_word)C_a_i_plus(&a,2,((C_word*)t0)[3],t1):(C_word)C_a_i_minus(&a,2,((C_word*)t0)[3],t1)));}}

/* odds in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_8691(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+45)){
C_save_and_reclaim((void*)tr3r,(void*)f_8691r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_8691r(t0,t1,t2,t3);}}

static void C_ccall f_8691r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word *a=C_alloc(45);
t4=C_SCHEME_TRUE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=t3;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_FALSE;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_8695,a[2]=t11,a[3]=t15,a[4]=t9,a[5]=t3,a[6]=t13,a[7]=t7,a[8]=t5,a[9]=t1,a[10]=t2,tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t13)[1]))){
t17=t16;
f_8695(t17,C_SCHEME_UNDEFINED);}
else{
t17=(C_word)C_i_car(((C_word*)t13)[1]);
t18=(C_word)C_eqp(t17,lf[136]);
if(C_truep(t18)){
t19=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8832,a[2]=t3,a[3]=t16,a[4]=t13,a[5]=t15,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("error");
t20=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t20))(4,t20,t19,lf[19],lf[136]);}
else{
t20=t19;
f_8832(2,t20,C_SCHEME_UNDEFINED);}}
else{
t19=(C_word)C_eqp(t17,lf[137]);
if(C_truep(t19)){
t20=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8867,a[2]=t3,a[3]=t16,a[4]=t13,a[5]=t15,a[6]=t11,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("error");
t21=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t21))(4,t21,t20,lf[19],lf[137]);}
else{
t21=t20;
f_8867(2,t21,C_SCHEME_UNDEFINED);}}
else{
t20=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8896,a[2]=t16,a[3]=t9,a[4]=t5,a[5]=t13,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t15)[1])){
C_trace("error");
t21=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t21))(4,t21,t20,lf[10],t3);}
else{
t21=t20;
f_8896(2,t21,C_SCHEME_UNDEFINED);}}}}}

/* k8894 in odds in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_8896(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8896,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8903,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8911,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k8909 in k8894 in odds in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_8911(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_8903(2,t2,C_SCHEME_UNDEFINED);}}

/* k8901 in k8894 in odds in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_8903(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_8695(t5,t4);}

/* k8865 in odds in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_8867(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8867,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8871,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_8871(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k8869 in k8865 in odds in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_8871(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_8695(t7,t6);}

/* k8830 in odds in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_8832(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8832,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8836,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_8836(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k8834 in k8830 in odds in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_8836(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_8695(t7,t6);}

/* k8693 in odds in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_8695(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8695,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8698,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_8698(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[136]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8732,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[136]);}
else{
t6=t5;
f_8732(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[137]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8767,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[137]);}
else{
t7=t6;
f_8767(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8796,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_8796(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k8794 in k8693 in odds in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_8796(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8796,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8803,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8811,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k8809 in k8794 in k8693 in odds in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_8811(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_8803(2,t2,C_SCHEME_UNDEFINED);}}

/* k8801 in k8794 in k8693 in odds in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_8803(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_8698(t5,t4);}

/* k8765 in k8693 in odds in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_8767(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8767,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8771,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_8771(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k8769 in k8765 in k8693 in odds in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_8771(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_8698(t7,t6);}

/* k8730 in k8693 in odds in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_8732(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8732,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8736,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_8736(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k8734 in k8730 in k8693 in odds in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_8736(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_8698(t7,t6);}

/* k8696 in k8693 in odds in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_8698(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8698,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8701,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_8701(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k8699 in k8696 in k8693 in odds in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_8701(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8701,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8711,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 376  tb:ranf");
f_7491(t2,lf[135]);}

/* k8709 in k8699 in k8696 in k8693 in odds in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_8711(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_lessp(t1,((C_word*)t0)[5]);
t3=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_truep(t2)?((C_word*)((C_word*)t0)[3])[1]:((C_word*)((C_word*)t0)[2])[1]));}

/* pick in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_8648(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+8)){
C_save_and_reclaim((void*)tr2r,(void*)f_8648r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_8648r(t0,t1,t2);}}

static void C_ccall f_8648r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word *a=C_alloc(8);
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(t2);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8666,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_car(t2);
t7=(C_word)C_i_length(t6);
C_trace("ChickenBridge.scm: 376  tb:rani");
f_7484(t5,t7);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8681,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_length(t2);
C_trace("ChickenBridge.scm: 376  tb:rani");
f_7484(t4,t5);}}

/* k8679 in pick in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_8681(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_list_ref(((C_word*)t0)[2],t1));}

/* k8664 in pick in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_8666(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_list_ref(((C_word*)t0)[2],t1));}

/* between in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_8627(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[6],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_8627,4,t0,t1,t2,t3);}
t4=(C_word)C_fixnump(t2);
t5=(C_truep(t4)?(C_word)C_fixnump(t3):C_SCHEME_FALSE);
if(C_truep(t5)){
t6=t1;
t7=t2;
t8=t3;
t9=(C_word)C_i_foreign_fixnum_argumentp(t7);
t10=(C_word)C_i_foreign_fixnum_argumentp(t8);
t11=t6;
((C_proc2)(void*)(*((C_word*)t11+1)))(2,t11,(C_word)stub314(C_SCHEME_UNDEFINED,t9,t10));}
else{
t6=t1;
t7=t2;
t8=t3;
t9=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t10=(C_word)C_i_foreign_flonum_argumentp(t7);
t11=(C_word)C_i_foreign_flonum_argumentp(t8);
t12=t6;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub320(t9,t10,t11));}}

/* ran in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_8592(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+6)){
C_save_and_reclaim((void*)tr2r,(void*)f_8592r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_8592r(t0,t1,t2);}}

static void C_ccall f_8592r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a=C_alloc(6);
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8596,a[2]=t1,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t3)[1]))){
t5=C_set_block_item(t3,0,C_fix(1));
t6=t4;
f_8596(t6,t5);}
else{
t5=(C_word)C_i_car(((C_word*)t3)[1]);
t6=C_set_block_item(t3,0,t5);
t7=t4;
f_8596(t7,t6);}}

/* k8594 in ran in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_8596(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep((C_word)C_i_greaterp(((C_word*)((C_word*)t0)[3])[1],C_fix(1)))){
if(C_truep((C_word)C_fixnump(((C_word*)((C_word*)t0)[3])[1]))){
C_trace("ChickenBridge.scm: 376  tb:rani");
f_7484(((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}
else{
C_trace("ChickenBridge.scm: 376  tb:ranf");
f_7491(((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}}
else{
C_trace("ChickenBridge.scm: 376  tb:ranf");
f_7491(((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}}

/* scale in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_8484(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...){
C_word tmp;
C_word t4;
va_list v;
C_word *a,c2=c;
C_save_rest(t3,c2,4);
if(c<4) C_bad_min_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+19)){
C_save_and_reclaim((void*)tr4r,(void*)f_8484r,4,t0,t1,t2,t3);}
else{
a=C_alloc((c-4)*3);
t4=C_restore_rest(a,C_rest_count(0));
f_8484r(t0,t1,t2,t3,t4);}}

static void C_ccall f_8484r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word *a=C_alloc(19);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_a_i_list(&a,1,C_SCHEME_TRUE);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8491,a[2]=t1,a[3]=t6,a[4]=t3,a[5]=t8,a[6]=t2,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
t10=(C_word)C_i_car(((C_word*)t5)[1]);
if(C_truep((C_word)C_i_pairp(t10))){
t11=(C_word)C_i_cdr(((C_word*)t5)[1]);
if(C_truep((C_word)C_i_nullp(t11))){
t12=(C_word)C_i_car(((C_word*)t5)[1]);
t13=C_set_block_item(t5,0,t12);
t14=t9;
f_8491(t14,t13);}
else{
t12=(C_word)C_i_cadr(((C_word*)t5)[1]);
t13=C_set_block_item(t8,0,t12);
t14=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8571,a[2]=t9,a[3]=t5,tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_nequalp(((C_word*)t8)[1],t3))){
C_trace("ChickenBridge.scm: 376  error");
t15=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t15))(4,t15,t14,lf[130],((C_word*)t8)[1]);}
else{
t15=t14;
f_8571(2,t15,C_SCHEME_UNDEFINED);}}}
else{
t11=t9;
f_8491(t11,C_SCHEME_UNDEFINED);}}

/* k8569 in scale in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_8571(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_8491(t4,t3);}

/* k8489 in scale in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_8491(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8491,NULL,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[7])[1]);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_8500,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t4,a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],a[8]=((C_word)li87),tmp=(C_word)a,a+=9,tmp));
t6=((C_word*)t4)[1];
f_8500(t6,((C_word*)t0)[2],C_fix(0),((C_word*)t0)[4],t2,((C_word*)t0)[3]);}

/* do515 in k8489 in scale in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_8500(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8500,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_lessp(t2,((C_word*)t0)[7]))){
t8=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_8513,a[2]=t4,a[3]=t1,a[4]=((C_word*)t0)[5],a[5]=t2,a[6]=((C_word*)t0)[6],a[7]=t7,a[8]=t6,tmp=(C_word)a,a+=9,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
t9=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8547,a[2]=t8,a[3]=t6,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  fit");
t10=C_retrieve(lf[125]);
((C_proc6)C_retrieve_proc(t10))(6,t10,t9,((C_word*)t6)[1],((C_word*)t0)[3],((C_word*)((C_word*)t0)[4])[1],C_fix(1));}
else{
t9=t8;
f_8513(t9,C_SCHEME_UNDEFINED);}}
else{
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)C_i_cdr(((C_word*)t0)[2]));}}

/* k8545 in do515 in k8489 in scale in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_8547(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_8513(t3,t2);}

/* k8511 in do515 in k8489 in scale in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_8513(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8513,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[8])[1]);
t3=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[7])[1],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[7])+1,t4);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_8539,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[6],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 376  modulo");
t7=*((C_word*)lf[129]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,((C_word*)t0)[5],((C_word*)t0)[2]);}

/* k8537 in k8511 in do515 in k8489 in scale in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_8539(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8539,2,t0,t1);}
t2=(C_word)C_i_list_ref(((C_word*)((C_word*)t0)[8])[1],t1);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[7])[1],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[7])+1,t3);
t5=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
t6=((C_word*)((C_word*)t0)[5])[1];
f_8500(t6,((C_word*)t0)[4],t5,((C_word*)((C_word*)t0)[7])[1],((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* fit in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_8351(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,...){
C_word tmp;
C_word t5;
va_list v;
C_word *a,c2=c;
C_save_rest(t4,c2,5);
if(c<5) C_bad_min_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+13)){
C_save_and_reclaim((void*)tr5r,(void*)f_8351r,5,t0,t1,t2,t3,t4);}
else{
a=C_alloc((c-5)*3);
t5=C_restore_rest(a,C_rest_count(0));
f_8351r(t0,t1,t2,t3,t4,t5);}}

static void C_ccall f_8351r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word *a=C_alloc(13);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8355,a[2]=t1,a[3]=t8,a[4]=t7,a[5]=t6,a[6]=t2,tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t8)[1]))){
t10=C_set_block_item(t8,0,C_fix(1));
t11=t9;
f_8355(t11,t10);}
else{
t10=(C_word)C_i_car(((C_word*)t8)[1]);
t11=C_set_block_item(t8,0,t10);
t12=t9;
f_8355(t12,t11);}}

/* k8353 in fit in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_8355(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8355,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8358,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_greaterp(((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]))){
t3=((C_word*)((C_word*)t0)[5])[1];
t4=C_mutate(((C_word *)((C_word*)t0)[5])+1,((C_word*)((C_word*)t0)[4])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t6=t2;
f_8358(t6,t5);}
else{
t3=t2;
f_8358(t3,C_SCHEME_UNDEFINED);}}

/* k8356 in k8353 in fit in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_8358(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8358,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8360,a[2]=((C_word)li84),tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t0)[6]))){
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8462,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t2,a[6]=((C_word)li85),tmp=(C_word)a,a+=7,tmp);
C_trace("map");
t4=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,((C_word*)t0)[2],t3,((C_word*)t0)[6]);}
else{
C_trace("ChickenBridge.scm: 376  fit1");
f_8360(((C_word*)t0)[2],((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]);}}

/* a8461 in k8356 in k8353 in fit in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_8462(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8462,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 376  fit1");
f_8360(t1,t2,((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* fit1 in k8356 in k8353 in fit in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_8360(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8360,NULL,5,t1,t2,t3,t4,t5);}
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8367,a[2]=t5,a[3]=t3,a[4]=t4,a[5]=t2,a[6]=t1,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 376  <=");
C_less_or_equal_p(5,0,t6,t3,t2,t4);}

/* k8365 in fit1 in k8356 in k8353 in fit in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_8367(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8367,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[6];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[5]);}
else{
t2=(C_word)C_i_greaterp(((C_word*)t0)[5],((C_word*)t0)[4]);
t3=(C_truep(t2)?((C_word*)t0)[4]:((C_word*)t0)[3]);
t4=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[4],((C_word*)t0)[3]);
switch(((C_word*)t0)[2]){
case C_fix(1):
t5=(C_word)C_i_nequalp(t3,((C_word*)t0)[4]);
t6=(C_truep(t5)?((C_word*)t0)[3]:((C_word*)t0)[4]);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8390,a[2]=t6,a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
t8=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[5],t3);
C_trace("ChickenBridge.scm: 376  remainder");
t9=*((C_word*)lf[126]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t7,t8,t4);
case C_fix(2):
t5=(C_word)C_a_i_times(&a,2,C_fix(2),t4);
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8409,a[2]=t5,a[3]=t4,a[4]=t3,a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
t7=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[5],t3);
C_trace("ChickenBridge.scm: 376  remainder");
t8=*((C_word*)lf[126]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t6,t7,t5);
case C_fix(3):
t5=((C_word*)t0)[6];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,t3);
default:
C_trace("ChickenBridge.scm: 376  error");
t5=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,((C_word*)t0)[6],lf[127],((C_word*)t0)[2]);}}}

/* k8407 in k8365 in fit1 in k8356 in k8353 in fit in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_8409(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8409,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8416,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_abs(&a,1,t1);
if(C_truep((C_word)C_i_greaterp(t3,((C_word*)t0)[3]))){
t4=(C_word)C_i_greater_or_equalp(t1,C_fix(0));
t5=(C_truep(t4)?*((C_word*)lf[99]+1):*((C_word*)lf[97]+1));
t6=t5;
((C_proc4)C_retrieve_proc(t6))(4,t6,t2,t1,((C_word*)t0)[2]);}
else{
C_trace("ChickenBridge.scm: 376  -");
C_minus(3,0,t2,t1);}}

/* k8414 in k8407 in k8365 in fit1 in k8356 in k8353 in fit in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_8416(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8416,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_plus(&a,2,t1,((C_word*)t0)[2]));}

/* k8388 in k8365 in fit1 in k8356 in k8353 in fit in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_8390(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8390,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_plus(&a,2,((C_word*)t0)[2],t1));}

/* tendency in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_8284(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,...){
C_word tmp;
C_word t5;
va_list v;
C_word *a,c2=c;
C_save_rest(t4,c2,5);
if(c<5) C_bad_min_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+16)){
C_save_and_reclaim((void*)tr5r,(void*)f_8284r,5,t0,t1,t2,t3,t4);}
else{
a=C_alloc((c-5)*3);
t5=C_restore_rest(a,C_rest_count(0));
f_8284r(t0,t1,t2,t3,t4,t5);}}

static void C_ccall f_8284r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word *a=C_alloc(16);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t9=C_retrieve(lf[124]);
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8288,a[2]=t2,a[3]=t8,a[4]=t10,a[5]=t1,a[6]=t7,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t8)[1]))){
t12=t11;
f_8288(t12,C_SCHEME_UNDEFINED);}
else{
t12=(C_word)C_i_car(((C_word*)t8)[1]);
t13=C_set_block_item(t10,0,t12);
t14=(C_word)C_i_cdr(((C_word*)t8)[1]);
t15=C_set_block_item(t8,0,t14);
t16=t11;
f_8288(t16,t15);}}

/* k8286 in tendency in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_8288(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8288,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8291,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[7])[1]))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8334,a[2]=t2,a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  interp1");
f_8152(t3,((C_word*)t0)[2],((C_word*)((C_word*)t0)[7])[1],C_fix(1));}
else{
t3=t2;
f_8291(t3,C_SCHEME_UNDEFINED);}}

/* k8332 in k8286 in tendency in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_8334(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_8291(t3,t2);}

/* k8289 in k8286 in tendency in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_8291(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8291,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8294,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[6])[1]))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8327,a[2]=t2,a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  interp1");
f_8152(t3,((C_word*)t0)[2],((C_word*)((C_word*)t0)[6])[1],C_fix(1));}
else{
t3=t2;
f_8294(t3,C_SCHEME_UNDEFINED);}}

/* k8325 in k8289 in k8286 in tendency in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_8327(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_8294(t3,t2);}

/* k8292 in k8289 in k8286 in tendency in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_8294(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8294,NULL,2,t0,t1);}
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1]))){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[6])[1]);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8307,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_greaterp(((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1]);
t4=(C_truep(t3)?(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1]):(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[6])[1]));
C_apply(5,0,t2,((C_word*)((C_word*)t0)[3])[1],t4,((C_word*)((C_word*)t0)[2])[1]);}}

/* k8305 in k8292 in k8289 in k8286 in tendency in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_8307(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8307,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[2])[1],t1));}

/* interp in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_8238(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+5)){
C_save_and_reclaim((void*)tr3r,(void*)f_8238r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_8238r(t0,t1,t2,t3);}}

static void C_ccall f_8238r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a=C_alloc(5);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8242,a[2]=t2,a[3]=t1,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 376  error");
t5=*((C_word*)lf[4]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,lf[122]);}
else{
t5=t4;
f_8242(2,t5,C_SCHEME_UNDEFINED);}}

/* k8240 in interp in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_8242(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=(C_word)C_i_car(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_pairp(t2))){
t3=(C_word)C_i_car(((C_word*)t0)[4]);
t4=(C_word)C_i_cdr(((C_word*)t0)[4]);
t5=(C_word)C_i_nullp(t4);
t6=(C_truep(t5)?C_fix(1):(C_word)C_i_cadr(((C_word*)t0)[4]));
C_trace("ChickenBridge.scm: 376  interp1");
f_8152(((C_word*)t0)[3],((C_word*)t0)[2],t3,t6);}
else{
C_trace("ChickenBridge.scm: 376  interp1");
f_8152(((C_word*)t0)[3],((C_word*)t0)[2],((C_word*)t0)[4],C_fix(1));}}

/* interp1 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_8152(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8152,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8156,a[2]=t1,a[3]=t2,a[4]=t3,a[5]=t4,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 376  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[120],t3);}
else{
t6=t5;
f_8156(2,t6,(C_word)C_i_car(t3));}}

/* k8154 in interp1 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_8156(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8156,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8159,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t3,tmp=(C_word)a,a+=7,tmp);
t5=(C_word)C_i_cdr(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_nullp(t5))){
C_trace("ChickenBridge.scm: 376  err");
t6=C_retrieve(lf[118]);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,lf[119],((C_word*)t0)[4]);}
else{
t6=t4;
f_8159(2,t6,(C_word)C_i_cadr(((C_word*)t0)[4]));}}

/* k8157 in k8154 in interp1 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_8159(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8159,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=((C_word*)((C_word*)t0)[6])[1];
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t3)[1];
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=((C_word*)t0)[5];
t9=(C_word)C_i_cddr(((C_word*)t0)[4]);
t10=C_SCHEME_UNDEFINED;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_set_block_item(t11,0,(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_8168,a[2]=((C_word*)t0)[4],a[3]=t11,a[4]=t8,a[5]=t7,a[6]=t3,a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[3],a[9]=t5,a[10]=((C_word)li80),tmp=(C_word)a,a+=11,tmp));
t13=((C_word*)t11)[1];
f_8168(t13,((C_word*)t0)[2],t9);}

/* do466 in k8157 in k8154 in interp1 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_8168(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8168,NULL,3,t0,t1,t2);}
t3=(C_word)C_i_nullp(t2);
t4=(C_truep(t3)?t3:(C_word)C_i_greaterp(((C_word*)((C_word*)t0)[9])[1],((C_word*)t0)[8]));
if(C_truep(t4)){
C_trace("ChickenBridge.scm: 376  tb:rescale");
f_7321(t1,((C_word*)t0)[8],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[9])[1],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[4]);}
else{
t5=C_mutate(((C_word *)((C_word*)t0)[7])+1,((C_word*)((C_word*)t0)[9])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[6])+1,((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_i_car(t2);
t8=C_mutate(((C_word *)((C_word*)t0)[9])+1,t7);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8190,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t10=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t10))){
C_trace("ChickenBridge.scm: 376  error");
t11=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t9,lf[117],((C_word*)t0)[2]);}
else{
t11=(C_word)C_i_cadr(t2);
t12=C_mutate(((C_word *)((C_word*)t0)[5])+1,t11);
t13=t9;
f_8190(2,t13,t12);}}}

/* k8188 in do466 in k8157 in k8154 in interp1 in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_8190(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cddr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_8168(t3,((C_word*)t0)[2],t2);}

/* ratio->cents in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_8137(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8137,3,t0,t1,t2);}
if(C_truep((C_word)C_i_listp(t2))){
C_trace("map");
t3=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,C_retrieve2(lf[75],"tb:scaler->cents"),t2);}
else{
C_trace("ChickenBridge.scm: 376  tb:scaler->cents");
t3=C_retrieve2(lf[75],"tb:scaler->cents");
f_7415(3,t3,t1,t2);}}

/* cents->ratio in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_8122(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8122,3,t0,t1,t2);}
if(C_truep((C_word)C_i_listp(t2))){
C_trace("map");
t3=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,C_retrieve2(lf[74],"tb:cents->scaler"),t2);}
else{
C_trace("ChickenBridge.scm: 376  tb:cents->scaler");
t3=C_retrieve2(lf[74],"tb:cents->scaler");
f_7408(3,t3,t1,t2);}}

/* rhythm->seconds in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_7886(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+45)){
C_save_and_reclaim((void*)tr3r,(void*)f_7886r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_7886r(t0,t1,t2,t3);}}

static void C_ccall f_7886r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word *a=C_alloc(45);
t4=lf[110];
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=lf[111];
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=t3;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_FALSE;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_7890,a[2]=t11,a[3]=t15,a[4]=t9,a[5]=t3,a[6]=t13,a[7]=t1,a[8]=t7,a[9]=t5,a[10]=t2,tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t13)[1]))){
t17=t16;
f_7890(t17,C_SCHEME_UNDEFINED);}
else{
t17=(C_word)C_i_car(((C_word*)t13)[1]);
t18=(C_word)C_eqp(t17,lf[112]);
if(C_truep(t18)){
t19=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8035,a[2]=t3,a[3]=t16,a[4]=t13,a[5]=t15,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("error");
t20=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t20))(4,t20,t19,lf[19],lf[112]);}
else{
t20=t19;
f_8035(2,t20,C_SCHEME_UNDEFINED);}}
else{
t19=(C_word)C_eqp(t17,lf[113]);
if(C_truep(t19)){
t20=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8070,a[2]=t3,a[3]=t16,a[4]=t13,a[5]=t15,a[6]=t11,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("error");
t21=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t21))(4,t21,t20,lf[19],lf[113]);}
else{
t21=t20;
f_8070(2,t21,C_SCHEME_UNDEFINED);}}
else{
t20=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8099,a[2]=t16,a[3]=t9,a[4]=t5,a[5]=t13,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t15)[1])){
C_trace("error");
t21=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t21))(4,t21,t20,lf[10],t3);}
else{
t21=t20;
f_8099(2,t21,C_SCHEME_UNDEFINED);}}}}}

/* k8097 in rhythm->seconds in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_8099(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8099,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8106,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8114,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k8112 in k8097 in rhythm->seconds in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_8114(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_8106(2,t2,C_SCHEME_UNDEFINED);}}

/* k8104 in k8097 in rhythm->seconds in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_8106(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_7890(t5,t4);}

/* k8068 in rhythm->seconds in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_8070(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8070,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8074,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_8074(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k8072 in k8068 in rhythm->seconds in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_8074(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_7890(t7,t6);}

/* k8033 in rhythm->seconds in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_8035(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8035,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8039,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_8039(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k8037 in k8033 in rhythm->seconds in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_8039(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_7890(t7,t6);}

/* k7888 in rhythm->seconds in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_7890(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7890,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_7893,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_7893(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[112]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_7935,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[112]);}
else{
t6=t5;
f_7935(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[113]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_7970,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[113]);}
else{
t7=t6;
f_7970(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_7999,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_7999(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k7997 in k7888 in rhythm->seconds in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_7999(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7999,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8006,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8014,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k8012 in k7997 in k7888 in rhythm->seconds in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_8014(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_8006(2,t2,C_SCHEME_UNDEFINED);}}

/* k8004 in k7997 in k7888 in rhythm->seconds in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_8006(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_7893(t5,t4);}

/* k7968 in k7888 in rhythm->seconds in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_7970(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7970,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7974,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_7974(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k7972 in k7968 in k7888 in rhythm->seconds in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_7974(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_7893(t7,t6);}

/* k7933 in k7888 in rhythm->seconds in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_7935(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7935,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7939,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_7939(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k7937 in k7933 in k7888 in rhythm->seconds in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_7939(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_7893(t7,t6);}

/* k7891 in k7888 in rhythm->seconds in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_7893(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7893,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_7896,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_7896(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k7894 in k7891 in k7888 in rhythm->seconds in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_7896(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7896,2,t0,t1);}
if(C_truep((C_word)C_i_listp(((C_word*)t0)[5]))){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7907,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word)li76),tmp=(C_word)a,a+=5,tmp);
C_trace("map");
t3=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[2],t2,((C_word*)t0)[5]);}
else{
C_trace("ChickenBridge.scm: 376  tb:rhythm->seconds");
f_7393(((C_word*)t0)[2],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]);}}

/* a7906 in k7894 in k7891 in k7888 in rhythm->seconds in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_7907(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7907,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 376  tb:rhythm->seconds");
f_7393(t1,t2,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* decimals in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_7846(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_7846,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7850,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  expt");
t5=*((C_word*)lf[107]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,lf[108],t3);}

/* k7848 in decimals in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_7850(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7850,2,t0,t1);}
if(C_truep((C_word)C_i_listp(((C_word*)t0)[3]))){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7861,a[2]=t1,a[3]=((C_word)li74),tmp=(C_word)a,a+=4,tmp);
C_trace("map");
t3=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[2],t2,((C_word*)t0)[3]);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7880,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_times(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 376  round");
t4=*((C_word*)lf[106]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,t3);}}

/* k7878 in k7848 in decimals in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_7880(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7880,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_divide(&a,2,t1,((C_word*)t0)[2]));}

/* a7860 in k7848 in decimals in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_7861(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7861,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7869,a[2]=((C_word*)t0)[2],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_a_i_times(&a,2,t2,((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 376  round");
t5=*((C_word*)lf[106]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}

/* k7867 in a7860 in k7848 in decimals in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_7869(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7869,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_divide(&a,2,t1,((C_word*)t0)[2]));}

/* quantize in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_7825(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_7825,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_listp(t2))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7837,a[2]=t3,a[3]=((C_word)li72),tmp=(C_word)a,a+=4,tmp);
C_trace("map");
t5=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t1,t4,t2);}
else{
C_trace("ChickenBridge.scm: 376  tb:quantize");
f_7382(t1,t2,t3);}}

/* a7836 in quantize in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_7837(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7837,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 376  tb:quantize");
f_7382(t1,t2,((C_word*)t0)[2]);}

/* minus in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_7799(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr3r,(void*)f_7799r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_7799r(t0,t1,t2,t3);}}

static void C_ccall f_7799r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
if(C_truep((C_word)C_i_nullp(t3))){
if(C_truep((C_word)C_i_listp(t2))){
C_apply(4,0,t1,*((C_word*)lf[99]+1),t2);}
else{
C_trace("ChickenBridge.scm: 376  -");
C_minus(3,0,t1,t2);}}
else{
C_apply(5,0,t1,*((C_word*)lf[99]+1),t2,t3);}}

/* plus in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_7757(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr2r,(void*)f_7757r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_7757r(t0,t1,t2);}}

static void C_ccall f_7757r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_fix(0));}
else{
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_listp(t4))){
t5=(C_word)C_i_car(t2);
C_apply(4,0,t1,*((C_word*)lf[97]+1),t5);}
else{
C_apply(4,0,t1,*((C_word*)lf[97]+1),t2);}}
else{
C_apply(4,0,t1,*((C_word*)lf[97]+1),t2);}}}

/* int in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_7742(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7742,3,t0,t1,t2);}
if(C_truep((C_word)C_i_listp(t2))){
C_trace("map");
t3=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,C_retrieve2(lf[71],"tb:int"),t2);}
else{
C_trace("ChickenBridge.scm: 376  tb:int");
t3=C_retrieve2(lf[71],"tb:int");
f_7375(3,t3,t1,t2);}}

/* discrete in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_7631(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,...){
C_word tmp;
C_word t6;
va_list v;
C_word *a,c2=c;
C_save_rest(t5,c2,6);
if(c<6) C_bad_min_argc_2(c,6,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+21)){
C_save_and_reclaim((void*)tr6r,(void*)f_7631r,6,t0,t1,t2,t3,t4,t5);}
else{
a=C_alloc((c-6)*3);
t6=C_restore_rest(a,C_rest_count(0));
f_7631r(t0,t1,t2,t3,t4,t5,t6);}}

static void C_ccall f_7631r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word *a=C_alloc(21);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_fix(1);
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_7635,a[2]=t5,a[3]=t1,a[4]=t12,a[5]=t8,a[6]=t4,a[7]=t3,a[8]=t2,a[9]=t10,tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_pairp(t5))){
t14=C_set_block_item(t10,0,t5);
if(C_truep((C_word)C_i_nullp(t6))){
t15=(C_word)C_i_length(((C_word*)t10)[1]);
t16=C_set_block_item(t8,0,t15);
t17=t13;
f_7635(t17,t16);}
else{
t15=(C_word)C_i_car(t6);
t16=C_set_block_item(t8,0,t15);
t17=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7706,a[2]=t13,a[3]=t12,a[4]=t6,tmp=(C_word)a,a+=5,tmp);
t18=(C_word)C_i_cdr(t6);
t19=(C_word)C_i_nullp(t18);
C_trace("ChickenBridge.scm: 376  not?");
t20=C_retrieve(lf[94]);
((C_proc3)C_retrieve_proc(t20))(3,t20,t17,t19);}}
else{
t14=(C_word)C_i_car(t6);
t15=C_set_block_item(t8,0,t14);
t16=(C_word)C_i_cdr(t6);
if(C_truep((C_word)C_i_nullp(t16))){
t17=t13;
f_7635(t17,C_SCHEME_UNDEFINED);}
else{
t17=(C_word)C_i_cadr(t6);
t18=C_set_block_item(t12,0,t17);
t19=t13;
f_7635(t19,t18);}}}

/* k7704 in discrete in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_7706(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_cadr(((C_word*)t0)[4]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_7635(t4,t3);}
else{
t2=((C_word*)t0)[2];
f_7635(t2,C_SCHEME_UNDEFINED);}}

/* k7633 in discrete in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_7635(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7635,NULL,2,t0,t1);}
if(C_truep(((C_word*)((C_word*)t0)[9])[1])){
if(C_truep((C_word)C_i_listp(((C_word*)t0)[8]))){
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_7649,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[9],a[7]=((C_word)li66),tmp=(C_word)a,a+=8,tmp);
C_trace("map");
t3=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],t2,((C_word*)t0)[8]);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7664,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  tb:discrete");
f_7348(t2,((C_word*)t0)[8],((C_word*)t0)[7],((C_word*)t0)[6],C_fix(0),((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);}}
else{
if(C_truep((C_word)C_i_listp(((C_word*)t0)[8]))){
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_7675,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word)li67),tmp=(C_word)a,a+=8,tmp);
C_trace("map");
t3=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],t2,((C_word*)t0)[8]);}
else{
C_trace("ChickenBridge.scm: 376  tb:discrete");
f_7348(((C_word*)t0)[3],((C_word*)t0)[8],((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);}}}

/* a7674 in k7633 in discrete in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_7675(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7675,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 376  tb:discrete");
f_7348(t1,t2,((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k7662 in k7633 in discrete in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_7664(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_list_ref(((C_word*)((C_word*)t0)[2])[1],t1));}

/* a7648 in k7633 in discrete in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_7649(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7649,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7657,a[2]=((C_word*)t0)[6],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  tb:discrete");
f_7348(t3,t2,((C_word*)t0)[5],((C_word*)t0)[4],C_fix(0),((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k7655 in a7648 in k7633 in discrete in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_7657(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_list_ref(((C_word*)((C_word*)t0)[2])[1],t1));}

/* rescale in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_7597(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,...){
C_word tmp;
C_word t7;
va_list v;
C_word *a,c2=c;
C_save_rest(t6,c2,7);
if(c<7) C_bad_min_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+8)){
C_save_and_reclaim((void*)tr7r,(void*)f_7597r,7,t0,t1,t2,t3,t4,t5,t6);}
else{
a=C_alloc((c-7)*3);
t7=C_restore_rest(a,C_rest_count(0));
f_7597r(t0,t1,t2,t3,t4,t5,t6,t7);}}

static void C_ccall f_7597r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7){
C_word tmp;
C_word t8;
C_word t9;
C_word t10;
C_word *a=C_alloc(8);
if(C_truep((C_word)C_i_listp(t2))){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_7609,a[2]=t7,a[3]=t6,a[4]=t5,a[5]=t4,a[6]=t3,a[7]=((C_word)li64),tmp=(C_word)a,a+=8,tmp);
C_trace("map");
t9=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t9+1)))(4,t9,t1,t8,t2);}
else{
if(C_truep((C_word)C_i_nullp(t7))){
C_trace("ChickenBridge.scm: 376  tb:rescale");
f_7321(t1,t2,t3,t4,t5,t6,C_fix(1));}
else{
t8=(C_word)C_i_car(t7);
C_trace("ChickenBridge.scm: 376  tb:rescale");
f_7321(t1,t2,t3,t4,t5,t6,t8);}}}

/* a7608 in rescale in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_7609(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7609,3,t0,t1,t2);}
C_apply(9,0,t1,C_retrieve(lf[92]),t2,((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* tb:ranbrown in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_7578(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7578,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub368(t2));}

/* tb:ranpink in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_7575(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7575,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub365(t2));}

/* tb:ranpoisson in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_7568(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7568,NULL,2,t1,t2);}
t3=(C_word)C_i_foreign_flonum_argumentp(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub362(C_SCHEME_UNDEFINED,t3));}

/* tb:rancauchy in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_7565(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7565,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub358(t2));}

/* tb:rangamma in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_7558(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7558,NULL,2,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_word)C_i_foreign_flonum_argumentp(t2);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub354(t3,t4));}

/* tb:ranexp in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_7540(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7540,NULL,2,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_word)C_i_foreign_flonum_argumentp(t2);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub342(t3,t4));}

/* tb:rangauss in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_7529(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7529,NULL,3,t1,t2,t3);}
t4=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t5=(C_word)C_i_foreign_flonum_argumentp(t2);
t6=(C_word)C_i_foreign_flonum_argumentp(t3);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)stub336(t4,t5,t6));}

/* tb:ranmiddle in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_7526(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7526,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub331(t2));}

/* tb:ranhigh in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_7523(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7523,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub328(t2));}

/* tb:ranlow in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_7520(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7520,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub325(t2));}

/* tb:ranf in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_7491(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7491,NULL,2,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_word)C_i_foreign_flonum_argumentp(t2);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub308(t3,t4));}

/* tb:rani in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_7484(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7484,NULL,2,t1,t2);}
t3=(C_word)C_i_foreign_fixnum_argumentp(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub304(C_SCHEME_UNDEFINED,t3));}

/* tb:ran-set! in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_7481(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7481,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub300(C_SCHEME_UNDEFINED,t2));}

/* tb:keynum->hertz in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_7460(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7460,NULL,2,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_word)C_i_foreign_flonum_argumentp(t2);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub286(t3,t4));}

/* tb:geoseg in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_7441(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[6],*a=ab;
if(c!=6) C_bad_argc_2(c,6,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr6,(void*)f_7441,6,t0,t1,t2,t3,t4,t5);}
t6=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_fixnum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=t1;
((C_proc2)(void*)(*((C_word*)t11+1)))(2,t11,(C_word)stub278(t6,t7,t8,t9,t10));}

/* tb:explseg in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_7422(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[6],*a=ab;
if(c!=6) C_bad_argc_2(c,6,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr6,(void*)f_7422,6,t0,t1,t2,t3,t4,t5);}
t6=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_fixnum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=t1;
((C_proc2)(void*)(*((C_word*)t11+1)))(2,t11,(C_word)stub267(t6,t7,t8,t9,t10));}

/* tb:scaler->cents in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_7415(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7415,3,t0,t1,t2);}
t3=(C_word)C_i_foreign_flonum_argumentp(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub260(C_SCHEME_UNDEFINED,t3));}

/* tb:cents->scaler in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_7408(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7408,3,t0,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_word)C_i_foreign_fixnum_argumentp(t2);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub255(t3,t4));}

/* tb:rhythm->seconds in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_7393(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7393,NULL,4,t1,t2,t3,t4);}
t5=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t6=(C_word)C_i_foreign_flonum_argumentp(t2);
t7=(C_word)C_i_foreign_flonum_argumentp(t3);
t8=(C_word)C_i_foreign_flonum_argumentp(t4);
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,(C_word)stub248(t5,t6,t7,t8));}

/* tb:quantize in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_7382(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7382,NULL,3,t1,t2,t3);}
t4=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t5=(C_word)C_i_foreign_flonum_argumentp(t2);
t6=(C_word)C_i_foreign_flonum_argumentp(t3);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)stub240(t4,t5,t6));}

/* tb:int in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_7375(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7375,3,t0,t1,t2);}
t3=(C_word)C_i_foreign_flonum_argumentp(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub235(C_SCHEME_UNDEFINED,t3));}

/* tb:discrete in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_7348(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7){
C_word tmp;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7348,NULL,7,t1,t2,t3,t4,t5,t6,t7);}
t8=(C_word)C_i_foreign_flonum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_flonum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=(C_word)C_i_foreign_flonum_argumentp(t7);
t14=t1;
((C_proc2)(void*)(*((C_word*)t14+1)))(2,t14,(C_word)stub226(C_SCHEME_UNDEFINED,t8,t9,t10,t11,t12,t13));}

/* tb:rescale in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_7321(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7){
C_word tmp;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7321,NULL,7,t1,t2,t3,t4,t5,t6,t7);}
t8=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t9=(C_word)C_i_foreign_flonum_argumentp(t2);
t10=(C_word)C_i_foreign_flonum_argumentp(t3);
t11=(C_word)C_i_foreign_flonum_argumentp(t4);
t12=(C_word)C_i_foreign_flonum_argumentp(t5);
t13=(C_word)C_i_foreign_flonum_argumentp(t6);
t14=(C_word)C_i_foreign_flonum_argumentp(t7);
t15=t1;
((C_proc2)(void*)(*((C_word*)t15+1)))(2,t15,(C_word)stub211(t8,t9,t10,t11,t12,t13,t14));}

/* bitwise-test in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_7280(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7280,NULL,3,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_7286,a[2]=t7,a[3]=t4,a[4]=t5,a[5]=((C_word)li39),tmp=(C_word)a,a+=6,tmp));
t9=((C_word*)t7)[1];
f_7286(t9,t1,C_SCHEME_FALSE);}

/* do177 in bitwise-test in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_7286(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7286,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[4])[1],C_fix(0)))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,((C_word*)t3)[1]);}
else{
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7296,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_bit_setp(((C_word*)((C_word*)t0)[4])[1],C_fix(0)))){
if(C_truep((C_word)C_i_bit_setp(((C_word*)((C_word*)t0)[3])[1],C_fix(0)))){
t5=C_set_block_item(t3,0,C_SCHEME_TRUE);
t6=t4;
f_7296(t6,t5);}
else{
t5=C_set_block_item(t3,0,C_SCHEME_FALSE);
t6=C_set_block_item(((C_word*)t0)[4],0,C_fix(0));
t7=t4;
f_7296(t7,t6);}}
else{
t5=t4;
f_7296(t5,C_SCHEME_UNDEFINED);}}}

/* k7294 in do177 in bitwise-test in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_7296(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7296,NULL,2,t0,t1);}
t2=(C_word)C_a_i_arithmetic_shift(&a,2,((C_word*)((C_word*)t0)[6])[1],C_fix(-1));
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_a_i_arithmetic_shift(&a,2,((C_word*)((C_word*)t0)[5])[1],C_fix(-1));
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t4);
t6=((C_word*)((C_word*)t0)[4])[1];
f_7286(t6,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* list-prop in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_7194(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...){
C_word tmp;
C_word t4;
va_list v;
C_word *a,c2=c;
C_save_rest(t3,c2,4);
if(c<4) C_bad_min_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr4r,(void*)f_7194r,4,t0,t1,t2,t3);}
else{
a=C_alloc((c-4)*3);
t4=C_restore_rest(a,C_rest_count(0));
f_7194r(t0,t1,t2,t3,t4);}}

static void C_ccall f_7194r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
if(C_truep((C_word)C_i_nullp(t2))){
t5=(C_word)C_i_nullp(t4);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_truep(t5)?C_SCHEME_FALSE:(C_word)C_i_car(t4)));}
else{
t5=(C_word)C_i_car(t2);
t6=(C_word)C_eqp(t5,t3);
if(C_truep(t6)){
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_i_cadr(t2));}
else{
t7=(C_word)C_i_cddr(t2);
C_apply(6,0,t1,C_retrieve2(lf[67],"list-prop"),t7,t3,t4);}}}

/* list-find in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_7155(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_7155,4,t0,t1,t2,t3);}
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7161,a[2]=t2,a[3]=t5,a[4]=((C_word)li36),tmp=(C_word)a,a+=5,tmp));
t7=((C_word*)t5)[1];
f_7161(t7,t1,t3,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* do160 in list-find in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_7161(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7161,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t5)[1];
t7=(C_truep(t6)?t6:(C_word)C_i_nullp(t2));
if(C_truep(t7)){
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,((C_word*)t5)[1]);}
else{
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7171,a[2]=t5,a[3]=t3,a[4]=t1,a[5]=((C_word*)t0)[3],a[6]=t2,tmp=(C_word)a,a+=7,tmp);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7181,a[2]=t8,a[3]=t5,a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t10=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 375  p");
t11=((C_word*)t0)[2];
((C_proc3)C_retrieve_proc(t11))(3,t11,t9,t10);}}

/* k7179 in do160 in list-find in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_7181(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[4]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_7171(t4,t3);}
else{
t2=((C_word*)t0)[2];
f_7171(t2,C_SCHEME_UNDEFINED);}}

/* k7169 in do160 in list-find in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_7171(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[6]);
t3=((C_word*)((C_word*)t0)[5])[1];
f_7161(t3,((C_word*)t0)[4],t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* list-index in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_7115(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_7115,4,t0,t1,t2,t3);}
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7121,a[2]=t2,a[3]=t5,a[4]=((C_word)li34),tmp=(C_word)a,a+=5,tmp));
t7=((C_word*)t5)[1];
f_7121(t7,t1,t3,C_fix(0),C_SCHEME_FALSE);}

/* do149 in list-index in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_7121(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7121,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t5)[1];
t7=(C_truep(t6)?t6:(C_word)C_i_nullp(t2));
if(C_truep(t7)){
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,((C_word*)t5)[1]);}
else{
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7131,a[2]=t5,a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=t3,a[6]=t2,tmp=(C_word)a,a+=7,tmp);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7145,a[2]=t8,a[3]=t3,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
t10=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 375  p");
t11=((C_word*)t0)[2];
((C_proc3)C_retrieve_proc(t11))(3,t11,t9,t10);}}

/* k7143 in do149 in list-index in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_7145(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
f_7131(t3,t2);}
else{
t2=((C_word*)t0)[2];
f_7131(t2,C_SCHEME_UNDEFINED);}}

/* k7129 in do149 in list-index in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_7131(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7131,NULL,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)t0)[6]);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],C_fix(1));
t4=((C_word*)((C_word*)t0)[4])[1];
f_7121(t4,((C_word*)t0)[3],t2,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* make-list in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_7016(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+5)){
C_save_and_reclaim((void*)tr3r,(void*)f_7016r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_7016r(t0,t1,t2,t3);}}

static void C_ccall f_7016r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a=C_alloc(5);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7020,a[2]=t2,a[3]=t1,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_lessp(t2,C_fix(0)))){
C_trace("ChickenBridge.scm: 375  error");
t5=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,lf[64],t2);}
else{
t5=t4;
f_7020(2,t5,C_SCHEME_UNDEFINED);}}

/* k7018 in make-list in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_7020(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7020,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7022,a[2]=t3,a[3]=((C_word)li31),tmp=(C_word)a,a+=4,tmp));
t7=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7045,a[2]=t5,a[3]=((C_word)li32),tmp=(C_word)a,a+=4,tmp));
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[4]))){
C_trace("ChickenBridge.scm: 375  l1");
t8=((C_word*)t3)[1];
f_7022(t8,((C_word*)t0)[3],((C_word*)t0)[2],C_SCHEME_FALSE);}
else{
t8=(C_word)C_i_car(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_closurep(t8))){
C_trace("ChickenBridge.scm: 375  l2");
t9=((C_word*)t5)[1];
f_7045(t9,((C_word*)t0)[3],((C_word*)t0)[2],((C_word*)t0)[4]);}
else{
t9=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 375  l1");
t10=((C_word*)t3)[1];
f_7022(t10,((C_word*)t0)[3],((C_word*)t0)[2],t9);}}}

/* l2 in k7018 in make-list in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_7045(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7045,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nequalp(t2,C_fix(0)))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_END_OF_LIST);}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_7062,a[2]=t3,a[3]=((C_word*)t0)[2],a[4]=t2,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
t5=(C_word)C_i_car(t3);
t6=(C_word)C_i_cdr(t3);
C_apply(4,0,t4,t5,t6);}}

/* k7060 in l2 in k7018 in make-list in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_7062(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7062,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7066,a[2]=t1,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[4],C_fix(1));
C_trace("ChickenBridge.scm: 375  l2");
t4=((C_word*)((C_word*)t0)[3])[1];
f_7045(t4,t2,t3,((C_word*)t0)[2]);}

/* k7064 in k7060 in l2 in k7018 in make-list in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_7066(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7066,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* l1 in k7018 in make-list in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_7022(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a;
loop:
a=C_alloc(8);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_7022,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nequalp(t2,C_fix(0)))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_END_OF_LIST);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7039,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_a_i_minus(&a,2,t2,C_fix(1));
C_trace("ChickenBridge.scm: 375  l1");
t7=t4;
t8=t5;
t9=t3;
t1=t7;
t2=t8;
t3=t9;
goto loop;}}

/* k7037 in l1 in k7018 in make-list in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_7039(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7039,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* reverse! in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_6955(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[11],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6955,3,t0,t1,t2);}
t3=(C_word)C_i_length(t2);
t4=(C_word)C_a_i_minus(&a,2,t3,C_fix(1));
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_6968,a[2]=t2,a[3]=t6,a[4]=((C_word)li29),tmp=(C_word)a,a+=5,tmp));
t8=((C_word*)t6)[1];
f_6968(t8,t1,C_fix(0),t4,t2);}

/* do126 in reverse! in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_6968(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word *a;
loop:
a=C_alloc(12);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_6968,NULL,5,t0,t1,t2,t3,t4);}
if(C_truep((C_word)C_i_lessp(t2,t3))){
t5=(C_word)C_i_car(t4);
t6=(C_word)C_a_i_minus(&a,2,t3,t2);
t7=(C_word)C_i_list_tail(t4,t6);
t8=(C_word)C_i_car(t7);
t9=(C_word)C_i_set_car(t4,t8);
t10=(C_word)C_i_set_car(t7,t5);
t11=(C_word)C_a_i_plus(&a,2,t2,C_fix(1));
t12=(C_word)C_a_i_minus(&a,2,t3,C_fix(1));
t13=(C_word)C_i_cdr(t4);
t15=t1;
t16=t11;
t17=t12;
t18=t13;
t1=t15;
t2=t16;
t3=t17;
t4=t18;
goto loop;}
else{
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,((C_word*)t0)[2]);}}

/* list-set! in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_6945(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_6945,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_i_list_tail(t2,t3);
t6=(C_word)C_i_set_car(t5,t4);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,t4);}

/* list* in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_6905(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+4)){
C_save_and_reclaim((void*)tr2r,(void*)f_6905r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_6905r(t0,t1,t2);}}

static void C_ccall f_6905r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a=C_alloc(4);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 375  error");
t3=*((C_word*)lf[4]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t1,lf[60]);}
else{
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_car(t2));}
else{
t4=(C_word)C_i_car(t2);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_6935,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_cdr(t2);
C_apply(4,0,t5,C_retrieve(lf[59]),t6);}}}

/* k6933 in list* in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_6935(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6935,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* tail in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_6815(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6815,3,t0,t1,t2);}
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t2);}
else{
t4=(C_word)C_i_cdr(t2);
C_trace("ChickenBridge.scm: 375  tail");
t5=C_retrieve(lf[58]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t1,t4);}}

/* butlast in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_6767(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[7],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6767,3,t0,t1,t2);}
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_END_OF_LIST);}
else{
t4=(C_word)C_i_cddr(t2);
if(C_truep((C_word)C_i_nullp(t4))){
t5=(C_word)C_i_car(t2);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_a_i_list(&a,1,t5));}
else{
t5=(C_word)C_i_car(t2);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_6801,a[2]=t5,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_cdr(t2);
C_trace("ChickenBridge.scm: 375  butlast");
t8=C_retrieve(lf[57]);
((C_proc3)C_retrieve_proc(t8))(3,t8,t6,t7);}}}

/* k6799 in butlast in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_6801(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6801,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* last in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_6744(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6744,3,t0,t1,t2);}
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_car(t2));}
else{
t4=(C_word)C_i_cdr(t2);
C_trace("ChickenBridge.scm: 375  last");
t5=C_retrieve(lf[56]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t1,t4);}}

/* rest in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_6738(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6738,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_cdr(t2));}

/* tenth in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_6723(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6723,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=(C_word)C_i_cddddr(t3);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_i_cadr(t4));}

/* ninth in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_6709(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6709,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=(C_word)C_i_cddddr(t3);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_i_car(t4));}

/* eighth in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_6699(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6699,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_cadddr(t3));}

/* seventh in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_6689(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6689,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_caddr(t3));}

/* sixth in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_6679(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6679,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_cadr(t3));}

/* fifth in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_6669(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6669,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_car(t3));}

/* chdir in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_6640(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+3)){
C_save_and_reclaim((void*)tr2rv,(void*)f_6640r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest_vector(a,C_rest_count(0));
f_6640r(t0,t1,t2);}}

static void C_ccall f_6640r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word *a=C_alloc(3);
t3=(C_word)C_vemptyp(t2);
t4=(C_truep(t3)?lf[45]:(C_word)C_i_vector_ref(t2,C_fix(0)));
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6649,a[2]=((C_word)li15),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t5+1)))(3,t5,t1,t4);}

/* f_6649 in chdir in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_6649(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6649,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6654,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep(t2)){
t4=(C_word)C_i_foreign_string_argumentp(t2);
C_trace("##sys#make-c-string");
t5=C_retrieve(lf[46]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}
else{
t4=t3;
f_6654(2,t4,C_SCHEME_FALSE);}}

/* k6652 */
static void C_ccall f_6654(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub95(C_SCHEME_UNDEFINED,t1));}

/* cwd in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_6629(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6629,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6634,a[2]=((C_word)li13),tmp=(C_word)a,a+=3,tmp);
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,t1);}

/* f_6634 in cwd in k6625 in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_6634(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6634,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
C_trace("##sys#peek-c-string");
t3=*((C_word*)lf[43]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,(C_word)stub90(t2),C_fix(0));}

/* expand-send in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_6336(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[17],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_6336,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=t4;
t7=(C_truep(t6)?t6:(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6616,a[2]=((C_word)li5),tmp=(C_word)a,a+=3,tmp));
t8=t4;
t9=(C_truep(t8)?(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6605,a[2]=((C_word)li6),tmp=(C_word)a,a+=3,tmp):(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6614,a[2]=((C_word)li7),tmp=(C_word)a,a+=3,tmp));
t10=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_6346,a[2]=t9,a[3]=t7,a[4]=t1,a[5]=t5,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_symbolp(t2))){
C_trace("ChickenBridge.scm: 281  symbol->string");
t11=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t11))(3,t11,t10,t2);}
else{
t11=t10;
f_6346(2,t11,t2);}}

/* k6344 in expand-send in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_6346(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6346,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_6349,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6597,a[2]=((C_word)li11),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 282  hash-table-ref");
t4=*((C_word*)lf[41]+1);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,C_retrieve(lf[29]),t1,t3);}

/* a6596 in k6344 in expand-send in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_6597(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6597,2,t0,t1);}
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}

/* k6347 in k6344 in expand-send in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_6349(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6349,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_6352,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t1,a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
t3=t1;
if(C_truep(t3)){
t4=t2;
f_6352(2,t4,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 283  ferror");
t4=((C_word*)t0)[4];
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[40],((C_word*)t0)[3]);}}

/* k6350 in k6347 in k6344 in expand-send in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_6352(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6352,2,t0,t1);}
t2=((C_word*)((C_word*)t0)[7])[1];
t3=(C_word)C_i_car(((C_word*)t0)[6]);
t4=(C_word)C_i_cdr(((C_word*)t0)[6]);
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(C_word)C_i_length(t4);
t8=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_6367,a[2]=t2,a[3]=t7,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=t6,a[8]=t4,a[9]=((C_word*)t0)[7],a[10]=t3,a[11]=((C_word*)t0)[5],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nequalp(t7,C_fix(1)))){
t9=(C_word)C_i_car(t4);
t10=t8;
f_6367(t10,(C_word)C_eqp(t9,lf[39]));}
else{
t9=t8;
f_6367(t9,C_SCHEME_FALSE);}}

/* k6365 in k6350 in k6347 in k6344 in expand-send in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_6367(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6367,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[11];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[10],((C_word*)((C_word*)t0)[9])[1]));}
else{
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_6377,a[2]=((C_word*)t0)[11],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[9],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 297  append");
t3=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)t0)[8],C_SCHEME_END_OF_LIST);}}

/* k6375 in k6365 in k6350 in k6347 in k6344 in expand-send in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_6377(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6377,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_6379,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=t3,a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word)li10),tmp=(C_word)a,a+=13,tmp));
t5=((C_word*)t3)[1];
f_6379(t5,((C_word*)t0)[2],t1,C_SCHEME_FALSE,C_SCHEME_FALSE,C_fix(0));}

/* do63 in k6375 in k6365 in k6350 in k6347 in k6344 in expand-send in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_6379(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6379,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[11])[1]))){
t9=C_SCHEME_UNDEFINED;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_set_block_item(t10,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_6391,a[2]=((C_word*)t0)[9],a[3]=t10,a[4]=t2,a[5]=((C_word*)t0)[10],a[6]=((C_word)li8),tmp=(C_word)a,a+=7,tmp));
t12=((C_word*)t10)[1];
f_6391(t12,t1,t2);}
else{
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_6432,a[2]=t8,a[3]=t7,a[4]=t6,a[5]=t2,a[6]=t1,a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
t10=(*a=C_CLOSURE_TYPE|14,a[1]=(C_word)f_6438,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t8,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=t2,a[9]=t7,a[10]=((C_word*)t0)[9],a[11]=t6,a[12]=((C_word*)t0)[11],a[13]=t9,a[14]=((C_word*)t0)[7],tmp=(C_word)a,a+=15,tmp);
t11=((C_word*)((C_word*)t0)[7])[1];
if(C_truep(t11)){
t12=t10;
f_6438(2,t12,C_SCHEME_FALSE);}
else{
t12=(C_word)C_i_car(((C_word*)((C_word*)t0)[11])[1]);
C_trace("ChickenBridge.scm: 312  keyword?");
t13=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t13))(3,t13,t10,t12);}}}

/* k6436 in do63 in k6375 in k6365 in k6350 in k6347 in k6344 in expand-send in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_6438(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6438,2,t0,t1);}
if(C_truep(t1)){
t2=C_set_block_item(((C_word*)t0)[14],0,C_SCHEME_TRUE);
t3=((C_word*)t0)[13];
f_6432(t3,t2);}
else{
t2=((C_word*)((C_word*)t0)[14])[1];
if(C_truep(t2)){
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[12])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[11])+1,t3);
t5=(C_word)C_i_assoc(((C_word*)((C_word*)t0)[11])[1],((C_word*)t0)[10]);
t6=C_mutate(((C_word *)((C_word*)t0)[9])+1,t5);
t7=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[12])[1]);
t8=C_mutate(((C_word *)((C_word*)t0)[12])+1,t7);
t9=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_6492,a[2]=((C_word*)t0)[11],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[13],a[7]=((C_word*)t0)[12],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
t10=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_6565,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t9,a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[12],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 333  keyword?");
t11=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t11))(3,t11,t10,((C_word*)((C_word*)t0)[11])[1]);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_6448,a[2]=((C_word*)t0)[13],a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]))){
t4=(C_word)C_i_length(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 323  ferror");
t5=((C_word*)t0)[7];
((C_proc6)C_retrieve_proc(t5))(6,t5,t3,lf[38],((C_word*)t0)[6],((C_word*)t0)[3],t4);}
else{
t4=t3;
f_6448(2,t4,C_SCHEME_UNDEFINED);}}}}

/* k6446 in k6436 in do63 in k6375 in k6365 in k6350 in k6347 in k6344 in expand-send in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_6448(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6448,2,t0,t1);}
t2=(C_word)C_i_list_tail(((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t4=(C_word)C_i_set_car(t2,t3);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[4])[1],C_fix(1));
t8=C_mutate(((C_word *)((C_word*)t0)[4])+1,t7);
t9=((C_word*)t0)[2];
f_6432(t9,t8);}

/* k6563 in k6436 in do63 in k6375 in k6365 in k6350 in k6347 in k6344 in expand-send in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_6565(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6565,2,t0,t1);}
if(C_truep(t1)){
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[9])[1]))){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_6538,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 338  keyname");
t3=((C_word*)t0)[5];
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[4])[1]);}
else{
t2=((C_word*)((C_word*)t0)[3])[1];
if(C_truep(t2)){
t3=((C_word*)t0)[7];
f_6492(2,t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_6551,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_6553,a[2]=((C_word*)t0)[5],a[3]=((C_word)li9),tmp=(C_word)a,a+=4,tmp);
C_trace("map");
t5=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t3,t4,((C_word*)t0)[2]);}}}
else{
C_trace("ChickenBridge.scm: 334  ferror");
t2=((C_word*)t0)[8];
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[7],lf[37],((C_word*)t0)[6],((C_word*)((C_word*)t0)[4])[1]);}}

/* a6552 in k6563 in k6436 in do63 in k6375 in k6365 in k6350 in k6347 in k6344 in expand-send in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_6553(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6553,3,t0,t1,t2);}
t3=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 342  keyname");
t4=((C_word*)t0)[2];
((C_proc3)C_retrieve_proc(t4))(3,t4,t1,t3);}

/* k6549 in k6563 in k6436 in do63 in k6375 in k6365 in k6350 in k6347 in k6344 in expand-send in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_6551(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 340  ferror");
t2=((C_word*)t0)[5];
((C_proc6)C_retrieve_proc(t2))(6,t2,((C_word*)t0)[4],lf[36],((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k6536 in k6563 in k6436 in do63 in k6375 in k6365 in k6350 in k6347 in k6344 in expand-send in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_6538(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 337  ferror");
t2=((C_word*)t0)[4];
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[3],lf[35],((C_word*)t0)[2],t1);}

/* k6490 in k6436 in do63 in k6375 in k6365 in k6350 in k6347 in k6344 in expand-send in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_6492(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6492,2,t0,t1);}
t2=(C_word)C_i_member(((C_word*)((C_word*)t0)[9])[1],((C_word*)t0)[8]);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_6498,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],tmp=(C_word)a,a+=5,tmp);
if(C_truep(t2)){
t4=t3;
f_6498(2,t4,C_SCHEME_UNDEFINED);}
else{
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_6519,a[2]=((C_word*)t0)[4],a[3]=t3,a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 349  keyname");
t5=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,((C_word*)((C_word*)t0)[2])[1]);}}

/* k6517 in k6490 in k6436 in do63 in k6375 in k6365 in k6350 in k6347 in k6344 in expand-send in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_6519(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 348  ferror");
t2=((C_word*)t0)[4];
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[3],lf[34],((C_word*)t0)[2],t1);}

/* k6496 in k6490 in k6436 in do63 in k6375 in k6365 in k6350 in k6347 in k6344 in expand-send in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_6498(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_i_set_car(((C_word*)t0)[3],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t4);
t6=((C_word*)t0)[2];
f_6432(t6,t5);}

/* k6430 in do63 in k6375 in k6365 in k6350 in k6347 in k6344 in expand-send in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_6432(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[7])[1];
f_6379(t2,((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* do69 in do63 in k6375 in k6365 in k6350 in k6347 in k6344 in expand-send in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_6391(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6391,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[5],((C_word*)t0)[4]));}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_6404,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_member(t4,((C_word*)t0)[2]))){
t5=(C_word)C_i_car(t2);
t6=(C_word)C_i_cadr(t5);
t7=t3;
f_6404(t7,(C_word)C_i_set_car(t2,t6));}
else{
t5=t3;
f_6404(t5,C_SCHEME_UNDEFINED);}}}

/* k6402 in do69 in do63 in k6375 in k6365 in k6350 in k6347 in k6344 in expand-send in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_fcall f_6404(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_6391(t3,((C_word*)t0)[2],t2);}

/* f_6614 in expand-send in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_6614(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6614,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}

/* f_6605 in expand-send in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_6605(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6605,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6613,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 279  keyword->string");
t4=C_retrieve(lf[33]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k6611 */
static void C_ccall f_6613(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 279  sprintf");
t2=C_retrieve(lf[31]);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],lf[32],t1);}

/* f_6616 in expand-send in k6332 in k6329 in k6325 in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_6616(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+3)){
C_save_and_reclaim((void*)tr3r,(void*)f_6616r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_6616r(t0,t1,t2,t3);}}

static void C_ccall f_6616r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a=C_alloc(3);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6624,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_apply(5,0,t4,C_retrieve(lf[31]),t2,t3);}

/* k6622 */
static void C_ccall f_6624(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 275  error");
t2=*((C_word*)lf[4]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* expand-optkeys in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_6038(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_6038,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_6199,a[2]=t4,a[3]=t2,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6291,a[2]=((C_word)li3),tmp=(C_word)a,a+=3,tmp);
C_trace("map");
t7=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t7+1)))(4,t7,t5,t6,t3);}

/* a6290 in expand-optkeys in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_6291(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[14],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6291,3,t0,t1,t2);}
if(C_truep((C_word)C_i_pairp(t2))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_6305,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6309,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 227  symbol->string");
t6=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t6))(3,t6,t4,t5);}
else{
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_6320,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6324,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 228  symbol->string");
t5=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}}

/* k6322 in a6290 in expand-optkeys in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_6324(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 228  gensym");
t2=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k6318 in a6290 in expand-optkeys in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_6320(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6320,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_list(&a,3,t1,((C_word*)t0)[2],C_SCHEME_FALSE));}

/* k6307 in a6290 in expand-optkeys in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_6309(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 227  gensym");
t2=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k6303 in a6290 in expand-optkeys in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_6305(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6305,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[2]));}

/* k6197 in expand-optkeys in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_6199(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6199,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_6202,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 230  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[28]);}

/* k6200 in k6197 in expand-optkeys in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_6202(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6202,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_6205,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 231  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[27]);}

/* k6203 in k6200 in k6197 in expand-optkeys in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_6205(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6205,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_6208,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_6285,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t1,a[5]=((C_word)li2),tmp=(C_word)a,a+=6,tmp);
C_trace("map");
t4=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,t2,t3,((C_word*)t0)[2]);}

/* a6284 in k6203 in k6200 in k6197 in expand-optkeys in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_6285(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[11],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6285,3,t0,t1,t2);}
t3=((C_word*)t0)[4];
t4=((C_word*)t0)[3];
t5=((C_word*)t0)[2];
t6=(C_word)C_i_car(t2);
t7=(C_word)C_i_cadr(t2);
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_6051,a[2]=t1,a[3]=t3,a[4]=t7,a[5]=t5,a[6]=t4,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
t9=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6110,a[2]=t8,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 191  symbol->string");
t10=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t10))(3,t10,t9,t7);}

/* k6108 in a6284 in k6203 in k6200 in k6197 in expand-optkeys in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_6110(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 191  string->keyword");
t2=C_retrieve(lf[24]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k6049 in a6284 in k6203 in k6200 in k6197 in expand-optkeys in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_6051(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[120],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6051,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
t3=(C_word)C_a_i_list(&a,3,lf[4],lf[19],t1);
t4=(C_word)C_a_i_list(&a,3,lf[20],((C_word*)t0)[7],t3);
t5=(C_word)C_a_i_list(&a,2,lf[15],((C_word*)t0)[6]);
t6=(C_word)C_a_i_list(&a,2,lf[3],t5);
t7=(C_word)C_a_i_list(&a,3,lf[4],lf[21],((C_word*)t0)[5]);
t8=(C_word)C_a_i_list(&a,2,lf[22],((C_word*)t0)[6]);
t9=(C_word)C_a_i_list(&a,4,lf[20],t6,t7,t8);
t10=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[4],t9);
t11=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[7],C_SCHEME_TRUE);
t12=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[3],C_SCHEME_TRUE);
t13=(C_word)C_a_i_list(&a,2,lf[23],((C_word*)t0)[6]);
t14=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[6],t13);
t15=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t15+1)))(2,t15,(C_word)C_a_i_list(&a,6,t2,t4,t10,t11,t12,t14));}

/* k6206 in k6203 in k6200 in k6197 in expand-optkeys in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_6208(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6208,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_6215,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
C_trace("map");
t3=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t2,*((C_word*)lf[15]+1),((C_word*)t0)[2]);}

/* k6213 in k6206 in k6203 in k6200 in k6197 in expand-optkeys in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_6215(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6215,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_6227,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=t1,a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_6261,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6275,a[2]=((C_word)li1),tmp=(C_word)a,a+=3,tmp);
C_trace("map");
t5=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t3,t4,((C_word*)t0)[2]);}

/* a6274 in k6213 in k6206 in k6203 in k6200 in k6197 in expand-optkeys in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_6275(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6275,3,t0,t1,t2);}
t3=(C_word)C_i_car(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_list(&a,2,t3,C_SCHEME_FALSE));}

/* k6259 in k6213 in k6206 in k6203 in k6200 in k6197 in expand-optkeys in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_6261(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6261,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,((C_word*)t0)[5],((C_word*)t0)[4]);
t3=(C_word)C_a_i_list(&a,2,((C_word*)t0)[3],C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,2,t2,t3);
C_trace("ChickenBridge.scm: 237  append");
t5=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,((C_word*)t0)[2],t1,t4);}

/* k6225 in k6213 in k6206 in k6203 in k6200 in k6197 in expand-optkeys in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_6227(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6227,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_6231,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_6235,a[2]=t2,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_6253,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word)li0),tmp=(C_word)a,a+=7,tmp);
C_trace("map");
t5=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t3,t4,((C_word*)t0)[2]);}

/* a6252 in k6225 in k6213 in k6206 in k6203 in k6200 in k6197 in expand-optkeys in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_6253(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word ab[119],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6253,3,t0,t1,t2);}
t3=((C_word*)t0)[5];
t4=((C_word*)t0)[4];
t5=((C_word*)t0)[3];
t6=((C_word*)t0)[2];
t7=(C_word)C_a_i_list(&a,2,lf[3],t4);
t8=(C_word)C_a_i_list(&a,2,lf[8],t4);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_6188,a[2]=t7,a[3]=t1,a[4]=t8,tmp=(C_word)a,a+=5,tmp);
t10=(C_word)C_i_car(t2);
t11=(C_word)C_i_cadr(t2);
t12=(C_word)C_a_i_list(&a,3,lf[4],lf[10],t5);
t13=(C_word)C_a_i_list(&a,3,lf[11],t3,t12);
t14=(C_word)C_a_i_list(&a,2,lf[8],t4);
t15=(C_word)C_a_i_list(&a,3,lf[12],t11,t14);
t16=(C_word)C_a_i_list(&a,2,lf[13],t11);
t17=(C_word)C_a_i_list(&a,3,lf[4],lf[14],t11);
t18=(C_word)C_a_i_list(&a,3,lf[11],t16,t17);
t19=(C_word)C_a_i_list(&a,3,lf[12],t10,C_SCHEME_TRUE);
t20=(C_word)C_a_i_list(&a,2,lf[15],t4);
t21=(C_word)C_a_i_list(&a,3,lf[12],t4,t20);
t22=(C_word)C_a_i_list(&a,6,lf[16],t13,t15,t18,t19,t21);
t23=(C_word)C_a_i_list(&a,1,t22);
C_trace("##sys#append");
t24=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t24+1)))(4,t24,t9,t6,t23);}

/* k6186 in a6252 in k6225 in k6213 in k6206 in k6203 in k6200 in k6197 in expand-optkeys in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_6188(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6188,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t1);
t3=(C_word)C_a_i_cons(&a,2,lf[9],t2);
t4=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_list(&a,3,lf[6],((C_word*)t0)[2],t3));}

/* k6233 in k6225 in k6213 in k6206 in k6203 in k6200 in k6197 in expand-optkeys in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_6235(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6235,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,lf[3],((C_word*)t0)[5]);
t3=(C_word)C_a_i_list(&a,3,lf[4],lf[5],((C_word*)t0)[4]);
t4=(C_word)C_a_i_list(&a,3,lf[6],t2,t3);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)t0)[3]);
C_trace("##sys#append");
t6=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t6+1)))(4,t6,((C_word*)t0)[2],t1,t5);}

/* k6229 in k6225 in k6213 in k6206 in k6203 in k6200 in k6197 in expand-optkeys in k6034 in k6031 in k6028 in k6025 */
static void C_ccall f_6231(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6231,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t1);
t3=(C_word)C_a_i_cons(&a,2,lf[1],t2);
t4=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_list(&a,3,lf[2],((C_word*)t0)[2],t3));}

#ifdef C_ENABLE_PTABLES
static C_PTABLE_ENTRY ptable[2560] = {
{"toplevelChickenBridge.scm",(void*)C_grace_toplevel},
{"f_6027ChickenBridge.scm",(void*)f_6027},
{"f_6030ChickenBridge.scm",(void*)f_6030},
{"f_6033ChickenBridge.scm",(void*)f_6033},
{"f_6036ChickenBridge.scm",(void*)f_6036},
{"f_37934ChickenBridge.scm",(void*)f_37934},
{"f_6327ChickenBridge.scm",(void*)f_6327},
{"f_6331ChickenBridge.scm",(void*)f_6331},
{"f_37882ChickenBridge.scm",(void*)f_37882},
{"f_37929ChickenBridge.scm",(void*)f_37929},
{"f_37919ChickenBridge.scm",(void*)f_37919},
{"f_37886ChickenBridge.scm",(void*)f_37886},
{"f_6334ChickenBridge.scm",(void*)f_6334},
{"f_37876ChickenBridge.scm",(void*)f_37876},
{"f_6627ChickenBridge.scm",(void*)f_6627},
{"f_9652ChickenBridge.scm",(void*)f_9652},
{"f_37660ChickenBridge.scm",(void*)f_37660},
{"f_37874ChickenBridge.scm",(void*)f_37874},
{"f_37694ChickenBridge.scm",(void*)f_37694},
{"f_37706ChickenBridge.scm",(void*)f_37706},
{"f_37710ChickenBridge.scm",(void*)f_37710},
{"f_37714ChickenBridge.scm",(void*)f_37714},
{"f_37858ChickenBridge.scm",(void*)f_37858},
{"f_37720ChickenBridge.scm",(void*)f_37720},
{"f_37740ChickenBridge.scm",(void*)f_37740},
{"f_37743ChickenBridge.scm",(void*)f_37743},
{"f_37751ChickenBridge.scm",(void*)f_37751},
{"f_37758ChickenBridge.scm",(void*)f_37758},
{"f_37761ChickenBridge.scm",(void*)f_37761},
{"f_37765ChickenBridge.scm",(void*)f_37765},
{"f_37772ChickenBridge.scm",(void*)f_37772},
{"f_37775ChickenBridge.scm",(void*)f_37775},
{"f_37779ChickenBridge.scm",(void*)f_37779},
{"f_37786ChickenBridge.scm",(void*)f_37786},
{"f_37730ChickenBridge.scm",(void*)f_37730},
{"f_37683ChickenBridge.scm",(void*)f_37683},
{"f_37673ChickenBridge.scm",(void*)f_37673},
{"f_37676ChickenBridge.scm",(void*)f_37676},
{"f_9655ChickenBridge.scm",(void*)f_9655},
{"f_37650ChickenBridge.scm",(void*)f_37650},
{"f_37658ChickenBridge.scm",(void*)f_37658},
{"f_10720ChickenBridge.scm",(void*)f_10720},
{"f_37636ChickenBridge.scm",(void*)f_37636},
{"f_37644ChickenBridge.scm",(void*)f_37644},
{"f_37648ChickenBridge.scm",(void*)f_37648},
{"f_19930ChickenBridge.scm",(void*)f_19930},
{"f_19981ChickenBridge.scm",(void*)f_19981},
{"f_37626ChickenBridge.scm",(void*)f_37626},
{"f_37634ChickenBridge.scm",(void*)f_37634},
{"f_20086ChickenBridge.scm",(void*)f_20086},
{"f_37523ChickenBridge.scm",(void*)f_37523},
{"f_37586ChickenBridge.scm",(void*)f_37586},
{"f_37590ChickenBridge.scm",(void*)f_37590},
{"f_37604ChickenBridge.scm",(void*)f_37604},
{"f_37526ChickenBridge.scm",(void*)f_37526},
{"f_37546ChickenBridge.scm",(void*)f_37546},
{"f_37550ChickenBridge.scm",(void*)f_37550},
{"f_20089ChickenBridge.scm",(void*)f_20089},
{"f_37509ChickenBridge.scm",(void*)f_37509},
{"f_37517ChickenBridge.scm",(void*)f_37517},
{"f_37521ChickenBridge.scm",(void*)f_37521},
{"f_20282ChickenBridge.scm",(void*)f_20282},
{"f_37483ChickenBridge.scm",(void*)f_37483},
{"f_37487ChickenBridge.scm",(void*)f_37487},
{"f_37493ChickenBridge.scm",(void*)f_37493},
{"f_37504ChickenBridge.scm",(void*)f_37504},
{"f_37500ChickenBridge.scm",(void*)f_37500},
{"f_20351ChickenBridge.scm",(void*)f_20351},
{"f_37461ChickenBridge.scm",(void*)f_37461},
{"f_21596ChickenBridge.scm",(void*)f_21596},
{"f_37441ChickenBridge.scm",(void*)f_37441},
{"f_21599ChickenBridge.scm",(void*)f_21599},
{"f_37401ChickenBridge.scm",(void*)f_37401},
{"f_21602ChickenBridge.scm",(void*)f_21602},
{"f_37307ChickenBridge.scm",(void*)f_37307},
{"f_37311ChickenBridge.scm",(void*)f_37311},
{"f_37314ChickenBridge.scm",(void*)f_37314},
{"f_37332ChickenBridge.scm",(void*)f_37332},
{"f_37335ChickenBridge.scm",(void*)f_37335},
{"f_37366ChickenBridge.scm",(void*)f_37366},
{"f_37338ChickenBridge.scm",(void*)f_37338},
{"f_37344ChickenBridge.scm",(void*)f_37344},
{"f_37297ChickenBridge.scm",(void*)f_37297},
{"f_37291ChickenBridge.scm",(void*)f_37291},
{"f_21605ChickenBridge.scm",(void*)f_21605},
{"f_37199ChickenBridge.scm",(void*)f_37199},
{"f_37201ChickenBridge.scm",(void*)f_37201},
{"f_37205ChickenBridge.scm",(void*)f_37205},
{"f_37208ChickenBridge.scm",(void*)f_37208},
{"f_37211ChickenBridge.scm",(void*)f_37211},
{"f_37251ChickenBridge.scm",(void*)f_37251},
{"f_37243ChickenBridge.scm",(void*)f_37243},
{"f_37214ChickenBridge.scm",(void*)f_37214},
{"f_37217ChickenBridge.scm",(void*)f_37217},
{"f_37220ChickenBridge.scm",(void*)f_37220},
{"f_37191ChickenBridge.scm",(void*)f_37191},
{"f_21608ChickenBridge.scm",(void*)f_21608},
{"f_37163ChickenBridge.scm",(void*)f_37163},
{"f_21611ChickenBridge.scm",(void*)f_21611},
{"f_37127ChickenBridge.scm",(void*)f_37127},
{"f_37139ChickenBridge.scm",(void*)f_37139},
{"f_37135ChickenBridge.scm",(void*)f_37135},
{"f_37109ChickenBridge.scm",(void*)f_37109},
{"f_37103ChickenBridge.scm",(void*)f_37103},
{"f_21614ChickenBridge.scm",(void*)f_21614},
{"f_37017ChickenBridge.scm",(void*)f_37017},
{"f_37021ChickenBridge.scm",(void*)f_37021},
{"f_37024ChickenBridge.scm",(void*)f_37024},
{"f_37027ChickenBridge.scm",(void*)f_37027},
{"f_37040ChickenBridge.scm",(void*)f_37040},
{"f_36986ChickenBridge.scm",(void*)f_36986},
{"f_36990ChickenBridge.scm",(void*)f_36990},
{"f_37005ChickenBridge.scm",(void*)f_37005},
{"f_36980ChickenBridge.scm",(void*)f_36980},
{"f_21617ChickenBridge.scm",(void*)f_21617},
{"f_36866ChickenBridge.scm",(void*)f_36866},
{"f_36882ChickenBridge.scm",(void*)f_36882},
{"f_36893ChickenBridge.scm",(void*)f_36893},
{"f_36860ChickenBridge.scm",(void*)f_36860},
{"f_21673ChickenBridge.scm",(void*)f_21673},
{"f_36727ChickenBridge.scm",(void*)f_36727},
{"f_36750ChickenBridge.scm",(void*)f_36750},
{"f_36747ChickenBridge.scm",(void*)f_36747},
{"f_36721ChickenBridge.scm",(void*)f_36721},
{"f_21676ChickenBridge.scm",(void*)f_21676},
{"f_36575ChickenBridge.scm",(void*)f_36575},
{"f_36593ChickenBridge.scm",(void*)f_36593},
{"f_36602ChickenBridge.scm",(void*)f_36602},
{"f_36569ChickenBridge.scm",(void*)f_36569},
{"f_21679ChickenBridge.scm",(void*)f_21679},
{"f_36522ChickenBridge.scm",(void*)f_36522},
{"f_36526ChickenBridge.scm",(void*)f_36526},
{"f_36529ChickenBridge.scm",(void*)f_36529},
{"f_36545ChickenBridge.scm",(void*)f_36545},
{"f_36504ChickenBridge.scm",(void*)f_36504},
{"f_36498ChickenBridge.scm",(void*)f_36498},
{"f_21682ChickenBridge.scm",(void*)f_21682},
{"f_36422ChickenBridge.scm",(void*)f_36422},
{"f_21821ChickenBridge.scm",(void*)f_21821},
{"f_36348ChickenBridge.scm",(void*)f_36348},
{"f_36355ChickenBridge.scm",(void*)f_36355},
{"f_36342ChickenBridge.scm",(void*)f_36342},
{"f_21824ChickenBridge.scm",(void*)f_21824},
{"f_36238ChickenBridge.scm",(void*)f_36238},
{"f_36246ChickenBridge.scm",(void*)f_36246},
{"f_36212ChickenBridge.scm",(void*)f_36212},
{"f_36229ChickenBridge.scm",(void*)f_36229},
{"f_36220ChickenBridge.scm",(void*)f_36220},
{"f_36206ChickenBridge.scm",(void*)f_36206},
{"f_21827ChickenBridge.scm",(void*)f_21827},
{"f_36162ChickenBridge.scm",(void*)f_36162},
{"f_21830ChickenBridge.scm",(void*)f_21830},
{"f_36080ChickenBridge.scm",(void*)f_36080},
{"f_36091ChickenBridge.scm",(void*)f_36091},
{"f_36093ChickenBridge.scm",(void*)f_36093},
{"f_36122ChickenBridge.scm",(void*)f_36122},
{"f_36058ChickenBridge.scm",(void*)f_36058},
{"f_36074ChickenBridge.scm",(void*)f_36074},
{"f_36052ChickenBridge.scm",(void*)f_36052},
{"f_21833ChickenBridge.scm",(void*)f_21833},
{"f_36005ChickenBridge.scm",(void*)f_36005},
{"f_36009ChickenBridge.scm",(void*)f_36009},
{"f_36016ChickenBridge.scm",(void*)f_36016},
{"f_35983ChickenBridge.scm",(void*)f_35983},
{"f_35999ChickenBridge.scm",(void*)f_35999},
{"f_35977ChickenBridge.scm",(void*)f_35977},
{"f_21836ChickenBridge.scm",(void*)f_21836},
{"f_35845ChickenBridge.scm",(void*)f_35845},
{"f_35885ChickenBridge.scm",(void*)f_35885},
{"f_35849ChickenBridge.scm",(void*)f_35849},
{"f_35865ChickenBridge.scm",(void*)f_35865},
{"f_35877ChickenBridge.scm",(void*)f_35877},
{"f_35881ChickenBridge.scm",(void*)f_35881},
{"f_35873ChickenBridge.scm",(void*)f_35873},
{"f_35770ChickenBridge.scm",(void*)f_35770},
{"f_35813ChickenBridge.scm",(void*)f_35813},
{"f_35817ChickenBridge.scm",(void*)f_35817},
{"f_35777ChickenBridge.scm",(void*)f_35777},
{"f_35788ChickenBridge.scm",(void*)f_35788},
{"f_35764ChickenBridge.scm",(void*)f_35764},
{"f_21839ChickenBridge.scm",(void*)f_21839},
{"f_35744ChickenBridge.scm",(void*)f_35744},
{"f_35738ChickenBridge.scm",(void*)f_35738},
{"f_21842ChickenBridge.scm",(void*)f_21842},
{"f_35718ChickenBridge.scm",(void*)f_35718},
{"f_35722ChickenBridge.scm",(void*)f_35722},
{"f_35710ChickenBridge.scm",(void*)f_35710},
{"f_21845ChickenBridge.scm",(void*)f_21845},
{"f_35690ChickenBridge.scm",(void*)f_35690},
{"f_35694ChickenBridge.scm",(void*)f_35694},
{"f_35682ChickenBridge.scm",(void*)f_35682},
{"f_21848ChickenBridge.scm",(void*)f_21848},
{"f_35662ChickenBridge.scm",(void*)f_35662},
{"f_35666ChickenBridge.scm",(void*)f_35666},
{"f_35654ChickenBridge.scm",(void*)f_35654},
{"f_21851ChickenBridge.scm",(void*)f_21851},
{"f_35634ChickenBridge.scm",(void*)f_35634},
{"f_35638ChickenBridge.scm",(void*)f_35638},
{"f_35626ChickenBridge.scm",(void*)f_35626},
{"f_21854ChickenBridge.scm",(void*)f_21854},
{"f_35525ChickenBridge.scm",(void*)f_35525},
{"f_35495ChickenBridge.scm",(void*)f_35495},
{"f_35519ChickenBridge.scm",(void*)f_35519},
{"f_35489ChickenBridge.scm",(void*)f_35489},
{"f_21857ChickenBridge.scm",(void*)f_21857},
{"f_35439ChickenBridge.scm",(void*)f_35439},
{"f_35441ChickenBridge.scm",(void*)f_35441},
{"f_35445ChickenBridge.scm",(void*)f_35445},
{"f_35473ChickenBridge.scm",(void*)f_35473},
{"f_35465ChickenBridge.scm",(void*)f_35465},
{"f_35461ChickenBridge.scm",(void*)f_35461},
{"f_35448ChickenBridge.scm",(void*)f_35448},
{"f_35431ChickenBridge.scm",(void*)f_35431},
{"f_21860ChickenBridge.scm",(void*)f_21860},
{"f_35378ChickenBridge.scm",(void*)f_35378},
{"f_35380ChickenBridge.scm",(void*)f_35380},
{"f_35384ChickenBridge.scm",(void*)f_35384},
{"f_35415ChickenBridge.scm",(void*)f_35415},
{"f_35407ChickenBridge.scm",(void*)f_35407},
{"f_35403ChickenBridge.scm",(void*)f_35403},
{"f_35387ChickenBridge.scm",(void*)f_35387},
{"f_35390ChickenBridge.scm",(void*)f_35390},
{"f_35370ChickenBridge.scm",(void*)f_35370},
{"f_21863ChickenBridge.scm",(void*)f_21863},
{"f_35320ChickenBridge.scm",(void*)f_35320},
{"f_35334ChickenBridge.scm",(void*)f_35334},
{"f_35326ChickenBridge.scm",(void*)f_35326},
{"f_35285ChickenBridge.scm",(void*)f_35285},
{"f_35318ChickenBridge.scm",(void*)f_35318},
{"f_35279ChickenBridge.scm",(void*)f_35279},
{"f_21866ChickenBridge.scm",(void*)f_21866},
{"f_35226ChickenBridge.scm",(void*)f_35226},
{"f_35230ChickenBridge.scm",(void*)f_35230},
{"f_35243ChickenBridge.scm",(void*)f_35243},
{"f_35235ChickenBridge.scm",(void*)f_35235},
{"f_35183ChickenBridge.scm",(void*)f_35183},
{"f_35216ChickenBridge.scm",(void*)f_35216},
{"f_35177ChickenBridge.scm",(void*)f_35177},
{"f_21869ChickenBridge.scm",(void*)f_21869},
{"f_35097ChickenBridge.scm",(void*)f_35097},
{"f_35091ChickenBridge.scm",(void*)f_35091},
{"f_21872ChickenBridge.scm",(void*)f_21872},
{"f_34860ChickenBridge.scm",(void*)f_34860},
{"f_34864ChickenBridge.scm",(void*)f_34864},
{"f_34872ChickenBridge.scm",(void*)f_34872},
{"f_34895ChickenBridge.scm",(void*)f_34895},
{"f_34898ChickenBridge.scm",(void*)f_34898},
{"f_34901ChickenBridge.scm",(void*)f_34901},
{"f_34904ChickenBridge.scm",(void*)f_34904},
{"f_34964ChickenBridge.scm",(void*)f_34964},
{"f_34971ChickenBridge.scm",(void*)f_34971},
{"f_34981ChickenBridge.scm",(void*)f_34981},
{"f_34991ChickenBridge.scm",(void*)f_34991},
{"f_35005ChickenBridge.scm",(void*)f_35005},
{"f_35015ChickenBridge.scm",(void*)f_35015},
{"f_35025ChickenBridge.scm",(void*)f_35025},
{"f_35035ChickenBridge.scm",(void*)f_35035},
{"f_34907ChickenBridge.scm",(void*)f_34907},
{"f_34931ChickenBridge.scm",(void*)f_34931},
{"f_34910ChickenBridge.scm",(void*)f_34910},
{"f_34817ChickenBridge.scm",(void*)f_34817},
{"f_34850ChickenBridge.scm",(void*)f_34850},
{"f_34811ChickenBridge.scm",(void*)f_34811},
{"f_21875ChickenBridge.scm",(void*)f_21875},
{"f_34729ChickenBridge.scm",(void*)f_34729},
{"f_34733ChickenBridge.scm",(void*)f_34733},
{"f_34739ChickenBridge.scm",(void*)f_34739},
{"f_34759ChickenBridge.scm",(void*)f_34759},
{"f_34703ChickenBridge.scm",(void*)f_34703},
{"f_34713ChickenBridge.scm",(void*)f_34713},
{"f_34697ChickenBridge.scm",(void*)f_34697},
{"f_21878ChickenBridge.scm",(void*)f_21878},
{"f_34574ChickenBridge.scm",(void*)f_34574},
{"f_34578ChickenBridge.scm",(void*)f_34578},
{"f_34506ChickenBridge.scm",(void*)f_34506},
{"f_34525ChickenBridge.scm",(void*)f_34525},
{"f_34560ChickenBridge.scm",(void*)f_34560},
{"f_34531ChickenBridge.scm",(void*)f_34531},
{"f_34535ChickenBridge.scm",(void*)f_34535},
{"f_34549ChickenBridge.scm",(void*)f_34549},
{"f_34538ChickenBridge.scm",(void*)f_34538},
{"f_34519ChickenBridge.scm",(void*)f_34519},
{"f_34500ChickenBridge.scm",(void*)f_34500},
{"f_21881ChickenBridge.scm",(void*)f_21881},
{"f_34228ChickenBridge.scm",(void*)f_34228},
{"f_22404ChickenBridge.scm",(void*)f_22404},
{"f_34180ChickenBridge.scm",(void*)f_34180},
{"f_34172ChickenBridge.scm",(void*)f_34172},
{"f_22407ChickenBridge.scm",(void*)f_22407},
{"f_34052ChickenBridge.scm",(void*)f_34052},
{"f_22413ChickenBridge.scm",(void*)f_22413},
{"f_22872ChickenBridge.scm",(void*)f_22872},
{"f_22906ChickenBridge.scm",(void*)f_22906},
{"f_22898ChickenBridge.scm",(void*)f_22898},
{"f_22894ChickenBridge.scm",(void*)f_22894},
{"f_22879ChickenBridge.scm",(void*)f_22879},
{"f_22883ChickenBridge.scm",(void*)f_22883},
{"f_22876ChickenBridge.scm",(void*)f_22876},
{"f_22431ChickenBridge.scm",(void*)f_22431},
{"f_22865ChickenBridge.scm",(void*)f_22865},
{"f_22861ChickenBridge.scm",(void*)f_22861},
{"f_22438ChickenBridge.scm",(void*)f_22438},
{"f_22736ChickenBridge.scm",(void*)f_22736},
{"f_22757ChickenBridge.scm",(void*)f_22757},
{"f_22759ChickenBridge.scm",(void*)f_22759},
{"f_22773ChickenBridge.scm",(void*)f_22773},
{"f_22826ChickenBridge.scm",(void*)f_22826},
{"f_22776ChickenBridge.scm",(void*)f_22776},
{"f_22811ChickenBridge.scm",(void*)f_22811},
{"f_22779ChickenBridge.scm",(void*)f_22779},
{"f_22792ChickenBridge.scm",(void*)f_22792},
{"f_22804ChickenBridge.scm",(void*)f_22804},
{"f_22796ChickenBridge.scm",(void*)f_22796},
{"f_22782ChickenBridge.scm",(void*)f_22782},
{"f_22746ChickenBridge.scm",(void*)f_22746},
{"f_22441ChickenBridge.scm",(void*)f_22441},
{"f_22700ChickenBridge.scm",(void*)f_22700},
{"f_22726ChickenBridge.scm",(void*)f_22726},
{"f_22711ChickenBridge.scm",(void*)f_22711},
{"f_22444ChickenBridge.scm",(void*)f_22444},
{"f_22448ChickenBridge.scm",(void*)f_22448},
{"f_22644ChickenBridge.scm",(void*)f_22644},
{"f_22654ChickenBridge.scm",(void*)f_22654},
{"f_22657ChickenBridge.scm",(void*)f_22657},
{"f_22678ChickenBridge.scm",(void*)f_22678},
{"f_22660ChickenBridge.scm",(void*)f_22660},
{"f_22664ChickenBridge.scm",(void*)f_22664},
{"f_22451ChickenBridge.scm",(void*)f_22451},
{"f_22454ChickenBridge.scm",(void*)f_22454},
{"f_22607ChickenBridge.scm",(void*)f_22607},
{"f_22615ChickenBridge.scm",(void*)f_22615},
{"f_22611ChickenBridge.scm",(void*)f_22611},
{"f_22457ChickenBridge.scm",(void*)f_22457},
{"f_22485ChickenBridge.scm",(void*)f_22485},
{"f_22488ChickenBridge.scm",(void*)f_22488},
{"f_22491ChickenBridge.scm",(void*)f_22491},
{"f_22494ChickenBridge.scm",(void*)f_22494},
{"f_22497ChickenBridge.scm",(void*)f_22497},
{"f_22556ChickenBridge.scm",(void*)f_22556},
{"f_34006ChickenBridge.scm",(void*)f_34006},
{"f_34022ChickenBridge.scm",(void*)f_34022},
{"f_34025ChickenBridge.scm",(void*)f_34025},
{"f_34028ChickenBridge.scm",(void*)f_34028},
{"f_34031ChickenBridge.scm",(void*)f_34031},
{"f_34042ChickenBridge.scm",(void*)f_34042},
{"f_34000ChickenBridge.scm",(void*)f_34000},
{"f_22913ChickenBridge.scm",(void*)f_22913},
{"f_33861ChickenBridge.scm",(void*)f_33861},
{"f_33900ChickenBridge.scm",(void*)f_33900},
{"f_33874ChickenBridge.scm",(void*)f_33874},
{"f_33855ChickenBridge.scm",(void*)f_33855},
{"f_22916ChickenBridge.scm",(void*)f_22916},
{"f_33443ChickenBridge.scm",(void*)f_33443},
{"f_33447ChickenBridge.scm",(void*)f_33447},
{"f_33459ChickenBridge.scm",(void*)f_33459},
{"f_33517ChickenBridge.scm",(void*)f_33517},
{"f_33520ChickenBridge.scm",(void*)f_33520},
{"f_33523ChickenBridge.scm",(void*)f_33523},
{"f_33735ChickenBridge.scm",(void*)f_33735},
{"f_33673ChickenBridge.scm",(void*)f_33673},
{"f_33707ChickenBridge.scm",(void*)f_33707},
{"f_33682ChickenBridge.scm",(void*)f_33682},
{"f_33693ChickenBridge.scm",(void*)f_33693},
{"f_33689ChickenBridge.scm",(void*)f_33689},
{"f_33532ChickenBridge.scm",(void*)f_33532},
{"f_33610ChickenBridge.scm",(void*)f_33610},
{"f_33651ChickenBridge.scm",(void*)f_33651},
{"f_33655ChickenBridge.scm",(void*)f_33655},
{"f_33659ChickenBridge.scm",(void*)f_33659},
{"f_33614ChickenBridge.scm",(void*)f_33614},
{"f_33618ChickenBridge.scm",(void*)f_33618},
{"f_33645ChickenBridge.scm",(void*)f_33645},
{"f_33621ChickenBridge.scm",(void*)f_33621},
{"f_33535ChickenBridge.scm",(void*)f_33535},
{"f_33607ChickenBridge.scm",(void*)f_33607},
{"f_33549ChickenBridge.scm",(void*)f_33549},
{"f_33551ChickenBridge.scm",(void*)f_33551},
{"f_33599ChickenBridge.scm",(void*)f_33599},
{"f_33570ChickenBridge.scm",(void*)f_33570},
{"f_33587ChickenBridge.scm",(void*)f_33587},
{"f_33573ChickenBridge.scm",(void*)f_33573},
{"f_33566ChickenBridge.scm",(void*)f_33566},
{"f_33538ChickenBridge.scm",(void*)f_33538},
{"f_33468ChickenBridge.scm",(void*)f_33468},
{"f_33478ChickenBridge.scm",(void*)f_33478},
{"f_33484ChickenBridge.scm",(void*)f_33484},
{"f_33456ChickenBridge.scm",(void*)f_33456},
{"f_33404ChickenBridge.scm",(void*)f_33404},
{"f_33421ChickenBridge.scm",(void*)f_33421},
{"f_33437ChickenBridge.scm",(void*)f_33437},
{"f_33415ChickenBridge.scm",(void*)f_33415},
{"f_33398ChickenBridge.scm",(void*)f_33398},
{"f_22919ChickenBridge.scm",(void*)f_22919},
{"f_33322ChickenBridge.scm",(void*)f_33322},
{"f_22922ChickenBridge.scm",(void*)f_22922},
{"f_33298ChickenBridge.scm",(void*)f_33298},
{"f_33310ChickenBridge.scm",(void*)f_33310},
{"f_33306ChickenBridge.scm",(void*)f_33306},
{"f_33284ChickenBridge.scm",(void*)f_33284},
{"f_33292ChickenBridge.scm",(void*)f_33292},
{"f_33278ChickenBridge.scm",(void*)f_33278},
{"f_22925ChickenBridge.scm",(void*)f_22925},
{"f_33270ChickenBridge.scm",(void*)f_33270},
{"f_26696ChickenBridge.scm",(void*)f_26696},
{"f_26699ChickenBridge.scm",(void*)f_26699},
{"f_26865ChickenBridge.scm",(void*)f_26865},
{"f_26861ChickenBridge.scm",(void*)f_26861},
{"f_26851ChickenBridge.scm",(void*)f_26851},
{"f_26706ChickenBridge.scm",(void*)f_26706},
{"f_26710ChickenBridge.scm",(void*)f_26710},
{"f_26713ChickenBridge.scm",(void*)f_26713},
{"f_26724ChickenBridge.scm",(void*)f_26724},
{"f_26732ChickenBridge.scm",(void*)f_26732},
{"f_26804ChickenBridge.scm",(void*)f_26804},
{"f_26812ChickenBridge.scm",(void*)f_26812},
{"f_26808ChickenBridge.scm",(void*)f_26808},
{"f_26800ChickenBridge.scm",(void*)f_26800},
{"f_26796ChickenBridge.scm",(void*)f_26796},
{"f_26768ChickenBridge.scm",(void*)f_26768},
{"f_26764ChickenBridge.scm",(void*)f_26764},
{"f_26728ChickenBridge.scm",(void*)f_26728},
{"f_23343ChickenBridge.scm",(void*)f_23343},
{"f_33256ChickenBridge.scm",(void*)f_33256},
{"f_23346ChickenBridge.scm",(void*)f_23346},
{"f_33227ChickenBridge.scm",(void*)f_33227},
{"f_33231ChickenBridge.scm",(void*)f_33231},
{"f_23349ChickenBridge.scm",(void*)f_23349},
{"f_33224ChickenBridge.scm",(void*)f_33224},
{"f_23352ChickenBridge.scm",(void*)f_23352},
{"f_33082ChickenBridge.scm",(void*)f_33082},
{"f_26878ChickenBridge.scm",(void*)f_26878},
{"f_27010ChickenBridge.scm",(void*)f_27010},
{"f_26881ChickenBridge.scm",(void*)f_26881},
{"f_26892ChickenBridge.scm",(void*)f_26892},
{"f_26900ChickenBridge.scm",(void*)f_26900},
{"f_26924ChickenBridge.scm",(void*)f_26924},
{"f_26927ChickenBridge.scm",(void*)f_26927},
{"f_26935ChickenBridge.scm",(void*)f_26935},
{"f_26943ChickenBridge.scm",(void*)f_26943},
{"f_26963ChickenBridge.scm",(void*)f_26963},
{"f_26959ChickenBridge.scm",(void*)f_26959},
{"f_26939ChickenBridge.scm",(void*)f_26939},
{"f_26931ChickenBridge.scm",(void*)f_26931},
{"f_26920ChickenBridge.scm",(void*)f_26920},
{"f_26896ChickenBridge.scm",(void*)f_26896},
{"f_26872ChickenBridge.scm",(void*)f_26872},
{"f_31794ChickenBridge.scm",(void*)f_31794},
{"f_31797ChickenBridge.scm",(void*)f_31797},
{"f_31800ChickenBridge.scm",(void*)f_31800},
{"f_31803ChickenBridge.scm",(void*)f_31803},
{"f_31806ChickenBridge.scm",(void*)f_31806},
{"f_31809ChickenBridge.scm",(void*)f_31809},
{"f_31812ChickenBridge.scm",(void*)f_31812},
{"f_31815ChickenBridge.scm",(void*)f_31815},
{"f_31818ChickenBridge.scm",(void*)f_31818},
{"f_31821ChickenBridge.scm",(void*)f_31821},
{"f_31824ChickenBridge.scm",(void*)f_31824},
{"f_31949ChickenBridge.scm",(void*)f_31949},
{"f_31952ChickenBridge.scm",(void*)f_31952},
{"f_31955ChickenBridge.scm",(void*)f_31955},
{"f_33019ChickenBridge.scm",(void*)f_33019},
{"f_33047ChickenBridge.scm",(void*)f_33047},
{"f_32686ChickenBridge.scm",(void*)f_32686},
{"f_33013ChickenBridge.scm",(void*)f_33013},
{"f_32731ChickenBridge.scm",(void*)f_32731},
{"f_32737ChickenBridge.scm",(void*)f_32737},
{"f_32740ChickenBridge.scm",(void*)f_32740},
{"f_32743ChickenBridge.scm",(void*)f_32743},
{"f_32747ChickenBridge.scm",(void*)f_32747},
{"f_32957ChickenBridge.scm",(void*)f_32957},
{"f_32969ChickenBridge.scm",(void*)f_32969},
{"f_32965ChickenBridge.scm",(void*)f_32965},
{"f_32750ChickenBridge.scm",(void*)f_32750},
{"f_32914ChickenBridge.scm",(void*)f_32914},
{"f_32950ChickenBridge.scm",(void*)f_32950},
{"f_32943ChickenBridge.scm",(void*)f_32943},
{"f_32753ChickenBridge.scm",(void*)f_32753},
{"f_32852ChickenBridge.scm",(void*)f_32852},
{"f_32860ChickenBridge.scm",(void*)f_32860},
{"f_32856ChickenBridge.scm",(void*)f_32856},
{"f_32848ChickenBridge.scm",(void*)f_32848},
{"f_32844ChickenBridge.scm",(void*)f_32844},
{"f_32800ChickenBridge.scm",(void*)f_32800},
{"f_32796ChickenBridge.scm",(void*)f_32796},
{"f_32763ChickenBridge.scm",(void*)f_32763},
{"f_32774ChickenBridge.scm",(void*)f_32774},
{"f_32782ChickenBridge.scm",(void*)f_32782},
{"f_32778ChickenBridge.scm",(void*)f_32778},
{"f_32976ChickenBridge.scm",(void*)f_32976},
{"f_32984ChickenBridge.scm",(void*)f_32984},
{"f_32998ChickenBridge.scm",(void*)f_32998},
{"f_32988ChickenBridge.scm",(void*)f_32988},
{"f_32979ChickenBridge.scm",(void*)f_32979},
{"f_32982ChickenBridge.scm",(void*)f_32982},
{"f_32688ChickenBridge.scm",(void*)f_32688},
{"f_32704ChickenBridge.scm",(void*)f_32704},
{"f_32615ChickenBridge.scm",(void*)f_32615},
{"f_32626ChickenBridge.scm",(void*)f_32626},
{"f_32629ChickenBridge.scm",(void*)f_32629},
{"f_32636ChickenBridge.scm",(void*)f_32636},
{"f_32605ChickenBridge.scm",(void*)f_32605},
{"f_32260ChickenBridge.scm",(void*)f_32260},
{"f_32609ChickenBridge.scm",(void*)f_32609},
{"f_32547ChickenBridge.scm",(void*)f_32547},
{"f_32565ChickenBridge.scm",(void*)f_32565},
{"f_32575ChickenBridge.scm",(void*)f_32575},
{"f_32551ChickenBridge.scm",(void*)f_32551},
{"f_32538ChickenBridge.scm",(void*)f_32538},
{"f_32238ChickenBridge.scm",(void*)f_32238},
{"f_32542ChickenBridge.scm",(void*)f_32542},
{"f_32532ChickenBridge.scm",(void*)f_32532},
{"f_32220ChickenBridge.scm",(void*)f_32220},
{"f_32523ChickenBridge.scm",(void*)f_32523},
{"f_32229ChickenBridge.scm",(void*)f_32229},
{"f_32527ChickenBridge.scm",(void*)f_32527},
{"f_32460ChickenBridge.scm",(void*)f_32460},
{"f_32485ChickenBridge.scm",(void*)f_32485},
{"f_32185ChickenBridge.scm",(void*)f_32185},
{"f_32473ChickenBridge.scm",(void*)f_32473},
{"f_32284ChickenBridge.scm",(void*)f_32284},
{"f_32411ChickenBridge.scm",(void*)f_32411},
{"f_32406ChickenBridge.scm",(void*)f_32406},
{"f_32286ChickenBridge.scm",(void*)f_32286},
{"f_32405ChickenBridge.scm",(void*)f_32405},
{"f_32401ChickenBridge.scm",(void*)f_32401},
{"f_32393ChickenBridge.scm",(void*)f_32393},
{"f_32357ChickenBridge.scm",(void*)f_32357},
{"f_32390ChickenBridge.scm",(void*)f_32390},
{"f_32386ChickenBridge.scm",(void*)f_32386},
{"f_32367ChickenBridge.scm",(void*)f_32367},
{"f_32346ChickenBridge.scm",(void*)f_32346},
{"f_32316ChickenBridge.scm",(void*)f_32316},
{"f_32288ChickenBridge.scm",(void*)f_32288},
{"f_32265ChickenBridge.scm",(void*)f_32265},
{"f_32270ChickenBridge.scm",(void*)f_32270},
{"f_32275ChickenBridge.scm",(void*)f_32275},
{"f_32243ChickenBridge.scm",(void*)f_32243},
{"f_32247ChickenBridge.scm",(void*)f_32247},
{"f_32199ChickenBridge.scm",(void*)f_32199},
{"f_32203ChickenBridge.scm",(void*)f_32203},
{"f_32190ChickenBridge.scm",(void*)f_32190},
{"f_32194ChickenBridge.scm",(void*)f_32194},
{"f_32178ChickenBridge.scm",(void*)f_32178},
{"f_32175ChickenBridge.scm",(void*)f_32175},
{"f_32161ChickenBridge.scm",(void*)f_32161},
{"f_32166ChickenBridge.scm",(void*)f_32166},
{"f_32147ChickenBridge.scm",(void*)f_32147},
{"f_32152ChickenBridge.scm",(void*)f_32152},
{"f_31957ChickenBridge.scm",(void*)f_31957},
{"f_32018ChickenBridge.scm",(void*)f_32018},
{"f_32020ChickenBridge.scm",(void*)f_32020},
{"f_32030ChickenBridge.scm",(void*)f_32030},
{"f_32049ChickenBridge.scm",(void*)f_32049},
{"f_32089ChickenBridge.scm",(void*)f_32089},
{"f_32131ChickenBridge.scm",(void*)f_32131},
{"f_32101ChickenBridge.scm",(void*)f_32101},
{"f_32086ChickenBridge.scm",(void*)f_32086},
{"f_32004ChickenBridge.scm",(void*)f_32004},
{"f_31969ChickenBridge.scm",(void*)f_31969},
{"f_31996ChickenBridge.scm",(void*)f_31996},
{"f_31977ChickenBridge.scm",(void*)f_31977},
{"f_31984ChickenBridge.scm",(void*)f_31984},
{"f_31988ChickenBridge.scm",(void*)f_31988},
{"f_31992ChickenBridge.scm",(void*)f_31992},
{"f_32069ChickenBridge.scm",(void*)f_32069},
{"f_32047ChickenBridge.scm",(void*)f_32047},
{"f_32033ChickenBridge.scm",(void*)f_32033},
{"f_32036ChickenBridge.scm",(void*)f_32036},
{"f_32011ChickenBridge.scm",(void*)f_32011},
{"f_31940ChickenBridge.scm",(void*)f_31940},
{"f_31945ChickenBridge.scm",(void*)f_31945},
{"f_31883ChickenBridge.scm",(void*)f_31883},
{"f_31916ChickenBridge.scm",(void*)f_31916},
{"f_31896ChickenBridge.scm",(void*)f_31896},
{"f_31904ChickenBridge.scm",(void*)f_31904},
{"f_31887ChickenBridge.scm",(void*)f_31887},
{"f_31826ChickenBridge.scm",(void*)f_31826},
{"f_31859ChickenBridge.scm",(void*)f_31859},
{"f_31839ChickenBridge.scm",(void*)f_31839},
{"f_31847ChickenBridge.scm",(void*)f_31847},
{"f_31830ChickenBridge.scm",(void*)f_31830},
{"f_31736ChickenBridge.scm",(void*)f_31736},
{"f_31790ChickenBridge.scm",(void*)f_31790},
{"f_31785ChickenBridge.scm",(void*)f_31785},
{"f_31748ChickenBridge.scm",(void*)f_31748},
{"f_31754ChickenBridge.scm",(void*)f_31754},
{"f_31780ChickenBridge.scm",(void*)f_31780},
{"f_31784ChickenBridge.scm",(void*)f_31784},
{"f_31760ChickenBridge.scm",(void*)f_31760},
{"f_31778ChickenBridge.scm",(void*)f_31778},
{"f_31775ChickenBridge.scm",(void*)f_31775},
{"f_31771ChickenBridge.scm",(void*)f_31771},
{"f_31764ChickenBridge.scm",(void*)f_31764},
{"f_31721ChickenBridge.scm",(void*)f_31721},
{"f_31726ChickenBridge.scm",(void*)f_31726},
{"f_31693ChickenBridge.scm",(void*)f_31693},
{"f_31698ChickenBridge.scm",(void*)f_31698},
{"f_31665ChickenBridge.scm",(void*)f_31665},
{"f_31670ChickenBridge.scm",(void*)f_31670},
{"f_31637ChickenBridge.scm",(void*)f_31637},
{"f_31642ChickenBridge.scm",(void*)f_31642},
{"f_31609ChickenBridge.scm",(void*)f_31609},
{"f_31614ChickenBridge.scm",(void*)f_31614},
{"f_31581ChickenBridge.scm",(void*)f_31581},
{"f_31586ChickenBridge.scm",(void*)f_31586},
{"f_31553ChickenBridge.scm",(void*)f_31553},
{"f_31558ChickenBridge.scm",(void*)f_31558},
{"f_31525ChickenBridge.scm",(void*)f_31525},
{"f_31530ChickenBridge.scm",(void*)f_31530},
{"f_31497ChickenBridge.scm",(void*)f_31497},
{"f_31502ChickenBridge.scm",(void*)f_31502},
{"f_31469ChickenBridge.scm",(void*)f_31469},
{"f_31474ChickenBridge.scm",(void*)f_31474},
{"f_31446ChickenBridge.scm",(void*)f_31446},
{"f_31451ChickenBridge.scm",(void*)f_31451},
{"f_31450ChickenBridge.scm",(void*)f_31450},
{"f_31427ChickenBridge.scm",(void*)f_31427},
{"f_31432ChickenBridge.scm",(void*)f_31432},
{"f_31372ChickenBridge.scm",(void*)f_31372},
{"f_31379ChickenBridge.scm",(void*)f_31379},
{"f_31382ChickenBridge.scm",(void*)f_31382},
{"f_31406ChickenBridge.scm",(void*)f_31406},
{"f_31386ChickenBridge.scm",(void*)f_31386},
{"f_31376ChickenBridge.scm",(void*)f_31376},
{"f_31325ChickenBridge.scm",(void*)f_31325},
{"f_31332ChickenBridge.scm",(void*)f_31332},
{"f_31335ChickenBridge.scm",(void*)f_31335},
{"f_31355ChickenBridge.scm",(void*)f_31355},
{"f_31339ChickenBridge.scm",(void*)f_31339},
{"f_31302ChickenBridge.scm",(void*)f_31302},
{"f_31307ChickenBridge.scm",(void*)f_31307},
{"f_31306ChickenBridge.scm",(void*)f_31306},
{"f_31283ChickenBridge.scm",(void*)f_31283},
{"f_31288ChickenBridge.scm",(void*)f_31288},
{"f_31260ChickenBridge.scm",(void*)f_31260},
{"f_31265ChickenBridge.scm",(void*)f_31265},
{"f_31264ChickenBridge.scm",(void*)f_31264},
{"f_31241ChickenBridge.scm",(void*)f_31241},
{"f_31246ChickenBridge.scm",(void*)f_31246},
{"f_31222ChickenBridge.scm",(void*)f_31222},
{"f_31227ChickenBridge.scm",(void*)f_31227},
{"f_31226ChickenBridge.scm",(void*)f_31226},
{"f_31207ChickenBridge.scm",(void*)f_31207},
{"f_31212ChickenBridge.scm",(void*)f_31212},
{"f_31188ChickenBridge.scm",(void*)f_31188},
{"f_31193ChickenBridge.scm",(void*)f_31193},
{"f_31192ChickenBridge.scm",(void*)f_31192},
{"f_31173ChickenBridge.scm",(void*)f_31173},
{"f_31178ChickenBridge.scm",(void*)f_31178},
{"f_31158ChickenBridge.scm",(void*)f_31158},
{"f_31163ChickenBridge.scm",(void*)f_31163},
{"f_31140ChickenBridge.scm",(void*)f_31140},
{"f_31148ChickenBridge.scm",(void*)f_31148},
{"f_31144ChickenBridge.scm",(void*)f_31144},
{"f_30670ChickenBridge.scm",(void*)f_30670},
{"f_31098ChickenBridge.scm",(void*)f_31098},
{"f_31113ChickenBridge.scm",(void*)f_31113},
{"f_31105ChickenBridge.scm",(void*)f_31105},
{"f_31069ChickenBridge.scm",(void*)f_31069},
{"f_31073ChickenBridge.scm",(void*)f_31073},
{"f_31034ChickenBridge.scm",(void*)f_31034},
{"f_31038ChickenBridge.scm",(void*)f_31038},
{"f_30999ChickenBridge.scm",(void*)f_30999},
{"f_31003ChickenBridge.scm",(void*)f_31003},
{"f_30674ChickenBridge.scm",(void*)f_30674},
{"f_30963ChickenBridge.scm",(void*)f_30963},
{"f_30978ChickenBridge.scm",(void*)f_30978},
{"f_30970ChickenBridge.scm",(void*)f_30970},
{"f_30934ChickenBridge.scm",(void*)f_30934},
{"f_30938ChickenBridge.scm",(void*)f_30938},
{"f_30899ChickenBridge.scm",(void*)f_30899},
{"f_30903ChickenBridge.scm",(void*)f_30903},
{"f_30864ChickenBridge.scm",(void*)f_30864},
{"f_30868ChickenBridge.scm",(void*)f_30868},
{"f_30677ChickenBridge.scm",(void*)f_30677},
{"f_30828ChickenBridge.scm",(void*)f_30828},
{"f_30843ChickenBridge.scm",(void*)f_30843},
{"f_30835ChickenBridge.scm",(void*)f_30835},
{"f_30799ChickenBridge.scm",(void*)f_30799},
{"f_30803ChickenBridge.scm",(void*)f_30803},
{"f_30764ChickenBridge.scm",(void*)f_30764},
{"f_30768ChickenBridge.scm",(void*)f_30768},
{"f_30729ChickenBridge.scm",(void*)f_30729},
{"f_30733ChickenBridge.scm",(void*)f_30733},
{"f_30680ChickenBridge.scm",(void*)f_30680},
{"f_30683ChickenBridge.scm",(void*)f_30683},
{"f_30687ChickenBridge.scm",(void*)f_30687},
{"f_30651ChickenBridge.scm",(void*)f_30651},
{"f_30656ChickenBridge.scm",(void*)f_30656},
{"f_30200ChickenBridge.scm",(void*)f_30200},
{"f_30628ChickenBridge.scm",(void*)f_30628},
{"f_30643ChickenBridge.scm",(void*)f_30643},
{"f_30635ChickenBridge.scm",(void*)f_30635},
{"f_30599ChickenBridge.scm",(void*)f_30599},
{"f_30603ChickenBridge.scm",(void*)f_30603},
{"f_30564ChickenBridge.scm",(void*)f_30564},
{"f_30568ChickenBridge.scm",(void*)f_30568},
{"f_30529ChickenBridge.scm",(void*)f_30529},
{"f_30533ChickenBridge.scm",(void*)f_30533},
{"f_30204ChickenBridge.scm",(void*)f_30204},
{"f_30493ChickenBridge.scm",(void*)f_30493},
{"f_30508ChickenBridge.scm",(void*)f_30508},
{"f_30500ChickenBridge.scm",(void*)f_30500},
{"f_30464ChickenBridge.scm",(void*)f_30464},
{"f_30468ChickenBridge.scm",(void*)f_30468},
{"f_30429ChickenBridge.scm",(void*)f_30429},
{"f_30433ChickenBridge.scm",(void*)f_30433},
{"f_30394ChickenBridge.scm",(void*)f_30394},
{"f_30398ChickenBridge.scm",(void*)f_30398},
{"f_30207ChickenBridge.scm",(void*)f_30207},
{"f_30358ChickenBridge.scm",(void*)f_30358},
{"f_30373ChickenBridge.scm",(void*)f_30373},
{"f_30365ChickenBridge.scm",(void*)f_30365},
{"f_30329ChickenBridge.scm",(void*)f_30329},
{"f_30333ChickenBridge.scm",(void*)f_30333},
{"f_30294ChickenBridge.scm",(void*)f_30294},
{"f_30298ChickenBridge.scm",(void*)f_30298},
{"f_30259ChickenBridge.scm",(void*)f_30259},
{"f_30263ChickenBridge.scm",(void*)f_30263},
{"f_30210ChickenBridge.scm",(void*)f_30210},
{"f_30213ChickenBridge.scm",(void*)f_30213},
{"f_30217ChickenBridge.scm",(void*)f_30217},
{"f_30181ChickenBridge.scm",(void*)f_30181},
{"f_30186ChickenBridge.scm",(void*)f_30186},
{"f_29730ChickenBridge.scm",(void*)f_29730},
{"f_30158ChickenBridge.scm",(void*)f_30158},
{"f_30173ChickenBridge.scm",(void*)f_30173},
{"f_30165ChickenBridge.scm",(void*)f_30165},
{"f_30129ChickenBridge.scm",(void*)f_30129},
{"f_30133ChickenBridge.scm",(void*)f_30133},
{"f_30094ChickenBridge.scm",(void*)f_30094},
{"f_30098ChickenBridge.scm",(void*)f_30098},
{"f_30059ChickenBridge.scm",(void*)f_30059},
{"f_30063ChickenBridge.scm",(void*)f_30063},
{"f_29734ChickenBridge.scm",(void*)f_29734},
{"f_30023ChickenBridge.scm",(void*)f_30023},
{"f_30038ChickenBridge.scm",(void*)f_30038},
{"f_30030ChickenBridge.scm",(void*)f_30030},
{"f_29994ChickenBridge.scm",(void*)f_29994},
{"f_29998ChickenBridge.scm",(void*)f_29998},
{"f_29959ChickenBridge.scm",(void*)f_29959},
{"f_29963ChickenBridge.scm",(void*)f_29963},
{"f_29924ChickenBridge.scm",(void*)f_29924},
{"f_29928ChickenBridge.scm",(void*)f_29928},
{"f_29737ChickenBridge.scm",(void*)f_29737},
{"f_29888ChickenBridge.scm",(void*)f_29888},
{"f_29903ChickenBridge.scm",(void*)f_29903},
{"f_29895ChickenBridge.scm",(void*)f_29895},
{"f_29859ChickenBridge.scm",(void*)f_29859},
{"f_29863ChickenBridge.scm",(void*)f_29863},
{"f_29824ChickenBridge.scm",(void*)f_29824},
{"f_29828ChickenBridge.scm",(void*)f_29828},
{"f_29789ChickenBridge.scm",(void*)f_29789},
{"f_29793ChickenBridge.scm",(void*)f_29793},
{"f_29740ChickenBridge.scm",(void*)f_29740},
{"f_29743ChickenBridge.scm",(void*)f_29743},
{"f_29747ChickenBridge.scm",(void*)f_29747},
{"f_29711ChickenBridge.scm",(void*)f_29711},
{"f_29716ChickenBridge.scm",(void*)f_29716},
{"f_28982ChickenBridge.scm",(void*)f_28982},
{"f_29688ChickenBridge.scm",(void*)f_29688},
{"f_29703ChickenBridge.scm",(void*)f_29703},
{"f_29695ChickenBridge.scm",(void*)f_29695},
{"f_29659ChickenBridge.scm",(void*)f_29659},
{"f_29663ChickenBridge.scm",(void*)f_29663},
{"f_29624ChickenBridge.scm",(void*)f_29624},
{"f_29628ChickenBridge.scm",(void*)f_29628},
{"f_29589ChickenBridge.scm",(void*)f_29589},
{"f_29593ChickenBridge.scm",(void*)f_29593},
{"f_29554ChickenBridge.scm",(void*)f_29554},
{"f_29558ChickenBridge.scm",(void*)f_29558},
{"f_28986ChickenBridge.scm",(void*)f_28986},
{"f_29518ChickenBridge.scm",(void*)f_29518},
{"f_29533ChickenBridge.scm",(void*)f_29533},
{"f_29525ChickenBridge.scm",(void*)f_29525},
{"f_29489ChickenBridge.scm",(void*)f_29489},
{"f_29493ChickenBridge.scm",(void*)f_29493},
{"f_29454ChickenBridge.scm",(void*)f_29454},
{"f_29458ChickenBridge.scm",(void*)f_29458},
{"f_29419ChickenBridge.scm",(void*)f_29419},
{"f_29423ChickenBridge.scm",(void*)f_29423},
{"f_29384ChickenBridge.scm",(void*)f_29384},
{"f_29388ChickenBridge.scm",(void*)f_29388},
{"f_28989ChickenBridge.scm",(void*)f_28989},
{"f_29348ChickenBridge.scm",(void*)f_29348},
{"f_29363ChickenBridge.scm",(void*)f_29363},
{"f_29355ChickenBridge.scm",(void*)f_29355},
{"f_29319ChickenBridge.scm",(void*)f_29319},
{"f_29323ChickenBridge.scm",(void*)f_29323},
{"f_29284ChickenBridge.scm",(void*)f_29284},
{"f_29288ChickenBridge.scm",(void*)f_29288},
{"f_29249ChickenBridge.scm",(void*)f_29249},
{"f_29253ChickenBridge.scm",(void*)f_29253},
{"f_29214ChickenBridge.scm",(void*)f_29214},
{"f_29218ChickenBridge.scm",(void*)f_29218},
{"f_28992ChickenBridge.scm",(void*)f_28992},
{"f_29178ChickenBridge.scm",(void*)f_29178},
{"f_29193ChickenBridge.scm",(void*)f_29193},
{"f_29185ChickenBridge.scm",(void*)f_29185},
{"f_29149ChickenBridge.scm",(void*)f_29149},
{"f_29153ChickenBridge.scm",(void*)f_29153},
{"f_29114ChickenBridge.scm",(void*)f_29114},
{"f_29118ChickenBridge.scm",(void*)f_29118},
{"f_29079ChickenBridge.scm",(void*)f_29079},
{"f_29083ChickenBridge.scm",(void*)f_29083},
{"f_29044ChickenBridge.scm",(void*)f_29044},
{"f_29048ChickenBridge.scm",(void*)f_29048},
{"f_28995ChickenBridge.scm",(void*)f_28995},
{"f_28998ChickenBridge.scm",(void*)f_28998},
{"f_29002ChickenBridge.scm",(void*)f_29002},
{"f_28963ChickenBridge.scm",(void*)f_28963},
{"f_28968ChickenBridge.scm",(void*)f_28968},
{"f_28234ChickenBridge.scm",(void*)f_28234},
{"f_28940ChickenBridge.scm",(void*)f_28940},
{"f_28955ChickenBridge.scm",(void*)f_28955},
{"f_28947ChickenBridge.scm",(void*)f_28947},
{"f_28911ChickenBridge.scm",(void*)f_28911},
{"f_28915ChickenBridge.scm",(void*)f_28915},
{"f_28876ChickenBridge.scm",(void*)f_28876},
{"f_28880ChickenBridge.scm",(void*)f_28880},
{"f_28841ChickenBridge.scm",(void*)f_28841},
{"f_28845ChickenBridge.scm",(void*)f_28845},
{"f_28806ChickenBridge.scm",(void*)f_28806},
{"f_28810ChickenBridge.scm",(void*)f_28810},
{"f_28238ChickenBridge.scm",(void*)f_28238},
{"f_28770ChickenBridge.scm",(void*)f_28770},
{"f_28785ChickenBridge.scm",(void*)f_28785},
{"f_28777ChickenBridge.scm",(void*)f_28777},
{"f_28741ChickenBridge.scm",(void*)f_28741},
{"f_28745ChickenBridge.scm",(void*)f_28745},
{"f_28706ChickenBridge.scm",(void*)f_28706},
{"f_28710ChickenBridge.scm",(void*)f_28710},
{"f_28671ChickenBridge.scm",(void*)f_28671},
{"f_28675ChickenBridge.scm",(void*)f_28675},
{"f_28636ChickenBridge.scm",(void*)f_28636},
{"f_28640ChickenBridge.scm",(void*)f_28640},
{"f_28241ChickenBridge.scm",(void*)f_28241},
{"f_28600ChickenBridge.scm",(void*)f_28600},
{"f_28615ChickenBridge.scm",(void*)f_28615},
{"f_28607ChickenBridge.scm",(void*)f_28607},
{"f_28571ChickenBridge.scm",(void*)f_28571},
{"f_28575ChickenBridge.scm",(void*)f_28575},
{"f_28536ChickenBridge.scm",(void*)f_28536},
{"f_28540ChickenBridge.scm",(void*)f_28540},
{"f_28501ChickenBridge.scm",(void*)f_28501},
{"f_28505ChickenBridge.scm",(void*)f_28505},
{"f_28466ChickenBridge.scm",(void*)f_28466},
{"f_28470ChickenBridge.scm",(void*)f_28470},
{"f_28244ChickenBridge.scm",(void*)f_28244},
{"f_28430ChickenBridge.scm",(void*)f_28430},
{"f_28445ChickenBridge.scm",(void*)f_28445},
{"f_28437ChickenBridge.scm",(void*)f_28437},
{"f_28401ChickenBridge.scm",(void*)f_28401},
{"f_28405ChickenBridge.scm",(void*)f_28405},
{"f_28366ChickenBridge.scm",(void*)f_28366},
{"f_28370ChickenBridge.scm",(void*)f_28370},
{"f_28331ChickenBridge.scm",(void*)f_28331},
{"f_28335ChickenBridge.scm",(void*)f_28335},
{"f_28296ChickenBridge.scm",(void*)f_28296},
{"f_28300ChickenBridge.scm",(void*)f_28300},
{"f_28247ChickenBridge.scm",(void*)f_28247},
{"f_28250ChickenBridge.scm",(void*)f_28250},
{"f_28254ChickenBridge.scm",(void*)f_28254},
{"f_28215ChickenBridge.scm",(void*)f_28215},
{"f_28220ChickenBridge.scm",(void*)f_28220},
{"f_27764ChickenBridge.scm",(void*)f_27764},
{"f_28192ChickenBridge.scm",(void*)f_28192},
{"f_28207ChickenBridge.scm",(void*)f_28207},
{"f_28199ChickenBridge.scm",(void*)f_28199},
{"f_28163ChickenBridge.scm",(void*)f_28163},
{"f_28167ChickenBridge.scm",(void*)f_28167},
{"f_28128ChickenBridge.scm",(void*)f_28128},
{"f_28132ChickenBridge.scm",(void*)f_28132},
{"f_28093ChickenBridge.scm",(void*)f_28093},
{"f_28097ChickenBridge.scm",(void*)f_28097},
{"f_27768ChickenBridge.scm",(void*)f_27768},
{"f_28057ChickenBridge.scm",(void*)f_28057},
{"f_28072ChickenBridge.scm",(void*)f_28072},
{"f_28064ChickenBridge.scm",(void*)f_28064},
{"f_28028ChickenBridge.scm",(void*)f_28028},
{"f_28032ChickenBridge.scm",(void*)f_28032},
{"f_27993ChickenBridge.scm",(void*)f_27993},
{"f_27997ChickenBridge.scm",(void*)f_27997},
{"f_27958ChickenBridge.scm",(void*)f_27958},
{"f_27962ChickenBridge.scm",(void*)f_27962},
{"f_27771ChickenBridge.scm",(void*)f_27771},
{"f_27922ChickenBridge.scm",(void*)f_27922},
{"f_27937ChickenBridge.scm",(void*)f_27937},
{"f_27929ChickenBridge.scm",(void*)f_27929},
{"f_27893ChickenBridge.scm",(void*)f_27893},
{"f_27897ChickenBridge.scm",(void*)f_27897},
{"f_27858ChickenBridge.scm",(void*)f_27858},
{"f_27862ChickenBridge.scm",(void*)f_27862},
{"f_27823ChickenBridge.scm",(void*)f_27823},
{"f_27827ChickenBridge.scm",(void*)f_27827},
{"f_27774ChickenBridge.scm",(void*)f_27774},
{"f_27777ChickenBridge.scm",(void*)f_27777},
{"f_27781ChickenBridge.scm",(void*)f_27781},
{"f_27745ChickenBridge.scm",(void*)f_27745},
{"f_27750ChickenBridge.scm",(void*)f_27750},
{"f_27016ChickenBridge.scm",(void*)f_27016},
{"f_27722ChickenBridge.scm",(void*)f_27722},
{"f_27737ChickenBridge.scm",(void*)f_27737},
{"f_27729ChickenBridge.scm",(void*)f_27729},
{"f_27693ChickenBridge.scm",(void*)f_27693},
{"f_27697ChickenBridge.scm",(void*)f_27697},
{"f_27658ChickenBridge.scm",(void*)f_27658},
{"f_27662ChickenBridge.scm",(void*)f_27662},
{"f_27623ChickenBridge.scm",(void*)f_27623},
{"f_27627ChickenBridge.scm",(void*)f_27627},
{"f_27588ChickenBridge.scm",(void*)f_27588},
{"f_27592ChickenBridge.scm",(void*)f_27592},
{"f_27020ChickenBridge.scm",(void*)f_27020},
{"f_27552ChickenBridge.scm",(void*)f_27552},
{"f_27567ChickenBridge.scm",(void*)f_27567},
{"f_27559ChickenBridge.scm",(void*)f_27559},
{"f_27523ChickenBridge.scm",(void*)f_27523},
{"f_27527ChickenBridge.scm",(void*)f_27527},
{"f_27488ChickenBridge.scm",(void*)f_27488},
{"f_27492ChickenBridge.scm",(void*)f_27492},
{"f_27453ChickenBridge.scm",(void*)f_27453},
{"f_27457ChickenBridge.scm",(void*)f_27457},
{"f_27418ChickenBridge.scm",(void*)f_27418},
{"f_27422ChickenBridge.scm",(void*)f_27422},
{"f_27023ChickenBridge.scm",(void*)f_27023},
{"f_27382ChickenBridge.scm",(void*)f_27382},
{"f_27397ChickenBridge.scm",(void*)f_27397},
{"f_27389ChickenBridge.scm",(void*)f_27389},
{"f_27353ChickenBridge.scm",(void*)f_27353},
{"f_27357ChickenBridge.scm",(void*)f_27357},
{"f_27318ChickenBridge.scm",(void*)f_27318},
{"f_27322ChickenBridge.scm",(void*)f_27322},
{"f_27283ChickenBridge.scm",(void*)f_27283},
{"f_27287ChickenBridge.scm",(void*)f_27287},
{"f_27248ChickenBridge.scm",(void*)f_27248},
{"f_27252ChickenBridge.scm",(void*)f_27252},
{"f_27026ChickenBridge.scm",(void*)f_27026},
{"f_27212ChickenBridge.scm",(void*)f_27212},
{"f_27227ChickenBridge.scm",(void*)f_27227},
{"f_27219ChickenBridge.scm",(void*)f_27219},
{"f_27183ChickenBridge.scm",(void*)f_27183},
{"f_27187ChickenBridge.scm",(void*)f_27187},
{"f_27148ChickenBridge.scm",(void*)f_27148},
{"f_27152ChickenBridge.scm",(void*)f_27152},
{"f_27113ChickenBridge.scm",(void*)f_27113},
{"f_27117ChickenBridge.scm",(void*)f_27117},
{"f_27078ChickenBridge.scm",(void*)f_27078},
{"f_27082ChickenBridge.scm",(void*)f_27082},
{"f_27029ChickenBridge.scm",(void*)f_27029},
{"f_27032ChickenBridge.scm",(void*)f_27032},
{"f_27036ChickenBridge.scm",(void*)f_27036},
{"f_26678ChickenBridge.scm",(void*)f_26678},
{"f_26518ChickenBridge.scm",(void*)f_26518},
{"f_26553ChickenBridge.scm",(void*)f_26553},
{"f_26563ChickenBridge.scm",(void*)f_26563},
{"f_26567ChickenBridge.scm",(void*)f_26567},
{"f_26570ChickenBridge.scm",(void*)f_26570},
{"f_26631ChickenBridge.scm",(void*)f_26631},
{"f_26622ChickenBridge.scm",(void*)f_26622},
{"f_26573ChickenBridge.scm",(void*)f_26573},
{"f_26592ChickenBridge.scm",(void*)f_26592},
{"f_26599ChickenBridge.scm",(void*)f_26599},
{"f_26576ChickenBridge.scm",(void*)f_26576},
{"f_26582ChickenBridge.scm",(void*)f_26582},
{"f_26551ChickenBridge.scm",(void*)f_26551},
{"f_26526ChickenBridge.scm",(void*)f_26526},
{"f_26525ChickenBridge.scm",(void*)f_26525},
{"f_26686ChickenBridge.scm",(void*)f_26686},
{"f_26264ChickenBridge.scm",(void*)f_26264},
{"f_26286ChickenBridge.scm",(void*)f_26286},
{"f_26301ChickenBridge.scm",(void*)f_26301},
{"f_26304ChickenBridge.scm",(void*)f_26304},
{"f_26480ChickenBridge.scm",(void*)f_26480},
{"f_26474ChickenBridge.scm",(void*)f_26474},
{"f_26307ChickenBridge.scm",(void*)f_26307},
{"f_26456ChickenBridge.scm",(void*)f_26456},
{"f_26310ChickenBridge.scm",(void*)f_26310},
{"f_26313ChickenBridge.scm",(void*)f_26313},
{"f_26449ChickenBridge.scm",(void*)f_26449},
{"f_26437ChickenBridge.scm",(void*)f_26437},
{"f_26333ChickenBridge.scm",(void*)f_26333},
{"f_26340ChickenBridge.scm",(void*)f_26340},
{"f_26410ChickenBridge.scm",(void*)f_26410},
{"f_26396ChickenBridge.scm",(void*)f_26396},
{"f_26404ChickenBridge.scm",(void*)f_26404},
{"f_26343ChickenBridge.scm",(void*)f_26343},
{"f_26382ChickenBridge.scm",(void*)f_26382},
{"f_26346ChickenBridge.scm",(void*)f_26346},
{"f_26375ChickenBridge.scm",(void*)f_26375},
{"f_26352ChickenBridge.scm",(void*)f_26352},
{"f_26355ChickenBridge.scm",(void*)f_26355},
{"f_26359ChickenBridge.scm",(void*)f_26359},
{"f_26320ChickenBridge.scm",(void*)f_26320},
{"f_26323ChickenBridge.scm",(void*)f_26323},
{"f_26133ChickenBridge.scm",(void*)f_26133},
{"f_26142ChickenBridge.scm",(void*)f_26142},
{"f_26090ChickenBridge.scm",(void*)f_26090},
{"f_26096ChickenBridge.scm",(void*)f_26096},
{"f_26159ChickenBridge.scm",(void*)f_26159},
{"f_26245ChickenBridge.scm",(void*)f_26245},
{"f_26232ChickenBridge.scm",(void*)f_26232},
{"f_26240ChickenBridge.scm",(void*)f_26240},
{"f_26162ChickenBridge.scm",(void*)f_26162},
{"f_26166ChickenBridge.scm",(void*)f_26166},
{"f_26209ChickenBridge.scm",(void*)f_26209},
{"f_26171ChickenBridge.scm",(void*)f_26171},
{"f_26137ChickenBridge.scm",(void*)f_26137},
{"f_26032ChickenBridge.scm",(void*)f_26032},
{"f_26039ChickenBridge.scm",(void*)f_26039},
{"f_26070ChickenBridge.scm",(void*)f_26070},
{"f_26066ChickenBridge.scm",(void*)f_26066},
{"f_26058ChickenBridge.scm",(void*)f_26058},
{"f_25941ChickenBridge.scm",(void*)f_25941},
{"f_25948ChickenBridge.scm",(void*)f_25948},
{"f_26016ChickenBridge.scm",(void*)f_26016},
{"f_25959ChickenBridge.scm",(void*)f_25959},
{"f_25986ChickenBridge.scm",(void*)f_25986},
{"f_25970ChickenBridge.scm",(void*)f_25970},
{"f_25875ChickenBridge.scm",(void*)f_25875},
{"f_25886ChickenBridge.scm",(void*)f_25886},
{"f_25889ChickenBridge.scm",(void*)f_25889},
{"f_25896ChickenBridge.scm",(void*)f_25896},
{"f_25869ChickenBridge.scm",(void*)f_25869},
{"f_25323ChickenBridge.scm",(void*)f_25323},
{"f_25354ChickenBridge.scm",(void*)f_25354},
{"f_25818ChickenBridge.scm",(void*)f_25818},
{"f_25824ChickenBridge.scm",(void*)f_25824},
{"f_25365ChickenBridge.scm",(void*)f_25365},
{"f_25250ChickenBridge.scm",(void*)f_25250},
{"f_25275ChickenBridge.scm",(void*)f_25275},
{"f_25210ChickenBridge.scm",(void*)f_25210},
{"f_25223ChickenBridge.scm",(void*)f_25223},
{"f_25264ChickenBridge.scm",(void*)f_25264},
{"f_25369ChickenBridge.scm",(void*)f_25369},
{"f_25806ChickenBridge.scm",(void*)f_25806},
{"f_25802ChickenBridge.scm",(void*)f_25802},
{"f_25798ChickenBridge.scm",(void*)f_25798},
{"f_25372ChickenBridge.scm",(void*)f_25372},
{"f_25592ChickenBridge.scm",(void*)f_25592},
{"f_25701ChickenBridge.scm",(void*)f_25701},
{"f_25766ChickenBridge.scm",(void*)f_25766},
{"f_25708ChickenBridge.scm",(void*)f_25708},
{"f_25712ChickenBridge.scm",(void*)f_25712},
{"f_25716ChickenBridge.scm",(void*)f_25716},
{"f_25758ChickenBridge.scm",(void*)f_25758},
{"f_25754ChickenBridge.scm",(void*)f_25754},
{"f_25732ChickenBridge.scm",(void*)f_25732},
{"f_25595ChickenBridge.scm",(void*)f_25595},
{"f_25598ChickenBridge.scm",(void*)f_25598},
{"f_25497ChickenBridge.scm",(void*)f_25497},
{"f_25580ChickenBridge.scm",(void*)f_25580},
{"f_25547ChickenBridge.scm",(void*)f_25547},
{"f_25573ChickenBridge.scm",(void*)f_25573},
{"f_25555ChickenBridge.scm",(void*)f_25555},
{"f_25503ChickenBridge.scm",(void*)f_25503},
{"f_25543ChickenBridge.scm",(void*)f_25543},
{"f_25485ChickenBridge.scm",(void*)f_25485},
{"f_25456ChickenBridge.scm",(void*)f_25456},
{"f_25478ChickenBridge.scm",(void*)f_25478},
{"f_25464ChickenBridge.scm",(void*)f_25464},
{"f_25418ChickenBridge.scm",(void*)f_25418},
{"f_25375ChickenBridge.scm",(void*)f_25375},
{"f_25386ChickenBridge.scm",(void*)f_25386},
{"f_25390ChickenBridge.scm",(void*)f_25390},
{"f_25394ChickenBridge.scm",(void*)f_25394},
{"f_25398ChickenBridge.scm",(void*)f_25398},
{"f_25382ChickenBridge.scm",(void*)f_25382},
{"f_25342ChickenBridge.scm",(void*)f_25342},
{"f_25337ChickenBridge.scm",(void*)f_25337},
{"f_25332ChickenBridge.scm",(void*)f_25332},
{"f_25164ChickenBridge.scm",(void*)f_25164},
{"f_25175ChickenBridge.scm",(void*)f_25175},
{"f_25190ChickenBridge.scm",(void*)f_25190},
{"f_25126ChickenBridge.scm",(void*)f_25126},
{"f_25137ChickenBridge.scm",(void*)f_25137},
{"f_25152ChickenBridge.scm",(void*)f_25152},
{"f_25059ChickenBridge.scm",(void*)f_25059},
{"f_25079ChickenBridge.scm",(void*)f_25079},
{"f_25089ChickenBridge.scm",(void*)f_25089},
{"f_25102ChickenBridge.scm",(void*)f_25102},
{"f_25070ChickenBridge.scm",(void*)f_25070},
{"f_25077ChickenBridge.scm",(void*)f_25077},
{"f_24866ChickenBridge.scm",(void*)f_24866},
{"f_24926ChickenBridge.scm",(void*)f_24926},
{"f_24936ChickenBridge.scm",(void*)f_24936},
{"f_25050ChickenBridge.scm",(void*)f_25050},
{"f_25015ChickenBridge.scm",(void*)f_25015},
{"f_25007ChickenBridge.scm",(void*)f_25007},
{"f_24978ChickenBridge.scm",(void*)f_24978},
{"f_24956ChickenBridge.scm",(void*)f_24956},
{"f_24959ChickenBridge.scm",(void*)f_24959},
{"f_24947ChickenBridge.scm",(void*)f_24947},
{"f_24873ChickenBridge.scm",(void*)f_24873},
{"f_24924ChickenBridge.scm",(void*)f_24924},
{"f_24916ChickenBridge.scm",(void*)f_24916},
{"f_24876ChickenBridge.scm",(void*)f_24876},
{"f_24887ChickenBridge.scm",(void*)f_24887},
{"f_24891ChickenBridge.scm",(void*)f_24891},
{"f_24883ChickenBridge.scm",(void*)f_24883},
{"f_24724ChickenBridge.scm",(void*)f_24724},
{"f_24772ChickenBridge.scm",(void*)f_24772},
{"f_24782ChickenBridge.scm",(void*)f_24782},
{"f_24793ChickenBridge.scm",(void*)f_24793},
{"f_24830ChickenBridge.scm",(void*)f_24830},
{"f_24805ChickenBridge.scm",(void*)f_24805},
{"f_24796ChickenBridge.scm",(void*)f_24796},
{"f_24734ChickenBridge.scm",(void*)f_24734},
{"f_24770ChickenBridge.scm",(void*)f_24770},
{"f_24741ChickenBridge.scm",(void*)f_24741},
{"f_24373ChickenBridge.scm",(void*)f_24373},
{"f_24380ChickenBridge.scm",(void*)f_24380},
{"f_24614ChickenBridge.scm",(void*)f_24614},
{"f_24624ChickenBridge.scm",(void*)f_24624},
{"f_24635ChickenBridge.scm",(void*)f_24635},
{"f_24647ChickenBridge.scm",(void*)f_24647},
{"f_24650ChickenBridge.scm",(void*)f_24650},
{"f_24638ChickenBridge.scm",(void*)f_24638},
{"f_24386ChickenBridge.scm",(void*)f_24386},
{"f_24612ChickenBridge.scm",(void*)f_24612},
{"f_24608ChickenBridge.scm",(void*)f_24608},
{"f_24554ChickenBridge.scm",(void*)f_24554},
{"f_24519ChickenBridge.scm",(void*)f_24519},
{"f_24535ChickenBridge.scm",(void*)f_24535},
{"f_24490ChickenBridge.scm",(void*)f_24490},
{"f_24414ChickenBridge.scm",(void*)f_24414},
{"f_24417ChickenBridge.scm",(void*)f_24417},
{"f_24481ChickenBridge.scm",(void*)f_24481},
{"f_24477ChickenBridge.scm",(void*)f_24477},
{"f_24397ChickenBridge.scm",(void*)f_24397},
{"f_24408ChickenBridge.scm",(void*)f_24408},
{"f_24404ChickenBridge.scm",(void*)f_24404},
{"f_24326ChickenBridge.scm",(void*)f_24326},
{"f_24359ChickenBridge.scm",(void*)f_24359},
{"f_24341ChickenBridge.scm",(void*)f_24341},
{"f_24353ChickenBridge.scm",(void*)f_24353},
{"f_23944ChickenBridge.scm",(void*)f_23944},
{"f_24153ChickenBridge.scm",(void*)f_24153},
{"f_24163ChickenBridge.scm",(void*)f_24163},
{"f_24174ChickenBridge.scm",(void*)f_24174},
{"f_24294ChickenBridge.scm",(void*)f_24294},
{"f_24273ChickenBridge.scm",(void*)f_24273},
{"f_24252ChickenBridge.scm",(void*)f_24252},
{"f_24231ChickenBridge.scm",(void*)f_24231},
{"f_24210ChickenBridge.scm",(void*)f_24210},
{"f_24189ChickenBridge.scm",(void*)f_24189},
{"f_24177ChickenBridge.scm",(void*)f_24177},
{"f_23954ChickenBridge.scm",(void*)f_23954},
{"f_23957ChickenBridge.scm",(void*)f_23957},
{"f_24120ChickenBridge.scm",(void*)f_24120},
{"f_23960ChickenBridge.scm",(void*)f_23960},
{"f_24111ChickenBridge.scm",(void*)f_24111},
{"f_24091ChickenBridge.scm",(void*)f_24091},
{"f_23963ChickenBridge.scm",(void*)f_23963},
{"f_24056ChickenBridge.scm",(void*)f_24056},
{"f_24073ChickenBridge.scm",(void*)f_24073},
{"f_23966ChickenBridge.scm",(void*)f_23966},
{"f_24005ChickenBridge.scm",(void*)f_24005},
{"f_24039ChickenBridge.scm",(void*)f_24039},
{"f_24023ChickenBridge.scm",(void*)f_24023},
{"f_24008ChickenBridge.scm",(void*)f_24008},
{"f_23973ChickenBridge.scm",(void*)f_23973},
{"f_23984ChickenBridge.scm",(void*)f_23984},
{"f_23988ChickenBridge.scm",(void*)f_23988},
{"f_23980ChickenBridge.scm",(void*)f_23980},
{"f_23862ChickenBridge.scm",(void*)f_23862},
{"f_23866ChickenBridge.scm",(void*)f_23866},
{"f_23884ChickenBridge.scm",(void*)f_23884},
{"f_23702ChickenBridge.scm",(void*)f_23702},
{"f_23710ChickenBridge.scm",(void*)f_23710},
{"f_23720ChickenBridge.scm",(void*)f_23720},
{"f_23758ChickenBridge.scm",(void*)f_23758},
{"f_23761ChickenBridge.scm",(void*)f_23761},
{"f_23764ChickenBridge.scm",(void*)f_23764},
{"f_23839ChickenBridge.scm",(void*)f_23839},
{"f_23849ChickenBridge.scm",(void*)f_23849},
{"f_23767ChickenBridge.scm",(void*)f_23767},
{"f_23770ChickenBridge.scm",(void*)f_23770},
{"f_23773ChickenBridge.scm",(void*)f_23773},
{"f_23793ChickenBridge.scm",(void*)f_23793},
{"f_23803ChickenBridge.scm",(void*)f_23803},
{"f_23806ChickenBridge.scm",(void*)f_23806},
{"f_23809ChickenBridge.scm",(void*)f_23809},
{"f_23776ChickenBridge.scm",(void*)f_23776},
{"f_23779ChickenBridge.scm",(void*)f_23779},
{"f_23696ChickenBridge.scm",(void*)f_23696},
{"f_23690ChickenBridge.scm",(void*)f_23690},
{"f_23684ChickenBridge.scm",(void*)f_23684},
{"f_23613ChickenBridge.scm",(void*)f_23613},
{"f_23654ChickenBridge.scm",(void*)f_23654},
{"f_23658ChickenBridge.scm",(void*)f_23658},
{"f_23662ChickenBridge.scm",(void*)f_23662},
{"f_23666ChickenBridge.scm",(void*)f_23666},
{"f_23670ChickenBridge.scm",(void*)f_23670},
{"f_23674ChickenBridge.scm",(void*)f_23674},
{"f_23678ChickenBridge.scm",(void*)f_23678},
{"f_23682ChickenBridge.scm",(void*)f_23682},
{"f_23615ChickenBridge.scm",(void*)f_23615},
{"f_23621ChickenBridge.scm",(void*)f_23621},
{"f_23643ChickenBridge.scm",(void*)f_23643},
{"f_23632ChickenBridge.scm",(void*)f_23632},
{"f_23462ChickenBridge.scm",(void*)f_23462},
{"f_23477ChickenBridge.scm",(void*)f_23477},
{"f_23490ChickenBridge.scm",(void*)f_23490},
{"f_23450ChickenBridge.scm",(void*)f_23450},
{"f_23438ChickenBridge.scm",(void*)f_23438},
{"f_23426ChickenBridge.scm",(void*)f_23426},
{"f_23420ChickenBridge.scm",(void*)f_23420},
{"f_23414ChickenBridge.scm",(void*)f_23414},
{"f_23402ChickenBridge.scm",(void*)f_23402},
{"f_23390ChickenBridge.scm",(void*)f_23390},
{"f_23378ChickenBridge.scm",(void*)f_23378},
{"f_23366ChickenBridge.scm",(void*)f_23366},
{"f_23360ChickenBridge.scm",(void*)f_23360},
{"f_23324ChickenBridge.scm",(void*)f_23324},
{"f_23318ChickenBridge.scm",(void*)f_23318},
{"f_23271ChickenBridge.scm",(void*)f_23271},
{"f_23275ChickenBridge.scm",(void*)f_23275},
{"f_23291ChickenBridge.scm",(void*)f_23291},
{"f_23300ChickenBridge.scm",(void*)f_23300},
{"f_23278ChickenBridge.scm",(void*)f_23278},
{"f_23262ChickenBridge.scm",(void*)f_23262},
{"f_23266ChickenBridge.scm",(void*)f_23266},
{"f_23109ChickenBridge.scm",(void*)f_23109},
{"f_23236ChickenBridge.scm",(void*)f_23236},
{"f_23249ChickenBridge.scm",(void*)f_23249},
{"f_23231ChickenBridge.scm",(void*)f_23231},
{"f_23112ChickenBridge.scm",(void*)f_23112},
{"f_23228ChickenBridge.scm",(void*)f_23228},
{"f_23212ChickenBridge.scm",(void*)f_23212},
{"f_23140ChickenBridge.scm",(void*)f_23140},
{"f_23148ChickenBridge.scm",(void*)f_23148},
{"f_23158ChickenBridge.scm",(void*)f_23158},
{"f_23161ChickenBridge.scm",(void*)f_23161},
{"f_23143ChickenBridge.scm",(void*)f_23143},
{"f_22932ChickenBridge.scm",(void*)f_22932},
{"f_22936ChickenBridge.scm",(void*)f_22936},
{"f_22941ChickenBridge.scm",(void*)f_22941},
{"f_22944ChickenBridge.scm",(void*)f_22944},
{"f_20756ChickenBridge.scm",(void*)f_20756},
{"f_20769ChickenBridge.scm",(void*)f_20769},
{"f_20776ChickenBridge.scm",(void*)f_20776},
{"f_20783ChickenBridge.scm",(void*)f_20783},
{"f_20762ChickenBridge.scm",(void*)f_20762},
{"f_22948ChickenBridge.scm",(void*)f_22948},
{"f_22985ChickenBridge.scm",(void*)f_22985},
{"f_23078ChickenBridge.scm",(void*)f_23078},
{"f_23088ChickenBridge.scm",(void*)f_23088},
{"f_22991ChickenBridge.scm",(void*)f_22991},
{"f_23048ChickenBridge.scm",(void*)f_23048},
{"f_23058ChickenBridge.scm",(void*)f_23058},
{"f_22999ChickenBridge.scm",(void*)f_22999},
{"f_23013ChickenBridge.scm",(void*)f_23013},
{"f_23017ChickenBridge.scm",(void*)f_23017},
{"f_23021ChickenBridge.scm",(void*)f_23021},
{"f_23025ChickenBridge.scm",(void*)f_23025},
{"f_23032ChickenBridge.scm",(void*)f_23032},
{"f_23009ChickenBridge.scm",(void*)f_23009},
{"f_23002ChickenBridge.scm",(void*)f_23002},
{"f_22951ChickenBridge.scm",(void*)f_22951},
{"f_21883ChickenBridge.scm",(void*)f_21883},
{"f_21896ChickenBridge.scm",(void*)f_21896},
{"f_21946ChickenBridge.scm",(void*)f_21946},
{"f_22043ChickenBridge.scm",(void*)f_22043},
{"f_22111ChickenBridge.scm",(void*)f_22111},
{"f_22368ChickenBridge.scm",(void*)f_22368},
{"f_22118ChickenBridge.scm",(void*)f_22118},
{"f_22356ChickenBridge.scm",(void*)f_22356},
{"f_22307ChickenBridge.scm",(void*)f_22307},
{"f_22313ChickenBridge.scm",(void*)f_22313},
{"f_22337ChickenBridge.scm",(void*)f_22337},
{"f_22333ChickenBridge.scm",(void*)f_22333},
{"f_22321ChickenBridge.scm",(void*)f_22321},
{"f_22121ChickenBridge.scm",(void*)f_22121},
{"f_22283ChickenBridge.scm",(void*)f_22283},
{"f_22287ChickenBridge.scm",(void*)f_22287},
{"f_22124ChickenBridge.scm",(void*)f_22124},
{"f_22260ChickenBridge.scm",(void*)f_22260},
{"f_22264ChickenBridge.scm",(void*)f_22264},
{"f_22127ChickenBridge.scm",(void*)f_22127},
{"f_22237ChickenBridge.scm",(void*)f_22237},
{"f_22241ChickenBridge.scm",(void*)f_22241},
{"f_22130ChickenBridge.scm",(void*)f_22130},
{"f_22162ChickenBridge.scm",(void*)f_22162},
{"f_22180ChickenBridge.scm",(void*)f_22180},
{"f_22198ChickenBridge.scm",(void*)f_22198},
{"f_22216ChickenBridge.scm",(void*)f_22216},
{"f_22133ChickenBridge.scm",(void*)f_22133},
{"f_22137ChickenBridge.scm",(void*)f_22137},
{"f_22047ChickenBridge.scm",(void*)f_22047},
{"f_22051ChickenBridge.scm",(void*)f_22051},
{"f_22055ChickenBridge.scm",(void*)f_22055},
{"f_21950ChickenBridge.scm",(void*)f_21950},
{"f_21954ChickenBridge.scm",(void*)f_21954},
{"f_21958ChickenBridge.scm",(void*)f_21958},
{"f_21977ChickenBridge.scm",(void*)f_21977},
{"f_21981ChickenBridge.scm",(void*)f_21981},
{"f_21961ChickenBridge.scm",(void*)f_21961},
{"f_21965ChickenBridge.scm",(void*)f_21965},
{"f_21900ChickenBridge.scm",(void*)f_21900},
{"f_21904ChickenBridge.scm",(void*)f_21904},
{"f_21908ChickenBridge.scm",(void*)f_21908},
{"f_21890ChickenBridge.scm",(void*)f_21890},
{"f_21705ChickenBridge.scm",(void*)f_21705},
{"f_21717ChickenBridge.scm",(void*)f_21717},
{"f_21736ChickenBridge.scm",(void*)f_21736},
{"f_21754ChickenBridge.scm",(void*)f_21754},
{"f_21786ChickenBridge.scm",(void*)f_21786},
{"f_21789ChickenBridge.scm",(void*)f_21789},
{"f_21782ChickenBridge.scm",(void*)f_21782},
{"f_21768ChickenBridge.scm",(void*)f_21768},
{"f_21739ChickenBridge.scm",(void*)f_21739},
{"f_21684ChickenBridge.scm",(void*)f_21684},
{"f_21691ChickenBridge.scm",(void*)f_21691},
{"f_21694ChickenBridge.scm",(void*)f_21694},
{"f_21700ChickenBridge.scm",(void*)f_21700},
{"f_21619ChickenBridge.scm",(void*)f_21619},
{"f_21628ChickenBridge.scm",(void*)f_21628},
{"f_21651ChickenBridge.scm",(void*)f_21651},
{"f_21641ChickenBridge.scm",(void*)f_21641},
{"f_21575ChickenBridge.scm",(void*)f_21575},
{"f_21563ChickenBridge.scm",(void*)f_21563},
{"f_21461ChickenBridge.scm",(void*)f_21461},
{"f_21413ChickenBridge.scm",(void*)f_21413},
{"f_20794ChickenBridge.scm",(void*)f_20794},
{"f_20798ChickenBridge.scm",(void*)f_20798},
{"f_20801ChickenBridge.scm",(void*)f_20801},
{"f_21227ChickenBridge.scm",(void*)f_21227},
{"f_21223ChickenBridge.scm",(void*)f_21223},
{"f_21219ChickenBridge.scm",(void*)f_21219},
{"f_20804ChickenBridge.scm",(void*)f_20804},
{"f_20927ChickenBridge.scm",(void*)f_20927},
{"f_20160ChickenBridge.scm",(void*)f_20160},
{"f_20933ChickenBridge.scm",(void*)f_20933},
{"f_20176ChickenBridge.scm",(void*)f_20176},
{"f_21021ChickenBridge.scm",(void*)f_21021},
{"f_21091ChickenBridge.scm",(void*)f_21091},
{"f_20192ChickenBridge.scm",(void*)f_20192},
{"f_21094ChickenBridge.scm",(void*)f_21094},
{"f_20224ChickenBridge.scm",(void*)f_20224},
{"f_21172ChickenBridge.scm",(void*)f_21172},
{"f_21198ChickenBridge.scm",(void*)f_21198},
{"f_21192ChickenBridge.scm",(void*)f_21192},
{"f_21181ChickenBridge.scm",(void*)f_21181},
{"f_21123ChickenBridge.scm",(void*)f_21123},
{"f_21133ChickenBridge.scm",(void*)f_21133},
{"f_21159ChickenBridge.scm",(void*)f_21159},
{"f_21153ChickenBridge.scm",(void*)f_21153},
{"f_21136ChickenBridge.scm",(void*)f_21136},
{"f_21146ChickenBridge.scm",(void*)f_21146},
{"f_21139ChickenBridge.scm",(void*)f_21139},
{"f_21100ChickenBridge.scm",(void*)f_21100},
{"f_21109ChickenBridge.scm",(void*)f_21109},
{"f_21103ChickenBridge.scm",(void*)f_21103},
{"f_21027ChickenBridge.scm",(void*)f_21027},
{"f_21045ChickenBridge.scm",(void*)f_21045},
{"f_21078ChickenBridge.scm",(void*)f_21078},
{"f_21064ChickenBridge.scm",(void*)f_21064},
{"f_21072ChickenBridge.scm",(void*)f_21072},
{"f_21055ChickenBridge.scm",(void*)f_21055},
{"f_21030ChickenBridge.scm",(void*)f_21030},
{"f_20942ChickenBridge.scm",(void*)f_20942},
{"f_20964ChickenBridge.scm",(void*)f_20964},
{"f_21011ChickenBridge.scm",(void*)f_21011},
{"f_20997ChickenBridge.scm",(void*)f_20997},
{"f_21005ChickenBridge.scm",(void*)f_21005},
{"f_20977ChickenBridge.scm",(void*)f_20977},
{"f_20980ChickenBridge.scm",(void*)f_20980},
{"f_20945ChickenBridge.scm",(void*)f_20945},
{"f_20962ChickenBridge.scm",(void*)f_20962},
{"f_20948ChickenBridge.scm",(void*)f_20948},
{"f_20813ChickenBridge.scm",(void*)f_20813},
{"f_20819ChickenBridge.scm",(void*)f_20819},
{"f_20877ChickenBridge.scm",(void*)f_20877},
{"f_20880ChickenBridge.scm",(void*)f_20880},
{"f_20901ChickenBridge.scm",(void*)f_20901},
{"f_20912ChickenBridge.scm",(void*)f_20912},
{"f_20891ChickenBridge.scm",(void*)f_20891},
{"f_20825ChickenBridge.scm",(void*)f_20825},
{"f_20835ChickenBridge.scm",(void*)f_20835},
{"f_20871ChickenBridge.scm",(void*)f_20871},
{"f_20841ChickenBridge.scm",(void*)f_20841},
{"f_20856ChickenBridge.scm",(void*)f_20856},
{"f_20860ChickenBridge.scm",(void*)f_20860},
{"f_20864ChickenBridge.scm",(void*)f_20864},
{"f_20848ChickenBridge.scm",(void*)f_20848},
{"f_20690ChickenBridge.scm",(void*)f_20690},
{"f_20692ChickenBridge.scm",(void*)f_20692},
{"f_20740ChickenBridge.scm",(void*)f_20740},
{"f_20696ChickenBridge.scm",(void*)f_20696},
{"f_20699ChickenBridge.scm",(void*)f_20699},
{"f_20704ChickenBridge.scm",(void*)f_20704},
{"f_20725ChickenBridge.scm",(void*)f_20725},
{"f_20682ChickenBridge.scm",(void*)f_20682},
{"f_20684ChickenBridge.scm",(void*)f_20684},
{"f_20474ChickenBridge.scm",(void*)f_20474},
{"f_20491ChickenBridge.scm",(void*)f_20491},
{"f_20495ChickenBridge.scm",(void*)f_20495},
{"f_20441ChickenBridge.scm",(void*)f_20441},
{"f_20448ChickenBridge.scm",(void*)f_20448},
{"f_20392ChickenBridge.scm",(void*)f_20392},
{"f_20399ChickenBridge.scm",(void*)f_20399},
{"f_20457ChickenBridge.scm",(void*)f_20457},
{"f_20680ChickenBridge.scm",(void*)f_20680},
{"f_20657ChickenBridge.scm",(void*)f_20657},
{"f_20673ChickenBridge.scm",(void*)f_20673},
{"f_20519ChickenBridge.scm",(void*)f_20519},
{"f_20522ChickenBridge.scm",(void*)f_20522},
{"f_20546ChickenBridge.scm",(void*)f_20546},
{"f_20603ChickenBridge.scm",(void*)f_20603},
{"f_20609ChickenBridge.scm",(void*)f_20609},
{"f_20618ChickenBridge.scm",(void*)f_20618},
{"f_20627ChickenBridge.scm",(void*)f_20627},
{"f_20636ChickenBridge.scm",(void*)f_20636},
{"f_20645ChickenBridge.scm",(void*)f_20645},
{"f_20597ChickenBridge.scm",(void*)f_20597},
{"f_20552ChickenBridge.scm",(void*)f_20552},
{"f_20558ChickenBridge.scm",(void*)f_20558},
{"f_20564ChickenBridge.scm",(void*)f_20564},
{"f_20570ChickenBridge.scm",(void*)f_20570},
{"f_20576ChickenBridge.scm",(void*)f_20576},
{"f_20582ChickenBridge.scm",(void*)f_20582},
{"f_20423ChickenBridge.scm",(void*)f_20423},
{"f_20430ChickenBridge.scm",(void*)f_20430},
{"f_20413ChickenBridge.scm",(void*)f_20413},
{"f_20401ChickenBridge.scm",(void*)f_20401},
{"f_20369ChickenBridge.scm",(void*)f_20369},
{"f_20376ChickenBridge.scm",(void*)f_20376},
{"f_20383ChickenBridge.scm",(void*)f_20383},
{"f_20353ChickenBridge.scm",(void*)f_20353},
{"f_20360ChickenBridge.scm",(void*)f_20360},
{"f_20367ChickenBridge.scm",(void*)f_20367},
{"f_20341ChickenBridge.scm",(void*)f_20341},
{"f_20323ChickenBridge.scm",(void*)f_20323},
{"f_20305ChickenBridge.scm",(void*)f_20305},
{"f_20290ChickenBridge.scm",(void*)f_20290},
{"f_20284ChickenBridge.scm",(void*)f_20284},
{"f_20272ChickenBridge.scm",(void*)f_20272},
{"f_20254ChickenBridge.scm",(void*)f_20254},
{"f_20233ChickenBridge.scm",(void*)f_20233},
{"f_20201ChickenBridge.scm",(void*)f_20201},
{"f_20208ChickenBridge.scm",(void*)f_20208},
{"f_20143ChickenBridge.scm",(void*)f_20143},
{"f_20151ChickenBridge.scm",(void*)f_20151},
{"f_20133ChickenBridge.scm",(void*)f_20133},
{"f_20141ChickenBridge.scm",(void*)f_20141},
{"f_20127ChickenBridge.scm",(void*)f_20127},
{"f_20115ChickenBridge.scm",(void*)f_20115},
{"f_20112ChickenBridge.scm",(void*)f_20112},
{"f_20091ChickenBridge.scm",(void*)f_20091},
{"f_20004ChickenBridge.scm",(void*)f_20004},
{"f_19983ChickenBridge.scm",(void*)f_19983},
{"f_19973ChickenBridge.scm",(void*)f_19973},
{"f_19961ChickenBridge.scm",(void*)f_19961},
{"f_19932ChickenBridge.scm",(void*)f_19932},
{"f_19920ChickenBridge.scm",(void*)f_19920},
{"f_19902ChickenBridge.scm",(void*)f_19902},
{"f_19884ChickenBridge.scm",(void*)f_19884},
{"f_19863ChickenBridge.scm",(void*)f_19863},
{"f_18841ChickenBridge.scm",(void*)f_18841},
{"f_19840ChickenBridge.scm",(void*)f_19840},
{"f_19855ChickenBridge.scm",(void*)f_19855},
{"f_19847ChickenBridge.scm",(void*)f_19847},
{"f_19811ChickenBridge.scm",(void*)f_19811},
{"f_19815ChickenBridge.scm",(void*)f_19815},
{"f_19776ChickenBridge.scm",(void*)f_19776},
{"f_19780ChickenBridge.scm",(void*)f_19780},
{"f_18851ChickenBridge.scm",(void*)f_18851},
{"f_19740ChickenBridge.scm",(void*)f_19740},
{"f_19755ChickenBridge.scm",(void*)f_19755},
{"f_19747ChickenBridge.scm",(void*)f_19747},
{"f_19711ChickenBridge.scm",(void*)f_19711},
{"f_19715ChickenBridge.scm",(void*)f_19715},
{"f_19676ChickenBridge.scm",(void*)f_19676},
{"f_19680ChickenBridge.scm",(void*)f_19680},
{"f_18854ChickenBridge.scm",(void*)f_18854},
{"f_18857ChickenBridge.scm",(void*)f_18857},
{"f_18862ChickenBridge.scm",(void*)f_18862},
{"f_19569ChickenBridge.scm",(void*)f_19569},
{"f_19592ChickenBridge.scm",(void*)f_19592},
{"f_19645ChickenBridge.scm",(void*)f_19645},
{"f_19627ChickenBridge.scm",(void*)f_19627},
{"f_19620ChickenBridge.scm",(void*)f_19620},
{"f_19602ChickenBridge.scm",(void*)f_19602},
{"f_19579ChickenBridge.scm",(void*)f_19579},
{"f_19056ChickenBridge.scm",(void*)f_19056},
{"f_19531ChickenBridge.scm",(void*)f_19531},
{"f_19553ChickenBridge.scm",(void*)f_19553},
{"f_19537ChickenBridge.scm",(void*)f_19537},
{"f_19545ChickenBridge.scm",(void*)f_19545},
{"f_19549ChickenBridge.scm",(void*)f_19549},
{"f_19535ChickenBridge.scm",(void*)f_19535},
{"f_19525ChickenBridge.scm",(void*)f_19525},
{"f_19059ChickenBridge.scm",(void*)f_19059},
{"f_19402ChickenBridge.scm",(void*)f_19402},
{"f_19426ChickenBridge.scm",(void*)f_19426},
{"f_19488ChickenBridge.scm",(void*)f_19488},
{"f_19429ChickenBridge.scm",(void*)f_19429},
{"f_19445ChickenBridge.scm",(void*)f_19445},
{"f_19470ChickenBridge.scm",(void*)f_19470},
{"f_19436ChickenBridge.scm",(void*)f_19436},
{"f_19413ChickenBridge.scm",(void*)f_19413},
{"f_19062ChickenBridge.scm",(void*)f_19062},
{"f_19388ChickenBridge.scm",(void*)f_19388},
{"f_19066ChickenBridge.scm",(void*)f_19066},
{"f_19110ChickenBridge.scm",(void*)f_19110},
{"f_19113ChickenBridge.scm",(void*)f_19113},
{"f_19369ChickenBridge.scm",(void*)f_19369},
{"f_19379ChickenBridge.scm",(void*)f_19379},
{"f_19116ChickenBridge.scm",(void*)f_19116},
{"f_19307ChickenBridge.scm",(void*)f_19307},
{"f_19317ChickenBridge.scm",(void*)f_19317},
{"f_19320ChickenBridge.scm",(void*)f_19320},
{"f_19340ChickenBridge.scm",(void*)f_19340},
{"f_19342ChickenBridge.scm",(void*)f_19342},
{"f_19352ChickenBridge.scm",(void*)f_19352},
{"f_19326ChickenBridge.scm",(void*)f_19326},
{"f_19329ChickenBridge.scm",(void*)f_19329},
{"f_19119ChickenBridge.scm",(void*)f_19119},
{"f_19127ChickenBridge.scm",(void*)f_19127},
{"f_19140ChickenBridge.scm",(void*)f_19140},
{"f_19014ChickenBridge.scm",(void*)f_19014},
{"f_19023ChickenBridge.scm",(void*)f_19023},
{"f_19045ChickenBridge.scm",(void*)f_19045},
{"f_19034ChickenBridge.scm",(void*)f_19034},
{"f_19143ChickenBridge.scm",(void*)f_19143},
{"f_19278ChickenBridge.scm",(void*)f_19278},
{"f_19280ChickenBridge.scm",(void*)f_19280},
{"f_19290ChickenBridge.scm",(void*)f_19290},
{"f_19149ChickenBridge.scm",(void*)f_19149},
{"f_19251ChickenBridge.scm",(void*)f_19251},
{"f_19253ChickenBridge.scm",(void*)f_19253},
{"f_19263ChickenBridge.scm",(void*)f_19263},
{"f_19152ChickenBridge.scm",(void*)f_19152},
{"f_19164ChickenBridge.scm",(void*)f_19164},
{"f_19190ChickenBridge.scm",(void*)f_19190},
{"f_19196ChickenBridge.scm",(void*)f_19196},
{"f_19202ChickenBridge.scm",(void*)f_19202},
{"f_19212ChickenBridge.scm",(void*)f_19212},
{"f_19214ChickenBridge.scm",(void*)f_19214},
{"f_19224ChickenBridge.scm",(void*)f_19224},
{"f_19205ChickenBridge.scm",(void*)f_19205},
{"f_19177ChickenBridge.scm",(void*)f_19177},
{"f_19155ChickenBridge.scm",(void*)f_19155},
{"f_19122ChickenBridge.scm",(void*)f_19122},
{"f_19069ChickenBridge.scm",(void*)f_19069},
{"f_19092ChickenBridge.scm",(void*)f_19092},
{"f_19081ChickenBridge.scm",(void*)f_19081},
{"f_18946ChickenBridge.scm",(void*)f_18946},
{"f_18994ChickenBridge.scm",(void*)f_18994},
{"f_18956ChickenBridge.scm",(void*)f_18956},
{"f_18984ChickenBridge.scm",(void*)f_18984},
{"f_18959ChickenBridge.scm",(void*)f_18959},
{"f_18864ChickenBridge.scm",(void*)f_18864},
{"f_18936ChickenBridge.scm",(void*)f_18936},
{"f_18868ChickenBridge.scm",(void*)f_18868},
{"f_18886ChickenBridge.scm",(void*)f_18886},
{"f_18918ChickenBridge.scm",(void*)f_18918},
{"f_18747ChickenBridge.scm",(void*)f_18747},
{"f_18751ChickenBridge.scm",(void*)f_18751},
{"f_18780ChickenBridge.scm",(void*)f_18780},
{"f_18785ChickenBridge.scm",(void*)f_18785},
{"f_18810ChickenBridge.scm",(void*)f_18810},
{"f_18795ChickenBridge.scm",(void*)f_18795},
{"f_18229ChickenBridge.scm",(void*)f_18229},
{"f_18500ChickenBridge.scm",(void*)f_18500},
{"f_18504ChickenBridge.scm",(void*)f_18504},
{"f_18509ChickenBridge.scm",(void*)f_18509},
{"f_18715ChickenBridge.scm",(void*)f_18715},
{"f_18730ChickenBridge.scm",(void*)f_18730},
{"f_18722ChickenBridge.scm",(void*)f_18722},
{"f_18686ChickenBridge.scm",(void*)f_18686},
{"f_18690ChickenBridge.scm",(void*)f_18690},
{"f_18651ChickenBridge.scm",(void*)f_18651},
{"f_18655ChickenBridge.scm",(void*)f_18655},
{"f_18513ChickenBridge.scm",(void*)f_18513},
{"f_18615ChickenBridge.scm",(void*)f_18615},
{"f_18630ChickenBridge.scm",(void*)f_18630},
{"f_18622ChickenBridge.scm",(void*)f_18622},
{"f_18586ChickenBridge.scm",(void*)f_18586},
{"f_18590ChickenBridge.scm",(void*)f_18590},
{"f_18551ChickenBridge.scm",(void*)f_18551},
{"f_18555ChickenBridge.scm",(void*)f_18555},
{"f_18516ChickenBridge.scm",(void*)f_18516},
{"f_18519ChickenBridge.scm",(void*)f_18519},
{"f_18522ChickenBridge.scm",(void*)f_18522},
{"f_18491ChickenBridge.scm",(void*)f_18491},
{"f_18233ChickenBridge.scm",(void*)f_18233},
{"f_18460ChickenBridge.scm",(void*)f_18460},
{"f_18475ChickenBridge.scm",(void*)f_18475},
{"f_18467ChickenBridge.scm",(void*)f_18467},
{"f_18431ChickenBridge.scm",(void*)f_18431},
{"f_18435ChickenBridge.scm",(void*)f_18435},
{"f_18396ChickenBridge.scm",(void*)f_18396},
{"f_18400ChickenBridge.scm",(void*)f_18400},
{"f_18236ChickenBridge.scm",(void*)f_18236},
{"f_18360ChickenBridge.scm",(void*)f_18360},
{"f_18375ChickenBridge.scm",(void*)f_18375},
{"f_18367ChickenBridge.scm",(void*)f_18367},
{"f_18331ChickenBridge.scm",(void*)f_18331},
{"f_18335ChickenBridge.scm",(void*)f_18335},
{"f_18296ChickenBridge.scm",(void*)f_18296},
{"f_18300ChickenBridge.scm",(void*)f_18300},
{"f_18239ChickenBridge.scm",(void*)f_18239},
{"f_18242ChickenBridge.scm",(void*)f_18242},
{"f_18245ChickenBridge.scm",(void*)f_18245},
{"f_18257ChickenBridge.scm",(void*)f_18257},
{"f_18275ChickenBridge.scm",(void*)f_18275},
{"f_18263ChickenBridge.scm",(void*)f_18263},
{"f_18251ChickenBridge.scm",(void*)f_18251},
{"f_18166ChickenBridge.scm",(void*)f_18166},
{"f_17826ChickenBridge.scm",(void*)f_17826},
{"f_18008ChickenBridge.scm",(void*)f_18008},
{"f_18012ChickenBridge.scm",(void*)f_18012},
{"f_18014ChickenBridge.scm",(void*)f_18014},
{"f_17939ChickenBridge.scm",(void*)f_17939},
{"f_17949ChickenBridge.scm",(void*)f_17949},
{"f_17956ChickenBridge.scm",(void*)f_17956},
{"f_18024ChickenBridge.scm",(void*)f_18024},
{"f_18027ChickenBridge.scm",(void*)f_18027},
{"f_18031ChickenBridge.scm",(void*)f_18031},
{"f_18051ChickenBridge.scm",(void*)f_18051},
{"f_18067ChickenBridge.scm",(void*)f_18067},
{"f_18034ChickenBridge.scm",(void*)f_18034},
{"f_17829ChickenBridge.scm",(void*)f_17829},
{"f_17841ChickenBridge.scm",(void*)f_17841},
{"f_17877ChickenBridge.scm",(void*)f_17877},
{"f_17897ChickenBridge.scm",(void*)f_17897},
{"f_17902ChickenBridge.scm",(void*)f_17902},
{"f_17339ChickenBridge.scm",(void*)f_17339},
{"f_17266ChickenBridge.scm",(void*)f_17266},
{"f_17111ChickenBridge.scm",(void*)f_17111},
{"f_17117ChickenBridge.scm",(void*)f_17117},
{"f_17202ChickenBridge.scm",(void*)f_17202},
{"f_17129ChickenBridge.scm",(void*)f_17129},
{"f_17145ChickenBridge.scm",(void*)f_17145},
{"f_17149ChickenBridge.scm",(void*)f_17149},
{"f_17152ChickenBridge.scm",(void*)f_17152},
{"f_17132ChickenBridge.scm",(void*)f_17132},
{"f_17143ChickenBridge.scm",(void*)f_17143},
{"f_17283ChickenBridge.scm",(void*)f_17283},
{"f_17820ChickenBridge.scm",(void*)f_17820},
{"f_17343ChickenBridge.scm",(void*)f_17343},
{"f_17789ChickenBridge.scm",(void*)f_17789},
{"f_17804ChickenBridge.scm",(void*)f_17804},
{"f_17796ChickenBridge.scm",(void*)f_17796},
{"f_17760ChickenBridge.scm",(void*)f_17760},
{"f_17764ChickenBridge.scm",(void*)f_17764},
{"f_17725ChickenBridge.scm",(void*)f_17725},
{"f_17729ChickenBridge.scm",(void*)f_17729},
{"f_17690ChickenBridge.scm",(void*)f_17690},
{"f_17694ChickenBridge.scm",(void*)f_17694},
{"f_17346ChickenBridge.scm",(void*)f_17346},
{"f_17654ChickenBridge.scm",(void*)f_17654},
{"f_17669ChickenBridge.scm",(void*)f_17669},
{"f_17661ChickenBridge.scm",(void*)f_17661},
{"f_17625ChickenBridge.scm",(void*)f_17625},
{"f_17629ChickenBridge.scm",(void*)f_17629},
{"f_17590ChickenBridge.scm",(void*)f_17590},
{"f_17594ChickenBridge.scm",(void*)f_17594},
{"f_17555ChickenBridge.scm",(void*)f_17555},
{"f_17559ChickenBridge.scm",(void*)f_17559},
{"f_17349ChickenBridge.scm",(void*)f_17349},
{"f_17519ChickenBridge.scm",(void*)f_17519},
{"f_17534ChickenBridge.scm",(void*)f_17534},
{"f_17526ChickenBridge.scm",(void*)f_17526},
{"f_17490ChickenBridge.scm",(void*)f_17490},
{"f_17494ChickenBridge.scm",(void*)f_17494},
{"f_17455ChickenBridge.scm",(void*)f_17455},
{"f_17459ChickenBridge.scm",(void*)f_17459},
{"f_17420ChickenBridge.scm",(void*)f_17420},
{"f_17424ChickenBridge.scm",(void*)f_17424},
{"f_17352ChickenBridge.scm",(void*)f_17352},
{"f_17355ChickenBridge.scm",(void*)f_17355},
{"f_17358ChickenBridge.scm",(void*)f_17358},
{"f_17391ChickenBridge.scm",(void*)f_17391},
{"f_17399ChickenBridge.scm",(void*)f_17399},
{"f_17364ChickenBridge.scm",(void*)f_17364},
{"f_17377ChickenBridge.scm",(void*)f_17377},
{"f_17367ChickenBridge.scm",(void*)f_17367},
{"f_17370ChickenBridge.scm",(void*)f_17370},
{"f_16906ChickenBridge.scm",(void*)f_16906},
{"f_16910ChickenBridge.scm",(void*)f_16910},
{"f_16913ChickenBridge.scm",(void*)f_16913},
{"f_16916ChickenBridge.scm",(void*)f_16916},
{"f_17085ChickenBridge.scm",(void*)f_17085},
{"f_17098ChickenBridge.scm",(void*)f_17098},
{"f_17102ChickenBridge.scm",(void*)f_17102},
{"f_16922ChickenBridge.scm",(void*)f_16922},
{"f_17078ChickenBridge.scm",(void*)f_17078},
{"f_17059ChickenBridge.scm",(void*)f_17059},
{"f_17066ChickenBridge.scm",(void*)f_17066},
{"f_17070ChickenBridge.scm",(void*)f_17070},
{"f_16928ChickenBridge.scm",(void*)f_16928},
{"f_16934ChickenBridge.scm",(void*)f_16934},
{"f_17018ChickenBridge.scm",(void*)f_17018},
{"f_17020ChickenBridge.scm",(void*)f_17020},
{"f_17042ChickenBridge.scm",(void*)f_17042},
{"f_17049ChickenBridge.scm",(void*)f_17049},
{"f_17053ChickenBridge.scm",(void*)f_17053},
{"f_17039ChickenBridge.scm",(void*)f_17039},
{"f_17035ChickenBridge.scm",(void*)f_17035},
{"f_16976ChickenBridge.scm",(void*)f_16976},
{"f_16993ChickenBridge.scm",(void*)f_16993},
{"f_17003ChickenBridge.scm",(void*)f_17003},
{"f_16979ChickenBridge.scm",(void*)f_16979},
{"f_16938ChickenBridge.scm",(void*)f_16938},
{"f_16946ChickenBridge.scm",(void*)f_16946},
{"f_16948ChickenBridge.scm",(void*)f_16948},
{"f_16969ChickenBridge.scm",(void*)f_16969},
{"f_16794ChickenBridge.scm",(void*)f_16794},
{"f_16904ChickenBridge.scm",(void*)f_16904},
{"f_16863ChickenBridge.scm",(void*)f_16863},
{"f_16896ChickenBridge.scm",(void*)f_16896},
{"f_16892ChickenBridge.scm",(void*)f_16892},
{"f_16877ChickenBridge.scm",(void*)f_16877},
{"f_16801ChickenBridge.scm",(void*)f_16801},
{"f_16809ChickenBridge.scm",(void*)f_16809},
{"f_16854ChickenBridge.scm",(void*)f_16854},
{"f_16842ChickenBridge.scm",(void*)f_16842},
{"f_16826ChickenBridge.scm",(void*)f_16826},
{"f_16027ChickenBridge.scm",(void*)f_16027},
{"f_16344ChickenBridge.scm",(void*)f_16344},
{"f_16351ChickenBridge.scm",(void*)f_16351},
{"f_16756ChickenBridge.scm",(void*)f_16756},
{"f_16771ChickenBridge.scm",(void*)f_16771},
{"f_16763ChickenBridge.scm",(void*)f_16763},
{"f_16727ChickenBridge.scm",(void*)f_16727},
{"f_16731ChickenBridge.scm",(void*)f_16731},
{"f_16692ChickenBridge.scm",(void*)f_16692},
{"f_16696ChickenBridge.scm",(void*)f_16696},
{"f_16657ChickenBridge.scm",(void*)f_16657},
{"f_16661ChickenBridge.scm",(void*)f_16661},
{"f_16354ChickenBridge.scm",(void*)f_16354},
{"f_16621ChickenBridge.scm",(void*)f_16621},
{"f_16636ChickenBridge.scm",(void*)f_16636},
{"f_16628ChickenBridge.scm",(void*)f_16628},
{"f_16592ChickenBridge.scm",(void*)f_16592},
{"f_16596ChickenBridge.scm",(void*)f_16596},
{"f_16557ChickenBridge.scm",(void*)f_16557},
{"f_16561ChickenBridge.scm",(void*)f_16561},
{"f_16522ChickenBridge.scm",(void*)f_16522},
{"f_16526ChickenBridge.scm",(void*)f_16526},
{"f_16357ChickenBridge.scm",(void*)f_16357},
{"f_16486ChickenBridge.scm",(void*)f_16486},
{"f_16501ChickenBridge.scm",(void*)f_16501},
{"f_16493ChickenBridge.scm",(void*)f_16493},
{"f_16457ChickenBridge.scm",(void*)f_16457},
{"f_16461ChickenBridge.scm",(void*)f_16461},
{"f_16422ChickenBridge.scm",(void*)f_16422},
{"f_16426ChickenBridge.scm",(void*)f_16426},
{"f_16387ChickenBridge.scm",(void*)f_16387},
{"f_16391ChickenBridge.scm",(void*)f_16391},
{"f_16360ChickenBridge.scm",(void*)f_16360},
{"f_16363ChickenBridge.scm",(void*)f_16363},
{"f_16031ChickenBridge.scm",(void*)f_16031},
{"f_16034ChickenBridge.scm",(void*)f_16034},
{"f_16308ChickenBridge.scm",(void*)f_16308},
{"f_16312ChickenBridge.scm",(void*)f_16312},
{"f_16315ChickenBridge.scm",(void*)f_16315},
{"f_16318ChickenBridge.scm",(void*)f_16318},
{"f_16321ChickenBridge.scm",(void*)f_16321},
{"f_16334ChickenBridge.scm",(void*)f_16334},
{"f_16324ChickenBridge.scm",(void*)f_16324},
{"f_16040ChickenBridge.scm",(void*)f_16040},
{"f_16047ChickenBridge.scm",(void*)f_16047},
{"f_16278ChickenBridge.scm",(void*)f_16278},
{"f_16293ChickenBridge.scm",(void*)f_16293},
{"f_16285ChickenBridge.scm",(void*)f_16285},
{"f_16249ChickenBridge.scm",(void*)f_16249},
{"f_16253ChickenBridge.scm",(void*)f_16253},
{"f_16214ChickenBridge.scm",(void*)f_16214},
{"f_16218ChickenBridge.scm",(void*)f_16218},
{"f_16050ChickenBridge.scm",(void*)f_16050},
{"f_16178ChickenBridge.scm",(void*)f_16178},
{"f_16193ChickenBridge.scm",(void*)f_16193},
{"f_16185ChickenBridge.scm",(void*)f_16185},
{"f_16149ChickenBridge.scm",(void*)f_16149},
{"f_16153ChickenBridge.scm",(void*)f_16153},
{"f_16114ChickenBridge.scm",(void*)f_16114},
{"f_16118ChickenBridge.scm",(void*)f_16118},
{"f_16053ChickenBridge.scm",(void*)f_16053},
{"f_16056ChickenBridge.scm",(void*)f_16056},
{"f_16071ChickenBridge.scm",(void*)f_16071},
{"f_16093ChickenBridge.scm",(void*)f_16093},
{"f_16077ChickenBridge.scm",(void*)f_16077},
{"f_16085ChickenBridge.scm",(void*)f_16085},
{"f_16059ChickenBridge.scm",(void*)f_16059},
{"f_16062ChickenBridge.scm",(void*)f_16062},
{"f_15944ChickenBridge.scm",(void*)f_15944},
{"f_15935ChickenBridge.scm",(void*)f_15935},
{"f_15926ChickenBridge.scm",(void*)f_15926},
{"f_15908ChickenBridge.scm",(void*)f_15908},
{"f_15890ChickenBridge.scm",(void*)f_15890},
{"f_15872ChickenBridge.scm",(void*)f_15872},
{"f_15863ChickenBridge.scm",(void*)f_15863},
{"f_15854ChickenBridge.scm",(void*)f_15854},
{"f_15632ChickenBridge.scm",(void*)f_15632},
{"f_15682ChickenBridge.scm",(void*)f_15682},
{"f_15827ChickenBridge.scm",(void*)f_15827},
{"f_15708ChickenBridge.scm",(void*)f_15708},
{"f_15823ChickenBridge.scm",(void*)f_15823},
{"f_15808ChickenBridge.scm",(void*)f_15808},
{"f_15789ChickenBridge.scm",(void*)f_15789},
{"f_15762ChickenBridge.scm",(void*)f_15762},
{"f_15715ChickenBridge.scm",(void*)f_15715},
{"f_15685ChickenBridge.scm",(void*)f_15685},
{"f_15635ChickenBridge.scm",(void*)f_15635},
{"f_15641ChickenBridge.scm",(void*)f_15641},
{"f_15657ChickenBridge.scm",(void*)f_15657},
{"f_15660ChickenBridge.scm",(void*)f_15660},
{"f_15158ChickenBridge.scm",(void*)f_15158},
{"f_15622ChickenBridge.scm",(void*)f_15622},
{"f_15162ChickenBridge.scm",(void*)f_15162},
{"f_15594ChickenBridge.scm",(void*)f_15594},
{"f_15609ChickenBridge.scm",(void*)f_15609},
{"f_15601ChickenBridge.scm",(void*)f_15601},
{"f_15565ChickenBridge.scm",(void*)f_15565},
{"f_15569ChickenBridge.scm",(void*)f_15569},
{"f_15530ChickenBridge.scm",(void*)f_15530},
{"f_15534ChickenBridge.scm",(void*)f_15534},
{"f_15495ChickenBridge.scm",(void*)f_15495},
{"f_15499ChickenBridge.scm",(void*)f_15499},
{"f_15165ChickenBridge.scm",(void*)f_15165},
{"f_15459ChickenBridge.scm",(void*)f_15459},
{"f_15474ChickenBridge.scm",(void*)f_15474},
{"f_15466ChickenBridge.scm",(void*)f_15466},
{"f_15430ChickenBridge.scm",(void*)f_15430},
{"f_15434ChickenBridge.scm",(void*)f_15434},
{"f_15395ChickenBridge.scm",(void*)f_15395},
{"f_15399ChickenBridge.scm",(void*)f_15399},
{"f_15360ChickenBridge.scm",(void*)f_15360},
{"f_15364ChickenBridge.scm",(void*)f_15364},
{"f_15168ChickenBridge.scm",(void*)f_15168},
{"f_15324ChickenBridge.scm",(void*)f_15324},
{"f_15339ChickenBridge.scm",(void*)f_15339},
{"f_15331ChickenBridge.scm",(void*)f_15331},
{"f_15295ChickenBridge.scm",(void*)f_15295},
{"f_15299ChickenBridge.scm",(void*)f_15299},
{"f_15260ChickenBridge.scm",(void*)f_15260},
{"f_15264ChickenBridge.scm",(void*)f_15264},
{"f_15225ChickenBridge.scm",(void*)f_15225},
{"f_15229ChickenBridge.scm",(void*)f_15229},
{"f_15171ChickenBridge.scm",(void*)f_15171},
{"f_15174ChickenBridge.scm",(void*)f_15174},
{"f_15177ChickenBridge.scm",(void*)f_15177},
{"f_15192ChickenBridge.scm",(void*)f_15192},
{"f_15204ChickenBridge.scm",(void*)f_15204},
{"f_15183ChickenBridge.scm",(void*)f_15183},
{"f_15186ChickenBridge.scm",(void*)f_15186},
{"f_15082ChickenBridge.scm",(void*)f_15082},
{"f_15086ChickenBridge.scm",(void*)f_15086},
{"f_15105ChickenBridge.scm",(void*)f_15105},
{"f_15115ChickenBridge.scm",(void*)f_15115},
{"f_15117ChickenBridge.scm",(void*)f_15117},
{"f_15134ChickenBridge.scm",(void*)f_15134},
{"f_15137ChickenBridge.scm",(void*)f_15137},
{"f_15148ChickenBridge.scm",(void*)f_15148},
{"f_15089ChickenBridge.scm",(void*)f_15089},
{"f_14819ChickenBridge.scm",(void*)f_14819},
{"f_15072ChickenBridge.scm",(void*)f_15072},
{"f_14823ChickenBridge.scm",(void*)f_14823},
{"f_15044ChickenBridge.scm",(void*)f_15044},
{"f_15059ChickenBridge.scm",(void*)f_15059},
{"f_15051ChickenBridge.scm",(void*)f_15051},
{"f_15015ChickenBridge.scm",(void*)f_15015},
{"f_15019ChickenBridge.scm",(void*)f_15019},
{"f_14980ChickenBridge.scm",(void*)f_14980},
{"f_14984ChickenBridge.scm",(void*)f_14984},
{"f_14826ChickenBridge.scm",(void*)f_14826},
{"f_14944ChickenBridge.scm",(void*)f_14944},
{"f_14959ChickenBridge.scm",(void*)f_14959},
{"f_14951ChickenBridge.scm",(void*)f_14951},
{"f_14915ChickenBridge.scm",(void*)f_14915},
{"f_14919ChickenBridge.scm",(void*)f_14919},
{"f_14880ChickenBridge.scm",(void*)f_14880},
{"f_14884ChickenBridge.scm",(void*)f_14884},
{"f_14829ChickenBridge.scm",(void*)f_14829},
{"f_14832ChickenBridge.scm",(void*)f_14832},
{"f_14835ChickenBridge.scm",(void*)f_14835},
{"f_14847ChickenBridge.scm",(void*)f_14847},
{"f_14859ChickenBridge.scm",(void*)f_14859},
{"f_14841ChickenBridge.scm",(void*)f_14841},
{"f_14783ChickenBridge.scm",(void*)f_14783},
{"f_14787ChickenBridge.scm",(void*)f_14787},
{"f_14809ChickenBridge.scm",(void*)f_14809},
{"f_14803ChickenBridge.scm",(void*)f_14803},
{"f_14796ChickenBridge.scm",(void*)f_14796},
{"f_14536ChickenBridge.scm",(void*)f_14536},
{"f_14540ChickenBridge.scm",(void*)f_14540},
{"f_14753ChickenBridge.scm",(void*)f_14753},
{"f_14768ChickenBridge.scm",(void*)f_14768},
{"f_14760ChickenBridge.scm",(void*)f_14760},
{"f_14724ChickenBridge.scm",(void*)f_14724},
{"f_14728ChickenBridge.scm",(void*)f_14728},
{"f_14689ChickenBridge.scm",(void*)f_14689},
{"f_14693ChickenBridge.scm",(void*)f_14693},
{"f_14543ChickenBridge.scm",(void*)f_14543},
{"f_14653ChickenBridge.scm",(void*)f_14653},
{"f_14668ChickenBridge.scm",(void*)f_14668},
{"f_14660ChickenBridge.scm",(void*)f_14660},
{"f_14624ChickenBridge.scm",(void*)f_14624},
{"f_14628ChickenBridge.scm",(void*)f_14628},
{"f_14589ChickenBridge.scm",(void*)f_14589},
{"f_14593ChickenBridge.scm",(void*)f_14593},
{"f_14546ChickenBridge.scm",(void*)f_14546},
{"f_14549ChickenBridge.scm",(void*)f_14549},
{"f_14552ChickenBridge.scm",(void*)f_14552},
{"f_14560ChickenBridge.scm",(void*)f_14560},
{"f_14568ChickenBridge.scm",(void*)f_14568},
{"f_14558ChickenBridge.scm",(void*)f_14558},
{"f_14321ChickenBridge.scm",(void*)f_14321},
{"f_14325ChickenBridge.scm",(void*)f_14325},
{"f_14534ChickenBridge.scm",(void*)f_14534},
{"f_14487ChickenBridge.scm",(void*)f_14487},
{"f_14499ChickenBridge.scm",(void*)f_14499},
{"f_14355ChickenBridge.scm",(void*)f_14355},
{"f_14358ChickenBridge.scm",(void*)f_14358},
{"f_14364ChickenBridge.scm",(void*)f_14364},
{"f_14367ChickenBridge.scm",(void*)f_14367},
{"f_14455ChickenBridge.scm",(void*)f_14455},
{"f_14370ChickenBridge.scm",(void*)f_14370},
{"f_14449ChickenBridge.scm",(void*)f_14449},
{"f_14376ChickenBridge.scm",(void*)f_14376},
{"f_14379ChickenBridge.scm",(void*)f_14379},
{"f_14331ChickenBridge.scm",(void*)f_14331},
{"f_14334ChickenBridge.scm",(void*)f_14334},
{"f_14341ChickenBridge.scm",(void*)f_14341},
{"f_13851ChickenBridge.scm",(void*)f_13851},
{"f_13855ChickenBridge.scm",(void*)f_13855},
{"f_14291ChickenBridge.scm",(void*)f_14291},
{"f_14306ChickenBridge.scm",(void*)f_14306},
{"f_14298ChickenBridge.scm",(void*)f_14298},
{"f_14262ChickenBridge.scm",(void*)f_14262},
{"f_14266ChickenBridge.scm",(void*)f_14266},
{"f_14227ChickenBridge.scm",(void*)f_14227},
{"f_14231ChickenBridge.scm",(void*)f_14231},
{"f_14192ChickenBridge.scm",(void*)f_14192},
{"f_14196ChickenBridge.scm",(void*)f_14196},
{"f_13858ChickenBridge.scm",(void*)f_13858},
{"f_14156ChickenBridge.scm",(void*)f_14156},
{"f_14171ChickenBridge.scm",(void*)f_14171},
{"f_14163ChickenBridge.scm",(void*)f_14163},
{"f_14127ChickenBridge.scm",(void*)f_14127},
{"f_14131ChickenBridge.scm",(void*)f_14131},
{"f_14092ChickenBridge.scm",(void*)f_14092},
{"f_14096ChickenBridge.scm",(void*)f_14096},
{"f_14057ChickenBridge.scm",(void*)f_14057},
{"f_14061ChickenBridge.scm",(void*)f_14061},
{"f_13861ChickenBridge.scm",(void*)f_13861},
{"f_14021ChickenBridge.scm",(void*)f_14021},
{"f_14036ChickenBridge.scm",(void*)f_14036},
{"f_14028ChickenBridge.scm",(void*)f_14028},
{"f_13992ChickenBridge.scm",(void*)f_13992},
{"f_13996ChickenBridge.scm",(void*)f_13996},
{"f_13957ChickenBridge.scm",(void*)f_13957},
{"f_13961ChickenBridge.scm",(void*)f_13961},
{"f_13922ChickenBridge.scm",(void*)f_13922},
{"f_13926ChickenBridge.scm",(void*)f_13926},
{"f_13864ChickenBridge.scm",(void*)f_13864},
{"f_13867ChickenBridge.scm",(void*)f_13867},
{"f_13870ChickenBridge.scm",(void*)f_13870},
{"f_13893ChickenBridge.scm",(void*)f_13893},
{"f_13901ChickenBridge.scm",(void*)f_13901},
{"f_13876ChickenBridge.scm",(void*)f_13876},
{"f_13879ChickenBridge.scm",(void*)f_13879},
{"f_13771ChickenBridge.scm",(void*)f_13771},
{"f_13762ChickenBridge.scm",(void*)f_13762},
{"f_13690ChickenBridge.scm",(void*)f_13690},
{"f_13694ChickenBridge.scm",(void*)f_13694},
{"f_13697ChickenBridge.scm",(void*)f_13697},
{"f_13435ChickenBridge.scm",(void*)f_13435},
{"f_13439ChickenBridge.scm",(void*)f_13439},
{"f_13660ChickenBridge.scm",(void*)f_13660},
{"f_13675ChickenBridge.scm",(void*)f_13675},
{"f_13667ChickenBridge.scm",(void*)f_13667},
{"f_13631ChickenBridge.scm",(void*)f_13631},
{"f_13635ChickenBridge.scm",(void*)f_13635},
{"f_13596ChickenBridge.scm",(void*)f_13596},
{"f_13600ChickenBridge.scm",(void*)f_13600},
{"f_13442ChickenBridge.scm",(void*)f_13442},
{"f_13560ChickenBridge.scm",(void*)f_13560},
{"f_13575ChickenBridge.scm",(void*)f_13575},
{"f_13567ChickenBridge.scm",(void*)f_13567},
{"f_13531ChickenBridge.scm",(void*)f_13531},
{"f_13535ChickenBridge.scm",(void*)f_13535},
{"f_13496ChickenBridge.scm",(void*)f_13496},
{"f_13500ChickenBridge.scm",(void*)f_13500},
{"f_13445ChickenBridge.scm",(void*)f_13445},
{"f_13448ChickenBridge.scm",(void*)f_13448},
{"f_13451ChickenBridge.scm",(void*)f_13451},
{"f_13463ChickenBridge.scm",(void*)f_13463},
{"f_13475ChickenBridge.scm",(void*)f_13475},
{"f_13457ChickenBridge.scm",(void*)f_13457},
{"f_13320ChickenBridge.scm",(void*)f_13320},
{"f_13433ChickenBridge.scm",(void*)f_13433},
{"f_13330ChickenBridge.scm",(void*)f_13330},
{"f_13418ChickenBridge.scm",(void*)f_13418},
{"f_13429ChickenBridge.scm",(void*)f_13429},
{"f_13425ChickenBridge.scm",(void*)f_13425},
{"f_13333ChickenBridge.scm",(void*)f_13333},
{"f_13415ChickenBridge.scm",(void*)f_13415},
{"f_13341ChickenBridge.scm",(void*)f_13341},
{"f_13405ChickenBridge.scm",(void*)f_13405},
{"f_13350ChickenBridge.scm",(void*)f_13350},
{"f_13369ChickenBridge.scm",(void*)f_13369},
{"f_13398ChickenBridge.scm",(void*)f_13398},
{"f_13379ChickenBridge.scm",(void*)f_13379},
{"f_13394ChickenBridge.scm",(void*)f_13394},
{"f_13382ChickenBridge.scm",(void*)f_13382},
{"f_13353ChickenBridge.scm",(void*)f_13353},
{"f_13363ChickenBridge.scm",(void*)f_13363},
{"f_13344ChickenBridge.scm",(void*)f_13344},
{"f_13347ChickenBridge.scm",(void*)f_13347},
{"f_13274ChickenBridge.scm",(void*)f_13274},
{"f_13265ChickenBridge.scm",(void*)f_13265},
{"f_12964ChickenBridge.scm",(void*)f_12964},
{"f_12971ChickenBridge.scm",(void*)f_12971},
{"f_13260ChickenBridge.scm",(void*)f_13260},
{"f_12974ChickenBridge.scm",(void*)f_12974},
{"f_13245ChickenBridge.scm",(void*)f_13245},
{"f_13237ChickenBridge.scm",(void*)f_13237},
{"f_13229ChickenBridge.scm",(void*)f_13229},
{"f_13232ChickenBridge.scm",(void*)f_13232},
{"f_13200ChickenBridge.scm",(void*)f_13200},
{"f_13223ChickenBridge.scm",(void*)f_13223},
{"f_13206ChickenBridge.scm",(void*)f_13206},
{"f_13210ChickenBridge.scm",(void*)f_13210},
{"f_12977ChickenBridge.scm",(void*)f_12977},
{"f_12983ChickenBridge.scm",(void*)f_12983},
{"f_13075ChickenBridge.scm",(void*)f_13075},
{"f_13187ChickenBridge.scm",(void*)f_13187},
{"f_13194ChickenBridge.scm",(void*)f_13194},
{"f_13098ChickenBridge.scm",(void*)f_13098},
{"f_13100ChickenBridge.scm",(void*)f_13100},
{"f_13149ChickenBridge.scm",(void*)f_13149},
{"f_13184ChickenBridge.scm",(void*)f_13184},
{"f_13173ChickenBridge.scm",(void*)f_13173},
{"f_13318ChickenBridge.scm",(void*)f_13318},
{"f_13293ChickenBridge.scm",(void*)f_13293},
{"f_13314ChickenBridge.scm",(void*)f_13314},
{"f_13310ChickenBridge.scm",(void*)f_13310},
{"f_13302ChickenBridge.scm",(void*)f_13302},
{"f_13166ChickenBridge.scm",(void*)f_13166},
{"f_13159ChickenBridge.scm",(void*)f_13159},
{"f_13107ChickenBridge.scm",(void*)f_13107},
{"f_13147ChickenBridge.scm",(void*)f_13147},
{"f_13111ChickenBridge.scm",(void*)f_13111},
{"f_13143ChickenBridge.scm",(void*)f_13143},
{"f_13130ChickenBridge.scm",(void*)f_13130},
{"f_13138ChickenBridge.scm",(void*)f_13138},
{"f_13134ChickenBridge.scm",(void*)f_13134},
{"f_13114ChickenBridge.scm",(void*)f_13114},
{"f_13117ChickenBridge.scm",(void*)f_13117},
{"f_13091ChickenBridge.scm",(void*)f_13091},
{"f_13078ChickenBridge.scm",(void*)f_13078},
{"f_13087ChickenBridge.scm",(void*)f_13087},
{"f_13082ChickenBridge.scm",(void*)f_13082},
{"f_12989ChickenBridge.scm",(void*)f_12989},
{"f_13069ChickenBridge.scm",(void*)f_13069},
{"f_13049ChickenBridge.scm",(void*)f_13049},
{"f_13055ChickenBridge.scm",(void*)f_13055},
{"f_13066ChickenBridge.scm",(void*)f_13066},
{"f_13046ChickenBridge.scm",(void*)f_13046},
{"f_13034ChickenBridge.scm",(void*)f_13034},
{"f_13037ChickenBridge.scm",(void*)f_13037},
{"f_12992ChickenBridge.scm",(void*)f_12992},
{"f_13028ChickenBridge.scm",(void*)f_13028},
{"f_13023ChickenBridge.scm",(void*)f_13023},
{"f_12995ChickenBridge.scm",(void*)f_12995},
{"f_13008ChickenBridge.scm",(void*)f_13008},
{"f_12998ChickenBridge.scm",(void*)f_12998},
{"f_13001ChickenBridge.scm",(void*)f_13001},
{"f_13004ChickenBridge.scm",(void*)f_13004},
{"f_12841ChickenBridge.scm",(void*)f_12841},
{"f_12900ChickenBridge.scm",(void*)f_12900},
{"f_12910ChickenBridge.scm",(void*)f_12910},
{"f_12912ChickenBridge.scm",(void*)f_12912},
{"f_12941ChickenBridge.scm",(void*)f_12941},
{"f_12946ChickenBridge.scm",(void*)f_12946},
{"f_12931ChickenBridge.scm",(void*)f_12931},
{"f_12862ChickenBridge.scm",(void*)f_12862},
{"f_12894ChickenBridge.scm",(void*)f_12894},
{"f_12822ChickenBridge.scm",(void*)f_12822},
{"f_12829ChickenBridge.scm",(void*)f_12829},
{"f_12836ChickenBridge.scm",(void*)f_12836},
{"f_12803ChickenBridge.scm",(void*)f_12803},
{"f_12810ChickenBridge.scm",(void*)f_12810},
{"f_12817ChickenBridge.scm",(void*)f_12817},
{"f_12623ChickenBridge.scm",(void*)f_12623},
{"f_12627ChickenBridge.scm",(void*)f_12627},
{"f_12630ChickenBridge.scm",(void*)f_12630},
{"f_12633ChickenBridge.scm",(void*)f_12633},
{"f_12636ChickenBridge.scm",(void*)f_12636},
{"f_12793ChickenBridge.scm",(void*)f_12793},
{"f_12800ChickenBridge.scm",(void*)f_12800},
{"f_12639ChickenBridge.scm",(void*)f_12639},
{"f_12642ChickenBridge.scm",(void*)f_12642},
{"f_12648ChickenBridge.scm",(void*)f_12648},
{"f_12654ChickenBridge.scm",(void*)f_12654},
{"f_12717ChickenBridge.scm",(void*)f_12717},
{"f_12731ChickenBridge.scm",(void*)f_12731},
{"f_12657ChickenBridge.scm",(void*)f_12657},
{"f_12660ChickenBridge.scm",(void*)f_12660},
{"f_12666ChickenBridge.scm",(void*)f_12666},
{"f_12679ChickenBridge.scm",(void*)f_12679},
{"f_12669ChickenBridge.scm",(void*)f_12669},
{"f_12672ChickenBridge.scm",(void*)f_12672},
{"f_12613ChickenBridge.scm",(void*)f_12613},
{"f_12558ChickenBridge.scm",(void*)f_12558},
{"f_12549ChickenBridge.scm",(void*)f_12549},
{"f_12432ChickenBridge.scm",(void*)f_12432},
{"f_12423ChickenBridge.scm",(void*)f_12423},
{"f_12414ChickenBridge.scm",(void*)f_12414},
{"f_12405ChickenBridge.scm",(void*)f_12405},
{"f_12396ChickenBridge.scm",(void*)f_12396},
{"f_12378ChickenBridge.scm",(void*)f_12378},
{"f_12369ChickenBridge.scm",(void*)f_12369},
{"f_12360ChickenBridge.scm",(void*)f_12360},
{"f_12342ChickenBridge.scm",(void*)f_12342},
{"f_12333ChickenBridge.scm",(void*)f_12333},
{"f_12324ChickenBridge.scm",(void*)f_12324},
{"f_12309ChickenBridge.scm",(void*)f_12309},
{"f_12264ChickenBridge.scm",(void*)f_12264},
{"f_12246ChickenBridge.scm",(void*)f_12246},
{"f_12237ChickenBridge.scm",(void*)f_12237},
{"f_12210ChickenBridge.scm",(void*)f_12210},
{"f_12192ChickenBridge.scm",(void*)f_12192},
{"f_12174ChickenBridge.scm",(void*)f_12174},
{"f_12165ChickenBridge.scm",(void*)f_12165},
{"f_12153ChickenBridge.scm",(void*)f_12153},
{"f_11840ChickenBridge.scm",(void*)f_11840},
{"f_12151ChickenBridge.scm",(void*)f_12151},
{"f_12086ChickenBridge.scm",(void*)f_12086},
{"f_12088ChickenBridge.scm",(void*)f_12088},
{"f_7586ChickenBridge.scm",(void*)f_7586},
{"f_12103ChickenBridge.scm",(void*)f_12103},
{"f_12106ChickenBridge.scm",(void*)f_12106},
{"f_11853ChickenBridge.scm",(void*)f_11853},
{"f_11929ChickenBridge.scm",(void*)f_11929},
{"f_12082ChickenBridge.scm",(void*)f_12082},
{"f_12066ChickenBridge.scm",(void*)f_12066},
{"f_12018ChickenBridge.scm",(void*)f_12018},
{"f_12032ChickenBridge.scm",(void*)f_12032},
{"f_11985ChickenBridge.scm",(void*)f_11985},
{"f_11960ChickenBridge.scm",(void*)f_11960},
{"f_11856ChickenBridge.scm",(void*)f_11856},
{"f_11864ChickenBridge.scm",(void*)f_11864},
{"f_11897ChickenBridge.scm",(void*)f_11897},
{"f_11133ChickenBridge.scm",(void*)f_11133},
{"f_11817ChickenBridge.scm",(void*)f_11817},
{"f_11832ChickenBridge.scm",(void*)f_11832},
{"f_11824ChickenBridge.scm",(void*)f_11824},
{"f_11788ChickenBridge.scm",(void*)f_11788},
{"f_11792ChickenBridge.scm",(void*)f_11792},
{"f_11753ChickenBridge.scm",(void*)f_11753},
{"f_11757ChickenBridge.scm",(void*)f_11757},
{"f_11718ChickenBridge.scm",(void*)f_11718},
{"f_11722ChickenBridge.scm",(void*)f_11722},
{"f_11683ChickenBridge.scm",(void*)f_11683},
{"f_11687ChickenBridge.scm",(void*)f_11687},
{"f_11137ChickenBridge.scm",(void*)f_11137},
{"f_11647ChickenBridge.scm",(void*)f_11647},
{"f_11662ChickenBridge.scm",(void*)f_11662},
{"f_11654ChickenBridge.scm",(void*)f_11654},
{"f_11618ChickenBridge.scm",(void*)f_11618},
{"f_11622ChickenBridge.scm",(void*)f_11622},
{"f_11583ChickenBridge.scm",(void*)f_11583},
{"f_11587ChickenBridge.scm",(void*)f_11587},
{"f_11548ChickenBridge.scm",(void*)f_11548},
{"f_11552ChickenBridge.scm",(void*)f_11552},
{"f_11513ChickenBridge.scm",(void*)f_11513},
{"f_11517ChickenBridge.scm",(void*)f_11517},
{"f_11140ChickenBridge.scm",(void*)f_11140},
{"f_11477ChickenBridge.scm",(void*)f_11477},
{"f_11492ChickenBridge.scm",(void*)f_11492},
{"f_11484ChickenBridge.scm",(void*)f_11484},
{"f_11448ChickenBridge.scm",(void*)f_11448},
{"f_11452ChickenBridge.scm",(void*)f_11452},
{"f_11413ChickenBridge.scm",(void*)f_11413},
{"f_11417ChickenBridge.scm",(void*)f_11417},
{"f_11378ChickenBridge.scm",(void*)f_11378},
{"f_11382ChickenBridge.scm",(void*)f_11382},
{"f_11343ChickenBridge.scm",(void*)f_11343},
{"f_11347ChickenBridge.scm",(void*)f_11347},
{"f_11143ChickenBridge.scm",(void*)f_11143},
{"f_11307ChickenBridge.scm",(void*)f_11307},
{"f_11322ChickenBridge.scm",(void*)f_11322},
{"f_11314ChickenBridge.scm",(void*)f_11314},
{"f_11278ChickenBridge.scm",(void*)f_11278},
{"f_11282ChickenBridge.scm",(void*)f_11282},
{"f_11243ChickenBridge.scm",(void*)f_11243},
{"f_11247ChickenBridge.scm",(void*)f_11247},
{"f_11208ChickenBridge.scm",(void*)f_11208},
{"f_11212ChickenBridge.scm",(void*)f_11212},
{"f_11173ChickenBridge.scm",(void*)f_11173},
{"f_11177ChickenBridge.scm",(void*)f_11177},
{"f_11146ChickenBridge.scm",(void*)f_11146},
{"f_11149ChickenBridge.scm",(void*)f_11149},
{"f_10899ChickenBridge.scm",(void*)f_10899},
{"f_10908ChickenBridge.scm",(void*)f_10908},
{"f_10912ChickenBridge.scm",(void*)f_10912},
{"f_11114ChickenBridge.scm",(void*)f_11114},
{"f_11099ChickenBridge.scm",(void*)f_11099},
{"f_11081ChickenBridge.scm",(void*)f_11081},
{"f_11066ChickenBridge.scm",(void*)f_11066},
{"f_11016ChickenBridge.scm",(void*)f_11016},
{"f_10996ChickenBridge.scm",(void*)f_10996},
{"f_11013ChickenBridge.scm",(void*)f_11013},
{"f_11000ChickenBridge.scm",(void*)f_11000},
{"f_11006ChickenBridge.scm",(void*)f_11006},
{"f_10981ChickenBridge.scm",(void*)f_10981},
{"f_10985ChickenBridge.scm",(void*)f_10985},
{"f_10991ChickenBridge.scm",(void*)f_10991},
{"f_10967ChickenBridge.scm",(void*)f_10967},
{"f_10979ChickenBridge.scm",(void*)f_10979},
{"f_10975ChickenBridge.scm",(void*)f_10975},
{"f_10957ChickenBridge.scm",(void*)f_10957},
{"f_10965ChickenBridge.scm",(void*)f_10965},
{"f_10947ChickenBridge.scm",(void*)f_10947},
{"f_10914ChickenBridge.scm",(void*)f_10914},
{"f_10870ChickenBridge.scm",(void*)f_10870},
{"f_10874ChickenBridge.scm",(void*)f_10874},
{"f_10885ChickenBridge.scm",(void*)f_10885},
{"f_10883ChickenBridge.scm",(void*)f_10883},
{"f_10839ChickenBridge.scm",(void*)f_10839},
{"f_10843ChickenBridge.scm",(void*)f_10843},
{"f_10854ChickenBridge.scm",(void*)f_10854},
{"f_10852ChickenBridge.scm",(void*)f_10852},
{"f_10821ChickenBridge.scm",(void*)f_10821},
{"f_10829ChickenBridge.scm",(void*)f_10829},
{"f_10837ChickenBridge.scm",(void*)f_10837},
{"f_10811ChickenBridge.scm",(void*)f_10811},
{"f_10819ChickenBridge.scm",(void*)f_10819},
{"f_10752ChickenBridge.scm",(void*)f_10752},
{"f_10759ChickenBridge.scm",(void*)f_10759},
{"f_10762ChickenBridge.scm",(void*)f_10762},
{"f_10765ChickenBridge.scm",(void*)f_10765},
{"f_10770ChickenBridge.scm",(void*)f_10770},
{"f_10722ChickenBridge.scm",(void*)f_10722},
{"f_10726ChickenBridge.scm",(void*)f_10726},
{"f_10736ChickenBridge.scm",(void*)f_10736},
{"f_10710ChickenBridge.scm",(void*)f_10710},
{"f_10692ChickenBridge.scm",(void*)f_10692},
{"f_10674ChickenBridge.scm",(void*)f_10674},
{"f_10656ChickenBridge.scm",(void*)f_10656},
{"f_10635ChickenBridge.scm",(void*)f_10635},
{"f_10493ChickenBridge.scm",(void*)f_10493},
{"f_10497ChickenBridge.scm",(void*)f_10497},
{"f_10566ChickenBridge.scm",(void*)f_10566},
{"f_10609ChickenBridge.scm",(void*)f_10609},
{"f_10613ChickenBridge.scm",(void*)f_10613},
{"f_10602ChickenBridge.scm",(void*)f_10602},
{"f_10589ChickenBridge.scm",(void*)f_10589},
{"f_10508ChickenBridge.scm",(void*)f_10508},
{"f_10551ChickenBridge.scm",(void*)f_10551},
{"f_10555ChickenBridge.scm",(void*)f_10555},
{"f_10544ChickenBridge.scm",(void*)f_10544},
{"f_10531ChickenBridge.scm",(void*)f_10531},
{"f_10327ChickenBridge.scm",(void*)f_10327},
{"f_10428ChickenBridge.scm",(void*)f_10428},
{"f_10477ChickenBridge.scm",(void*)f_10477},
{"f_10473ChickenBridge.scm",(void*)f_10473},
{"f_10445ChickenBridge.scm",(void*)f_10445},
{"f_10380ChickenBridge.scm",(void*)f_10380},
{"f_10389ChickenBridge.scm",(void*)f_10389},
{"f_10373ChickenBridge.scm",(void*)f_10373},
{"f_10192ChickenBridge.scm",(void*)f_10192},
{"f_10318ChickenBridge.scm",(void*)f_10318},
{"f_10314ChickenBridge.scm",(void*)f_10314},
{"f_10292ChickenBridge.scm",(void*)f_10292},
{"f_10222ChickenBridge.scm",(void*)f_10222},
{"f_10238ChickenBridge.scm",(void*)f_10238},
{"f_10147ChickenBridge.scm",(void*)f_10147},
{"f_10190ChickenBridge.scm",(void*)f_10190},
{"f_10179ChickenBridge.scm",(void*)f_10179},
{"f_10031ChickenBridge.scm",(void*)f_10031},
{"f_10145ChickenBridge.scm",(void*)f_10145},
{"f_10046ChickenBridge.scm",(void*)f_10046},
{"f_10076ChickenBridge.scm",(void*)f_10076},
{"f_10095ChickenBridge.scm",(void*)f_10095},
{"f_10080ChickenBridge.scm",(void*)f_10080},
{"f_10059ChickenBridge.scm",(void*)f_10059},
{"f_9909ChickenBridge.scm",(void*)f_9909},
{"f_10029ChickenBridge.scm",(void*)f_10029},
{"f_9924ChickenBridge.scm",(void*)f_9924},
{"f_9954ChickenBridge.scm",(void*)f_9954},
{"f_9973ChickenBridge.scm",(void*)f_9973},
{"f_9958ChickenBridge.scm",(void*)f_9958},
{"f_9937ChickenBridge.scm",(void*)f_9937},
{"f_9812ChickenBridge.scm",(void*)f_9812},
{"f_9907ChickenBridge.scm",(void*)f_9907},
{"f_9827ChickenBridge.scm",(void*)f_9827},
{"f_9873ChickenBridge.scm",(void*)f_9873},
{"f_9858ChickenBridge.scm",(void*)f_9858},
{"f_9840ChickenBridge.scm",(void*)f_9840},
{"f_9759ChickenBridge.scm",(void*)f_9759},
{"f_9797ChickenBridge.scm",(void*)f_9797},
{"f_9804ChickenBridge.scm",(void*)f_9804},
{"f_9782ChickenBridge.scm",(void*)f_9782},
{"f_9757ChickenBridge.scm",(void*)f_9757},
{"f_9729ChickenBridge.scm",(void*)f_9729},
{"f_9731ChickenBridge.scm",(void*)f_9731},
{"f_9709ChickenBridge.scm",(void*)f_9709},
{"f_9657ChickenBridge.scm",(void*)f_9657},
{"f_9694ChickenBridge.scm",(void*)f_9694},
{"f_9661ChickenBridge.scm",(void*)f_9661},
{"f_9677ChickenBridge.scm",(void*)f_9677},
{"f_9679ChickenBridge.scm",(void*)f_9679},
{"f_9443ChickenBridge.scm",(void*)f_9443},
{"f_9456ChickenBridge.scm",(void*)f_9456},
{"f_9538ChickenBridge.scm",(void*)f_9538},
{"f_9541ChickenBridge.scm",(void*)f_9541},
{"f_9549ChickenBridge.scm",(void*)f_9549},
{"f_9561ChickenBridge.scm",(void*)f_9561},
{"f_9582ChickenBridge.scm",(void*)f_9582},
{"f_9590ChickenBridge.scm",(void*)f_9590},
{"f_9477ChickenBridge.scm",(void*)f_9477},
{"f_9482ChickenBridge.scm",(void*)f_9482},
{"f_9514ChickenBridge.scm",(void*)f_9514},
{"f_9422ChickenBridge.scm",(void*)f_9422},
{"f_9403ChickenBridge.scm",(void*)f_9403},
{"f_9362ChickenBridge.scm",(void*)f_9362},
{"f_9343ChickenBridge.scm",(void*)f_9343},
{"f_9115ChickenBridge.scm",(void*)f_9115},
{"f_9320ChickenBridge.scm",(void*)f_9320},
{"f_9335ChickenBridge.scm",(void*)f_9335},
{"f_9327ChickenBridge.scm",(void*)f_9327},
{"f_9291ChickenBridge.scm",(void*)f_9291},
{"f_9295ChickenBridge.scm",(void*)f_9295},
{"f_9256ChickenBridge.scm",(void*)f_9256},
{"f_9260ChickenBridge.scm",(void*)f_9260},
{"f_9119ChickenBridge.scm",(void*)f_9119},
{"f_9220ChickenBridge.scm",(void*)f_9220},
{"f_9235ChickenBridge.scm",(void*)f_9235},
{"f_9227ChickenBridge.scm",(void*)f_9227},
{"f_9191ChickenBridge.scm",(void*)f_9191},
{"f_9195ChickenBridge.scm",(void*)f_9195},
{"f_9156ChickenBridge.scm",(void*)f_9156},
{"f_9160ChickenBridge.scm",(void*)f_9160},
{"f_9122ChickenBridge.scm",(void*)f_9122},
{"f_9125ChickenBridge.scm",(void*)f_9125},
{"f_9128ChickenBridge.scm",(void*)f_9128},
{"f_9073ChickenBridge.scm",(void*)f_9073},
{"f_9102ChickenBridge.scm",(void*)f_9102},
{"f_9087ChickenBridge.scm",(void*)f_9087},
{"f_9018ChickenBridge.scm",(void*)f_9018},
{"f_9029ChickenBridge.scm",(void*)f_9029},
{"f_9031ChickenBridge.scm",(void*)f_9031},
{"f_9059ChickenBridge.scm",(void*)f_9059},
{"f_8919ChickenBridge.scm",(void*)f_8919},
{"f_8923ChickenBridge.scm",(void*)f_8923},
{"f_8926ChickenBridge.scm",(void*)f_8926},
{"f_8991ChickenBridge.scm",(void*)f_8991},
{"f_8928ChickenBridge.scm",(void*)f_8928},
{"f_8944ChickenBridge.scm",(void*)f_8944},
{"f_8691ChickenBridge.scm",(void*)f_8691},
{"f_8896ChickenBridge.scm",(void*)f_8896},
{"f_8911ChickenBridge.scm",(void*)f_8911},
{"f_8903ChickenBridge.scm",(void*)f_8903},
{"f_8867ChickenBridge.scm",(void*)f_8867},
{"f_8871ChickenBridge.scm",(void*)f_8871},
{"f_8832ChickenBridge.scm",(void*)f_8832},
{"f_8836ChickenBridge.scm",(void*)f_8836},
{"f_8695ChickenBridge.scm",(void*)f_8695},
{"f_8796ChickenBridge.scm",(void*)f_8796},
{"f_8811ChickenBridge.scm",(void*)f_8811},
{"f_8803ChickenBridge.scm",(void*)f_8803},
{"f_8767ChickenBridge.scm",(void*)f_8767},
{"f_8771ChickenBridge.scm",(void*)f_8771},
{"f_8732ChickenBridge.scm",(void*)f_8732},
{"f_8736ChickenBridge.scm",(void*)f_8736},
{"f_8698ChickenBridge.scm",(void*)f_8698},
{"f_8701ChickenBridge.scm",(void*)f_8701},
{"f_8711ChickenBridge.scm",(void*)f_8711},
{"f_8648ChickenBridge.scm",(void*)f_8648},
{"f_8681ChickenBridge.scm",(void*)f_8681},
{"f_8666ChickenBridge.scm",(void*)f_8666},
{"f_8627ChickenBridge.scm",(void*)f_8627},
{"f_8592ChickenBridge.scm",(void*)f_8592},
{"f_8596ChickenBridge.scm",(void*)f_8596},
{"f_8484ChickenBridge.scm",(void*)f_8484},
{"f_8571ChickenBridge.scm",(void*)f_8571},
{"f_8491ChickenBridge.scm",(void*)f_8491},
{"f_8500ChickenBridge.scm",(void*)f_8500},
{"f_8547ChickenBridge.scm",(void*)f_8547},
{"f_8513ChickenBridge.scm",(void*)f_8513},
{"f_8539ChickenBridge.scm",(void*)f_8539},
{"f_8351ChickenBridge.scm",(void*)f_8351},
{"f_8355ChickenBridge.scm",(void*)f_8355},
{"f_8358ChickenBridge.scm",(void*)f_8358},
{"f_8462ChickenBridge.scm",(void*)f_8462},
{"f_8360ChickenBridge.scm",(void*)f_8360},
{"f_8367ChickenBridge.scm",(void*)f_8367},
{"f_8409ChickenBridge.scm",(void*)f_8409},
{"f_8416ChickenBridge.scm",(void*)f_8416},
{"f_8390ChickenBridge.scm",(void*)f_8390},
{"f_8284ChickenBridge.scm",(void*)f_8284},
{"f_8288ChickenBridge.scm",(void*)f_8288},
{"f_8334ChickenBridge.scm",(void*)f_8334},
{"f_8291ChickenBridge.scm",(void*)f_8291},
{"f_8327ChickenBridge.scm",(void*)f_8327},
{"f_8294ChickenBridge.scm",(void*)f_8294},
{"f_8307ChickenBridge.scm",(void*)f_8307},
{"f_8238ChickenBridge.scm",(void*)f_8238},
{"f_8242ChickenBridge.scm",(void*)f_8242},
{"f_8152ChickenBridge.scm",(void*)f_8152},
{"f_8156ChickenBridge.scm",(void*)f_8156},
{"f_8159ChickenBridge.scm",(void*)f_8159},
{"f_8168ChickenBridge.scm",(void*)f_8168},
{"f_8190ChickenBridge.scm",(void*)f_8190},
{"f_8137ChickenBridge.scm",(void*)f_8137},
{"f_8122ChickenBridge.scm",(void*)f_8122},
{"f_7886ChickenBridge.scm",(void*)f_7886},
{"f_8099ChickenBridge.scm",(void*)f_8099},
{"f_8114ChickenBridge.scm",(void*)f_8114},
{"f_8106ChickenBridge.scm",(void*)f_8106},
{"f_8070ChickenBridge.scm",(void*)f_8070},
{"f_8074ChickenBridge.scm",(void*)f_8074},
{"f_8035ChickenBridge.scm",(void*)f_8035},
{"f_8039ChickenBridge.scm",(void*)f_8039},
{"f_7890ChickenBridge.scm",(void*)f_7890},
{"f_7999ChickenBridge.scm",(void*)f_7999},
{"f_8014ChickenBridge.scm",(void*)f_8014},
{"f_8006ChickenBridge.scm",(void*)f_8006},
{"f_7970ChickenBridge.scm",(void*)f_7970},
{"f_7974ChickenBridge.scm",(void*)f_7974},
{"f_7935ChickenBridge.scm",(void*)f_7935},
{"f_7939ChickenBridge.scm",(void*)f_7939},
{"f_7893ChickenBridge.scm",(void*)f_7893},
{"f_7896ChickenBridge.scm",(void*)f_7896},
{"f_7907ChickenBridge.scm",(void*)f_7907},
{"f_7846ChickenBridge.scm",(void*)f_7846},
{"f_7850ChickenBridge.scm",(void*)f_7850},
{"f_7880ChickenBridge.scm",(void*)f_7880},
{"f_7861ChickenBridge.scm",(void*)f_7861},
{"f_7869ChickenBridge.scm",(void*)f_7869},
{"f_7825ChickenBridge.scm",(void*)f_7825},
{"f_7837ChickenBridge.scm",(void*)f_7837},
{"f_7799ChickenBridge.scm",(void*)f_7799},
{"f_7757ChickenBridge.scm",(void*)f_7757},
{"f_7742ChickenBridge.scm",(void*)f_7742},
{"f_7631ChickenBridge.scm",(void*)f_7631},
{"f_7706ChickenBridge.scm",(void*)f_7706},
{"f_7635ChickenBridge.scm",(void*)f_7635},
{"f_7675ChickenBridge.scm",(void*)f_7675},
{"f_7664ChickenBridge.scm",(void*)f_7664},
{"f_7649ChickenBridge.scm",(void*)f_7649},
{"f_7657ChickenBridge.scm",(void*)f_7657},
{"f_7597ChickenBridge.scm",(void*)f_7597},
{"f_7609ChickenBridge.scm",(void*)f_7609},
{"f_7578ChickenBridge.scm",(void*)f_7578},
{"f_7575ChickenBridge.scm",(void*)f_7575},
{"f_7568ChickenBridge.scm",(void*)f_7568},
{"f_7565ChickenBridge.scm",(void*)f_7565},
{"f_7558ChickenBridge.scm",(void*)f_7558},
{"f_7540ChickenBridge.scm",(void*)f_7540},
{"f_7529ChickenBridge.scm",(void*)f_7529},
{"f_7526ChickenBridge.scm",(void*)f_7526},
{"f_7523ChickenBridge.scm",(void*)f_7523},
{"f_7520ChickenBridge.scm",(void*)f_7520},
{"f_7491ChickenBridge.scm",(void*)f_7491},
{"f_7484ChickenBridge.scm",(void*)f_7484},
{"f_7481ChickenBridge.scm",(void*)f_7481},
{"f_7460ChickenBridge.scm",(void*)f_7460},
{"f_7441ChickenBridge.scm",(void*)f_7441},
{"f_7422ChickenBridge.scm",(void*)f_7422},
{"f_7415ChickenBridge.scm",(void*)f_7415},
{"f_7408ChickenBridge.scm",(void*)f_7408},
{"f_7393ChickenBridge.scm",(void*)f_7393},
{"f_7382ChickenBridge.scm",(void*)f_7382},
{"f_7375ChickenBridge.scm",(void*)f_7375},
{"f_7348ChickenBridge.scm",(void*)f_7348},
{"f_7321ChickenBridge.scm",(void*)f_7321},
{"f_7280ChickenBridge.scm",(void*)f_7280},
{"f_7286ChickenBridge.scm",(void*)f_7286},
{"f_7296ChickenBridge.scm",(void*)f_7296},
{"f_7194ChickenBridge.scm",(void*)f_7194},
{"f_7155ChickenBridge.scm",(void*)f_7155},
{"f_7161ChickenBridge.scm",(void*)f_7161},
{"f_7181ChickenBridge.scm",(void*)f_7181},
{"f_7171ChickenBridge.scm",(void*)f_7171},
{"f_7115ChickenBridge.scm",(void*)f_7115},
{"f_7121ChickenBridge.scm",(void*)f_7121},
{"f_7145ChickenBridge.scm",(void*)f_7145},
{"f_7131ChickenBridge.scm",(void*)f_7131},
{"f_7016ChickenBridge.scm",(void*)f_7016},
{"f_7020ChickenBridge.scm",(void*)f_7020},
{"f_7045ChickenBridge.scm",(void*)f_7045},
{"f_7062ChickenBridge.scm",(void*)f_7062},
{"f_7066ChickenBridge.scm",(void*)f_7066},
{"f_7022ChickenBridge.scm",(void*)f_7022},
{"f_7039ChickenBridge.scm",(void*)f_7039},
{"f_6955ChickenBridge.scm",(void*)f_6955},
{"f_6968ChickenBridge.scm",(void*)f_6968},
{"f_6945ChickenBridge.scm",(void*)f_6945},
{"f_6905ChickenBridge.scm",(void*)f_6905},
{"f_6935ChickenBridge.scm",(void*)f_6935},
{"f_6815ChickenBridge.scm",(void*)f_6815},
{"f_6767ChickenBridge.scm",(void*)f_6767},
{"f_6801ChickenBridge.scm",(void*)f_6801},
{"f_6744ChickenBridge.scm",(void*)f_6744},
{"f_6738ChickenBridge.scm",(void*)f_6738},
{"f_6723ChickenBridge.scm",(void*)f_6723},
{"f_6709ChickenBridge.scm",(void*)f_6709},
{"f_6699ChickenBridge.scm",(void*)f_6699},
{"f_6689ChickenBridge.scm",(void*)f_6689},
{"f_6679ChickenBridge.scm",(void*)f_6679},
{"f_6669ChickenBridge.scm",(void*)f_6669},
{"f_6640ChickenBridge.scm",(void*)f_6640},
{"f_6649ChickenBridge.scm",(void*)f_6649},
{"f_6654ChickenBridge.scm",(void*)f_6654},
{"f_6629ChickenBridge.scm",(void*)f_6629},
{"f_6634ChickenBridge.scm",(void*)f_6634},
{"f_6336ChickenBridge.scm",(void*)f_6336},
{"f_6346ChickenBridge.scm",(void*)f_6346},
{"f_6597ChickenBridge.scm",(void*)f_6597},
{"f_6349ChickenBridge.scm",(void*)f_6349},
{"f_6352ChickenBridge.scm",(void*)f_6352},
{"f_6367ChickenBridge.scm",(void*)f_6367},
{"f_6377ChickenBridge.scm",(void*)f_6377},
{"f_6379ChickenBridge.scm",(void*)f_6379},
{"f_6438ChickenBridge.scm",(void*)f_6438},
{"f_6448ChickenBridge.scm",(void*)f_6448},
{"f_6565ChickenBridge.scm",(void*)f_6565},
{"f_6553ChickenBridge.scm",(void*)f_6553},
{"f_6551ChickenBridge.scm",(void*)f_6551},
{"f_6538ChickenBridge.scm",(void*)f_6538},
{"f_6492ChickenBridge.scm",(void*)f_6492},
{"f_6519ChickenBridge.scm",(void*)f_6519},
{"f_6498ChickenBridge.scm",(void*)f_6498},
{"f_6432ChickenBridge.scm",(void*)f_6432},
{"f_6391ChickenBridge.scm",(void*)f_6391},
{"f_6404ChickenBridge.scm",(void*)f_6404},
{"f_6614ChickenBridge.scm",(void*)f_6614},
{"f_6605ChickenBridge.scm",(void*)f_6605},
{"f_6613ChickenBridge.scm",(void*)f_6613},
{"f_6616ChickenBridge.scm",(void*)f_6616},
{"f_6624ChickenBridge.scm",(void*)f_6624},
{"f_6038ChickenBridge.scm",(void*)f_6038},
{"f_6291ChickenBridge.scm",(void*)f_6291},
{"f_6324ChickenBridge.scm",(void*)f_6324},
{"f_6320ChickenBridge.scm",(void*)f_6320},
{"f_6309ChickenBridge.scm",(void*)f_6309},
{"f_6305ChickenBridge.scm",(void*)f_6305},
{"f_6199ChickenBridge.scm",(void*)f_6199},
{"f_6202ChickenBridge.scm",(void*)f_6202},
{"f_6205ChickenBridge.scm",(void*)f_6205},
{"f_6285ChickenBridge.scm",(void*)f_6285},
{"f_6110ChickenBridge.scm",(void*)f_6110},
{"f_6051ChickenBridge.scm",(void*)f_6051},
{"f_6208ChickenBridge.scm",(void*)f_6208},
{"f_6215ChickenBridge.scm",(void*)f_6215},
{"f_6275ChickenBridge.scm",(void*)f_6275},
{"f_6261ChickenBridge.scm",(void*)f_6261},
{"f_6227ChickenBridge.scm",(void*)f_6227},
{"f_6253ChickenBridge.scm",(void*)f_6253},
{"f_6188ChickenBridge.scm",(void*)f_6188},
{"f_6235ChickenBridge.scm",(void*)f_6235},
{"f_6231ChickenBridge.scm",(void*)f_6231},
{NULL,NULL}};
#endif

static C_PTABLE_ENTRY *create_ptable(void){
#ifdef C_ENABLE_PTABLES
return ptable;
#else
return NULL;
#endif
}
/* end of file */
