/* Generated from ChickenBridge.scm by the CHICKEN compiler
   http://www.call-with-current-continuation.org
   2008-04-13 20:30
   Version 3.0.0 - macosx-unix-gnu-x86	[ manyargs dload ptables applyhook ]
   (c)2000-2008 Felix L. Winkelmann	compiled 2008-02-24 on zippy.local (Darwin)
   command line: ChickenBridge.scm -output-file ChickenBridge.cpp -quiet
   unit: grace
*/

#include "chicken.h"


/*************************************************************************
 * Copyright (C) 2007 Todd Ingalls, Rick Taube.                          *
 * This program is free software; you can redistribute it and/or modify  *
 * it under the terms of the Lisp Lesser Gnu Public License. The text of *
 * this agreement is available at http://www.cliki.net/LLGPL             *
 *************************************************************************/

#include "Grace.h"
#include "Scheme.h"
#include "Syntax.h"
#include "Midi.h"
#include <juce.h>

//
// Console Window code
//

void print_message(char * st) {
  // attempt at buffering: if string ends with #\Return, send string
  // AND trigger update else send string without triggering update
  String s=String(st);
  if ( s.endsWithChar('\n') )
    ((GraceApp *)GraceApp::getInstance())->getConsole()->postConsoleTextMessage(s, ConsoleMessage::TEXT, true);
  else
    ((GraceApp *)GraceApp::getInstance())->getConsole()->postConsoleTextMessage(s, ConsoleMessage::TEXT, false);
}

void print_error(char * st) {
  // attempt at buffering: if string ends with #\Return, send string
  // AND trigger update else send string without triggering update

printf("in print_error\n");
printf("  str='%s'\n",st);

  String s=String(st);
  if ( s.endsWithChar('\n') )
    ((GraceApp *)GraceApp::getInstance())->getConsole()->postConsoleTextMessage(s, ConsoleMessage::ERROR, true);
  else
    ((GraceApp *)GraceApp::getInstance())->getConsole()->postConsoleTextMessage(s, ConsoleMessage::ERROR, false);
}

//
// Scheduler code
//

void scheduler_sprout( C_word proc, double time, int id)
{
  ((GraceApp *)
   GraceApp::getInstance())->schemeProcess->addNode(0, time, proc, id);
}

bool scheduler_is_paused () {
  ((GraceApp *)GraceApp::getInstance())->schemeProcess->isPaused();
}

void scheduler_pause() {
  ((GraceApp *)GraceApp::getInstance())->schemeProcess->setPaused(true);
}

void scheduler_cont () {
  ((GraceApp *)GraceApp::getInstance())->schemeProcess->setPaused(false);
}

void scheduler_stop (int id) {
  ((GraceApp *)GraceApp::getInstance())->schemeProcess->stop(id);
}

void scheduler_hush () {
  ((GraceApp *)GraceApp::getInstance())->schemeProcess->stop(-1);
  ((GraceApp *)GraceApp::getInstance())->midiOutPort->clear();
}

bool scheduler_is_time_milliseconds () {
  ((GraceApp *)GraceApp::getInstance())->schemeProcess->isTimeMilliseconds();
}
 
void scheduler_set_time_milliseconds (bool b) {
  ((GraceApp *)GraceApp::getInstance())->schemeProcess->setTimeMilliseconds(b);
}

//void print_current_directory() {
//  String s=File::getCurrentWorkingDirectory().getFullPathName().quoted() + T("\n");
//  ((GraceApp *)GraceApp::getInstance())->getConsole()->postConsoleTextMessage(s, ConsoleMessage::TEXT, true);
//}

char *get_current_directory() {
  return (char *)File::getCurrentWorkingDirectory().getFullPathName().toUTF8();
}

void set_current_directory (char *path) {
  File dir=File(String(path));
  if ( dir.isDirectory() ) {
    dir.setAsCurrentWorkingDirectory();
    //print_working_directory();
  }
  else {
    String s=T(">>> Error: ") + dir.getFullPathName().quoted() + T(" is not a directory.\n");
    ((GraceApp *)GraceApp::getInstance())->getConsole()->postConsoleTextMessage(s, ConsoleMessage::ERROR, true);
  }			 
}

void load_sal_file(char *path) {
  SalSyntax::getInstance()->loadFile( String(path) );  
}



#include "Toolbox.h"



void mp_note(double time, double dur, float key, float vel, float chan) {
 ((GraceApp *)GraceApp::getInstance())->midiOutPort->sendNote(time, dur, key, vel, chan); 
}

void mp_data(int type, double time, float chan, float data1, float data2) {
 ((GraceApp *)GraceApp::getInstance())->midiOutPort->sendData(type, time, chan, data1, data2) ;
}

void mp_message(MidiMessage *m) {
 ((GraceApp *)GraceApp::getInstance())->midiOutPort->sendMessage(m) ;
}

/// MidiMessage accessors

MidiMessage *mm_make(int type, double time, int chan, 
		     int data1, int data2 ) {
  MidiMessage *m;
  chan++; // juce channels are 1 based
  switch (type) {
  case MidiNode::MM_OFF :
    m=new MidiMessage(MidiMessage::noteOff(chan, data1));
    break;
  case MidiNode::MM_ON :
    m=new MidiMessage(MidiMessage::noteOn(chan, data1, (juce::uint8)data2));
    break;
  case MidiNode::MM_TOUCH :
    m=new MidiMessage(MidiMessage::aftertouchChange(chan, data1, data2));
    break;
  case MidiNode::MM_CTRL :
    m=new MidiMessage(MidiMessage::controllerEvent(chan, data1, data2));
    break;
  case MidiNode::MM_PROG :
    m=new MidiMessage(MidiMessage::programChange(chan, data1));
    break;
  case MidiNode::MM_PRESS :
    m=new MidiMessage(MidiMessage::channelPressureChange(chan, data1));
    break;
  case MidiNode::MM_BEND :
    m=new MidiMessage(MidiMessage::pitchWheel(chan, data1));
    break;
  default:
    return NULL;
  }
  return m;
}

MidiMessage *mm_copy(MidiMessage *m) {
  return new MidiMessage(*m);
}

void mm_free(MidiMessage *m) {
  delete m;
}

bool mm_is_type(MidiMessage *m, int typ) {
  switch (typ) {
  case MidiNode::MM_OFF :
    return m->isNoteOff();
    break;
  case MidiNode::MM_ON :
    return m->isNoteOn();
    break;
  case MidiNode::MM_TOUCH :
    return m->isAftertouch();
    break;
  case MidiNode::MM_CTRL :
    return m->isController();
    break;
  case MidiNode::MM_PROG :
    return m->isProgramChange();
    break;
  case MidiNode::MM_PRESS :
    return m->isChannelPressure();
    break;
  case MidiNode::MM_BEND :
    return m->isPitchWheel();
    break;
  default:
    return false;
  }
}

double mm_time(MidiMessage *m) {
  return m->getTimeStamp();
}

void mm_set_time(MidiMessage *m, double t) {
  m->setTimeStamp(t);
  return ;		
}

int mm_chan(MidiMessage *m) {
  // juce channels are 1 based
  return m->getChannel()-1;
}

void mm_set_chan(MidiMessage *m, int chan) {
  // juce channels are 1 based
  m->setChannel(chan+1);
}

int mm_data(MidiMessage *m, int n ) {
  juce::uint8 *data=m->getRawData();
  return (int)data[n];
}

void mm_set_data(MidiMessage *m, int n, int v ) {
  juce::uint8 *data=m->getRawData();
  data[n]=(v & 0x7f);
}

//INput Hook Code
void set_input_hook( C_word proc )
{
 // FIX
 ((GraceApp *)GraceApp::getInstance())->schemeProcess->setInputHook( proc);
}



#include "Csound.h"

void cs_send_score_event (int type, int len, C_word lyst) {
  MYFLT buf[len];
  int i=0;
  for ( ; C_SCHEME_END_OF_LIST != lyst; lyst = C_u_i_cdr( lyst ) ) {
    if (i==len) break;
    C_word w = C_u_i_car( lyst );
    if ( C_immediatep(w) ) {
      if ( C_truep(C_fixnump(w)) ) {
	// printf("FIX: buf[%d]=%d\n", i, C_unfix(w) );
	buf[i++] = (MYFLT)C_unfix(w);
      }
      else
        buf[i++] = 0.0;
    }
    else if ( C_truep(C_blockp(w)) && C_truep( C_flonump( w ) )) {
      // printf("FLO: buf[%d]=%f\n", i, (float)C_flonum_magnitude( w ));
      buf[i++] = (MYFLT)C_flonum_magnitude( w );
    }
    else {
      buf[i++] = 0.0;
    }
  }
  ((GraceApp *)GraceApp::getInstance())->getCsoundPort()->sendScoreEvent( ((type==2) ? 'f' : 'i'), len, buf);  
}

void cs_clear_score () {
  ((GraceApp *)GraceApp::getInstance())->getCsoundPort()->clearScore();
}



static C_PTABLE_ENTRY *create_ptable(void);
C_noret_decl(C_library_toplevel)
C_externimport void C_ccall C_library_toplevel(C_word c,C_word d,C_word k) C_noret;
C_noret_decl(C_eval_toplevel)
C_externimport void C_ccall C_eval_toplevel(C_word c,C_word d,C_word k) C_noret;
C_noret_decl(C_extras_toplevel)
C_externimport void C_ccall C_extras_toplevel(C_word c,C_word d,C_word k) C_noret;
C_noret_decl(C_extras_toplevel)
C_externimport void C_ccall C_extras_toplevel(C_word c,C_word d,C_word k) C_noret;

static C_TLS C_word lf[943];
static double C_possibly_force_alignment;
static C_char C_TLS li0[] C_aligned={C_lihdr(0,0,11),40,97,54,53,54,55,32,105,51,50,41,0,0,0};
static C_char C_TLS li1[] C_aligned={C_lihdr(0,0,11),40,97,54,53,56,57,32,105,51,49,41,0,0,0};
static C_char C_TLS li2[] C_aligned={C_lihdr(0,0,11),40,97,54,53,57,57,32,105,51,48,41,0,0,0};
static C_char C_TLS li3[] C_aligned={C_lihdr(0,0,11),40,97,54,54,48,53,32,118,50,54,41,0,0,0};
static C_char C_TLS li4[] C_aligned={C_lihdr(0,0,34),40,101,120,112,97,110,100,45,111,112,116,107,101,121,115,32,117,115,101,114,48,32,115,112,101,99,49,32,98,111,100,121,50,41,0,0};
static C_char C_TLS li5[] C_aligned={C_lihdr(0,0,23),40,102,95,54,57,51,49,32,115,116,114,53,48,32,46,32,97,114,103,115,53,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li6[] C_aligned={C_lihdr(0,0,12),40,102,95,54,57,50,48,32,107,53,52,41,0,0,0,0};
static C_char C_TLS li7[] C_aligned={C_lihdr(0,0,12),40,102,95,54,57,50,57,32,107,53,53,41,0,0,0,0};
static C_char C_TLS li8[] C_aligned={C_lihdr(0,0,13),40,100,111,54,57,32,116,97,105,108,55,49,41,0,0,0,0,0};
static C_char C_TLS li9[] C_aligned={C_lihdr(0,0,11),40,97,54,56,54,55,32,120,55,55,41,0,0,0};
static C_char C_TLS li10[] C_aligned={C_lihdr(0,0,31),40,100,111,54,51,32,97,114,103,115,54,53,32,107,101,121,54,54,32,97,114,103,54,55,32,112,111,115,54,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li11[] C_aligned={C_lihdr(0,0,7),40,97,54,57,49,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li12[] C_aligned={C_lihdr(0,0,34),40,101,120,112,97,110,100,45,115,101,110,100,32,109,101,115,103,52,52,32,100,97,116,97,52,53,32,101,114,114,102,52,54,41,0,0};
static C_char C_TLS li13[] C_aligned={C_lihdr(0,0,8),40,102,95,54,57,52,57,41};
static C_char C_TLS li14[] C_aligned={C_lihdr(0,0,5),40,99,119,100,41,0,0,0,0,0};
static C_char C_TLS li15[] C_aligned={C_lihdr(0,0,14),40,102,95,54,57,54,52,32,97,57,52,57,56,41,0,0,0,0,0,0};
static C_char C_TLS li16[] C_aligned={C_lihdr(0,0,15),40,99,104,100,105,114,32,46,32,100,105,114,57,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li17[] C_aligned={C_lihdr(0,0,12),40,102,105,102,116,104,32,108,49,48,48,41,0,0,0,0};
static C_char C_TLS li18[] C_aligned={C_lihdr(0,0,12),40,115,105,120,116,104,32,108,49,48,49,41,0,0,0,0};
static C_char C_TLS li19[] C_aligned={C_lihdr(0,0,14),40,115,101,118,101,110,116,104,32,108,49,48,50,41,0,0,0,0,0,0};
static C_char C_TLS li20[] C_aligned={C_lihdr(0,0,13),40,101,105,103,104,116,104,32,108,49,48,51,41,0,0,0,0,0};
static C_char C_TLS li21[] C_aligned={C_lihdr(0,0,12),40,110,105,110,116,104,32,108,49,48,52,41,0,0,0,0};
static C_char C_TLS li22[] C_aligned={C_lihdr(0,0,12),40,116,101,110,116,104,32,108,49,48,53,41,0,0,0,0};
static C_char C_TLS li23[] C_aligned={C_lihdr(0,0,11),40,114,101,115,116,32,108,49,48,54,41,0,0,0};
static C_char C_TLS li24[] C_aligned={C_lihdr(0,0,11),40,108,97,115,116,32,108,49,48,55,41,0,0,0};
static C_char C_TLS li25[] C_aligned={C_lihdr(0,0,14),40,98,117,116,108,97,115,116,32,108,49,48,56,41,0,0,0,0,0,0};
static C_char C_TLS li26[] C_aligned={C_lihdr(0,0,11),40,116,97,105,108,32,108,49,48,57,41,0,0,0};
static C_char C_TLS li27[] C_aligned={C_lihdr(0,0,17),40,108,105,115,116,42,32,46,32,97,114,103,115,49,49,57,41,0};
static C_char C_TLS li28[] C_aligned={C_lihdr(0,0,32),40,108,105,115,116,45,115,101,116,33,32,108,105,115,49,50,48,32,112,111,115,49,50,49,32,118,97,108,49,50,50,41};
static C_char C_TLS li29[] C_aligned={C_lihdr(0,0,22),40,100,111,49,50,54,32,105,49,50,56,32,106,49,50,57,32,116,49,51,48,41,0,0,0,0,0,0};
static C_char C_TLS li30[] C_aligned={C_lihdr(0,0,15),40,114,101,118,101,114,115,101,33,32,108,49,50,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li31[] C_aligned={C_lihdr(0,0,14),40,108,49,32,97,49,52,48,32,98,49,52,49,41,0,0,0,0,0,0};
static C_char C_TLS li32[] C_aligned={C_lihdr(0,0,14),40,108,50,32,97,49,52,50,32,98,49,52,51,41,0,0,0,0,0,0};
static C_char C_TLS li33[] C_aligned={C_lihdr(0,0,25),40,109,97,107,101,45,108,105,115,116,32,110,49,51,54,32,46,32,111,98,106,49,51,55,41,0};
static C_char C_TLS li34[] C_aligned={C_lihdr(0,0,25),40,100,111,49,52,57,32,116,97,105,108,49,53,49,32,105,49,53,50,32,102,49,53,51,41,0};
static C_char C_TLS li35[] C_aligned={C_lihdr(0,0,22),40,108,105,115,116,45,105,110,100,101,120,32,112,49,52,55,32,108,49,52,56,41,0,0,0,0,0,0};
static C_char C_TLS li36[] C_aligned={C_lihdr(0,0,25),40,100,111,49,54,48,32,116,97,105,108,49,54,50,32,120,49,54,51,32,102,49,54,52,41,0};
static C_char C_TLS li37[] C_aligned={C_lihdr(0,0,21),40,108,105,115,116,45,102,105,110,100,32,112,49,53,56,32,108,49,53,57,41,0,0,0,0,0};
static C_char C_TLS li38[] C_aligned={C_lihdr(0,0,23),40,100,111,49,55,49,32,116,97,105,108,49,55,51,32,102,108,97,103,49,55,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li39[] C_aligned={C_lihdr(0,0,18),40,101,118,101,114,121,63,32,102,49,54,57,32,108,49,55,48,41,0,0};
static C_char C_TLS li40[] C_aligned={C_lihdr(0,0,35),40,108,105,115,116,45,112,114,111,112,32,108,105,115,49,55,57,32,112,114,111,112,49,56,48,32,46,32,100,101,102,49,56,49,41,0,0,0};
static C_char C_TLS li41[] C_aligned={C_lihdr(0,0,12),40,100,111,49,56,55,32,102,49,56,57,41,0,0,0,0};
static C_char C_TLS li42[] C_aligned={C_lihdr(0,0,24),40,98,105,116,119,105,115,101,45,116,101,115,116,32,97,49,56,53,32,98,49,56,54,41};
static C_char C_TLS li43[] C_aligned={C_lihdr(0,0,60),40,116,98,58,114,101,115,99,97,108,101,32,97,50,50,49,50,50,52,32,97,50,50,48,50,50,53,32,97,50,49,57,50,50,54,32,97,50,49,56,50,50,55,32,97,50,49,55,50,50,56,32,97,50,49,54,50,50,57,41,0,0,0,0};
static C_char C_TLS li44[] C_aligned={C_lihdr(0,0,61),40,116,98,58,100,105,115,99,114,101,116,101,32,97,50,51,54,50,51,57,32,97,50,51,53,50,52,48,32,97,50,51,52,50,52,49,32,97,50,51,51,50,52,50,32,97,50,51,50,50,52,51,32,97,50,51,49,50,52,52,41,0,0,0,0,0};
static C_char C_TLS li45[] C_aligned={C_lihdr(0,0,16),40,116,98,58,105,110,116,32,97,50,52,53,50,52,56,41};
static C_char C_TLS li46[] C_aligned={C_lihdr(0,0,29),40,116,98,58,113,117,97,110,116,105,122,101,32,97,50,53,48,50,53,51,32,97,50,52,57,50,53,52,41,0,0,0,0,0};
static C_char C_TLS li47[] C_aligned={C_lihdr(0,0,44),40,116,98,58,114,104,121,116,104,109,45,62,115,101,99,111,110,100,115,32,97,50,53,56,50,54,49,32,97,50,53,55,50,54,50,32,97,50,53,54,50,54,51,41,0,0,0,0};
static C_char C_TLS li48[] C_aligned={C_lihdr(0,0,26),40,116,98,58,99,101,110,116,115,45,62,115,99,97,108,101,114,32,97,50,54,53,50,54,56,41,0,0};
static C_char C_TLS li49[] C_aligned={C_lihdr(0,0,26),40,116,98,58,115,99,97,108,101,114,45,62,99,101,110,116,115,32,97,50,55,48,50,55,51,41,0,0};
static C_char C_TLS li50[] C_aligned={C_lihdr(0,0,44),40,116,98,58,101,120,112,108,115,101,103,32,97,50,55,55,50,56,48,32,97,50,55,54,50,56,49,32,97,50,55,53,50,56,50,32,97,50,55,52,50,56,51,41,0,0,0,0};
static C_char C_TLS li51[] C_aligned={C_lihdr(0,0,43),40,116,98,58,103,101,111,115,101,103,32,97,50,56,56,50,57,49,32,97,50,56,55,50,57,50,32,97,50,56,54,50,57,51,32,97,50,56,53,50,57,52,41,0,0,0};
static C_char C_TLS li52[] C_aligned={C_lihdr(0,0,26),40,116,98,58,107,101,121,110,117,109,45,62,104,101,114,116,122,32,97,50,57,54,50,57,57,41,0,0};
static C_char C_TLS li53[] C_aligned={C_lihdr(0,0,21),40,116,98,58,114,97,110,45,115,101,116,33,32,97,51,49,48,51,49,51,41,0,0,0,0,0};
static C_char C_TLS li54[] C_aligned={C_lihdr(0,0,17),40,116,98,58,114,97,110,105,32,97,51,49,52,51,49,55,41,0};
static C_char C_TLS li55[] C_aligned={C_lihdr(0,0,17),40,116,98,58,114,97,110,102,32,97,51,49,56,51,50,49,41,0};
static C_char C_TLS li56[] C_aligned={C_lihdr(0,0,11),40,116,98,58,114,97,110,108,111,119,41,0,0,0};
static C_char C_TLS li57[] C_aligned={C_lihdr(0,0,12),40,116,98,58,114,97,110,104,105,103,104,41,0,0,0,0};
static C_char C_TLS li58[] C_aligned={C_lihdr(0,0,14),40,116,98,58,114,97,110,109,105,100,100,108,101,41,0,0,0,0,0,0};
static C_char C_TLS li59[] C_aligned={C_lihdr(0,0,29),40,116,98,58,114,97,110,103,97,117,115,115,32,97,51,52,54,51,52,57,32,97,51,52,53,51,53,48,41,0,0,0,0,0};
static C_char C_TLS li60[] C_aligned={C_lihdr(0,0,19),40,116,98,58,114,97,110,101,120,112,32,97,51,53,50,51,53,53,41,0,0,0};
static C_char C_TLS li61[] C_aligned={C_lihdr(0,0,21),40,116,98,58,114,97,110,103,97,109,109,97,32,97,51,54,52,51,54,55,41,0,0,0,0,0};
static C_char C_TLS li62[] C_aligned={C_lihdr(0,0,14),40,116,98,58,114,97,110,99,97,117,99,104,121,41,0,0,0,0,0,0};
static C_char C_TLS li63[] C_aligned={C_lihdr(0,0,23),40,116,98,58,114,97,110,112,111,105,115,115,111,110,32,97,51,55,50,51,55,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li64[] C_aligned={C_lihdr(0,0,12),40,116,98,58,114,97,110,112,105,110,107,41,0,0,0,0};
static C_char C_TLS li65[] C_aligned={C_lihdr(0,0,13),40,116,98,58,114,97,110,98,114,111,119,110,41,0,0,0,0,0};
static C_char C_TLS li66[] C_aligned={C_lihdr(0,0,12),40,97,55,57,54,50,32,122,51,57,55,41,0,0,0,0};
static C_char C_TLS li67[] C_aligned={C_lihdr(0,0,45),40,114,101,115,99,97,108,101,32,120,51,57,49,32,120,49,51,57,50,32,120,50,51,57,51,32,121,49,51,57,52,32,121,50,51,57,53,32,46,32,98,51,57,54,41,0,0,0,0,0};
static C_char C_TLS li68[] C_aligned={C_lihdr(0,0,12),40,97,56,48,48,50,32,122,52,48,57,41,0,0,0,0};
static C_char C_TLS li69[] C_aligned={C_lihdr(0,0,12),40,97,56,48,50,56,32,122,52,49,48,41,0,0,0,0};
static C_char C_TLS li70[] C_aligned={C_lihdr(0,0,43),40,100,105,115,99,114,101,116,101,32,120,51,57,56,32,120,49,51,57,57,32,120,50,52,48,48,32,105,49,52,48,49,32,46,32,97,114,103,115,52,48,50,41,0,0,0};
static C_char C_TLS li71[] C_aligned={C_lihdr(0,0,10),40,105,110,116,32,102,52,49,50,41,0,0};
static C_char C_TLS li72[] C_aligned={C_lihdr(0,0,16),40,112,108,117,115,32,46,32,97,114,103,115,52,49,51,41};
static C_char C_TLS li73[] C_aligned={C_lihdr(0,0,24),40,109,105,110,117,115,32,97,114,103,52,49,52,32,46,32,97,114,103,115,52,49,53,41};
static C_char C_TLS li74[] C_aligned={C_lihdr(0,0,12),40,97,56,49,57,48,32,110,52,49,56,41,0,0,0,0};
static C_char C_TLS li75[] C_aligned={C_lihdr(0,0,26),40,113,117,97,110,116,105,122,101,32,110,117,109,52,49,54,32,115,116,101,112,115,52,49,55,41,0,0};
static C_char C_TLS li76[] C_aligned={C_lihdr(0,0,12),40,97,56,50,49,52,32,118,52,50,50,41,0,0,0,0};
static C_char C_TLS li77[] C_aligned={C_lihdr(0,0,29),40,100,101,99,105,109,97,108,115,32,118,97,108,117,101,52,49,57,32,112,108,97,99,101,115,52,50,48,41,0,0,0,0,0};
static C_char C_TLS li78[] C_aligned={C_lihdr(0,0,12),40,97,56,50,54,48,32,120,52,54,51,41,0,0,0,0};
static C_char C_TLS li79[] C_aligned={C_lihdr(0,0,36),40,114,104,121,116,104,109,45,62,115,101,99,111,110,100,115,32,98,101,97,116,115,52,50,51,32,46,32,97,114,103,115,52,50,52,41,0,0,0,0};
static C_char C_TLS li80[] C_aligned={C_lihdr(0,0,23),40,99,101,110,116,115,45,62,114,97,116,105,111,32,99,101,110,116,115,52,54,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li81[] C_aligned={C_lihdr(0,0,21),40,114,97,116,105,111,45,62,99,101,110,116,115,32,110,117,109,52,54,56,41,0,0,0,0,0};
static C_char C_TLS li82[] C_aligned={C_lihdr(0,0,15),40,100,111,52,55,55,32,116,97,105,108,52,55,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li83[] C_aligned={C_lihdr(0,0,32),40,105,110,116,101,114,112,49,32,120,52,54,57,32,99,111,111,114,100,115,52,55,48,32,98,97,115,101,52,55,49,41};
static C_char C_TLS li84[] C_aligned={C_lihdr(0,0,23),40,105,110,116,101,114,112,32,120,52,56,55,32,46,32,97,114,103,115,52,56,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li85[] C_aligned={C_lihdr(0,0,40),40,116,101,110,100,101,110,99,121,32,120,52,57,48,32,108,111,119,52,57,49,32,104,105,103,104,52,57,50,32,46,32,97,114,103,115,52,57,51,41};
static C_char C_TLS li86[] C_aligned={C_lihdr(0,0,33),40,102,105,116,49,32,110,117,109,53,48,54,32,108,98,53,48,55,32,117,98,53,48,56,32,109,111,100,101,53,48,57,41,0};
static C_char C_TLS li87[] C_aligned={C_lihdr(0,0,12),40,97,56,56,49,53,32,110,53,49,52,41,0,0,0,0};
static C_char C_TLS li88[] C_aligned={C_lihdr(0,0,34),40,102,105,116,32,110,117,109,52,57,57,32,108,98,53,48,48,32,117,98,53,48,49,32,46,32,109,111,100,101,53,48,50,41,0,0};
static C_char C_TLS li89[] C_aligned={C_lihdr(0,0,27),40,100,111,53,50,54,32,105,53,50,56,32,107,53,50,57,32,108,53,51,48,32,116,53,51,49,41,0,0,0};
static C_char C_TLS li90[] C_aligned={C_lihdr(0,0,34),40,115,99,97,108,101,32,108,101,110,53,49,56,32,107,101,121,110,117,109,53,49,57,32,46,32,97,114,103,115,53,50,48,41,0,0};
static C_char C_TLS li91[] C_aligned={C_lihdr(0,0,14),40,114,97,110,32,46,32,110,117,109,53,51,56,41,0,0,0,0,0,0};
static C_char C_TLS li92[] C_aligned={C_lihdr(0,0,19),40,98,101,116,119,101,101,110,32,97,53,52,48,32,98,53,52,49,41,0,0,0};
static C_char C_TLS li93[] C_aligned={C_lihdr(0,0,16),40,112,105,99,107,32,46,32,97,114,103,115,53,52,50,41};
static C_char C_TLS li94[] C_aligned={C_lihdr(0,0,21),40,111,100,100,115,32,110,53,52,51,32,46,32,97,114,103,115,53,52,52,41,0,0,0,0,0};
static C_char C_TLS li95[] C_aligned={C_lihdr(0,0,30),40,118,97,114,121,49,32,118,97,108,53,57,48,32,118,97,114,105,53,57,49,32,109,111,100,101,53,57,50,41,0,0,0,0,0,0};
static C_char C_TLS li96[] C_aligned={C_lihdr(0,0,12),40,97,57,51,52,52,32,118,53,57,55,41,0,0,0,0};
static C_char C_TLS li97[] C_aligned={C_lihdr(0,0,31),40,118,97,114,121,32,118,97,108,53,56,54,32,118,97,114,105,53,56,55,32,46,32,109,111,100,101,53,56,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li98[] C_aligned={C_lihdr(0,0,22),40,100,111,54,48,51,32,105,54,48,53,32,106,54,48,54,32,118,54,48,55,41,0,0,0,0,0,0};
static C_char C_TLS li99[] C_aligned={C_lihdr(0,0,15),40,115,104,117,102,102,108,101,33,32,108,54,48,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li100[] C_aligned={C_lihdr(0,0,19),40,115,104,117,102,102,108,101,32,46,32,97,114,103,115,54,49,50,41,0,0,0};
static C_char C_TLS li101[] C_aligned={C_lihdr(0,0,19),40,114,97,110,98,101,116,97,32,46,32,97,114,103,115,54,49,51,41,0,0,0};
static C_char C_TLS li102[] C_aligned={C_lihdr(0,0,18),40,114,97,110,101,120,112,32,46,32,97,114,103,115,54,53,54,41,0,0};
static C_char C_TLS li103[] C_aligned={C_lihdr(0,0,20),40,114,97,110,103,97,117,115,115,32,46,32,97,114,103,115,54,53,55,41,0,0,0,0};
static C_char C_TLS li104[] C_aligned={C_lihdr(0,0,22),40,114,97,110,112,111,105,115,115,111,110,32,46,32,97,114,103,115,54,53,56,41,0,0,0,0,0,0};
static C_char C_TLS li105[] C_aligned={C_lihdr(0,0,20),40,114,97,110,103,97,109,109,97,32,46,32,97,114,103,115,54,53,57,41,0,0,0,0};
static C_char C_TLS li106[] C_aligned={C_lihdr(0,0,12),40,100,111,54,55,49,32,105,54,55,51,41,0,0,0,0};
static C_char C_TLS li107[] C_aligned={C_lihdr(0,0,15),40,100,111,54,56,55,32,116,97,105,108,54,56,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li108[] C_aligned={C_lihdr(0,0,17),40,100,111,54,56,51,32,105,54,56,53,32,110,54,56,54,41,0};
static C_char C_TLS li109[] C_aligned={C_lihdr(0,0,30),40,115,101,103,115,32,110,117,109,54,54,48,32,115,117,109,54,54,49,32,46,32,97,114,103,115,54,54,50,41,0,0,0,0,0,0};
static C_char C_TLS li110[] C_aligned={C_lihdr(0,0,8),40,97,49,48,48,51,50,41};
static C_char C_TLS li111[] C_aligned={C_lihdr(0,0,8),40,97,49,48,48,52,55,41};
static C_char C_TLS li112[] C_aligned={C_lihdr(0,0,41),40,115,116,114,105,110,103,45,62,110,111,116,101,45,101,110,116,114,121,32,115,116,114,55,52,48,32,111,99,116,55,52,49,32,101,114,114,55,52,50,41,0};
static C_char C_TLS li113[] C_aligned={C_lihdr(0,0,8),40,97,49,48,48,54,50,41};
static C_char C_TLS li114[] C_aligned={C_lihdr(0,0,8),40,97,49,48,48,56,52,41};
static C_char C_TLS li115[] C_aligned={C_lihdr(0,0,34),40,110,111,116,101,45,97,117,120,32,102,114,101,113,55,52,56,32,100,111,99,116,55,52,57,32,101,114,114,63,55,53,48,41,0,0};
static C_char C_TLS li116[] C_aligned={C_lihdr(0,0,39),40,100,111,55,53,51,32,116,97,105,108,55,53,53,32,100,101,102,111,55,53,54,32,116,104,105,115,55,53,55,32,114,101,115,108,55,53,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li117[] C_aligned={C_lihdr(0,0,14),40,110,111,116,101,32,102,114,101,113,55,53,49,41,0,0,0,0,0,0};
static C_char C_TLS li118[] C_aligned={C_lihdr(0,0,39),40,100,111,55,54,55,32,116,97,105,108,55,54,57,32,100,101,102,111,55,55,48,32,116,104,105,115,55,55,49,32,114,101,115,108,55,55,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li119[] C_aligned={C_lihdr(0,0,13),40,107,101,121,32,102,114,101,113,55,54,53,41,0,0,0,0,0};
static C_char C_TLS li120[] C_aligned={C_lihdr(0,0,39),40,100,111,55,56,51,32,116,97,105,108,55,56,53,32,100,101,102,111,55,56,54,32,116,104,105,115,55,56,55,32,114,101,115,108,55,56,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li121[] C_aligned={C_lihdr(0,0,12),40,104,122,32,102,114,101,113,55,56,49,41,0,0,0,0};
static C_char C_TLS li122[] C_aligned={C_lihdr(0,0,9),40,112,99,32,120,55,57,55,41,0};
static C_char C_TLS li123[] C_aligned={C_lihdr(0,0,23),40,100,111,56,48,51,32,116,97,105,108,56,48,53,32,108,97,115,116,56,48,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li124[] C_aligned={C_lihdr(0,0,17),40,105,110,118,107,101,121,115,32,107,101,121,115,56,48,48,41,0};
static C_char C_TLS li125[] C_aligned={C_lihdr(0,0,13),40,97,49,48,54,52,53,32,122,56,49,48,41,0,0,0,0,0};
static C_char C_TLS li126[] C_aligned={C_lihdr(0,0,13),40,105,110,118,101,114,116,32,120,55,57,56,41,0,0,0,0,0};
static C_char C_TLS li127[] C_aligned={C_lihdr(0,0,23),40,100,111,56,49,56,32,116,97,105,108,56,50,48,32,108,97,115,116,56,50,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li128[] C_aligned={C_lihdr(0,0,28),40,116,114,97,110,115,112,107,101,121,115,32,107,101,121,115,56,49,53,32,111,114,105,103,56,49,54,41,0,0,0,0};
static C_char C_TLS li129[] C_aligned={C_lihdr(0,0,13),40,97,49,48,55,57,56,32,122,56,50,53,41,0,0,0,0,0};
static C_char C_TLS li130[] C_aligned={C_lihdr(0,0,21),40,116,114,97,110,115,112,111,115,101,32,120,56,49,49,32,121,56,49,50,41,0,0,0,0,0};
static C_char C_TLS li131[] C_aligned={C_lihdr(0,0,18),40,97,49,48,56,54,49,32,97,56,50,56,32,98,56,50,57,41,0,0};
static C_char C_TLS li132[] C_aligned={C_lihdr(0,0,18),40,97,49,48,57,49,57,32,97,56,51,48,32,98,56,51,49,41,0,0};
static C_char C_TLS li133[] C_aligned={C_lihdr(0,0,32),40,115,99,97,108,101,45,111,114,100,101,114,32,115,99,97,108,101,56,50,54,32,46,32,109,111,100,101,56,50,55,41};
static C_char C_TLS li134[] C_aligned={C_lihdr(0,0,48),40,109,97,107,101,45,115,112,101,99,116,114,117,109,32,116,105,109,101,57,49,49,32,115,105,122,101,57,49,50,32,102,114,101,113,115,57,49,51,32,97,109,112,115,57,49,52,41};
static C_char C_TLS li135[] C_aligned={C_lihdr(0,0,16),40,115,112,101,99,116,114,117,109,63,32,120,57,49,53,41};
static C_char C_TLS li136[] C_aligned={C_lihdr(0,0,20),40,115,112,101,99,116,114,117,109,45,116,105,109,101,32,120,57,49,57,41,0,0,0,0};
static C_char C_TLS li137[] C_aligned={C_lihdr(0,0,32),40,115,112,101,99,116,114,117,109,45,115,105,122,101,45,115,101,116,33,32,120,57,50,50,32,118,97,108,57,50,51,41};
static C_char C_TLS li138[] C_aligned={C_lihdr(0,0,20),40,115,112,101,99,116,114,117,109,45,115,105,122,101,32,120,57,50,53,41,0,0,0,0};
static C_char C_TLS li139[] C_aligned={C_lihdr(0,0,33),40,115,112,101,99,116,114,117,109,45,102,114,101,113,115,45,115,101,116,33,32,120,57,50,56,32,118,97,108,57,50,57,41,0};
static C_char C_TLS li140[] C_aligned={C_lihdr(0,0,21),40,115,112,101,99,116,114,117,109,45,102,114,101,113,115,32,120,57,51,49,41,0,0,0,0,0};
static C_char C_TLS li141[] C_aligned={C_lihdr(0,0,32),40,115,112,101,99,116,114,117,109,45,97,109,112,115,45,115,101,116,33,32,120,57,51,52,32,118,97,108,57,51,53,41};
static C_char C_TLS li142[] C_aligned={C_lihdr(0,0,20),40,115,112,101,99,116,114,117,109,45,97,109,112,115,32,120,57,51,55,41,0,0,0,0};
static C_char C_TLS li143[] C_aligned={C_lihdr(0,0,27),40,115,112,101,99,116,114,117,109,45,99,111,112,121,32,115,112,101,99,116,114,117,109,57,52,55,41,0,0,0};
static C_char C_TLS li144[] C_aligned={C_lihdr(0,0,12),40,100,111,57,53,52,32,105,57,53,54,41,0,0,0,0};
static C_char C_TLS li145[] C_aligned={C_lihdr(0,0,28),40,115,112,101,99,116,114,117,109,45,112,97,105,114,115,32,115,112,101,99,116,114,117,109,57,52,56,41,0,0,0,0};
static C_char C_TLS li146[] C_aligned={C_lihdr(0,0,30),40,115,112,101,99,116,114,117,109,45,109,105,110,102,114,101,113,32,115,112,101,99,116,114,117,109,57,54,48,41,0,0,0,0,0,0};
static C_char C_TLS li147[] C_aligned={C_lihdr(0,0,30),40,115,112,101,99,116,114,117,109,45,109,97,120,102,114,101,113,32,115,112,101,99,116,114,117,109,57,54,49,41,0,0,0,0,0,0};
static C_char C_TLS li148[] C_aligned={C_lihdr(0,0,13),40,97,49,49,50,49,53,32,97,57,54,53,41,0,0,0,0,0};
static C_char C_TLS li149[] C_aligned={C_lihdr(0,0,29),40,115,112,101,99,116,114,117,109,45,109,105,110,97,109,112,32,115,112,101,99,116,114,117,109,57,54,50,41,0,0,0,0,0};
static C_char C_TLS li150[] C_aligned={C_lihdr(0,0,13),40,97,49,49,50,52,54,32,97,57,55,50,41,0,0,0,0,0};
static C_char C_TLS li151[] C_aligned={C_lihdr(0,0,29),40,115,112,101,99,116,114,117,109,45,109,97,120,97,109,112,32,115,112,101,99,116,114,117,109,57,54,57,41,0,0,0,0,0};
static C_char C_TLS li152[] C_aligned={C_lihdr(0,0,7),40,100,111,57,57,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li153[] C_aligned={C_lihdr(0,0,7),40,100,111,57,57,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li154[] C_aligned={C_lihdr(0,0,14),40,102,95,49,49,50,55,54,32,104,57,56,57,41,0,0,0,0,0,0};
static C_char C_TLS li155[] C_aligned={C_lihdr(0,0,14),40,102,95,49,49,51,52,56,32,107,57,57,57,41,0,0,0,0,0,0};
static C_char C_TLS li156[] C_aligned={C_lihdr(0,0,15),40,102,95,49,49,51,56,49,32,104,49,48,48,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li157[] C_aligned={C_lihdr(0,0,15),40,102,95,49,49,51,57,49,32,104,49,48,48,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li158[] C_aligned={C_lihdr(0,0,20),40,97,49,49,52,52,53,32,97,49,48,48,56,32,98,49,48,48,57,41,0,0,0,0};
static C_char C_TLS li159[] C_aligned={C_lihdr(0,0,20),40,97,49,49,52,54,48,32,97,49,48,49,48,32,98,49,48,49,49,41,0,0,0,0};
static C_char C_TLS li160[] C_aligned={C_lihdr(0,0,39),40,115,112,101,99,116,114,117,109,45,107,101,121,115,32,115,112,101,99,116,114,117,109,49,48,50,51,32,46,32,97,114,103,115,49,48,50,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li161[] C_aligned={C_lihdr(0,0,35),40,100,111,49,50,56,50,32,116,97,105,108,49,50,56,52,32,115,105,122,101,49,50,56,53,32,97,109,112,108,49,50,56,54,41,0,0,0};
static C_char C_TLS li162[] C_aligned={C_lihdr(0,0,26),40,100,111,49,50,54,48,32,105,49,50,54,50,32,102,49,50,54,51,32,120,49,50,54,52,41,0,0};
static C_char C_TLS li163[] C_aligned={C_lihdr(0,0,24),40,100,111,49,50,53,52,32,110,101,103,49,50,53,54,32,112,111,115,49,50,53,55,41};
static C_char C_TLS li164[] C_aligned={C_lihdr(0,0,24),40,102,95,55,57,52,48,32,97,51,56,53,51,56,56,32,97,51,56,52,51,56,57,41};
static C_char C_TLS li165[] C_aligned={C_lihdr(0,0,26),40,100,111,49,50,52,50,32,107,49,50,52,52,32,102,49,50,52,53,32,97,49,50,52,54,41,0,0};
static C_char C_TLS li166[] C_aligned={C_lihdr(0,0,46),40,102,109,45,115,112,101,99,116,114,117,109,32,99,97,114,114,105,101,114,49,50,51,52,32,109,114,97,116,105,111,49,50,51,53,32,105,110,100,101,120,49,50,51,54,41,0,0,0,0,0,0};
static C_char C_TLS li167[] C_aligned={C_lihdr(0,0,47),40,100,111,49,51,50,48,32,102,114,101,113,115,49,51,50,50,32,97,109,112,115,49,51,50,51,32,108,97,115,116,102,49,51,50,52,32,108,97,115,116,97,49,51,50,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li168[] C_aligned={C_lihdr(0,0,41),40,115,112,101,99,116,114,117,109,45,97,100,100,33,32,115,112,101,99,49,51,49,55,32,102,114,101,113,49,51,49,56,32,97,109,112,49,51,49,57,41,0};
static C_char C_TLS li169[] C_aligned={C_lihdr(0,0,16),40,103,101,116,102,114,101,113,115,32,115,49,51,52,55,41};
static C_char C_TLS li170[] C_aligned={C_lihdr(0,0,15),40,103,101,116,97,109,112,115,32,115,49,51,52,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li171[] C_aligned={C_lihdr(0,0,36),40,115,117,109,115,45,97,110,100,45,100,105,102,102,115,32,115,49,51,52,57,32,102,49,49,51,53,48,32,102,50,49,51,53,50,41,0,0,0,0};
static C_char C_TLS li172[] C_aligned={C_lihdr(0,0,15),40,100,111,49,51,54,51,32,108,49,49,51,54,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li173[] C_aligned={C_lihdr(0,0,15),40,100,111,49,51,54,48,32,108,50,49,51,54,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li174[] C_aligned={C_lihdr(0,0,15),40,100,111,49,51,55,48,32,108,49,49,51,55,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li175[] C_aligned={C_lihdr(0,0,15),40,100,111,49,51,55,53,32,115,50,49,51,55,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li176[] C_aligned={C_lihdr(0,0,33),40,114,109,45,115,112,101,99,116,114,117,109,32,115,112,101,99,49,49,51,52,50,32,115,112,101,99,50,49,51,52,51,41,0};
static C_char C_TLS li177[] C_aligned={C_lihdr(0,0,44),40,100,111,49,51,56,50,32,109,97,120,102,49,51,56,52,32,109,105,110,102,49,51,56,53,32,116,97,105,108,49,51,56,54,32,102,108,105,112,49,51,56,55,41,0,0,0,0};
static C_char C_TLS li178[] C_aligned={C_lihdr(0,0,25),40,115,112,101,99,116,114,117,109,45,102,108,105,112,33,32,115,112,101,99,49,51,56,49,41,0};
static C_char C_TLS li179[] C_aligned={C_lihdr(0,0,17),40,100,111,49,52,48,49,32,116,97,105,108,49,52,48,51,41,0};
static C_char C_TLS li180[] C_aligned={C_lihdr(0,0,17),40,100,111,49,52,48,54,32,116,97,105,108,49,52,48,56,41,0};
static C_char C_TLS li181[] C_aligned={C_lihdr(0,0,26),40,100,111,49,51,48,52,32,116,97,105,108,49,51,48,54,32,97,109,112,108,49,51,48,55,41,0,0};
static C_char C_TLS li182[] C_aligned={C_lihdr(0,0,20),40,97,49,51,51,51,54,32,97,49,51,48,48,32,98,49,51,48,49,41,0,0,0,0};
static C_char C_TLS li183[] C_aligned={C_lihdr(0,0,20),40,97,49,51,51,53,48,32,97,49,50,57,56,32,98,49,50,57,57,41,0,0,0,0};
static C_char C_TLS li184[] C_aligned={C_lihdr(0,0,17),40,100,111,49,52,50,56,32,116,97,105,108,49,52,51,48,41,0};
static C_char C_TLS li185[] C_aligned={C_lihdr(0,0,17),40,100,111,49,52,51,51,32,116,97,105,108,49,52,51,53,41,0};
static C_char C_TLS li186[] C_aligned={C_lihdr(0,0,17),40,100,111,49,52,49,57,32,116,97,105,108,49,52,50,49,41,0};
static C_char C_TLS li187[] C_aligned={C_lihdr(0,0,48),40,115,112,101,99,116,114,117,109,45,114,101,115,99,97,108,101,33,32,115,112,101,99,49,51,57,49,32,109,111,100,101,49,51,57,50,32,46,32,97,114,103,115,49,51,57,51,41};
static C_char C_TLS li188[] C_aligned={C_lihdr(0,0,12),40,114,104,100,114,32,112,49,52,55,52,41,0,0,0,0};
static C_char C_TLS li189[] C_aligned={C_lihdr(0,0,12),40,114,100,97,116,32,112,49,52,53,51,41,0,0,0,0};
static C_char C_TLS li190[] C_aligned={C_lihdr(0,0,26),40,100,111,49,52,53,54,32,105,49,52,53,56,32,97,49,52,53,57,32,102,49,52,54,48,41,0,0};
static C_char C_TLS li191[] C_aligned={C_lihdr(0,0,26),40,100,111,49,52,56,55,32,108,105,110,101,49,52,56,57,32,115,112,101,99,49,52,57,48,41,0,0};
static C_char C_TLS li192[] C_aligned={C_lihdr(0,0,8),40,100,111,49,52,55,55,41};
static C_char C_TLS li193[] C_aligned={C_lihdr(0,0,8),40,97,49,52,51,51,49,41};
static C_char C_TLS li194[] C_aligned={C_lihdr(0,0,30),40,105,109,112,111,114,116,45,115,112,101,97,114,45,102,114,97,109,101,115,32,102,105,108,101,49,52,55,48,41,0,0,0,0,0,0};
static C_char C_TLS li195[] C_aligned={C_lihdr(0,0,75),40,109,97,107,101,45,112,101,114,105,111,100,32,99,111,117,110,116,49,53,49,51,32,108,101,110,103,116,104,49,53,49,52,32,115,116,114,101,97,109,49,53,49,53,32,100,101,102,97,117,108,116,49,53,49,54,32,111,109,105,116,49,53,49,55,32,114,101,112,115,49,53,49,56,41,0,0,0};
static C_char C_TLS li196[] C_aligned={C_lihdr(0,0,33),40,112,101,114,105,111,100,45,99,111,117,110,116,45,115,101,116,33,32,120,49,53,50,48,32,118,97,108,49,53,50,49,41,0};
static C_char C_TLS li197[] C_aligned={C_lihdr(0,0,20),40,112,101,114,105,111,100,45,99,111,117,110,116,32,120,49,53,50,51,41,0,0,0,0};
static C_char C_TLS li198[] C_aligned={C_lihdr(0,0,21),40,112,101,114,105,111,100,45,108,101,110,103,116,104,32,120,49,53,50,57,41,0,0,0,0,0};
static C_char C_TLS li199[] C_aligned={C_lihdr(0,0,21),40,112,101,114,105,111,100,45,115,116,114,101,97,109,32,120,49,53,51,53,41,0,0,0,0,0};
static C_char C_TLS li200[] C_aligned={C_lihdr(0,0,32),40,112,101,114,105,111,100,45,111,109,105,116,45,115,101,116,33,32,120,49,53,52,52,32,118,97,108,49,53,52,53,41};
static C_char C_TLS li201[] C_aligned={C_lihdr(0,0,19),40,112,101,114,105,111,100,45,111,109,105,116,32,120,49,53,52,55,41,0,0,0};
static C_char C_TLS li202[] C_aligned={C_lihdr(0,0,19),40,112,101,114,105,111,100,45,114,101,112,115,32,120,49,53,53,51,41,0,0,0};
static C_char C_TLS li203[] C_aligned={C_lihdr(0,0,16),40,112,97,116,116,101,114,110,63,32,120,49,53,55,57,41};
static C_char C_TLS li204[] C_aligned={C_lihdr(0,0,21),40,112,97,116,116,101,114,110,45,102,108,97,103,115,32,120,49,53,56,51,41,0,0,0,0,0};
static C_char C_TLS li205[] C_aligned={C_lihdr(0,0,33),40,112,97,116,116,101,114,110,45,100,97,116,97,45,115,101,116,33,32,120,49,53,56,54,32,118,97,108,49,53,56,55,41,0};
static C_char C_TLS li206[] C_aligned={C_lihdr(0,0,20),40,112,97,116,116,101,114,110,45,100,97,116,97,32,120,49,53,56,57,41,0,0,0,0};
static C_char C_TLS li207[] C_aligned={C_lihdr(0,0,22),40,112,97,116,116,101,114,110,45,108,101,110,103,116,104,32,120,49,53,57,53,41,0,0,0,0,0,0};
static C_char C_TLS li208[] C_aligned={C_lihdr(0,0,34),40,112,97,116,116,101,114,110,45,100,97,116,117,109,45,115,101,116,33,32,120,49,53,57,56,32,118,97,108,49,53,57,57,41,0,0};
static C_char C_TLS li209[] C_aligned={C_lihdr(0,0,21),40,112,97,116,116,101,114,110,45,100,97,116,117,109,32,120,49,54,48,49,41,0,0,0,0,0};
static C_char C_TLS li210[] C_aligned={C_lihdr(0,0,22),40,112,97,116,116,101,114,110,45,112,101,114,105,111,100,32,120,49,54,48,55,41,0,0,0,0,0,0};
static C_char C_TLS li211[] C_aligned={C_lihdr(0,0,34),40,112,97,116,116,101,114,110,45,118,97,108,117,101,45,115,101,116,33,32,120,49,54,49,48,32,118,97,108,49,54,49,49,41,0,0};
static C_char C_TLS li212[] C_aligned={C_lihdr(0,0,15),40,102,95,49,52,55,49,51,32,120,49,54,49,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li213[] C_aligned={C_lihdr(0,0,34),40,112,97,116,116,101,114,110,45,115,116,97,116,101,45,115,101,116,33,32,120,49,54,49,54,32,118,97,108,49,54,49,55,41,0,0};
static C_char C_TLS li214[] C_aligned={C_lihdr(0,0,21),40,112,97,116,116,101,114,110,45,115,116,97,116,101,32,120,49,54,49,57,41,0,0,0,0,0};
static C_char C_TLS li215[] C_aligned={C_lihdr(0,0,34),40,112,97,116,116,101,114,110,45,99,97,99,104,101,45,115,101,116,33,32,120,49,54,53,56,32,118,97,108,49,54,53,57,41,0,0};
static C_char C_TLS li216[] C_aligned={C_lihdr(0,0,21),40,112,97,116,116,101,114,110,45,99,97,99,104,101,32,120,49,54,54,49,41,0,0,0,0,0};
static C_char C_TLS li217[] C_aligned={C_lihdr(0,0,16),40,37,97,108,108,111,99,45,112,97,116,116,101,114,110,41};
static C_char C_TLS li218[] C_aligned={C_lihdr(0,0,14),40,97,49,53,48,57,49,32,120,49,54,57,49,41,0,0,0,0,0,0};
static C_char C_TLS li219[] C_aligned={C_lihdr(0,0,98),40,105,110,105,116,105,97,108,105,122,101,45,112,97,116,116,101,114,110,32,111,98,106,49,54,56,49,32,100,97,116,97,49,54,56,50,32,102,111,114,49,54,56,51,32,114,101,112,49,54,56,52,32,102,108,97,103,115,49,54,56,53,32,108,101,110,49,54,56,54,32,100,112,101,114,49,54,56,55,32,103,101,116,114,49,54,56,56,32,109,97,112,114,49,54,56,57,41,0,0};
static C_char C_TLS li220[] C_aligned={C_lihdr(0,0,12),40,101,111,112,63,32,120,49,55,49,54,41,0,0,0,0};
static C_char C_TLS li221[] C_aligned={C_lihdr(0,0,12),40,101,111,100,63,32,120,49,55,49,55,41,0,0,0,0};
static C_char C_TLS li222[] C_aligned={C_lihdr(0,0,20),40,100,111,49,55,50,50,32,105,49,55,50,52,32,101,49,55,50,53,41,0,0,0,0};
static C_char C_TLS li223[] C_aligned={C_lihdr(0,0,26),40,100,111,49,55,50,57,32,110,49,55,51,49,32,101,49,55,51,50,32,102,49,55,51,51,41,0,0};
static C_char C_TLS li224[] C_aligned={C_lihdr(0,0,25),40,110,101,120,116,32,111,98,106,49,55,49,56,32,46,32,97,114,103,115,49,55,49,57,41,0};
static C_char C_TLS li225[] C_aligned={C_lihdr(0,0,8),40,100,111,49,55,53,55,41};
static C_char C_TLS li226[] C_aligned={C_lihdr(0,0,26),40,100,111,49,55,53,51,32,100,121,110,63,49,55,53,53,32,115,116,111,112,49,55,53,54,41,0,0};
static C_char C_TLS li227[] C_aligned={C_lihdr(0,0,16),40,110,101,120,116,45,49,32,111,98,106,49,55,51,57,41};
static C_char C_TLS li228[] C_aligned={C_lihdr(0,0,25),40,110,101,120,116,45,105,110,45,112,97,116,116,101,114,110,32,111,98,106,49,55,55,55,41,0};
static C_char C_TLS li229[] C_aligned={C_lihdr(0,0,33),40,109,97,112,45,112,97,116,116,101,114,110,45,100,97,116,97,32,102,110,49,55,55,56,32,111,98,106,49,55,55,57,41,0};
static C_char C_TLS li230[] C_aligned={C_lihdr(0,0,14),40,97,49,53,54,54,55,32,120,49,55,56,56,41,0,0,0,0,0,0};
static C_char C_TLS li231[] C_aligned={C_lihdr(0,0,22),40,114,101,115,101,116,45,112,101,114,105,111,100,32,111,98,106,49,55,56,51,41,0,0,0,0,0,0};
static C_char C_TLS li232[] C_aligned={C_lihdr(0,0,23),40,97,49,53,55,54,49,32,102,110,49,56,52,48,32,111,98,106,49,56,52,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li233[] C_aligned={C_lihdr(0,0,32),40,109,97,107,101,45,99,121,99,108,101,32,100,97,116,97,49,55,57,55,32,46,32,97,114,103,115,49,55,57,56,41};
static C_char C_TLS li234[] C_aligned={C_lihdr(0,0,23),40,110,101,120,116,45,105,110,45,99,121,99,108,101,32,111,98,106,49,56,52,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li235[] C_aligned={C_lihdr(0,0,17),40,112,97,108,105,110,45,108,101,110,32,120,49,56,54,55,41,0};
static C_char C_TLS li236[] C_aligned={C_lihdr(0,0,30),40,112,97,108,105,110,45,105,110,99,45,115,101,116,33,32,120,49,56,55,48,32,118,97,108,49,56,55,49,41,0,0,0,0,0,0};
static C_char C_TLS li237[] C_aligned={C_lihdr(0,0,23),40,97,49,54,49,57,49,32,102,110,49,57,54,56,32,111,98,106,49,57,54,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li238[] C_aligned={C_lihdr(0,0,37),40,109,97,107,101,45,112,97,108,105,110,100,114,111,109,101,32,100,97,116,97,49,56,57,54,32,46,32,97,114,103,115,49,56,57,55,41,0,0,0,0,0};
static C_char C_TLS li239[] C_aligned={C_lihdr(0,0,28),40,110,101,120,116,45,105,110,45,112,97,108,105,110,100,114,111,109,101,32,111,98,106,49,57,55,55,41,0,0,0,0};
static C_char C_TLS li240[] C_aligned={C_lihdr(0,0,23),40,97,49,54,56,53,56,32,102,110,50,48,51,57,32,111,98,106,50,48,52,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li241[] C_aligned={C_lihdr(0,0,31),40,109,97,107,101,45,108,105,110,101,32,100,97,116,97,49,57,57,54,32,46,32,97,114,103,115,49,57,57,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li242[] C_aligned={C_lihdr(0,0,22),40,110,101,120,116,45,105,110,45,108,105,110,101,32,111,98,106,50,48,52,54,41,0,0,0,0,0,0};
static C_char C_TLS li243[] C_aligned={C_lihdr(0,0,23),40,97,49,55,49,52,53,32,102,110,50,48,57,52,32,111,98,106,50,48,57,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li244[] C_aligned={C_lihdr(0,0,31),40,109,97,107,101,45,104,101,97,112,32,100,97,116,97,50,48,53,49,32,46,32,97,114,103,115,50,48,53,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li245[] C_aligned={C_lihdr(0,0,26),40,100,111,50,49,48,53,32,105,50,49,48,55,32,106,50,49,48,56,32,118,50,49,48,57,41,0,0};
static C_char C_TLS li246[] C_aligned={C_lihdr(0,0,22),40,110,101,120,116,45,105,110,45,104,101,97,112,32,111,98,106,50,49,48,49,41,0,0,0,0,0,0};
static C_char C_TLS li247[] C_aligned={C_lihdr(0,0,23),40,97,49,55,52,57,48,32,102,110,50,49,56,57,32,111,98,106,50,49,57,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li248[] C_aligned={C_lihdr(0,0,35),40,109,97,107,101,45,114,111,116,97,116,105,111,110,32,100,97,116,97,50,49,49,55,32,46,32,97,114,103,115,50,49,49,56,41,0,0,0};
static C_char C_TLS li249[] C_aligned={C_lihdr(0,0,14),40,100,111,50,50,48,53,32,105,50,50,48,55,41,0,0,0,0,0,0};
static C_char C_TLS li250[] C_aligned={C_lihdr(0,0,61),40,114,111,116,97,116,101,45,105,116,101,109,115,32,105,116,101,109,115,50,50,48,48,32,115,116,97,114,116,50,50,48,49,32,115,116,101,112,50,50,48,50,32,119,105,100,116,104,50,50,48,51,32,101,110,100,50,50,48,52,41,0,0,0,0,0};
static C_char C_TLS li251[] C_aligned={C_lihdr(0,0,26),40,110,101,120,116,45,105,110,45,114,111,116,97,116,105,111,110,32,111,98,106,50,49,57,56,41,0,0};
static C_char C_TLS li252[] C_aligned={C_lihdr(0,0,25),40,114,97,110,100,111,109,45,105,116,101,109,45,100,97,116,117,109,32,120,50,50,51,50,41,0};
static C_char C_TLS li253[] C_aligned={C_lihdr(0,0,38),40,114,97,110,100,111,109,45,105,116,101,109,45,105,110,100,101,120,45,115,101,116,33,32,120,50,50,51,53,32,118,97,108,50,50,51,54,41,0,0,0,0,0,0};
static C_char C_TLS li254[] C_aligned={C_lihdr(0,0,25),40,114,97,110,100,111,109,45,105,116,101,109,45,105,110,100,101,120,32,120,50,50,51,56,41,0};
static C_char C_TLS li255[] C_aligned={C_lihdr(0,0,26),40,114,97,110,100,111,109,45,105,116,101,109,45,119,101,105,103,104,116,32,120,50,50,52,52,41,0,0};
static C_char C_TLS li256[] C_aligned={C_lihdr(0,0,23),40,114,97,110,100,111,109,45,105,116,101,109,45,109,105,110,32,120,50,50,53,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li257[] C_aligned={C_lihdr(0,0,23),40,114,97,110,100,111,109,45,105,116,101,109,45,109,97,120,32,120,50,50,53,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li258[] C_aligned={C_lihdr(0,0,38),40,114,97,110,100,111,109,45,105,116,101,109,45,99,111,117,110,116,45,115,101,116,33,32,120,50,50,53,57,32,118,97,108,50,50,54,48,41,0,0,0,0,0,0};
static C_char C_TLS li259[] C_aligned={C_lihdr(0,0,25),40,114,97,110,100,111,109,45,105,116,101,109,45,99,111,117,110,116,32,120,50,50,54,50,41,0};
static C_char C_TLS li260[] C_aligned={C_lihdr(0,0,14),40,97,49,56,51,55,53,32,105,50,51,52,53,41,0,0,0,0,0,0};
static C_char C_TLS li261[] C_aligned={C_lihdr(0,0,23),40,97,49,56,51,54,57,32,102,110,50,51,52,51,32,111,98,106,50,51,52,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li262[] C_aligned={C_lihdr(0,0,17),40,97,49,56,54,48,54,32,105,116,101,109,50,50,57,56,41,0};
static C_char C_TLS li263[] C_aligned={C_lihdr(0,0,25),40,37,109,97,107,101,45,114,97,110,100,111,109,45,105,116,101,109,32,119,50,51,53,54,41,0};
static C_char C_TLS li264[] C_aligned={C_lihdr(0,0,36),40,109,97,107,101,45,119,101,105,103,104,116,105,110,103,32,100,97,116,97,50,50,56,56,32,46,32,97,114,103,115,50,50,56,57,41,0,0,0,0};
static C_char C_TLS li265[] C_aligned={C_lihdr(0,0,37),40,100,111,50,52,52,51,32,116,97,105,108,50,52,52,53,32,105,110,100,101,120,50,52,52,54,32,116,111,116,97,108,50,52,52,55,41,0,0,0,0,0};
static C_char C_TLS li266[] C_aligned={C_lihdr(0,0,17),40,100,111,50,52,51,55,32,116,97,105,108,50,52,51,57,41,0};
static C_char C_TLS li267[] C_aligned={C_lihdr(0,0,36),40,114,101,99,97,108,99,45,119,101,105,103,104,116,105,110,103,115,32,111,98,106,50,52,51,51,32,102,105,120,63,50,52,51,52,41,0,0,0,0};
static C_char C_TLS li268[] C_aligned={C_lihdr(0,0,27),40,100,111,50,52,54,53,32,116,97,105,108,50,52,54,55,32,105,110,100,101,120,50,52,54,56,41,0,0,0};
static C_char C_TLS li269[] C_aligned={C_lihdr(0,0,18),40,112,105,99,107,32,99,50,52,54,51,32,114,50,52,54,52,41,0,0};
static C_char C_TLS li270[] C_aligned={C_lihdr(0,0,17),40,100,111,50,52,55,52,32,116,97,105,108,50,52,55,54,41,0};
static C_char C_TLS li271[] C_aligned={C_lihdr(0,0,17),40,100,111,50,52,55,48,32,105,116,101,109,50,52,55,50,41,0};
static C_char C_TLS li272[] C_aligned={C_lihdr(0,0,27),40,110,101,120,116,45,105,110,45,119,101,105,103,104,116,105,110,103,32,111,98,106,50,52,53,51,41,0,0,0};
static C_char C_TLS li273[] C_aligned={C_lihdr(0,0,23),40,97,49,57,54,56,57,32,102,110,50,54,48,50,32,111,98,106,50,54,48,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li274[] C_aligned={C_lihdr(0,0,14),40,97,49,57,52,52,51,32,115,50,53,48,51,41,0,0,0,0,0,0};
static C_char C_TLS li275[] C_aligned={C_lihdr(0,0,8),40,100,111,50,52,57,54,41};
static C_char C_TLS li276[] C_aligned={C_lihdr(0,0,41),40,100,111,50,53,49,56,32,116,97,105,108,50,53,50,48,32,111,114,100,101,114,50,53,50,49,32,108,105,115,50,53,50,50,32,112,50,53,50,51,41,0};
static C_char C_TLS li277[] C_aligned={C_lihdr(0,0,33),40,109,97,107,101,45,109,97,114,107,111,118,32,100,97,116,97,50,53,51,48,32,46,32,97,114,103,115,50,53,51,49,41,0};
static C_char C_TLS li278[] C_aligned={C_lihdr(0,0,17),40,100,111,50,54,50,55,32,116,97,105,108,50,54,50,57,41,0};
static C_char C_TLS li279[] C_aligned={C_lihdr(0,0,33),40,100,111,50,54,49,55,32,116,97,105,108,50,54,49,57,32,111,117,116,50,54,50,48,32,115,117,109,50,54,50,49,41,0};
static C_char C_TLS li280[] C_aligned={C_lihdr(0,0,37),40,115,101,108,101,99,116,45,111,117,116,112,117,116,32,114,97,110,103,101,50,54,49,53,32,111,117,116,112,117,116,115,50,54,49,54,41,0,0,0,0,0};
static C_char C_TLS li281[] C_aligned={C_lihdr(0,0,17),40,100,111,50,54,53,55,32,108,97,115,116,50,54,53,57,41,0};
static C_char C_TLS li282[] C_aligned={C_lihdr(0,0,26),40,100,111,50,54,51,51,32,105,50,54,51,53,32,106,50,54,51,54,32,102,50,54,51,55,41,0,0};
static C_char C_TLS li283[] C_aligned={C_lihdr(0,0,35),40,100,111,50,54,52,56,32,116,97,105,108,50,54,53,48,32,112,97,115,116,50,54,53,49,32,105,116,101,109,50,54,53,50,41,0,0,0};
static C_char C_TLS li284[] C_aligned={C_lihdr(0,0,24),40,110,101,120,116,45,105,110,45,109,97,114,107,111,118,32,111,98,106,50,54,49,50,41};
static C_char C_TLS li285[] C_aligned={C_lihdr(0,0,24),40,103,114,97,112,104,45,110,111,100,101,45,100,97,116,117,109,32,120,50,54,55,55,41};
static C_char C_TLS li286[] C_aligned={C_lihdr(0,0,14),40,97,50,48,53,54,49,32,110,50,55,52,51,41,0,0,0,0,0,0};
static C_char C_TLS li287[] C_aligned={C_lihdr(0,0,23),40,97,50,48,53,53,53,32,102,110,50,55,52,49,32,111,98,106,50,55,52,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li288[] C_aligned={C_lihdr(0,0,28),40,97,50,48,56,48,55,32,105,116,101,109,50,55,53,51,32,46,32,97,114,103,115,50,55,53,52,41,0,0,0,0};
static C_char C_TLS li289[] C_aligned={C_lihdr(0,0,29),40,112,97,114,115,101,45,103,114,97,112,104,45,105,116,101,109,32,101,120,116,101,114,110,50,55,53,50,41,0,0,0,0,0};
static C_char C_TLS li290[] C_aligned={C_lihdr(0,0,32),40,109,97,107,101,45,103,114,97,112,104,32,100,97,116,97,50,54,57,56,32,46,32,97,114,103,115,50,54,57,57,41};
static C_char C_TLS li291[] C_aligned={C_lihdr(0,0,17),40,100,111,50,56,48,55,32,116,97,105,108,50,56,48,57,41,0};
static C_char C_TLS li292[] C_aligned={C_lihdr(0,0,23),40,110,101,120,116,45,105,110,45,103,114,97,112,104,32,111,98,106,50,56,48,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li293[] C_aligned={C_lihdr(0,0,14),40,97,50,49,50,51,52,32,120,50,56,55,51,41,0,0,0,0,0,0};
static C_char C_TLS li294[] C_aligned={C_lihdr(0,0,31),40,97,100,100,45,111,117,116,99,111,109,101,32,112,114,101,118,50,56,55,48,32,110,101,120,116,50,56,55,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li295[] C_aligned={C_lihdr(0,0,14),40,97,50,49,50,56,50,32,122,50,56,56,49,41,0,0,0,0,0,0};
static C_char C_TLS li296[] C_aligned={C_lihdr(0,0,14),40,97,50,49,50,57,50,32,122,50,56,56,48,41,0,0,0,0,0,0};
static C_char C_TLS li297[] C_aligned={C_lihdr(0,0,27),40,98,101,102,111,114,101,63,32,120,50,56,55,53,32,121,50,56,55,54,32,108,50,56,55,55,41,0,0,0};
static C_char C_TLS li298[] C_aligned={C_lihdr(0,0,16),40,97,50,49,51,57,48,32,114,111,119,51,48,48,52,41};
static C_char C_TLS li299[] C_aligned={C_lihdr(0,0,20),40,100,111,50,57,55,56,32,105,50,57,56,48,32,109,50,57,56,49,41,0,0,0,0};
static C_char C_TLS li300[] C_aligned={C_lihdr(0,0,14),40,100,111,50,57,55,49,32,108,50,57,55,51,41,0,0,0,0,0,0};
static C_char C_TLS li301[] C_aligned={C_lihdr(0,0,20),40,100,111,50,57,54,52,32,105,50,57,54,54,32,109,50,57,54,55,41,0,0,0,0};
static C_char C_TLS li302[] C_aligned={C_lihdr(0,0,20),40,100,111,50,57,53,56,32,105,50,57,54,48,32,109,50,57,54,49,41,0,0,0,0};
static C_char C_TLS li303[] C_aligned={C_lihdr(0,0,14),40,100,111,50,56,56,52,32,120,50,56,56,54,41,0,0,0,0,0,0};
static C_char C_TLS li304[] C_aligned={C_lihdr(0,0,17),40,100,111,50,57,53,50,32,116,97,105,108,50,57,53,52,41,0};
static C_char C_TLS li305[] C_aligned={C_lihdr(0,0,20),40,100,111,50,57,52,50,32,105,50,57,52,52,32,109,50,57,52,53,41,0,0,0,0};
static C_char C_TLS li306[] C_aligned={C_lihdr(0,0,14),40,100,111,50,57,51,55,32,108,50,57,51,57,41,0,0,0,0,0,0};
static C_char C_TLS li307[] C_aligned={C_lihdr(0,0,14),40,100,111,50,57,51,50,32,105,50,57,51,52,41,0,0,0,0,0,0};
static C_char C_TLS li308[] C_aligned={C_lihdr(0,0,20),40,97,50,49,54,56,54,32,120,50,57,50,56,32,121,50,57,50,57,41,0,0,0,0};
static C_char C_TLS li309[] C_aligned={C_lihdr(0,0,14),40,100,111,50,57,49,57,32,101,50,57,50,49,41,0,0,0,0,0,0};
static C_char C_TLS li310[] C_aligned={C_lihdr(0,0,20),40,100,111,50,57,49,51,32,101,50,57,49,53,32,115,50,57,49,54,41,0,0,0,0};
static C_char C_TLS li311[] C_aligned={C_lihdr(0,0,25),40,100,111,50,57,48,53,32,116,97,105,108,50,57,48,55,32,108,101,110,50,57,48,56,41,0};
static C_char C_TLS li312[] C_aligned={C_lihdr(0,0,20),40,97,50,49,56,51,53,32,120,50,57,48,51,32,121,50,57,48,52,41,0,0,0,0};
static C_char C_TLS li313[] C_aligned={C_lihdr(0,0,29),40,100,111,50,56,57,50,32,112,114,101,118,50,56,57,52,32,106,50,56,57,53,32,120,50,56,57,54,41,0,0,0,0,0};
static C_char C_TLS li314[] C_aligned={C_lihdr(0,0,14),40,100,111,50,56,56,57,32,105,50,56,57,49,41,0,0,0,0,0,0};
static C_char C_TLS li315[] C_aligned={C_lihdr(0,0,35),40,109,97,114,107,111,118,45,97,110,97,108,121,122,101,32,115,101,113,50,56,49,53,32,46,32,97,114,103,115,50,56,49,54,41,0,0,0};
static C_char C_TLS li316[] C_aligned={C_lihdr(0,0,45),40,109,97,107,101,45,116,111,107,101,110,32,116,121,112,101,51,48,52,56,32,115,116,114,105,110,103,51,48,52,57,32,112,111,115,105,116,105,111,110,51,48,53,48,41,0,0,0,0,0};
static C_char C_TLS li317[] C_aligned={C_lihdr(0,0,18),40,116,111,107,101,110,45,116,121,112,101,32,120,51,48,53,53,41,0,0};
static C_char C_TLS li318[] C_aligned={C_lihdr(0,0,20),40,116,111,107,101,110,45,115,116,114,105,110,103,32,120,51,48,54,49,41,0,0,0,0};
static C_char C_TLS li319[] C_aligned={C_lihdr(0,0,22),40,116,111,107,101,110,45,112,111,115,105,116,105,111,110,32,120,51,48,54,55,41,0,0,0,0,0,0};
static C_char C_TLS li320[] C_aligned={C_lihdr(0,0,19),40,108,105,115,116,45,62,116,111,107,101,110,32,108,51,48,55,54,41,0,0,0};
static C_char C_TLS li321[] C_aligned={C_lihdr(0,0,22),40,102,105,114,115,116,45,116,111,107,101,110,32,116,111,107,115,51,48,55,56,41,0,0,0,0,0,0};
static C_char C_TLS li322[] C_aligned={C_lihdr(0,0,23),40,110,117,108,108,45,116,111,107,101,110,115,63,32,116,111,107,115,51,48,56,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li323[] C_aligned={C_lihdr(0,0,63),40,109,97,107,101,45,114,117,108,101,32,110,97,109,101,51,48,56,49,32,116,121,112,101,51,48,56,50,32,112,97,116,116,101,114,110,51,48,56,51,32,112,97,114,115,101,114,51,48,56,52,32,101,109,105,116,101,114,51,48,56,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li324[] C_aligned={C_lihdr(0,0,17),40,114,117,108,101,45,110,97,109,101,32,120,51,48,57,48,41,0};
static C_char C_TLS li325[] C_aligned={C_lihdr(0,0,26),40,103,101,116,45,114,117,108,101,32,116,121,112,51,49,51,52,32,100,101,102,51,49,51,53,41,0,0};
static C_char C_TLS li326[] C_aligned={C_lihdr(0,0,21),40,112,97,116,116,101,114,110,45,118,97,108,117,101,32,120,51,49,51,55,41,0,0,0,0,0};
static C_char C_TLS li327[] C_aligned={C_lihdr(0,0,23),40,112,97,116,116,101,114,110,45,99,108,97,117,115,101,63,32,120,51,49,51,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li328[] C_aligned={C_lihdr(0,0,20),40,112,97,116,116,101,114,110,45,115,117,98,115,32,120,51,49,52,48,41,0,0,0,0};
static C_char C_TLS li329[] C_aligned={C_lihdr(0,0,21),40,112,97,116,116,101,114,110,45,110,115,117,98,115,32,120,51,49,52,49,41,0,0,0,0,0};
static C_char C_TLS li330[] C_aligned={C_lihdr(0,0,25),40,112,97,116,116,101,114,110,45,115,117,98,32,120,51,49,52,50,32,105,51,49,52,51,41,0};
static C_char C_TLS li331[] C_aligned={C_lihdr(0,0,29),40,112,97,116,116,101,114,110,45,122,101,114,111,45,111,114,45,109,111,114,101,63,32,120,51,49,52,55,41,0,0,0,0,0};
static C_char C_TLS li332[] C_aligned={C_lihdr(0,0,42),40,109,97,107,101,45,112,97,114,115,101,45,101,114,114,111,114,32,115,116,114,105,110,103,51,49,52,57,32,112,111,115,105,116,105,111,110,51,49,53,48,41,0,0};
static C_char C_TLS li333[] C_aligned={C_lihdr(0,0,26),40,112,97,114,115,101,45,101,114,114,111,114,45,115,116,114,105,110,103,32,120,51,49,53,53,41,0,0};
static C_char C_TLS li334[] C_aligned={C_lihdr(0,0,28),40,112,97,114,115,101,45,101,114,114,111,114,45,112,111,115,105,116,105,111,110,32,120,51,49,54,49,41,0,0,0,0};
static C_char C_TLS li335[] C_aligned={C_lihdr(0,0,50),40,109,97,107,101,45,112,97,114,115,101,45,117,110,105,116,32,116,121,112,101,51,49,54,57,32,112,97,114,115,101,100,51,49,55,48,32,112,111,115,105,116,105,111,110,51,49,55,49,41,0,0};
static C_char C_TLS li336[] C_aligned={C_lihdr(0,0,19),40,112,97,114,115,101,45,117,110,105,116,63,32,120,51,49,55,50,41,0,0,0};
static C_char C_TLS li337[] C_aligned={C_lihdr(0,0,23),40,112,97,114,115,101,45,117,110,105,116,45,116,121,112,101,32,120,51,49,55,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li338[] C_aligned={C_lihdr(0,0,25),40,112,97,114,115,101,45,117,110,105,116,45,112,97,114,115,101,100,32,120,51,49,56,50,41,0};
static C_char C_TLS li339[] C_aligned={C_lihdr(0,0,27),40,112,97,114,115,101,45,117,110,105,116,45,112,111,115,105,116,105,111,110,32,120,51,49,56,56,41,0,0,0};
static C_char C_TLS li340[] C_aligned={C_lihdr(0,0,19),40,116,111,107,101,110,45,117,110,105,116,63,32,120,51,49,57,56,41,0,0,0};
static C_char C_TLS li341[] C_aligned={C_lihdr(0,0,33),40,116,111,107,101,110,45,117,110,105,116,45,116,121,112,101,61,63,32,120,51,49,57,57,32,116,121,112,51,50,48,48,41,0};
static C_char C_TLS li342[] C_aligned={C_lihdr(0,0,33),40,103,101,116,45,101,109,105,116,45,105,110,102,111,32,110,97,109,101,51,50,48,50,32,105,110,102,111,51,50,48,51,41,0};
static C_char C_TLS li343[] C_aligned={C_lihdr(0,0,42),40,97,100,100,45,101,109,105,116,45,105,110,102,111,32,110,97,109,101,51,50,48,53,32,100,97,116,97,51,50,48,54,32,105,110,102,111,51,50,48,55,41,0,0};
static C_char C_TLS li344[] C_aligned={C_lihdr(0,0,43),40,115,101,116,45,101,109,105,116,45,105,110,102,111,33,32,110,97,109,101,51,50,48,56,32,100,97,116,97,51,50,48,57,32,105,110,102,111,51,50,49,48,41,0,0,0};
static C_char C_TLS li345[] C_aligned={C_lihdr(0,0,30),40,101,109,105,116,32,120,51,50,49,51,32,105,110,102,111,51,50,49,52,32,101,114,114,102,51,50,49,53,41,0,0,0,0,0,0};
static C_char C_TLS li346[] C_aligned={C_lihdr(0,0,37),40,101,109,105,116,45,108,105,115,116,32,108,105,115,51,50,49,54,32,105,110,102,111,51,50,49,55,32,101,114,114,102,51,50,49,56,41,0,0,0,0,0};
static C_char C_TLS li347[] C_aligned={C_lihdr(0,0,27),40,102,95,50,50,57,56,51,32,97,114,103,115,51,50,51,49,32,101,114,114,102,51,50,51,50,41,0,0,0};
static C_char C_TLS li348[] C_aligned={C_lihdr(0,0,29),40,115,105,109,112,108,101,45,117,110,105,116,45,112,97,114,115,101,114,32,116,121,112,101,51,50,51,48,41,0,0,0,0,0};
static C_char C_TLS li349[] C_aligned={C_lihdr(0,0,17),40,100,111,51,50,52,48,32,116,97,105,108,51,50,52,50,41,0};
static C_char C_TLS li350[] C_aligned={C_lihdr(0,0,36),40,102,95,50,50,57,57,49,32,117,110,105,116,51,50,51,52,32,105,110,102,111,51,50,51,53,32,101,114,114,102,51,50,51,54,41,0,0,0,0};
static C_char C_TLS li351[] C_aligned={C_lihdr(0,0,30),40,115,105,109,112,108,101,45,117,110,105,116,45,101,109,105,116,116,101,114,32,102,117,110,99,51,50,51,51,41,0,0,0,0,0,0};
static C_char C_TLS li352[] C_aligned={C_lihdr(0,0,8),40,97,50,51,49,56,57,41};
static C_char C_TLS li353[] C_aligned={C_lihdr(0,0,26),40,97,50,51,49,57,57,32,97,51,50,55,50,32,98,51,50,55,51,32,99,51,50,55,52,41,0,0};
static C_char C_TLS li354[] C_aligned={C_lihdr(0,0,8),40,97,50,51,50,57,53,41};
static C_char C_TLS li355[] C_aligned={C_lihdr(0,0,26),40,97,50,51,51,48,57,32,97,51,50,56,56,32,98,51,50,56,57,32,99,51,50,57,48,41,0,0};
static C_char C_TLS li356[] C_aligned={C_lihdr(0,0,14),40,100,111,51,50,56,51,32,105,51,50,56,53,41,0,0,0,0,0,0};
static C_char C_TLS li357[] C_aligned={C_lihdr(0,0,8),40,97,50,51,51,54,50,41};
static C_char C_TLS li358[] C_aligned={C_lihdr(0,0,26),40,97,50,51,51,55,54,32,97,51,51,49,48,32,98,51,51,49,49,32,99,51,51,49,50,41,0,0};
static C_char C_TLS li359[] C_aligned={C_lihdr(0,0,14),40,100,111,51,51,48,53,32,105,51,51,48,55,41,0,0,0,0,0,0};
static C_char C_TLS li360[] C_aligned={C_lihdr(0,0,8),40,97,50,51,52,53,49,41};
static C_char C_TLS li361[] C_aligned={C_lihdr(0,0,26),40,97,50,51,52,53,55,32,97,51,51,50,57,32,98,51,51,51,48,32,99,51,51,51,49,41,0,0};
static C_char C_TLS li362[] C_aligned={C_lihdr(0,0,8),40,100,111,51,51,50,53,41};
static C_char C_TLS li363[] C_aligned={C_lihdr(0,0,8),40,97,50,51,52,57,48,41};
static C_char C_TLS li364[] C_aligned={C_lihdr(0,0,26),40,97,50,51,52,57,54,32,97,51,51,52,55,32,98,51,51,52,56,32,99,51,51,52,57,41,0,0};
static C_char C_TLS li365[] C_aligned={C_lihdr(0,0,70),40,112,97,114,115,101,114,32,112,97,116,51,50,53,57,32,116,111,107,101,110,115,51,50,54,48,32,102,111,114,99,101,45,97,110,100,51,50,54,49,32,108,101,118,101,108,51,50,54,50,32,116,114,97,99,101,51,50,54,51,32,101,114,114,102,51,50,54,52,41,0,0,0,0,0,0};
static C_char C_TLS li366[] C_aligned={C_lihdr(0,0,21),40,83,97,108,84,111,107,101,110,84,121,112,101,63,32,105,51,53,50,52,41,0,0,0,0,0};
static C_char C_TLS li367[] C_aligned={C_lihdr(0,0,18),40,83,97,108,79,112,84,121,112,101,63,32,105,51,53,50,56,41,0,0};
static C_char C_TLS li368[] C_aligned={C_lihdr(0,0,20),40,83,97,108,82,117,108,101,84,121,112,101,63,32,105,51,53,51,55,41,0,0,0,0};
static C_char C_TLS li369[] C_aligned={C_lihdr(0,0,29),40,83,97,108,84,121,112,101,61,63,32,116,121,112,49,51,53,51,56,32,116,121,112,50,51,53,51,57,41,0,0,0,0,0};
static C_char C_TLS li370[] C_aligned={C_lihdr(0,0,17),40,100,111,51,53,56,56,32,116,111,107,115,51,53,57,48,41,0};
static C_char C_TLS li371[] C_aligned={C_lihdr(0,0,36),40,114,101,109,111,118,101,45,116,111,107,101,110,45,116,121,112,101,32,116,111,107,115,51,53,56,52,32,116,121,112,51,53,56,53,41,0,0,0,0};
static C_char C_TLS li372[] C_aligned={C_lihdr(0,0,14),40,105,115,45,111,112,63,32,120,51,54,49,53,41,0,0,0,0,0,0};
static C_char C_TLS li373[] C_aligned={C_lihdr(0,0,29),40,100,111,51,54,50,52,32,119,50,51,54,50,54,32,111,107,51,54,50,55,32,108,105,51,54,50,56,41,0,0,0,0,0};
static C_char C_TLS li374[] C_aligned={C_lihdr(0,0,8),40,100,111,51,54,50,50,41};
static C_char C_TLS li375[] C_aligned={C_lihdr(0,0,18),40,105,110,102,45,62,112,114,101,32,105,110,102,51,54,49,55,41,0,0};
static C_char C_TLS li376[] C_aligned={C_lihdr(0,0,38),40,115,97,108,45,112,97,114,115,101,45,115,116,101,112,112,105,110,103,32,97,114,103,115,51,55,56,51,32,101,114,114,102,51,55,56,52,41,0,0,0,0,0,0};
static C_char C_TLS li377[] C_aligned={C_lihdr(0,0,14),40,100,111,51,57,57,51,32,102,51,57,57,53,41,0,0,0,0,0,0};
static C_char C_TLS li378[] C_aligned={C_lihdr(0,0,14),40,100,111,51,57,56,54,32,102,51,57,56,56,41,0,0,0,0,0,0};
static C_char C_TLS li379[] C_aligned={C_lihdr(0,0,8),40,97,50,51,48,54,48,41};
static C_char C_TLS li380[] C_aligned={C_lihdr(0,0,44),40,97,50,51,48,54,55,32,115,117,99,99,101,115,115,51,50,53,52,32,114,101,115,117,108,116,115,51,50,53,53,32,114,101,109,97,105,110,115,51,50,53,54,41,0,0,0,0};
static C_char C_TLS li381[] C_aligned={C_lihdr(0,0,17),40,97,50,51,48,53,52,32,101,114,114,102,51,50,53,50,41,0};
static C_char C_TLS li382[] C_aligned={C_lihdr(0,0,47),40,115,97,108,32,115,116,114,105,110,103,51,57,55,48,32,114,117,108,101,51,57,55,49,32,116,111,107,101,110,115,51,57,55,50,32,116,114,97,99,101,63,51,57,55,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li383[] C_aligned={C_lihdr(0,0,17),40,100,111,52,48,49,51,32,116,97,105,108,52,48,49,53,41,0};
static C_char C_TLS li384[] C_aligned={C_lihdr(0,0,27),40,112,114,105,110,116,101,114,32,116,104,105,110,103,52,48,49,49,32,108,101,118,52,48,49,50,41,0,0,0};
static C_char C_TLS li385[] C_aligned={C_lihdr(0,0,17),40,100,111,52,48,50,49,32,116,97,105,108,52,48,50,51,41,0};
static C_char C_TLS li386[] C_aligned={C_lihdr(0,0,22),40,115,97,108,58,112,114,105,110,116,32,46,32,97,114,103,115,52,48,48,57,41,0,0,0,0,0,0};
static C_char C_TLS li387[] C_aligned={C_lihdr(0,0,20),40,115,97,108,58,99,104,100,105,114,32,112,97,116,104,52,48,50,56,41,0,0,0,0};
static C_char C_TLS li388[] C_aligned={C_lihdr(0,0,19),40,115,97,108,58,108,111,97,100,32,102,105,108,101,52,48,51,48,41,0,0,0};
static C_char C_TLS li389[] C_aligned={C_lihdr(0,0,21),40,115,97,108,58,111,112,101,110,32,46,32,97,114,103,115,52,48,51,52,41,0,0,0,0,0};
static C_char C_TLS li390[] C_aligned={C_lihdr(0,0,23),40,115,97,108,58,111,117,116,112,117,116,32,46,32,97,114,103,115,52,48,51,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li391[] C_aligned={C_lihdr(0,0,32),40,108,111,111,112,45,111,112,101,114,97,116,111,114,45,115,101,116,33,32,99,52,49,54,54,32,120,52,49,54,55,41};
static C_char C_TLS li392[] C_aligned={C_lihdr(0,0,21),40,108,111,111,112,45,98,105,110,100,105,110,103,115,32,99,52,49,54,56,41,0,0,0,0,0};
static C_char C_TLS li393[] C_aligned={C_lihdr(0,0,23),40,108,111,111,112,45,99,111,108,108,101,99,116,111,114,115,32,99,52,49,55,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li394[] C_aligned={C_lihdr(0,0,22),40,108,111,111,112,45,105,110,105,116,105,97,108,108,121,32,99,52,49,55,52,41,0,0,0,0,0,0};
static C_char C_TLS li395[] C_aligned={C_lihdr(0,0,22),40,108,111,111,112,45,101,110,100,45,116,101,115,116,115,32,99,52,49,55,55,41,0,0,0,0,0,0};
static C_char C_TLS li396[] C_aligned={C_lihdr(0,0,20),40,108,111,111,112,45,108,111,111,112,105,110,103,32,99,52,49,56,48,41,0,0,0,0};
static C_char C_TLS li397[] C_aligned={C_lihdr(0,0,31),40,108,111,111,112,45,108,111,111,112,105,110,103,45,115,101,116,33,32,99,52,49,56,49,32,120,52,49,56,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li398[] C_aligned={C_lihdr(0,0,21),40,108,111,111,112,45,115,116,101,112,112,105,110,103,32,99,52,49,56,51,41,0,0,0,0,0};
static C_char C_TLS li399[] C_aligned={C_lihdr(0,0,20),40,108,111,111,112,45,102,105,110,97,108,108,121,32,99,52,49,56,54,41,0,0,0,0};
static C_char C_TLS li400[] C_aligned={C_lihdr(0,0,22),40,108,111,111,112,45,114,101,116,117,114,110,105,110,103,32,99,52,49,56,57,41,0,0,0,0,0,0};
static C_char C_TLS li401[] C_aligned={C_lihdr(0,0,14),40,100,111,52,49,57,52,32,97,52,49,57,54,41,0,0,0,0,0,0};
static C_char C_TLS li402[] C_aligned={C_lihdr(0,0,27),40,109,97,107,101,45,108,111,111,112,45,99,108,97,117,115,101,32,97,114,103,115,52,49,57,50,41,0,0,0};
static C_char C_TLS li403[] C_aligned={C_lihdr(0,0,14),40,100,111,52,50,48,54,32,108,52,50,48,56,41,0,0,0,0,0,0};
static C_char C_TLS li404[] C_aligned={C_lihdr(0,0,40),40,103,97,116,104,101,114,45,99,108,97,117,115,101,32,99,108,97,117,115,101,115,52,50,48,52,32,97,99,99,101,115,115,111,114,52,50,48,53,41};
static C_char C_TLS li405[] C_aligned={C_lihdr(0,0,39),40,103,97,116,104,101,114,45,99,108,97,117,115,101,115,32,99,97,108,108,101,114,52,50,48,49,32,99,108,97,117,115,101,115,52,50,48,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li406[] C_aligned={C_lihdr(0,0,24),40,108,111,111,112,45,111,112,63,32,120,52,50,49,50,32,111,112,115,52,50,49,51,41};
static C_char C_TLS li407[] C_aligned={C_lihdr(0,0,22),40,108,111,111,112,45,118,97,114,105,97,98,108,101,63,32,120,52,50,49,52,41,0,0,0,0,0,0};
static C_char C_TLS li408[] C_aligned={C_lihdr(0,0,30),40,109,97,107,101,45,98,105,110,100,105,110,103,32,118,97,114,52,50,49,53,32,118,97,108,52,50,49,54,41,0,0,0,0,0,0};
static C_char C_TLS li409[] C_aligned={C_lihdr(0,0,17),40,100,111,52,50,51,56,32,116,97,105,108,52,50,52,48,41,0};
static C_char C_TLS li410[] C_aligned={C_lihdr(0,0,17),40,100,111,52,50,51,51,32,116,97,105,108,52,50,51,53,41,0};
static C_char C_TLS li411[] C_aligned={C_lihdr(0,0,20),40,100,111,52,50,50,51,32,104,52,50,50,53,32,108,52,50,50,54,41,0,0,0,0};
static C_char C_TLS li412[] C_aligned={C_lihdr(0,0,39),40,108,111,111,112,45,101,114,114,111,114,32,111,112,115,52,50,49,55,32,102,111,114,109,115,52,50,49,56,32,97,114,103,115,52,50,49,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li413[] C_aligned={C_lihdr(0,0,41),40,112,97,114,115,101,45,102,111,114,32,102,111,114,109,115,52,50,53,50,32,99,108,97,117,115,101,115,52,50,53,51,32,111,112,115,52,50,53,52,41,0};
static C_char C_TLS li414[] C_aligned={C_lihdr(0,0,17),40,100,111,52,50,55,50,32,110,101,120,116,52,50,55,52,41,0};
static C_char C_TLS li415[] C_aligned={C_lihdr(0,0,51),40,112,97,114,115,101,45,110,117,109,101,114,105,99,97,108,45,102,111,114,32,102,111,114,109,115,52,50,53,56,32,99,108,97,117,115,101,115,52,50,53,57,32,111,112,115,52,50,54,48,41,0,0,0};
static C_char C_TLS li416[] C_aligned={C_lihdr(0,0,8),40,97,50,54,54,51,57,41};
static C_char C_TLS li417[] C_aligned={C_lihdr(0,0,30),40,97,50,54,54,53,55,32,99,108,97,117,115,101,52,51,53,51,32,105,103,110,111,114,101,52,51,53,52,41,0,0,0,0,0,0};
static C_char C_TLS li418[] C_aligned={C_lihdr(0,0,44),40,112,97,114,115,101,45,114,101,112,101,97,116,32,102,111,114,109,115,52,51,53,48,32,99,108,97,117,115,101,115,52,51,53,49,32,111,112,115,52,51,53,50,41,0,0,0,0};
static C_char C_TLS li419[] C_aligned={C_lihdr(0,0,17),40,100,111,52,51,55,49,32,110,101,120,116,52,51,55,51,41,0};
static C_char C_TLS li420[] C_aligned={C_lihdr(0,0,56),40,112,97,114,115,101,45,115,101,113,117,101,110,99,101,45,105,116,101,114,97,116,105,111,110,32,102,111,114,109,115,52,51,53,54,32,99,108,97,117,115,101,115,52,51,53,55,32,111,112,115,52,51,53,56,41};
static C_char C_TLS li421[] C_aligned={C_lihdr(0,0,17),40,100,111,52,52,51,56,32,110,101,120,116,52,52,52,48,41,0};
static C_char C_TLS li422[] C_aligned={C_lihdr(0,0,55),40,112,97,114,115,101,45,103,101,110,101,114,97,108,45,105,116,101,114,97,116,105,111,110,32,102,111,114,109,115,52,52,50,56,32,99,108,97,117,115,101,115,52,52,50,57,32,111,112,115,52,52,51,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li423[] C_aligned={C_lihdr(0,0,26),40,100,111,52,52,55,54,32,110,101,101,100,52,52,55,56,32,110,101,120,116,52,52,55,57,41,0,0};
static C_char C_TLS li424[] C_aligned={C_lihdr(0,0,42),40,112,97,114,115,101,45,119,105,116,104,32,102,111,114,109,115,52,52,54,54,32,99,108,97,117,115,101,115,52,52,54,55,32,111,112,115,52,52,54,56,41,0,0};
static C_char C_TLS li425[] C_aligned={C_lihdr(0,0,8),40,100,111,52,53,50,48,41};
static C_char C_TLS li426[] C_aligned={C_lihdr(0,0,40),40,112,97,114,115,101,45,100,111,32,102,111,114,109,115,52,53,49,49,32,99,108,97,117,115,101,115,52,53,49,50,32,111,112,115,52,53,49,51,41};
static C_char C_TLS li427[] C_aligned={C_lihdr(0,0,45),40,112,97,114,115,101,45,102,105,110,97,108,108,121,32,102,111,114,109,115,52,53,51,48,32,99,108,97,117,115,101,115,52,53,51,49,32,111,112,115,52,53,51,50,41,0,0,0,0,0};
static C_char C_TLS li428[] C_aligned={C_lihdr(0,0,47),40,112,97,114,115,101,45,105,110,105,116,105,97,108,108,121,32,102,111,114,109,115,52,53,52,52,32,99,108,97,117,115,101,115,52,53,52,53,32,111,112,115,52,53,52,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li429[] C_aligned={C_lihdr(0,0,50),40,109,97,107,101,45,99,111,108,108,101,99,116,111,114,32,118,97,114,52,54,49,49,32,116,121,112,101,52,54,49,50,32,97,99,99,52,54,49,51,32,104,101,97,100,52,54,49,52,41,0,0};
static C_char C_TLS li430[] C_aligned={C_lihdr(0,0,24),40,99,111,108,108,101,99,116,111,114,45,116,121,112,101,32,99,111,108,52,54,49,53,41};
static C_char C_TLS li431[] C_aligned={C_lihdr(0,0,23),40,99,111,108,108,101,99,116,111,114,45,97,99,99,32,99,111,108,52,54,49,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li432[] C_aligned={C_lihdr(0,0,14),40,100,111,52,53,54,51,32,97,52,53,54,53,41,0,0,0,0,0,0};
static C_char C_TLS li433[] C_aligned={C_lihdr(0,0,14),40,100,111,52,53,55,49,32,99,52,53,55,51,41,0,0,0,0,0,0};
static C_char C_TLS li434[] C_aligned={C_lihdr(0,0,50),40,112,97,114,115,101,45,97,99,99,117,109,117,108,97,116,105,111,110,32,102,111,114,109,115,52,53,57,48,32,99,108,97,117,115,101,115,52,53,57,49,32,111,112,115,52,53,57,50,41,0,0};
static C_char C_TLS li435[] C_aligned={C_lihdr(0,0,22),40,108,111,111,112,45,114,101,116,117,114,110,32,101,120,112,114,52,54,57,49,41,0,0,0,0,0,0};
static C_char C_TLS li436[] C_aligned={C_lihdr(0,0,49),40,112,97,114,115,101,45,119,104,105,108,101,45,117,110,116,105,108,32,102,111,114,109,115,52,54,57,50,32,99,108,97,117,115,101,115,52,54,57,51,32,111,112,115,52,54,57,52,41,0};
static C_char C_TLS li437[] C_aligned={C_lihdr(0,0,45),40,112,97,114,115,101,45,116,104,101,114,101,105,115,32,102,111,114,109,115,52,55,49,51,32,99,108,97,117,115,101,115,52,55,49,52,32,111,112,115,52,55,49,53,41,0,0,0,0,0};
static C_char C_TLS li438[] C_aligned={C_lihdr(0,0,44),40,112,97,114,115,101,45,114,101,116,117,114,110,32,102,111,114,109,115,52,55,50,57,32,99,108,97,117,115,101,115,52,55,51,48,32,111,112,115,52,55,51,49,41,0,0,0,0};
static C_char C_TLS li439[] C_aligned={C_lihdr(0,0,8),40,97,50,56,53,51,48,41};
static C_char C_TLS li440[] C_aligned={C_lihdr(0,0,20),40,97,50,56,53,52,51,32,97,52,55,53,54,32,98,52,55,53,55,41,0,0,0,0};
static C_char C_TLS li441[] C_aligned={C_lihdr(0,0,38),40,100,111,52,55,52,57,32,111,112,52,55,53,49,32,99,108,97,117,115,101,52,55,53,50,32,114,101,109,97,105,110,115,52,55,53,51,41,0,0,0,0,0,0};
static C_char C_TLS li442[] C_aligned={C_lihdr(0,0,58),40,112,97,114,115,101,45,116,104,101,110,45,101,108,115,101,45,100,101,112,101,110,100,101,110,116,115,32,102,111,114,109,115,52,55,52,51,32,99,108,97,117,115,101,115,52,55,52,52,32,111,112,115,52,55,52,53,41,0,0};
static C_char C_TLS li443[] C_aligned={C_lihdr(0,0,8),40,97,50,56,54,57,52,41};
static C_char C_TLS li444[] C_aligned={C_lihdr(0,0,20),40,97,50,56,55,48,56,32,97,52,55,56,53,32,98,52,55,56,54,41,0,0,0,0};
static C_char C_TLS li445[] C_aligned={C_lihdr(0,0,8),40,97,50,56,55,55,50,41};
static C_char C_TLS li446[] C_aligned={C_lihdr(0,0,20),40,97,50,56,55,55,56,32,97,52,55,56,50,32,98,52,55,56,51,41,0,0,0,0};
static C_char C_TLS li447[] C_aligned={C_lihdr(0,0,49),40,112,97,114,115,101,45,99,111,110,100,105,116,105,111,110,97,108,32,102,111,114,109,115,52,55,54,57,32,99,108,97,117,115,101,115,52,55,55,48,32,111,112,115,52,55,55,49,41,0};
static C_char C_TLS li448[] C_aligned={C_lihdr(0,0,26),40,111,112,45,116,121,112,101,63,32,111,112,52,56,49,50,32,116,121,112,101,52,56,49,51,41,0,0};
static C_char C_TLS li449[] C_aligned={C_lihdr(0,0,8),40,97,50,56,57,50,48,41};
static C_char C_TLS li450[] C_aligned={C_lihdr(0,0,20),40,97,50,56,57,50,57,32,97,52,56,50,53,32,98,52,56,50,54,41,0,0,0,0};
static C_char C_TLS li451[] C_aligned={C_lihdr(0,0,47),40,100,111,52,56,49,54,32,111,112,52,56,49,56,32,99,108,97,117,115,101,52,56,49,57,32,114,101,109,97,105,110,115,52,56,50,48,32,98,111,100,121,52,56,50,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li452[] C_aligned={C_lihdr(0,0,46),40,112,97,114,115,101,45,105,116,101,114,97,116,105,111,110,32,99,97,108,108,101,114,52,56,51,56,32,102,111,114,109,115,52,56,51,57,32,111,112,115,52,56,52,48,41,0,0,0,0,0,0};
static C_char C_TLS li453[] C_aligned={C_lihdr(0,0,59),40,102,95,50,57,51,51,53,32,97,53,48,49,55,53,48,50,48,32,97,53,48,49,54,53,48,50,49,32,97,53,48,49,53,53,48,50,50,32,97,53,48,49,52,53,48,50,51,32,97,53,48,49,51,53,48,50,52,41,0,0,0};
static C_char C_TLS li454[] C_aligned={C_lihdr(0,0,23),40,109,109,58,109,97,107,101,45,111,110,32,46,32,97,114,103,115,52,57,48,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li455[] C_aligned={C_lihdr(0,0,29),40,102,95,51,48,48,52,57,32,97,53,48,51,51,53,48,51,55,32,97,53,48,51,50,53,48,51,56,41,0,0,0,0,0};
static C_char C_TLS li456[] C_aligned={C_lihdr(0,0,14),40,109,109,58,111,110,63,32,109,53,48,51,49,41,0,0,0,0,0,0};
static C_char C_TLS li457[] C_aligned={C_lihdr(0,0,59),40,102,95,51,48,48,56,48,32,97,53,49,49,50,53,49,49,53,32,97,53,49,49,49,53,49,49,54,32,97,53,49,49,48,53,49,49,55,32,97,53,49,48,57,53,49,49,56,32,97,53,49,48,56,53,49,49,57,41,0,0,0};
static C_char C_TLS li458[] C_aligned={C_lihdr(0,0,24),40,109,109,58,109,97,107,101,45,111,102,102,32,46,32,97,114,103,115,53,48,52,48,41};
static C_char C_TLS li459[] C_aligned={C_lihdr(0,0,29),40,102,95,51,48,53,49,57,32,97,53,49,50,55,53,49,51,49,32,97,53,49,50,54,53,49,51,50,41,0,0,0,0,0};
static C_char C_TLS li460[] C_aligned={C_lihdr(0,0,15),40,109,109,58,111,102,102,63,32,109,53,49,50,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li461[] C_aligned={C_lihdr(0,0,59),40,102,95,51,48,53,53,51,32,97,53,50,52,51,53,50,52,54,32,97,53,50,52,50,53,50,52,55,32,97,53,50,52,49,53,50,52,56,32,97,53,50,52,48,53,50,52,57,32,97,53,50,51,57,53,50,53,48,41,0,0,0};
static C_char C_TLS li462[] C_aligned={C_lihdr(0,0,26),40,109,109,58,109,97,107,101,45,116,111,117,99,104,32,46,32,97,114,103,115,53,49,51,52,41,0,0};
static C_char C_TLS li463[] C_aligned={C_lihdr(0,0,29),40,102,95,51,49,50,54,55,32,97,53,50,53,57,53,50,54,51,32,97,53,50,53,56,53,50,54,52,41,0,0,0,0,0};
static C_char C_TLS li464[] C_aligned={C_lihdr(0,0,17),40,109,109,58,116,111,117,99,104,63,32,109,53,50,53,55,41,0};
static C_char C_TLS li465[] C_aligned={C_lihdr(0,0,59),40,102,95,51,49,51,48,49,32,97,53,51,55,53,53,51,55,56,32,97,53,51,55,52,53,51,55,57,32,97,53,51,55,51,53,51,56,48,32,97,53,51,55,50,53,51,56,49,32,97,53,51,55,49,53,51,56,50,41,0,0,0};
static C_char C_TLS li466[] C_aligned={C_lihdr(0,0,25),40,109,109,58,109,97,107,101,45,99,116,114,108,32,46,32,97,114,103,115,53,50,54,54,41,0};
static C_char C_TLS li467[] C_aligned={C_lihdr(0,0,29),40,102,95,51,50,48,49,53,32,97,53,51,57,49,53,51,57,53,32,97,53,51,57,48,53,51,57,54,41,0,0,0,0,0};
static C_char C_TLS li468[] C_aligned={C_lihdr(0,0,16),40,109,109,58,99,116,114,108,63,32,109,53,51,56,57,41};
static C_char C_TLS li469[] C_aligned={C_lihdr(0,0,59),40,102,95,51,50,48,52,54,32,97,53,52,55,48,53,52,55,51,32,97,53,52,54,57,53,52,55,52,32,97,53,52,54,56,53,52,55,53,32,97,53,52,54,55,53,52,55,54,32,97,53,52,54,54,53,52,55,55,41,0,0,0};
static C_char C_TLS li470[] C_aligned={C_lihdr(0,0,25),40,109,109,58,109,97,107,101,45,112,114,111,103,32,46,32,97,114,103,115,53,51,57,56,41,0};
static C_char C_TLS li471[] C_aligned={C_lihdr(0,0,29),40,102,95,51,50,52,56,53,32,97,53,52,56,53,53,52,56,57,32,97,53,52,56,52,53,52,57,48,41,0,0,0,0,0};
static C_char C_TLS li472[] C_aligned={C_lihdr(0,0,16),40,109,109,58,112,114,111,103,63,32,109,53,52,56,51,41};
static C_char C_TLS li473[] C_aligned={C_lihdr(0,0,59),40,102,95,51,50,53,49,54,32,97,53,53,54,52,53,53,54,55,32,97,53,53,54,51,53,53,54,56,32,97,53,53,54,50,53,53,54,57,32,97,53,53,54,49,53,53,55,48,32,97,53,53,54,48,53,53,55,49,41,0,0,0};
static C_char C_TLS li474[] C_aligned={C_lihdr(0,0,26),40,109,109,58,109,97,107,101,45,112,114,101,115,115,32,46,32,97,114,103,115,53,52,57,50,41,0,0};
static C_char C_TLS li475[] C_aligned={C_lihdr(0,0,29),40,102,95,51,50,57,53,53,32,97,53,53,55,57,53,53,56,51,32,97,53,53,55,56,53,53,56,52,41,0,0,0,0,0};
static C_char C_TLS li476[] C_aligned={C_lihdr(0,0,17),40,109,109,58,112,114,101,115,115,63,32,109,53,53,55,55,41,0};
static C_char C_TLS li477[] C_aligned={C_lihdr(0,0,59),40,102,95,51,50,57,56,54,32,97,53,54,53,56,53,54,54,49,32,97,53,54,53,55,53,54,54,50,32,97,53,54,53,54,53,54,54,51,32,97,53,54,53,53,53,54,54,52,32,97,53,54,53,52,53,54,54,53,41,0,0,0};
static C_char C_TLS li478[] C_aligned={C_lihdr(0,0,25),40,109,109,58,109,97,107,101,45,98,101,110,100,32,46,32,97,114,103,115,53,53,56,54,41,0};
static C_char C_TLS li479[] C_aligned={C_lihdr(0,0,19),40,102,95,51,51,52,52,55,32,97,53,54,56,49,53,54,56,53,41,0,0,0};
static C_char C_TLS li480[] C_aligned={C_lihdr(0,0,15),40,109,109,58,102,114,101,101,32,109,53,54,56,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li481[] C_aligned={C_lihdr(0,0,19),40,102,95,51,51,52,54,50,32,97,53,54,56,57,53,54,57,51,41,0,0,0};
static C_char C_TLS li482[] C_aligned={C_lihdr(0,0,15),40,109,109,58,99,111,112,121,32,109,53,54,56,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li483[] C_aligned={C_lihdr(0,0,19),40,102,95,51,51,52,55,55,32,97,53,54,57,55,53,55,48,49,41,0,0,0};
static C_char C_TLS li484[] C_aligned={C_lihdr(0,0,15),40,109,109,58,116,105,109,101,32,109,53,54,57,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li485[] C_aligned={C_lihdr(0,0,29),40,102,95,51,51,52,57,50,32,97,53,55,48,55,53,55,49,49,32,97,53,55,48,54,53,55,49,50,41,0,0,0,0,0};
static C_char C_TLS li486[] C_aligned={C_lihdr(0,0,26),40,109,109,58,116,105,109,101,45,115,101,116,33,32,109,53,55,48,52,32,116,53,55,48,53,41,0,0};
static C_char C_TLS li487[] C_aligned={C_lihdr(0,0,19),40,102,95,51,51,53,49,49,32,97,53,55,49,54,53,55,50,48,41,0,0,0};
static C_char C_TLS li488[] C_aligned={C_lihdr(0,0,15),40,109,109,58,99,104,97,110,32,109,53,55,49,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li489[] C_aligned={C_lihdr(0,0,29),40,102,95,51,51,53,50,54,32,97,53,55,50,53,53,55,50,57,32,97,53,55,50,52,53,55,51,48,41,0,0,0,0,0};
static C_char C_TLS li490[] C_aligned={C_lihdr(0,0,26),40,109,109,58,99,104,97,110,45,115,101,116,33,32,109,53,55,50,50,32,99,53,55,50,51,41,0,0};
static C_char C_TLS li491[] C_aligned={C_lihdr(0,0,29),40,102,95,51,51,53,52,53,32,97,53,55,51,53,53,55,51,57,32,97,53,55,51,52,53,55,52,48,41,0,0,0,0,0};
static C_char C_TLS li492[] C_aligned={C_lihdr(0,0,14),40,109,109,58,107,101,121,32,109,53,55,51,51,41,0,0,0,0,0,0};
static C_char C_TLS li493[] C_aligned={C_lihdr(0,0,39),40,102,95,51,51,53,54,52,32,97,53,55,52,54,53,55,53,48,32,97,53,55,52,53,53,55,53,49,32,97,53,55,52,52,53,55,53,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li494[] C_aligned={C_lihdr(0,0,25),40,109,109,58,107,101,121,45,115,101,116,33,32,109,53,55,52,50,32,107,53,55,52,51,41,0};
static C_char C_TLS li495[] C_aligned={C_lihdr(0,0,29),40,102,95,51,51,53,56,55,32,97,53,55,53,55,53,55,54,49,32,97,53,55,53,54,53,55,54,50,41,0,0,0,0,0};
static C_char C_TLS li496[] C_aligned={C_lihdr(0,0,14),40,109,109,58,118,101,108,32,109,53,55,53,53,41,0,0,0,0,0,0};
static C_char C_TLS li497[] C_aligned={C_lihdr(0,0,39),40,102,95,51,51,54,48,54,32,97,53,55,54,56,53,55,55,50,32,97,53,55,54,55,53,55,55,51,32,97,53,55,54,54,53,55,55,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li498[] C_aligned={C_lihdr(0,0,25),40,109,109,58,118,101,108,45,115,101,116,33,32,109,53,55,54,52,32,118,53,55,54,53,41,0};
static C_char C_TLS li499[] C_aligned={C_lihdr(0,0,29),40,102,95,51,51,54,51,56,32,97,53,55,56,49,53,55,56,53,32,97,53,55,56,48,53,55,56,54,41,0,0,0,0,0};
static C_char C_TLS li500[] C_aligned={C_lihdr(0,0,29),40,102,95,51,51,54,53,52,32,97,53,55,56,57,53,55,57,51,32,97,53,55,56,56,53,55,57,52,41,0,0,0,0,0};
static C_char C_TLS li501[] C_aligned={C_lihdr(0,0,14),40,109,109,58,118,97,108,32,109,53,55,55,55,41,0,0,0,0,0,0};
static C_char C_TLS li502[] C_aligned={C_lihdr(0,0,39),40,102,95,51,51,54,56,53,32,97,53,56,48,50,53,56,48,54,32,97,53,56,48,49,53,56,48,55,32,97,53,56,48,48,53,56,48,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li503[] C_aligned={C_lihdr(0,0,39),40,102,95,51,51,55,48,53,32,97,53,56,49,50,53,56,49,54,32,97,53,56,49,49,53,56,49,55,32,97,53,56,49,48,53,56,49,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li504[] C_aligned={C_lihdr(0,0,25),40,109,109,58,118,97,108,45,115,101,116,33,32,109,53,55,57,54,32,118,53,55,57,55,41,0};
static C_char C_TLS li505[] C_aligned={C_lihdr(0,0,29),40,102,95,51,51,55,51,49,32,97,53,56,50,51,53,56,50,55,32,97,53,56,50,50,53,56,50,56,41,0,0,0,0,0};
static C_char C_TLS li506[] C_aligned={C_lihdr(0,0,14),40,109,109,58,110,117,109,32,109,53,56,50,49,41,0,0,0,0,0,0};
static C_char C_TLS li507[] C_aligned={C_lihdr(0,0,39),40,102,95,51,51,55,53,48,32,97,53,56,51,52,53,56,51,56,32,97,53,56,51,51,53,56,51,57,32,97,53,56,51,50,53,56,52,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li508[] C_aligned={C_lihdr(0,0,25),40,109,109,58,110,117,109,45,115,101,116,33,32,109,53,56,51,48,32,118,53,56,51,49,41,0};
static C_char C_TLS li509[] C_aligned={C_lihdr(0,0,59),40,102,95,51,51,55,55,51,32,97,53,56,53,50,53,56,53,53,32,97,53,56,53,49,53,56,53,54,32,97,53,56,53,48,53,56,53,55,32,97,53,56,52,57,53,56,53,56,32,97,53,56,52,56,53,56,53,57,41,0,0,0};
static C_char C_TLS li510[] C_aligned={C_lihdr(0,0,51),40,109,112,58,110,111,116,101,32,116,105,109,101,53,56,52,51,32,100,117,114,53,56,52,52,32,107,101,121,53,56,52,53,32,97,109,112,53,56,52,54,32,99,104,97,110,53,56,52,55,41,0,0,0};
static C_char C_TLS li511[] C_aligned={C_lihdr(0,0,59),40,102,95,51,51,56,48,49,32,97,53,56,54,57,53,56,55,50,32,97,53,56,54,56,53,56,55,51,32,97,53,56,54,55,53,56,55,52,32,97,53,56,54,54,53,56,55,53,32,97,53,56,54,53,53,56,55,54,41,0,0,0};
static C_char C_TLS li512[] C_aligned={C_lihdr(0,0,51),40,109,112,58,109,105,100,105,32,116,105,109,101,53,56,54,48,32,100,117,114,53,56,54,49,32,107,101,121,53,56,54,50,32,97,109,112,53,56,54,51,32,99,104,97,110,53,56,54,52,41,0,0,0};
static C_char C_TLS li513[] C_aligned={C_lihdr(0,0,59),40,102,95,51,51,56,50,57,32,97,53,56,56,52,53,56,56,55,32,97,53,56,56,51,53,56,56,56,32,97,53,56,56,50,53,56,56,57,32,97,53,56,56,49,53,56,57,48,32,97,53,56,56,48,53,56,57,49,41,0,0,0};
static C_char C_TLS li514[] C_aligned={C_lihdr(0,0,34),40,109,112,58,111,102,102,32,116,105,109,101,53,56,55,55,32,107,101,121,53,56,55,56,32,99,104,97,110,53,56,55,57,41,0,0};
static C_char C_TLS li515[] C_aligned={C_lihdr(0,0,59),40,102,95,51,51,56,53,55,32,97,53,57,48,48,53,57,48,51,32,97,53,56,57,57,53,57,48,52,32,97,53,56,57,56,53,57,48,53,32,97,53,56,57,55,53,57,48,54,32,97,53,56,57,54,53,57,48,55,41,0,0,0};
static C_char C_TLS li516[] C_aligned={C_lihdr(0,0,41),40,109,112,58,111,110,32,116,105,109,101,53,56,57,50,32,107,101,121,53,56,57,51,32,118,101,108,53,56,57,52,32,99,104,97,110,53,56,57,53,41,0};
static C_char C_TLS li517[] C_aligned={C_lihdr(0,0,59),40,102,95,51,51,56,56,53,32,97,53,57,49,54,53,57,49,57,32,97,53,57,49,53,53,57,50,48,32,97,53,57,49,52,53,57,50,49,32,97,53,57,49,51,53,57,50,50,32,97,53,57,49,50,53,57,50,51,41,0,0,0};
static C_char C_TLS li518[] C_aligned={C_lihdr(0,0,44),40,109,112,58,116,111,117,99,104,32,116,105,109,101,53,57,48,56,32,107,101,121,53,57,48,57,32,118,97,108,53,57,49,48,32,99,104,97,110,53,57,49,49,41,0,0,0,0};
static C_char C_TLS li519[] C_aligned={C_lihdr(0,0,59),40,102,95,51,51,57,49,51,32,97,53,57,51,50,53,57,51,53,32,97,53,57,51,49,53,57,51,54,32,97,53,57,51,48,53,57,51,55,32,97,53,57,50,57,53,57,51,56,32,97,53,57,50,56,53,57,51,57,41,0,0,0};
static C_char C_TLS li520[] C_aligned={C_lihdr(0,0,43),40,109,112,58,99,116,114,108,32,116,105,109,101,53,57,50,52,32,110,117,109,53,57,50,53,32,118,97,108,53,57,50,54,32,99,104,97,110,53,57,50,55,41,0,0,0};
static C_char C_TLS li521[] C_aligned={C_lihdr(0,0,59),40,102,95,51,51,57,52,49,32,97,53,57,52,55,53,57,53,48,32,97,53,57,52,54,53,57,53,49,32,97,53,57,52,53,53,57,53,50,32,97,53,57,52,52,53,57,53,51,32,97,53,57,52,51,53,57,53,52,41,0,0,0};
static C_char C_TLS li522[] C_aligned={C_lihdr(0,0,35),40,109,112,58,112,114,111,103,32,116,105,109,101,53,57,52,48,32,118,97,108,53,57,52,49,32,99,104,97,110,53,57,52,50,41,0,0,0};
static C_char C_TLS li523[] C_aligned={C_lihdr(0,0,59),40,102,95,51,51,57,54,57,32,97,53,57,54,50,53,57,54,53,32,97,53,57,54,49,53,57,54,54,32,97,53,57,54,48,53,57,54,55,32,97,53,57,53,57,53,57,54,56,32,97,53,57,53,56,53,57,54,57,41,0,0,0};
static C_char C_TLS li524[] C_aligned={C_lihdr(0,0,36),40,109,112,58,112,114,101,115,115,32,116,105,109,101,53,57,53,53,32,118,97,108,53,57,53,54,32,99,104,97,110,53,57,53,55,41,0,0,0,0};
static C_char C_TLS li525[] C_aligned={C_lihdr(0,0,59),40,102,95,51,51,57,57,55,32,97,53,57,55,55,53,57,56,48,32,97,53,57,55,54,53,57,56,49,32,97,53,57,55,53,53,57,56,50,32,97,53,57,55,52,53,57,56,51,32,97,53,57,55,51,53,57,56,52,41,0,0,0};
static C_char C_TLS li526[] C_aligned={C_lihdr(0,0,35),40,109,112,58,98,101,110,100,32,116,105,109,101,53,57,55,48,32,118,97,108,53,57,55,49,32,99,104,97,110,53,57,55,50,41,0,0,0};
static C_char C_TLS li527[] C_aligned={C_lihdr(0,0,19),40,102,95,51,52,48,50,53,32,97,53,57,56,54,53,57,57,48,41,0,0,0};
static C_char C_TLS li528[] C_aligned={C_lihdr(0,0,15),40,109,112,58,109,109,32,112,116,114,53,57,56,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li529[] C_aligned={C_lihdr(0,0,17),40,97,51,52,48,53,56,32,37,101,114,114,53,57,57,57,41,0};
static C_char C_TLS li530[] C_aligned={C_lihdr(0,0,8),40,97,51,52,48,55,56,41};
static C_char C_TLS li531[] C_aligned={C_lihdr(0,0,18),40,97,51,52,48,53,50,32,37,99,111,110,116,53,57,57,56,41,0,0};
static C_char C_TLS li532[] C_aligned={C_lihdr(0,0,17),40,97,51,52,48,52,54,32,37,109,115,103,53,57,57,55,41,0};
static C_char C_TLS li533[] C_aligned={C_lihdr(0,0,19),40,102,95,51,52,48,56,52,32,97,53,57,57,51,53,57,57,54,41,0,0,0};
static C_char C_TLS li534[] C_aligned={C_lihdr(0,0,19),40,102,95,51,52,48,56,57,32,97,54,48,48,50,54,48,48,53,41,0,0,0};
static C_char C_TLS li535[] C_aligned={C_lihdr(0,0,21),40,109,112,58,105,110,104,111,111,107,32,37,104,111,111,107,53,57,57,50,41,0,0,0,0,0};
static C_char C_TLS li536[] C_aligned={C_lihdr(0,0,39),40,102,95,51,52,49,52,54,32,97,54,48,53,56,54,48,54,49,32,97,54,48,53,55,54,48,54,50,32,97,54,48,53,54,54,48,54,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li537[] C_aligned={C_lihdr(0,0,17),40,99,115,58,105,32,46,32,97,114,103,115,54,48,53,53,41,0};
static C_char C_TLS li538[] C_aligned={C_lihdr(0,0,39),40,102,95,51,52,50,48,51,32,97,54,48,54,57,54,48,55,50,32,97,54,48,54,56,54,48,55,51,32,97,54,48,54,55,54,48,55,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li539[] C_aligned={C_lihdr(0,0,17),40,99,115,58,102,32,46,32,97,114,103,115,54,48,54,54,41,0};
static C_char C_TLS li540[] C_aligned={C_lihdr(0,0,9),40,102,95,51,52,50,52,52,41,0};
static C_char C_TLS li541[] C_aligned={C_lihdr(0,0,10),40,99,115,58,99,108,101,97,114,41,0,0};
static C_char C_TLS li542[] C_aligned={C_lihdr(0,0,14),40,100,111,54,48,57,57,32,120,54,49,48,49,41,0,0,0,0,0,0};
static C_char C_TLS li543[] C_aligned={C_lihdr(0,0,26),40,100,111,54,48,56,53,32,101,54,48,57,54,32,118,54,48,57,55,32,121,54,48,57,56,41,0,0};
static C_char C_TLS li544[] C_aligned={C_lihdr(0,0,18),40,99,109,45,108,111,103,111,32,118,101,114,115,54,48,56,52,41,0,0};
static C_char C_TLS li545[] C_aligned={C_lihdr(0,0,25),40,112,114,105,110,116,45,109,101,115,115,97,103,101,32,97,54,49,49,48,54,49,49,52,41,0};
static C_char C_TLS li546[] C_aligned={C_lihdr(0,0,23),40,112,114,105,110,116,45,101,114,114,111,114,32,97,54,49,49,54,54,49,50,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li547[] C_aligned={C_lihdr(0,0,27),40,99,117,114,114,101,110,116,45,116,105,109,101,45,109,105,108,108,105,115,101,99,111,110,100,115,41,0,0,0};
static C_char C_TLS li548[] C_aligned={C_lihdr(0,0,22),40,99,117,114,114,101,110,116,45,116,105,109,101,45,115,101,99,111,110,100,115,41,0,0,0,0,0,0};
static C_char C_TLS li549[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li550[] C_aligned={C_lihdr(0,0,43),40,115,99,104,101,100,117,108,101,114,45,115,101,116,45,116,105,109,101,45,109,105,108,108,105,115,101,99,111,110,100,115,32,97,54,49,51,50,54,49,51,53,41,0,0,0};
static C_char C_TLS li551[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li552[] C_aligned={C_lihdr(0,0,48),40,115,99,104,101,100,117,108,101,114,45,115,112,114,111,117,116,32,97,54,49,52,48,54,49,52,51,32,97,54,49,51,57,54,49,52,52,32,97,54,49,51,56,54,49,52,53,41};
static C_char C_TLS li553[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li554[] C_aligned={C_lihdr(0,0,26),40,115,99,104,101,100,117,108,101,114,45,115,116,111,112,32,97,54,49,54,48,54,49,54,51,41,0,0};
static C_char C_TLS li555[] C_aligned={C_lihdr(0,0,19),40,102,95,51,52,53,54,57,32,97,54,49,55,49,54,49,55,53,41,0,0,0};
static C_char C_TLS li556[] C_aligned={C_lihdr(0,0,24),40,108,111,97,100,45,115,97,108,45,102,105,108,101,32,102,105,108,101,54,49,55,48,41};
static C_char C_TLS li557[] C_aligned={C_lihdr(0,0,11),40,110,101,120,116,115,116,97,114,116,41,0,0,0};
static C_char C_TLS li558[] C_aligned={C_lihdr(0,0,8),40,110,101,120,116,105,100,41};
static C_char C_TLS li559[] C_aligned={C_lihdr(0,0,14),40,100,111,54,49,57,53,32,112,54,49,57,55,41,0,0,0,0,0,0};
static C_char C_TLS li560[] C_aligned={C_lihdr(0,0,27),40,98,111,100,121,54,49,56,49,32,115,116,97,114,116,54,49,56,55,32,105,100,54,49,56,56,41,0,0,0};
static C_char C_TLS li561[] C_aligned={C_lihdr(0,0,27),40,100,101,102,45,105,100,54,49,56,52,32,37,115,116,97,114,116,54,49,55,57,54,50,48,51,41,0,0,0};
static C_char C_TLS li562[] C_aligned={C_lihdr(0,0,15),40,100,101,102,45,115,116,97,114,116,54,49,56,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li563[] C_aligned={C_lihdr(0,0,28),40,115,112,114,111,117,116,32,112,114,111,99,54,49,55,55,32,46,32,97,114,103,115,54,49,55,56,41,0,0,0,0};
static C_char C_TLS li564[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li565[] C_aligned={C_lihdr(0,0,23),40,116,105,109,101,45,102,111,114,109,97,116,32,46,32,97,114,103,54,50,49,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li566[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li567[] C_aligned={C_lihdr(0,0,7),40,112,97,117,115,101,41,0,0,0,0,0,0,0};
static C_char C_TLS li568[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li569[] C_aligned={C_lihdr(0,0,9),40,112,97,117,115,101,100,63,41,0};
static C_char C_TLS li570[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li571[] C_aligned={C_lihdr(0,0,6),40,99,111,110,116,41,0,0,0,0,0,0};
static C_char C_TLS li572[] C_aligned={C_lihdr(0,0,17),40,100,111,54,50,50,52,32,116,97,105,108,54,50,50,54,41,0};
static C_char C_TLS li573[] C_aligned={C_lihdr(0,0,19),40,115,116,111,112,32,46,32,112,114,111,99,105,100,54,50,50,51,41,0,0,0};
static C_char C_TLS li574[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li575[] C_aligned={C_lihdr(0,0,6),40,104,117,115,104,41,0,0,0,0,0,0};
static C_char C_TLS li576[] C_aligned={C_lihdr(0,0,47),40,114,117,110,45,119,104,105,108,101,45,117,110,116,105,108,32,102,111,114,109,115,54,50,51,49,32,99,108,97,117,115,101,115,54,50,51,50,32,111,112,115,54,50,51,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li577[] C_aligned={C_lihdr(0,0,44),40,112,114,111,99,101,115,115,45,99,111,100,101,45,116,101,114,109,105,110,97,116,101,115,63,32,99,111,100,101,54,50,54,49,32,115,116,111,112,54,50,54,50,41,0,0,0,0};
static C_char C_TLS li578[] C_aligned={C_lihdr(0,0,31),40,97,51,53,50,56,50,32,102,111,114,109,97,108,115,54,50,56,50,32,46,32,98,111,100,121,54,50,56,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li579[] C_aligned={C_lihdr(0,0,17),40,97,51,53,51,49,49,32,97,114,103,115,54,50,56,49,41,0};
static C_char C_TLS li580[] C_aligned={C_lihdr(0,0,16),40,100,111,54,50,53,52,32,111,112,115,54,50,53,54,41};
static C_char C_TLS li581[] C_aligned={C_lihdr(0,0,17),40,97,51,53,51,56,48,32,97,114,103,115,52,56,53,49,41,0};
static C_char C_TLS li582[] C_aligned={C_lihdr(0,0,16),40,97,51,53,53,50,50,32,115,121,109,52,49,54,52,41};
static C_char C_TLS li583[] C_aligned={C_lihdr(0,0,16),40,97,51,53,53,50,53,32,115,121,109,52,49,54,50,41};
static C_char C_TLS li584[] C_aligned={C_lihdr(0,0,24),40,97,51,53,53,53,52,32,118,97,108,52,49,54,48,32,115,121,109,52,49,54,49,41};
static C_char C_TLS li585[] C_aligned={C_lihdr(0,0,17),40,97,51,53,53,54,56,32,97,114,103,115,52,49,53,57,41,0};
static C_char C_TLS li586[] C_aligned={C_lihdr(0,0,26),40,97,51,53,53,56,50,32,97,114,103,115,51,57,54,53,32,101,114,114,102,51,57,54,54,41,0,0};
static C_char C_TLS li587[] C_aligned={C_lihdr(0,0,35),40,97,51,53,53,57,54,32,117,110,105,116,51,57,54,55,32,105,110,102,111,51,57,54,56,32,101,114,114,102,51,57,54,57,41,0,0,0};
static C_char C_TLS li588[] C_aligned={C_lihdr(0,0,26),40,97,51,53,55,48,50,32,97,114,103,115,51,57,49,52,32,101,114,114,102,51,57,49,53,41,0,0};
static C_char C_TLS li589[] C_aligned={C_lihdr(0,0,17),40,100,111,51,57,50,54,32,114,101,115,116,51,57,50,56,41,0};
static C_char C_TLS li590[] C_aligned={C_lihdr(0,0,26),40,100,111,51,57,53,50,32,97,114,103,115,51,57,53,52,32,116,97,105,108,51,57,53,53,41,0,0};
static C_char C_TLS li591[] C_aligned={C_lihdr(0,0,35),40,97,51,53,55,52,49,32,117,110,105,116,51,57,49,57,32,105,110,102,111,51,57,50,48,32,101,114,114,102,51,57,50,49,41,0,0,0};
static C_char C_TLS li592[] C_aligned={C_lihdr(0,0,26),40,97,51,54,49,53,57,32,97,114,103,115,51,57,48,55,32,101,114,114,102,51,57,48,56,41,0,0};
static C_char C_TLS li593[] C_aligned={C_lihdr(0,0,26),40,97,51,54,51,48,52,32,97,114,103,115,51,56,57,51,32,101,114,114,102,51,56,57,52,41,0,0};
static C_char C_TLS li594[] C_aligned={C_lihdr(0,0,17),40,100,111,51,56,55,48,32,116,97,105,108,51,56,55,50,41,0};
static C_char C_TLS li595[] C_aligned={C_lihdr(0,0,17),40,100,111,51,56,54,53,32,116,97,105,108,51,56,54,55,41,0};
static C_char C_TLS li596[] C_aligned={C_lihdr(0,0,20),40,100,111,51,56,53,52,32,99,108,97,117,115,101,115,51,56,53,54,41,0,0,0,0};
static C_char C_TLS li597[] C_aligned={C_lihdr(0,0,17),40,100,111,51,56,53,49,32,116,97,105,108,51,56,53,51,41,0};
static C_char C_TLS li598[] C_aligned={C_lihdr(0,0,35),40,97,51,54,51,53,48,32,117,110,105,116,51,57,48,51,32,105,110,102,111,51,57,48,52,32,101,114,114,102,51,57,48,53,41,0,0,0};
static C_char C_TLS li599[] C_aligned={C_lihdr(0,0,26),40,97,51,54,56,48,52,32,97,114,103,115,51,55,54,55,32,101,114,114,102,51,55,54,56,41,0,0};
static C_char C_TLS li600[] C_aligned={C_lihdr(0,0,35),40,97,51,54,56,55,50,32,117,110,105,116,51,55,55,57,32,105,110,102,111,51,55,56,48,32,101,114,114,102,51,55,56,49,41,0,0,0};
static C_char C_TLS li601[] C_aligned={C_lihdr(0,0,26),40,97,51,55,48,48,49,32,97,114,103,115,51,55,53,53,32,101,114,114,102,51,55,53,54,41,0,0};
static C_char C_TLS li602[] C_aligned={C_lihdr(0,0,35),40,97,51,55,48,50,55,32,117,110,105,116,51,55,54,48,32,105,110,102,111,51,55,54,49,32,101,114,114,102,51,55,54,50,41,0,0,0};
static C_char C_TLS li603[] C_aligned={C_lihdr(0,0,26),40,97,51,55,49,49,53,32,97,114,103,115,51,55,51,51,32,101,114,114,102,51,55,51,52,41,0,0};
static C_char C_TLS li604[] C_aligned={C_lihdr(0,0,17),40,100,111,51,55,52,49,32,105,116,101,114,51,55,52,51,41,0};
static C_char C_TLS li605[] C_aligned={C_lihdr(0,0,35),40,97,51,55,49,53,56,32,117,110,105,116,51,55,51,53,32,105,110,102,111,51,55,51,54,32,101,114,114,102,51,55,51,55,41,0,0,0};
static C_char C_TLS li606[] C_aligned={C_lihdr(0,0,26),40,97,51,55,51,57,53,32,97,114,103,115,51,55,51,48,32,101,114,114,102,51,55,51,49,41,0,0};
static C_char C_TLS li607[] C_aligned={C_lihdr(0,0,26),40,97,51,55,52,56,49,32,97,114,103,115,51,55,50,50,32,101,114,114,102,51,55,50,51,41,0,0};
static C_char C_TLS li608[] C_aligned={C_lihdr(0,0,14),40,97,51,55,53,51,51,32,101,51,55,50,56,41,0,0,0,0,0,0};
static C_char C_TLS li609[] C_aligned={C_lihdr(0,0,35),40,97,51,55,53,50,52,32,117,110,105,116,51,55,50,52,32,105,110,102,111,51,55,50,53,32,101,114,114,102,51,55,50,54,41,0,0,0};
static C_char C_TLS li610[] C_aligned={C_lihdr(0,0,26),40,97,51,55,53,56,51,32,97,114,103,115,51,55,49,53,32,101,114,114,102,51,55,49,54,41,0,0};
static C_char C_TLS li611[] C_aligned={C_lihdr(0,0,14),40,97,51,55,54,50,52,32,101,51,55,50,48,41,0,0,0,0,0,0};
static C_char C_TLS li612[] C_aligned={C_lihdr(0,0,35),40,97,51,55,54,49,56,32,117,110,105,116,51,55,49,55,32,105,110,102,111,51,55,49,56,32,101,114,114,102,51,55,49,57,41,0,0,0};
static C_char C_TLS li613[] C_aligned={C_lihdr(0,0,35),40,97,51,55,54,55,56,32,117,110,105,116,51,55,48,56,32,105,110,102,111,51,55,48,57,32,101,114,114,102,51,55,49,48,41,0,0,0};
static C_char C_TLS li614[] C_aligned={C_lihdr(0,0,35),40,97,51,55,55,51,57,32,117,110,105,116,51,55,48,50,32,105,110,102,111,51,55,48,51,32,101,114,114,102,51,55,48,52,41,0,0,0};
static C_char C_TLS li615[] C_aligned={C_lihdr(0,0,26),40,97,51,55,55,57,51,32,97,114,103,115,51,54,57,54,32,101,114,114,102,51,54,57,55,41,0,0};
static C_char C_TLS li616[] C_aligned={C_lihdr(0,0,35),40,97,51,55,56,50,51,32,117,110,105,116,51,54,57,56,32,105,110,102,111,51,54,57,57,32,101,114,114,102,51,55,48,48,41,0,0,0};
static C_char C_TLS li617[] C_aligned={C_lihdr(0,0,26),40,97,51,56,48,52,50,32,97,114,103,115,51,54,56,57,32,101,114,114,102,51,54,57,48,41,0,0};
static C_char C_TLS li618[] C_aligned={C_lihdr(0,0,26),40,97,51,56,48,54,56,32,97,114,103,115,51,54,55,54,32,101,114,114,102,51,54,55,55,41,0,0};
static C_char C_TLS li619[] C_aligned={C_lihdr(0,0,27),40,97,51,56,49,54,51,32,115,116,114,51,54,56,54,32,46,32,97,114,103,115,51,54,56,55,41,0,0,0};
static C_char C_TLS li620[] C_aligned={C_lihdr(0,0,35),40,97,51,56,49,52,51,32,117,110,105,116,51,54,56,49,32,105,110,102,111,51,54,56,50,32,101,114,114,102,51,54,56,51,41,0,0,0};
static C_char C_TLS li621[] C_aligned={C_lihdr(0,0,26),40,97,51,56,50,56,49,32,97,114,103,115,51,54,54,57,32,101,114,114,102,51,54,55,48,41,0,0};
static C_char C_TLS li622[] C_aligned={C_lihdr(0,0,35),40,97,51,56,51,48,51,32,117,110,105,116,51,54,55,49,32,105,110,102,111,51,54,55,50,32,101,114,114,102,51,54,55,51,41,0,0,0};
static C_char C_TLS li623[] C_aligned={C_lihdr(0,0,26),40,97,51,56,51,53,54,32,97,114,103,115,51,54,53,53,32,101,114,114,102,51,54,53,54,41,0,0};
static C_char C_TLS li624[] C_aligned={C_lihdr(0,0,17),40,100,111,51,54,54,50,32,97,114,103,115,51,54,54,52,41,0};
static C_char C_TLS li625[] C_aligned={C_lihdr(0,0,35),40,97,51,56,51,55,56,32,117,110,105,116,51,54,53,55,32,105,110,102,111,51,54,53,56,32,101,114,114,102,51,54,53,57,41,0,0,0};
static C_char C_TLS li626[] C_aligned={C_lihdr(0,0,26),40,97,51,56,53,49,48,32,97,114,103,115,51,54,52,56,32,101,114,114,102,51,54,52,57,41,0,0};
static C_char C_TLS li627[] C_aligned={C_lihdr(0,0,35),40,97,51,56,53,51,54,32,117,110,105,116,51,54,53,48,32,105,110,102,111,51,54,53,49,32,101,114,114,102,51,54,53,50,41,0,0,0};
static C_char C_TLS li628[] C_aligned={C_lihdr(0,0,26),40,97,51,56,54,52,54,32,97,114,103,115,51,54,52,52,32,101,114,114,102,51,54,52,53,41,0,0};
static C_char C_TLS li629[] C_aligned={C_lihdr(0,0,26),40,97,51,56,56,48,50,32,97,114,103,115,51,54,48,55,32,101,114,114,102,51,54,48,56,41,0,0};
static C_char C_TLS li630[] C_aligned={C_lihdr(0,0,35),40,97,51,56,56,50,48,32,117,110,105,116,51,54,48,57,32,105,110,102,111,51,54,49,48,32,101,114,114,102,51,54,49,49,41,0,0,0};
static C_char C_TLS li631[] C_aligned={C_lihdr(0,0,26),40,97,51,56,56,55,51,32,97,114,103,115,51,54,48,49,32,101,114,114,102,51,54,48,50,41,0,0};
static C_char C_TLS li632[] C_aligned={C_lihdr(0,0,26),40,97,51,57,48,50,53,32,97,114,103,115,51,53,57,56,32,101,114,114,102,51,53,57,57,41,0,0};
static C_char C_TLS li633[] C_aligned={C_lihdr(0,0,26),40,97,51,57,49,54,52,32,97,114,103,115,51,53,57,53,32,101,114,114,102,51,53,57,54,41,0,0};
static C_char C_TLS li634[] C_aligned={C_lihdr(0,0,26),40,97,51,57,50,56,52,32,97,114,103,115,51,53,55,52,32,101,114,114,102,51,53,55,53,41,0,0};
static C_char C_TLS li635[] C_aligned={C_lihdr(0,0,35),40,97,51,57,51,49,53,32,117,110,105,116,51,53,55,55,32,105,110,102,111,51,53,55,56,32,101,114,114,102,51,53,55,57,41,0,0,0};
static C_char C_TLS li636[] C_aligned={C_lihdr(0,0,26),40,97,51,57,52,48,55,32,97,114,103,115,51,53,54,56,32,101,114,114,102,51,53,54,57,41,0,0};
static C_char C_TLS li637[] C_aligned={C_lihdr(0,0,35),40,97,51,57,52,50,53,32,117,110,105,116,51,53,55,48,32,105,110,102,111,51,53,55,49,32,101,114,114,102,51,53,55,50,41,0,0,0};
static C_char C_TLS li638[] C_aligned={C_lihdr(0,0,35),40,97,51,57,52,57,57,32,117,110,105,116,51,53,53,55,32,105,110,102,111,51,53,53,56,32,101,114,114,102,51,53,53,57,41,0,0,0};
static C_char C_TLS li639[] C_aligned={C_lihdr(0,0,26),40,97,51,57,53,57,53,32,97,114,103,115,51,53,52,53,32,101,114,114,102,51,53,52,54,41,0,0};
static C_char C_TLS li640[] C_aligned={C_lihdr(0,0,35),40,97,51,57,54,48,53,32,117,110,105,116,51,53,52,55,32,105,110,102,111,51,53,52,56,32,101,114,114,102,51,53,52,57,41,0,0,0};
static C_char C_TLS li641[] C_aligned={C_lihdr(0,0,20),40,97,51,57,55,56,49,32,117,51,49,57,53,32,112,51,49,57,54,41,0,0,0,0};
static C_char C_TLS li642[] C_aligned={C_lihdr(0,0,20),40,97,51,57,56,48,55,32,101,51,49,54,55,32,112,51,49,54,56,41,0,0,0,0};
static C_char C_TLS li643[] C_aligned={C_lihdr(0,0,12),40,112,112,97,116,32,112,51,49,51,48,41,0,0,0,0};
static C_char C_TLS li644[] C_aligned={C_lihdr(0,0,35),40,97,51,57,56,50,49,32,116,121,112,51,49,50,54,32,112,97,116,51,49,50,55,32,46,32,97,114,103,115,51,49,50,56,41,0,0,0};
static C_char C_TLS li645[] C_aligned={C_lihdr(0,0,20),40,97,51,57,57,50,52,32,114,51,49,50,51,32,112,51,49,50,52,41,0,0,0,0};
static C_char C_TLS li646[] C_aligned={C_lihdr(0,0,20),40,97,51,57,57,51,52,32,116,51,48,55,52,32,112,51,48,55,53,41,0,0,0,0};
static C_char C_TLS li647[] C_aligned={C_lihdr(0,0,23),40,97,51,57,57,52,56,32,111,98,106,57,52,53,32,112,111,114,116,57,52,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li648[] C_aligned={C_lihdr(0,0,71),40,100,111,55,48,56,32,100,55,49,48,32,107,55,49,49,32,112,55,49,50,32,107,60,55,49,51,32,107,62,55,49,52,32,102,55,49,53,32,102,62,55,49,54,32,102,60,55,49,55,32,111,55,49,56,32,120,55,49,57,32,110,55,50,48,32,101,55,50,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li649[] C_aligned={C_lihdr(0,0,14),40,100,111,55,48,50,32,107,101,121,55,48,52,41,0,0,0,0,0,0};
static C_char C_TLS li650[] C_aligned={C_lihdr(0,0,24),40,97,52,48,49,55,52,32,109,101,115,115,56,56,32,46,32,100,97,116,97,56,57,41};
static C_char C_TLS li651[] C_aligned={C_lihdr(0,0,22),40,97,52,48,49,56,48,32,102,117,110,99,51,56,32,105,110,102,111,51,57,41,0,0,0,0,0,0};
static C_char C_TLS li652[] C_aligned={C_lihdr(0,0,24),40,97,52,48,50,51,50,32,115,112,101,99,51,54,32,46,32,98,111,100,121,51,55,41};
static C_char C_TLS li653[] C_aligned={C_lihdr(0,0,10),40,116,111,112,108,101,118,101,108,41,0,0};


/* from k34572 */
static C_word C_fcall stub6172(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub6172(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
load_sal_file(t0);
return C_r;}

/* from k34557 in hush in k34252 in k34249 in k34246 in k34121 in k34118 in k34115 in k34112 in k34109 in k34106 in k34103 in k34100 in k34097 in k34094 in k34091 in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
C_noret_decl(stub6166)
static void C_ccall stub6166(C_word C_c,C_word C_self,C_word C_k,C_word C_buf) C_noret;
static void C_ccall stub6166(C_word C_c,C_word C_self,C_word C_k,C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int C_level=C_save_callback_continuation(&C_a,C_k);
scheduler_hush();
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from k34551 */
C_noret_decl(stub6161)
static void C_ccall stub6161(C_word C_c,C_word C_self,C_word C_k,C_word C_buf,C_word C_a0) C_noret;
static void C_ccall stub6161(C_word C_c,C_word C_self,C_word C_k,C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
int C_level=C_save_callback_continuation(&C_a,C_k);
scheduler_stop(t0);
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from k34535 in cont in k34252 in k34249 in k34246 in k34121 in k34118 in k34115 in k34112 in k34109 in k34106 in k34103 in k34100 in k34097 in k34094 in k34091 in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
C_noret_decl(stub6156)
static void C_ccall stub6156(C_word C_c,C_word C_self,C_word C_k,C_word C_buf) C_noret;
static void C_ccall stub6156(C_word C_c,C_word C_self,C_word C_k,C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int C_level=C_save_callback_continuation(&C_a,C_k);
scheduler_cont();
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from k34526 in pause in k34252 in k34249 in k34246 in k34121 in k34118 in k34115 in k34112 in k34109 in k34106 in k34103 in k34100 in k34097 in k34094 in k34091 in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
C_noret_decl(stub6152)
static void C_ccall stub6152(C_word C_c,C_word C_self,C_word C_k,C_word C_buf) C_noret;
static void C_ccall stub6152(C_word C_c,C_word C_self,C_word C_k,C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int C_level=C_save_callback_continuation(&C_a,C_k);
scheduler_pause();
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from k34517 in paused? in k34252 in k34249 in k34246 in k34121 in k34118 in k34115 in k34112 in k34109 in k34106 in k34103 in k34100 in k34097 in k34094 in k34091 in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
C_noret_decl(stub6148)
static void C_ccall stub6148(C_word C_c,C_word C_self,C_word C_k,C_word C_buf) C_noret;
static void C_ccall stub6148(C_word C_c,C_word C_self,C_word C_k,C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int C_level=C_save_callback_continuation(&C_a,C_k);
C_r=C_mk_bool(scheduler_is_paused());
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from k34511 */
C_noret_decl(stub6141)
static void C_ccall stub6141(C_word C_c,C_word C_self,C_word C_k,C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_noret;
static void C_ccall stub6141(C_word C_c,C_word C_self,C_word C_k,C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_word t0=(C_word )(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int C_level=C_save_callback_continuation(&C_a,C_k);
scheduler_sprout(t0,t1,t2);
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from k34491 in scheduler-set-time-milliseconds in k34252 in k34249 in k34246 in k34121 in k34118 in k34115 in k34112 in k34109 in k34106 in k34103 in k34100 in k34097 in k34094 in k34091 in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
C_noret_decl(stub6133)
static void C_ccall stub6133(C_word C_c,C_word C_self,C_word C_k,C_word C_buf,C_word C_a0) C_noret;
static void C_ccall stub6133(C_word C_c,C_word C_self,C_word C_k,C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_truep(C_a0);
int C_level=C_save_callback_continuation(&C_a,C_k);
scheduler_set_time_milliseconds(t0);
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from k34482 in time-format in k34252 in k34249 in k34246 in k34121 in k34118 in k34115 in k34112 in k34109 in k34106 in k34103 in k34100 in k34097 in k34094 in k34091 in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
C_noret_decl(stub6128)
static void C_ccall stub6128(C_word C_c,C_word C_self,C_word C_k,C_word C_buf) C_noret;
static void C_ccall stub6128(C_word C_c,C_word C_self,C_word C_k,C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int C_level=C_save_callback_continuation(&C_a,C_k);
C_r=C_mk_bool(scheduler_is_time_milliseconds());
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from current-time-seconds in k34252 in k34249 in k34246 in k34121 in k34118 in k34115 in k34112 in k34109 in k34106 in k34103 in k34100 in k34097 in k34094 in k34091 in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
#define return(x) C_cblock C_r = (C_flonum(&C_a,(x))); goto C_ret; C_cblockend
static C_word C_fcall stub6125(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub6125(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
 C_return( (Time::getMillisecondCounterHiRes() / 1000.0) );
C_ret:
#undef return

return C_r;}

/* from current-time-milliseconds in k34252 in k34249 in k34246 in k34121 in k34118 in k34115 in k34112 in k34109 in k34106 in k34103 in k34100 in k34097 in k34094 in k34091 in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
#define return(x) C_cblock C_r = (C_flonum(&C_a,(x))); goto C_ret; C_cblockend
static C_word C_fcall stub6122(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub6122(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
 C_return( Time::getMillisecondCounterHiRes());
C_ret:
#undef return

return C_r;}

/* from k34463 in print-error in k34252 in k34249 in k34246 in k34121 in k34118 in k34115 in k34112 in k34109 in k34106 in k34103 in k34100 in k34097 in k34094 in k34091 in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static C_word C_fcall stub6117(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub6117(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
print_error(t0);
return C_r;}

/* from k34449 in print-message in k34252 in k34249 in k34246 in k34121 in k34118 in k34115 in k34112 in k34109 in k34106 in k34103 in k34100 in k34097 in k34094 in k34091 in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static C_word C_fcall stub6111(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub6111(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
print_message(t0);
return C_r;}

/* from f_34244 in cs:clear in k34121 in k34118 in k34115 in k34112 in k34109 in k34106 in k34103 in k34100 in k34097 in k34094 in k34091 in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static C_word C_fcall stub6077(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub6077(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
cs_clear_score();
return C_r;}

/* from k34210 */
static C_word C_fcall stub6070(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub6070(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
int t1=(int )C_unfix(C_a1);
C_word t2=(C_word )(C_a2);
cs_send_score_event(t0,t1,t2);
return C_r;}

/* from k34153 */
static C_word C_fcall stub6059(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub6059(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
int t1=(int )C_unfix(C_a1);
C_word t2=(C_word )(C_a2);
cs_send_score_event(t0,t1,t2);
return C_r;}

/* from f_34089 in mp:inhook in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static C_word C_fcall stub6003(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub6003(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_word t0=(C_word )(C_a0);
set_input_hook(t0);
return C_r;}

/* from f_34084 in mp:inhook in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static C_word C_fcall stub5994(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub5994(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_word t0=(C_word )(C_a0);
set_input_hook(t0);
return C_r;}

/* from k34028 */
static C_word C_fcall stub5987(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub5987(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
mp_message(t0);
return C_r;}

/* from k34016 */
static C_word C_fcall stub5978(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5978(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_data(t0,t1,t2,t3,t4);
return C_r;}

/* from k33988 */
static C_word C_fcall stub5963(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5963(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_data(t0,t1,t2,t3,t4);
return C_r;}

/* from k33960 */
static C_word C_fcall stub5948(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5948(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_data(t0,t1,t2,t3,t4);
return C_r;}

/* from k33932 */
static C_word C_fcall stub5933(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5933(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_data(t0,t1,t2,t3,t4);
return C_r;}

/* from k33904 */
static C_word C_fcall stub5917(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5917(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_data(t0,t1,t2,t3,t4);
return C_r;}

/* from k33876 */
static C_word C_fcall stub5901(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5901(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_data(t0,t1,t2,t3,t4);
return C_r;}

/* from k33848 */
static C_word C_fcall stub5885(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5885(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_data(t0,t1,t2,t3,t4);
return C_r;}

/* from k33820 */
static C_word C_fcall stub5870(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5870(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
double t0=(double )C_c_double(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_note(t0,t1,t2,t3,t4);
return C_r;}

/* from k33792 */
static C_word C_fcall stub5853(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5853(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
double t0=(double )C_c_double(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_note(t0,t1,t2,t3,t4);
return C_r;}

/* from k33761 */
static C_word C_fcall stub5835(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub5835(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
int t2=(int )C_unfix(C_a2);
mm_set_data(t0,t1,t2);
return C_r;}

/* from k33738 */
static C_word C_fcall stub5824(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub5824(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_fix((C_word)mm_data(t0,t1));
return C_r;}

/* from k33716 */
static C_word C_fcall stub5813(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub5813(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
int t2=(int )C_unfix(C_a2);
mm_set_data(t0,t1,t2);
return C_r;}

/* from k33696 */
static C_word C_fcall stub5803(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub5803(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
int t2=(int )C_unfix(C_a2);
mm_set_data(t0,t1,t2);
return C_r;}

/* from k33661 */
static C_word C_fcall stub5790(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub5790(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_fix((C_word)mm_data(t0,t1));
return C_r;}

/* from k33645 */
static C_word C_fcall stub5782(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub5782(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_fix((C_word)mm_data(t0,t1));
return C_r;}

/* from k33617 */
static C_word C_fcall stub5769(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub5769(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
int t2=(int )C_unfix(C_a2);
mm_set_data(t0,t1,t2);
return C_r;}

/* from k33594 */
static C_word C_fcall stub5758(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub5758(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_fix((C_word)mm_data(t0,t1));
return C_r;}

/* from k33575 */
static C_word C_fcall stub5747(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub5747(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
int t2=(int )C_unfix(C_a2);
mm_set_data(t0,t1,t2);
return C_r;}

/* from k33552 */
static C_word C_fcall stub5736(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub5736(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_fix((C_word)mm_data(t0,t1));
return C_r;}

/* from k33533 */
static C_word C_fcall stub5726(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub5726(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
mm_set_chan(t0,t1);
return C_r;}

/* from k33514 */
static C_word C_fcall stub5717(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub5717(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
C_r=C_fix((C_word)mm_chan(t0));
return C_r;}

/* from k33499 */
static C_word C_fcall stub5708(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub5708(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
double t1=(double )C_c_double(C_a1);
mm_set_time(t0,t1);
return C_r;}

/* from k33480 */
static C_word C_fcall stub5698(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub5698(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
C_r=C_flonum(&C_a,mm_time(t0));
return C_r;}

/* from k33465 */
static C_word C_fcall stub5690(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub5690(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
C_r=C_mpointer_or_false(&C_a,(void*)mm_copy(t0));
return C_r;}

/* from k33450 */
static C_word C_fcall stub5682(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub5682(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
mm_free(t0);
return C_r;}

/* from k33432 */
static C_word C_fcall stub5674(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub5674(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_mk_bool(mm_is_type(t0,t1));
return C_r;}

/* from k33005 */
static C_word C_fcall stub5659(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5659(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
C_r=C_mpointer_or_false(&C_a,(void*)mm_make(t0,t1,t2,t3,t4));
return C_r;}

/* from k32962 */
static C_word C_fcall stub5580(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub5580(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_mk_bool(mm_is_type(t0,t1));
return C_r;}

/* from k32535 */
static C_word C_fcall stub5565(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5565(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
C_r=C_mpointer_or_false(&C_a,(void*)mm_make(t0,t1,t2,t3,t4));
return C_r;}

/* from k32492 */
static C_word C_fcall stub5486(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub5486(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_mk_bool(mm_is_type(t0,t1));
return C_r;}

/* from k32065 */
static C_word C_fcall stub5471(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5471(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
C_r=C_mpointer_or_false(&C_a,(void*)mm_make(t0,t1,t2,t3,t4));
return C_r;}

/* from k32022 */
static C_word C_fcall stub5392(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub5392(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_mk_bool(mm_is_type(t0,t1));
return C_r;}

/* from k31320 */
static C_word C_fcall stub5376(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5376(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
C_r=C_mpointer_or_false(&C_a,(void*)mm_make(t0,t1,t2,t3,t4));
return C_r;}

/* from k31274 */
static C_word C_fcall stub5260(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub5260(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_mk_bool(mm_is_type(t0,t1));
return C_r;}

/* from k30572 */
static C_word C_fcall stub5244(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5244(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
C_r=C_mpointer_or_false(&C_a,(void*)mm_make(t0,t1,t2,t3,t4));
return C_r;}

/* from k30526 */
static C_word C_fcall stub5128(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub5128(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_mk_bool(mm_is_type(t0,t1));
return C_r;}

/* from k30099 */
static C_word C_fcall stub5113(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5113(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
C_r=C_mpointer_or_false(&C_a,(void*)mm_make(t0,t1,t2,t3,t4));
return C_r;}

/* from k30056 */
static C_word C_fcall stub5034(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub5034(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_mk_bool(mm_is_type(t0,t1));
return C_r;}

/* from k29354 */
static C_word C_fcall stub5018(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5018(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
C_r=C_mpointer_or_false(&C_a,(void*)mm_make(t0,t1,t2,t3,t4));
return C_r;}

/* from k7947 */
static C_word C_fcall stub386(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub386(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
C_r=C_flonum(&C_a,jn(t0,t1));
return C_r;}

/* from tb:ranbrown in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static C_word C_fcall stub379(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub379(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,Toolbox::ranbrown());
return C_r;}

/* from tb:ranpink in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static C_word C_fcall stub376(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub376(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,Toolbox::ranpink());
return C_r;}

/* from k7925 */
static C_word C_fcall stub373(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub373(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_fix((C_word)Toolbox::ranpoisson(t0));
return C_r;}

/* from tb:rancauchy in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static C_word C_fcall stub369(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub369(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,Toolbox::rancauchy());
return C_r;}

/* from k7915 */
static C_word C_fcall stub365(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub365(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_flonum(&C_a,Toolbox::rangamma(t0));
return C_r;}

/* from k7908 */
static C_word C_fcall stub359(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub359(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
C_r=C_flonum(&C_a,Toolbox::ranbeta(t0,t1));
return C_r;}

/* from k7897 */
static C_word C_fcall stub353(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub353(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_flonum(&C_a,Toolbox::ranexp(t0));
return C_r;}

/* from k7890 */
static C_word C_fcall stub347(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub347(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
C_r=C_flonum(&C_a,Toolbox::rangauss(t0,t1));
return C_r;}

/* from tb:ranmiddle in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static C_word C_fcall stub342(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub342(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,Toolbox::ranmiddle());
return C_r;}

/* from tb:ranhigh in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static C_word C_fcall stub339(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub339(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,Toolbox::ranhigh());
return C_r;}

/* from tb:ranlow in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static C_word C_fcall stub336(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub336(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,Toolbox::ranlow());
return C_r;}

/* from k7870 */
static C_word C_fcall stub331(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub331(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
C_r=C_flonum(&C_a,Toolbox::ran(t0,t1));
return C_r;}

/* from k7859 */
static C_word C_fcall stub325(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub325(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_fix((C_word)Toolbox::ran(t0,t1));
return C_r;}

/* from k7848 */
static C_word C_fcall stub319(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub319(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_flonum(&C_a,Toolbox::ran(t0));
return C_r;}

/* from k7841 */
static C_word C_fcall stub315(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub315(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
C_r=C_fix((C_word)Toolbox::ran(t0));
return C_r;}

/* from tb:ran-set! in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static C_word C_fcall stub311(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub311(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_s64 t0=(C_s64 )C_num_to_int64(C_a0);
Toolbox::ranstate_set(t0);
return C_r;}

/* from k7831 */
static C_word C_fcall stub306(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub306(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_flonum(&C_a,Toolbox::hertz_to_keynum(t0));
return C_r;}

/* from k7824 */
static C_word C_fcall stub302(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub302(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_fix((C_word)Toolbox::keynum_to_pc(t0));
return C_r;}

/* from k7817 */
static C_word C_fcall stub297(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub297(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_flonum(&C_a,Toolbox::keynum_to_hertz(t0));
return C_r;}

/* from k7810 */
static C_word C_fcall stub289(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3) C_regparm;
C_regparm static C_word C_fcall stub289(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
int t1=(int )C_unfix(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
C_r=C_flonum(&C_a,Toolbox::geoseg(t0,t1,t2,t3));
return C_r;}

/* from k7791 */
static C_word C_fcall stub278(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3) C_regparm;
C_regparm static C_word C_fcall stub278(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
int t1=(int )C_unfix(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
C_r=C_flonum(&C_a,Toolbox::explseg(t0,t1,t2,t3));
return C_r;}

/* from k7772 */
static C_word C_fcall stub271(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub271(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_fix((C_word)Toolbox::scaler_to_cents(t0));
return C_r;}

/* from k7765 */
static C_word C_fcall stub266(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub266(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
C_r=C_flonum(&C_a,Toolbox::cents_to_scaler(t0));
return C_r;}

/* from k7758 */
static C_word C_fcall stub259(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub259(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
C_r=C_flonum(&C_a,Toolbox::rhythm_to_seconds(t0,t1,t2));
return C_r;}

/* from k7743 */
static C_word C_fcall stub251(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub251(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
C_r=C_flonum(&C_a,Toolbox::quantize(t0,t1));
return C_r;}

/* from k7732 */
static C_word C_fcall stub246(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub246(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_fix((C_word)Toolbox::float_to_fixnum(t0));
return C_r;}

/* from k7725 */
static C_word C_fcall stub237(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4,C_word C_a5) C_regparm;
C_regparm static C_word C_fcall stub237(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4,C_word C_a5){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
float t5=(float )C_c_double(C_a5);
C_r=C_fix((C_word)Toolbox::discrete(t0,t1,t2,t3,t4,t5));
return C_r;}

/* from k7698 */
static C_word C_fcall stub222(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4,C_word C_a5) C_regparm;
C_regparm static C_word C_fcall stub222(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4,C_word C_a5){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
float t5=(float )C_c_double(C_a5);
C_r=C_flonum(&C_a,Toolbox::rescale(t0,t1,t2,t3,t4,t5));
return C_r;}

/* from k6967 */
static C_word C_fcall stub95(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub95(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
set_current_directory(t0);
return C_r;}

/* from f_6949 in cwd in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static C_word C_fcall stub90(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub90(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_mpointer(&C_a,(void*)get_current_directory());
return C_r;}

C_noret_decl(C_grace_toplevel)
C_externexport void C_ccall C_grace_toplevel(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6342)
static void C_ccall f_6342(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6345)
static void C_ccall f_6345(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6348)
static void C_ccall f_6348(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6351)
static void C_ccall f_6351(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40233)
static void C_ccall f_40233(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_40233)
static void C_ccall f_40233r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_6642)
static void C_ccall f_6642(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6646)
static void C_ccall f_6646(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40181)
static void C_ccall f_40181(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_40228)
static void C_ccall f_40228(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40218)
static void C_ccall f_40218(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40185)
static void C_ccall f_40185(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6649)
static void C_ccall f_6649(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40175)
static void C_ccall f_40175(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_40175)
static void C_ccall f_40175r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_6942)
static void C_ccall f_6942(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10006)
static void C_ccall f_10006(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39959)
static void C_fcall f_39959(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_40173)
static void C_ccall f_40173(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39993)
static void C_ccall f_39993(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40005)
static void C_ccall f_40005(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40009)
static void C_ccall f_40009(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40013)
static void C_ccall f_40013(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40157)
static void C_ccall f_40157(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40019)
static void C_fcall f_40019(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7,C_word t8,C_word t9,C_word t10,C_word t11,C_word t12,C_word t13) C_noret;
C_noret_decl(f_40039)
static void C_fcall f_40039(C_word t0,C_word t1) C_noret;
C_noret_decl(f_40042)
static void C_fcall f_40042(C_word t0,C_word t1) C_noret;
C_noret_decl(f_40050)
static void C_ccall f_40050(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40057)
static void C_ccall f_40057(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40060)
static void C_ccall f_40060(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40064)
static void C_ccall f_40064(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40071)
static void C_ccall f_40071(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40074)
static void C_ccall f_40074(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40078)
static void C_ccall f_40078(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40085)
static void C_ccall f_40085(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40029)
static void C_ccall f_40029(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39982)
static void C_ccall f_39982(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39972)
static void C_ccall f_39972(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39975)
static void C_ccall f_39975(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10009)
static void C_ccall f_10009(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39949)
static void C_ccall f_39949(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_39957)
static void C_ccall f_39957(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11074)
static void C_ccall f_11074(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39935)
static void C_ccall f_39935(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_39943)
static void C_ccall f_39943(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39947)
static void C_ccall f_39947(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22229)
static void C_ccall f_22229(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22280)
static void C_ccall f_22280(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39925)
static void C_ccall f_39925(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_39933)
static void C_ccall f_39933(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22385)
static void C_ccall f_22385(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39822)
static void C_ccall f_39822(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...) C_noret;
C_noret_decl(f_39822)
static void C_ccall f_39822r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t5) C_noret;
C_noret_decl(f_39885)
static void C_ccall f_39885(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39889)
static void C_ccall f_39889(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39903)
static void C_fcall f_39903(C_word t0,C_word t1) C_noret;
C_noret_decl(f_39825)
static void C_fcall f_39825(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_39845)
static void C_ccall f_39845(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39849)
static void C_ccall f_39849(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22388)
static void C_ccall f_22388(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39808)
static void C_ccall f_39808(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_39816)
static void C_ccall f_39816(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39820)
static void C_ccall f_39820(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22581)
static void C_ccall f_22581(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39782)
static void C_ccall f_39782(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_39786)
static void C_ccall f_39786(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39792)
static void C_ccall f_39792(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39803)
static void C_ccall f_39803(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39799)
static void C_ccall f_39799(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22650)
static void C_ccall f_22650(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39760)
static void C_ccall f_39760(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23895)
static void C_ccall f_23895(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39740)
static void C_ccall f_39740(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23898)
static void C_ccall f_23898(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39700)
static void C_ccall f_39700(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23901)
static void C_ccall f_23901(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39606)
static void C_ccall f_39606(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_39610)
static void C_ccall f_39610(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39613)
static void C_ccall f_39613(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39631)
static void C_ccall f_39631(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39634)
static void C_ccall f_39634(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39665)
static void C_ccall f_39665(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39637)
static void C_fcall f_39637(C_word t0,C_word t1) C_noret;
C_noret_decl(f_39643)
static void C_ccall f_39643(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39596)
static void C_ccall f_39596(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_39590)
static void C_ccall f_39590(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23904)
static void C_ccall f_23904(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39498)
static void C_ccall f_39498(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39500)
static void C_ccall f_39500(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_39504)
static void C_ccall f_39504(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39507)
static void C_ccall f_39507(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39510)
static void C_ccall f_39510(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39550)
static void C_ccall f_39550(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39542)
static void C_ccall f_39542(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39513)
static void C_ccall f_39513(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39516)
static void C_ccall f_39516(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39519)
static void C_ccall f_39519(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39490)
static void C_ccall f_39490(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23907)
static void C_ccall f_23907(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39462)
static void C_ccall f_39462(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23910)
static void C_ccall f_23910(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39426)
static void C_ccall f_39426(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_39438)
static void C_ccall f_39438(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39434)
static void C_ccall f_39434(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39408)
static void C_ccall f_39408(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_39402)
static void C_ccall f_39402(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23913)
static void C_ccall f_23913(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39316)
static void C_ccall f_39316(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_39320)
static void C_ccall f_39320(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39323)
static void C_ccall f_39323(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39326)
static void C_ccall f_39326(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39339)
static void C_ccall f_39339(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39285)
static void C_ccall f_39285(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_39289)
static void C_ccall f_39289(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39304)
static void C_ccall f_39304(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39279)
static void C_ccall f_39279(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23916)
static void C_ccall f_23916(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39165)
static void C_ccall f_39165(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_39181)
static void C_ccall f_39181(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39192)
static void C_ccall f_39192(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39159)
static void C_ccall f_39159(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23972)
static void C_ccall f_23972(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39026)
static void C_ccall f_39026(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_39049)
static void C_ccall f_39049(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39046)
static void C_ccall f_39046(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39020)
static void C_ccall f_39020(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23975)
static void C_ccall f_23975(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38874)
static void C_ccall f_38874(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_38892)
static void C_ccall f_38892(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38901)
static void C_ccall f_38901(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38868)
static void C_ccall f_38868(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23978)
static void C_ccall f_23978(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38821)
static void C_ccall f_38821(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_38825)
static void C_ccall f_38825(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38828)
static void C_ccall f_38828(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38844)
static void C_ccall f_38844(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38803)
static void C_ccall f_38803(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_38797)
static void C_ccall f_38797(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23981)
static void C_ccall f_23981(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38721)
static void C_ccall f_38721(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24120)
static void C_ccall f_24120(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38647)
static void C_ccall f_38647(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_38654)
static void C_ccall f_38654(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38641)
static void C_ccall f_38641(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24123)
static void C_ccall f_24123(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38537)
static void C_ccall f_38537(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_38545)
static void C_ccall f_38545(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38511)
static void C_ccall f_38511(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_38528)
static void C_ccall f_38528(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38519)
static void C_fcall f_38519(C_word t0,C_word t1) C_noret;
C_noret_decl(f_38505)
static void C_ccall f_38505(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24126)
static void C_ccall f_24126(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38461)
static void C_ccall f_38461(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24129)
static void C_ccall f_24129(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38379)
static void C_ccall f_38379(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_38390)
static void C_ccall f_38390(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38392)
static void C_fcall f_38392(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_38421)
static void C_ccall f_38421(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38357)
static void C_ccall f_38357(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_38373)
static void C_ccall f_38373(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38351)
static void C_ccall f_38351(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24132)
static void C_ccall f_24132(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38304)
static void C_ccall f_38304(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_38308)
static void C_ccall f_38308(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38315)
static void C_ccall f_38315(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38282)
static void C_ccall f_38282(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_38298)
static void C_ccall f_38298(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38276)
static void C_ccall f_38276(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24135)
static void C_ccall f_24135(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38144)
static void C_ccall f_38144(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_38184)
static void C_ccall f_38184(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38148)
static void C_ccall f_38148(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38164)
static void C_ccall f_38164(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_38164)
static void C_ccall f_38164r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_38176)
static void C_ccall f_38176(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38180)
static void C_ccall f_38180(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38172)
static void C_ccall f_38172(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38069)
static void C_ccall f_38069(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_38112)
static void C_ccall f_38112(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38116)
static void C_ccall f_38116(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38076)
static void C_fcall f_38076(C_word t0,C_word t1) C_noret;
C_noret_decl(f_38087)
static void C_ccall f_38087(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38063)
static void C_ccall f_38063(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24138)
static void C_ccall f_24138(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38043)
static void C_ccall f_38043(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_38037)
static void C_ccall f_38037(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24141)
static void C_ccall f_24141(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38017)
static void C_ccall f_38017(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38021)
static void C_ccall f_38021(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38009)
static void C_ccall f_38009(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24144)
static void C_ccall f_24144(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37989)
static void C_ccall f_37989(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37993)
static void C_ccall f_37993(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37981)
static void C_ccall f_37981(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24147)
static void C_ccall f_24147(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37961)
static void C_ccall f_37961(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37965)
static void C_ccall f_37965(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37953)
static void C_ccall f_37953(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24150)
static void C_ccall f_24150(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37933)
static void C_ccall f_37933(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37937)
static void C_ccall f_37937(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37925)
static void C_ccall f_37925(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24153)
static void C_ccall f_24153(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37824)
static void C_ccall f_37824(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_37794)
static void C_ccall f_37794(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_37818)
static void C_ccall f_37818(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37788)
static void C_ccall f_37788(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24156)
static void C_ccall f_24156(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37738)
static void C_ccall f_37738(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37740)
static void C_ccall f_37740(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_37744)
static void C_ccall f_37744(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37772)
static void C_ccall f_37772(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37764)
static void C_ccall f_37764(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37760)
static void C_ccall f_37760(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37747)
static void C_ccall f_37747(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37730)
static void C_ccall f_37730(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24159)
static void C_ccall f_24159(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37677)
static void C_ccall f_37677(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37679)
static void C_ccall f_37679(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_37683)
static void C_ccall f_37683(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37714)
static void C_ccall f_37714(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37706)
static void C_ccall f_37706(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37702)
static void C_ccall f_37702(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37686)
static void C_ccall f_37686(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37689)
static void C_ccall f_37689(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37669)
static void C_ccall f_37669(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24162)
static void C_ccall f_24162(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37619)
static void C_ccall f_37619(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_37633)
static void C_ccall f_37633(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37625)
static void C_ccall f_37625(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_37584)
static void C_ccall f_37584(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_37617)
static void C_ccall f_37617(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37578)
static void C_ccall f_37578(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24165)
static void C_ccall f_24165(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37525)
static void C_ccall f_37525(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_37529)
static void C_ccall f_37529(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37542)
static void C_ccall f_37542(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37534)
static void C_ccall f_37534(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_37482)
static void C_ccall f_37482(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_37515)
static void C_ccall f_37515(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37476)
static void C_ccall f_37476(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24168)
static void C_ccall f_24168(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37396)
static void C_ccall f_37396(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_37390)
static void C_ccall f_37390(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24171)
static void C_ccall f_24171(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37159)
static void C_ccall f_37159(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_37163)
static void C_ccall f_37163(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37171)
static void C_fcall f_37171(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_37194)
static void C_ccall f_37194(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37197)
static void C_ccall f_37197(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37200)
static void C_ccall f_37200(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37203)
static void C_ccall f_37203(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37263)
static void C_ccall f_37263(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37270)
static void C_ccall f_37270(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37280)
static void C_ccall f_37280(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37290)
static void C_ccall f_37290(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37304)
static void C_ccall f_37304(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37314)
static void C_ccall f_37314(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37324)
static void C_ccall f_37324(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37334)
static void C_ccall f_37334(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37206)
static void C_fcall f_37206(C_word t0,C_word t1) C_noret;
C_noret_decl(f_37230)
static void C_fcall f_37230(C_word t0,C_word t1) C_noret;
C_noret_decl(f_37209)
static void C_fcall f_37209(C_word t0,C_word t1) C_noret;
C_noret_decl(f_37116)
static void C_ccall f_37116(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_37149)
static void C_ccall f_37149(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37110)
static void C_ccall f_37110(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24174)
static void C_ccall f_24174(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37028)
static void C_ccall f_37028(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_37032)
static void C_ccall f_37032(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37038)
static void C_ccall f_37038(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37058)
static void C_ccall f_37058(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37002)
static void C_ccall f_37002(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_37012)
static void C_fcall f_37012(C_word t0,C_word t1) C_noret;
C_noret_decl(f_36996)
static void C_ccall f_36996(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24177)
static void C_ccall f_24177(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36873)
static void C_ccall f_36873(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_36877)
static void C_ccall f_36877(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36805)
static void C_ccall f_36805(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_36824)
static void C_ccall f_36824(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36859)
static void C_ccall f_36859(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36830)
static void C_fcall f_36830(C_word t0,C_word t1) C_noret;
C_noret_decl(f_36834)
static void C_ccall f_36834(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36848)
static void C_ccall f_36848(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36837)
static void C_fcall f_36837(C_word t0,C_word t1) C_noret;
C_noret_decl(f_36818)
static void C_fcall f_36818(C_word t0,C_word t1) C_noret;
C_noret_decl(f_36799)
static void C_ccall f_36799(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24180)
static void C_ccall f_24180(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36527)
static void C_ccall f_36527(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24703)
static void C_ccall f_24703(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36479)
static void C_ccall f_36479(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36471)
static void C_ccall f_36471(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24706)
static void C_ccall f_24706(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36351)
static void C_ccall f_36351(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_24712)
static void C_ccall f_24712(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25171)
static void C_ccall f_25171(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25205)
static void C_ccall f_25205(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25197)
static void C_ccall f_25197(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25193)
static void C_ccall f_25193(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25178)
static void C_ccall f_25178(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25182)
static void C_ccall f_25182(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25175)
static void C_ccall f_25175(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24730)
static void C_fcall f_24730(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25164)
static void C_ccall f_25164(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25160)
static void C_ccall f_25160(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24737)
static void C_fcall f_24737(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25035)
static void C_fcall f_25035(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25056)
static void C_ccall f_25056(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25058)
static void C_fcall f_25058(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25072)
static void C_ccall f_25072(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25125)
static void C_ccall f_25125(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25075)
static void C_fcall f_25075(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25110)
static void C_ccall f_25110(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25078)
static void C_fcall f_25078(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25091)
static void C_ccall f_25091(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25103)
static void C_ccall f_25103(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25095)
static void C_ccall f_25095(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25081)
static void C_fcall f_25081(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25045)
static void C_ccall f_25045(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24740)
static void C_ccall f_24740(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24999)
static void C_fcall f_24999(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25025)
static void C_ccall f_25025(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25010)
static void C_ccall f_25010(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24743)
static void C_ccall f_24743(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24747)
static void C_ccall f_24747(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24943)
static void C_fcall f_24943(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_24953)
static void C_ccall f_24953(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24956)
static void C_ccall f_24956(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24977)
static void C_ccall f_24977(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24959)
static void C_fcall f_24959(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24963)
static void C_ccall f_24963(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24750)
static void C_ccall f_24750(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24753)
static void C_fcall f_24753(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24906)
static void C_ccall f_24906(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24914)
static void C_ccall f_24914(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24910)
static void C_ccall f_24910(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24756)
static void C_fcall f_24756(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24784)
static void C_ccall f_24784(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24787)
static void C_ccall f_24787(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24790)
static void C_ccall f_24790(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24793)
static void C_ccall f_24793(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24796)
static void C_ccall f_24796(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24855)
static void C_ccall f_24855(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36305)
static void C_ccall f_36305(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_36321)
static void C_ccall f_36321(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36324)
static void C_ccall f_36324(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36327)
static void C_fcall f_36327(C_word t0,C_word t1) C_noret;
C_noret_decl(f_36330)
static void C_fcall f_36330(C_word t0,C_word t1) C_noret;
C_noret_decl(f_36341)
static void C_ccall f_36341(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36299)
static void C_ccall f_36299(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25212)
static void C_ccall f_25212(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36160)
static void C_ccall f_36160(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_36199)
static void C_ccall f_36199(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36173)
static void C_fcall f_36173(C_word t0,C_word t1) C_noret;
C_noret_decl(f_36154)
static void C_ccall f_36154(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25215)
static void C_ccall f_25215(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35742)
static void C_ccall f_35742(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_35746)
static void C_ccall f_35746(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35758)
static void C_ccall f_35758(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35816)
static void C_ccall f_35816(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35819)
static void C_ccall f_35819(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35822)
static void C_ccall f_35822(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36034)
static void C_ccall f_36034(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35972)
static void C_ccall f_35972(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36006)
static void C_ccall f_36006(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35981)
static void C_fcall f_35981(C_word t0,C_word t1) C_noret;
C_noret_decl(f_35992)
static void C_ccall f_35992(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35988)
static void C_ccall f_35988(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35831)
static void C_fcall f_35831(C_word t0,C_word t1) C_noret;
C_noret_decl(f_35909)
static void C_ccall f_35909(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35950)
static void C_ccall f_35950(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35954)
static void C_ccall f_35954(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35958)
static void C_ccall f_35958(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35913)
static void C_ccall f_35913(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35917)
static void C_ccall f_35917(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35944)
static void C_ccall f_35944(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35920)
static void C_fcall f_35920(C_word t0,C_word t1) C_noret;
C_noret_decl(f_35834)
static void C_fcall f_35834(C_word t0,C_word t1) C_noret;
C_noret_decl(f_35906)
static void C_ccall f_35906(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35848)
static void C_ccall f_35848(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35850)
static void C_fcall f_35850(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_35898)
static void C_ccall f_35898(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35869)
static void C_ccall f_35869(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35886)
static void C_ccall f_35886(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35872)
static void C_fcall f_35872(C_word t0,C_word t1) C_noret;
C_noret_decl(f_35865)
static void C_ccall f_35865(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35837)
static void C_ccall f_35837(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35767)
static void C_fcall f_35767(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_35777)
static void C_ccall f_35777(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35783)
static void C_ccall f_35783(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35755)
static void C_ccall f_35755(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35703)
static void C_ccall f_35703(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_35720)
static void C_ccall f_35720(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35736)
static void C_ccall f_35736(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35714)
static void C_fcall f_35714(C_word t0,C_word t1) C_noret;
C_noret_decl(f_35697)
static void C_ccall f_35697(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25218)
static void C_ccall f_25218(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35621)
static void C_ccall f_35621(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25221)
static void C_ccall f_25221(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35597)
static void C_ccall f_35597(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_35609)
static void C_ccall f_35609(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35605)
static void C_ccall f_35605(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35583)
static void C_ccall f_35583(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_35591)
static void C_ccall f_35591(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35577)
static void C_ccall f_35577(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25224)
static void C_ccall f_25224(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35569)
static void C_ccall f_35569(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_28995)
static void C_ccall f_28995(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28998)
static void C_ccall f_28998(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29164)
static void C_ccall f_29164(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29160)
static void C_ccall f_29160(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29150)
static void C_fcall f_29150(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29005)
static void C_ccall f_29005(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29009)
static void C_ccall f_29009(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29012)
static void C_fcall f_29012(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29023)
static void C_ccall f_29023(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29031)
static void C_ccall f_29031(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29103)
static void C_ccall f_29103(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29111)
static void C_ccall f_29111(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29107)
static void C_ccall f_29107(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29099)
static void C_ccall f_29099(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29095)
static void C_ccall f_29095(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29067)
static void C_ccall f_29067(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29063)
static void C_ccall f_29063(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29027)
static void C_ccall f_29027(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25642)
static void C_ccall f_25642(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35555)
static void C_ccall f_35555(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_25645)
static void C_ccall f_25645(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35526)
static void C_ccall f_35526(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_35530)
static void C_ccall f_35530(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25648)
static void C_ccall f_25648(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35523)
static void C_ccall f_35523(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25651)
static void C_ccall f_25651(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35381)
static void C_ccall f_35381(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_29177)
static void C_ccall f_29177(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29309)
static void C_ccall f_29309(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29180)
static void C_ccall f_29180(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29191)
static void C_ccall f_29191(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29199)
static void C_ccall f_29199(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29223)
static void C_ccall f_29223(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29226)
static void C_fcall f_29226(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29234)
static void C_ccall f_29234(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29242)
static void C_ccall f_29242(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29262)
static void C_ccall f_29262(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29258)
static void C_ccall f_29258(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29238)
static void C_ccall f_29238(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29230)
static void C_ccall f_29230(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29219)
static void C_ccall f_29219(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29195)
static void C_ccall f_29195(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29171)
static void C_ccall f_29171(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34093)
static void C_ccall f_34093(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34096)
static void C_ccall f_34096(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34099)
static void C_ccall f_34099(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34102)
static void C_ccall f_34102(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34105)
static void C_ccall f_34105(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34108)
static void C_ccall f_34108(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34111)
static void C_ccall f_34111(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34114)
static void C_ccall f_34114(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34117)
static void C_ccall f_34117(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34120)
static void C_ccall f_34120(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34123)
static void C_ccall f_34123(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34248)
static void C_ccall f_34248(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34251)
static void C_ccall f_34251(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34254)
static void C_ccall f_34254(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35318)
static void C_fcall f_35318(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_35346)
static void C_fcall f_35346(C_word t0,C_word t1) C_noret;
C_noret_decl(f_34985)
static void C_ccall f_34985(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35312)
static void C_ccall f_35312(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_35030)
static void C_ccall f_35030(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35036)
static void C_ccall f_35036(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35039)
static void C_ccall f_35039(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35042)
static void C_ccall f_35042(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35046)
static void C_ccall f_35046(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35256)
static void C_ccall f_35256(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35268)
static void C_ccall f_35268(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35264)
static void C_ccall f_35264(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35049)
static void C_fcall f_35049(C_word t0,C_word t1) C_noret;
C_noret_decl(f_35213)
static void C_fcall f_35213(C_word t0,C_word t1) C_noret;
C_noret_decl(f_35249)
static void C_ccall f_35249(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35242)
static void C_ccall f_35242(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35052)
static void C_ccall f_35052(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35151)
static void C_ccall f_35151(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35159)
static void C_ccall f_35159(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35155)
static void C_ccall f_35155(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35147)
static void C_ccall f_35147(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35143)
static void C_ccall f_35143(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35099)
static void C_ccall f_35099(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35095)
static void C_ccall f_35095(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35062)
static void C_fcall f_35062(C_word t0,C_word t1) C_noret;
C_noret_decl(f_35073)
static void C_ccall f_35073(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35081)
static void C_ccall f_35081(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35077)
static void C_ccall f_35077(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35275)
static void C_ccall f_35275(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35283)
static void C_ccall f_35283(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_35283)
static void C_ccall f_35283r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_35297)
static void C_fcall f_35297(C_word t0,C_word t1) C_noret;
C_noret_decl(f_35287)
static void C_ccall f_35287(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35278)
static void C_ccall f_35278(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35281)
static void C_ccall f_35281(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34987)
static void C_fcall f_34987(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_35003)
static void C_ccall f_35003(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34914)
static void C_ccall f_34914(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_34925)
static void C_ccall f_34925(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34928)
static void C_fcall f_34928(C_word t0,C_word t1) C_noret;
C_noret_decl(f_34935)
static void C_ccall f_34935(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34904)
static void C_ccall f_34904(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34559)
static void C_ccall f_34559(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34908)
static void C_ccall f_34908(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34846)
static void C_ccall f_34846(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_34846)
static void C_ccall f_34846r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_34864)
static void C_fcall f_34864(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_34874)
static void C_ccall f_34874(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34850)
static void C_ccall f_34850(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34837)
static void C_ccall f_34837(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34537)
static void C_ccall f_34537(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34841)
static void C_ccall f_34841(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34831)
static void C_ccall f_34831(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34519)
static void C_ccall f_34519(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34822)
static void C_ccall f_34822(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34528)
static void C_ccall f_34528(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34826)
static void C_ccall f_34826(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34759)
static void C_ccall f_34759(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_34759)
static void C_ccall f_34759r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_34784)
static void C_fcall f_34784(C_word t0,C_word t1) C_noret;
C_noret_decl(f_34484)
static void C_ccall f_34484(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34772)
static void C_ccall f_34772(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34583)
static void C_ccall f_34583(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_34583)
static void C_ccall f_34583r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_34710)
static void C_fcall f_34710(C_word t0,C_word t1) C_noret;
C_noret_decl(f_34705)
static void C_fcall f_34705(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_34585)
static void C_fcall f_34585(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_34704)
static void C_ccall f_34704(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34700)
static void C_ccall f_34700(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34692)
static void C_ccall f_34692(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34656)
static void C_fcall f_34656(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_34689)
static void C_ccall f_34689(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34685)
static void C_ccall f_34685(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34666)
static void C_ccall f_34666(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34645)
static void C_ccall f_34645(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34615)
static void C_fcall f_34615(C_word t0,C_word t1) C_noret;
C_noret_decl(f_34587)
static void C_fcall f_34587(C_word t0,C_word t1) C_noret;
C_noret_decl(f_34564)
static void C_ccall f_34564(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_34569)
static void C_ccall f_34569(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_34574)
static void C_ccall f_34574(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34542)
static void C_fcall f_34542(C_word t0,C_word t1) C_noret;
C_noret_decl(f_34546)
static void C_ccall f_34546(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34498)
static void C_fcall f_34498(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_34502)
static void C_ccall f_34502(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34489)
static void C_fcall f_34489(C_word t0,C_word t1) C_noret;
C_noret_decl(f_34493)
static void C_ccall f_34493(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34477)
static void C_ccall f_34477(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34474)
static void C_ccall f_34474(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34460)
static void C_ccall f_34460(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_34465)
static void C_ccall f_34465(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34446)
static void C_ccall f_34446(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_34451)
static void C_ccall f_34451(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34256)
static void C_ccall f_34256(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_34317)
static void C_ccall f_34317(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34319)
static void C_fcall f_34319(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_34329)
static void C_ccall f_34329(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34348)
static void C_fcall f_34348(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_34388)
static void C_ccall f_34388(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34430)
static void C_ccall f_34430(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34400)
static void C_ccall f_34400(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34385)
static void C_fcall f_34385(C_word t0,C_word t1) C_noret;
C_noret_decl(f_34303)
static void C_ccall f_34303(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34268)
static void C_ccall f_34268(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34295)
static void C_ccall f_34295(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34276)
static void C_ccall f_34276(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34283)
static void C_ccall f_34283(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34287)
static void C_ccall f_34287(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34291)
static void C_ccall f_34291(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34368)
static void C_ccall f_34368(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34346)
static void C_ccall f_34346(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34332)
static void C_ccall f_34332(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34335)
static void C_ccall f_34335(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34310)
static void C_ccall f_34310(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34239)
static void C_ccall f_34239(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34244)
static void C_ccall f_34244(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34182)
static void C_ccall f_34182(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_34182)
static void C_ccall f_34182r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_34215)
static void C_fcall f_34215(C_word t0,C_word t1) C_noret;
C_noret_decl(f_34195)
static void C_fcall f_34195(C_word t0,C_word t1) C_noret;
C_noret_decl(f_34203)
static void C_ccall f_34203(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_34186)
static void C_ccall f_34186(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34125)
static void C_ccall f_34125(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_34125)
static void C_ccall f_34125r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_34158)
static void C_fcall f_34158(C_word t0,C_word t1) C_noret;
C_noret_decl(f_34138)
static void C_fcall f_34138(C_word t0,C_word t1) C_noret;
C_noret_decl(f_34146)
static void C_ccall f_34146(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_34129)
static void C_ccall f_34129(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34035)
static void C_ccall f_34035(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_34089)
static void C_ccall f_34089(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_34084)
static void C_ccall f_34084(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_34047)
static void C_ccall f_34047(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_34053)
static void C_ccall f_34053(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_34079)
static void C_ccall f_34079(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34083)
static void C_ccall f_34083(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34059)
static void C_ccall f_34059(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_34077)
static void C_ccall f_34077(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34074)
static void C_ccall f_34074(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34070)
static void C_ccall f_34070(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34063)
static void C_ccall f_34063(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34020)
static void C_ccall f_34020(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_34025)
static void C_ccall f_34025(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_33992)
static void C_ccall f_33992(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_33997)
static void C_ccall f_33997(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_33964)
static void C_ccall f_33964(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_33969)
static void C_ccall f_33969(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_33936)
static void C_ccall f_33936(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_33941)
static void C_ccall f_33941(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_33908)
static void C_ccall f_33908(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_33913)
static void C_ccall f_33913(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_33880)
static void C_ccall f_33880(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_33885)
static void C_ccall f_33885(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_33852)
static void C_ccall f_33852(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_33857)
static void C_ccall f_33857(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_33824)
static void C_ccall f_33824(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_33829)
static void C_ccall f_33829(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_33796)
static void C_ccall f_33796(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_33801)
static void C_ccall f_33801(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_33768)
static void C_ccall f_33768(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_33773)
static void C_ccall f_33773(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_33745)
static void C_ccall f_33745(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_33750)
static void C_ccall f_33750(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_33749)
static void C_ccall f_33749(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33726)
static void C_ccall f_33726(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_33731)
static void C_ccall f_33731(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_33671)
static void C_ccall f_33671(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_33678)
static void C_ccall f_33678(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33681)
static void C_ccall f_33681(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33705)
static void C_ccall f_33705(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_33685)
static void C_ccall f_33685(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_33675)
static void C_ccall f_33675(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33624)
static void C_ccall f_33624(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_33631)
static void C_ccall f_33631(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33634)
static void C_ccall f_33634(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33654)
static void C_ccall f_33654(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_33638)
static void C_ccall f_33638(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_33601)
static void C_ccall f_33601(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_33606)
static void C_ccall f_33606(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_33605)
static void C_ccall f_33605(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33582)
static void C_ccall f_33582(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_33587)
static void C_ccall f_33587(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_33559)
static void C_ccall f_33559(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_33564)
static void C_ccall f_33564(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_33563)
static void C_ccall f_33563(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33540)
static void C_ccall f_33540(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_33545)
static void C_ccall f_33545(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_33521)
static void C_ccall f_33521(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_33526)
static void C_ccall f_33526(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_33525)
static void C_ccall f_33525(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33506)
static void C_ccall f_33506(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_33511)
static void C_ccall f_33511(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_33487)
static void C_ccall f_33487(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_33492)
static void C_ccall f_33492(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_33491)
static void C_ccall f_33491(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33472)
static void C_ccall f_33472(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_33477)
static void C_ccall f_33477(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_33457)
static void C_ccall f_33457(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_33462)
static void C_ccall f_33462(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_33439)
static void C_ccall f_33439(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_33447)
static void C_ccall f_33447(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_33443)
static void C_ccall f_33443(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32969)
static void C_ccall f_32969(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_32969)
static void C_ccall f_32969r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_33397)
static void C_ccall f_33397(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33412)
static void C_ccall f_33412(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33404)
static void C_ccall f_33404(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33368)
static void C_ccall f_33368(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33372)
static void C_ccall f_33372(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33333)
static void C_ccall f_33333(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33337)
static void C_ccall f_33337(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33298)
static void C_ccall f_33298(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33302)
static void C_ccall f_33302(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32973)
static void C_fcall f_32973(C_word t0,C_word t1) C_noret;
C_noret_decl(f_33262)
static void C_ccall f_33262(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33277)
static void C_ccall f_33277(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33269)
static void C_ccall f_33269(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33233)
static void C_ccall f_33233(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33237)
static void C_ccall f_33237(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33198)
static void C_ccall f_33198(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33202)
static void C_ccall f_33202(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33163)
static void C_ccall f_33163(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33167)
static void C_ccall f_33167(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32976)
static void C_fcall f_32976(C_word t0,C_word t1) C_noret;
C_noret_decl(f_33127)
static void C_ccall f_33127(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33142)
static void C_ccall f_33142(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33134)
static void C_ccall f_33134(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33098)
static void C_ccall f_33098(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33102)
static void C_ccall f_33102(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33063)
static void C_ccall f_33063(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33067)
static void C_ccall f_33067(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33028)
static void C_ccall f_33028(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33032)
static void C_ccall f_33032(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32979)
static void C_fcall f_32979(C_word t0,C_word t1) C_noret;
C_noret_decl(f_32982)
static void C_ccall f_32982(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32986)
static void C_ccall f_32986(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_32950)
static void C_ccall f_32950(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_32955)
static void C_ccall f_32955(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_32499)
static void C_ccall f_32499(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_32499)
static void C_ccall f_32499r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_32927)
static void C_ccall f_32927(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32942)
static void C_ccall f_32942(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32934)
static void C_ccall f_32934(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32898)
static void C_ccall f_32898(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32902)
static void C_ccall f_32902(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32863)
static void C_ccall f_32863(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32867)
static void C_ccall f_32867(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32828)
static void C_ccall f_32828(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32832)
static void C_ccall f_32832(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32503)
static void C_fcall f_32503(C_word t0,C_word t1) C_noret;
C_noret_decl(f_32792)
static void C_ccall f_32792(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32807)
static void C_ccall f_32807(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32799)
static void C_ccall f_32799(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32763)
static void C_ccall f_32763(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32767)
static void C_ccall f_32767(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32728)
static void C_ccall f_32728(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32732)
static void C_ccall f_32732(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32693)
static void C_ccall f_32693(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32697)
static void C_ccall f_32697(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32506)
static void C_fcall f_32506(C_word t0,C_word t1) C_noret;
C_noret_decl(f_32657)
static void C_ccall f_32657(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32672)
static void C_ccall f_32672(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32664)
static void C_ccall f_32664(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32628)
static void C_ccall f_32628(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32632)
static void C_ccall f_32632(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32593)
static void C_ccall f_32593(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32597)
static void C_ccall f_32597(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32558)
static void C_ccall f_32558(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32562)
static void C_ccall f_32562(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32509)
static void C_fcall f_32509(C_word t0,C_word t1) C_noret;
C_noret_decl(f_32512)
static void C_ccall f_32512(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32516)
static void C_ccall f_32516(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_32480)
static void C_ccall f_32480(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_32485)
static void C_ccall f_32485(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_32029)
static void C_ccall f_32029(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_32029)
static void C_ccall f_32029r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_32457)
static void C_ccall f_32457(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32472)
static void C_ccall f_32472(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32464)
static void C_ccall f_32464(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32428)
static void C_ccall f_32428(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32432)
static void C_ccall f_32432(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32393)
static void C_ccall f_32393(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32397)
static void C_ccall f_32397(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32358)
static void C_ccall f_32358(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32362)
static void C_ccall f_32362(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32033)
static void C_fcall f_32033(C_word t0,C_word t1) C_noret;
C_noret_decl(f_32322)
static void C_ccall f_32322(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32337)
static void C_ccall f_32337(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32329)
static void C_ccall f_32329(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32293)
static void C_ccall f_32293(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32297)
static void C_ccall f_32297(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32258)
static void C_ccall f_32258(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32262)
static void C_ccall f_32262(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32223)
static void C_ccall f_32223(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32227)
static void C_ccall f_32227(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32036)
static void C_fcall f_32036(C_word t0,C_word t1) C_noret;
C_noret_decl(f_32187)
static void C_ccall f_32187(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32202)
static void C_ccall f_32202(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32194)
static void C_ccall f_32194(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32158)
static void C_ccall f_32158(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32162)
static void C_ccall f_32162(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32123)
static void C_ccall f_32123(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32127)
static void C_ccall f_32127(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32088)
static void C_ccall f_32088(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32092)
static void C_ccall f_32092(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32039)
static void C_fcall f_32039(C_word t0,C_word t1) C_noret;
C_noret_decl(f_32042)
static void C_ccall f_32042(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32046)
static void C_ccall f_32046(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_32010)
static void C_ccall f_32010(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_32015)
static void C_ccall f_32015(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_31281)
static void C_ccall f_31281(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_31281)
static void C_ccall f_31281r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_31987)
static void C_ccall f_31987(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32002)
static void C_ccall f_32002(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31994)
static void C_ccall f_31994(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31958)
static void C_ccall f_31958(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31962)
static void C_ccall f_31962(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31923)
static void C_ccall f_31923(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31927)
static void C_ccall f_31927(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31888)
static void C_ccall f_31888(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31892)
static void C_ccall f_31892(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31853)
static void C_ccall f_31853(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31857)
static void C_ccall f_31857(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31285)
static void C_fcall f_31285(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31817)
static void C_ccall f_31817(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31832)
static void C_ccall f_31832(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31824)
static void C_ccall f_31824(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31788)
static void C_ccall f_31788(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31792)
static void C_ccall f_31792(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31753)
static void C_ccall f_31753(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31757)
static void C_ccall f_31757(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31718)
static void C_ccall f_31718(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31722)
static void C_ccall f_31722(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31683)
static void C_ccall f_31683(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31687)
static void C_ccall f_31687(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31288)
static void C_fcall f_31288(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31647)
static void C_ccall f_31647(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31662)
static void C_ccall f_31662(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31654)
static void C_ccall f_31654(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31618)
static void C_ccall f_31618(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31622)
static void C_ccall f_31622(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31583)
static void C_ccall f_31583(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31587)
static void C_ccall f_31587(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31548)
static void C_ccall f_31548(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31552)
static void C_ccall f_31552(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31513)
static void C_ccall f_31513(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31517)
static void C_ccall f_31517(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31291)
static void C_fcall f_31291(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31477)
static void C_ccall f_31477(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31492)
static void C_ccall f_31492(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31484)
static void C_ccall f_31484(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31448)
static void C_ccall f_31448(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31452)
static void C_ccall f_31452(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31413)
static void C_ccall f_31413(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31417)
static void C_ccall f_31417(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31378)
static void C_ccall f_31378(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31382)
static void C_ccall f_31382(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31343)
static void C_ccall f_31343(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31347)
static void C_ccall f_31347(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31294)
static void C_fcall f_31294(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31297)
static void C_ccall f_31297(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31301)
static void C_ccall f_31301(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_31262)
static void C_ccall f_31262(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_31267)
static void C_ccall f_31267(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_30533)
static void C_ccall f_30533(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_30533)
static void C_ccall f_30533r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_31239)
static void C_ccall f_31239(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31254)
static void C_ccall f_31254(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31246)
static void C_ccall f_31246(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31210)
static void C_ccall f_31210(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31214)
static void C_ccall f_31214(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31175)
static void C_ccall f_31175(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31179)
static void C_ccall f_31179(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31140)
static void C_ccall f_31140(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31144)
static void C_ccall f_31144(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31105)
static void C_ccall f_31105(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31109)
static void C_ccall f_31109(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30537)
static void C_fcall f_30537(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31069)
static void C_ccall f_31069(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31084)
static void C_ccall f_31084(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31076)
static void C_ccall f_31076(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31040)
static void C_ccall f_31040(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31044)
static void C_ccall f_31044(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31005)
static void C_ccall f_31005(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31009)
static void C_ccall f_31009(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30970)
static void C_ccall f_30970(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30974)
static void C_ccall f_30974(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30935)
static void C_ccall f_30935(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30939)
static void C_ccall f_30939(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30540)
static void C_fcall f_30540(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30899)
static void C_ccall f_30899(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30914)
static void C_ccall f_30914(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30906)
static void C_ccall f_30906(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30870)
static void C_ccall f_30870(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30874)
static void C_ccall f_30874(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30835)
static void C_ccall f_30835(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30839)
static void C_ccall f_30839(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30800)
static void C_ccall f_30800(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30804)
static void C_ccall f_30804(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30765)
static void C_ccall f_30765(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30769)
static void C_ccall f_30769(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30543)
static void C_fcall f_30543(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30729)
static void C_ccall f_30729(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30744)
static void C_ccall f_30744(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30736)
static void C_ccall f_30736(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30700)
static void C_ccall f_30700(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30704)
static void C_ccall f_30704(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30665)
static void C_ccall f_30665(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30669)
static void C_ccall f_30669(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30630)
static void C_ccall f_30630(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30634)
static void C_ccall f_30634(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30595)
static void C_ccall f_30595(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30599)
static void C_ccall f_30599(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30546)
static void C_fcall f_30546(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30549)
static void C_ccall f_30549(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30553)
static void C_ccall f_30553(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_30514)
static void C_ccall f_30514(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_30519)
static void C_ccall f_30519(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_30063)
static void C_ccall f_30063(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_30063)
static void C_ccall f_30063r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_30491)
static void C_ccall f_30491(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30506)
static void C_ccall f_30506(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30498)
static void C_ccall f_30498(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30462)
static void C_ccall f_30462(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30466)
static void C_ccall f_30466(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30427)
static void C_ccall f_30427(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30431)
static void C_ccall f_30431(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30392)
static void C_ccall f_30392(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30396)
static void C_ccall f_30396(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30067)
static void C_fcall f_30067(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30356)
static void C_ccall f_30356(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30371)
static void C_ccall f_30371(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30363)
static void C_ccall f_30363(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30327)
static void C_ccall f_30327(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30331)
static void C_ccall f_30331(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30292)
static void C_ccall f_30292(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30296)
static void C_ccall f_30296(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30257)
static void C_ccall f_30257(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30261)
static void C_ccall f_30261(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30070)
static void C_fcall f_30070(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30221)
static void C_ccall f_30221(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30236)
static void C_ccall f_30236(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30228)
static void C_ccall f_30228(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30192)
static void C_ccall f_30192(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30196)
static void C_ccall f_30196(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30157)
static void C_ccall f_30157(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30161)
static void C_ccall f_30161(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30122)
static void C_ccall f_30122(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30126)
static void C_ccall f_30126(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30073)
static void C_fcall f_30073(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30076)
static void C_ccall f_30076(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30080)
static void C_ccall f_30080(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_30044)
static void C_ccall f_30044(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_30049)
static void C_ccall f_30049(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_29315)
static void C_ccall f_29315(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_29315)
static void C_ccall f_29315r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_30021)
static void C_ccall f_30021(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30036)
static void C_ccall f_30036(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30028)
static void C_ccall f_30028(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29992)
static void C_ccall f_29992(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29996)
static void C_ccall f_29996(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29957)
static void C_ccall f_29957(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29961)
static void C_ccall f_29961(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29922)
static void C_ccall f_29922(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29926)
static void C_ccall f_29926(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29887)
static void C_ccall f_29887(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29891)
static void C_ccall f_29891(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29319)
static void C_fcall f_29319(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29851)
static void C_ccall f_29851(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29866)
static void C_ccall f_29866(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29858)
static void C_ccall f_29858(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29822)
static void C_ccall f_29822(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29826)
static void C_ccall f_29826(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29787)
static void C_ccall f_29787(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29791)
static void C_ccall f_29791(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29752)
static void C_ccall f_29752(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29756)
static void C_ccall f_29756(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29717)
static void C_ccall f_29717(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29721)
static void C_ccall f_29721(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29322)
static void C_fcall f_29322(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29681)
static void C_ccall f_29681(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29696)
static void C_ccall f_29696(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29688)
static void C_ccall f_29688(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29652)
static void C_ccall f_29652(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29656)
static void C_ccall f_29656(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29617)
static void C_ccall f_29617(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29621)
static void C_ccall f_29621(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29582)
static void C_ccall f_29582(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29586)
static void C_ccall f_29586(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29547)
static void C_ccall f_29547(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29551)
static void C_ccall f_29551(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29325)
static void C_fcall f_29325(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29511)
static void C_ccall f_29511(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29526)
static void C_ccall f_29526(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29518)
static void C_ccall f_29518(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29482)
static void C_ccall f_29482(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29486)
static void C_ccall f_29486(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29447)
static void C_ccall f_29447(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29451)
static void C_ccall f_29451(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29412)
static void C_ccall f_29412(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29416)
static void C_ccall f_29416(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29377)
static void C_ccall f_29377(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29381)
static void C_ccall f_29381(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29328)
static void C_fcall f_29328(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29331)
static void C_ccall f_29331(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29335)
static void C_ccall f_29335(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_28977)
static void C_fcall f_28977(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_28817)
static void C_fcall f_28817(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28852)
static void C_fcall f_28852(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_28862)
static void C_fcall f_28862(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28866)
static void C_ccall f_28866(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28869)
static void C_ccall f_28869(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28930)
static void C_ccall f_28930(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_28921)
static void C_ccall f_28921(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28872)
static void C_ccall f_28872(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28891)
static void C_ccall f_28891(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28898)
static void C_ccall f_28898(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28875)
static void C_ccall f_28875(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28881)
static void C_ccall f_28881(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28850)
static void C_ccall f_28850(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28825)
static void C_fcall f_28825(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_28824)
static void C_ccall f_28824(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28985)
static void C_fcall f_28985(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28563)
static void C_ccall f_28563(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_28585)
static void C_ccall f_28585(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28600)
static void C_ccall f_28600(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28603)
static void C_fcall f_28603(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28779)
static void C_ccall f_28779(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_28773)
static void C_ccall f_28773(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28606)
static void C_ccall f_28606(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28755)
static void C_ccall f_28755(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28609)
static void C_fcall f_28609(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28612)
static void C_ccall f_28612(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28748)
static void C_ccall f_28748(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28736)
static void C_ccall f_28736(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28632)
static void C_fcall f_28632(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28639)
static void C_ccall f_28639(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28709)
static void C_ccall f_28709(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_28695)
static void C_ccall f_28695(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28703)
static void C_ccall f_28703(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28642)
static void C_ccall f_28642(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28681)
static void C_ccall f_28681(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28645)
static void C_fcall f_28645(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28674)
static void C_ccall f_28674(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28651)
static void C_ccall f_28651(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28654)
static void C_ccall f_28654(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28658)
static void C_ccall f_28658(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28619)
static void C_fcall f_28619(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28622)
static void C_ccall f_28622(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28432)
static void C_fcall f_28432(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_28441)
static void C_fcall f_28441(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_28389)
static void C_ccall f_28389(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28395)
static void C_fcall f_28395(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28458)
static void C_ccall f_28458(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28544)
static void C_ccall f_28544(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_28531)
static void C_ccall f_28531(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28539)
static void C_ccall f_28539(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28461)
static void C_ccall f_28461(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28465)
static void C_ccall f_28465(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28508)
static void C_ccall f_28508(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28470)
static void C_ccall f_28470(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28436)
static void C_ccall f_28436(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28331)
static void C_ccall f_28331(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_28338)
static void C_ccall f_28338(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28369)
static void C_ccall f_28369(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28365)
static void C_ccall f_28365(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28357)
static void C_ccall f_28357(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28240)
static void C_ccall f_28240(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_28247)
static void C_ccall f_28247(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28315)
static void C_ccall f_28315(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28258)
static void C_fcall f_28258(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28285)
static void C_ccall f_28285(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28269)
static void C_ccall f_28269(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28174)
static void C_ccall f_28174(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_28185)
static void C_ccall f_28185(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28188)
static void C_fcall f_28188(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28195)
static void C_ccall f_28195(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28168)
static void C_ccall f_28168(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27622)
static void C_ccall f_27622(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_27653)
static void C_ccall f_27653(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28117)
static void C_ccall f_28117(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28123)
static void C_ccall f_28123(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27664)
static void C_ccall f_27664(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27549)
static void C_fcall f_27549(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27574)
static void C_ccall f_27574(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27509)
static void C_fcall f_27509(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27522)
static void C_fcall f_27522(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27563)
static void C_ccall f_27563(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27668)
static void C_ccall f_27668(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28105)
static void C_ccall f_28105(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28101)
static void C_fcall f_28101(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28097)
static void C_ccall f_28097(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27671)
static void C_ccall f_27671(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27891)
static void C_fcall f_27891(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28000)
static void C_ccall f_28000(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28065)
static void C_ccall f_28065(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28007)
static void C_fcall f_28007(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28011)
static void C_ccall f_28011(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28015)
static void C_ccall f_28015(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28057)
static void C_ccall f_28057(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28053)
static void C_ccall f_28053(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28031)
static void C_ccall f_28031(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27894)
static void C_fcall f_27894(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27897)
static void C_fcall f_27897(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27796)
static void C_ccall f_27796(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27879)
static void C_ccall f_27879(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27846)
static void C_ccall f_27846(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27872)
static void C_ccall f_27872(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27854)
static void C_ccall f_27854(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27802)
static void C_fcall f_27802(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27842)
static void C_ccall f_27842(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27784)
static void C_ccall f_27784(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27755)
static void C_ccall f_27755(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27777)
static void C_ccall f_27777(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27763)
static void C_ccall f_27763(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27717)
static void C_fcall f_27717(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27674)
static void C_fcall f_27674(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27685)
static void C_ccall f_27685(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27689)
static void C_ccall f_27689(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27693)
static void C_ccall f_27693(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27697)
static void C_ccall f_27697(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27681)
static void C_ccall f_27681(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27641)
static void C_fcall f_27641(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27636)
static void C_fcall f_27636(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27631)
static void C_fcall f_27631(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_27463)
static void C_ccall f_27463(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_27474)
static void C_ccall f_27474(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27489)
static void C_ccall f_27489(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27425)
static void C_ccall f_27425(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_27436)
static void C_ccall f_27436(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27451)
static void C_ccall f_27451(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27358)
static void C_ccall f_27358(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_27378)
static void C_fcall f_27378(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27388)
static void C_ccall f_27388(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27401)
static void C_ccall f_27401(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27369)
static void C_ccall f_27369(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27376)
static void C_ccall f_27376(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27165)
static void C_ccall f_27165(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_27225)
static void C_fcall f_27225(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_27235)
static void C_ccall f_27235(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27349)
static void C_ccall f_27349(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27314)
static void C_ccall f_27314(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27306)
static void C_ccall f_27306(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27277)
static void C_ccall f_27277(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27255)
static void C_ccall f_27255(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27258)
static void C_ccall f_27258(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27246)
static void C_ccall f_27246(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27172)
static void C_ccall f_27172(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27223)
static void C_ccall f_27223(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27215)
static void C_ccall f_27215(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27175)
static void C_ccall f_27175(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27186)
static void C_ccall f_27186(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27190)
static void C_ccall f_27190(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27182)
static void C_ccall f_27182(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27023)
static void C_ccall f_27023(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_27071)
static void C_fcall f_27071(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27081)
static void C_ccall f_27081(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27092)
static void C_ccall f_27092(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27129)
static void C_ccall f_27129(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27104)
static void C_ccall f_27104(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27095)
static void C_ccall f_27095(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27033)
static void C_ccall f_27033(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27069)
static void C_ccall f_27069(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27040)
static void C_ccall f_27040(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26672)
static void C_ccall f_26672(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_26679)
static void C_ccall f_26679(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26913)
static void C_fcall f_26913(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26923)
static void C_ccall f_26923(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26934)
static void C_ccall f_26934(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26946)
static void C_fcall f_26946(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26949)
static void C_ccall f_26949(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26937)
static void C_ccall f_26937(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26685)
static void C_ccall f_26685(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26911)
static void C_ccall f_26911(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26907)
static void C_ccall f_26907(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26853)
static void C_fcall f_26853(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26818)
static void C_fcall f_26818(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26834)
static void C_fcall f_26834(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26789)
static void C_fcall f_26789(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26713)
static void C_ccall f_26713(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26716)
static void C_ccall f_26716(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26780)
static void C_ccall f_26780(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26776)
static void C_ccall f_26776(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26696)
static void C_fcall f_26696(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26707)
static void C_ccall f_26707(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26703)
static void C_ccall f_26703(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26625)
static void C_ccall f_26625(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_26658)
static void C_ccall f_26658(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_26640)
static void C_ccall f_26640(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26652)
static void C_ccall f_26652(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26243)
static void C_ccall f_26243(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_26452)
static void C_fcall f_26452(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26462)
static void C_ccall f_26462(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26473)
static void C_ccall f_26473(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26593)
static void C_ccall f_26593(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26572)
static void C_ccall f_26572(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26551)
static void C_ccall f_26551(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26530)
static void C_ccall f_26530(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26509)
static void C_ccall f_26509(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26488)
static void C_ccall f_26488(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26476)
static void C_ccall f_26476(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26253)
static void C_ccall f_26253(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26256)
static void C_fcall f_26256(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26419)
static void C_fcall f_26419(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26259)
static void C_fcall f_26259(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26410)
static void C_ccall f_26410(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26390)
static void C_ccall f_26390(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26262)
static void C_fcall f_26262(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26355)
static void C_ccall f_26355(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26372)
static void C_ccall f_26372(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26265)
static void C_fcall f_26265(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26304)
static void C_ccall f_26304(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26338)
static void C_ccall f_26338(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26322)
static void C_ccall f_26322(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26307)
static void C_fcall f_26307(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26272)
static void C_fcall f_26272(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26283)
static void C_ccall f_26283(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26287)
static void C_ccall f_26287(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26279)
static void C_ccall f_26279(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26161)
static void C_ccall f_26161(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_26165)
static void C_ccall f_26165(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26183)
static void C_ccall f_26183(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26001)
static void C_fcall f_26001(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_26009)
static void C_fcall f_26009(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_26019)
static void C_ccall f_26019(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26057)
static void C_ccall f_26057(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26060)
static void C_ccall f_26060(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26063)
static void C_ccall f_26063(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26138)
static void C_fcall f_26138(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26148)
static void C_ccall f_26148(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26066)
static void C_ccall f_26066(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26069)
static void C_ccall f_26069(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26072)
static void C_ccall f_26072(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26092)
static void C_fcall f_26092(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26102)
static void C_ccall f_26102(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26105)
static void C_ccall f_26105(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26108)
static void C_ccall f_26108(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26075)
static void C_ccall f_26075(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26078)
static void C_ccall f_26078(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25995)
static void C_fcall f_25995(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25989)
static void C_fcall f_25989(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25983)
static void C_fcall f_25983(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25912)
static void C_fcall f_25912(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25953)
static void C_ccall f_25953(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25957)
static void C_ccall f_25957(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25961)
static void C_ccall f_25961(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25965)
static void C_ccall f_25965(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25969)
static void C_ccall f_25969(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25973)
static void C_ccall f_25973(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25977)
static void C_ccall f_25977(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25981)
static void C_ccall f_25981(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25914)
static void C_fcall f_25914(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25920)
static void C_fcall f_25920(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25942)
static void C_ccall f_25942(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25931)
static void C_ccall f_25931(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25761)
static void C_fcall f_25761(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25776)
static void C_fcall f_25776(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25789)
static void C_ccall f_25789(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25749)
static void C_ccall f_25749(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25737)
static void C_ccall f_25737(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25725)
static void C_ccall f_25725(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25719)
static void C_fcall f_25719(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25713)
static void C_ccall f_25713(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25701)
static void C_ccall f_25701(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25689)
static void C_ccall f_25689(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25677)
static void C_ccall f_25677(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25665)
static void C_ccall f_25665(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25659)
static void C_fcall f_25659(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25623)
static void C_ccall f_25623(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_25617)
static void C_ccall f_25617(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_25570)
static void C_ccall f_25570(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25574)
static void C_ccall f_25574(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25590)
static void C_ccall f_25590(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25599)
static void C_ccall f_25599(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25577)
static void C_ccall f_25577(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25561)
static void C_ccall f_25561(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25565)
static void C_ccall f_25565(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25408)
static void C_ccall f_25408(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_25408)
static void C_ccall f_25408r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_25535)
static void C_fcall f_25535(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25548)
static void C_ccall f_25548(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25530)
static void C_ccall f_25530(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25411)
static void C_fcall f_25411(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_25527)
static void C_ccall f_25527(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25511)
static void C_ccall f_25511(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25439)
static void C_ccall f_25439(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25447)
static void C_fcall f_25447(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25457)
static void C_ccall f_25457(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25460)
static void C_ccall f_25460(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25442)
static void C_ccall f_25442(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25231)
static void C_ccall f_25231(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_25235)
static void C_ccall f_25235(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25240)
static void C_ccall f_25240(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25243)
static void C_fcall f_25243(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23055)
static void C_ccall f_23055(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23068)
static void C_ccall f_23068(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_23075)
static void C_fcall f_23075(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23082)
static void C_ccall f_23082(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23061)
static void C_ccall f_23061(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25247)
static void C_ccall f_25247(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25284)
static void C_ccall f_25284(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25377)
static void C_fcall f_25377(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25387)
static void C_fcall f_25387(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25290)
static void C_ccall f_25290(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25347)
static void C_fcall f_25347(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25357)
static void C_fcall f_25357(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25298)
static void C_ccall f_25298(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25312)
static void C_ccall f_25312(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25316)
static void C_ccall f_25316(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25320)
static void C_ccall f_25320(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25324)
static void C_ccall f_25324(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25331)
static void C_ccall f_25331(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25308)
static void C_ccall f_25308(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25301)
static void C_ccall f_25301(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25250)
static void C_ccall f_25250(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24182)
static void C_ccall f_24182(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_24195)
static void C_ccall f_24195(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24245)
static void C_ccall f_24245(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24342)
static void C_ccall f_24342(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24410)
static void C_ccall f_24410(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24667)
static void C_ccall f_24667(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24417)
static void C_fcall f_24417(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24655)
static void C_ccall f_24655(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24606)
static void C_ccall f_24606(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24612)
static void C_ccall f_24612(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24636)
static void C_ccall f_24636(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24632)
static void C_ccall f_24632(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24620)
static void C_ccall f_24620(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24420)
static void C_fcall f_24420(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24582)
static void C_ccall f_24582(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24586)
static void C_ccall f_24586(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24423)
static void C_fcall f_24423(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24559)
static void C_ccall f_24559(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24563)
static void C_ccall f_24563(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24426)
static void C_fcall f_24426(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24536)
static void C_ccall f_24536(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24540)
static void C_ccall f_24540(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24429)
static void C_fcall f_24429(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24461)
static void C_ccall f_24461(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24479)
static void C_ccall f_24479(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24497)
static void C_ccall f_24497(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24515)
static void C_ccall f_24515(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24432)
static void C_fcall f_24432(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24436)
static void C_ccall f_24436(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24346)
static void C_ccall f_24346(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24350)
static void C_ccall f_24350(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24354)
static void C_ccall f_24354(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24249)
static void C_ccall f_24249(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24253)
static void C_ccall f_24253(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24257)
static void C_ccall f_24257(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24276)
static void C_ccall f_24276(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24280)
static void C_ccall f_24280(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24260)
static void C_fcall f_24260(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24264)
static void C_ccall f_24264(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24199)
static void C_ccall f_24199(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24203)
static void C_ccall f_24203(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24207)
static void C_ccall f_24207(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24189)
static void C_fcall f_24189(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24004)
static void C_fcall f_24004(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24016)
static void C_fcall f_24016(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24035)
static void C_ccall f_24035(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24053)
static void C_fcall f_24053(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_24085)
static void C_ccall f_24085(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24088)
static void C_fcall f_24088(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24081)
static void C_ccall f_24081(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24067)
static void C_ccall f_24067(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24038)
static void C_ccall f_24038(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23983)
static void C_fcall f_23983(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23990)
static void C_ccall f_23990(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23993)
static void C_ccall f_23993(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23999)
static void C_ccall f_23999(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23918)
static void C_fcall f_23918(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23927)
static void C_fcall f_23927(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23950)
static void C_ccall f_23950(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23940)
static void C_fcall f_23940(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23874)
static void C_fcall f_23874(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23862)
static void C_fcall f_23862(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23760)
static void C_fcall f_23760(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23712)
static void C_fcall f_23712(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23093)
static void C_fcall f_23093(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_23097)
static void C_ccall f_23097(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23100)
static void C_ccall f_23100(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23526)
static void C_ccall f_23526(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23522)
static void C_ccall f_23522(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23518)
static void C_ccall f_23518(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23103)
static void C_fcall f_23103(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23226)
static void C_ccall f_23226(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22459)
static void C_ccall f_22459(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23232)
static void C_fcall f_23232(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22475)
static void C_ccall f_22475(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23320)
static void C_fcall f_23320(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23390)
static void C_ccall f_23390(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22491)
static void C_ccall f_22491(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23393)
static void C_fcall f_23393(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22523)
static void C_ccall f_22523(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23471)
static void C_fcall f_23471(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23497)
static void C_ccall f_23497(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_23491)
static void C_ccall f_23491(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23480)
static void C_ccall f_23480(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23422)
static void C_fcall f_23422(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23432)
static void C_ccall f_23432(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23458)
static void C_ccall f_23458(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_23452)
static void C_ccall f_23452(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23435)
static void C_ccall f_23435(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23445)
static void C_ccall f_23445(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23438)
static void C_fcall f_23438(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23399)
static void C_ccall f_23399(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23408)
static void C_ccall f_23408(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23402)
static void C_fcall f_23402(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23326)
static void C_ccall f_23326(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23344)
static void C_fcall f_23344(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23377)
static void C_ccall f_23377(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_23363)
static void C_ccall f_23363(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23371)
static void C_ccall f_23371(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23354)
static void C_ccall f_23354(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23329)
static void C_ccall f_23329(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23241)
static void C_ccall f_23241(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23263)
static void C_fcall f_23263(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23310)
static void C_ccall f_23310(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_23296)
static void C_ccall f_23296(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23304)
static void C_ccall f_23304(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23276)
static void C_ccall f_23276(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23279)
static void C_fcall f_23279(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23244)
static void C_ccall f_23244(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23261)
static void C_ccall f_23261(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23247)
static void C_fcall f_23247(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23112)
static void C_ccall f_23112(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23118)
static void C_ccall f_23118(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23176)
static void C_ccall f_23176(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23179)
static void C_ccall f_23179(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23200)
static void C_ccall f_23200(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_23211)
static void C_ccall f_23211(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23190)
static void C_ccall f_23190(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23124)
static void C_ccall f_23124(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23134)
static void C_ccall f_23134(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23170)
static void C_ccall f_23170(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23140)
static void C_ccall f_23140(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23155)
static void C_ccall f_23155(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23159)
static void C_ccall f_23159(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23163)
static void C_ccall f_23163(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23147)
static void C_ccall f_23147(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22989)
static void C_fcall f_22989(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22991)
static void C_ccall f_22991(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_23039)
static void C_ccall f_23039(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22995)
static void C_ccall f_22995(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22998)
static void C_fcall f_22998(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23003)
static void C_fcall f_23003(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23024)
static void C_ccall f_23024(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22981)
static void C_fcall f_22981(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22983)
static void C_ccall f_22983(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_22773)
static void C_fcall f_22773(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_22790)
static void C_ccall f_22790(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22794)
static void C_ccall f_22794(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22740)
static void C_fcall f_22740(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_22747)
static void C_ccall f_22747(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22691)
static void C_ccall f_22691(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22698)
static void C_ccall f_22698(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22756)
static void C_ccall f_22756(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22979)
static void C_ccall f_22979(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22956)
static void C_ccall f_22956(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22972)
static void C_ccall f_22972(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22818)
static void C_ccall f_22818(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22821)
static void C_ccall f_22821(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22845)
static void C_ccall f_22845(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22902)
static void C_ccall f_22902(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22908)
static void C_ccall f_22908(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22917)
static void C_ccall f_22917(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22926)
static void C_ccall f_22926(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22935)
static void C_ccall f_22935(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22944)
static void C_ccall f_22944(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22896)
static void C_ccall f_22896(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22851)
static void C_ccall f_22851(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22857)
static void C_ccall f_22857(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22863)
static void C_ccall f_22863(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22869)
static void C_ccall f_22869(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22875)
static void C_ccall f_22875(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22881)
static void C_ccall f_22881(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22722)
static void C_fcall f_22722(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_22729)
static void C_ccall f_22729(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22712)
static void C_fcall f_22712(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_22700)
static void C_fcall f_22700(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_22668)
static void C_fcall f_22668(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_22675)
static void C_ccall f_22675(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22682)
static void C_ccall f_22682(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22652)
static void C_fcall f_22652(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22659)
static void C_ccall f_22659(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22666)
static void C_ccall f_22666(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22640)
static void C_fcall f_22640(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22622)
static void C_fcall f_22622(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22604)
static void C_fcall f_22604(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22589)
static void C_fcall f_22589(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22583)
static void C_fcall f_22583(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_22571)
static void C_fcall f_22571(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22553)
static void C_fcall f_22553(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22532)
static void C_fcall f_22532(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_22500)
static void C_fcall f_22500(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22507)
static void C_ccall f_22507(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22442)
static void C_fcall f_22442(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_22450)
static void C_ccall f_22450(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22432)
static void C_fcall f_22432(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22440)
static void C_ccall f_22440(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22426)
static void C_fcall f_22426(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22414)
static void C_fcall f_22414(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22411)
static void C_ccall f_22411(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_22390)
static void C_fcall f_22390(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_22303)
static void C_fcall f_22303(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22282)
static void C_fcall f_22282(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_22272)
static void C_fcall f_22272(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22260)
static void C_fcall f_22260(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22231)
static void C_ccall f_22231(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_22219)
static void C_fcall f_22219(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22201)
static void C_fcall f_22201(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22183)
static void C_fcall f_22183(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22162)
static void C_ccall f_22162(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_21140)
static void C_ccall f_21140(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_21140)
static void C_ccall f_21140r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_22139)
static void C_ccall f_22139(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22154)
static void C_ccall f_22154(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22146)
static void C_ccall f_22146(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22110)
static void C_ccall f_22110(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22114)
static void C_ccall f_22114(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22075)
static void C_ccall f_22075(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22079)
static void C_ccall f_22079(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21150)
static void C_fcall f_21150(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22039)
static void C_ccall f_22039(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22054)
static void C_ccall f_22054(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22046)
static void C_ccall f_22046(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22010)
static void C_ccall f_22010(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22014)
static void C_ccall f_22014(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21975)
static void C_ccall f_21975(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21979)
static void C_ccall f_21979(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21153)
static void C_fcall f_21153(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21156)
static void C_ccall f_21156(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21161)
static void C_ccall f_21161(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21868)
static void C_fcall f_21868(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21891)
static void C_fcall f_21891(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_21944)
static void C_ccall f_21944(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21926)
static void C_fcall f_21926(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21919)
static void C_ccall f_21919(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21901)
static void C_ccall f_21901(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21878)
static void C_ccall f_21878(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21355)
static void C_ccall f_21355(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21830)
static void C_fcall f_21830(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21852)
static void C_ccall f_21852(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21836)
static void C_ccall f_21836(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_21844)
static void C_ccall f_21844(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21848)
static void C_ccall f_21848(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21834)
static void C_ccall f_21834(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21824)
static void C_ccall f_21824(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21358)
static void C_fcall f_21358(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21701)
static void C_fcall f_21701(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_21725)
static void C_ccall f_21725(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21787)
static void C_fcall f_21787(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_21728)
static void C_ccall f_21728(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21744)
static void C_fcall f_21744(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21769)
static void C_ccall f_21769(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21735)
static void C_ccall f_21735(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21712)
static void C_ccall f_21712(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21361)
static void C_ccall f_21361(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21687)
static void C_ccall f_21687(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_21365)
static void C_ccall f_21365(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21409)
static void C_ccall f_21409(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21412)
static void C_ccall f_21412(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21668)
static void C_fcall f_21668(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21678)
static void C_ccall f_21678(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21415)
static void C_ccall f_21415(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21606)
static void C_fcall f_21606(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21616)
static void C_ccall f_21616(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21619)
static void C_ccall f_21619(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21639)
static void C_ccall f_21639(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21641)
static void C_fcall f_21641(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_21651)
static void C_ccall f_21651(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21625)
static void C_ccall f_21625(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21628)
static void C_ccall f_21628(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21418)
static void C_ccall f_21418(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21426)
static void C_fcall f_21426(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21439)
static void C_ccall f_21439(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21313)
static void C_ccall f_21313(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21322)
static void C_fcall f_21322(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21344)
static void C_ccall f_21344(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21333)
static void C_ccall f_21333(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21442)
static void C_ccall f_21442(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21577)
static void C_ccall f_21577(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21579)
static void C_fcall f_21579(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_21589)
static void C_ccall f_21589(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21448)
static void C_ccall f_21448(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21550)
static void C_ccall f_21550(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21552)
static void C_fcall f_21552(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_21562)
static void C_ccall f_21562(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21451)
static void C_ccall f_21451(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21463)
static void C_fcall f_21463(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21489)
static void C_ccall f_21489(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21495)
static void C_ccall f_21495(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21501)
static void C_ccall f_21501(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21511)
static void C_ccall f_21511(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21513)
static void C_fcall f_21513(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_21523)
static void C_ccall f_21523(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21504)
static void C_ccall f_21504(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21476)
static void C_ccall f_21476(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21454)
static void C_ccall f_21454(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21421)
static void C_ccall f_21421(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21368)
static void C_ccall f_21368(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21391)
static void C_ccall f_21391(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21380)
static void C_ccall f_21380(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21245)
static void C_fcall f_21245(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_21293)
static void C_ccall f_21293(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21255)
static void C_ccall f_21255(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21283)
static void C_ccall f_21283(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21258)
static void C_ccall f_21258(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21163)
static void C_fcall f_21163(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_21235)
static void C_ccall f_21235(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21167)
static void C_ccall f_21167(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21185)
static void C_ccall f_21185(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21217)
static void C_ccall f_21217(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21046)
static void C_ccall f_21046(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21050)
static void C_ccall f_21050(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21079)
static void C_ccall f_21079(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21084)
static void C_fcall f_21084(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21109)
static void C_fcall f_21109(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21094)
static void C_ccall f_21094(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20528)
static void C_ccall f_20528(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_20528)
static void C_ccall f_20528r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_20799)
static void C_ccall f_20799(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20803)
static void C_ccall f_20803(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20808)
static void C_ccall f_20808(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_20808)
static void C_ccall f_20808r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_21014)
static void C_ccall f_21014(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21029)
static void C_ccall f_21029(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21021)
static void C_ccall f_21021(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20985)
static void C_ccall f_20985(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20989)
static void C_ccall f_20989(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20950)
static void C_ccall f_20950(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20954)
static void C_ccall f_20954(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20812)
static void C_fcall f_20812(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20914)
static void C_ccall f_20914(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20929)
static void C_ccall f_20929(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20921)
static void C_ccall f_20921(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20885)
static void C_ccall f_20885(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20889)
static void C_ccall f_20889(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20850)
static void C_ccall f_20850(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20854)
static void C_ccall f_20854(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20815)
static void C_fcall f_20815(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20818)
static void C_ccall f_20818(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20821)
static void C_fcall f_20821(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20790)
static void C_ccall f_20790(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20532)
static void C_ccall f_20532(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20759)
static void C_ccall f_20759(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20774)
static void C_ccall f_20774(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20766)
static void C_ccall f_20766(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20730)
static void C_ccall f_20730(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20734)
static void C_ccall f_20734(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20695)
static void C_ccall f_20695(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20699)
static void C_ccall f_20699(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20535)
static void C_fcall f_20535(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20659)
static void C_ccall f_20659(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20674)
static void C_ccall f_20674(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20666)
static void C_ccall f_20666(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20630)
static void C_ccall f_20630(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20634)
static void C_ccall f_20634(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20595)
static void C_ccall f_20595(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20599)
static void C_ccall f_20599(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20538)
static void C_fcall f_20538(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20541)
static void C_ccall f_20541(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20544)
static void C_ccall f_20544(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20556)
static void C_ccall f_20556(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_20574)
static void C_ccall f_20574(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20562)
static void C_ccall f_20562(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20550)
static void C_ccall f_20550(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20465)
static void C_fcall f_20465(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20125)
static void C_ccall f_20125(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20307)
static void C_ccall f_20307(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20311)
static void C_ccall f_20311(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20313)
static void C_fcall f_20313(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_20238)
static void C_fcall f_20238(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_20248)
static void C_fcall f_20248(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20255)
static void C_fcall f_20255(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20323)
static void C_ccall f_20323(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20326)
static void C_ccall f_20326(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20330)
static void C_ccall f_20330(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20350)
static void C_fcall f_20350(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20366)
static void C_ccall f_20366(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20333)
static void C_ccall f_20333(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20128)
static void C_fcall f_20128(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_20140)
static void C_fcall f_20140(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_20176)
static void C_ccall f_20176(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20196)
static void C_ccall f_20196(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20201)
static void C_fcall f_20201(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19638)
static void C_ccall f_19638(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_19638)
static void C_ccall f_19638r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_19565)
static void C_fcall f_19565(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_19410)
static void C_ccall f_19410(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19416)
static void C_ccall f_19416(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19501)
static void C_fcall f_19501(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19428)
static void C_ccall f_19428(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19444)
static void C_ccall f_19444(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19448)
static void C_fcall f_19448(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19451)
static void C_fcall f_19451(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19431)
static void C_ccall f_19431(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19442)
static void C_ccall f_19442(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19582)
static void C_ccall f_19582(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20119)
static void C_ccall f_20119(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19642)
static void C_ccall f_19642(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20088)
static void C_ccall f_20088(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20103)
static void C_ccall f_20103(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20095)
static void C_ccall f_20095(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20059)
static void C_ccall f_20059(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20063)
static void C_ccall f_20063(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20024)
static void C_ccall f_20024(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20028)
static void C_ccall f_20028(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19989)
static void C_ccall f_19989(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19993)
static void C_ccall f_19993(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19645)
static void C_fcall f_19645(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19953)
static void C_ccall f_19953(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19968)
static void C_ccall f_19968(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19960)
static void C_ccall f_19960(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19924)
static void C_ccall f_19924(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19928)
static void C_ccall f_19928(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19889)
static void C_ccall f_19889(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19893)
static void C_ccall f_19893(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19854)
static void C_ccall f_19854(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19858)
static void C_ccall f_19858(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19648)
static void C_fcall f_19648(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19818)
static void C_ccall f_19818(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19833)
static void C_ccall f_19833(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19825)
static void C_ccall f_19825(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19789)
static void C_ccall f_19789(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19793)
static void C_ccall f_19793(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19754)
static void C_ccall f_19754(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19758)
static void C_ccall f_19758(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19719)
static void C_ccall f_19719(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19723)
static void C_ccall f_19723(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19651)
static void C_fcall f_19651(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19654)
static void C_ccall f_19654(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19657)
static void C_ccall f_19657(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19690)
static void C_ccall f_19690(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_19698)
static void C_ccall f_19698(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19663)
static void C_ccall f_19663(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19676)
static void C_ccall f_19676(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19666)
static void C_fcall f_19666(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19669)
static void C_ccall f_19669(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19205)
static void C_ccall f_19205(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19209)
static void C_ccall f_19209(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19212)
static void C_ccall f_19212(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19215)
static void C_ccall f_19215(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19384)
static void C_ccall f_19384(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19397)
static void C_ccall f_19397(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19401)
static void C_ccall f_19401(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19221)
static void C_ccall f_19221(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19377)
static void C_ccall f_19377(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19358)
static void C_ccall f_19358(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19365)
static void C_ccall f_19365(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19369)
static void C_ccall f_19369(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19227)
static void C_fcall f_19227(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19233)
static void C_ccall f_19233(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19317)
static void C_ccall f_19317(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19319)
static void C_fcall f_19319(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19341)
static void C_ccall f_19341(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19348)
static void C_ccall f_19348(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19352)
static void C_ccall f_19352(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19338)
static void C_fcall f_19338(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19334)
static void C_ccall f_19334(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19275)
static void C_ccall f_19275(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19292)
static void C_fcall f_19292(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19302)
static void C_ccall f_19302(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19278)
static void C_ccall f_19278(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19237)
static void C_fcall f_19237(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19245)
static void C_ccall f_19245(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19247)
static void C_fcall f_19247(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_19268)
static void C_ccall f_19268(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19093)
static void C_fcall f_19093(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19203)
static void C_ccall f_19203(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19162)
static void C_fcall f_19162(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19195)
static void C_ccall f_19195(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19191)
static void C_ccall f_19191(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19176)
static void C_ccall f_19176(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19100)
static void C_ccall f_19100(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19108)
static void C_fcall f_19108(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_19153)
static void C_ccall f_19153(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19141)
static void C_ccall f_19141(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19125)
static void C_ccall f_19125(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18326)
static void C_ccall f_18326(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_18326)
static void C_ccall f_18326r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_18643)
static void C_ccall f_18643(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18650)
static void C_fcall f_18650(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19055)
static void C_ccall f_19055(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19070)
static void C_ccall f_19070(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19062)
static void C_ccall f_19062(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19026)
static void C_ccall f_19026(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19030)
static void C_ccall f_19030(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18991)
static void C_ccall f_18991(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18995)
static void C_ccall f_18995(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18956)
static void C_ccall f_18956(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18960)
static void C_ccall f_18960(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18653)
static void C_fcall f_18653(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18920)
static void C_ccall f_18920(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18935)
static void C_ccall f_18935(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18927)
static void C_ccall f_18927(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18891)
static void C_ccall f_18891(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18895)
static void C_ccall f_18895(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18856)
static void C_ccall f_18856(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18860)
static void C_ccall f_18860(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18821)
static void C_ccall f_18821(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18825)
static void C_ccall f_18825(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18656)
static void C_fcall f_18656(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18785)
static void C_ccall f_18785(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18800)
static void C_ccall f_18800(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18792)
static void C_ccall f_18792(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18756)
static void C_ccall f_18756(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18760)
static void C_ccall f_18760(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18721)
static void C_ccall f_18721(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18725)
static void C_ccall f_18725(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18686)
static void C_ccall f_18686(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18690)
static void C_ccall f_18690(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18659)
static void C_fcall f_18659(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18662)
static void C_ccall f_18662(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18330)
static void C_ccall f_18330(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18333)
static void C_ccall f_18333(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18607)
static void C_ccall f_18607(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18611)
static void C_ccall f_18611(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18614)
static void C_ccall f_18614(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18617)
static void C_ccall f_18617(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18620)
static void C_ccall f_18620(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18633)
static void C_ccall f_18633(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18623)
static void C_fcall f_18623(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18339)
static void C_ccall f_18339(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18346)
static void C_fcall f_18346(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18577)
static void C_ccall f_18577(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18592)
static void C_ccall f_18592(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18584)
static void C_ccall f_18584(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18548)
static void C_ccall f_18548(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18552)
static void C_ccall f_18552(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18513)
static void C_ccall f_18513(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18517)
static void C_ccall f_18517(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18349)
static void C_fcall f_18349(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18477)
static void C_ccall f_18477(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18492)
static void C_ccall f_18492(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18484)
static void C_ccall f_18484(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18448)
static void C_ccall f_18448(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18452)
static void C_ccall f_18452(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18413)
static void C_ccall f_18413(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18417)
static void C_ccall f_18417(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18352)
static void C_fcall f_18352(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18355)
static void C_ccall f_18355(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18370)
static void C_ccall f_18370(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_18392)
static void C_ccall f_18392(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18376)
static void C_ccall f_18376(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18384)
static void C_ccall f_18384(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18358)
static void C_ccall f_18358(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18361)
static void C_ccall f_18361(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18243)
static void C_fcall f_18243(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18234)
static void C_fcall f_18234(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18225)
static void C_fcall f_18225(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18207)
static void C_fcall f_18207(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18189)
static void C_fcall f_18189(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18171)
static void C_fcall f_18171(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18162)
static void C_fcall f_18162(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18153)
static void C_fcall f_18153(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17931)
static void C_ccall f_17931(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_17981)
static void C_ccall f_17981(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18126)
static void C_ccall f_18126(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18007)
static void C_ccall f_18007(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18122)
static void C_ccall f_18122(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18107)
static void C_ccall f_18107(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18088)
static void C_ccall f_18088(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18061)
static void C_ccall f_18061(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18014)
static void C_ccall f_18014(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17984)
static void C_fcall f_17984(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17934)
static void C_ccall f_17934(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_17940)
static void C_fcall f_17940(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_17956)
static void C_ccall f_17956(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17959)
static void C_ccall f_17959(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17457)
static void C_ccall f_17457(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_17457)
static void C_ccall f_17457r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_17921)
static void C_ccall f_17921(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17461)
static void C_fcall f_17461(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17893)
static void C_ccall f_17893(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17908)
static void C_ccall f_17908(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17900)
static void C_ccall f_17900(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17864)
static void C_ccall f_17864(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17868)
static void C_ccall f_17868(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17829)
static void C_ccall f_17829(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17833)
static void C_ccall f_17833(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17794)
static void C_ccall f_17794(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17798)
static void C_ccall f_17798(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17464)
static void C_fcall f_17464(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17758)
static void C_ccall f_17758(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17773)
static void C_ccall f_17773(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17765)
static void C_ccall f_17765(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17729)
static void C_ccall f_17729(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17733)
static void C_ccall f_17733(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17694)
static void C_ccall f_17694(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17698)
static void C_ccall f_17698(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17659)
static void C_ccall f_17659(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17663)
static void C_ccall f_17663(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17467)
static void C_fcall f_17467(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17623)
static void C_ccall f_17623(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17638)
static void C_ccall f_17638(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17630)
static void C_ccall f_17630(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17594)
static void C_ccall f_17594(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17598)
static void C_ccall f_17598(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17559)
static void C_ccall f_17559(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17563)
static void C_ccall f_17563(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17524)
static void C_ccall f_17524(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17528)
static void C_ccall f_17528(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17470)
static void C_fcall f_17470(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17473)
static void C_ccall f_17473(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17476)
static void C_ccall f_17476(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17491)
static void C_ccall f_17491(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_17503)
static void C_ccall f_17503(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17482)
static void C_ccall f_17482(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17485)
static void C_ccall f_17485(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17381)
static void C_ccall f_17381(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_17385)
static void C_ccall f_17385(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17404)
static void C_ccall f_17404(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17414)
static void C_ccall f_17414(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17416)
static void C_fcall f_17416(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_17433)
static void C_ccall f_17433(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17436)
static void C_ccall f_17436(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17447)
static void C_ccall f_17447(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17388)
static void C_ccall f_17388(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17118)
static void C_ccall f_17118(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_17118)
static void C_ccall f_17118r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_17371)
static void C_ccall f_17371(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17122)
static void C_fcall f_17122(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17343)
static void C_ccall f_17343(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17358)
static void C_ccall f_17358(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17350)
static void C_ccall f_17350(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17314)
static void C_ccall f_17314(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17318)
static void C_ccall f_17318(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17279)
static void C_ccall f_17279(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17283)
static void C_ccall f_17283(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17125)
static void C_fcall f_17125(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17243)
static void C_ccall f_17243(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17258)
static void C_ccall f_17258(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17250)
static void C_ccall f_17250(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17214)
static void C_ccall f_17214(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17218)
static void C_ccall f_17218(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17179)
static void C_ccall f_17179(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17183)
static void C_ccall f_17183(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17128)
static void C_fcall f_17128(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17131)
static void C_ccall f_17131(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17134)
static void C_ccall f_17134(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17146)
static void C_ccall f_17146(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_17158)
static void C_ccall f_17158(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17140)
static void C_ccall f_17140(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17082)
static void C_ccall f_17082(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_17086)
static void C_ccall f_17086(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17108)
static void C_ccall f_17108(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17102)
static void C_ccall f_17102(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17095)
static void C_ccall f_17095(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16835)
static void C_ccall f_16835(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_16835)
static void C_ccall f_16835r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_16839)
static void C_fcall f_16839(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17052)
static void C_ccall f_17052(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17067)
static void C_ccall f_17067(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17059)
static void C_ccall f_17059(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17023)
static void C_ccall f_17023(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17027)
static void C_ccall f_17027(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16988)
static void C_ccall f_16988(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16992)
static void C_ccall f_16992(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16842)
static void C_fcall f_16842(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16952)
static void C_ccall f_16952(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16967)
static void C_ccall f_16967(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16959)
static void C_ccall f_16959(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16923)
static void C_ccall f_16923(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16927)
static void C_ccall f_16927(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16888)
static void C_ccall f_16888(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16892)
static void C_ccall f_16892(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16845)
static void C_fcall f_16845(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16848)
static void C_ccall f_16848(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16851)
static void C_ccall f_16851(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16859)
static void C_ccall f_16859(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_16867)
static void C_ccall f_16867(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16857)
static void C_ccall f_16857(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16620)
static void C_ccall f_16620(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_16624)
static void C_ccall f_16624(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16833)
static void C_ccall f_16833(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16786)
static void C_ccall f_16786(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16798)
static void C_fcall f_16798(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16654)
static void C_ccall f_16654(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16657)
static void C_ccall f_16657(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16663)
static void C_ccall f_16663(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16666)
static void C_ccall f_16666(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16754)
static void C_fcall f_16754(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16669)
static void C_fcall f_16669(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16748)
static void C_ccall f_16748(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16675)
static void C_ccall f_16675(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16678)
static void C_ccall f_16678(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16630)
static void C_ccall f_16630(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16633)
static void C_ccall f_16633(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16640)
static void C_ccall f_16640(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16150)
static void C_ccall f_16150(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_16150)
static void C_ccall f_16150r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_16154)
static void C_fcall f_16154(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16590)
static void C_ccall f_16590(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16605)
static void C_ccall f_16605(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16597)
static void C_ccall f_16597(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16561)
static void C_ccall f_16561(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16565)
static void C_ccall f_16565(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16526)
static void C_ccall f_16526(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16530)
static void C_ccall f_16530(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16491)
static void C_ccall f_16491(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16495)
static void C_ccall f_16495(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16157)
static void C_fcall f_16157(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16455)
static void C_ccall f_16455(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16470)
static void C_ccall f_16470(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16462)
static void C_ccall f_16462(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16426)
static void C_ccall f_16426(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16430)
static void C_ccall f_16430(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16391)
static void C_ccall f_16391(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16395)
static void C_ccall f_16395(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16356)
static void C_ccall f_16356(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16360)
static void C_ccall f_16360(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16160)
static void C_fcall f_16160(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16320)
static void C_ccall f_16320(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16335)
static void C_ccall f_16335(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16327)
static void C_ccall f_16327(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16291)
static void C_ccall f_16291(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16295)
static void C_ccall f_16295(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16256)
static void C_ccall f_16256(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16260)
static void C_ccall f_16260(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16221)
static void C_ccall f_16221(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16225)
static void C_ccall f_16225(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16163)
static void C_fcall f_16163(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16166)
static void C_ccall f_16166(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16169)
static void C_ccall f_16169(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16192)
static void C_ccall f_16192(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_16200)
static void C_ccall f_16200(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16175)
static void C_ccall f_16175(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16178)
static void C_ccall f_16178(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16070)
static void C_fcall f_16070(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_16061)
static void C_fcall f_16061(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15989)
static void C_ccall f_15989(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15993)
static void C_ccall f_15993(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15996)
static void C_fcall f_15996(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15734)
static void C_ccall f_15734(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_15734)
static void C_ccall f_15734r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_15738)
static void C_fcall f_15738(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15959)
static void C_ccall f_15959(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15974)
static void C_ccall f_15974(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15966)
static void C_ccall f_15966(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15930)
static void C_ccall f_15930(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15934)
static void C_ccall f_15934(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15895)
static void C_ccall f_15895(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15899)
static void C_ccall f_15899(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15741)
static void C_fcall f_15741(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15859)
static void C_ccall f_15859(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15874)
static void C_ccall f_15874(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15866)
static void C_ccall f_15866(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15830)
static void C_ccall f_15830(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15834)
static void C_ccall f_15834(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15795)
static void C_ccall f_15795(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15799)
static void C_ccall f_15799(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15744)
static void C_fcall f_15744(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15747)
static void C_ccall f_15747(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15750)
static void C_ccall f_15750(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15762)
static void C_ccall f_15762(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_15774)
static void C_ccall f_15774(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15756)
static void C_ccall f_15756(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15619)
static void C_fcall f_15619(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15732)
static void C_ccall f_15732(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15629)
static void C_ccall f_15629(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15717)
static void C_ccall f_15717(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15728)
static void C_ccall f_15728(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15724)
static void C_ccall f_15724(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15632)
static void C_ccall f_15632(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15714)
static void C_ccall f_15714(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15640)
static void C_ccall f_15640(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15704)
static void C_ccall f_15704(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15649)
static void C_ccall f_15649(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15668)
static void C_ccall f_15668(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15697)
static void C_ccall f_15697(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15678)
static void C_ccall f_15678(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15693)
static void C_ccall f_15693(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15681)
static void C_ccall f_15681(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15652)
static void C_ccall f_15652(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15662)
static void C_ccall f_15662(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15643)
static void C_fcall f_15643(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15646)
static void C_ccall f_15646(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15573)
static void C_fcall f_15573(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15564)
static void C_fcall f_15564(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15263)
static void C_fcall f_15263(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15270)
static void C_ccall f_15270(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15559)
static void C_ccall f_15559(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15273)
static void C_ccall f_15273(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15544)
static void C_ccall f_15544(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15536)
static void C_ccall f_15536(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15528)
static void C_ccall f_15528(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15531)
static void C_ccall f_15531(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15499)
static void C_fcall f_15499(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15522)
static void C_ccall f_15522(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15505)
static void C_fcall f_15505(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15509)
static void C_ccall f_15509(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15276)
static void C_ccall f_15276(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15282)
static void C_ccall f_15282(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15374)
static void C_ccall f_15374(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15486)
static void C_ccall f_15486(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15493)
static void C_ccall f_15493(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15397)
static void C_fcall f_15397(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15399)
static void C_fcall f_15399(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_15448)
static void C_fcall f_15448(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15483)
static void C_ccall f_15483(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15472)
static void C_ccall f_15472(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15617)
static void C_ccall f_15617(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15592)
static void C_ccall f_15592(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15613)
static void C_ccall f_15613(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15609)
static void C_ccall f_15609(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15601)
static void C_ccall f_15601(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15465)
static void C_ccall f_15465(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15458)
static void C_ccall f_15458(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15406)
static void C_ccall f_15406(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15446)
static void C_ccall f_15446(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15410)
static void C_ccall f_15410(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15442)
static void C_ccall f_15442(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15429)
static void C_ccall f_15429(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15437)
static void C_ccall f_15437(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15433)
static void C_ccall f_15433(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15413)
static void C_fcall f_15413(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15416)
static void C_ccall f_15416(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15390)
static void C_ccall f_15390(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15377)
static void C_ccall f_15377(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15386)
static void C_ccall f_15386(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15381)
static void C_ccall f_15381(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15288)
static void C_ccall f_15288(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15368)
static void C_ccall f_15368(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15348)
static void C_ccall f_15348(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15354)
static void C_ccall f_15354(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15365)
static void C_ccall f_15365(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15345)
static void C_ccall f_15345(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15333)
static void C_ccall f_15333(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15336)
static void C_ccall f_15336(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15291)
static void C_ccall f_15291(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15327)
static void C_ccall f_15327(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15322)
static void C_ccall f_15322(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15294)
static void C_ccall f_15294(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15307)
static void C_ccall f_15307(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15297)
static void C_fcall f_15297(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15300)
static void C_ccall f_15300(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15303)
static void C_ccall f_15303(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15140)
static void C_ccall f_15140(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_15140)
static void C_ccall f_15140r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_15199)
static void C_ccall f_15199(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15209)
static void C_ccall f_15209(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15211)
static void C_fcall f_15211(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_15240)
static void C_ccall f_15240(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15245)
static void C_ccall f_15245(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15230)
static void C_fcall f_15230(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15161)
static void C_fcall f_15161(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_15193)
static void C_ccall f_15193(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15121)
static void C_ccall f_15121(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15128)
static void C_ccall f_15128(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15135)
static void C_ccall f_15135(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15102)
static void C_ccall f_15102(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15109)
static void C_ccall f_15109(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15116)
static void C_ccall f_15116(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14922)
static void C_fcall f_14922(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7,C_word t8,C_word t9) C_noret;
C_noret_decl(f_14926)
static void C_ccall f_14926(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14929)
static void C_ccall f_14929(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14932)
static void C_ccall f_14932(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14935)
static void C_ccall f_14935(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15092)
static void C_ccall f_15092(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15099)
static void C_ccall f_15099(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14938)
static void C_ccall f_14938(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14941)
static void C_fcall f_14941(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14947)
static void C_ccall f_14947(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14953)
static void C_ccall f_14953(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15016)
static void C_ccall f_15016(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15030)
static void C_ccall f_15030(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14956)
static void C_fcall f_14956(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14959)
static void C_ccall f_14959(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14965)
static void C_fcall f_14965(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14978)
static void C_ccall f_14978(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14968)
static void C_ccall f_14968(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14971)
static void C_ccall f_14971(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14912)
static void C_fcall f_14912(C_word t0) C_noret;
C_noret_decl(f_14857)
static void C_fcall f_14857(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14848)
static void C_fcall f_14848(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14731)
static void C_fcall f_14731(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14722)
static void C_fcall f_14722(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14713)
static void C_ccall f_14713(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14704)
static void C_fcall f_14704(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14695)
static void C_fcall f_14695(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14677)
static void C_fcall f_14677(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14668)
static void C_fcall f_14668(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14659)
static void C_fcall f_14659(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14641)
static void C_fcall f_14641(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14632)
static void C_fcall f_14632(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14623)
static void C_fcall f_14623(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14608)
static void C_fcall f_14608(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14563)
static void C_fcall f_14563(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14545)
static void C_fcall f_14545(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14536)
static void C_fcall f_14536(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14509)
static void C_fcall f_14509(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14491)
static void C_fcall f_14491(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14473)
static void C_fcall f_14473(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14464)
static void C_fcall f_14464(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14452)
static void C_fcall f_14452(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_14326)
static void C_ccall f_14326(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14332)
static void C_ccall f_14332(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14336)
static void C_ccall f_14336(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14354)
static void C_ccall f_14354(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14357)
static void C_ccall f_14357(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14361)
static void C_ccall f_14361(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14364)
static void C_ccall f_14364(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14416)
static void C_fcall f_14416(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14427)
static void C_ccall f_14427(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14367)
static void C_ccall f_14367(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14377)
static void C_ccall f_14377(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14379)
static void C_fcall f_14379(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_14223)
static void C_ccall f_14223(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14247)
static void C_ccall f_14247(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14251)
static void C_ccall f_14251(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14277)
static void C_fcall f_14277(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_14287)
static void C_ccall f_14287(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14324)
static void C_ccall f_14324(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14316)
static void C_ccall f_14316(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14254)
static void C_ccall f_14254(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14224)
static void C_fcall f_14224(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14228)
static void C_ccall f_14228(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14231)
static void C_ccall f_14231(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14393)
static void C_ccall f_14393(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14396)
static void C_fcall f_14396(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14403)
static void C_ccall f_14403(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14337)
static void C_fcall f_14337(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14341)
static void C_ccall f_14341(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14344)
static void C_ccall f_14344(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13813)
static void C_ccall f_13813(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...) C_noret;
C_noret_decl(f_13813)
static void C_ccall f_13813r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t5) C_noret;
C_noret_decl(f_14192)
static void C_fcall f_14192(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14186)
static void C_ccall f_14186(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13817)
static void C_ccall f_13817(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14170)
static void C_ccall f_14170(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13820)
static void C_ccall f_13820(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14156)
static void C_ccall f_14156(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14152)
static void C_ccall f_14152(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13823)
static void C_fcall f_13823(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14145)
static void C_ccall f_14145(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14141)
static void C_ccall f_14141(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13826)
static void C_fcall f_13826(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13829)
static void C_fcall f_13829(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14129)
static void C_ccall f_14129(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14121)
static void C_ccall f_14121(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14125)
static void C_ccall f_14125(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14113)
static void C_ccall f_14113(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14117)
static void C_ccall f_14117(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13987)
static void C_fcall f_13987(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14102)
static void C_ccall f_14102(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14106)
static void C_ccall f_14106(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14094)
static void C_ccall f_14094(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14098)
static void C_ccall f_14098(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13990)
static void C_fcall f_13990(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13994)
static void C_ccall f_13994(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13999)
static void C_fcall f_13999(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14009)
static void C_fcall f_14009(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14012)
static void C_ccall f_14012(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13893)
static void C_ccall f_13893(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13956)
static void C_fcall f_13956(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_13977)
static void C_ccall f_13977(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13918)
static void C_fcall f_13918(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_13947)
static void C_ccall f_13947(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13896)
static void C_ccall f_13896(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13913)
static void C_ccall f_13913(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13909)
static void C_ccall f_13909(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13359)
static void C_ccall f_13359(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13363)
static void C_ccall f_13363(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13351)
static void C_ccall f_13351(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_13276)
static void C_ccall f_13276(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13337)
static void C_ccall f_13337(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_13280)
static void C_ccall f_13280(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13288)
static void C_fcall f_13288(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_13321)
static void C_ccall f_13321(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13298)
static void C_ccall f_13298(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13301)
static void C_ccall f_13301(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13873)
static void C_fcall f_13873(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_13843)
static void C_fcall f_13843(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_13832)
static void C_ccall f_13832(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13756)
static void C_ccall f_13756(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_13764)
static void C_ccall f_13764(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13768)
static void C_ccall f_13768(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13772)
static void C_ccall f_13772(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13778)
static void C_fcall f_13778(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_13788)
static void C_ccall f_13788(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13544)
static void C_ccall f_13544(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_13612)
static void C_ccall f_13612(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13615)
static void C_ccall f_13615(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13618)
static void C_ccall f_13618(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13621)
static void C_ccall f_13621(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13624)
static void C_ccall f_13624(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13722)
static void C_fcall f_13722(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_13732)
static void C_ccall f_13732(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13690)
static void C_fcall f_13690(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_13700)
static void C_ccall f_13700(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13641)
static void C_fcall f_13641(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_13660)
static void C_fcall f_13660(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_13670)
static void C_ccall f_13670(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13651)
static void C_ccall f_13651(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13627)
static void C_ccall f_13627(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13580)
static void C_fcall f_13580(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_13590)
static void C_ccall f_13590(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13563)
static void C_fcall f_13563(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13570)
static void C_ccall f_13570(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13546)
static void C_fcall f_13546(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13553)
static void C_ccall f_13553(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13365)
static void C_ccall f_13365(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_13373)
static void C_ccall f_13373(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13377)
static void C_ccall f_13377(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13379)
static void C_fcall f_13379(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_13389)
static void C_fcall f_13389(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13520)
static void C_ccall f_13520(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13469)
static void C_ccall f_13469(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13472)
static void C_ccall f_13472(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13483)
static void C_ccall f_13483(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13435)
static void C_ccall f_13435(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13404)
static void C_ccall f_13404(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13407)
static void C_ccall f_13407(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13392)
static void C_ccall f_13392(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12953)
static void C_ccall f_12953(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_13270)
static void C_ccall f_13270(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13199)
static void C_ccall f_13199(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13201)
static void C_fcall f_13201(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_7940)
static void C_ccall f_7940(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_13220)
static void C_ccall f_13220(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13223)
static void C_fcall f_13223(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12966)
static void C_ccall f_12966(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13042)
static void C_fcall f_13042(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_13195)
static void C_ccall f_13195(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13179)
static void C_ccall f_13179(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13131)
static void C_fcall f_13131(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_13145)
static void C_fcall f_13145(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13098)
static void C_ccall f_13098(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13073)
static void C_fcall f_13073(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12969)
static void C_ccall f_12969(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12977)
static void C_fcall f_12977(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_13010)
static void C_ccall f_13010(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11480)
static void C_ccall f_11480(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_11480)
static void C_ccall f_11480r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_12930)
static void C_ccall f_12930(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12945)
static void C_ccall f_12945(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12937)
static void C_ccall f_12937(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12901)
static void C_ccall f_12901(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12905)
static void C_ccall f_12905(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12866)
static void C_ccall f_12866(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12870)
static void C_ccall f_12870(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12831)
static void C_ccall f_12831(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12835)
static void C_ccall f_12835(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12796)
static void C_ccall f_12796(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12800)
static void C_ccall f_12800(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12761)
static void C_ccall f_12761(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12765)
static void C_ccall f_12765(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12726)
static void C_ccall f_12726(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12730)
static void C_ccall f_12730(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11484)
static void C_fcall f_11484(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12690)
static void C_ccall f_12690(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12705)
static void C_ccall f_12705(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12697)
static void C_ccall f_12697(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12661)
static void C_ccall f_12661(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12665)
static void C_ccall f_12665(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12626)
static void C_ccall f_12626(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12630)
static void C_ccall f_12630(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12591)
static void C_ccall f_12591(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12595)
static void C_ccall f_12595(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12556)
static void C_ccall f_12556(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12560)
static void C_ccall f_12560(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12521)
static void C_ccall f_12521(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12525)
static void C_ccall f_12525(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12486)
static void C_ccall f_12486(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12490)
static void C_ccall f_12490(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11487)
static void C_fcall f_11487(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12450)
static void C_ccall f_12450(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12465)
static void C_ccall f_12465(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12457)
static void C_ccall f_12457(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12421)
static void C_ccall f_12421(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12425)
static void C_ccall f_12425(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12386)
static void C_ccall f_12386(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12390)
static void C_ccall f_12390(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12351)
static void C_ccall f_12351(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12355)
static void C_ccall f_12355(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12316)
static void C_ccall f_12316(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12320)
static void C_ccall f_12320(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12281)
static void C_ccall f_12281(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12285)
static void C_ccall f_12285(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12246)
static void C_ccall f_12246(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12250)
static void C_ccall f_12250(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11490)
static void C_fcall f_11490(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12210)
static void C_ccall f_12210(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12225)
static void C_ccall f_12225(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12217)
static void C_ccall f_12217(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12181)
static void C_ccall f_12181(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12185)
static void C_ccall f_12185(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12146)
static void C_ccall f_12146(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12150)
static void C_ccall f_12150(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12111)
static void C_ccall f_12111(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12115)
static void C_ccall f_12115(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12076)
static void C_ccall f_12076(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12080)
static void C_ccall f_12080(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12041)
static void C_ccall f_12041(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12045)
static void C_ccall f_12045(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12006)
static void C_ccall f_12006(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12010)
static void C_ccall f_12010(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11493)
static void C_fcall f_11493(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11970)
static void C_ccall f_11970(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11985)
static void C_ccall f_11985(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11977)
static void C_ccall f_11977(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11941)
static void C_ccall f_11941(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11945)
static void C_ccall f_11945(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11906)
static void C_ccall f_11906(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11910)
static void C_ccall f_11910(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11871)
static void C_ccall f_11871(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11875)
static void C_ccall f_11875(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11836)
static void C_ccall f_11836(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11840)
static void C_ccall f_11840(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11801)
static void C_ccall f_11801(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11805)
static void C_ccall f_11805(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11766)
static void C_ccall f_11766(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11770)
static void C_ccall f_11770(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11496)
static void C_fcall f_11496(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11730)
static void C_ccall f_11730(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11745)
static void C_ccall f_11745(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11737)
static void C_ccall f_11737(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11701)
static void C_ccall f_11701(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11705)
static void C_ccall f_11705(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11666)
static void C_ccall f_11666(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11670)
static void C_ccall f_11670(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11631)
static void C_ccall f_11631(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11635)
static void C_ccall f_11635(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11596)
static void C_ccall f_11596(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11600)
static void C_ccall f_11600(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11561)
static void C_ccall f_11561(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11565)
static void C_ccall f_11565(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11526)
static void C_ccall f_11526(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11530)
static void C_ccall f_11530(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11499)
static void C_fcall f_11499(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11502)
static void C_ccall f_11502(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11261)
static void C_fcall f_11261(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11270)
static void C_ccall f_11270(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11274)
static void C_ccall f_11274(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11461)
static void C_ccall f_11461(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_11446)
static void C_ccall f_11446(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_11411)
static void C_ccall f_11411(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11391)
static void C_ccall f_11391(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11395)
static void C_ccall f_11395(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11381)
static void C_ccall f_11381(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11389)
static void C_ccall f_11389(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11348)
static void C_ccall f_11348(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11276)
static void C_ccall f_11276(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11343)
static void C_ccall f_11343(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11280)
static void C_ccall f_11280(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11316)
static void C_fcall f_11316(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11291)
static void C_fcall f_11291(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11232)
static void C_ccall f_11232(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11236)
static void C_ccall f_11236(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11247)
static void C_ccall f_11247(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11245)
static void C_ccall f_11245(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11201)
static void C_ccall f_11201(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11205)
static void C_ccall f_11205(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11216)
static void C_ccall f_11216(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11214)
static void C_ccall f_11214(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11183)
static void C_ccall f_11183(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11191)
static void C_ccall f_11191(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11199)
static void C_ccall f_11199(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11173)
static void C_ccall f_11173(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11181)
static void C_ccall f_11181(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11114)
static void C_ccall f_11114(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11121)
static void C_ccall f_11121(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11124)
static void C_ccall f_11124(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11127)
static void C_ccall f_11127(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11132)
static void C_fcall f_11132(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11076)
static void C_ccall f_11076(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11084)
static void C_ccall f_11084(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11088)
static void C_ccall f_11088(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11108)
static void C_ccall f_11108(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11092)
static void C_ccall f_11092(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11100)
static void C_ccall f_11100(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11096)
static void C_ccall f_11096(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11064)
static void C_ccall f_11064(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11055)
static void C_fcall f_11055(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11046)
static void C_ccall f_11046(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11037)
static void C_fcall f_11037(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11028)
static void C_ccall f_11028(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11019)
static void C_fcall f_11019(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11010)
static void C_ccall f_11010(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10995)
static void C_fcall f_10995(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10989)
static void C_fcall f_10989(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_10847)
static void C_ccall f_10847(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_10847)
static void C_ccall f_10847r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_10851)
static void C_fcall f_10851(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10920)
static void C_ccall f_10920(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_10963)
static void C_ccall f_10963(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10967)
static void C_ccall f_10967(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10956)
static void C_ccall f_10956(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10943)
static void C_ccall f_10943(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10862)
static void C_ccall f_10862(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_10905)
static void C_ccall f_10905(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10909)
static void C_ccall f_10909(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10898)
static void C_ccall f_10898(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10885)
static void C_ccall f_10885(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10681)
static void C_ccall f_10681(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_10782)
static void C_ccall f_10782(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10831)
static void C_ccall f_10831(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10827)
static void C_ccall f_10827(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10799)
static void C_ccall f_10799(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10734)
static void C_fcall f_10734(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10743)
static void C_fcall f_10743(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_10727)
static void C_ccall f_10727(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10546)
static void C_ccall f_10546(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10672)
static void C_ccall f_10672(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10668)
static void C_ccall f_10668(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10646)
static void C_ccall f_10646(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10576)
static void C_fcall f_10576(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10592)
static void C_fcall f_10592(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_10501)
static void C_ccall f_10501(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10544)
static void C_ccall f_10544(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10533)
static void C_ccall f_10533(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10385)
static void C_ccall f_10385(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10499)
static void C_ccall f_10499(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10400)
static void C_fcall f_10400(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_10430)
static void C_fcall f_10430(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10449)
static void C_ccall f_10449(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10434)
static void C_ccall f_10434(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10413)
static void C_fcall f_10413(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10263)
static void C_ccall f_10263(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10383)
static void C_ccall f_10383(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10278)
static void C_fcall f_10278(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_10308)
static void C_fcall f_10308(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10327)
static void C_ccall f_10327(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10312)
static void C_ccall f_10312(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10291)
static void C_fcall f_10291(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10166)
static void C_ccall f_10166(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10261)
static void C_ccall f_10261(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10181)
static void C_fcall f_10181(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_10227)
static void C_ccall f_10227(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10212)
static void C_ccall f_10212(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10194)
static void C_fcall f_10194(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10113)
static void C_fcall f_10113(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_10151)
static void C_ccall f_10151(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10158)
static void C_ccall f_10158(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10136)
static void C_ccall f_10136(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10111)
static void C_ccall f_10111(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10083)
static void C_fcall f_10083(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10085)
static void C_ccall f_10085(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10063)
static void C_ccall f_10063(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10011)
static void C_fcall f_10011(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_10048)
static void C_ccall f_10048(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10015)
static void C_ccall f_10015(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10031)
static void C_ccall f_10031(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10033)
static void C_ccall f_10033(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9797)
static void C_ccall f_9797(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...) C_noret;
C_noret_decl(f_9797)
static void C_ccall f_9797r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t5) C_noret;
C_noret_decl(f_9810)
static void C_fcall f_9810(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9892)
static void C_fcall f_9892(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9895)
static void C_ccall f_9895(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9903)
static void C_fcall f_9903(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_9915)
static void C_fcall f_9915(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9936)
static void C_ccall f_9936(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9944)
static void C_ccall f_9944(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9831)
static void C_ccall f_9831(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9836)
static void C_fcall f_9836(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9868)
static void C_ccall f_9868(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9776)
static void C_ccall f_9776(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_9776)
static void C_ccall f_9776r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_9757)
static void C_ccall f_9757(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_9757)
static void C_ccall f_9757r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_9716)
static void C_ccall f_9716(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_9716)
static void C_ccall f_9716r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_9697)
static void C_ccall f_9697(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_9697)
static void C_ccall f_9697r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_9469)
static void C_ccall f_9469(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_9469)
static void C_ccall f_9469r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_9674)
static void C_ccall f_9674(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9689)
static void C_ccall f_9689(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9681)
static void C_ccall f_9681(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9645)
static void C_ccall f_9645(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9649)
static void C_ccall f_9649(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9610)
static void C_ccall f_9610(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9614)
static void C_ccall f_9614(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9473)
static void C_fcall f_9473(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9574)
static void C_ccall f_9574(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9589)
static void C_ccall f_9589(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9581)
static void C_ccall f_9581(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9545)
static void C_ccall f_9545(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9549)
static void C_ccall f_9549(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9510)
static void C_ccall f_9510(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9514)
static void C_ccall f_9514(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9476)
static void C_fcall f_9476(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9479)
static void C_ccall f_9479(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9482)
static void C_fcall f_9482(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9427)
static void C_ccall f_9427(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_9427)
static void C_ccall f_9427r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_9456)
static void C_ccall f_9456(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9441)
static void C_ccall f_9441(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9372)
static void C_ccall f_9372(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9383)
static void C_ccall f_9383(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9385)
static void C_fcall f_9385(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_9413)
static void C_ccall f_9413(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9273)
static void C_ccall f_9273(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...) C_noret;
C_noret_decl(f_9273)
static void C_ccall f_9273r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t5) C_noret;
C_noret_decl(f_9277)
static void C_fcall f_9277(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9280)
static void C_ccall f_9280(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9345)
static void C_ccall f_9345(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9282)
static void C_fcall f_9282(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_9298)
static void C_ccall f_9298(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9045)
static void C_ccall f_9045(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_9045)
static void C_ccall f_9045r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_9250)
static void C_ccall f_9250(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9265)
static void C_ccall f_9265(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9257)
static void C_ccall f_9257(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9221)
static void C_ccall f_9221(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9225)
static void C_ccall f_9225(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9186)
static void C_ccall f_9186(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9190)
static void C_ccall f_9190(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9049)
static void C_fcall f_9049(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9150)
static void C_ccall f_9150(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9165)
static void C_ccall f_9165(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9157)
static void C_ccall f_9157(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9121)
static void C_ccall f_9121(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9125)
static void C_ccall f_9125(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9086)
static void C_ccall f_9086(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9090)
static void C_ccall f_9090(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9052)
static void C_fcall f_9052(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9055)
static void C_ccall f_9055(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9065)
static void C_ccall f_9065(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9002)
static void C_ccall f_9002(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_9002)
static void C_ccall f_9002r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_9035)
static void C_ccall f_9035(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9020)
static void C_ccall f_9020(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8981)
static void C_ccall f_8981(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_8946)
static void C_ccall f_8946(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_8946)
static void C_ccall f_8946r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_8950)
static void C_fcall f_8950(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8838)
static void C_ccall f_8838(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...) C_noret;
C_noret_decl(f_8838)
static void C_ccall f_8838r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t5) C_noret;
C_noret_decl(f_8925)
static void C_ccall f_8925(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8845)
static void C_fcall f_8845(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8854)
static void C_fcall f_8854(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_8901)
static void C_ccall f_8901(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8867)
static void C_fcall f_8867(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8893)
static void C_ccall f_8893(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8705)
static void C_ccall f_8705(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,...) C_noret;
C_noret_decl(f_8705)
static void C_ccall f_8705r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t6) C_noret;
C_noret_decl(f_8709)
static void C_fcall f_8709(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8712)
static void C_fcall f_8712(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8816)
static void C_ccall f_8816(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8714)
static void C_fcall f_8714(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_8721)
static void C_ccall f_8721(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8763)
static void C_ccall f_8763(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8770)
static void C_ccall f_8770(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8744)
static void C_ccall f_8744(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8638)
static void C_ccall f_8638(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,...) C_noret;
C_noret_decl(f_8638)
static void C_ccall f_8638r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t6) C_noret;
C_noret_decl(f_8642)
static void C_fcall f_8642(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8688)
static void C_ccall f_8688(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8645)
static void C_fcall f_8645(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8681)
static void C_ccall f_8681(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8648)
static void C_fcall f_8648(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8661)
static void C_ccall f_8661(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8592)
static void C_ccall f_8592(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_8592)
static void C_ccall f_8592r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_8596)
static void C_ccall f_8596(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8506)
static void C_fcall f_8506(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_8510)
static void C_ccall f_8510(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8513)
static void C_ccall f_8513(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8522)
static void C_fcall f_8522(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8544)
static void C_ccall f_8544(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8491)
static void C_ccall f_8491(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8476)
static void C_ccall f_8476(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8240)
static void C_ccall f_8240(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_8240)
static void C_ccall f_8240r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_8453)
static void C_ccall f_8453(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8468)
static void C_ccall f_8468(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8460)
static void C_ccall f_8460(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8424)
static void C_ccall f_8424(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8428)
static void C_ccall f_8428(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8389)
static void C_ccall f_8389(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8393)
static void C_ccall f_8393(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8244)
static void C_fcall f_8244(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8353)
static void C_ccall f_8353(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8368)
static void C_ccall f_8368(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8360)
static void C_ccall f_8360(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8324)
static void C_ccall f_8324(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8328)
static void C_ccall f_8328(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8289)
static void C_ccall f_8289(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8293)
static void C_ccall f_8293(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8247)
static void C_fcall f_8247(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8250)
static void C_ccall f_8250(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8261)
static void C_ccall f_8261(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8200)
static void C_ccall f_8200(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_8204)
static void C_ccall f_8204(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8234)
static void C_ccall f_8234(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8215)
static void C_ccall f_8215(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8223)
static void C_ccall f_8223(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8179)
static void C_ccall f_8179(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_8191)
static void C_ccall f_8191(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8153)
static void C_ccall f_8153(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_8153)
static void C_ccall f_8153r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_8111)
static void C_ccall f_8111(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_8111)
static void C_ccall f_8111r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_8096)
static void C_ccall f_8096(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7985)
static void C_ccall f_7985(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,...) C_noret;
C_noret_decl(f_7985)
static void C_ccall f_7985r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t7) C_noret;
C_noret_decl(f_8060)
static void C_ccall f_8060(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7989)
static void C_fcall f_7989(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8029)
static void C_ccall f_8029(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8018)
static void C_ccall f_8018(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8003)
static void C_ccall f_8003(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8011)
static void C_ccall f_8011(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7951)
static void C_ccall f_7951(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,...) C_noret;
C_noret_decl(f_7951)
static void C_ccall f_7951r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t8) C_noret;
C_noret_decl(f_7963)
static void C_ccall f_7963(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7932)
static void C_ccall f_7932(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7929)
static void C_ccall f_7929(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7922)
static void C_fcall f_7922(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7919)
static void C_ccall f_7919(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7912)
static void C_fcall f_7912(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7894)
static void C_fcall f_7894(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7883)
static void C_fcall f_7883(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7880)
static void C_ccall f_7880(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7877)
static void C_ccall f_7877(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7874)
static void C_ccall f_7874(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7845)
static void C_fcall f_7845(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7838)
static void C_fcall f_7838(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7835)
static void C_ccall f_7835(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7814)
static void C_fcall f_7814(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7795)
static void C_ccall f_7795(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_7776)
static void C_ccall f_7776(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_7769)
static void C_ccall f_7769(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7762)
static void C_ccall f_7762(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7747)
static void C_fcall f_7747(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_7736)
static void C_fcall f_7736(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7729)
static void C_ccall f_7729(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7702)
static void C_fcall f_7702(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_7675)
static void C_fcall f_7675(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_7634)
static void C_fcall f_7634(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7640)
static void C_fcall f_7640(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7650)
static void C_fcall f_7650(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7548)
static void C_ccall f_7548(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...) C_noret;
C_noret_decl(f_7548)
static void C_ccall f_7548r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t5) C_noret;
C_noret_decl(f_7509)
static void C_ccall f_7509(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_7515)
static void C_fcall f_7515(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_7538)
static void C_ccall f_7538(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7528)
static void C_fcall f_7528(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7470)
static void C_ccall f_7470(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_7476)
static void C_fcall f_7476(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_7496)
static void C_ccall f_7496(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7486)
static void C_fcall f_7486(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7430)
static void C_ccall f_7430(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_7436)
static void C_fcall f_7436(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_7460)
static void C_ccall f_7460(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7446)
static void C_fcall f_7446(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7331)
static void C_ccall f_7331(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_7331)
static void C_ccall f_7331r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_7335)
static void C_ccall f_7335(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7360)
static void C_fcall f_7360(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_7377)
static void C_ccall f_7377(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7381)
static void C_ccall f_7381(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7337)
static void C_fcall f_7337(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_7354)
static void C_ccall f_7354(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7270)
static void C_ccall f_7270(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7283)
static void C_fcall f_7283(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_7260)
static void C_ccall f_7260(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_7220)
static void C_ccall f_7220(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_7220)
static void C_ccall f_7220r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_7250)
static void C_ccall f_7250(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7130)
static void C_ccall f_7130(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7082)
static void C_ccall f_7082(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7116)
static void C_ccall f_7116(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7059)
static void C_ccall f_7059(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7053)
static void C_ccall f_7053(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7038)
static void C_ccall f_7038(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7024)
static void C_ccall f_7024(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7014)
static void C_ccall f_7014(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7004)
static void C_ccall f_7004(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6994)
static void C_ccall f_6994(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6984)
static void C_ccall f_6984(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6955)
static void C_ccall f_6955(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_6955)
static void C_ccall f_6955r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_6964)
static void C_ccall f_6964(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6969)
static void C_ccall f_6969(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6944)
static void C_ccall f_6944(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6949)
static void C_ccall f_6949(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6651)
static void C_ccall f_6651(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_6661)
static void C_ccall f_6661(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6912)
static void C_ccall f_6912(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6664)
static void C_ccall f_6664(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6667)
static void C_ccall f_6667(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6682)
static void C_fcall f_6682(C_word t0,C_word t1) C_noret;
C_noret_decl(f_6692)
static void C_ccall f_6692(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6694)
static void C_fcall f_6694(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_6753)
static void C_ccall f_6753(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6763)
static void C_ccall f_6763(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6880)
static void C_ccall f_6880(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6868)
static void C_ccall f_6868(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6866)
static void C_ccall f_6866(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6853)
static void C_ccall f_6853(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6807)
static void C_ccall f_6807(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6834)
static void C_ccall f_6834(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6813)
static void C_ccall f_6813(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6747)
static void C_fcall f_6747(C_word t0,C_word t1) C_noret;
C_noret_decl(f_6706)
static void C_fcall f_6706(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6719)
static void C_fcall f_6719(C_word t0,C_word t1) C_noret;
C_noret_decl(f_6929)
static void C_ccall f_6929(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6920)
static void C_ccall f_6920(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6928)
static void C_ccall f_6928(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6931)
static void C_ccall f_6931(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_6931)
static void C_ccall f_6931r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_6939)
static void C_ccall f_6939(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6353)
static void C_ccall f_6353(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_6606)
static void C_ccall f_6606(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6639)
static void C_ccall f_6639(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6635)
static void C_ccall f_6635(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6624)
static void C_ccall f_6624(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6620)
static void C_ccall f_6620(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6514)
static void C_ccall f_6514(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6517)
static void C_ccall f_6517(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6520)
static void C_ccall f_6520(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6600)
static void C_ccall f_6600(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6425)
static void C_ccall f_6425(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6366)
static void C_ccall f_6366(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6523)
static void C_ccall f_6523(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6530)
static void C_ccall f_6530(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6590)
static void C_ccall f_6590(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6576)
static void C_ccall f_6576(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6542)
static void C_ccall f_6542(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6568)
static void C_ccall f_6568(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6503)
static void C_ccall f_6503(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6550)
static void C_ccall f_6550(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6546)
static void C_ccall f_6546(C_word c,C_word t0,C_word t1) C_noret;

C_noret_decl(trf_39959)
static void C_fcall trf_39959(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_39959(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_39959(t0,t1,t2);}

C_noret_decl(trf_40019)
static void C_fcall trf_40019(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_40019(void *dummy){
C_word t13=C_pick(0);
C_word t12=C_pick(1);
C_word t11=C_pick(2);
C_word t10=C_pick(3);
C_word t9=C_pick(4);
C_word t8=C_pick(5);
C_word t7=C_pick(6);
C_word t6=C_pick(7);
C_word t5=C_pick(8);
C_word t4=C_pick(9);
C_word t3=C_pick(10);
C_word t2=C_pick(11);
C_word t1=C_pick(12);
C_word t0=C_pick(13);
C_adjust_stack(-14);
f_40019(t0,t1,t2,t3,t4,t5,t6,t7,t8,t9,t10,t11,t12,t13);}

C_noret_decl(trf_40039)
static void C_fcall trf_40039(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_40039(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_40039(t0,t1);}

C_noret_decl(trf_40042)
static void C_fcall trf_40042(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_40042(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_40042(t0,t1);}

C_noret_decl(trf_39903)
static void C_fcall trf_39903(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_39903(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_39903(t0,t1);}

C_noret_decl(trf_39825)
static void C_fcall trf_39825(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_39825(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_39825(t0,t1,t2);}

C_noret_decl(trf_39637)
static void C_fcall trf_39637(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_39637(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_39637(t0,t1);}

C_noret_decl(trf_38519)
static void C_fcall trf_38519(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_38519(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_38519(t0,t1);}

C_noret_decl(trf_38392)
static void C_fcall trf_38392(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_38392(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_38392(t0,t1,t2);}

C_noret_decl(trf_38076)
static void C_fcall trf_38076(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_38076(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_38076(t0,t1);}

C_noret_decl(trf_37171)
static void C_fcall trf_37171(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_37171(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_37171(t0,t1,t2);}

C_noret_decl(trf_37206)
static void C_fcall trf_37206(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_37206(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_37206(t0,t1);}

C_noret_decl(trf_37230)
static void C_fcall trf_37230(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_37230(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_37230(t0,t1);}

C_noret_decl(trf_37209)
static void C_fcall trf_37209(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_37209(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_37209(t0,t1);}

C_noret_decl(trf_37012)
static void C_fcall trf_37012(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_37012(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_37012(t0,t1);}

C_noret_decl(trf_36830)
static void C_fcall trf_36830(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_36830(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_36830(t0,t1);}

C_noret_decl(trf_36837)
static void C_fcall trf_36837(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_36837(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_36837(t0,t1);}

C_noret_decl(trf_36818)
static void C_fcall trf_36818(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_36818(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_36818(t0,t1);}

C_noret_decl(trf_24730)
static void C_fcall trf_24730(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24730(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24730(t0,t1);}

C_noret_decl(trf_24737)
static void C_fcall trf_24737(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24737(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24737(t0,t1);}

C_noret_decl(trf_25035)
static void C_fcall trf_25035(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25035(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_25035(t0,t1,t2);}

C_noret_decl(trf_25058)
static void C_fcall trf_25058(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25058(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_25058(t0,t1,t2);}

C_noret_decl(trf_25075)
static void C_fcall trf_25075(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25075(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25075(t0,t1);}

C_noret_decl(trf_25078)
static void C_fcall trf_25078(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25078(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25078(t0,t1);}

C_noret_decl(trf_25081)
static void C_fcall trf_25081(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25081(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25081(t0,t1);}

C_noret_decl(trf_24999)
static void C_fcall trf_24999(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24999(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_24999(t0,t1,t2);}

C_noret_decl(trf_24943)
static void C_fcall trf_24943(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24943(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_24943(t0,t1,t2);}

C_noret_decl(trf_24959)
static void C_fcall trf_24959(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24959(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24959(t0,t1);}

C_noret_decl(trf_24753)
static void C_fcall trf_24753(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24753(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24753(t0,t1);}

C_noret_decl(trf_24756)
static void C_fcall trf_24756(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24756(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24756(t0,t1);}

C_noret_decl(trf_36327)
static void C_fcall trf_36327(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_36327(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_36327(t0,t1);}

C_noret_decl(trf_36330)
static void C_fcall trf_36330(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_36330(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_36330(t0,t1);}

C_noret_decl(trf_36173)
static void C_fcall trf_36173(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_36173(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_36173(t0,t1);}

C_noret_decl(trf_35981)
static void C_fcall trf_35981(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_35981(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_35981(t0,t1);}

C_noret_decl(trf_35831)
static void C_fcall trf_35831(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_35831(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_35831(t0,t1);}

C_noret_decl(trf_35920)
static void C_fcall trf_35920(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_35920(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_35920(t0,t1);}

C_noret_decl(trf_35834)
static void C_fcall trf_35834(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_35834(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_35834(t0,t1);}

C_noret_decl(trf_35850)
static void C_fcall trf_35850(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_35850(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_35850(t0,t1,t2,t3);}

C_noret_decl(trf_35872)
static void C_fcall trf_35872(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_35872(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_35872(t0,t1);}

C_noret_decl(trf_35767)
static void C_fcall trf_35767(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_35767(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_35767(t0,t1,t2);}

C_noret_decl(trf_35714)
static void C_fcall trf_35714(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_35714(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_35714(t0,t1);}

C_noret_decl(trf_29150)
static void C_fcall trf_29150(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29150(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29150(t0,t1);}

C_noret_decl(trf_29012)
static void C_fcall trf_29012(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29012(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29012(t0,t1);}

C_noret_decl(trf_29226)
static void C_fcall trf_29226(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29226(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29226(t0,t1);}

C_noret_decl(trf_35318)
static void C_fcall trf_35318(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_35318(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_35318(t0,t1,t2);}

C_noret_decl(trf_35346)
static void C_fcall trf_35346(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_35346(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_35346(t0,t1);}

C_noret_decl(trf_35049)
static void C_fcall trf_35049(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_35049(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_35049(t0,t1);}

C_noret_decl(trf_35213)
static void C_fcall trf_35213(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_35213(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_35213(t0,t1);}

C_noret_decl(trf_35062)
static void C_fcall trf_35062(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_35062(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_35062(t0,t1);}

C_noret_decl(trf_35297)
static void C_fcall trf_35297(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_35297(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_35297(t0,t1);}

C_noret_decl(trf_34987)
static void C_fcall trf_34987(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_34987(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_34987(t0,t1,t2);}

C_noret_decl(trf_34928)
static void C_fcall trf_34928(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_34928(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_34928(t0,t1);}

C_noret_decl(trf_34864)
static void C_fcall trf_34864(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_34864(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_34864(t0,t1,t2);}

C_noret_decl(trf_34784)
static void C_fcall trf_34784(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_34784(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_34784(t0,t1);}

C_noret_decl(trf_34710)
static void C_fcall trf_34710(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_34710(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_34710(t0,t1);}

C_noret_decl(trf_34705)
static void C_fcall trf_34705(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_34705(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_34705(t0,t1,t2);}

C_noret_decl(trf_34585)
static void C_fcall trf_34585(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_34585(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_34585(t0,t1,t2,t3);}

C_noret_decl(trf_34656)
static void C_fcall trf_34656(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_34656(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_34656(t0,t1,t2);}

C_noret_decl(trf_34615)
static void C_fcall trf_34615(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_34615(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_34615(t0,t1);}

C_noret_decl(trf_34587)
static void C_fcall trf_34587(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_34587(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_34587(t0,t1);}

C_noret_decl(trf_34542)
static void C_fcall trf_34542(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_34542(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_34542(t0,t1);}

C_noret_decl(trf_34498)
static void C_fcall trf_34498(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_34498(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_34498(t0,t1,t2,t3);}

C_noret_decl(trf_34489)
static void C_fcall trf_34489(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_34489(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_34489(t0,t1);}

C_noret_decl(trf_34319)
static void C_fcall trf_34319(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_34319(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_34319(t0,t1,t2,t3,t4);}

C_noret_decl(trf_34348)
static void C_fcall trf_34348(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_34348(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_34348(t0,t1,t2);}

C_noret_decl(trf_34385)
static void C_fcall trf_34385(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_34385(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_34385(t0,t1);}

C_noret_decl(trf_34215)
static void C_fcall trf_34215(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_34215(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_34215(t0,t1);}

C_noret_decl(trf_34195)
static void C_fcall trf_34195(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_34195(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_34195(t0,t1);}

C_noret_decl(trf_34158)
static void C_fcall trf_34158(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_34158(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_34158(t0,t1);}

C_noret_decl(trf_34138)
static void C_fcall trf_34138(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_34138(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_34138(t0,t1);}

C_noret_decl(trf_32973)
static void C_fcall trf_32973(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32973(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_32973(t0,t1);}

C_noret_decl(trf_32976)
static void C_fcall trf_32976(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32976(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_32976(t0,t1);}

C_noret_decl(trf_32979)
static void C_fcall trf_32979(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32979(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_32979(t0,t1);}

C_noret_decl(trf_32503)
static void C_fcall trf_32503(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32503(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_32503(t0,t1);}

C_noret_decl(trf_32506)
static void C_fcall trf_32506(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32506(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_32506(t0,t1);}

C_noret_decl(trf_32509)
static void C_fcall trf_32509(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32509(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_32509(t0,t1);}

C_noret_decl(trf_32033)
static void C_fcall trf_32033(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32033(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_32033(t0,t1);}

C_noret_decl(trf_32036)
static void C_fcall trf_32036(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32036(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_32036(t0,t1);}

C_noret_decl(trf_32039)
static void C_fcall trf_32039(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32039(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_32039(t0,t1);}

C_noret_decl(trf_31285)
static void C_fcall trf_31285(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31285(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31285(t0,t1);}

C_noret_decl(trf_31288)
static void C_fcall trf_31288(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31288(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31288(t0,t1);}

C_noret_decl(trf_31291)
static void C_fcall trf_31291(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31291(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31291(t0,t1);}

C_noret_decl(trf_31294)
static void C_fcall trf_31294(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31294(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31294(t0,t1);}

C_noret_decl(trf_30537)
static void C_fcall trf_30537(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30537(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30537(t0,t1);}

C_noret_decl(trf_30540)
static void C_fcall trf_30540(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30540(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30540(t0,t1);}

C_noret_decl(trf_30543)
static void C_fcall trf_30543(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30543(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30543(t0,t1);}

C_noret_decl(trf_30546)
static void C_fcall trf_30546(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30546(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30546(t0,t1);}

C_noret_decl(trf_30067)
static void C_fcall trf_30067(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30067(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30067(t0,t1);}

C_noret_decl(trf_30070)
static void C_fcall trf_30070(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30070(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30070(t0,t1);}

C_noret_decl(trf_30073)
static void C_fcall trf_30073(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30073(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30073(t0,t1);}

C_noret_decl(trf_29319)
static void C_fcall trf_29319(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29319(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29319(t0,t1);}

C_noret_decl(trf_29322)
static void C_fcall trf_29322(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29322(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29322(t0,t1);}

C_noret_decl(trf_29325)
static void C_fcall trf_29325(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29325(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29325(t0,t1);}

C_noret_decl(trf_29328)
static void C_fcall trf_29328(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29328(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29328(t0,t1);}

C_noret_decl(trf_28977)
static void C_fcall trf_28977(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28977(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_28977(t0,t1,t2,t3);}

C_noret_decl(trf_28817)
static void C_fcall trf_28817(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28817(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28817(t0,t1);}

C_noret_decl(trf_28852)
static void C_fcall trf_28852(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28852(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_28852(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_28862)
static void C_fcall trf_28862(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28862(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28862(t0,t1);}

C_noret_decl(trf_28825)
static void C_fcall trf_28825(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28825(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_28825(t0,t1,t2);}

C_noret_decl(trf_28985)
static void C_fcall trf_28985(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28985(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28985(t0,t1);}

C_noret_decl(trf_28603)
static void C_fcall trf_28603(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28603(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28603(t0,t1);}

C_noret_decl(trf_28609)
static void C_fcall trf_28609(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28609(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28609(t0,t1);}

C_noret_decl(trf_28632)
static void C_fcall trf_28632(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28632(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28632(t0,t1);}

C_noret_decl(trf_28645)
static void C_fcall trf_28645(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28645(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28645(t0,t1);}

C_noret_decl(trf_28619)
static void C_fcall trf_28619(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28619(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28619(t0,t1);}

C_noret_decl(trf_28432)
static void C_fcall trf_28432(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28432(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_28432(t0,t1,t2,t3);}

C_noret_decl(trf_28441)
static void C_fcall trf_28441(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28441(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_28441(t0,t1,t2,t3,t4);}

C_noret_decl(trf_28395)
static void C_fcall trf_28395(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28395(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28395(t0,t1);}

C_noret_decl(trf_28258)
static void C_fcall trf_28258(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28258(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28258(t0,t1);}

C_noret_decl(trf_28188)
static void C_fcall trf_28188(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28188(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28188(t0,t1);}

C_noret_decl(trf_27549)
static void C_fcall trf_27549(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27549(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_27549(t0,t1,t2);}

C_noret_decl(trf_27509)
static void C_fcall trf_27509(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27509(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_27509(t0,t1,t2);}

C_noret_decl(trf_27522)
static void C_fcall trf_27522(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27522(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27522(t0,t1);}

C_noret_decl(trf_28101)
static void C_fcall trf_28101(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28101(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28101(t0,t1);}

C_noret_decl(trf_27891)
static void C_fcall trf_27891(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27891(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27891(t0,t1);}

C_noret_decl(trf_28007)
static void C_fcall trf_28007(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28007(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28007(t0,t1);}

C_noret_decl(trf_27894)
static void C_fcall trf_27894(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27894(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27894(t0,t1);}

C_noret_decl(trf_27897)
static void C_fcall trf_27897(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27897(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27897(t0,t1);}

C_noret_decl(trf_27802)
static void C_fcall trf_27802(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27802(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27802(t0,t1);}

C_noret_decl(trf_27717)
static void C_fcall trf_27717(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27717(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27717(t0,t1);}

C_noret_decl(trf_27674)
static void C_fcall trf_27674(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27674(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27674(t0,t1);}

C_noret_decl(trf_27641)
static void C_fcall trf_27641(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27641(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27641(t0,t1);}

C_noret_decl(trf_27636)
static void C_fcall trf_27636(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27636(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27636(t0,t1);}

C_noret_decl(trf_27631)
static void C_fcall trf_27631(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27631(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_27631(t0,t1,t2,t3,t4);}

C_noret_decl(trf_27378)
static void C_fcall trf_27378(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27378(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27378(t0,t1);}

C_noret_decl(trf_27225)
static void C_fcall trf_27225(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27225(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_27225(t0,t1,t2,t3);}

C_noret_decl(trf_27071)
static void C_fcall trf_27071(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27071(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_27071(t0,t1,t2);}

C_noret_decl(trf_26913)
static void C_fcall trf_26913(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26913(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_26913(t0,t1,t2);}

C_noret_decl(trf_26946)
static void C_fcall trf_26946(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26946(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26946(t0,t1);}

C_noret_decl(trf_26853)
static void C_fcall trf_26853(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26853(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26853(t0,t1);}

C_noret_decl(trf_26818)
static void C_fcall trf_26818(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26818(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26818(t0,t1);}

C_noret_decl(trf_26834)
static void C_fcall trf_26834(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26834(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26834(t0,t1);}

C_noret_decl(trf_26789)
static void C_fcall trf_26789(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26789(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26789(t0,t1);}

C_noret_decl(trf_26696)
static void C_fcall trf_26696(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26696(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26696(t0,t1);}

C_noret_decl(trf_26452)
static void C_fcall trf_26452(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26452(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_26452(t0,t1,t2);}

C_noret_decl(trf_26256)
static void C_fcall trf_26256(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26256(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26256(t0,t1);}

C_noret_decl(trf_26419)
static void C_fcall trf_26419(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26419(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26419(t0,t1);}

C_noret_decl(trf_26259)
static void C_fcall trf_26259(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26259(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26259(t0,t1);}

C_noret_decl(trf_26262)
static void C_fcall trf_26262(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26262(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26262(t0,t1);}

C_noret_decl(trf_26265)
static void C_fcall trf_26265(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26265(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26265(t0,t1);}

C_noret_decl(trf_26307)
static void C_fcall trf_26307(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26307(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26307(t0,t1);}

C_noret_decl(trf_26272)
static void C_fcall trf_26272(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26272(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26272(t0,t1);}

C_noret_decl(trf_26001)
static void C_fcall trf_26001(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26001(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_26001(t0,t1,t2,t3);}

C_noret_decl(trf_26009)
static void C_fcall trf_26009(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26009(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_26009(t0,t1,t2,t3);}

C_noret_decl(trf_26138)
static void C_fcall trf_26138(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26138(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_26138(t0,t1,t2);}

C_noret_decl(trf_26092)
static void C_fcall trf_26092(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26092(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_26092(t0,t1,t2);}

C_noret_decl(trf_25995)
static void C_fcall trf_25995(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25995(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_25995(t0,t1,t2);}

C_noret_decl(trf_25989)
static void C_fcall trf_25989(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25989(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25989(t0,t1);}

C_noret_decl(trf_25983)
static void C_fcall trf_25983(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25983(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_25983(t0,t1,t2);}

C_noret_decl(trf_25912)
static void C_fcall trf_25912(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25912(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_25912(t0,t1,t2);}

C_noret_decl(trf_25914)
static void C_fcall trf_25914(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25914(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_25914(t0,t1,t2);}

C_noret_decl(trf_25920)
static void C_fcall trf_25920(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25920(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_25920(t0,t1,t2);}

C_noret_decl(trf_25761)
static void C_fcall trf_25761(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25761(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25761(t0,t1);}

C_noret_decl(trf_25776)
static void C_fcall trf_25776(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25776(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_25776(t0,t1,t2);}

C_noret_decl(trf_25719)
static void C_fcall trf_25719(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25719(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_25719(t0,t1,t2);}

C_noret_decl(trf_25659)
static void C_fcall trf_25659(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25659(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_25659(t0,t1,t2);}

C_noret_decl(trf_25535)
static void C_fcall trf_25535(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25535(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_25535(t0,t1,t2);}

C_noret_decl(trf_25411)
static void C_fcall trf_25411(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25411(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_25411(t0,t1,t2,t3);}

C_noret_decl(trf_25447)
static void C_fcall trf_25447(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25447(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_25447(t0,t1,t2);}

C_noret_decl(trf_25243)
static void C_fcall trf_25243(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25243(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25243(t0,t1);}

C_noret_decl(trf_23075)
static void C_fcall trf_23075(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23075(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23075(t0,t1);}

C_noret_decl(trf_25377)
static void C_fcall trf_25377(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25377(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_25377(t0,t1,t2);}

C_noret_decl(trf_25387)
static void C_fcall trf_25387(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25387(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25387(t0,t1);}

C_noret_decl(trf_25347)
static void C_fcall trf_25347(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25347(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_25347(t0,t1,t2);}

C_noret_decl(trf_25357)
static void C_fcall trf_25357(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25357(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25357(t0,t1);}

C_noret_decl(trf_24417)
static void C_fcall trf_24417(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24417(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24417(t0,t1);}

C_noret_decl(trf_24420)
static void C_fcall trf_24420(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24420(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24420(t0,t1);}

C_noret_decl(trf_24423)
static void C_fcall trf_24423(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24423(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24423(t0,t1);}

C_noret_decl(trf_24426)
static void C_fcall trf_24426(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24426(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24426(t0,t1);}

C_noret_decl(trf_24429)
static void C_fcall trf_24429(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24429(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24429(t0,t1);}

C_noret_decl(trf_24432)
static void C_fcall trf_24432(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24432(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24432(t0,t1);}

C_noret_decl(trf_24260)
static void C_fcall trf_24260(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24260(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24260(t0,t1);}

C_noret_decl(trf_24189)
static void C_fcall trf_24189(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24189(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24189(t0,t1);}

C_noret_decl(trf_24004)
static void C_fcall trf_24004(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24004(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24004(t0,t1);}

C_noret_decl(trf_24016)
static void C_fcall trf_24016(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24016(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24016(t0,t1);}

C_noret_decl(trf_24053)
static void C_fcall trf_24053(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24053(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_24053(t0,t1,t2,t3,t4);}

C_noret_decl(trf_24088)
static void C_fcall trf_24088(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24088(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24088(t0,t1);}

C_noret_decl(trf_23983)
static void C_fcall trf_23983(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23983(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23983(t0,t1);}

C_noret_decl(trf_23918)
static void C_fcall trf_23918(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23918(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_23918(t0,t1,t2);}

C_noret_decl(trf_23927)
static void C_fcall trf_23927(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23927(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_23927(t0,t1,t2);}

C_noret_decl(trf_23940)
static void C_fcall trf_23940(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23940(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23940(t0,t1);}

C_noret_decl(trf_23874)
static void C_fcall trf_23874(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23874(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_23874(t0,t1,t2);}

C_noret_decl(trf_23862)
static void C_fcall trf_23862(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23862(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23862(t0,t1);}

C_noret_decl(trf_23760)
static void C_fcall trf_23760(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23760(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23760(t0,t1);}

C_noret_decl(trf_23712)
static void C_fcall trf_23712(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23712(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23712(t0,t1);}

C_noret_decl(trf_23093)
static void C_fcall trf_23093(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23093(void *dummy){
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
f_23093(t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(trf_23103)
static void C_fcall trf_23103(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23103(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23103(t0,t1);}

C_noret_decl(trf_23232)
static void C_fcall trf_23232(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23232(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23232(t0,t1);}

C_noret_decl(trf_23320)
static void C_fcall trf_23320(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23320(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23320(t0,t1);}

C_noret_decl(trf_23393)
static void C_fcall trf_23393(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23393(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23393(t0,t1);}

C_noret_decl(trf_23471)
static void C_fcall trf_23471(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23471(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23471(t0,t1);}

C_noret_decl(trf_23422)
static void C_fcall trf_23422(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23422(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23422(t0,t1);}

C_noret_decl(trf_23438)
static void C_fcall trf_23438(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23438(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23438(t0,t1);}

C_noret_decl(trf_23402)
static void C_fcall trf_23402(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23402(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23402(t0,t1);}

C_noret_decl(trf_23344)
static void C_fcall trf_23344(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23344(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_23344(t0,t1,t2);}

C_noret_decl(trf_23263)
static void C_fcall trf_23263(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23263(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_23263(t0,t1,t2);}

C_noret_decl(trf_23279)
static void C_fcall trf_23279(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23279(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23279(t0,t1);}

C_noret_decl(trf_23247)
static void C_fcall trf_23247(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23247(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23247(t0,t1);}

C_noret_decl(trf_22989)
static void C_fcall trf_22989(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22989(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22989(t0,t1);}

C_noret_decl(trf_22998)
static void C_fcall trf_22998(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22998(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22998(t0,t1);}

C_noret_decl(trf_23003)
static void C_fcall trf_23003(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23003(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_23003(t0,t1,t2);}

C_noret_decl(trf_22981)
static void C_fcall trf_22981(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22981(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22981(t0,t1);}

C_noret_decl(trf_22773)
static void C_fcall trf_22773(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22773(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_22773(t0,t1,t2,t3);}

C_noret_decl(trf_22740)
static void C_fcall trf_22740(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22740(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_22740(t0,t1,t2,t3);}

C_noret_decl(trf_22722)
static void C_fcall trf_22722(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22722(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_22722(t0,t1,t2,t3);}

C_noret_decl(trf_22712)
static void C_fcall trf_22712(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22712(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_22712(t0,t1,t2,t3);}

C_noret_decl(trf_22700)
static void C_fcall trf_22700(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22700(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_22700(t0,t1,t2);}

C_noret_decl(trf_22668)
static void C_fcall trf_22668(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22668(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_22668(t0,t1,t2);}

C_noret_decl(trf_22652)
static void C_fcall trf_22652(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22652(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22652(t0,t1);}

C_noret_decl(trf_22640)
static void C_fcall trf_22640(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22640(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22640(t0,t1);}

C_noret_decl(trf_22622)
static void C_fcall trf_22622(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22622(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22622(t0,t1);}

C_noret_decl(trf_22604)
static void C_fcall trf_22604(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22604(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22604(t0,t1);}

C_noret_decl(trf_22589)
static void C_fcall trf_22589(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22589(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22589(t0,t1);}

C_noret_decl(trf_22583)
static void C_fcall trf_22583(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22583(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_22583(t0,t1,t2,t3);}

C_noret_decl(trf_22571)
static void C_fcall trf_22571(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22571(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22571(t0,t1);}

C_noret_decl(trf_22553)
static void C_fcall trf_22553(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22553(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22553(t0,t1);}

C_noret_decl(trf_22532)
static void C_fcall trf_22532(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22532(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_22532(t0,t1,t2);}

C_noret_decl(trf_22500)
static void C_fcall trf_22500(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22500(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22500(t0,t1);}

C_noret_decl(trf_22442)
static void C_fcall trf_22442(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22442(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_22442(t0,t1,t2);}

C_noret_decl(trf_22432)
static void C_fcall trf_22432(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22432(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22432(t0,t1);}

C_noret_decl(trf_22426)
static void C_fcall trf_22426(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22426(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22426(t0,t1);}

C_noret_decl(trf_22414)
static void C_fcall trf_22414(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22414(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22414(t0,t1);}

C_noret_decl(trf_22390)
static void C_fcall trf_22390(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22390(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_22390(t0,t1,t2);}

C_noret_decl(trf_22303)
static void C_fcall trf_22303(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22303(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22303(t0,t1);}

C_noret_decl(trf_22282)
static void C_fcall trf_22282(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22282(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_22282(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_22272)
static void C_fcall trf_22272(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22272(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22272(t0,t1);}

C_noret_decl(trf_22260)
static void C_fcall trf_22260(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22260(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22260(t0,t1);}

C_noret_decl(trf_22219)
static void C_fcall trf_22219(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22219(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22219(t0,t1);}

C_noret_decl(trf_22201)
static void C_fcall trf_22201(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22201(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22201(t0,t1);}

C_noret_decl(trf_22183)
static void C_fcall trf_22183(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22183(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22183(t0,t1);}

C_noret_decl(trf_21150)
static void C_fcall trf_21150(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21150(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21150(t0,t1);}

C_noret_decl(trf_21153)
static void C_fcall trf_21153(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21153(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21153(t0,t1);}

C_noret_decl(trf_21868)
static void C_fcall trf_21868(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21868(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_21868(t0,t1,t2);}

C_noret_decl(trf_21891)
static void C_fcall trf_21891(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21891(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_21891(t0,t1,t2,t3,t4);}

C_noret_decl(trf_21926)
static void C_fcall trf_21926(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21926(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21926(t0,t1);}

C_noret_decl(trf_21830)
static void C_fcall trf_21830(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21830(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21830(t0,t1);}

C_noret_decl(trf_21358)
static void C_fcall trf_21358(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21358(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21358(t0,t1);}

C_noret_decl(trf_21701)
static void C_fcall trf_21701(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21701(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_21701(t0,t1,t2,t3);}

C_noret_decl(trf_21787)
static void C_fcall trf_21787(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21787(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_21787(t0,t1,t2,t3);}

C_noret_decl(trf_21744)
static void C_fcall trf_21744(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21744(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_21744(t0,t1,t2);}

C_noret_decl(trf_21668)
static void C_fcall trf_21668(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21668(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_21668(t0,t1,t2);}

C_noret_decl(trf_21606)
static void C_fcall trf_21606(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21606(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_21606(t0,t1,t2);}

C_noret_decl(trf_21641)
static void C_fcall trf_21641(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21641(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_21641(t0,t1,t2,t3);}

C_noret_decl(trf_21426)
static void C_fcall trf_21426(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21426(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_21426(t0,t1,t2);}

C_noret_decl(trf_21322)
static void C_fcall trf_21322(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21322(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_21322(t0,t1,t2);}

C_noret_decl(trf_21579)
static void C_fcall trf_21579(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21579(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_21579(t0,t1,t2,t3);}

C_noret_decl(trf_21552)
static void C_fcall trf_21552(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21552(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_21552(t0,t1,t2,t3);}

C_noret_decl(trf_21463)
static void C_fcall trf_21463(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21463(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_21463(t0,t1,t2);}

C_noret_decl(trf_21513)
static void C_fcall trf_21513(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21513(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_21513(t0,t1,t2,t3);}

C_noret_decl(trf_21245)
static void C_fcall trf_21245(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21245(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_21245(t0,t1,t2,t3,t4);}

C_noret_decl(trf_21163)
static void C_fcall trf_21163(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21163(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_21163(t0,t1,t2,t3);}

C_noret_decl(trf_21084)
static void C_fcall trf_21084(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21084(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_21084(t0,t1,t2);}

C_noret_decl(trf_21109)
static void C_fcall trf_21109(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21109(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21109(t0,t1);}

C_noret_decl(trf_20812)
static void C_fcall trf_20812(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20812(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20812(t0,t1);}

C_noret_decl(trf_20815)
static void C_fcall trf_20815(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20815(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20815(t0,t1);}

C_noret_decl(trf_20821)
static void C_fcall trf_20821(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20821(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20821(t0,t1);}

C_noret_decl(trf_20535)
static void C_fcall trf_20535(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20535(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20535(t0,t1);}

C_noret_decl(trf_20538)
static void C_fcall trf_20538(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20538(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20538(t0,t1);}

C_noret_decl(trf_20465)
static void C_fcall trf_20465(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20465(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20465(t0,t1);}

C_noret_decl(trf_20313)
static void C_fcall trf_20313(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20313(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_20313(t0,t1,t2,t3,t4);}

C_noret_decl(trf_20238)
static void C_fcall trf_20238(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20238(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_20238(t0,t1,t2,t3,t4);}

C_noret_decl(trf_20248)
static void C_fcall trf_20248(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20248(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20248(t0,t1);}

C_noret_decl(trf_20255)
static void C_fcall trf_20255(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20255(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20255(t0,t1);}

C_noret_decl(trf_20350)
static void C_fcall trf_20350(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20350(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_20350(t0,t1,t2);}

C_noret_decl(trf_20128)
static void C_fcall trf_20128(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20128(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_20128(t0,t1,t2,t3);}

C_noret_decl(trf_20140)
static void C_fcall trf_20140(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20140(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_20140(t0,t1,t2,t3,t4);}

C_noret_decl(trf_20201)
static void C_fcall trf_20201(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20201(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_20201(t0,t1,t2);}

C_noret_decl(trf_19565)
static void C_fcall trf_19565(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19565(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_19565(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_19501)
static void C_fcall trf_19501(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19501(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19501(t0,t1);}

C_noret_decl(trf_19448)
static void C_fcall trf_19448(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19448(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19448(t0,t1);}

C_noret_decl(trf_19451)
static void C_fcall trf_19451(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19451(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19451(t0,t1);}

C_noret_decl(trf_19645)
static void C_fcall trf_19645(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19645(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19645(t0,t1);}

C_noret_decl(trf_19648)
static void C_fcall trf_19648(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19648(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19648(t0,t1);}

C_noret_decl(trf_19651)
static void C_fcall trf_19651(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19651(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19651(t0,t1);}

C_noret_decl(trf_19666)
static void C_fcall trf_19666(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19666(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19666(t0,t1);}

C_noret_decl(trf_19227)
static void C_fcall trf_19227(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19227(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19227(t0,t1);}

C_noret_decl(trf_19319)
static void C_fcall trf_19319(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19319(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_19319(t0,t1,t2);}

C_noret_decl(trf_19338)
static void C_fcall trf_19338(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19338(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19338(t0,t1);}

C_noret_decl(trf_19292)
static void C_fcall trf_19292(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19292(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_19292(t0,t1,t2);}

C_noret_decl(trf_19237)
static void C_fcall trf_19237(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19237(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_19237(t0,t1,t2);}

C_noret_decl(trf_19247)
static void C_fcall trf_19247(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19247(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_19247(t0,t1,t2,t3);}

C_noret_decl(trf_19093)
static void C_fcall trf_19093(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19093(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_19093(t0,t1,t2);}

C_noret_decl(trf_19162)
static void C_fcall trf_19162(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19162(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_19162(t0,t1,t2);}

C_noret_decl(trf_19108)
static void C_fcall trf_19108(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19108(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_19108(t0,t1,t2,t3,t4);}

C_noret_decl(trf_18650)
static void C_fcall trf_18650(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18650(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18650(t0,t1);}

C_noret_decl(trf_18653)
static void C_fcall trf_18653(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18653(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18653(t0,t1);}

C_noret_decl(trf_18656)
static void C_fcall trf_18656(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18656(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18656(t0,t1);}

C_noret_decl(trf_18659)
static void C_fcall trf_18659(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18659(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18659(t0,t1);}

C_noret_decl(trf_18623)
static void C_fcall trf_18623(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18623(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18623(t0,t1);}

C_noret_decl(trf_18346)
static void C_fcall trf_18346(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18346(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18346(t0,t1);}

C_noret_decl(trf_18349)
static void C_fcall trf_18349(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18349(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18349(t0,t1);}

C_noret_decl(trf_18352)
static void C_fcall trf_18352(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18352(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18352(t0,t1);}

C_noret_decl(trf_18243)
static void C_fcall trf_18243(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18243(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18243(t0,t1);}

C_noret_decl(trf_18234)
static void C_fcall trf_18234(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18234(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_18234(t0,t1,t2);}

C_noret_decl(trf_18225)
static void C_fcall trf_18225(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18225(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18225(t0,t1);}

C_noret_decl(trf_18207)
static void C_fcall trf_18207(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18207(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18207(t0,t1);}

C_noret_decl(trf_18189)
static void C_fcall trf_18189(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18189(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18189(t0,t1);}

C_noret_decl(trf_18171)
static void C_fcall trf_18171(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18171(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18171(t0,t1);}

C_noret_decl(trf_18162)
static void C_fcall trf_18162(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18162(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_18162(t0,t1,t2);}

C_noret_decl(trf_18153)
static void C_fcall trf_18153(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18153(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18153(t0,t1);}

C_noret_decl(trf_17984)
static void C_fcall trf_17984(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17984(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17984(t0,t1);}

C_noret_decl(trf_17940)
static void C_fcall trf_17940(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17940(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_17940(t0,t1,t2);}

C_noret_decl(trf_17461)
static void C_fcall trf_17461(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17461(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17461(t0,t1);}

C_noret_decl(trf_17464)
static void C_fcall trf_17464(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17464(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17464(t0,t1);}

C_noret_decl(trf_17467)
static void C_fcall trf_17467(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17467(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17467(t0,t1);}

C_noret_decl(trf_17470)
static void C_fcall trf_17470(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17470(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17470(t0,t1);}

C_noret_decl(trf_17416)
static void C_fcall trf_17416(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17416(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_17416(t0,t1,t2,t3,t4);}

C_noret_decl(trf_17122)
static void C_fcall trf_17122(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17122(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17122(t0,t1);}

C_noret_decl(trf_17125)
static void C_fcall trf_17125(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17125(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17125(t0,t1);}

C_noret_decl(trf_17128)
static void C_fcall trf_17128(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17128(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17128(t0,t1);}

C_noret_decl(trf_16839)
static void C_fcall trf_16839(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16839(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16839(t0,t1);}

C_noret_decl(trf_16842)
static void C_fcall trf_16842(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16842(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16842(t0,t1);}

C_noret_decl(trf_16845)
static void C_fcall trf_16845(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16845(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16845(t0,t1);}

C_noret_decl(trf_16798)
static void C_fcall trf_16798(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16798(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16798(t0,t1);}

C_noret_decl(trf_16754)
static void C_fcall trf_16754(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16754(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16754(t0,t1);}

C_noret_decl(trf_16669)
static void C_fcall trf_16669(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16669(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16669(t0,t1);}

C_noret_decl(trf_16154)
static void C_fcall trf_16154(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16154(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16154(t0,t1);}

C_noret_decl(trf_16157)
static void C_fcall trf_16157(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16157(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16157(t0,t1);}

C_noret_decl(trf_16160)
static void C_fcall trf_16160(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16160(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16160(t0,t1);}

C_noret_decl(trf_16163)
static void C_fcall trf_16163(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16163(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16163(t0,t1);}

C_noret_decl(trf_16070)
static void C_fcall trf_16070(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16070(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_16070(t0,t1,t2);}

C_noret_decl(trf_16061)
static void C_fcall trf_16061(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16061(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16061(t0,t1);}

C_noret_decl(trf_15996)
static void C_fcall trf_15996(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15996(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15996(t0,t1);}

C_noret_decl(trf_15738)
static void C_fcall trf_15738(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15738(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15738(t0,t1);}

C_noret_decl(trf_15741)
static void C_fcall trf_15741(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15741(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15741(t0,t1);}

C_noret_decl(trf_15744)
static void C_fcall trf_15744(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15744(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15744(t0,t1);}

C_noret_decl(trf_15619)
static void C_fcall trf_15619(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15619(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15619(t0,t1);}

C_noret_decl(trf_15643)
static void C_fcall trf_15643(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15643(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15643(t0,t1);}

C_noret_decl(trf_15573)
static void C_fcall trf_15573(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15573(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_15573(t0,t1,t2);}

C_noret_decl(trf_15564)
static void C_fcall trf_15564(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15564(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15564(t0,t1);}

C_noret_decl(trf_15263)
static void C_fcall trf_15263(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15263(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15263(t0,t1);}

C_noret_decl(trf_15499)
static void C_fcall trf_15499(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15499(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15499(t0,t1);}

C_noret_decl(trf_15505)
static void C_fcall trf_15505(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15505(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15505(t0,t1);}

C_noret_decl(trf_15397)
static void C_fcall trf_15397(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15397(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15397(t0,t1);}

C_noret_decl(trf_15399)
static void C_fcall trf_15399(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15399(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_15399(t0,t1,t2,t3);}

C_noret_decl(trf_15448)
static void C_fcall trf_15448(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15448(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15448(t0,t1);}

C_noret_decl(trf_15413)
static void C_fcall trf_15413(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15413(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15413(t0,t1);}

C_noret_decl(trf_15297)
static void C_fcall trf_15297(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15297(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15297(t0,t1);}

C_noret_decl(trf_15211)
static void C_fcall trf_15211(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15211(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_15211(t0,t1,t2,t3,t4);}

C_noret_decl(trf_15230)
static void C_fcall trf_15230(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15230(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15230(t0,t1);}

C_noret_decl(trf_15161)
static void C_fcall trf_15161(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15161(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_15161(t0,t1,t2,t3);}

C_noret_decl(trf_14922)
static void C_fcall trf_14922(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14922(void *dummy){
C_word t9=C_pick(0);
C_word t8=C_pick(1);
C_word t7=C_pick(2);
C_word t6=C_pick(3);
C_word t5=C_pick(4);
C_word t4=C_pick(5);
C_word t3=C_pick(6);
C_word t2=C_pick(7);
C_word t1=C_pick(8);
C_word t0=C_pick(9);
C_adjust_stack(-10);
f_14922(t0,t1,t2,t3,t4,t5,t6,t7,t8,t9);}

C_noret_decl(trf_14941)
static void C_fcall trf_14941(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14941(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14941(t0,t1);}

C_noret_decl(trf_14956)
static void C_fcall trf_14956(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14956(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14956(t0,t1);}

C_noret_decl(trf_14965)
static void C_fcall trf_14965(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14965(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14965(t0,t1);}

C_noret_decl(trf_14912)
static void C_fcall trf_14912(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14912(void *dummy){
C_word t0=C_pick(0);
C_adjust_stack(-1);
f_14912(t0);}

C_noret_decl(trf_14857)
static void C_fcall trf_14857(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14857(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14857(t0,t1);}

C_noret_decl(trf_14848)
static void C_fcall trf_14848(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14848(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_14848(t0,t1,t2);}

C_noret_decl(trf_14731)
static void C_fcall trf_14731(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14731(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14731(t0,t1);}

C_noret_decl(trf_14722)
static void C_fcall trf_14722(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14722(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_14722(t0,t1,t2);}

C_noret_decl(trf_14704)
static void C_fcall trf_14704(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14704(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_14704(t0,t1,t2);}

C_noret_decl(trf_14695)
static void C_fcall trf_14695(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14695(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14695(t0,t1);}

C_noret_decl(trf_14677)
static void C_fcall trf_14677(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14677(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14677(t0,t1);}

C_noret_decl(trf_14668)
static void C_fcall trf_14668(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14668(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_14668(t0,t1,t2);}

C_noret_decl(trf_14659)
static void C_fcall trf_14659(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14659(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14659(t0,t1);}

C_noret_decl(trf_14641)
static void C_fcall trf_14641(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14641(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14641(t0,t1);}

C_noret_decl(trf_14632)
static void C_fcall trf_14632(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14632(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_14632(t0,t1,t2);}

C_noret_decl(trf_14623)
static void C_fcall trf_14623(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14623(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14623(t0,t1);}

C_noret_decl(trf_14608)
static void C_fcall trf_14608(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14608(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14608(t0,t1);}

C_noret_decl(trf_14563)
static void C_fcall trf_14563(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14563(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14563(t0,t1);}

C_noret_decl(trf_14545)
static void C_fcall trf_14545(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14545(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14545(t0,t1);}

C_noret_decl(trf_14536)
static void C_fcall trf_14536(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14536(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_14536(t0,t1,t2);}

C_noret_decl(trf_14509)
static void C_fcall trf_14509(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14509(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14509(t0,t1);}

C_noret_decl(trf_14491)
static void C_fcall trf_14491(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14491(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14491(t0,t1);}

C_noret_decl(trf_14473)
static void C_fcall trf_14473(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14473(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14473(t0,t1);}

C_noret_decl(trf_14464)
static void C_fcall trf_14464(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14464(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_14464(t0,t1,t2);}

C_noret_decl(trf_14452)
static void C_fcall trf_14452(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14452(void *dummy){
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
f_14452(t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(trf_14416)
static void C_fcall trf_14416(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14416(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14416(t0,t1);}

C_noret_decl(trf_14379)
static void C_fcall trf_14379(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14379(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_14379(t0,t1,t2,t3);}

C_noret_decl(trf_14277)
static void C_fcall trf_14277(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14277(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_14277(t0,t1,t2,t3,t4);}

C_noret_decl(trf_14224)
static void C_fcall trf_14224(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14224(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_14224(t0,t1,t2);}

C_noret_decl(trf_14396)
static void C_fcall trf_14396(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14396(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14396(t0,t1);}

C_noret_decl(trf_14337)
static void C_fcall trf_14337(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14337(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14337(t0,t1);}

C_noret_decl(trf_14192)
static void C_fcall trf_14192(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14192(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14192(t0,t1);}

C_noret_decl(trf_13823)
static void C_fcall trf_13823(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13823(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13823(t0,t1);}

C_noret_decl(trf_13826)
static void C_fcall trf_13826(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13826(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13826(t0,t1);}

C_noret_decl(trf_13829)
static void C_fcall trf_13829(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13829(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13829(t0,t1);}

C_noret_decl(trf_13987)
static void C_fcall trf_13987(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13987(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13987(t0,t1);}

C_noret_decl(trf_13990)
static void C_fcall trf_13990(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13990(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13990(t0,t1);}

C_noret_decl(trf_13999)
static void C_fcall trf_13999(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13999(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_13999(t0,t1,t2);}

C_noret_decl(trf_14009)
static void C_fcall trf_14009(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14009(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14009(t0,t1);}

C_noret_decl(trf_13956)
static void C_fcall trf_13956(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13956(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_13956(t0,t1,t2);}

C_noret_decl(trf_13918)
static void C_fcall trf_13918(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13918(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_13918(t0,t1,t2);}

C_noret_decl(trf_13288)
static void C_fcall trf_13288(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13288(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_13288(t0,t1,t2,t3);}

C_noret_decl(trf_13873)
static void C_fcall trf_13873(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13873(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_13873(t0,t1,t2);}

C_noret_decl(trf_13843)
static void C_fcall trf_13843(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13843(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_13843(t0,t1,t2);}

C_noret_decl(trf_13778)
static void C_fcall trf_13778(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13778(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_13778(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_13722)
static void C_fcall trf_13722(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13722(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_13722(t0,t1,t2);}

C_noret_decl(trf_13690)
static void C_fcall trf_13690(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13690(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_13690(t0,t1,t2);}

C_noret_decl(trf_13641)
static void C_fcall trf_13641(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13641(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_13641(t0,t1,t2);}

C_noret_decl(trf_13660)
static void C_fcall trf_13660(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13660(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_13660(t0,t1,t2);}

C_noret_decl(trf_13580)
static void C_fcall trf_13580(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13580(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_13580(t0,t1,t2,t3);}

C_noret_decl(trf_13563)
static void C_fcall trf_13563(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13563(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13563(t0,t1);}

C_noret_decl(trf_13546)
static void C_fcall trf_13546(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13546(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13546(t0,t1);}

C_noret_decl(trf_13379)
static void C_fcall trf_13379(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13379(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_13379(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_13389)
static void C_fcall trf_13389(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13389(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13389(t0,t1);}

C_noret_decl(trf_13201)
static void C_fcall trf_13201(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13201(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_13201(t0,t1,t2,t3,t4);}

C_noret_decl(trf_13223)
static void C_fcall trf_13223(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13223(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13223(t0,t1);}

C_noret_decl(trf_13042)
static void C_fcall trf_13042(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13042(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_13042(t0,t1,t2,t3);}

C_noret_decl(trf_13131)
static void C_fcall trf_13131(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13131(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_13131(t0,t1,t2,t3,t4);}

C_noret_decl(trf_13145)
static void C_fcall trf_13145(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13145(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13145(t0,t1);}

C_noret_decl(trf_13073)
static void C_fcall trf_13073(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13073(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13073(t0,t1);}

C_noret_decl(trf_12977)
static void C_fcall trf_12977(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12977(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_12977(t0,t1,t2,t3,t4);}

C_noret_decl(trf_11484)
static void C_fcall trf_11484(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11484(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11484(t0,t1);}

C_noret_decl(trf_11487)
static void C_fcall trf_11487(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11487(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11487(t0,t1);}

C_noret_decl(trf_11490)
static void C_fcall trf_11490(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11490(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11490(t0,t1);}

C_noret_decl(trf_11493)
static void C_fcall trf_11493(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11493(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11493(t0,t1);}

C_noret_decl(trf_11496)
static void C_fcall trf_11496(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11496(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11496(t0,t1);}

C_noret_decl(trf_11499)
static void C_fcall trf_11499(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11499(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11499(t0,t1);}

C_noret_decl(trf_11261)
static void C_fcall trf_11261(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11261(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11261(t0,t1);}

C_noret_decl(trf_11316)
static void C_fcall trf_11316(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11316(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11316(t0,t1);}

C_noret_decl(trf_11291)
static void C_fcall trf_11291(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11291(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11291(t0,t1);}

C_noret_decl(trf_11132)
static void C_fcall trf_11132(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11132(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_11132(t0,t1,t2);}

C_noret_decl(trf_11055)
static void C_fcall trf_11055(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11055(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_11055(t0,t1,t2);}

C_noret_decl(trf_11037)
static void C_fcall trf_11037(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11037(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_11037(t0,t1,t2);}

C_noret_decl(trf_11019)
static void C_fcall trf_11019(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11019(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_11019(t0,t1,t2);}

C_noret_decl(trf_10995)
static void C_fcall trf_10995(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10995(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10995(t0,t1);}

C_noret_decl(trf_10989)
static void C_fcall trf_10989(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10989(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_10989(t0,t1,t2,t3,t4);}

C_noret_decl(trf_10851)
static void C_fcall trf_10851(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10851(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10851(t0,t1);}

C_noret_decl(trf_10734)
static void C_fcall trf_10734(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10734(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_10734(t0,t1,t2);}

C_noret_decl(trf_10743)
static void C_fcall trf_10743(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10743(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_10743(t0,t1,t2,t3);}

C_noret_decl(trf_10576)
static void C_fcall trf_10576(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10576(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10576(t0,t1);}

C_noret_decl(trf_10592)
static void C_fcall trf_10592(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10592(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_10592(t0,t1,t2,t3);}

C_noret_decl(trf_10400)
static void C_fcall trf_10400(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10400(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_10400(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_10430)
static void C_fcall trf_10430(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10430(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10430(t0,t1);}

C_noret_decl(trf_10413)
static void C_fcall trf_10413(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10413(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10413(t0,t1);}

C_noret_decl(trf_10278)
static void C_fcall trf_10278(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10278(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_10278(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_10308)
static void C_fcall trf_10308(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10308(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10308(t0,t1);}

C_noret_decl(trf_10291)
static void C_fcall trf_10291(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10291(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10291(t0,t1);}

C_noret_decl(trf_10181)
static void C_fcall trf_10181(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10181(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_10181(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_10194)
static void C_fcall trf_10194(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10194(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10194(t0,t1);}

C_noret_decl(trf_10113)
static void C_fcall trf_10113(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10113(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_10113(t0,t1,t2,t3);}

C_noret_decl(trf_10083)
static void C_fcall trf_10083(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10083(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10083(t0,t1);}

C_noret_decl(trf_10011)
static void C_fcall trf_10011(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10011(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_10011(t0,t1,t2,t3);}

C_noret_decl(trf_9810)
static void C_fcall trf_9810(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9810(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9810(t0,t1);}

C_noret_decl(trf_9892)
static void C_fcall trf_9892(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9892(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9892(t0,t1);}

C_noret_decl(trf_9903)
static void C_fcall trf_9903(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9903(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_9903(t0,t1,t2,t3);}

C_noret_decl(trf_9915)
static void C_fcall trf_9915(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9915(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_9915(t0,t1,t2);}

C_noret_decl(trf_9836)
static void C_fcall trf_9836(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9836(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_9836(t0,t1,t2);}

C_noret_decl(trf_9473)
static void C_fcall trf_9473(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9473(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9473(t0,t1);}

C_noret_decl(trf_9476)
static void C_fcall trf_9476(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9476(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9476(t0,t1);}

C_noret_decl(trf_9482)
static void C_fcall trf_9482(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9482(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9482(t0,t1);}

C_noret_decl(trf_9385)
static void C_fcall trf_9385(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9385(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_9385(t0,t1,t2,t3,t4);}

C_noret_decl(trf_9277)
static void C_fcall trf_9277(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9277(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9277(t0,t1);}

C_noret_decl(trf_9282)
static void C_fcall trf_9282(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9282(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_9282(t0,t1,t2,t3);}

C_noret_decl(trf_9049)
static void C_fcall trf_9049(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9049(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9049(t0,t1);}

C_noret_decl(trf_9052)
static void C_fcall trf_9052(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9052(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9052(t0,t1);}

C_noret_decl(trf_8950)
static void C_fcall trf_8950(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8950(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8950(t0,t1);}

C_noret_decl(trf_8845)
static void C_fcall trf_8845(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8845(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8845(t0,t1);}

C_noret_decl(trf_8854)
static void C_fcall trf_8854(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8854(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_8854(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_8867)
static void C_fcall trf_8867(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8867(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8867(t0,t1);}

C_noret_decl(trf_8709)
static void C_fcall trf_8709(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8709(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8709(t0,t1);}

C_noret_decl(trf_8712)
static void C_fcall trf_8712(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8712(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8712(t0,t1);}

C_noret_decl(trf_8714)
static void C_fcall trf_8714(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8714(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_8714(t0,t1,t2,t3,t4);}

C_noret_decl(trf_8642)
static void C_fcall trf_8642(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8642(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8642(t0,t1);}

C_noret_decl(trf_8645)
static void C_fcall trf_8645(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8645(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8645(t0,t1);}

C_noret_decl(trf_8648)
static void C_fcall trf_8648(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8648(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8648(t0,t1);}

C_noret_decl(trf_8506)
static void C_fcall trf_8506(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8506(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_8506(t0,t1,t2,t3);}

C_noret_decl(trf_8522)
static void C_fcall trf_8522(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8522(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_8522(t0,t1,t2);}

C_noret_decl(trf_8244)
static void C_fcall trf_8244(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8244(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8244(t0,t1);}

C_noret_decl(trf_8247)
static void C_fcall trf_8247(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8247(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8247(t0,t1);}

C_noret_decl(trf_7989)
static void C_fcall trf_7989(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7989(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7989(t0,t1);}

C_noret_decl(trf_7922)
static void C_fcall trf_7922(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7922(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7922(t0,t1);}

C_noret_decl(trf_7912)
static void C_fcall trf_7912(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7912(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7912(t0,t1);}

C_noret_decl(trf_7894)
static void C_fcall trf_7894(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7894(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7894(t0,t1);}

C_noret_decl(trf_7883)
static void C_fcall trf_7883(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7883(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_7883(t0,t1,t2);}

C_noret_decl(trf_7845)
static void C_fcall trf_7845(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7845(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7845(t0,t1);}

C_noret_decl(trf_7838)
static void C_fcall trf_7838(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7838(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7838(t0,t1);}

C_noret_decl(trf_7814)
static void C_fcall trf_7814(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7814(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7814(t0,t1);}

C_noret_decl(trf_7747)
static void C_fcall trf_7747(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7747(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_7747(t0,t1,t2,t3);}

C_noret_decl(trf_7736)
static void C_fcall trf_7736(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7736(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_7736(t0,t1,t2);}

C_noret_decl(trf_7702)
static void C_fcall trf_7702(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7702(void *dummy){
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
f_7702(t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(trf_7675)
static void C_fcall trf_7675(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7675(void *dummy){
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
f_7675(t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(trf_7634)
static void C_fcall trf_7634(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7634(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_7634(t0,t1,t2);}

C_noret_decl(trf_7640)
static void C_fcall trf_7640(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7640(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_7640(t0,t1,t2);}

C_noret_decl(trf_7650)
static void C_fcall trf_7650(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7650(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7650(t0,t1);}

C_noret_decl(trf_7515)
static void C_fcall trf_7515(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7515(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_7515(t0,t1,t2,t3);}

C_noret_decl(trf_7528)
static void C_fcall trf_7528(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7528(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7528(t0,t1);}

C_noret_decl(trf_7476)
static void C_fcall trf_7476(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7476(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_7476(t0,t1,t2,t3,t4);}

C_noret_decl(trf_7486)
static void C_fcall trf_7486(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7486(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7486(t0,t1);}

C_noret_decl(trf_7436)
static void C_fcall trf_7436(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7436(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_7436(t0,t1,t2,t3,t4);}

C_noret_decl(trf_7446)
static void C_fcall trf_7446(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7446(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7446(t0,t1);}

C_noret_decl(trf_7360)
static void C_fcall trf_7360(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7360(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_7360(t0,t1,t2,t3);}

C_noret_decl(trf_7337)
static void C_fcall trf_7337(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7337(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_7337(t0,t1,t2,t3);}

C_noret_decl(trf_7283)
static void C_fcall trf_7283(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7283(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_7283(t0,t1,t2,t3,t4);}

C_noret_decl(trf_6682)
static void C_fcall trf_6682(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6682(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_6682(t0,t1);}

C_noret_decl(trf_6694)
static void C_fcall trf_6694(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6694(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_6694(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_6747)
static void C_fcall trf_6747(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6747(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_6747(t0,t1);}

C_noret_decl(trf_6706)
static void C_fcall trf_6706(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6706(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_6706(t0,t1,t2);}

C_noret_decl(trf_6719)
static void C_fcall trf_6719(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6719(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_6719(t0,t1);}

C_noret_decl(tr6)
static void C_fcall tr6(C_proc6 k) C_regparm C_noret;
C_regparm static void C_fcall tr6(C_proc6 k){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
(k)(6,t0,t1,t2,t3,t4,t5);}

C_noret_decl(tr7)
static void C_fcall tr7(C_proc7 k) C_regparm C_noret;
C_regparm static void C_fcall tr7(C_proc7 k){
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
(k)(7,t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(tr3)
static void C_fcall tr3(C_proc3 k) C_regparm C_noret;
C_regparm static void C_fcall tr3(C_proc3 k){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
(k)(3,t0,t1,t2);}

C_noret_decl(tr5)
static void C_fcall tr5(C_proc5 k) C_regparm C_noret;
C_regparm static void C_fcall tr5(C_proc5 k){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
(k)(5,t0,t1,t2,t3,t4);}

C_noret_decl(tr4)
static void C_fcall tr4(C_proc4 k) C_regparm C_noret;
C_regparm static void C_fcall tr4(C_proc4 k){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
(k)(4,t0,t1,t2,t3);}

C_noret_decl(tr2)
static void C_fcall tr2(C_proc2 k) C_regparm C_noret;
C_regparm static void C_fcall tr2(C_proc2 k){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
(k)(2,t0,t1);}

C_noret_decl(tr7r)
static void C_fcall tr7r(C_proc7 k) C_regparm C_noret;
C_regparm static void C_fcall tr7r(C_proc7 k){
int n;
C_word *a,t7;
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
n=C_rest_count(0);
a=C_alloc(n*3);
t7=C_restore_rest(a,n);
(k)(t0,t1,t2,t3,t4,t5,t6,t7);}

C_noret_decl(tr6r)
static void C_fcall tr6r(C_proc6 k) C_regparm C_noret;
C_regparm static void C_fcall tr6r(C_proc6 k){
int n;
C_word *a,t6;
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
n=C_rest_count(0);
a=C_alloc(n*3);
t6=C_restore_rest(a,n);
(k)(t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(tr5r)
static void C_fcall tr5r(C_proc5 k) C_regparm C_noret;
C_regparm static void C_fcall tr5r(C_proc5 k){
int n;
C_word *a,t5;
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
n=C_rest_count(0);
a=C_alloc(n*3);
t5=C_restore_rest(a,n);
(k)(t0,t1,t2,t3,t4,t5);}

C_noret_decl(tr2r)
static void C_fcall tr2r(C_proc2 k) C_regparm C_noret;
C_regparm static void C_fcall tr2r(C_proc2 k){
int n;
C_word *a,t2;
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
n=C_rest_count(0);
a=C_alloc(n*3);
t2=C_restore_rest(a,n);
(k)(t0,t1,t2);}

C_noret_decl(tr4r)
static void C_fcall tr4r(C_proc4 k) C_regparm C_noret;
C_regparm static void C_fcall tr4r(C_proc4 k){
int n;
C_word *a,t4;
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
n=C_rest_count(0);
a=C_alloc(n*3);
t4=C_restore_rest(a,n);
(k)(t0,t1,t2,t3,t4);}

C_noret_decl(tr3r)
static void C_fcall tr3r(C_proc3 k) C_regparm C_noret;
C_regparm static void C_fcall tr3r(C_proc3 k){
int n;
C_word *a,t3;
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
n=C_rest_count(0);
a=C_alloc(n*3);
t3=C_restore_rest(a,n);
(k)(t0,t1,t2,t3);}

C_noret_decl(tr3rv)
static void C_fcall tr3rv(C_proc3 k) C_regparm C_noret;
C_regparm static void C_fcall tr3rv(C_proc3 k){
int n;
C_word *a,t3;
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
n=C_rest_count(0);
a=C_alloc(n+1);
t3=C_restore_rest_vector(a,n);
(k)(t0,t1,t2,t3);}

C_noret_decl(tr2rv)
static void C_fcall tr2rv(C_proc2 k) C_regparm C_noret;
C_regparm static void C_fcall tr2rv(C_proc2 k){
int n;
C_word *a,t2;
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
n=C_rest_count(0);
a=C_alloc(n+1);
t2=C_restore_rest_vector(a,n);
(k)(t0,t1,t2);}

/* toplevel */
static C_TLS int toplevel_initialized=0;
C_noret_decl(toplevel_trampoline)
static void C_fcall toplevel_trampoline(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall toplevel_trampoline(void *dummy){
C_grace_toplevel(2,C_SCHEME_UNDEFINED,C_restore);}

void C_ccall C_grace_toplevel(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(toplevel_initialized) C_kontinue(t1,C_SCHEME_UNDEFINED);
else C_toplevel_entry(C_text("grace_toplevel"));
C_check_nursery_minimum(3);
if(!C_demand(3)){
C_save(t1);
C_reclaim((void*)toplevel_trampoline,NULL);}
toplevel_initialized=1;
if(!C_demand_2(5525)){
C_save(t1);
C_rereclaim2(5525*sizeof(C_word), 1);
t1=C_restore;}
a=C_alloc(3);
C_initialize_lf(lf,943);
lf[0]=C_h_intern(&lf[0],14,"expand-optkeys");
lf[1]=C_h_intern(&lf[1],3,"let");
lf[2]=C_h_intern(&lf[2],4,"let*");
lf[3]=C_h_intern(&lf[3],5,"null\077");
lf[4]=C_h_intern(&lf[4],5,"error");
lf[5]=C_decode_literal(C_heaptop,"\376B\000\000\022Too many arguments");
lf[6]=C_h_intern(&lf[6],6,"unless");
lf[7]=C_h_intern(&lf[7],10,"\003sysappend");
lf[8]=C_h_intern(&lf[8],3,"car");
lf[9]=C_h_intern(&lf[9],4,"case");
lf[10]=C_decode_literal(C_heaptop,"\376B\000\000\031Positional after keywords");
lf[11]=C_h_intern(&lf[11],4,"when");
lf[12]=C_h_intern(&lf[12],4,"set!");
lf[13]=C_h_intern(&lf[13],8,"keyword\077");
lf[14]=C_decode_literal(C_heaptop,"\376B\000\000\017Unknown keyword");
lf[15]=C_h_intern(&lf[15],3,"cdr");
lf[16]=C_h_intern(&lf[16],4,"else");
lf[17]=C_h_intern(&lf[17],7,"\003sysmap");
lf[18]=C_h_intern(&lf[18],6,"append");
lf[19]=C_decode_literal(C_heaptop,"\376B\000\000\021Redundant keyword");
lf[20]=C_h_intern(&lf[20],2,"if");
lf[21]=C_decode_literal(C_heaptop,"\376B\000\000\030Missing keyword value in");
lf[22]=C_h_intern(&lf[22],4,"cadr");
lf[23]=C_h_intern(&lf[23],4,"cddr");
lf[24]=C_h_intern(&lf[24],15,"string->keyword");
lf[25]=C_h_intern(&lf[25],14,"symbol->string");
lf[26]=C_h_intern(&lf[26],6,"gensym");
lf[27]=C_decode_literal(C_heaptop,"\376B\000\000\004keyp");
lf[28]=C_decode_literal(C_heaptop,"\376B\000\000\004args");
lf[29]=C_h_intern(&lf[29],10,"*messages*");
lf[30]=C_h_intern(&lf[30],11,"expand-send");
lf[31]=C_h_intern(&lf[31],7,"sprintf");
lf[32]=C_decode_literal(C_heaptop,"\376B\000\000\003~A:");
lf[33]=C_h_intern(&lf[33],15,"keyword->string");
lf[34]=C_decode_literal(C_heaptop,"\376B\000\000\031~S duplicate keyword \047~S\047");
lf[35]=C_decode_literal(C_heaptop,"\376B\000\000!~S missing value for keyword \047~A\047");
lf[36]=C_decode_literal(C_heaptop,"\376B\000\000/~S invalid keyword \047~A\047~%Available keywords: ~A");
lf[37]=C_decode_literal(C_heaptop,"\376B\000\000 ~S expected keyword but got \047~S\047");
lf[38]=C_decode_literal(C_heaptop,"\376B\000\000#~S expected ~A arguments but got ~A");
lf[39]=C_h_intern(&lf[39],5,"&rest");
lf[40]=C_decode_literal(C_heaptop,"\376B\000\000\030~S is an invalid message");
lf[41]=C_h_intern(&lf[41],14,"hash-table-ref");
lf[42]=C_h_intern(&lf[42],3,"cwd");
lf[43]=C_h_intern(&lf[43],17,"\003syspeek-c-string");
lf[44]=C_h_intern(&lf[44],5,"chdir");
lf[45]=C_decode_literal(C_heaptop,"\376B\000\000\002~/");
lf[46]=C_h_intern(&lf[46],17,"\003sysmake-c-string");
lf[47]=C_h_intern(&lf[47],5,"fifth");
lf[48]=C_h_intern(&lf[48],5,"sixth");
lf[49]=C_h_intern(&lf[49],7,"seventh");
lf[50]=C_h_intern(&lf[50],6,"eighth");
lf[51]=C_h_intern(&lf[51],5,"ninth");
lf[52]=C_h_intern(&lf[52],5,"tenth");
lf[53]=C_h_intern(&lf[53],3,"nth");
lf[54]=C_h_intern(&lf[54],8,"list-ref");
lf[55]=C_h_intern(&lf[55],4,"rest");
lf[56]=C_h_intern(&lf[56],4,"last");
lf[57]=C_h_intern(&lf[57],7,"butlast");
lf[58]=C_h_intern(&lf[58],4,"tail");
lf[59]=C_h_intern(&lf[59],5,"list*");
lf[60]=C_decode_literal(C_heaptop,"\376B\000\000&>>> Error: too few arguments to list*.");
lf[61]=C_h_intern(&lf[61],9,"list-set!");
lf[62]=C_h_intern(&lf[62],8,"reverse!");
lf[63]=C_h_intern(&lf[63],9,"make-list");
lf[64]=C_decode_literal(C_heaptop,"\376B\000\000\034Negative length to make-list");
lf[65]=C_h_intern(&lf[65],10,"list-index");
lf[66]=C_h_intern(&lf[66],9,"list-find");
lf[67]=C_h_intern(&lf[67],6,"every\077");
lf[93]=C_h_intern(&lf[93],7,"rescale");
lf[94]=C_h_intern(&lf[94],8,"discrete");
lf[95]=C_h_intern(&lf[95],4,"not\077");
lf[96]=C_h_intern(&lf[96],3,"int");
lf[97]=C_h_intern(&lf[97],4,"plus");
lf[98]=C_h_intern(&lf[98],1,"+");
lf[99]=C_h_intern(&lf[99],5,"minus");
lf[100]=C_h_intern(&lf[100],1,"-");
lf[101]=C_h_intern(&lf[101],5,"times");
lf[102]=C_h_intern(&lf[102],1,"*");
lf[103]=C_h_intern(&lf[103],6,"divide");
lf[104]=C_h_intern(&lf[104],1,"/");
lf[105]=C_h_intern(&lf[105],8,"quantize");
lf[106]=C_h_intern(&lf[106],8,"decimals");
lf[107]=C_h_intern(&lf[107],5,"round");
lf[108]=C_h_intern(&lf[108],4,"expt");
lf[109]=C_decode_literal(C_heaptop,"\376U10.0\000");
lf[110]=C_h_intern(&lf[110],15,"rhythm->seconds");
lf[111]=C_decode_literal(C_heaptop,"\376U60.0\000");
lf[112]=C_decode_literal(C_heaptop,"\376U0.25\000");
lf[113]=C_h_intern(&lf[113],6,"\000tempo");
lf[114]=C_h_intern(&lf[114],5,"\000beat");
lf[115]=C_h_intern(&lf[115],12,"cents->ratio");
lf[116]=C_h_intern(&lf[116],12,"ratio->cents");
lf[118]=C_decode_literal(C_heaptop,"\376B\000\000\033not an x y coordinate list:");
lf[119]=C_h_intern(&lf[119],3,"err");
lf[120]=C_decode_literal(C_heaptop,"\376B\000\000\032not an x y coordinate list");
lf[121]=C_decode_literal(C_heaptop,"\376B\000\000\032not an x y coordinate list");
lf[122]=C_h_intern(&lf[122],6,"interp");
lf[123]=C_decode_literal(C_heaptop,"\376B\000\000\027missing x y coordinates");
lf[124]=C_h_intern(&lf[124],8,"tendency");
lf[125]=C_h_intern(&lf[125],3,"ran");
lf[126]=C_h_intern(&lf[126],3,"fit");
lf[127]=C_h_intern(&lf[127],9,"remainder");
lf[128]=C_decode_literal(C_heaptop,"\376B\000\000\021mode not 1 2 or 3");
lf[129]=C_h_intern(&lf[129],5,"scale");
lf[130]=C_h_intern(&lf[130],6,"modulo");
lf[131]=C_decode_literal(C_heaptop,"\376B\000\000\023limit same as start");
lf[132]=C_h_intern(&lf[132],8,"ran-set!");
lf[133]=C_h_intern(&lf[133],7,"between");
lf[134]=C_h_intern(&lf[134],4,"pick");
lf[135]=C_h_intern(&lf[135],4,"odds");
lf[136]=C_decode_literal(C_heaptop,"\376U1.0\000");
lf[137]=C_h_intern(&lf[137],5,"\000true");
lf[138]=C_h_intern(&lf[138],6,"\000false");
lf[139]=C_h_intern(&lf[139],4,"vary");
lf[140]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[141]=C_decode_literal(C_heaptop,"\376B\000\000\020Not a legal mode");
lf[142]=C_h_intern(&lf[142],8,"shuffle!");
lf[143]=C_h_intern(&lf[143],7,"shuffle");
lf[144]=C_h_intern(&lf[144],6,"ranlow");
lf[145]=C_h_intern(&lf[145],7,"ranhigh");
lf[146]=C_h_intern(&lf[146],9,"ranmiddle");
lf[147]=C_h_intern(&lf[147],7,"ranbeta");
lf[148]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[149]=C_h_intern(&lf[149],2,"\000a");
lf[150]=C_h_intern(&lf[150],2,"\000b");
lf[151]=C_h_intern(&lf[151],6,"ranexp");
lf[152]=C_h_intern(&lf[152],8,"rangauss");
lf[153]=C_h_intern(&lf[153],9,"rancauchy");
lf[154]=C_h_intern(&lf[154],10,"ranpoisson");
lf[155]=C_h_intern(&lf[155],3,"arg");
lf[156]=C_h_intern(&lf[156],8,"rangamma");
lf[157]=C_h_intern(&lf[157],8,"ranbrown");
lf[158]=C_h_intern(&lf[158],7,"ranpink");
lf[159]=C_h_intern(&lf[159],4,"segs");
lf[160]=C_decode_literal(C_heaptop,"\376B\000\000\014Illegal base");
lf[161]=C_decode_literal(C_heaptop,"\376B\000\000\020Not a legal mode");
lf[164]=C_decode_literal(C_heaptop,"\376B\000\000\021Not a note or key");
lf[165]=C_h_intern(&lf[165],13,"string-append");
lf[166]=C_decode_literal(C_heaptop,"\376B\000\000\021Not a note or key");
lf[168]=C_decode_literal(C_heaptop,"\376B\000\000\021Not a note or key");
lf[169]=C_decode_literal(C_heaptop,"\376B\000\000\021Not a note or key");
lf[170]=C_decode_literal(C_heaptop,"\376U0.333333333333333\000");
lf[171]=C_decode_literal(C_heaptop,"\376U0.666666666666667\000");
lf[172]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[173]=C_h_intern(&lf[173],5,"floor");
lf[174]=C_decode_literal(C_heaptop,"\376B\000\000\021Not a note or key");
lf[175]=C_h_intern(&lf[175],4,"note");
lf[176]=C_decode_literal(C_heaptop,"\376B\000\000\0014");
lf[177]=C_h_intern(&lf[177],3,"key");
lf[178]=C_decode_literal(C_heaptop,"\376B\000\000\0014");
lf[179]=C_h_intern(&lf[179],2,"hz");
lf[180]=C_decode_literal(C_heaptop,"\376B\000\000\0014");
lf[181]=C_h_intern(&lf[181],2,"pc");
lf[182]=C_h_intern(&lf[182],6,"invert");
lf[183]=C_decode_literal(C_heaptop,"\376B\000\000\020No inversion for");
lf[184]=C_decode_literal(C_heaptop,"\376B\000\000\020No inversion for");
lf[185]=C_h_intern(&lf[185],9,"transpose");
lf[186]=C_decode_literal(C_heaptop,"\376B\000\000\022No transposion for");
lf[187]=C_h_intern(&lf[187],10,"retrograde");
lf[188]=C_h_intern(&lf[188],7,"reverse");
lf[189]=C_h_intern(&lf[189],11,"scale-order");
lf[190]=C_h_intern(&lf[190],4,"sort");
lf[191]=C_decode_literal(C_heaptop,"\376B\000\000\020Not a legal mode");
lf[193]=C_h_intern(&lf[193],8,"spectrum");
lf[195]=C_h_intern(&lf[195],13,"spectrum-time");
lf[197]=C_h_intern(&lf[197],14,"\003sysblock-set!");
lf[198]=C_h_intern(&lf[198],13,"spectrum-size");
lf[200]=C_h_intern(&lf[200],14,"spectrum-freqs");
lf[202]=C_h_intern(&lf[202],13,"spectrum-amps");
lf[203]=C_h_intern(&lf[203],13,"spectrum-copy");
lf[204]=C_h_intern(&lf[204],14,"spectrum-pairs");
lf[205]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[206]=C_h_intern(&lf[206],16,"spectrum-minfreq");
lf[207]=C_h_intern(&lf[207],16,"spectrum-maxfreq");
lf[208]=C_h_intern(&lf[208],15,"spectrum-minamp");
lf[209]=C_h_intern(&lf[209],12,"\003sysfor-each");
lf[210]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[211]=C_h_intern(&lf[211],15,"spectrum-maxamp");
lf[212]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[213]=C_h_intern(&lf[213],13,"spectrum-keys");
lf[214]=C_h_intern(&lf[214],8,"for-each");
lf[215]=C_h_intern(&lf[215],6,"\000order");
lf[216]=C_h_intern(&lf[216],7,"\000thresh");
lf[217]=C_h_intern(&lf[217],6,"\000quant");
lf[218]=C_h_intern(&lf[218],7,"\000unique");
lf[219]=C_h_intern(&lf[219],4,"\000min");
lf[220]=C_h_intern(&lf[220],4,"\000max");
lf[221]=C_h_intern(&lf[221],11,"fm-spectrum");
lf[222]=C_h_intern(&lf[222],8,"set-car!");
lf[223]=C_h_intern(&lf[223],4,"caar");
lf[224]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[225]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[226]=C_h_intern(&lf[226],13,"spectrum-add!");
lf[227]=C_h_intern(&lf[227],11,"rm-spectrum");
lf[228]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[229]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[230]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[231]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[232]=C_h_intern(&lf[232],14,"spectrum-flip!");
lf[233]=C_h_intern(&lf[233],17,"spectrum-rescale!");
lf[234]=C_h_intern(&lf[234],5,"sort!");
lf[235]=C_h_intern(&lf[235],3,"map");
lf[236]=C_h_intern(&lf[236],2,"<=");
lf[237]=C_decode_literal(C_heaptop,"\376B\000\000\037Non-numerical y can\047t be scaler");
lf[238]=C_h_intern(&lf[238],7,"number\077");
lf[239]=C_decode_literal(C_heaptop,"\376B\000\000\014Mode not 1-8");
lf[240]=C_decode_literal(C_heaptop,"\376B\000\000%Need a scaler, envelope or x y values");
lf[241]=C_decode_literal(C_heaptop,"\376B\000\000\024Not a number or pair");
lf[242]=C_h_intern(&lf[242],19,"import-spear-frames");
lf[243]=C_decode_literal(C_heaptop,"\376B\000\000\016Not frame data");
lf[244]=C_h_intern(&lf[244],9,"read-line");
lf[245]=C_decode_literal(C_heaptop,"\376B\000\000\016Bad frame data");
lf[246]=C_h_intern(&lf[246],4,"read");
lf[247]=C_h_intern(&lf[247],17,"open-input-string");
lf[248]=C_decode_literal(C_heaptop,"\376B\000\000\012frame-data");
lf[249]=C_decode_literal(C_heaptop,"\376B\000\000$point-type index frequency amplitude");
lf[250]=C_decode_literal(C_heaptop,"\376B\000\000\016Not frame data");
lf[251]=C_decode_literal(C_heaptop,"\376B\000\000\025par-text-frame-format");
lf[252]=C_decode_literal(C_heaptop,"\376B\000\000\016Not frame data");
lf[253]=C_h_intern(&lf[253],18,"current-input-port");
lf[254]=C_h_intern(&lf[254],20,"with-input-from-file");
lf[256]=C_h_intern(&lf[256],6,"period");
lf[265]=C_h_intern(&lf[265],7,"pattern");
lf[280]=C_h_intern(&lf[280],4,"\000nad");
lf[281]=C_h_intern(&lf[281],8,"\000periods");
lf[282]=C_h_intern(&lf[282],12,"\000depth-first");
lf[284]=C_decode_literal(C_heaptop,"\376U4294967287.0\000");
lf[285]=C_decode_literal(C_heaptop,"\376U4294967287.0\000");
lf[286]=C_h_intern(&lf[286],14,"\000breadth-first");
lf[287]=C_decode_literal(C_heaptop,"\376B\000\000\026Illegal for traversing");
lf[288]=C_h_intern(&lf[288],7,"\000values");
lf[289]=C_decode_literal(C_heaptop,"\376B\000\000\024Illegal for counting");
lf[291]=C_h_intern(&lf[291],4,"eop\077");
lf[292]=C_h_intern(&lf[292],4,"\000eop");
lf[293]=C_h_intern(&lf[293],4,"eod\077");
lf[294]=C_h_intern(&lf[294],4,"\000eod");
lf[295]=C_h_intern(&lf[295],4,"next");
lf[299]=C_h_intern(&lf[299],5,"force");
lf[300]=C_h_intern(&lf[300],8,"promise\077");
lf[301]=C_h_intern(&lf[301],3,"max");
lf[302]=C_h_intern(&lf[302],10,"make-cycle");
lf[304]=C_h_intern(&lf[304],4,"\000for");
lf[305]=C_h_intern(&lf[305],7,"\000repeat");
lf[307]=C_h_intern(&lf[307],5,"palin");
lf[309]=C_h_intern(&lf[309],15,"make-palindrome");
lf[311]=C_h_intern(&lf[311],6,"\000elide");
lf[312]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\377\006\000\376\003\000\000\002\376\377\006\001\376\377\016");
lf[313]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\377\006\001\376\003\000\000\002\376\377\006\000\376\377\016");
lf[314]=C_h_intern(&lf[314],9,"make-line");
lf[316]=C_h_intern(&lf[316],9,"make-heap");
lf[318]=C_h_intern(&lf[318],13,"make-rotation");
lf[320]=C_h_intern(&lf[320],7,"\000rotate");
lf[322]=C_h_intern(&lf[322],11,"random-item");
lf[330]=C_h_intern(&lf[330],14,"make-weighting");
lf[333]=C_h_intern(&lf[333],7,"\000weight");
lf[334]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[335]=C_h_intern(&lf[335],11,"make-markov");
lf[337]=C_h_intern(&lf[337],5,"\000past");
lf[338]=C_h_intern(&lf[338],2,"->");
lf[339]=C_decode_literal(C_heaptop,"\376B\000\000.Left hand sides have different number of items");
lf[340]=C_h_intern(&lf[340],3,"\000->");
lf[341]=C_decode_literal(C_heaptop,"\376B\000\000\042Transition missing right hand side");
lf[342]=C_decode_literal(C_heaptop,"\376B\000\000\030Transition is not a list");
lf[343]=C_decode_literal(C_heaptop,"\376B\000\000 Not a list of Markov transitions");
lf[344]=C_decode_literal(C_heaptop,"\376B\000\000\032No transition matches past");
lf[346]=C_h_intern(&lf[346],10,"graph-node");
lf[347]=C_h_intern(&lf[347],10,"make-graph");
lf[349]=C_h_intern(&lf[349],3,"\000to");
lf[350]=C_h_intern(&lf[350],3,"\000id");
lf[351]=C_decode_literal(C_heaptop,"\376B\000\000\025Graph node not a list");
lf[352]=C_decode_literal(C_heaptop,"\376B\000\000\016Not graph data");
lf[353]=C_decode_literal(C_heaptop,"\376B\000\000\024No graph node for id");
lf[354]=C_h_intern(&lf[354],14,"markov-analyze");
lf[355]=C_h_intern(&lf[355],6,"format");
lf[356]=C_decode_literal(C_heaptop,"\376B\000\000\002~s");
lf[357]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\002->\376\377\016");
lf[358]=C_decode_literal(C_heaptop,"\376B\000\000\001 ");
lf[359]=C_h_intern(&lf[359],7,"newline");
lf[360]=C_h_intern(&lf[360],7,"display");
lf[361]=C_h_intern(&lf[361],19,"\003syswrite-char/port");
lf[362]=C_h_intern(&lf[362],19,"\003sysstandard-output");
lf[363]=C_h_intern(&lf[363],3,"min");
lf[364]=C_decode_literal(C_heaptop,"\376B\000\000\000");
lf[365]=C_decode_literal(C_heaptop,"\376B\000\000\003 ~a");
lf[366]=C_decode_literal(C_heaptop,"\376B\000\000\002~a");
lf[367]=C_decode_literal(C_heaptop,"\376B\000\000\002~a");
lf[368]=C_h_intern(&lf[368],11,"make-string");
lf[369]=C_decode_literal(C_heaptop,"\376U1.0\000");
lf[370]=C_h_intern(&lf[370],1,"<");
lf[371]=C_h_intern(&lf[371],11,"string-ci<\077");
lf[372]=C_decode_literal(C_heaptop,"\376B\000\000\002~a");
lf[373]=C_decode_literal(C_heaptop,"\376B\000\000\002~a");
lf[374]=C_decode_literal(C_heaptop,"\376B\000\000\020Not a legal mode");
lf[375]=C_h_intern(&lf[375],5,"\000mode");
lf[377]=C_h_intern(&lf[377],5,"token");
lf[382]=C_h_intern(&lf[382],1,"t");
lf[387]=C_h_intern(&lf[387],4,"rule");
lf[390]=C_h_intern(&lf[390],22,"hash-table-ref/default");
lf[397]=C_h_intern(&lf[397],11,"parse-error");
lf[401]=C_h_intern(&lf[401],10,"parse-unit");
lf[413]=C_decode_literal(C_heaptop,"\376B\000\000\014no info for ");
lf[415]=C_h_intern(&lf[415],14,"string->symbol");
lf[416]=C_h_intern(&lf[416],5,"equal");
lf[417]=C_h_intern(&lf[417],3,"and");
lf[418]=C_h_intern(&lf[418],2,"or");
lf[419]=C_h_intern(&lf[419],3,"not");
lf[420]=C_decode_literal(C_heaptop,"\376B\000\0005emit-token-unit: dont know how to emit slotref token ");
lf[421]=C_decode_literal(C_heaptop,"\376B\000\000\047emit-token-unit: dont know how to emit ");
lf[424]=C_decode_literal(C_heaptop,"\376B\000\000\033emit: dont know how to emit");
lf[430]=C_decode_literal(C_heaptop,"\376B\000\000\035Not a token type or rule type");
lf[431]=C_decode_literal(C_heaptop,"\376B\000\000\047Pattern opr not one of and, or, *, +, @");
lf[432]=C_h_intern(&lf[432],1,"@");
lf[433]=C_decode_literal(C_heaptop,"\376B\000\000\047Not a pattern value or pattern operator");
lf[434]=C_h_intern(&lf[434],6,"printf");
lf[435]=C_decode_literal(C_heaptop,"\376B\000\000!~%parse[~A]: pattern=~S tokens=~S");
lf[440]=C_h_intern(&lf[440],2,">=");
lf[441]=C_decode_literal(C_heaptop,"\376B\000\000\004stop");
lf[442]=C_decode_literal(C_heaptop,"\376B\000\000\004temp");
lf[443]=C_h_intern(&lf[443],5,"begin");
lf[444]=C_decode_literal(C_heaptop,"\376B\000\000\004bool");
lf[445]=C_decode_literal(C_heaptop,"\376B\000\000\004tail");
lf[446]=C_h_intern(&lf[446],1,">");
lf[447]=C_decode_literal(C_heaptop,"\376B\000\000\004goal");
lf[448]=C_decode_literal(C_heaptop,"\376B\000\000\004from");
lf[449]=C_decode_literal(C_heaptop,"\376B\000\000\004step");
lf[453]=C_h_intern(&lf[453],17,"*sal-trace-input*");
lf[454]=C_h_intern(&lf[454],3,"sal");
lf[455]=C_h_intern(&lf[455],11,"print-error");
lf[456]=C_decode_literal(C_heaptop,"\376B\000\000\013>>> Error: ");
lf[457]=C_h_intern(&lf[457],9,"substring");
lf[458]=C_h_intern(&lf[458],2,"pp");
lf[459]=C_h_intern(&lf[459],4,"eval");
lf[460]=C_h_intern(&lf[460],7,"\000syntax");
lf[461]=C_h_intern(&lf[461],7,"\000scheme");
lf[462]=C_decode_literal(C_heaptop,"\376B\000\000\023Illegal statement: ");
lf[463]=C_h_intern(&lf[463],7,"call/cc");
lf[464]=C_decode_literal(C_heaptop,"\376B\000\000\002~S");
lf[465]=C_h_intern(&lf[465],9,"sal:print");
lf[466]=C_h_intern(&lf[466],13,"print-message");
lf[467]=C_decode_literal(C_heaptop,"\376B\000\000\002{}");
lf[468]=C_decode_literal(C_heaptop,"\376B\000\000\001}");
lf[469]=C_decode_literal(C_heaptop,"\376B\000\000\001 ");
lf[470]=C_decode_literal(C_heaptop,"\376B\000\000\001{");
lf[471]=C_decode_literal(C_heaptop,"\376B\000\000\002#t");
lf[472]=C_decode_literal(C_heaptop,"\376B\000\000\002~S");
lf[473]=C_decode_literal(C_heaptop,"\376B\000\000\002#f");
lf[474]=C_decode_literal(C_heaptop,"\376B\000\000\001\012");
lf[475]=C_h_intern(&lf[475],9,"sal:chdir");
lf[476]=C_h_intern(&lf[476],8,"sal:load");
lf[477]=C_h_intern(&lf[477],13,"load-sal-file");
lf[478]=C_h_intern(&lf[478],4,"load");
lf[479]=C_h_intern(&lf[479],15,"\003syssubstring=\077");
lf[480]=C_decode_literal(C_heaptop,"\376B\000\000\004.sal");
lf[481]=C_decode_literal(C_heaptop,"\376B\000\000\021>>> Error: file \042");
lf[482]=C_decode_literal(C_heaptop,"\376B\000\000\020\042does not exist\012");
lf[483]=C_h_intern(&lf[483],12,"file-exists\077");
lf[484]=C_h_intern(&lf[484],8,"sal:open");
lf[485]=C_decode_literal(C_heaptop,"\376B\000\000)>>> Error: open command not implemented.\012");
lf[486]=C_h_intern(&lf[486],10,"sal:output");
lf[487]=C_decode_literal(C_heaptop,"\376B\000\000+>>> Error: output command not implemented.\012");
lf[499]=C_h_intern(&lf[499],8,"operator");
lf[500]=C_h_intern(&lf[500],8,"bindings");
lf[501]=C_h_intern(&lf[501],10,"collectors");
lf[502]=C_h_intern(&lf[502],9,"initially");
lf[503]=C_h_intern(&lf[503],9,"end-tests");
lf[504]=C_h_intern(&lf[504],7,"looping");
lf[505]=C_h_intern(&lf[505],8,"stepping");
lf[506]=C_h_intern(&lf[506],7,"finally");
lf[507]=C_h_intern(&lf[507],9,"returning");
lf[513]=C_decode_literal(C_heaptop,"\376B\000\000\023illegal loop syntax");
lf[514]=C_decode_literal(C_heaptop,"\376B\000\000\002()");
lf[515]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[516]=C_decode_literal(C_heaptop,"\376B\000\000\001 ");
lf[517]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[518]=C_decode_literal(C_heaptop,"\376B\000\000\020clause context: ");
lf[519]=C_decode_literal(C_heaptop,"\376B\000\000\014LOOP ERROR: ");
lf[521]=C_decode_literal(C_heaptop,"\376B\000\000*Variable expected but source code ran out.");
lf[522]=C_decode_literal(C_heaptop,"\376B\000\000.\047for\047 clause expected but source code ran out.");
lf[523]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[524]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[525]=C_decode_literal(C_heaptop,"\376B\000\000\031 is not valid with \047for\047.");
lf[526]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[527]=C_decode_literal(C_heaptop,"\376B\000\000\034\047 where a variable expected.");
lf[529]=C_h_intern(&lf[529],3,"for");
lf[530]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[531]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[532]=C_h_intern(&lf[532],8,"downfrom");
lf[533]=C_h_intern(&lf[533],5,"above");
lf[534]=C_h_intern(&lf[534],5,"below");
lf[535]=C_h_intern(&lf[535],6,"downto");
lf[536]=C_h_intern(&lf[536],4,"from");
lf[537]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[538]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[539]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[540]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[541]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[542]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[543]=C_h_intern(&lf[543],2,"to");
lf[544]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[545]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[546]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[547]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[548]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[549]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[550]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[551]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[552]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[553]=C_h_intern(&lf[553],2,"by");
lf[554]=C_decode_literal(C_heaptop,"\376B\000\000\025Found duplicate \047by\047.");
lf[555]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[556]=C_decode_literal(C_heaptop,"\376B\000\000\032\047 is not valid with \047for\047.");
lf[557]=C_decode_literal(C_heaptop,"\376B\000\000,Expected expression but source code ran out.");
lf[559]=C_decode_literal(C_heaptop,"\376B\000\0001\047repeat\047 clause expected but source code ran out.");
lf[560]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[562]=C_h_intern(&lf[562],6,"across");
lf[563]=C_h_intern(&lf[563],13,"vector-length");
lf[564]=C_h_intern(&lf[564],10,"vector-ref");
lf[565]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[566]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[567]=C_h_intern(&lf[567],4,"over");
lf[568]=C_h_intern(&lf[568],2,"in");
lf[569]=C_h_intern(&lf[569],5,"quote");
lf[570]=C_decode_literal(C_heaptop,"\376B\000\000\014Extraneous \047");
lf[571]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[572]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[573]=C_decode_literal(C_heaptop,"\376B\000\000\017Duplicate \047by\047.");
lf[574]=C_decode_literal(C_heaptop,"\376B\000\000\036\047by\047 is invalid with \047across\047.");
lf[575]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[576]=C_decode_literal(C_heaptop,"\376B\000\000\032\047 is not valid with \047for\047.");
lf[577]=C_h_intern(&lf[577],2,"on");
lf[578]=C_decode_literal(C_heaptop,"\376B\000\000,Expression expected but source code ran out.");
lf[579]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[581]=C_h_intern(&lf[581],1,"=");
lf[582]=C_decode_literal(C_heaptop,"\376B\000\000\016Duplicate \047=\047.");
lf[583]=C_h_intern(&lf[583],4,"then");
lf[584]=C_decode_literal(C_heaptop,"\376B\000\000\021Duplicate \047then\047.");
lf[585]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[586]=C_decode_literal(C_heaptop,"\376B\000\000\032\047 is not valid with \047for\047.");
lf[587]=C_decode_literal(C_heaptop,"\376B\000\000,Expression expected but source code ran out.");
lf[589]=C_h_intern(&lf[589],4,"with");
lf[590]=C_decode_literal(C_heaptop,"\376B\000\000\021Extraneous \047and\047.");
lf[591]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[592]=C_decode_literal(C_heaptop,"\376B\000\000\027\047 where \047and\047 expected.");
lf[593]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[594]=C_decode_literal(C_heaptop,"\376B\000\000\027\047 where \047and\047 expected.");
lf[595]=C_decode_literal(C_heaptop,"\376B\000\000\020Duplicate \047and\047.");
lf[596]=C_decode_literal(C_heaptop,"\376B\000\000\021Extraneous \047and\047.");
lf[597]=C_decode_literal(C_heaptop,"\376B\000\000\037Found \047=\047 where \047and\047 expected.");
lf[598]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[599]=C_decode_literal(C_heaptop,"\376B\000\000\032\047 where variable expected.");
lf[600]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[601]=C_decode_literal(C_heaptop,"\376B\000\000\036\047 where \047=\047 or \047and\047 expected.");
lf[603]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[604]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[606]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[607]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[609]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[610]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[612]=C_h_intern(&lf[612],3,"sum");
lf[613]=C_h_intern(&lf[613],5,"count");
lf[614]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[615]=C_h_intern(&lf[615],8,"minimize");
lf[616]=C_h_intern(&lf[616],8,"maximize");
lf[617]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[618]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[619]=C_h_intern(&lf[619],4,"list");
lf[620]=C_h_intern(&lf[620],8,"set-cdr!");
lf[621]=C_h_intern(&lf[621],9,"last-pair");
lf[622]=C_h_intern(&lf[622],7,"collect");
lf[623]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\004list\376\003\000\000\002\376\377\006\000\376\377\016");
lf[624]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[625]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[626]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\004list\376\377\016");
lf[627]=C_h_intern(&lf[627],5,"nconc");
lf[628]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[629]=C_decode_literal(C_heaptop,"\376B\000\000\007\047 and \047");
lf[630]=C_decode_literal(C_heaptop,"\376B\000\000 \047 are incompatible accumulators.");
lf[631]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007collect\376\003\000\000\002\376\001\000\000\006append\376\003\000\000\002\376\001\000\000\005nconc\376\377\016");
lf[632]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\005never\376\003\000\000\002\376\001\000\000\006always\376\377\016");
lf[633]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\010minimize\376\003\000\000\002\376\001\000\000\010maximize\376\377\016");
lf[634]=C_h_intern(&lf[634],4,"into");
lf[635]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[636]=C_decode_literal(C_heaptop,"\376B\000\000!\047 where \047into\047 variable expected.");
lf[637]=C_decode_literal(C_heaptop,"\376B\000\000\030Missing \047into\047 variable.");
lf[638]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[639]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[641]=C_h_intern(&lf[641],6,"return");
lf[643]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\002go\376\003\000\000\002\376\377\006\001\376\377\016");
lf[644]=C_h_intern(&lf[644],5,"until");
lf[645]=C_h_intern(&lf[645],5,"while");
lf[646]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[647]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[649]=C_h_intern(&lf[649],7,"thereis");
lf[650]=C_h_intern(&lf[650],6,"always");
lf[651]=C_h_intern(&lf[651],5,"never");
lf[652]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[653]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[655]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[656]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[658]=C_decode_literal(C_heaptop,"\376B\000\000\025Missing \047and\047 clause.");
lf[659]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[660]=C_decode_literal(C_heaptop,"\376B\000\000\036\047 is not conditional operator.");
lf[661]=C_h_intern(&lf[661],4,"task");
lf[662]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007thereis\376\003\000\000\002\376\001\000\000\005never\376\003\000\000\002\376\001\000\000\006always\376\377\016");
lf[664]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\004else\376\377\016");
lf[665]=C_decode_literal(C_heaptop,"\376B\000\000\026Missing \047else\047 clause.");
lf[666]=C_decode_literal(C_heaptop,"\376B\000\000\033Missing conditional clause.");
lf[667]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[668]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[670]=C_h_intern(&lf[670],2,"do");
lf[671]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[672]=C_decode_literal(C_heaptop,"\376B\000\000\030\047 clause cannot follow \047");
lf[673]=C_decode_literal(C_heaptop,"\376B\000\000\002\047.");
lf[674]=C_h_intern(&lf[674],4,"iter");
lf[675]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[676]=C_decode_literal(C_heaptop,"\376B\000\000\032\047 where operator expected.");
lf[677]=C_h_intern(&lf[677],6,"repeat");
lf[678]=C_h_intern(&lf[678],2,"as");
lf[680]=C_h_intern(&lf[680],10,"mm:make-on");
lf[681]=C_h_intern(&lf[681],5,"\000time");
lf[682]=C_h_intern(&lf[682],4,"\000key");
lf[683]=C_h_intern(&lf[683],4,"\000vel");
lf[684]=C_h_intern(&lf[684],5,"\000chan");
lf[685]=C_h_intern(&lf[685],6,"mm:on\077");
lf[686]=C_h_intern(&lf[686],11,"mm:make-off");
lf[687]=C_h_intern(&lf[687],7,"mm:off\077");
lf[688]=C_h_intern(&lf[688],13,"mm:make-touch");
lf[689]=C_h_intern(&lf[689],4,"\000val");
lf[690]=C_h_intern(&lf[690],9,"mm:touch\077");
lf[691]=C_h_intern(&lf[691],12,"mm:make-ctrl");
lf[692]=C_h_intern(&lf[692],4,"\000num");
lf[693]=C_h_intern(&lf[693],8,"mm:ctrl\077");
lf[694]=C_h_intern(&lf[694],12,"mm:make-prog");
lf[695]=C_h_intern(&lf[695],8,"mm:prog\077");
lf[696]=C_h_intern(&lf[696],13,"mm:make-press");
lf[697]=C_h_intern(&lf[697],9,"mm:press\077");
lf[698]=C_h_intern(&lf[698],12,"mm:make-bend");
lf[699]=C_h_intern(&lf[699],7,"mm:free");
lf[700]=C_h_intern(&lf[700],7,"mm:copy");
lf[701]=C_h_intern(&lf[701],7,"mm:time");
lf[702]=C_h_intern(&lf[702],12,"mm:time-set!");
lf[703]=C_h_intern(&lf[703],7,"mm:chan");
lf[704]=C_h_intern(&lf[704],12,"mm:chan-set!");
lf[705]=C_h_intern(&lf[705],6,"mm:key");
lf[706]=C_h_intern(&lf[706],11,"mm:key-set!");
lf[707]=C_h_intern(&lf[707],6,"mm:vel");
lf[708]=C_h_intern(&lf[708],11,"mm:vel-set!");
lf[709]=C_h_intern(&lf[709],6,"mm:val");
lf[710]=C_h_intern(&lf[710],8,"mm:type\077");
lf[711]=C_h_intern(&lf[711],11,"mm:val-set!");
lf[712]=C_h_intern(&lf[712],1,"k");
lf[713]=C_h_intern(&lf[713],6,"mm:num");
lf[714]=C_h_intern(&lf[714],11,"mm:num-set!");
lf[715]=C_h_intern(&lf[715],7,"mp:note");
lf[716]=C_h_intern(&lf[716],7,"mp:midi");
lf[717]=C_h_intern(&lf[717],6,"mp:off");
lf[718]=C_h_intern(&lf[718],5,"mp:on");
lf[719]=C_h_intern(&lf[719],8,"mp:touch");
lf[720]=C_h_intern(&lf[720],7,"mp:ctrl");
lf[721]=C_h_intern(&lf[721],7,"mp:prog");
lf[722]=C_h_intern(&lf[722],8,"mp:press");
lf[723]=C_h_intern(&lf[723],7,"mp:bend");
lf[724]=C_h_intern(&lf[724],5,"mp:mm");
lf[725]=C_h_intern(&lf[725],9,"mp:inhook");
lf[726]=C_decode_literal(C_heaptop,"\376B\000\000*>>> Error: ~A~%    Aborting MIDI inhook.~%");
lf[727]=C_h_intern(&lf[727],27,"condition-property-accessor");
lf[728]=C_h_intern(&lf[728],3,"exn");
lf[729]=C_h_intern(&lf[729],7,"message");
lf[730]=C_h_intern(&lf[730],22,"with-exception-handler");
lf[731]=C_h_intern(&lf[731],30,"call-with-current-continuation");
lf[732]=C_h_intern(&lf[732],4,"cs:i");
lf[733]=C_h_intern(&lf[733],4,"cs:f");
lf[734]=C_h_intern(&lf[734],8,"cs:clear");
lf[735]=C_h_intern(&lf[735],7,"cm-logo");
lf[736]=C_decode_literal(C_heaptop,"\376B\000\000\001 ");
lf[737]=C_decode_literal(C_heaptop,"\376B\000\000\000");
lf[738]=C_decode_literal(C_heaptop,"\376B\000\000\015Common Music ");
lf[739]=C_decode_literal(C_heaptop,"\376B\000\000\001.");
lf[740]=C_decode_literal(C_heaptop,"\376B\000\000\001.");
lf[741]=C_decode_literal(C_heaptop,"\376B\000\000\000");
lf[742]=C_decode_literal(C_heaptop,"\376B\000\000\002~%");
lf[743]=C_h_intern(&lf[743],25,"current-time-milliseconds");
lf[744]=C_h_intern(&lf[744],20,"current-time-seconds");
lf[746]=C_h_intern(&lf[746],6,"\003sysgc");
lf[749]=C_h_intern(&lf[749],6,"sprout");
lf[750]=C_h_intern(&lf[750],9,"\003syserror");
lf[751]=C_decode_literal(C_heaptop,"\376B\000\000\033too many optional arguments");
lf[752]=C_h_intern(&lf[752],3,"now");
lf[753]=C_h_intern(&lf[753],11,"time-format");
lf[754]=C_decode_literal(C_heaptop,"\376U1.0\000");
lf[755]=C_decode_literal(C_heaptop,"\376U1.0\000");
lf[756]=C_h_intern(&lf[756],1,"m");
lf[757]=C_decode_literal(C_heaptop,"\376B\000\000\021not a time-format");
lf[758]=C_h_intern(&lf[758],1,"s");
lf[759]=C_h_intern(&lf[759],5,"pause");
lf[760]=C_h_intern(&lf[760],7,"paused\077");
lf[761]=C_h_intern(&lf[761],4,"cont");
lf[762]=C_h_intern(&lf[762],4,"stop");
lf[763]=C_decode_literal(C_heaptop,"\376B\000\000\021Not an integer id");
lf[764]=C_h_intern(&lf[764],4,"hush");
lf[766]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\014%%stopproc%%\376\003\000\000\002\376\377\001\377\377\377\377\376\377\016");
lf[768]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[769]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[772]=C_h_intern(&lf[772],14,"return-to-host");
lf[773]=C_h_intern(&lf[773],6,"define");
lf[774]=C_decode_literal(C_heaptop,"\376B\000\000\027Illegal process formals");
lf[775]=C_h_intern(&lf[775],18,"\003sysregister-macro");
lf[776]=C_h_intern(&lf[776],14,"define-process");
lf[777]=C_h_intern(&lf[777],6,"lambda");
lf[778]=C_h_intern(&lf[778],7,"elapsed");
lf[779]=C_h_intern(&lf[779],1,"x");
lf[780]=C_h_intern(&lf[780],4,"wait");
lf[781]=C_h_intern(&lf[781],18,"current-error-port");
lf[782]=C_h_intern(&lf[782],19,"print-error-message");
lf[783]=C_decode_literal(C_heaptop,"\376B\000\000\017>>> Error (run)");
lf[784]=C_decode_literal(C_heaptop,"\376B\000\000*Warning: possible non-terminating process.");
lf[785]=C_decode_literal(C_heaptop,"\376B\000\000\003err");
lf[786]=C_decode_literal(C_heaptop,"\376B\000\000\004wait");
lf[787]=C_decode_literal(C_heaptop,"\376B\000\000\004time");
lf[788]=C_h_intern(&lf[788],3,"run");
lf[789]=C_h_intern(&lf[789],20,"\003sysregister-macro-2");
lf[790]=C_h_intern(&lf[790],15,"hash-table-set!");
lf[791]=C_decode_literal(C_heaptop,"\376B\000\000\010cs:clear");
lf[792]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\010cs:clear\376\377\016");
lf[793]=C_decode_literal(C_heaptop,"\376B\000\000\004cs:f");
lf[794]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\004cs:f\376\003\000\000\002\376\001\000\000\005&rest\376\377\016");
lf[795]=C_decode_literal(C_heaptop,"\376B\000\000\004cs:i");
lf[796]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\004cs:i\376\003\000\000\002\376\001\000\000\005&rest\376\377\016");
lf[797]=C_decode_literal(C_heaptop,"\376B\000\000\011mp:inhook");
lf[798]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\011mp:inhook\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000func\376\003\000\000\002\376\377\006\000\376\377\016\376\377\016");
lf[799]=C_decode_literal(C_heaptop,"\376B\000\000\005mp:mm");
lf[800]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\005mp:mm\376\003\000\000\002\376\003\000\000\002\376\001\000\000\003\000mm\376\003\000\000\002\376\377\006\000\376\377\016\376\377\016");
lf[801]=C_decode_literal(C_heaptop,"\376B\000\000\007mp:bend");
lf[802]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007mp:bend\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000val\376\003\000\000\002\376\377\001\000"
"\000 \000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[803]=C_decode_literal(C_heaptop,"\376B\000\000\010mp:press");
lf[804]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\010mp:press\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000val\376\003\000\000\002\376\377\001"
"\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[805]=C_decode_literal(C_heaptop,"\376B\000\000\007mp:prog");
lf[806]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007mp:prog\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000val\376\003\000\000\002\376\377\001\000"
"\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[807]=C_decode_literal(C_heaptop,"\376B\000\000\007mp:ctrl");
lf[808]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007mp:ctrl\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000num\376\003\000\000\002\376\377\001\000"
"\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000val\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[809]=C_decode_literal(C_heaptop,"\376B\000\000\010mp:touch");
lf[810]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\010mp:touch\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000key\376\003\000\000\002\376\377\001"
"\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000val\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[811]=C_decode_literal(C_heaptop,"\376B\000\000\005mp:on");
lf[812]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\005mp:on\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000key\376\003\000\000\002\376\377\001\000\000\000"
"<\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000vel\376\003\000\000\002\376\377\001\000\000\000@\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[813]=C_decode_literal(C_heaptop,"\376B\000\000\006mp:off");
lf[814]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\006mp:off\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000key\376\003\000\000\002\376\377\001\000\000"
"\000<\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[815]=C_decode_literal(C_heaptop,"\376B\000\000\007mp:midi");
lf[816]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007mp:midi\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000dur\376\003\000\000\002\376U0."
"5\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000key\376\003\000\000\002\376\377\001\000\000\000<\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000amp\376\003\000\000\002\376U0.5\000\376\377\016\376\003\000\000\002\376\003\000"
"\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[817]=C_decode_literal(C_heaptop,"\376B\000\000\007mp:note");
lf[818]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007mp:note\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000dur\376\003\000\000\002\376U0."
"5\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000key\376\003\000\000\002\376\377\001\000\000\000<\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000amp\376\003\000\000\002\376U0.5\000\376\377\016\376\003\000\000\002\376\003\000"
"\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[819]=C_h_intern(&lf[819],5,":loop");
lf[820]=C_h_intern(&lf[820],7,"tagbody");
lf[821]=C_h_intern(&lf[821],5,"block");
lf[822]=C_h_intern(&lf[822],3,"nil");
lf[823]=C_h_intern(&lf[823],2,"go");
lf[824]=C_h_intern(&lf[824],8,"function");
lf[825]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[826]=C_h_intern(&lf[826],3,"pop");
lf[827]=C_h_intern(&lf[827],4,"cons");
lf[828]=C_h_intern(&lf[828],4,"push");
lf[829]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\002go\376\003\000\000\002\376\377\006\001\376\377\016");
lf[830]=C_h_intern(&lf[830],4,"loop");
lf[831]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[832]=C_decode_literal(C_heaptop,"\376B\000\000\030SalStatementSequenceRule");
lf[833]=C_decode_literal(C_heaptop,"\376B\000\000\020SalStatementRule");
lf[834]=C_decode_literal(C_heaptop,"\376B\000\000\017Variable: ~A = ");
lf[835]=C_decode_literal(C_heaptop,"\376B\000\000\002)\012");
lf[836]=C_decode_literal(C_heaptop,"\376B\000\000\002, ");
lf[837]=C_decode_literal(C_heaptop,"\376B\000\000\002 (");
lf[838]=C_decode_literal(C_heaptop,"\376B\000\000\012Function: ");
lf[839]=C_h_intern(&lf[839],7,"\000return");
lf[840]=C_h_intern(&lf[840],9,"\000function");
lf[841]=C_decode_literal(C_heaptop,"\376B\000\000\011Process: ");
lf[842]=C_h_intern(&lf[842],8,"\000process");
lf[843]=C_decode_literal(C_heaptop,"\376B\000\000\003...");
lf[844]=C_decode_literal(C_heaptop,"\376B\000\000\026SalDefineStatementRule");
lf[845]=C_decode_literal(C_heaptop,"\376B\000\000\016SalFunDeclRule");
lf[846]=C_decode_literal(C_heaptop,"\376B\000\000\017>>> Error (run)");
lf[847]=C_h_intern(&lf[847],4,"cond");
lf[848]=C_decode_literal(C_heaptop,"\376B\000\000\005abort");
lf[849]=C_decode_literal(C_heaptop,"\376B\000\000\005error");
lf[850]=C_decode_literal(C_heaptop,"\376B\000\000\004wait");
lf[851]=C_decode_literal(C_heaptop,"\376B\000\000\004wait");
lf[852]=C_decode_literal(C_heaptop,"\376B\000\000\004time");
lf[853]=C_h_intern(&lf[853],5,"\000loop");
lf[854]=C_h_intern(&lf[854],4,"\000run");
lf[855]=C_decode_literal(C_heaptop,"\376B\000\000\035run statement outside process");
lf[856]=C_decode_literal(C_heaptop,"\376B\000\000\024SalLoopStatementRule");
lf[857]=C_decode_literal(C_heaptop,"\376B\000\000\022SalTerminationRule");
lf[858]=C_decode_literal(C_heaptop,"\376B\000\000\017SalSteppingRule");
lf[859]=C_decode_literal(C_heaptop,"\376B\000\000\002#f");
lf[860]=C_decode_literal(C_heaptop,"\376B\000\000\002#f");
lf[861]=C_decode_literal(C_heaptop,"\376B\000\000\022SalConditionalRule");
lf[862]=C_decode_literal(C_heaptop,"\376B\000\000\014SalBlockRule");
lf[863]=C_h_intern(&lf[863],9,"list-tail");
lf[864]=C_decode_literal(C_heaptop,"\376B\000\000\021SalAssignmentRule");
lf[865]=C_decode_literal(C_heaptop,"\376B\000\000\015SalAssignRule");
lf[866]=C_h_intern(&lf[866],9,"\000bindings");
lf[867]=C_decode_literal(C_heaptop,"\376B\000\000\017SalBindingsRule");
lf[868]=C_decode_literal(C_heaptop,"\376B\000\000\002#f");
lf[869]=C_decode_literal(C_heaptop,"\376B\000\000\013SalBindRule");
lf[870]=C_decode_literal(C_heaptop,"\376B\000\000!return statement outside function");
lf[871]=C_decode_literal(C_heaptop,"\376B\000\000\025SalFunctionReturnRule");
lf[872]=C_decode_literal(C_heaptop,"\376B\000\000 wait statement outside run block");
lf[873]=C_decode_literal(C_heaptop,"\376B\000\000\022SalProcessWaitRule");
lf[874]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\006fix-me\376\003\000\000\002\376\001\000\000\004plot\376\377\016");
lf[875]=C_decode_literal(C_heaptop,"\376B\000\000\024SalPlotStatementRule");
lf[876]=C_decode_literal(C_heaptop,"\376B\000\000\026SalOutputStatementRule");
lf[877]=C_decode_literal(C_heaptop,"\376B\000\000\026SalSystemStatementRule");
lf[878]=C_h_intern(&lf[878],10,"sal:system");
lf[879]=C_decode_literal(C_heaptop,"\376B\000\000\025SalChdirStatementRule");
lf[880]=C_decode_literal(C_heaptop,"\376B\000\000\024SalLoadStatementRule");
lf[881]=C_decode_literal(C_heaptop,"\376B\000\000\024SalExecStatementRule");
lf[882]=C_decode_literal(C_heaptop,"\376B\000\000\024SalSendStatementRule");
lf[883]=C_decode_literal(C_heaptop,"\376B\000\000\026SalSproutStatementRule");
lf[884]=C_decode_literal(C_heaptop,"\376B\000\000\025SalPrintStatementRule");
lf[885]=C_decode_literal(C_heaptop,"\376B\000\000\014SalSexprRule");
lf[886]=C_decode_literal(C_heaptop,"\376B\000\000\013SalTermRule");
lf[887]=C_decode_literal(C_heaptop,"\376B\000\000\014SalMexprRule");
lf[888]=C_decode_literal(C_heaptop,"\376B\000\000\011SalOpRule");
lf[889]=C_decode_literal(C_heaptop,"\376B\000\000\016SalFuncallRule");
lf[890]=C_decode_literal(C_heaptop,"\376B\000\000\016SalFunargsRule");
lf[891]=C_decode_literal(C_heaptop,"\376B\000\000\014SalKargsRule");
lf[892]=C_decode_literal(C_heaptop,"\376B\000\000\014SalPargsRule");
lf[893]=C_decode_literal(C_heaptop,"\376B\000\000\015SalIfExprRule");
lf[894]=C_decode_literal(C_heaptop,"\376B\000\000\013SalArefRule");
lf[895]=C_decode_literal(C_heaptop,"\376B\000\000\012SalEltRule");
lf[896]=C_h_intern(&lf[896],7,"unquote");
lf[897]=C_h_intern(&lf[897],16,"unquote-splicing");
lf[898]=C_h_intern(&lf[898],5,"\000list");
lf[899]=C_h_intern(&lf[899],8,"\000unquote");
lf[900]=C_decode_literal(C_heaptop,"\376B\000\000\023#$ outside of list.");
lf[901]=C_decode_literal(C_heaptop,"\376B\000\000\023#^ outside of list.");
lf[902]=C_decode_literal(C_heaptop,"\376B\000\000\016SalUnquoteRule");
lf[903]=C_h_intern(&lf[903],10,"quasiquote");
lf[904]=C_decode_literal(C_heaptop,"\376B\000\000\013SalListRule");
lf[905]=C_decode_literal(C_heaptop,"\376B\000\000\013SalAtomRule");
lf[906]=C_decode_literal(C_heaptop,"\376B\000\000\013SalBoolRule");
lf[907]=C_decode_literal(C_heaptop,"\376B\000\000\015SalNumberRule");
lf[908]=C_h_intern(&lf[908],7,"fprintf");
lf[909]=C_decode_literal(C_heaptop,"\376B\000\000\007#<u ~A>");
lf[910]=C_decode_literal(C_heaptop,"\376B\000\000\010#<u x~X>");
lf[911]=C_h_intern(&lf[911],27,"\003sysregister-record-printer");
lf[912]=C_decode_literal(C_heaptop,"\376B\000\000\030#<parse-error ~S (@ ~S)>");
lf[913]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\004list\376\377\016");
lf[914]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\001+\376\003\000\000\002\376\001\000\000\001*\376\003\000\000\002\376\001\000\000\001@\376\003\000\000\002\376\001\000\000\003and\376\003\000\000\002\376\001\000\000\002or\376\377\016");
lf[915]=C_h_intern(&lf[915],6,"ruleid");
lf[916]=C_h_intern(&lf[916],9,"make-rule");
lf[917]=C_h_intern(&lf[917],7,"*rules*");
lf[918]=C_h_intern(&lf[918],7,"defrule");
lf[919]=C_decode_literal(C_heaptop,"\376B\000\000\007#<r ~A>");
lf[920]=C_h_intern(&lf[920],15,"make-hash-table");
lf[921]=C_h_intern(&lf[921],3,"eq\077");
lf[922]=C_decode_literal(C_heaptop,"\376B\000\000\013#<t x~X ~S>");
lf[923]=C_decode_literal(C_heaptop,"\376B\000\000\016#<spectrum ~S>");
lf[924]=C_decode_literal(C_heaptop,"\376B\000\000\001r");
lf[925]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[926]=C_decode_literal(C_heaptop,"\376B\000\000\001r");
lf[927]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\003\000\000\002\376B\000\000\001c\376\003\000\000\002\376B\000\000\002bs\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\002df\376\003\000\000\002\376B\000\000\002cs\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\001d\376"
"\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\002ef\376\003\000\000\002\376B\000\000\002ds\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\001e\376\003\000\000\002\376B\000\000\002ff\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\001"
"f\376\003\000\000\002\376B\000\000\002es\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\002fs\376\003\000\000\002\376B\000\000\002gf\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\001g\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000"
"\000\002af\376\003\000\000\002\376B\000\000\002gs\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\001a\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\002bf\376\003\000\000\002\376B\000\000\002as\376\377\016\376\003\000\000\002\376\003\000\000\002"
"\376B\000\000\001b\376\003\000\000\002\376B\000\000\002cf\376\377\016\376\377\016");
lf[928]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[929]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[930]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376B\000\000\00200\376\003\000\000\002\376B\000\000\0010\376\003\000\000\002\376B\000\000\0011\376\003\000\000\002\376B\000\000\0012\376\003\000\000\002\376B\000\000\0013\376\003\000\000\002\376B\000\000\0014\376\003\000\000\002\376B\000\000\0015\376\003"
"\000\000\002\376B\000\000\0016\376\003\000\000\002\376B\000\000\0017\376\003\000\000\002\376B\000\000\0018\376\003\000\000\002\376B\000\000\0019\376\377\016");
lf[931]=C_decode_literal(C_heaptop,"\376B\000\000\001>");
lf[932]=C_decode_literal(C_heaptop,"\376B\000\000\001<");
lf[933]=C_decode_literal(C_heaptop,"\376B\000\000\002bs");
lf[934]=C_decode_literal(C_heaptop,"\376B\000\000\002cf");
lf[935]=C_decode_literal(C_heaptop,"\376B\000\000\002bs");
lf[936]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[937]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[938]=C_h_intern(&lf[938],6,"equal\077");
lf[939]=C_h_intern(&lf[939],4,"send");
lf[940]=C_decode_literal(C_heaptop,"\376B\000\0003message function not string, symbol or list of both");
lf[941]=C_h_intern(&lf[941],19,"define-send-message");
lf[942]=C_h_intern(&lf[942],12,"with-optkeys");
C_register_lf2(lf,943,create_ptable());
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6342,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_library_toplevel(2,C_SCHEME_UNDEFINED,t2);}

/* k6340 */
static void C_ccall f_6342(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6342,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6345,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_eval_toplevel(2,C_SCHEME_UNDEFINED,t2);}

/* k6343 in k6340 */
static void C_ccall f_6345(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6345,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6348,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_extras_toplevel(2,C_SCHEME_UNDEFINED,t2);}

/* k6346 in k6343 in k6340 */
static void C_ccall f_6348(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6348,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6351,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_extras_toplevel(2,C_SCHEME_UNDEFINED,t2);}

/* k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_6351(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6351,2,t0,t1);}
t2=C_mutate((C_word*)lf[0]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6353,a[2]=((C_word)li4),tmp=(C_word)a,a+=3,tmp));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6642,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40233,a[2]=((C_word)li652),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 250  ##sys#register-macro");
t5=C_retrieve(lf[775]);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,lf[942],t4);}

/* a40232 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_40233(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr3r,(void*)f_40233r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_40233r(t0,t1,t2,t3);}}

static void C_ccall f_40233r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cdr(t2);
C_trace("ChickenBridge.scm: 251  expand-optkeys");
t6=*((C_word*)lf[0]+1);
((C_proc5)C_retrieve_proc(t6))(5,t6,t1,t4,t5,t3);}

/* k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_6642(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6642,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6646,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 257  make-hash-table");
t3=C_retrieve(lf[920]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,*((C_word*)lf[938]+1));}

/* k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_6646(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6646,2,t0,t1);}
t2=C_mutate((C_word*)lf[29]+1,t1);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6649,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40181,a[2]=((C_word)li651),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 259  ##sys#register-macro");
t5=C_retrieve(lf[775]);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,lf[941],t4);}

/* a40180 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_40181(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[18],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_40181,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_40185,a[2]=t6,a[3]=t1,a[4]=t3,a[5]=t4,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t8=(C_word)C_i_car(((C_word*)t4)[1]);
t9=C_set_block_item(t6,0,t8);
t10=(C_word)C_i_cadr(((C_word*)t4)[1]);
t11=C_set_block_item(t4,0,t10);
t12=t7;
f_40185(2,t12,t11);}
else{
if(C_truep((C_word)C_i_stringp(((C_word*)t4)[1]))){
t8=C_set_block_item(t6,0,((C_word*)t4)[1]);
t9=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40218,a[2]=t7,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 266  string->symbol");
t10=*((C_word*)lf[415]+1);
((C_proc3)C_retrieve_proc(t10))(3,t10,t9,((C_word*)t4)[1]);}
else{
if(C_truep((C_word)C_i_symbolp(((C_word*)t4)[1]))){
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40228,a[2]=t7,a[3]=t6,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 268  symbol->string");
t9=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t9))(3,t9,t8,((C_word*)t4)[1]);}
else{
C_trace("ChickenBridge.scm: 270  error");
t8=*((C_word*)lf[4]+1);
((C_proc3)C_retrieve_proc(t8))(3,t8,t7,lf[940]);}}}}

/* k40226 in a40180 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_40228(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_40185(2,t3,t2);}

/* k40216 in a40180 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_40218(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_40185(2,t3,t2);}

/* k40183 in a40180 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_40185(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40185,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[4]);
t3=(C_word)C_a_i_list(&a,2,lf[569],t2);
t4=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_list(&a,4,lf[790],lf[29],((C_word*)((C_word*)t0)[2])[1],t3));}

/* k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_6649(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6649,2,t0,t1);}
t2=C_mutate((C_word*)lf[30]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6651,a[2]=((C_word)li12),tmp=(C_word)a,a+=3,tmp));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6942,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40175,a[2]=((C_word)li650),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 355  ##sys#register-macro");
t5=C_retrieve(lf[775]);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,lf[939],t4);}

/* a40174 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_40175(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr3r,(void*)f_40175r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_40175r(t0,t1,t2,t3);}}

static void C_ccall f_40175r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_trace("ChickenBridge.scm: 356  expand-send");
t4=C_retrieve(lf[30]);
((C_proc5)C_retrieve_proc(t4))(5,t4,t1,t2,t3,C_SCHEME_FALSE);}

/* k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_6942(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word t36;
C_word t37;
C_word t38;
C_word t39;
C_word t40;
C_word t41;
C_word t42;
C_word t43;
C_word t44;
C_word t45;
C_word t46;
C_word t47;
C_word t48;
C_word t49;
C_word t50;
C_word t51;
C_word t52;
C_word t53;
C_word t54;
C_word t55;
C_word t56;
C_word t57;
C_word t58;
C_word t59;
C_word t60;
C_word t61;
C_word t62;
C_word t63;
C_word t64;
C_word t65;
C_word t66;
C_word t67;
C_word t68;
C_word t69;
C_word t70;
C_word t71;
C_word t72;
C_word t73;
C_word t74;
C_word t75;
C_word t76;
C_word t77;
C_word t78;
C_word t79;
C_word t80;
C_word t81;
C_word t82;
C_word t83;
C_word t84;
C_word t85;
C_word ab[219],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6942,2,t0,t1);}
t2=C_mutate((C_word*)lf[42]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6944,a[2]=((C_word)li14),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate((C_word*)lf[44]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6955,a[2]=((C_word)li16),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate((C_word*)lf[47]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6984,a[2]=((C_word)li17),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate((C_word*)lf[48]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6994,a[2]=((C_word)li18),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate((C_word*)lf[49]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7004,a[2]=((C_word)li19),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate((C_word*)lf[50]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7014,a[2]=((C_word)li20),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate((C_word*)lf[51]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7024,a[2]=((C_word)li21),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate((C_word*)lf[52]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7038,a[2]=((C_word)li22),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate((C_word*)lf[53]+1,*((C_word*)lf[54]+1));
t11=C_mutate((C_word*)lf[55]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7053,a[2]=((C_word)li23),tmp=(C_word)a,a+=3,tmp));
t12=C_mutate((C_word*)lf[56]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7059,a[2]=((C_word)li24),tmp=(C_word)a,a+=3,tmp));
t13=C_mutate((C_word*)lf[57]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7082,a[2]=((C_word)li25),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate((C_word*)lf[58]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7130,a[2]=((C_word)li26),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate((C_word*)lf[59]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7220,a[2]=((C_word)li27),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate((C_word*)lf[61]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7260,a[2]=((C_word)li28),tmp=(C_word)a,a+=3,tmp));
t17=C_mutate((C_word*)lf[62]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7270,a[2]=((C_word)li30),tmp=(C_word)a,a+=3,tmp));
t18=C_mutate((C_word*)lf[63]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7331,a[2]=((C_word)li33),tmp=(C_word)a,a+=3,tmp));
t19=C_mutate((C_word*)lf[65]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7430,a[2]=((C_word)li35),tmp=(C_word)a,a+=3,tmp));
t20=C_mutate((C_word*)lf[66]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7470,a[2]=((C_word)li37),tmp=(C_word)a,a+=3,tmp));
t21=C_mutate((C_word*)lf[67]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7509,a[2]=((C_word)li39),tmp=(C_word)a,a+=3,tmp));
t22=C_mutate(&lf[68],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7548,a[2]=((C_word)li40),tmp=(C_word)a,a+=3,tmp));
t23=C_mutate(&lf[69],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7634,a[2]=((C_word)li42),tmp=(C_word)a,a+=3,tmp));
t24=C_mutate(&lf[70],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7675,a[2]=((C_word)li43),tmp=(C_word)a,a+=3,tmp));
t25=C_mutate(&lf[71],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7702,a[2]=((C_word)li44),tmp=(C_word)a,a+=3,tmp));
t26=C_mutate(&lf[72],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7729,a[2]=((C_word)li45),tmp=(C_word)a,a+=3,tmp));
t27=C_mutate(&lf[73],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7736,a[2]=((C_word)li46),tmp=(C_word)a,a+=3,tmp));
t28=C_mutate(&lf[74],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7747,a[2]=((C_word)li47),tmp=(C_word)a,a+=3,tmp));
t29=C_mutate(&lf[75],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7762,a[2]=((C_word)li48),tmp=(C_word)a,a+=3,tmp));
t30=C_mutate(&lf[76],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7769,a[2]=((C_word)li49),tmp=(C_word)a,a+=3,tmp));
t31=C_mutate(&lf[77],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7776,a[2]=((C_word)li50),tmp=(C_word)a,a+=3,tmp));
t32=C_mutate(&lf[78],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7795,a[2]=((C_word)li51),tmp=(C_word)a,a+=3,tmp));
t33=C_mutate(&lf[79],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7814,a[2]=((C_word)li52),tmp=(C_word)a,a+=3,tmp));
t34=C_mutate(&lf[80],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7835,a[2]=((C_word)li53),tmp=(C_word)a,a+=3,tmp));
t35=C_mutate(&lf[81],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7838,a[2]=((C_word)li54),tmp=(C_word)a,a+=3,tmp));
t36=C_mutate(&lf[82],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7845,a[2]=((C_word)li55),tmp=(C_word)a,a+=3,tmp));
t37=C_mutate(&lf[83],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7874,a[2]=((C_word)li56),tmp=(C_word)a,a+=3,tmp));
t38=C_mutate(&lf[84],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7877,a[2]=((C_word)li57),tmp=(C_word)a,a+=3,tmp));
t39=C_mutate(&lf[85],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7880,a[2]=((C_word)li58),tmp=(C_word)a,a+=3,tmp));
t40=C_mutate(&lf[86],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7883,a[2]=((C_word)li59),tmp=(C_word)a,a+=3,tmp));
t41=C_mutate(&lf[87],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7894,a[2]=((C_word)li60),tmp=(C_word)a,a+=3,tmp));
t42=C_mutate(&lf[88],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7912,a[2]=((C_word)li61),tmp=(C_word)a,a+=3,tmp));
t43=C_mutate(&lf[89],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7919,a[2]=((C_word)li62),tmp=(C_word)a,a+=3,tmp));
t44=C_mutate(&lf[90],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7922,a[2]=((C_word)li63),tmp=(C_word)a,a+=3,tmp));
t45=C_mutate(&lf[91],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7929,a[2]=((C_word)li64),tmp=(C_word)a,a+=3,tmp));
t46=C_mutate(&lf[92],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7932,a[2]=((C_word)li65),tmp=(C_word)a,a+=3,tmp));
t47=C_mutate((C_word*)lf[93]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7951,a[2]=((C_word)li67),tmp=(C_word)a,a+=3,tmp));
t48=C_mutate((C_word*)lf[94]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7985,a[2]=((C_word)li70),tmp=(C_word)a,a+=3,tmp));
t49=C_mutate((C_word*)lf[96]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8096,a[2]=((C_word)li71),tmp=(C_word)a,a+=3,tmp));
t50=C_mutate((C_word*)lf[97]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8111,a[2]=((C_word)li72),tmp=(C_word)a,a+=3,tmp));
t51=C_mutate((C_word*)lf[99]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8153,a[2]=((C_word)li73),tmp=(C_word)a,a+=3,tmp));
t52=C_mutate((C_word*)lf[101]+1,*((C_word*)lf[102]+1));
t53=C_mutate((C_word*)lf[103]+1,*((C_word*)lf[104]+1));
t54=C_mutate((C_word*)lf[105]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8179,a[2]=((C_word)li75),tmp=(C_word)a,a+=3,tmp));
t55=C_mutate((C_word*)lf[106]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8200,a[2]=((C_word)li77),tmp=(C_word)a,a+=3,tmp));
t56=C_mutate((C_word*)lf[110]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8240,a[2]=((C_word)li79),tmp=(C_word)a,a+=3,tmp));
t57=C_mutate((C_word*)lf[115]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8476,a[2]=((C_word)li80),tmp=(C_word)a,a+=3,tmp));
t58=C_mutate((C_word*)lf[116]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8491,a[2]=((C_word)li81),tmp=(C_word)a,a+=3,tmp));
t59=C_mutate(&lf[117],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8506,a[2]=((C_word)li83),tmp=(C_word)a,a+=3,tmp));
t60=C_mutate((C_word*)lf[122]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8592,a[2]=((C_word)li84),tmp=(C_word)a,a+=3,tmp));
t61=C_mutate((C_word*)lf[124]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8638,a[2]=((C_word)li85),tmp=(C_word)a,a+=3,tmp));
t62=C_mutate((C_word*)lf[126]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8705,a[2]=((C_word)li88),tmp=(C_word)a,a+=3,tmp));
t63=C_mutate((C_word*)lf[129]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8838,a[2]=((C_word)li90),tmp=(C_word)a,a+=3,tmp));
t64=C_mutate((C_word*)lf[132]+1,C_retrieve2(lf[80],"tb:ran-set!"));
t65=C_mutate((C_word*)lf[125]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8946,a[2]=((C_word)li91),tmp=(C_word)a,a+=3,tmp));
t66=C_mutate((C_word*)lf[133]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8981,a[2]=((C_word)li92),tmp=(C_word)a,a+=3,tmp));
t67=C_mutate((C_word*)lf[134]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9002,a[2]=((C_word)li93),tmp=(C_word)a,a+=3,tmp));
t68=C_mutate((C_word*)lf[135]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9045,a[2]=((C_word)li94),tmp=(C_word)a,a+=3,tmp));
t69=C_mutate((C_word*)lf[139]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9273,a[2]=((C_word)li97),tmp=(C_word)a,a+=3,tmp));
t70=C_mutate((C_word*)lf[142]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9372,a[2]=((C_word)li99),tmp=(C_word)a,a+=3,tmp));
t71=C_mutate((C_word*)lf[143]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9427,a[2]=((C_word)li100),tmp=(C_word)a,a+=3,tmp));
t72=C_mutate((C_word*)lf[144]+1,C_retrieve2(lf[83],"tb:ranlow"));
t73=C_mutate((C_word*)lf[145]+1,C_retrieve2(lf[84],"tb:ranhigh"));
t74=C_mutate((C_word*)lf[146]+1,C_retrieve2(lf[85],"tb:ranmiddle"));
t75=C_mutate((C_word*)lf[147]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9469,a[2]=((C_word)li101),tmp=(C_word)a,a+=3,tmp));
t76=C_mutate((C_word*)lf[151]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9697,a[2]=((C_word)li102),tmp=(C_word)a,a+=3,tmp));
t77=C_mutate((C_word*)lf[152]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9716,a[2]=((C_word)li103),tmp=(C_word)a,a+=3,tmp));
t78=C_mutate((C_word*)lf[153]+1,C_retrieve2(lf[89],"tb:rancauchy"));
t79=C_mutate((C_word*)lf[154]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9757,a[2]=((C_word)li104),tmp=(C_word)a,a+=3,tmp));
t80=C_mutate((C_word*)lf[156]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9776,a[2]=((C_word)li105),tmp=(C_word)a,a+=3,tmp));
t81=C_mutate((C_word*)lf[157]+1,C_retrieve2(lf[92],"tb:ranbrown"));
t82=C_mutate((C_word*)lf[158]+1,C_retrieve2(lf[91],"tb:ranpink"));
t83=C_mutate((C_word*)lf[159]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9797,a[2]=((C_word)li109),tmp=(C_word)a,a+=3,tmp));
t84=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10006,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  make-hash-table");
t85=C_retrieve(lf[920]);
((C_proc3)C_retrieve_proc(t85))(3,t85,t84,*((C_word*)lf[938]+1));}

/* k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_10006(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10006,2,t0,t1);}
t2=C_mutate(&lf[162],t1);
t3=C_SCHEME_END_OF_LIST;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10009,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39959,a[2]=t7,a[3]=t4,a[4]=((C_word)li649),tmp=(C_word)a,a+=5,tmp));
t9=((C_word*)t7)[1];
f_39959(t9,t5,C_fix(0));}

/* do702 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_39959(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_39959,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nequalp(t2,C_fix(128)))){
t3=(C_word)C_a_i_list(&a,5,lf[924],C_fix(-1),lf[925],C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39972,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  hash-table-set!");
t5=C_retrieve(lf[790]);
((C_proc5)C_retrieve_proc(t5))(5,t5,t4,C_retrieve2(lf[162],"*notes*"),lf[926],t3);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_40173,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 377  modulo");
t4=*((C_word*)lf[130]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,t2,C_fix(12));}}

/* k40171 in do702 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_40173(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40173,2,t0,t1);}
t2=(C_word)C_i_list_ref(lf[927],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39982,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39993,a[2]=t4,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  modulo");
t6=*((C_word*)lf[130]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,((C_word*)t0)[4],C_fix(12));}

/* k39991 in k40171 in do702 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_39993(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39993,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[4],lf[928]);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],lf[929]);
t4=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_40005,a[2]=t3,a[3]=t2,a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[3],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 377  tb:keynum->hertz");
f_7814(t4,((C_word*)t0)[4]);}

/* k40003 in k39991 in k40171 in do702 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_40005(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40005,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_40009,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],lf[937]);
C_trace("ChickenBridge.scm: 377  tb:keynum->hertz");
f_7814(t2,t3);}

/* k40007 in k40003 in k39991 in k40171 in do702 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_40009(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40009,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_40013,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
t3=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[6],lf[936]);
C_trace("ChickenBridge.scm: 377  tb:keynum->hertz");
f_7814(t2,t3);}

/* k40011 in k40007 in k40003 in k39991 in k40171 in do702 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_40013(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40013,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_40157,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_a_i_divide(&a,2,((C_word*)t0)[7],C_fix(12));
C_trace("ChickenBridge.scm: 377  floor");
t4=*((C_word*)lf[173]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,t3);}

/* k40155 in k40011 in k40007 in k40003 in k39991 in k40171 in do702 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_40157(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40157,2,t0,t1);}
t2=(C_word)C_i_inexact_to_exact(t1);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_40019,a[2]=((C_word*)t0)[10],a[3]=t4,a[4]=((C_word)li648),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_40019(t6,((C_word*)t0)[9],((C_word*)((C_word*)t0)[10])[1],((C_word*)t0)[8],((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t2,C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* do708 in k40155 in k40011 in k40007 in k40003 in k39991 in k40171 in do702 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_40019(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7,C_word t8,C_word t9,C_word t10,C_word t11,C_word t12,C_word t13){
C_word tmp;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[40],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_40019,NULL,14,t0,t1,t2,t3,t4,t5,t6,t7,t8,t9,t10,t11,t12,t13);}
t14=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t15=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t16=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t17=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t18=t1;
((C_proc2)(void*)(*((C_word*)t18+1)))(2,t18,C_SCHEME_FALSE);}
else{
t18=(*a=C_CLOSURE_TYPE|15,a[1]=(C_word)f_40029,a[2]=t17,a[3]=t16,a[4]=t15,a[5]=t14,a[6]=t9,a[7]=t8,a[8]=t7,a[9]=t6,a[10]=t5,a[11]=t4,a[12]=t3,a[13]=t1,a[14]=((C_word*)t0)[3],a[15]=t2,tmp=(C_word)a,a+=16,tmp);
t19=(*a=C_CLOSURE_TYPE|15,a[1]=(C_word)f_40039,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=t8,a[5]=t6,a[6]=t9,a[7]=t5,a[8]=t17,a[9]=t4,a[10]=t7,a[11]=t3,a[12]=t16,a[13]=t15,a[14]=t14,a[15]=t18,tmp=(C_word)a,a+=16,tmp);
if(C_truep((C_word)C_i_nequalp(t3,C_fix(0)))){
t20=(C_word)C_i_car(t2);
t21=t19;
f_40039(t21,(C_word)C_i_string_equal_p(t20,lf[935]));}
else{
t20=t19;
f_40039(t20,C_SCHEME_FALSE);}}}

/* k40037 in do708 in k40155 in k40011 in k40007 in k40003 in k39991 in k40171 in do702 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_40039(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_40039,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[15];
f_40029(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|15,a[1]=(C_word)f_40042,a[2]=((C_word*)t0)[15],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],a[12]=((C_word*)t0)[11],a[13]=((C_word*)t0)[12],a[14]=((C_word*)t0)[13],a[15]=((C_word*)t0)[14],tmp=(C_word)a,a+=16,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[3]);
if(C_truep((C_word)C_i_string_equal_p(t3,lf[933]))){
t4=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[14])[1],C_fix(1));
t5=C_mutate(((C_word *)((C_word*)t0)[14])+1,t4);
t6=t2;
f_40042(t6,t5);}
else{
t4=(C_word)C_i_car(((C_word*)t0)[3]);
if(C_truep((C_word)C_i_string_equal_p(t4,lf[934]))){
t5=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[14])[1],C_fix(1));
t6=C_mutate(((C_word *)((C_word*)t0)[14])+1,t5);
t7=t2;
f_40042(t7,t6);}
else{
t5=t2;
f_40042(t5,C_SCHEME_UNDEFINED);}}}}

/* k40040 in k40037 in do708 in k40155 in k40011 in k40007 in k40003 in k39991 in k40171 in do702 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_40042(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_40042,NULL,2,t0,t1);}
t2=(C_word)C_i_list_ref(lf[930],((C_word*)((C_word*)t0)[15])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[14])+1,t2);
t4=(*a=C_CLOSURE_TYPE|14,a[1]=(C_word)f_40050,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[14],a[11]=((C_word*)t0)[10],a[12]=((C_word*)t0)[11],a[13]=((C_word*)t0)[12],a[14]=((C_word*)t0)[13],tmp=(C_word)a,a+=15,tmp);
t5=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 377  string-append");
t6=*((C_word*)lf[165]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,t5,((C_word*)((C_word*)t0)[14])[1]);}

/* k40048 in k40040 in k40037 in do708 in k40155 in k40011 in k40007 in k40003 in k39991 in k40171 in do702 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_40050(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40050,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[14])+1,t1);
t3=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[14])[1],((C_word*)t0)[13],((C_word*)t0)[12],((C_word*)t0)[11],((C_word*)((C_word*)t0)[10])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[9])+1,t3);
t5=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_40057,a[2]=((C_word*)t0)[13],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[7],a[11]=((C_word*)t0)[8],a[12]=((C_word*)t0)[14],tmp=(C_word)a,a+=13,tmp);
C_trace("ChickenBridge.scm: 377  hash-table-set!");
t6=C_retrieve(lf[790]);
((C_proc5)C_retrieve_proc(t6))(5,t6,t5,C_retrieve2(lf[162],"*notes*"),((C_word*)((C_word*)t0)[14])[1],((C_word*)((C_word*)t0)[9])[1]);}

/* k40055 in k40048 in k40040 in k40037 in do708 in k40155 in k40011 in k40007 in k40003 in k39991 in k40171 in do702 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_40057(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40057,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_40060,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[12],tmp=(C_word)a,a+=12,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
if(C_truep(t3)){
C_trace("ChickenBridge.scm: 377  hash-table-set!");
t4=C_retrieve(lf[790]);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,C_retrieve2(lf[162],"*notes*"),((C_word*)t0)[2],((C_word*)((C_word*)t0)[8])[1]);}
else{
t4=t2;
f_40060(2,t4,C_SCHEME_UNDEFINED);}}

/* k40058 in k40055 in k40048 in k40040 in k40037 in do708 in k40155 in k40011 in k40007 in k40003 in k39991 in k40171 in do702 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_40060(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40060,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_40064,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 377  string-append");
t4=*((C_word*)lf[165]+1);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,t3,lf[932],((C_word*)((C_word*)t0)[8])[1]);}

/* k40062 in k40058 in k40055 in k40048 in k40040 in k40037 in do708 in k40155 in k40011 in k40007 in k40003 in k39991 in k40171 in do702 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_40064(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40064,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[11])+1,t1);
t3=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[11])[1],((C_word*)t0)[10],((C_word*)t0)[9],C_SCHEME_FALSE,((C_word*)((C_word*)t0)[8])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[7])+1,t3);
t5=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_40071,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[5],a[9]=((C_word*)t0)[6],a[10]=((C_word*)t0)[11],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 377  hash-table-set!");
t6=C_retrieve(lf[790]);
((C_proc5)C_retrieve_proc(t6))(5,t6,t5,C_retrieve2(lf[162],"*notes*"),((C_word*)((C_word*)t0)[11])[1],((C_word*)((C_word*)t0)[7])[1]);}

/* k40069 in k40062 in k40058 in k40055 in k40048 in k40040 in k40037 in do708 in k40155 in k40011 in k40007 in k40003 in k39991 in k40171 in do702 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_40071(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40071,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_40074,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],tmp=(C_word)a,a+=10,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
if(C_truep(t3)){
C_trace("ChickenBridge.scm: 377  hash-table-set!");
t4=C_retrieve(lf[790]);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,C_retrieve2(lf[162],"*notes*"),((C_word*)t0)[2],((C_word*)((C_word*)t0)[6])[1]);}
else{
t4=t2;
f_40074(2,t4,C_SCHEME_UNDEFINED);}}

/* k40072 in k40069 in k40062 in k40058 in k40055 in k40048 in k40040 in k40037 in do708 in k40155 in k40011 in k40007 in k40003 in k39991 in k40171 in do702 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_40074(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40074,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_40078,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 377  string-append");
t4=*((C_word*)lf[165]+1);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,t3,lf[931],((C_word*)((C_word*)t0)[6])[1]);}

/* k40076 in k40072 in k40069 in k40062 in k40058 in k40055 in k40048 in k40040 in k40037 in do708 in k40155 in k40011 in k40007 in k40003 in k39991 in k40171 in do702 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_40078(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40078,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,t1);
t3=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[9])[1],((C_word*)t0)[8],((C_word*)t0)[7],C_SCHEME_FALSE,((C_word*)((C_word*)t0)[6])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[5])+1,t3);
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_40085,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 377  hash-table-set!");
t6=C_retrieve(lf[790]);
((C_proc5)C_retrieve_proc(t6))(5,t6,t5,C_retrieve2(lf[162],"*notes*"),((C_word*)((C_word*)t0)[9])[1],((C_word*)((C_word*)t0)[5])[1]);}

/* k40083 in k40076 in k40072 in k40069 in k40062 in k40058 in k40055 in k40048 in k40040 in k40037 in do708 in k40155 in k40011 in k40007 in k40003 in k39991 in k40171 in do702 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_40085(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_eqp(((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1]);
if(C_truep(t2)){
C_trace("ChickenBridge.scm: 377  hash-table-set!");
t3=C_retrieve(lf[790]);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[4],C_retrieve2(lf[162],"*notes*"),((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}
else{
t3=((C_word*)t0)[4];
f_40029(2,t3,C_SCHEME_UNDEFINED);}}

/* k40027 in do708 in k40155 in k40011 in k40007 in k40003 in k39991 in k40171 in do702 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_40029(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[15]);
t3=((C_word*)((C_word*)t0)[14])[1];
f_40019(t3,((C_word*)t0)[13],t2,((C_word*)t0)[12],((C_word*)t0)[11],((C_word*)t0)[10],((C_word*)t0)[9],((C_word*)t0)[8],((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k39980 in k40171 in do702 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_39982(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39982,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t3=((C_word*)((C_word*)t0)[3])[1];
f_39959(t3,((C_word*)t0)[2],t2);}

/* k39970 in do702 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_39972(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39972,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39975,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  hash-table-set!");
t3=C_retrieve(lf[790]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve2(lf[162],"*notes*"),C_fix(-1),((C_word*)t0)[2]);}

/* k39973 in k39970 in do702 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_39975(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_TRUE);}

/* k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_10009(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word ab[60],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10009,2,t0,t1);}
t2=C_mutate(&lf[163],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10011,a[2]=((C_word)li112),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[167],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10113,a[2]=((C_word)li115),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate((C_word*)lf[175]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10166,a[2]=((C_word)li117),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate((C_word*)lf[177]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10263,a[2]=((C_word)li119),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate((C_word*)lf[179]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10385,a[2]=((C_word)li121),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate((C_word*)lf[181]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10501,a[2]=((C_word)li122),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate((C_word*)lf[182]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10546,a[2]=((C_word)li126),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate((C_word*)lf[185]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10681,a[2]=((C_word)li130),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate((C_word*)lf[187]+1,*((C_word*)lf[188]+1));
t11=C_mutate((C_word*)lf[189]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10847,a[2]=((C_word)li133),tmp=(C_word)a,a+=3,tmp));
t12=C_mutate(&lf[192],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10989,a[2]=((C_word)li134),tmp=(C_word)a,a+=3,tmp));
t13=C_mutate(&lf[194],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10995,a[2]=((C_word)li135),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate((C_word*)lf[195]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11010,a[2]=((C_word)li136),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate(&lf[196],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11019,a[2]=((C_word)li137),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate((C_word*)lf[198]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11028,a[2]=((C_word)li138),tmp=(C_word)a,a+=3,tmp));
t17=C_mutate(&lf[199],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11037,a[2]=((C_word)li139),tmp=(C_word)a,a+=3,tmp));
t18=C_mutate((C_word*)lf[200]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11046,a[2]=((C_word)li140),tmp=(C_word)a,a+=3,tmp));
t19=C_mutate(&lf[201],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11055,a[2]=((C_word)li141),tmp=(C_word)a,a+=3,tmp));
t20=C_mutate((C_word*)lf[202]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11064,a[2]=((C_word)li142),tmp=(C_word)a,a+=3,tmp));
t21=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11074,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t22=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39949,a[2]=((C_word)li647),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  ##sys#register-record-printer");
t23=C_retrieve(lf[911]);
((C_proc4)C_retrieve_proc(t23))(4,t23,t21,lf[193],t22);}

/* a39948 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_39949(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_39949,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39957,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  spectrum-freqs");
t5=C_retrieve(lf[200]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}

/* k39955 in a39948 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_39957(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  fprintf");
t2=C_retrieve(lf[908]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[3],((C_word*)t0)[2],lf[923],t1);}

/* k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_11074(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word t36;
C_word t37;
C_word t38;
C_word t39;
C_word t40;
C_word t41;
C_word t42;
C_word t43;
C_word t44;
C_word t45;
C_word t46;
C_word t47;
C_word t48;
C_word t49;
C_word t50;
C_word t51;
C_word t52;
C_word t53;
C_word t54;
C_word t55;
C_word t56;
C_word t57;
C_word t58;
C_word t59;
C_word t60;
C_word t61;
C_word t62;
C_word t63;
C_word t64;
C_word t65;
C_word t66;
C_word t67;
C_word t68;
C_word t69;
C_word t70;
C_word t71;
C_word t72;
C_word t73;
C_word t74;
C_word t75;
C_word t76;
C_word t77;
C_word t78;
C_word t79;
C_word t80;
C_word t81;
C_word ab[237],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11074,2,t0,t1);}
t2=C_mutate((C_word*)lf[203]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11076,a[2]=((C_word)li143),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate((C_word*)lf[204]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11114,a[2]=((C_word)li145),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate((C_word*)lf[206]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11173,a[2]=((C_word)li146),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate((C_word*)lf[207]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11183,a[2]=((C_word)li147),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate((C_word*)lf[208]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11201,a[2]=((C_word)li149),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate((C_word*)lf[211]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11232,a[2]=((C_word)li151),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate((C_word*)lf[213]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11480,a[2]=((C_word)li160),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate((C_word*)lf[221]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12953,a[2]=((C_word)li166),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate((C_word*)lf[226]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13365,a[2]=((C_word)li168),tmp=(C_word)a,a+=3,tmp));
t11=C_mutate((C_word*)lf[227]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13544,a[2]=((C_word)li176),tmp=(C_word)a,a+=3,tmp));
t12=C_mutate((C_word*)lf[232]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13756,a[2]=((C_word)li178),tmp=(C_word)a,a+=3,tmp));
t13=C_mutate((C_word*)lf[233]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13813,a[2]=((C_word)li187),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate((C_word*)lf[242]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14326,a[2]=((C_word)li194),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate(&lf[255],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14452,a[2]=((C_word)li195),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate(&lf[257],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14464,a[2]=((C_word)li196),tmp=(C_word)a,a+=3,tmp));
t17=C_mutate(&lf[258],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14473,a[2]=((C_word)li197),tmp=(C_word)a,a+=3,tmp));
t18=C_mutate(&lf[259],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14491,a[2]=((C_word)li198),tmp=(C_word)a,a+=3,tmp));
t19=C_mutate(&lf[260],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14509,a[2]=((C_word)li199),tmp=(C_word)a,a+=3,tmp));
t20=C_mutate(&lf[261],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14536,a[2]=((C_word)li200),tmp=(C_word)a,a+=3,tmp));
t21=C_mutate(&lf[262],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14545,a[2]=((C_word)li201),tmp=(C_word)a,a+=3,tmp));
t22=C_mutate(&lf[263],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14563,a[2]=((C_word)li202),tmp=(C_word)a,a+=3,tmp));
t23=C_mutate(&lf[264],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14608,a[2]=((C_word)li203),tmp=(C_word)a,a+=3,tmp));
t24=C_mutate(&lf[266],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14623,a[2]=((C_word)li204),tmp=(C_word)a,a+=3,tmp));
t25=C_mutate(&lf[267],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14632,a[2]=((C_word)li205),tmp=(C_word)a,a+=3,tmp));
t26=C_mutate(&lf[268],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14641,a[2]=((C_word)li206),tmp=(C_word)a,a+=3,tmp));
t27=C_mutate(&lf[269],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14659,a[2]=((C_word)li207),tmp=(C_word)a,a+=3,tmp));
t28=C_mutate(&lf[270],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14668,a[2]=((C_word)li208),tmp=(C_word)a,a+=3,tmp));
t29=C_mutate(&lf[271],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14677,a[2]=((C_word)li209),tmp=(C_word)a,a+=3,tmp));
t30=C_mutate(&lf[272],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14695,a[2]=((C_word)li210),tmp=(C_word)a,a+=3,tmp));
t31=C_mutate(&lf[273],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14704,a[2]=((C_word)li211),tmp=(C_word)a,a+=3,tmp));
t32=C_mutate(&lf[274],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14713,a[2]=((C_word)li212),tmp=(C_word)a,a+=3,tmp));
t33=C_mutate(&lf[275],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14722,a[2]=((C_word)li213),tmp=(C_word)a,a+=3,tmp));
t34=C_mutate(&lf[276],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14731,a[2]=((C_word)li214),tmp=(C_word)a,a+=3,tmp));
t35=C_mutate(&lf[277],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14848,a[2]=((C_word)li215),tmp=(C_word)a,a+=3,tmp));
t36=C_mutate(&lf[278],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14857,a[2]=((C_word)li216),tmp=(C_word)a,a+=3,tmp));
t37=C_mutate(&lf[279],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14912,a[2]=((C_word)li217),tmp=(C_word)a,a+=3,tmp));
t38=C_mutate(&lf[283],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14922,a[2]=((C_word)li219),tmp=(C_word)a,a+=3,tmp));
t39=C_mutate((C_word*)lf[291]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15102,a[2]=((C_word)li220),tmp=(C_word)a,a+=3,tmp));
t40=C_mutate((C_word*)lf[293]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15121,a[2]=((C_word)li221),tmp=(C_word)a,a+=3,tmp));
t41=C_mutate((C_word*)lf[295]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15140,a[2]=((C_word)li224),tmp=(C_word)a,a+=3,tmp));
t42=C_mutate(&lf[296],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15263,a[2]=((C_word)li227),tmp=(C_word)a,a+=3,tmp));
t43=C_mutate(&lf[297],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15564,a[2]=((C_word)li228),tmp=(C_word)a,a+=3,tmp));
t44=C_mutate(&lf[290],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15573,a[2]=((C_word)li229),tmp=(C_word)a,a+=3,tmp));
t45=C_mutate(&lf[298],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15619,a[2]=((C_word)li231),tmp=(C_word)a,a+=3,tmp));
t46=C_mutate((C_word*)lf[302]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15734,a[2]=((C_word)li233),tmp=(C_word)a,a+=3,tmp));
t47=C_mutate(&lf[303],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15989,a[2]=((C_word)li234),tmp=(C_word)a,a+=3,tmp));
t48=C_mutate(&lf[306],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16061,a[2]=((C_word)li235),tmp=(C_word)a,a+=3,tmp));
t49=C_mutate(&lf[308],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16070,a[2]=((C_word)li236),tmp=(C_word)a,a+=3,tmp));
t50=C_mutate((C_word*)lf[309]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16150,a[2]=((C_word)li238),tmp=(C_word)a,a+=3,tmp));
t51=C_mutate(&lf[310],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16620,a[2]=((C_word)li239),tmp=(C_word)a,a+=3,tmp));
t52=C_mutate((C_word*)lf[314]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16835,a[2]=((C_word)li241),tmp=(C_word)a,a+=3,tmp));
t53=C_mutate(&lf[315],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17082,a[2]=((C_word)li242),tmp=(C_word)a,a+=3,tmp));
t54=C_mutate((C_word*)lf[316]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17118,a[2]=((C_word)li244),tmp=(C_word)a,a+=3,tmp));
t55=C_mutate(&lf[317],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17381,a[2]=((C_word)li246),tmp=(C_word)a,a+=3,tmp));
t56=C_mutate((C_word*)lf[318]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17457,a[2]=((C_word)li248),tmp=(C_word)a,a+=3,tmp));
t57=C_mutate(&lf[319],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17931,a[2]=((C_word)li251),tmp=(C_word)a,a+=3,tmp));
t58=C_mutate(&lf[321],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18153,a[2]=((C_word)li252),tmp=(C_word)a,a+=3,tmp));
t59=C_mutate(&lf[323],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18162,a[2]=((C_word)li253),tmp=(C_word)a,a+=3,tmp));
t60=C_mutate(&lf[324],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18171,a[2]=((C_word)li254),tmp=(C_word)a,a+=3,tmp));
t61=C_mutate(&lf[325],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18189,a[2]=((C_word)li255),tmp=(C_word)a,a+=3,tmp));
t62=C_mutate(&lf[326],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18207,a[2]=((C_word)li256),tmp=(C_word)a,a+=3,tmp));
t63=C_mutate(&lf[327],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18225,a[2]=((C_word)li257),tmp=(C_word)a,a+=3,tmp));
t64=C_mutate(&lf[328],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18234,a[2]=((C_word)li258),tmp=(C_word)a,a+=3,tmp));
t65=C_mutate(&lf[329],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18243,a[2]=((C_word)li259),tmp=(C_word)a,a+=3,tmp));
t66=C_mutate((C_word*)lf[330]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18326,a[2]=((C_word)li264),tmp=(C_word)a,a+=3,tmp));
t67=C_mutate(&lf[331],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19093,a[2]=((C_word)li267),tmp=(C_word)a,a+=3,tmp));
t68=C_mutate(&lf[332],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19205,a[2]=((C_word)li272),tmp=(C_word)a,a+=3,tmp));
t69=C_mutate((C_word*)lf[335]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19638,a[2]=((C_word)li277),tmp=(C_word)a,a+=3,tmp));
t70=C_mutate(&lf[336],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20125,a[2]=((C_word)li284),tmp=(C_word)a,a+=3,tmp));
t71=C_mutate(&lf[345],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20465,a[2]=((C_word)li285),tmp=(C_word)a,a+=3,tmp));
t72=C_mutate((C_word*)lf[347]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20528,a[2]=((C_word)li290),tmp=(C_word)a,a+=3,tmp));
t73=C_mutate(&lf[348],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21046,a[2]=((C_word)li292),tmp=(C_word)a,a+=3,tmp));
t74=C_mutate((C_word*)lf[354]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21140,a[2]=((C_word)li315),tmp=(C_word)a,a+=3,tmp));
t75=C_mutate(&lf[376],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22162,a[2]=((C_word)li316),tmp=(C_word)a,a+=3,tmp));
t76=C_mutate(&lf[378],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22183,a[2]=((C_word)li317),tmp=(C_word)a,a+=3,tmp));
t77=C_mutate(&lf[379],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22201,a[2]=((C_word)li318),tmp=(C_word)a,a+=3,tmp));
t78=C_mutate(&lf[380],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22219,a[2]=((C_word)li319),tmp=(C_word)a,a+=3,tmp));
t79=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22229,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t80=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39935,a[2]=((C_word)li646),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  ##sys#register-record-printer");
t81=C_retrieve(lf[911]);
((C_proc4)C_retrieve_proc(t81))(4,t81,t79,lf[377],t80);}

/* a39934 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_39935(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_39935,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39943,a[2]=t2,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  token-type");
f_22183(t4,t2);}

/* k39941 in a39934 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_39943(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39943,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39947,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  token-string");
f_22201(t2,((C_word*)t0)[2]);}

/* k39945 in k39941 in a39934 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_39947(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  fprintf");
t2=C_retrieve(lf[908]);
((C_proc6)C_retrieve_proc(t2))(6,t2,((C_word*)t0)[4],((C_word*)t0)[3],lf[922],((C_word*)t0)[2],t1);}

/* k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_22229(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22229,2,t0,t1);}
t2=C_mutate(&lf[381],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22231,a[2]=((C_word)li320),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[383],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22260,a[2]=((C_word)li321),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate(&lf[384],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22272,a[2]=((C_word)li322),tmp=(C_word)a,a+=3,tmp));
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22280,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  make-hash-table");
t6=C_retrieve(lf[920]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,*((C_word*)lf[921]+1));}

/* k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_22280(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22280,2,t0,t1);}
t2=C_mutate(&lf[385],t1);
t3=C_mutate(&lf[386],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22282,a[2]=((C_word)li323),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate(&lf[388],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22303,a[2]=((C_word)li324),tmp=(C_word)a,a+=3,tmp));
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22385,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39925,a[2]=((C_word)li645),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  ##sys#register-record-printer");
t7=C_retrieve(lf[911]);
((C_proc4)C_retrieve_proc(t7))(4,t7,t5,lf[387],t6);}

/* a39924 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_39925(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_39925,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39933,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  rule-name");
f_22303(t4,t2);}

/* k39931 in a39924 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_39933(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  fprintf");
t2=C_retrieve(lf[908]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[3],((C_word*)t0)[2],lf[919],t1);}

/* k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_22385(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22385,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22388,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39822,a[2]=((C_word)li644),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  ##sys#register-macro");
t4=C_retrieve(lf[775]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[918],t3);}

/* a39821 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_39822(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...){
C_word tmp;
C_word t4;
va_list v;
C_word *a,c2=c;
C_save_rest(t3,c2,4);
if(c<4) C_bad_min_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+22)){
C_save_and_reclaim((void*)tr4r,(void*)f_39822r,4,t0,t1,t2,t3);}
else{
a=C_alloc((c-4)*3);
t4=C_restore_rest(a,C_rest_count(0));
f_39822r(t0,t1,t2,t3,t4);}}

static void C_ccall f_39822r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a=C_alloc(22);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39825,a[2]=t6,a[3]=((C_word)li643),tmp=(C_word)a,a+=4,tmp));
t8=(C_word)C_a_i_list(&a,2,lf[915],t2);
t9=(C_word)C_a_i_list(&a,1,t8);
t10=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_39885,a[2]=t3,a[3]=t6,a[4]=t9,a[5]=t1,a[6]=t4,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 380  symbol->string");
t11=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t11))(3,t11,t10,t2);}

/* k39883 in a39821 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_39885(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39885,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_39889,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t1,a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 380  ppat");
t3=((C_word*)((C_word*)t0)[3])[1];
f_39825(t3,t2,((C_word*)t0)[2]);}

/* k39887 in k39883 in a39821 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_39889(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39889,2,t0,t1);}
t2=(C_word)C_i_nullp(((C_word*)t0)[5]);
t3=(C_truep(t2)?C_SCHEME_FALSE:(C_word)C_i_car(((C_word*)t0)[5]));
t4=(C_word)C_i_nullp(((C_word*)t0)[5]);
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_39903,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t3,a[5]=t1,a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],tmp=(C_word)a,a+=8,tmp);
if(C_truep(t4)){
t6=t5;
f_39903(t6,t4);}
else{
t6=(C_word)C_i_cdr(((C_word*)t0)[5]);
t7=t5;
f_39903(t7,(C_word)C_i_nullp(t6));}}

/* k39901 in k39887 in k39883 in a39821 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_39903(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_39903,NULL,2,t0,t1);}
t2=(C_truep(t1)?C_SCHEME_FALSE:(C_word)C_i_cadr(((C_word*)t0)[7]));
t3=(C_word)C_a_i_list(&a,6,lf[916],((C_word*)t0)[6],lf[915],((C_word*)t0)[5],((C_word*)t0)[4],t2);
t4=(C_word)C_a_i_list(&a,4,lf[790],lf[917],lf[915],t3);
t5=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_a_i_list(&a,3,lf[1],((C_word*)t0)[2],t4));}

/* ppat in a39821 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_39825(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
loop:
a=C_alloc(11);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_39825,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,lf[913]);}
else{
if(C_truep((C_word)C_i_pairp(t2))){
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39845,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 380  ppat");
t7=t3;
t8=t4;
t1=t7;
t2=t8;
goto loop;}
else{
t3=(C_word)C_i_member(t2,lf[914]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_truep(t3)?(C_word)C_a_i_list(&a,2,lf[569],t2):t2));}}}

/* k39843 in ppat in a39821 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_39845(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39845,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39849,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 380  ppat");
t4=((C_word*)((C_word*)t0)[2])[1];
f_39825(t4,t2,t3);}

/* k39847 in k39843 in ppat in a39821 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_39849(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39849,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_list(&a,3,lf[827],((C_word*)t0)[2],t1));}

/* k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_22388(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[36],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22388,2,t0,t1);}
t2=C_mutate(&lf[389],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22390,a[2]=((C_word)li325),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[274],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22411,a[2]=((C_word)li326),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate(&lf[391],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22414,a[2]=((C_word)li327),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate(&lf[392],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22426,a[2]=((C_word)li328),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate(&lf[393],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22432,a[2]=((C_word)li329),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate(&lf[394],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22442,a[2]=((C_word)li330),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate(&lf[395],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22500,a[2]=((C_word)li331),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate(&lf[396],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22532,a[2]=((C_word)li332),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate(&lf[398],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22553,a[2]=((C_word)li333),tmp=(C_word)a,a+=3,tmp));
t11=C_mutate(&lf[399],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22571,a[2]=((C_word)li334),tmp=(C_word)a,a+=3,tmp));
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22581,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t13=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39808,a[2]=((C_word)li642),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  ##sys#register-record-printer");
t14=C_retrieve(lf[911]);
((C_proc4)C_retrieve_proc(t14))(4,t14,t12,lf[397],t13);}

/* a39807 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_39808(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_39808,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39816,a[2]=t2,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  parse-error-string");
f_22553(t4,t2);}

/* k39814 in a39807 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_39816(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39816,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39820,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  parse-error-position");
f_22571(t2,((C_word*)t0)[2]);}

/* k39818 in k39814 in a39807 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_39820(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  fprintf");
t2=C_retrieve(lf[908]);
((C_proc6)C_retrieve_proc(t2))(6,t2,((C_word*)t0)[4],((C_word*)t0)[3],lf[912],((C_word*)t0)[2],t1);}

/* k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_22581(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22581,2,t0,t1);}
t2=C_mutate(&lf[400],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22583,a[2]=((C_word)li335),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[402],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22589,a[2]=((C_word)li336),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate(&lf[403],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22604,a[2]=((C_word)li337),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate(&lf[404],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22622,a[2]=((C_word)li338),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate(&lf[405],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22640,a[2]=((C_word)li339),tmp=(C_word)a,a+=3,tmp));
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22650,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t8=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39782,a[2]=((C_word)li641),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  ##sys#register-record-printer");
t9=C_retrieve(lf[911]);
((C_proc4)C_retrieve_proc(t9))(4,t9,t7,lf[401],t8);}

/* a39781 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_39782(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_39782,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39786,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  parse-unit-type");
f_22604(t4,t2);}

/* k39784 in a39781 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_39786(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39786,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39792,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  SalRuleType?");
f_23862(t2,t1);}

/* k39790 in k39784 in a39781 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_39792(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39792,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39799,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39803,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  get-rule");
f_22390(t3,((C_word*)t0)[2],C_SCHEME_END_OF_LIST);}
else{
C_trace("ChickenBridge.scm: 380  fprintf");
t2=C_retrieve(lf[908]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[4],((C_word*)t0)[3],lf[910],((C_word*)t0)[2]);}}

/* k39801 in k39790 in k39784 in a39781 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_39803(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  rule-name");
f_22303(((C_word*)t0)[2],t1);}

/* k39797 in k39790 in k39784 in a39781 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_39799(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  fprintf");
t2=C_retrieve(lf[908]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[3],((C_word*)t0)[2],lf[909],t1);}

/* k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_22650(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word ab[60],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22650,2,t0,t1);}
t2=C_mutate(&lf[406],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22652,a[2]=((C_word)li340),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[408],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22668,a[2]=((C_word)li341),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate(&lf[410],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22700,a[2]=((C_word)li342),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate(&lf[411],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22712,a[2]=((C_word)li343),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate(&lf[412],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22722,a[2]=((C_word)li344),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate(&lf[414],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22740,a[2]=((C_word)li345),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate(&lf[423],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22773,a[2]=((C_word)li346),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate(&lf[426],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22981,a[2]=((C_word)li348),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate(&lf[427],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22989,a[2]=((C_word)li351),tmp=(C_word)a,a+=3,tmp));
t11=lf[428]=C_SCHEME_FALSE;;
t12=C_mutate(&lf[429],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23093,a[2]=((C_word)li365),tmp=(C_word)a,a+=3,tmp));
t13=C_mutate(&lf[407],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23712,a[2]=((C_word)li366),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate(&lf[422],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23760,a[2]=((C_word)li367),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate(&lf[425],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23862,a[2]=((C_word)li368),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate(&lf[409],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23874,a[2]=((C_word)li369),tmp=(C_word)a,a+=3,tmp));
t17=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23895,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t18=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39760,a[2]=t17,tmp=(C_word)a,a+=3,tmp);
t19=(C_word)C_a_i_cons(&a,2,C_fix(3072),C_SCHEME_END_OF_LIST);
t20=(C_word)C_a_i_cons(&a,2,C_fix(3328),t19);
t21=(C_word)C_a_i_cons(&a,2,C_fix(2816),t20);
t22=(C_word)C_a_i_cons(&a,2,lf[418],t21);
C_trace("ChickenBridge.scm: 380  make-rule");
f_22282(t18,lf[907],C_fix(25856),t22,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k39758 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_39760(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  hash-table-set!");
t2=C_retrieve(lf[790]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[385],"*rules*"),C_fix(25856),t1);}

/* k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_23895(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23895,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23898,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39740,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(4608),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(4352),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[418],t5);
C_trace("ChickenBridge.scm: 380  make-rule");
f_22282(t3,lf[906],C_fix(26112),t6,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k39738 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_39740(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  hash-table-set!");
t2=C_retrieve(lf[790]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[385],"*rules*"),C_fix(26112),t1);}

/* k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_23898(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23898,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23901,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39700,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(4608),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(4352),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(25088),t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(3840),t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(3072),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(3328),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(2816),t9);
t11=(C_word)C_a_i_cons(&a,2,lf[418],t10);
C_trace("ChickenBridge.scm: 380  make-rule");
f_22282(t3,lf[905],C_fix(26368),t11,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k39698 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_39700(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  hash-table-set!");
t2=C_retrieve(lf[790]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[385],"*rules*"),C_fix(26368),t1);}

/* k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_23901(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23901,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23904,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39590,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(26880),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,lf[102],t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(1280),C_SCHEME_END_OF_LIST);
t7=(C_word)C_a_i_cons(&a,2,t5,t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(1024),t7);
t9=(C_word)C_a_i_cons(&a,2,lf[417],t8);
t10=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39596,a[2]=((C_word)li639),tmp=(C_word)a,a+=3,tmp);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39606,a[2]=((C_word)li640),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  make-rule");
f_22282(t3,lf[904],C_fix(26624),t9,t10,t11);}

/* a39605 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_39606(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_39606,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_39610,a[2]=t2,a[3]=t4,a[4]=t3,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 380  get-emit-info");
f_22700(t5,lf[898],t3);}

/* k39608 in a39605 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_39610(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39610,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_39613,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 380  parse-unit-parsed");
f_22622(t2,((C_word*)t0)[2]);}

/* k39611 in k39608 in a39605 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_39613(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39613,2,t0,t1);}
t2=((C_word*)t0)[5];
if(C_truep(t2)){
C_trace("ChickenBridge.scm: 380  emit");
f_22740(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
if(C_truep((C_word)C_i_nullp(t1))){
t3=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_list(&a,1,lf[619]));}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_39631,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 380  add-emit-info");
f_22712(t3,lf[898],C_SCHEME_TRUE,((C_word*)t0)[3]);}}}

/* k39629 in k39611 in k39608 in a39605 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_39631(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39631,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39634,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  emit");
f_22740(t2,((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* k39632 in k39629 in k39611 in k39608 in a39605 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_39634(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39634,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39637,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39665,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  get-emit-info");
f_22700(t5,lf[898],((C_word*)t0)[2]);}

/* k39663 in k39632 in k39629 in k39611 in k39608 in a39605 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_39665(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39665,2,t0,t1);}
t2=(C_word)C_eqp(t1,lf[899]);
if(C_truep(t2)){
t3=(C_word)C_a_i_list(&a,2,lf[903],((C_word*)t0)[4]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_39637(t5,t4);}
else{
t3=(C_word)C_a_i_list(&a,2,lf[569],((C_word*)t0)[4]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_39637(t5,t4);}}

/* k39635 in k39632 in k39629 in k39611 in k39608 in a39605 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_39637(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_39637,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39643,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  get-emit-info");
f_22700(t2,lf[866],((C_word*)t0)[2]);}

/* k39641 in k39635 in k39632 in k39629 in k39611 in k39608 in a39605 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_39643(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39643,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,1,lf[619]);
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_list(&a,3,lf[18],((C_word*)((C_word*)t0)[2])[1],t2));}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}}

/* a39595 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_39596(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_39596,4,t0,t1,t2,t3);}
t4=(C_word)C_i_cadr(t2);
C_trace("ChickenBridge.scm: 380  make-parse-unit");
f_22583(t1,C_fix(26624),t4,C_SCHEME_FALSE);}

/* k39588 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_39590(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  hash-table-set!");
t2=C_retrieve(lf[790]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[385],"*rules*"),C_fix(26624),t1);}

/* k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_23904(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23904,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23907,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39490,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(5632),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(5376),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[418],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,t6,t7);
t9=(C_word)C_a_i_cons(&a,2,lf[417],t8);
t10=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39498,a[2]=t9,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  simple-unit-parser");
f_22981(t10,C_fix(27648));}

/* k39496 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_39498(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39498,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39500,a[2]=((C_word)li638),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  make-rule");
f_22282(((C_word*)t0)[3],lf[902],C_fix(27648),((C_word*)t0)[2],t1,t2);}

/* a39499 in k39496 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_39500(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_39500,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39504,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  parse-unit-parsed");
f_22622(t5,t2);}

/* k39502 in a39499 in k39496 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_39504(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39504,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_39507,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(t1);
C_trace("ChickenBridge.scm: 380  token-unit-type=?");
f_22668(t2,t3,C_fix(5376));}

/* k39505 in k39502 in a39499 in k39496 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_39507(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39507,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_39510,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 380  get-emit-info");
f_22700(t2,lf[898],((C_word*)t0)[4]);}

/* k39508 in k39505 in k39502 in a39499 in k39496 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_39510(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39510,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_39513,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
if(C_truep(t1)){
t3=t2;
f_39513(2,t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39542,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t4=(C_truep(((C_word*)t0)[5])?lf[900]:lf[901]);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39550,a[2]=t4,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_car(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 380  parse-unit-position");
f_22640(t5,t6);}}

/* k39548 in k39508 in k39505 in k39502 in a39499 in k39496 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_39550(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  make-parse-error");
f_22532(((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k39540 in k39508 in k39505 in k39502 in a39499 in k39496 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_39542(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  errf");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k39511 in k39508 in k39505 in k39502 in a39499 in k39496 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_39513(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39513,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39516,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 380  emit");
f_22740(t2,t3,((C_word*)t0)[4],((C_word*)t0)[2]);}

/* k39514 in k39511 in k39508 in k39505 in k39502 in a39499 in k39496 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_39516(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39516,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39519,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  set-emit-info!");
f_22722(t2,lf[898],lf[899],((C_word*)t0)[2]);}

/* k39517 in k39514 in k39511 in k39508 in k39505 in k39502 in a39499 in k39496 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_39519(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39519,2,t0,t1);}
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_truep(((C_word*)t0)[3])?(C_word)C_a_i_list(&a,2,lf[896],((C_word*)t0)[2]):(C_word)C_a_i_list(&a,2,lf[897],((C_word*)t0)[2])));}

/* k39488 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_39490(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  hash-table-set!");
t2=C_retrieve(lf[790]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[385],"*rules*"),C_fix(27648),t1);}

/* k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_23907(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23907,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23910,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39462,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(27648),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(2304),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(26624),t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(26368),t6);
t8=(C_word)C_a_i_cons(&a,2,lf[418],t7);
C_trace("ChickenBridge.scm: 380  make-rule");
f_22282(t3,lf[895],C_fix(26880),t8,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k39460 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_39462(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  hash-table-set!");
t2=C_retrieve(lf[790]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[385],"*rules*"),C_fix(26880),t1);}

/* k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_23910(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23910,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23913,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39402,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(1792),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(29696),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(1536),t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(25088),t6);
t8=(C_word)C_a_i_cons(&a,2,lf[417],t7);
t9=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39408,a[2]=((C_word)li636),tmp=(C_word)a,a+=3,tmp);
t10=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39426,a[2]=((C_word)li637),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  make-rule");
f_22282(t3,lf[894],C_fix(27136),t8,t9,t10);}

/* a39425 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_39426(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_39426,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39434,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39438,a[2]=t4,a[3]=t3,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  parse-unit-parsed");
f_22622(t6,t2);}

/* k39436 in a39425 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_39438(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  emit");
f_22740(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k39432 in a39425 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_39434(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39434,2,t0,t1);}
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,lf[54],t1));}

/* a39407 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_39408(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_39408,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_caddr(t2);
t6=(C_word)C_a_i_list(&a,2,t4,t5);
C_trace("ChickenBridge.scm: 380  make-parse-unit");
f_22583(t1,C_fix(27136),t6,C_SCHEME_FALSE);}

/* k39400 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_39402(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  hash-table-set!");
t2=C_retrieve(lf[790]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[385],"*rules*"),C_fix(27136),t1);}

/* k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_23913(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23913,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23916,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39279,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[432],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,t6,t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(29696),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(256),t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(29696),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(512),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(5120),t12);
t14=(C_word)C_a_i_cons(&a,2,lf[417],t13);
t15=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39285,a[2]=((C_word)li634),tmp=(C_word)a,a+=3,tmp);
t16=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39316,a[2]=((C_word)li635),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  make-rule");
f_22282(t3,lf[893],C_fix(27392),t14,t15,t16);}

/* a39315 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_39316(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_39316,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39320,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  parse-unit-parsed");
f_22622(t5,t2);}

/* k39318 in a39315 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_39320(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39320,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_39323,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(t1);
C_trace("ChickenBridge.scm: 380  emit");
f_22740(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k39321 in k39318 in a39315 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_39323(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39323,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_39326,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[5]);
C_trace("ChickenBridge.scm: 380  emit");
f_22740(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k39324 in k39321 in k39318 in a39315 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_39326(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39326,2,t0,t1);}
t2=(C_word)C_i_caddr(((C_word*)t0)[6]);
if(C_truep(t2)){
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39339,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  emit");
f_22740(t3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
t3=((C_word*)t0)[5];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_list(&a,4,lf[20],((C_word*)t0)[4],t1,C_SCHEME_FALSE));}}

/* k39337 in k39324 in k39321 in k39318 in a39315 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_39339(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39339,2,t0,t1);}
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_list(&a,4,lf[20],((C_word*)t0)[3],((C_word*)t0)[2],t1));}

/* a39284 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_39285(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_39285,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39289,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  sixth");
t5=C_retrieve(lf[48]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}

/* k39287 in a39284 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_39289(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39289,2,t0,t1);}
t2=(C_word)C_i_caddr(((C_word*)t0)[3]);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39304,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  fifth");
t4=C_retrieve(lf[47]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[3]);}

/* k39302 in k39287 in a39284 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_39304(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39304,2,t0,t1);}
t2=(C_word)C_i_pairp(((C_word*)t0)[4]);
t3=(C_truep(t2)?(C_word)C_i_cadr(((C_word*)t0)[4]):C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,3,((C_word*)t0)[3],t1,t3);
C_trace("ChickenBridge.scm: 380  make-parse-unit");
f_22583(((C_word*)t0)[2],C_fix(27392),t4,C_SCHEME_FALSE);}

/* k39277 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_39279(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  hash-table-set!");
t2=C_retrieve(lf[790]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[385],"*rules*"),C_fix(27392),t1);}

/* k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_23916(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23916,2,t0,t1);}
t2=C_mutate(&lf[436],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23918,a[2]=((C_word)li371),tmp=(C_word)a,a+=3,tmp));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23972,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39159,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t6=(C_word)C_a_i_cons(&a,2,C_fix(256),t5);
t7=(C_word)C_a_i_cons(&a,2,lf[98],t6);
t8=(C_word)C_a_i_cons(&a,2,t7,C_SCHEME_END_OF_LIST);
t9=(C_word)C_a_i_cons(&a,2,C_fix(29696),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[417],t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,t10,t11);
t13=(C_word)C_a_i_cons(&a,2,lf[418],t12);
t14=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39165,a[2]=((C_word)li633),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  make-rule");
f_22282(t4,lf[892],C_fix(28416),t13,t14,C_SCHEME_FALSE);}

/* a39164 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_39165(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_39165,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_pairp(t2))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39181,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_pairp(t5))){
t6=(C_word)C_i_cadr(t2);
if(C_truep((C_word)C_i_pairp(t6))){
t7=(C_word)C_i_cadr(t2);
t8=(C_word)C_i_car(t7);
C_trace("ChickenBridge.scm: 380  token-unit-type=?");
f_22668(t4,t8,C_fix(256));}
else{
t7=t4;
f_39181(2,t7,C_SCHEME_FALSE);}}
else{
t6=t4;
f_39181(2,t6,C_SCHEME_FALSE);}}
else{
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_list(&a,1,t2));}}

/* k39179 in a39164 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_39181(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39181,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39192,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_i_cadr(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 380  remove-token-type");
f_23918(t3,t4,C_fix(256));}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_list(&a,1,((C_word*)t0)[3]));}}

/* k39190 in k39179 in a39164 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_39192(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39192,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* k39157 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_39159(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  hash-table-set!");
t2=C_retrieve(lf[790]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[385],"*rules*"),C_fix(28416),t1);}

/* k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_23972(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word ab[51],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23972,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23975,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39020,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(6144),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(256),t5);
t7=(C_word)C_a_i_cons(&a,2,lf[98],t6);
t8=(C_word)C_a_i_cons(&a,2,t7,C_SCHEME_END_OF_LIST);
t9=(C_word)C_a_i_cons(&a,2,C_fix(29696),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(6144),t9);
t11=(C_word)C_a_i_cons(&a,2,lf[417],t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t13=(C_word)C_a_i_cons(&a,2,C_fix(6144),t12);
t14=(C_word)C_a_i_cons(&a,2,lf[417],t13);
t15=(C_word)C_a_i_cons(&a,2,t14,C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,t11,t15);
t17=(C_word)C_a_i_cons(&a,2,lf[418],t16);
t18=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39026,a[2]=((C_word)li632),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  make-rule");
f_22282(t3,lf[891],C_fix(28672),t17,t18,C_SCHEME_FALSE);}

/* a39025 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_39026(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[9],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_39026,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39046,a[2]=t4,a[3]=t1,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39049,a[2]=t6,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t8=(C_word)C_i_cddr(t2);
if(C_truep((C_word)C_i_pairp(t8))){
t9=(C_word)C_i_caddr(t2);
if(C_truep((C_word)C_i_pairp(t9))){
t10=(C_word)C_i_caddr(t2);
t11=(C_word)C_i_car(t10);
C_trace("ChickenBridge.scm: 380  token-unit-type=?");
f_22668(t7,t11,C_fix(256));}
else{
t10=t7;
f_39049(2,t10,C_SCHEME_FALSE);}}
else{
t9=t7;
f_39049(2,t9,C_SCHEME_FALSE);}}

/* k39047 in a39025 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_39049(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_caddr(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 380  remove-token-type");
f_23918(((C_word*)t0)[2],t2,C_fix(256));}
else{
t2=((C_word*)t0)[2];
f_39046(2,t2,C_SCHEME_END_OF_LIST);}}

/* k39044 in a39025 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_39046(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39046,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t1);
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t2));}

/* k39018 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_39020(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  hash-table-set!");
t2=C_retrieve(lf[790]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[385],"*rules*"),C_fix(28672),t1);}

/* k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_23975(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word ab[75],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23975,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23978,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38868,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(512),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[417],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(28416),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(512),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[417],t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,C_fix(28672),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(512),t12);
t14=(C_word)C_a_i_cons(&a,2,lf[417],t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,C_fix(28672),t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(256),t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(28416),t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(512),t18);
t20=(C_word)C_a_i_cons(&a,2,lf[417],t19);
t21=(C_word)C_a_i_cons(&a,2,t20,C_SCHEME_END_OF_LIST);
t22=(C_word)C_a_i_cons(&a,2,t14,t21);
t23=(C_word)C_a_i_cons(&a,2,t10,t22);
t24=(C_word)C_a_i_cons(&a,2,t6,t23);
t25=(C_word)C_a_i_cons(&a,2,lf[418],t24);
t26=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38874,a[2]=((C_word)li631),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  make-rule");
f_22282(t3,lf[890],C_fix(28160),t25,t26,C_SCHEME_FALSE);}

/* a38873 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_38874(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_38874,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(C_word)C_i_cdr(((C_word*)t4)[1]);
t6=C_set_block_item(t4,0,t5);
t7=(C_word)C_i_car(((C_word*)t4)[1]);
t8=(C_word)C_i_cdr(((C_word*)t4)[1]);
t9=C_set_block_item(t4,0,t8);
t10=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_38892,a[2]=t7,a[3]=t4,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  token-unit-type=?");
f_22668(t10,t7,C_fix(768));}

/* k38890 in a38873 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_38892(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38892,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_END_OF_LIST);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_38901,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 380  token-unit-type=?");
f_22668(t2,t3,C_fix(256));}}

/* k38899 in k38890 in a38873 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_38901(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 380  append");
t3=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}}

/* k38866 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_38868(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  hash-table-set!");
t2=C_retrieve(lf[790]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[385],"*rules*"),C_fix(28160),t1);}

/* k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_23978(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23978,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23981,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38797,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(28160),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(25088),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[417],t5);
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38803,a[2]=((C_word)li629),tmp=(C_word)a,a+=3,tmp);
t8=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38821,a[2]=((C_word)li630),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  make-rule");
f_22282(t3,lf[889],C_fix(27904),t6,t7,t8);}

/* a38820 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_38821(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_38821,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_38825,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  parse-unit-parsed");
f_22622(t5,t2);}

/* k38823 in a38820 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_38825(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38825,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_38828,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(t1);
C_trace("ChickenBridge.scm: 380  emit");
f_22740(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k38826 in k38823 in a38820 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_38828(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38828,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38844,a[2]=t1,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 380  emit");
f_22740(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k38842 in k38826 in k38823 in a38820 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_38844(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38844,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* a38802 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_38803(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_38803,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=(C_word)C_a_i_cons(&a,2,t4,t5);
C_trace("ChickenBridge.scm: 380  make-parse-unit");
f_22583(t1,C_fix(27904),t6,C_SCHEME_FALSE);}

/* k38795 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_38797(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  hash-table-set!");
t2=C_retrieve(lf[790]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[385],"*rules*"),C_fix(27904),t1);}

/* k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_23981(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word ab[63],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23981,2,t0,t1);}
t2=C_mutate(&lf[437],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23983,a[2]=((C_word)li372),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[438],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24004,a[2]=((C_word)li375),tmp=(C_word)a,a+=3,tmp));
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24120,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38721,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
t6=(C_word)C_a_i_cons(&a,2,C_fix(8705),C_SCHEME_END_OF_LIST);
t7=(C_word)C_a_i_cons(&a,2,C_fix(8450),t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(8963),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(10244),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(11268),t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(11012),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(9732),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(9476),t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(9988),t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(10756),t14);
t16=(C_word)C_a_i_cons(&a,2,C_fix(8199),t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(7941),t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(7686),t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(7430),t18);
t20=(C_word)C_a_i_cons(&a,2,C_fix(7173),t19);
t21=(C_word)C_a_i_cons(&a,2,C_fix(6917),t20);
t22=(C_word)C_a_i_cons(&a,2,lf[418],t21);
C_trace("ChickenBridge.scm: 380  make-rule");
f_22282(t5,lf[888],C_fix(28928),t22,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k38719 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_38721(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  hash-table-set!");
t2=C_retrieve(lf[790]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[385],"*rules*"),C_fix(28928),t1);}

/* k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_24120(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24120,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24123,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38641,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29440),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(28928),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[102],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(29440),t7);
t9=(C_word)C_a_i_cons(&a,2,lf[417],t8);
t10=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38647,a[2]=((C_word)li628),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  make-rule");
f_22282(t3,lf[887],C_fix(29184),t9,t10,C_SCHEME_FALSE);}

/* a38646 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_38647(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_38647,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38654,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_cadr(t2);
if(C_truep((C_word)C_i_pairp(t5))){
t6=(C_word)C_i_cadr(t2);
t7=(C_word)C_i_car(t6);
C_trace("ChickenBridge.scm: 380  is-op?");
f_23983(t4,t7);}
else{
t6=t4;
f_38654(2,t6,C_SCHEME_FALSE);}}

/* k38652 in a38646 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_38654(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38654,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=(C_word)C_i_cadr(((C_word*)t0)[3]);
t4=(C_word)C_a_i_cons(&a,2,t2,t3);
C_trace("ChickenBridge.scm: 380  inf->pre");
f_24004(((C_word*)t0)[2],t4);}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_car(((C_word*)t0)[3]));}}

/* k38639 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_38641(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  hash-table-set!");
t2=C_retrieve(lf[790]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[385],"*rules*"),C_fix(29184),t1);}

/* k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_24123(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word ab[72],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24123,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24126,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38505,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29440),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(7173),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[417],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(29440),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(8963),t7);
t9=(C_word)C_a_i_cons(&a,2,lf[417],t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t11=(C_word)C_a_i_cons(&a,2,C_fix(29184),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(512),t11);
t13=(C_word)C_a_i_cons(&a,2,lf[417],t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(2304),C_SCHEME_END_OF_LIST);
t15=(C_word)C_a_i_cons(&a,2,C_fix(26624),t14);
t16=(C_word)C_a_i_cons(&a,2,C_fix(26368),t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(27136),t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(27904),t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(27392),t18);
t20=(C_word)C_a_i_cons(&a,2,t13,t19);
t21=(C_word)C_a_i_cons(&a,2,t9,t20);
t22=(C_word)C_a_i_cons(&a,2,t6,t21);
t23=(C_word)C_a_i_cons(&a,2,lf[418],t22);
t24=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38511,a[2]=((C_word)li626),tmp=(C_word)a,a+=3,tmp);
t25=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38537,a[2]=((C_word)li627),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  make-rule");
f_22282(t3,lf[886],C_fix(29440),t23,t24,t25);}

/* a38536 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_38537(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_38537,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_38545,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  parse-unit-parsed");
f_22622(t5,t2);}

/* k38543 in a38536 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_38545(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  emit");
f_22740(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* a38510 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_38511(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_38511,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38519,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_pairp(t2))){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38528,a[2]=t2,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 380  token-unit-type=?");
f_22668(t5,t6,C_fix(512));}
else{
t5=t4;
f_38519(t5,t2);}}

/* k38526 in a38510 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_38528(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_38519(t2,(C_truep(t1)?(C_word)C_i_cadr(((C_word*)t0)[2]):((C_word*)t0)[2]));}

/* k38517 in a38510 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_38519(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  make-parse-unit");
f_22583(((C_word*)t0)[2],C_fix(29440),t1,C_SCHEME_FALSE);}

/* k38503 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_38505(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  hash-table-set!");
t2=C_retrieve(lf[790]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[385],"*rules*"),C_fix(29440),t1);}

/* k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_24126(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24126,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24129,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38461,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(26368),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(6400),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(2304),t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(26624),t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(27136),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(27904),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(27392),t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(29184),t10);
t12=(C_word)C_a_i_cons(&a,2,lf[418],t11);
C_trace("ChickenBridge.scm: 380  make-rule");
f_22282(t3,lf[885],C_fix(29696),t12,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k38459 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_38461(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  hash-table-set!");
t2=C_retrieve(lf[790]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[385],"*rules*"),C_fix(29696),t1);}

/* k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_24129(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24129,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24132,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38351,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[102],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(29696),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(15872),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[417],t9);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38357,a[2]=((C_word)li623),tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38379,a[2]=((C_word)li625),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  make-rule");
f_22282(t3,lf[884],C_fix(33536),t10,t11,t12);}

/* a38378 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_38379(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_38379,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_a_i_list(&a,1,lf[465]);
t6=t5;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_38390,a[2]=t1,a[3]=t4,a[4]=t3,a[5]=t7,a[6]=t5,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 380  parse-unit-parsed");
f_22622(t8,t2);}

/* k38388 in a38378 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_38390(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38390,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_38392,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t3,a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word)li624),tmp=(C_word)a,a+=8,tmp));
t5=((C_word*)t3)[1];
f_38392(t5,((C_word*)t0)[2],t1);}

/* do3662 in k38388 in a38378 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_38392(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_38392,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)t0)[6]);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_38421,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 380  emit");
f_22740(t3,t4,((C_word*)t0)[3],((C_word*)t0)[2]);}}

/* k38419 in do3662 in k38388 in a38378 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_38421(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38421,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
t3=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[5])[1],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t4);
t6=(C_word)C_i_cdr(((C_word*)t0)[4]);
t7=((C_word*)((C_word*)t0)[3])[1];
f_38392(t7,((C_word*)t0)[2],t6);}

/* a38356 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_38357(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_38357,4,t0,t1,t2,t3);}
t4=(C_word)C_i_cadr(t2);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38373,a[2]=t1,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_caddr(t2);
C_trace("ChickenBridge.scm: 380  remove-token-type");
f_23918(t5,t6,C_fix(256));}

/* k38371 in a38356 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_38373(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38373,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 380  make-parse-unit");
f_22583(((C_word*)t0)[2],C_fix(33536),t2,C_SCHEME_FALSE);}

/* k38349 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_38351(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  hash-table-set!");
t2=C_retrieve(lf[790]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[385],"*rules*"),C_fix(33536),t1);}

/* k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_24132(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24132,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24135,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38276,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[102],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(29696),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(16896),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[417],t9);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38282,a[2]=((C_word)li621),tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38304,a[2]=((C_word)li622),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  make-rule");
f_22282(t3,lf[883],C_fix(34560),t10,t11,t12);}

/* a38303 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_38304(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_38304,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_38308,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  parse-unit-parsed");
f_22622(t5,t2);}

/* k38306 in a38303 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_38308(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38308,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38315,a[2]=((C_word*)t0)[4],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  emit");
f_22740(t2,t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k38313 in k38306 in a38303 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_38315(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38315,2,t0,t1);}
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,lf[749],t1));}

/* a38281 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_38282(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_38282,4,t0,t1,t2,t3);}
t4=(C_word)C_i_cadr(t2);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38298,a[2]=t1,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_caddr(t2);
C_trace("ChickenBridge.scm: 380  remove-token-type");
f_23918(t5,t6,C_fix(256));}

/* k38296 in a38281 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_38298(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38298,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 380  make-parse-unit");
f_22583(((C_word*)t0)[2],C_fix(34560),t2,C_SCHEME_FALSE);}

/* k38274 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_38276(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  hash-table-set!");
t2=C_retrieve(lf[790]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[385],"*rules*"),C_fix(34560),t1);}

/* k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_24135(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word ab[66],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24135,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24138,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38063,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(25088),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(2304),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[418],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(28672),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(256),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(28416),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[417],t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(28672),C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,C_fix(28416),t11);
t13=(C_word)C_a_i_cons(&a,2,t10,t12);
t14=(C_word)C_a_i_cons(&a,2,lf[418],t13);
t15=(C_word)C_a_i_cons(&a,2,t14,C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,C_fix(256),t15);
t17=(C_word)C_a_i_cons(&a,2,lf[432],t16);
t18=(C_word)C_a_i_cons(&a,2,t17,C_SCHEME_END_OF_LIST);
t19=(C_word)C_a_i_cons(&a,2,t6,t18);
t20=(C_word)C_a_i_cons(&a,2,C_fix(16384),t19);
t21=(C_word)C_a_i_cons(&a,2,lf[417],t20);
t22=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38069,a[2]=((C_word)li618),tmp=(C_word)a,a+=3,tmp);
t23=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38144,a[2]=((C_word)li620),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  make-rule");
f_22282(t3,lf[882],C_fix(34304),t21,t22,t23);}

/* a38143 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_38144(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_38144,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_38148,a[2]=t1,a[3]=t2,a[4]=t4,tmp=(C_word)a,a+=5,tmp);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_38184,a[2]=t4,a[3]=t3,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  parse-unit-parsed");
f_22622(t6,t2);}

/* k38182 in a38143 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_38184(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  emit");
f_22740(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k38146 in a38143 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_38148(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38148,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=(C_word)C_i_car(t1);
t4=(C_word)C_i_cdr(t1);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_38164,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word)li619),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  expand-send");
t6=C_retrieve(lf[30]);
((C_proc5)C_retrieve_proc(t6))(5,t6,((C_word*)t0)[2],t3,t4,t5);}

/* a38163 in k38146 in a38143 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_38164(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+8)){
C_save_and_reclaim((void*)tr3r,(void*)f_38164r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_38164r(t0,t1,t2,t3);}}

static void C_ccall f_38164r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a=C_alloc(8);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38172,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38176,a[2]=((C_word*)t0)[2],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_apply(5,0,t5,C_retrieve(lf[31]),t2,t3);}

/* k38174 in a38163 in k38146 in a38143 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_38176(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38176,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38180,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  parse-unit-position");
f_22640(t2,((C_word*)t0)[2]);}

/* k38178 in k38174 in a38163 in k38146 in a38143 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_38180(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  make-parse-error");
f_22532(((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k38170 in a38163 in k38146 in a38143 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_38172(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  errf");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* a38068 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_38069(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[11],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_38069,4,t0,t1,t2,t3);}
t4=(C_word)C_i_caddr(t2);
t5=t4;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_38076,a[2]=t1,a[3]=t6,a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t8=((C_word*)t6)[1];
if(C_truep(t8)){
t9=(C_word)C_i_cadr(((C_word*)t6)[1]);
t10=C_set_block_item(t6,0,t9);
t11=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38112,a[2]=t7,a[3]=t6,tmp=(C_word)a,a+=4,tmp);
t12=(C_word)C_i_cdr(((C_word*)t6)[1]);
if(C_truep((C_word)C_i_nullp(t12))){
t13=t11;
f_38112(2,t13,C_SCHEME_FALSE);}
else{
t13=(C_word)C_i_cadr(((C_word*)t6)[1]);
C_trace("ChickenBridge.scm: 380  token-unit-type=?");
f_22668(t11,t13,C_fix(256));}}
else{
t9=C_set_block_item(t6,0,C_SCHEME_END_OF_LIST);
t10=t7;
f_38076(t10,t9);}}

/* k38110 in a38068 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_38112(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38112,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38116,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t4=(C_word)C_i_caddr(((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 380  append");
t5=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,t3,t4);}
else{
t2=((C_word*)t0)[2];
f_38076(t2,C_SCHEME_UNDEFINED);}}

/* k38114 in k38110 in a38068 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_38116(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_38076(t3,t2);}

/* k38074 in a38068 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_38076(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_38076,NULL,2,t0,t1);}
t2=(C_word)C_i_cadr(((C_word*)t0)[4]);
t3=(C_word)C_a_i_cons(&a,2,t2,((C_word*)((C_word*)t0)[3])[1]);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38087,a[2]=t3,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 380  parse-unit-position");
f_22640(t4,t5);}

/* k38085 in k38074 in a38068 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_38087(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  make-parse-unit");
f_22583(((C_word*)t0)[3],C_fix(34304),((C_word*)t0)[2],t1);}

/* k38061 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_38063(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  hash-table-set!");
t2=C_retrieve(lf[790]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[385],"*rules*"),C_fix(34304),t1);}

/* k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_24138(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24138,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24141,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38037,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(14080),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[417],t5);
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38043,a[2]=((C_word)li617),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  make-rule");
f_22282(t3,lf[881],C_fix(33792),t6,t7,C_SCHEME_FALSE);}

/* a38042 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_38043(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_38043,4,t0,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_cadr(t2));}

/* k38035 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_38037(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  hash-table-set!");
t2=C_retrieve(lf[790]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[385],"*rules*"),C_fix(33792),t1);}

/* k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_24141(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24141,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24144,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38009,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(14592),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[417],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38017,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  simple-unit-parser");
f_22981(t7,C_fix(35072));}

/* k38015 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_38017(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38017,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_38021,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  simple-unit-emitter");
f_22989(t2,lf[476]);}

/* k38019 in k38015 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_38021(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  make-rule");
f_22282(((C_word*)t0)[4],lf[880],C_fix(35072),((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k38007 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_38009(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  hash-table-set!");
t2=C_retrieve(lf[790]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[385],"*rules*"),C_fix(35072),t1);}

/* k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_24144(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24144,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24147,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37981,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(13568),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[417],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37989,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  simple-unit-parser");
f_22981(t7,C_fix(35584));}

/* k37987 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_37989(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37989,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37993,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  simple-unit-emitter");
f_22989(t2,lf[475]);}

/* k37991 in k37987 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_37993(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  make-rule");
f_22282(((C_word*)t0)[4],lf[879],C_fix(35584),((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k37979 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_37981(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  hash-table-set!");
t2=C_retrieve(lf[790]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[385],"*rules*"),C_fix(35584),t1);}

/* k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_24147(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24147,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24150,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37953,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(17152),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[417],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37961,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  simple-unit-parser");
f_22981(t7,C_fix(35328));}

/* k37959 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_37961(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37961,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37965,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  simple-unit-emitter");
f_22989(t2,lf[878]);}

/* k37963 in k37959 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_37965(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  make-rule");
f_22282(((C_word*)t0)[4],lf[877],C_fix(35328),((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k37951 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_37953(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  hash-table-set!");
t2=C_retrieve(lf[790]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[385],"*rules*"),C_fix(35328),t1);}

/* k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_24150(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24150,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24153,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37925,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(18432),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[417],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37933,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  simple-unit-parser");
f_22981(t7,C_fix(34816));}

/* k37931 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_37933(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37933,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37937,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  simple-unit-emitter");
f_22989(t2,lf[486]);}

/* k37935 in k37931 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_37937(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  make-rule");
f_22282(((C_word*)t0)[4],lf[876],C_fix(34816),((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k37923 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_37925(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  hash-table-set!");
t2=C_retrieve(lf[790]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[385],"*rules*"),C_fix(34816),t1);}

/* k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_24153(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word ab[69],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24153,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24156,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37788,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(6144),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[417],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,t6,t7);
t9=(C_word)C_a_i_cons(&a,2,lf[418],t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t11=(C_word)C_a_i_cons(&a,2,C_fix(6144),t10);
t12=(C_word)C_a_i_cons(&a,2,lf[417],t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t14=(C_word)C_a_i_cons(&a,2,t12,t13);
t15=(C_word)C_a_i_cons(&a,2,lf[418],t14);
t16=(C_word)C_a_i_cons(&a,2,t15,C_SCHEME_END_OF_LIST);
t17=(C_word)C_a_i_cons(&a,2,C_fix(256),t16);
t18=(C_word)C_a_i_cons(&a,2,lf[102],t17);
t19=(C_word)C_a_i_cons(&a,2,t18,C_SCHEME_END_OF_LIST);
t20=(C_word)C_a_i_cons(&a,2,t9,t19);
t21=(C_word)C_a_i_cons(&a,2,C_fix(15616),t20);
t22=(C_word)C_a_i_cons(&a,2,lf[417],t21);
t23=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37794,a[2]=((C_word)li615),tmp=(C_word)a,a+=3,tmp);
t24=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37824,a[2]=((C_word)li616),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  make-rule");
f_22282(t3,lf[875],C_fix(36096),t22,t23,t24);}

/* a37823 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_37824(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_37824,5,t0,t1,t2,t3,t4);}
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,lf[874]);}

/* a37793 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_37794(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[5],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_37794,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37818,a[2]=t1,a[3]=t4,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
t7=(C_word)C_i_caddr(t2);
C_trace("ChickenBridge.scm: 380  remove-token-type");
f_23918(t6,t7,C_fix(256));}

/* k37816 in a37793 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_37818(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37818,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t1);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t2);
C_trace("ChickenBridge.scm: 380  make-parse-unit");
f_22583(((C_word*)t0)[2],C_fix(36096),t3,C_SCHEME_FALSE);}

/* k37786 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_37788(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  hash-table-set!");
t2=C_retrieve(lf[790]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[385],"*rules*"),C_fix(36096),t1);}

/* k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_24156(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24156,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24159,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37730,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(19712),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[417],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37738,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  simple-unit-parser");
f_22981(t7,C_fix(31744));}

/* k37736 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_37738(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37738,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37740,a[2]=((C_word)li614),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  make-rule");
f_22282(((C_word*)t0)[3],lf[873],C_fix(31744),((C_word*)t0)[2],t1,t2);}

/* a37739 in k37736 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_37740(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_37740,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37744,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  parse-unit-parsed");
f_22622(t5,t2);}

/* k37742 in a37739 in k37736 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_37744(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37744,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_37747,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37772,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  get-emit-info");
f_22700(t3,lf[854],((C_word*)t0)[3]);}

/* k37770 in k37742 in a37739 in k37736 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_37772(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37772,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_37747(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37760,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37764,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_i_car(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 380  parse-unit-position");
f_22640(t3,t4);}}

/* k37762 in k37770 in k37742 in a37739 in k37736 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_37764(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  make-parse-error");
f_22532(((C_word*)t0)[2],lf[872],t1);}

/* k37758 in k37770 in k37742 in a37739 in k37736 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_37760(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  errf");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k37745 in k37742 in a37739 in k37736 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_37747(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  emit");
f_22740(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k37728 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_37730(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  hash-table-set!");
t2=C_retrieve(lf[790]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[385],"*rules*"),C_fix(31744),t1);}

/* k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_24159(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24159,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24162,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37669,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(18688),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[417],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37677,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  simple-unit-parser");
f_22981(t7,C_fix(31488));}

/* k37675 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_37677(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37677,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37679,a[2]=((C_word)li613),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  make-rule");
f_22282(((C_word*)t0)[3],lf[871],C_fix(31488),((C_word*)t0)[2],t1,t2);}

/* a37678 in k37675 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_37679(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_37679,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37683,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  parse-unit-parsed");
f_22622(t5,t2);}

/* k37681 in a37678 in k37675 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_37683(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37683,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_37686,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37714,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  get-emit-info");
f_22700(t3,lf[840],((C_word*)t0)[3]);}

/* k37712 in k37681 in a37678 in k37675 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_37714(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37714,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_37686(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37702,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37706,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_i_car(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 380  parse-unit-position");
f_22640(t3,t4);}}

/* k37704 in k37712 in k37681 in a37678 in k37675 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_37706(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  make-parse-error");
f_22532(((C_word*)t0)[2],lf[870],t1);}

/* k37700 in k37712 in k37681 in a37678 in k37675 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_37702(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  errf");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k37684 in k37681 in a37678 in k37675 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_37686(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37686,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_37689,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 380  set-emit-info!");
f_22722(t2,lf[840],lf[839],((C_word*)t0)[3]);}

/* k37687 in k37684 in k37681 in a37678 in k37675 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_37689(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  emit");
f_22740(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k37667 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_37669(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  hash-table-set!");
t2=C_retrieve(lf[790]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[385],"*rules*"),C_fix(31488),t1);}

/* k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_24162(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24162,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24165,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37578,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(10756),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(25088),t5);
t7=(C_word)C_a_i_cons(&a,2,lf[417],t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(25088),C_SCHEME_END_OF_LIST);
t9=(C_word)C_a_i_cons(&a,2,t7,t8);
t10=(C_word)C_a_i_cons(&a,2,lf[418],t9);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37584,a[2]=((C_word)li610),tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37619,a[2]=((C_word)li612),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  make-rule");
f_22282(t3,lf[869],C_fix(30208),t10,t11,t12);}

/* a37618 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_37619(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_37619,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37625,a[2]=t4,a[3]=t3,a[4]=((C_word)li611),tmp=(C_word)a,a+=5,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37633,a[2]=t5,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  parse-unit-parsed");
f_22622(t6,t2);}

/* k37631 in a37618 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_37633(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("map");
t2=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* a37624 in a37618 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_37625(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_37625,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 380  emit");
f_22740(t1,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* a37583 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_37584(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[10],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_37584,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_pairp(t2))){
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_caddr(t2);
t6=(C_word)C_a_i_list(&a,2,t4,t5);
C_trace("ChickenBridge.scm: 380  make-parse-unit");
f_22583(t1,C_fix(30208),t6,C_SCHEME_FALSE);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37617,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  make-parse-unit");
f_22583(t4,C_fix(4608),lf[868],C_SCHEME_FALSE);}}

/* k37615 in a37583 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_37617(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37617,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 380  make-parse-unit");
f_22583(((C_word*)t0)[2],C_fix(30208),t2,C_SCHEME_FALSE);}

/* k37576 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_37578(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  hash-table-set!");
t2=C_retrieve(lf[790]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[385],"*rules*"),C_fix(30208),t1);}

/* k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_24165(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24165,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24168,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37476,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(30208),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[102],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(30208),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(20480),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[417],t9);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37482,a[2]=((C_word)li607),tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37525,a[2]=((C_word)li609),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  make-rule");
f_22282(t3,lf[867],C_fix(29952),t10,t11,t12);}

/* a37524 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_37525(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_37525,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37529,a[2]=t2,a[3]=t1,a[4]=t4,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  add-emit-info");
f_22712(t5,lf[866],C_SCHEME_TRUE,t3);}

/* k37527 in a37524 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_37529(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37529,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37534,a[2]=((C_word*)t0)[4],a[3]=t1,a[4]=((C_word)li608),tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37542,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  parse-unit-parsed");
f_22622(t3,((C_word*)t0)[2]);}

/* k37540 in k37527 in a37524 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_37542(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("map");
t2=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* a37533 in k37527 in a37524 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_37534(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_37534,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 380  emit");
f_22740(t1,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* a37481 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_37482(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_37482,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_caddr(t2))){
t4=(C_word)C_i_cadr(t2);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37515,a[2]=t1,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_caddr(t2);
C_trace("ChickenBridge.scm: 380  remove-token-type");
f_23918(t5,t6,C_fix(256));}
else{
t4=(C_word)C_i_cadr(t2);
t5=(C_word)C_a_i_list(&a,1,t4);
C_trace("ChickenBridge.scm: 380  make-parse-unit");
f_22583(t1,C_fix(29952),t5,C_SCHEME_FALSE);}}

/* k37513 in a37481 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_37515(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37515,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 380  make-parse-unit");
f_22583(((C_word*)t0)[2],C_fix(29952),t2,C_SCHEME_FALSE);}

/* k37474 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_37476(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  hash-table-set!");
t2=C_retrieve(lf[790]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[385],"*rules*"),C_fix(29952),t1);}

/* k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_24168(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[57],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24168,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24171,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37390,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(25088),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(27136),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[418],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(12800),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(12544),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(12288),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(12032),t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(11776),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(11268),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(11012),t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(10756),t13);
t15=(C_word)C_a_i_cons(&a,2,lf[418],t14);
t16=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t17=(C_word)C_a_i_cons(&a,2,t15,t16);
t18=(C_word)C_a_i_cons(&a,2,t6,t17);
t19=(C_word)C_a_i_cons(&a,2,lf[417],t18);
t20=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37396,a[2]=((C_word)li606),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  make-rule");
f_22282(t3,lf[865],C_fix(30720),t19,t20,C_SCHEME_FALSE);}

/* a37395 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_37396(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_37396,4,t0,t1,t2,t3);}
C_trace("ChickenBridge.scm: 380  make-parse-unit");
f_22583(t1,C_fix(30720),t2,C_SCHEME_FALSE);}

/* k37388 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_37390(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  hash-table-set!");
t2=C_retrieve(lf[790]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[385],"*rules*"),C_fix(30720),t1);}

/* k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_24171(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24171,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24174,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37110,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(30720),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[102],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(30720),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(16640),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[417],t9);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37116,a[2]=((C_word)li603),tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37159,a[2]=((C_word)li605),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  make-rule");
f_22282(t3,lf[864],C_fix(30464),t10,t11,t12);}

/* a37158 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_37159(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_37159,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37163,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  parse-unit-parsed");
f_22622(t5,t2);}

/* k37161 in a37158 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_37163(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37163,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,lf[443]);
t3=t2;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_37171,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t6,a[5]=t4,a[6]=t2,a[7]=((C_word)li604),tmp=(C_word)a,a+=8,tmp));
t8=((C_word*)t6)[1];
f_37171(t8,((C_word*)t0)[2],t1);}

/* do3741 in k37161 in a37158 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_37171(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_37171,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=(C_word)C_i_cddr(((C_word*)t0)[6]);
t4=(C_word)C_i_nullp(t3);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_truep(t4)?(C_word)C_i_cadr(((C_word*)t0)[6]):((C_word*)t0)[6]));}
else{
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_37194,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=t2,a[7]=((C_word*)t0)[5],tmp=(C_word)a,a+=8,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 380  parse-unit-parsed");
f_22622(t3,t4);}}

/* k37192 in do3741 in k37161 in a37158 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_37194(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37194,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_37197,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
t3=(C_word)C_i_car(t1);
C_trace("ChickenBridge.scm: 380  emit");
f_22740(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k37195 in k37192 in do3741 in k37161 in a37158 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_37197(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37197,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_37200,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 380  parse-unit-type");
f_22604(t2,t3);}

/* k37198 in k37195 in k37192 in do3741 in k37161 in a37158 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_37200(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37200,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_37203,a[2]=t1,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
t3=(C_word)C_i_caddr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 380  emit");
f_22740(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k37201 in k37198 in k37195 in k37192 in do3741 in k37161 in a37158 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_37203(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37203,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_37206,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=t3,tmp=(C_word)a,a+=8,tmp);
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_37263,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t4,a[5]=t1,a[6]=t3,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 380  SalType=?");
f_23874(t5,((C_word*)t0)[2],C_fix(10756));}

/* k37261 in k37201 in k37198 in k37195 in k37192 in do3741 in k37161 in a37158 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_37263(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37263,2,t0,t1);}
if(C_truep(t1)){
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,((C_word*)t0)[5]);
t3=((C_word*)t0)[4];
f_37206(t3,t2);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_37270,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 380  SalType=?");
f_23874(t2,((C_word*)t0)[2],C_fix(11776));}}

/* k37268 in k37261 in k37201 in k37198 in k37195 in k37192 in do3741 in k37161 in a37158 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_37270(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37270,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[98],((C_word*)t0)[6],((C_word*)t0)[5]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=((C_word*)t0)[3];
f_37206(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_37280,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 380  SalType=?");
f_23874(t2,((C_word*)t0)[2],C_fix(12032));}}

/* k37278 in k37268 in k37261 in k37201 in k37198 in k37195 in k37192 in do3741 in k37161 in a37158 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_37280(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37280,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[102],((C_word*)t0)[6],((C_word*)t0)[5]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=((C_word*)t0)[3];
f_37206(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_37290,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 380  SalType=?");
f_23874(t2,((C_word*)t0)[2],C_fix(12288));}}

/* k37288 in k37278 in k37268 in k37261 in k37201 in k37198 in k37195 in k37192 in do3741 in k37161 in a37158 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_37290(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37290,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,2,lf[619],((C_word*)t0)[6]);
t3=(C_word)C_a_i_list(&a,3,lf[18],((C_word*)t0)[5],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=((C_word*)t0)[3];
f_37206(t5,t4);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_37304,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 380  SalType=?");
f_23874(t2,((C_word*)t0)[2],C_fix(12544));}}

/* k37302 in k37288 in k37278 in k37268 in k37261 in k37201 in k37198 in k37195 in k37192 in do3741 in k37161 in a37158 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_37304(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37304,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[827],((C_word*)t0)[6],((C_word*)t0)[5]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=((C_word*)t0)[3];
f_37206(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_37314,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 380  SalType=?");
f_23874(t2,((C_word*)t0)[2],C_fix(12800));}}

/* k37312 in k37302 in k37288 in k37278 in k37268 in k37261 in k37201 in k37198 in k37195 in k37192 in do3741 in k37161 in a37158 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_37314(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37314,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[18],((C_word*)t0)[6],((C_word*)t0)[5]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=((C_word*)t0)[3];
f_37206(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_37324,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 380  SalType=?");
f_23874(t2,((C_word*)t0)[2],C_fix(11012));}}

/* k37322 in k37312 in k37302 in k37288 in k37278 in k37268 in k37261 in k37201 in k37198 in k37195 in k37192 in do3741 in k37161 in a37158 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_37324(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37324,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[363],((C_word*)t0)[6],((C_word*)t0)[5]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=((C_word*)t0)[3];
f_37206(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_37334,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 380  SalType=?");
f_23874(t2,((C_word*)t0)[2],C_fix(11268));}}

/* k37332 in k37322 in k37312 in k37302 in k37288 in k37278 in k37268 in k37261 in k37201 in k37198 in k37195 in k37192 in do3741 in k37161 in a37158 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_37334(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37334,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[301],((C_word*)t0)[5],((C_word*)t0)[4]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_37206(t4,t3);}
else{
t2=((C_word*)t0)[2];
f_37206(t2,C_SCHEME_UNDEFINED);}}

/* k37204 in k37201 in k37198 in k37195 in k37192 in do3741 in k37161 in a37158 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_37206(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_37206,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_37209,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37230,a[2]=t2,a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t0)[2]))){
t4=(C_word)C_i_car(((C_word*)t0)[2]);
t5=t3;
f_37230(t5,(C_word)C_eqp(t4,lf[54]));}
else{
t4=t3;
f_37230(t4,C_SCHEME_FALSE);}}

/* k37228 in k37204 in k37201 in k37198 in k37195 in k37192 in do3741 in k37161 in a37158 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_37230(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_37230,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cadr(((C_word*)t0)[4]);
t3=(C_word)C_i_caddr(((C_word*)t0)[4]);
t4=(C_word)C_a_i_list(&a,3,lf[863],t2,t3);
t5=(C_word)C_a_i_list(&a,3,lf[222],t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_37209(t7,t6);}
else{
t2=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_37209(t4,t3);}}

/* k37207 in k37204 in k37201 in k37198 in k37195 in k37192 in do3741 in k37161 in a37158 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_37209(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_37209,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[6])[1]);
t3=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[5])[1],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t4);
t6=(C_word)C_i_cdr(((C_word*)t0)[4]);
t7=((C_word*)((C_word*)t0)[3])[1];
f_37171(t7,((C_word*)t0)[2],t6);}

/* a37115 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_37116(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_37116,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_caddr(t2))){
t4=(C_word)C_i_cadr(t2);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37149,a[2]=t1,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_caddr(t2);
C_trace("ChickenBridge.scm: 380  remove-token-type");
f_23918(t5,t6,C_fix(256));}
else{
t4=(C_word)C_i_cadr(t2);
t5=(C_word)C_a_i_list(&a,1,t4);
C_trace("ChickenBridge.scm: 380  make-parse-unit");
f_22583(t1,C_fix(30464),t5,C_SCHEME_FALSE);}}

/* k37147 in a37115 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_37149(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37149,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 380  make-parse-unit");
f_22583(((C_word*)t0)[2],C_fix(30464),t2,C_SCHEME_FALSE);}

/* k37108 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_37110(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  hash-table-set!");
t2=C_retrieve(lf[790]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[385],"*rules*"),C_fix(30464),t1);}

/* k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_24174(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24174,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24177,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36996,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29952),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,lf[432],t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t7=(C_word)C_a_i_cons(&a,2,lf[102],t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(18193),C_SCHEME_END_OF_LIST);
t9=(C_word)C_a_i_cons(&a,2,t7,t8);
t10=(C_word)C_a_i_cons(&a,2,t5,t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(13328),t10);
t12=(C_word)C_a_i_cons(&a,2,lf[417],t11);
t13=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37002,a[2]=((C_word)li601),tmp=(C_word)a,a+=3,tmp);
t14=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37028,a[2]=((C_word)li602),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  make-rule");
f_22282(t3,lf[862],C_fix(32000),t12,t13,t14);}

/* a37027 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_37028(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_37028,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37032,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  parse-unit-parsed");
f_22622(t5,t2);}

/* k37030 in a37027 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_37032(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37032,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_37038,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_i_cdr(t1);
C_trace("ChickenBridge.scm: 380  emit");
f_22740(t3,t4,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k37036 in k37030 in a37027 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_37038(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37038,2,t0,t1);}
if(C_truep(((C_word*)t0)[5])){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37058,a[2]=((C_word*)t0)[4],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  emit");
f_22740(t2,((C_word*)t0)[5],((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,lf[443],t1));}}

/* k37056 in k37036 in k37030 in a37027 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_37058(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37058,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,lf[2],t2));}

/* a37001 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_37002(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_37002,4,t0,t1,t2,t3);}
t4=(C_word)C_i_cadr(t2);
t5=t4;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(C_word)C_i_caddr(t2);
t8=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37012,a[2]=t1,a[3]=t7,a[4]=t6,tmp=(C_word)a,a+=5,tmp);
t9=((C_word*)t6)[1];
if(C_truep(t9)){
t10=(C_word)C_i_car(((C_word*)t6)[1]);
t11=C_set_block_item(t6,0,t10);
t12=t8;
f_37012(t12,t11);}
else{
t10=t8;
f_37012(t10,C_SCHEME_FALSE);}}

/* k37010 in a37001 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_37012(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_37012,NULL,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 380  make-parse-unit");
f_22583(((C_word*)t0)[2],C_fix(32000),t2,C_SCHEME_FALSE);}

/* k36994 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_36996(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  hash-table-set!");
t2=C_retrieve(lf[790]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[385],"*rules*"),C_fix(32000),t1);}

/* k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_24177(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word ab[81],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24177,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24180,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36799,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,lf[432],t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t7=(C_word)C_a_i_cons(&a,2,C_fix(17920),t6);
t8=(C_word)C_a_i_cons(&a,2,lf[432],t7);
t9=(C_word)C_a_i_cons(&a,2,t8,C_SCHEME_END_OF_LIST);
t10=(C_word)C_a_i_cons(&a,2,t5,t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(18944),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(29696),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(14336),t12);
t14=(C_word)C_a_i_cons(&a,2,lf[417],t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,C_fix(29696),t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(19968),t16);
t18=(C_word)C_a_i_cons(&a,2,lf[417],t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t20=(C_word)C_a_i_cons(&a,2,C_fix(29696),t19);
t21=(C_word)C_a_i_cons(&a,2,C_fix(19200),t20);
t22=(C_word)C_a_i_cons(&a,2,lf[417],t21);
t23=(C_word)C_a_i_cons(&a,2,t22,C_SCHEME_END_OF_LIST);
t24=(C_word)C_a_i_cons(&a,2,t18,t23);
t25=(C_word)C_a_i_cons(&a,2,t14,t24);
t26=(C_word)C_a_i_cons(&a,2,lf[418],t25);
t27=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36805,a[2]=((C_word)li599),tmp=(C_word)a,a+=3,tmp);
t28=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36873,a[2]=((C_word)li600),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  make-rule");
f_22282(t3,lf[861],C_fix(32256),t26,t27,t28);}

/* a36872 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_36873(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_36873,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_36877,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  parse-unit-parsed");
f_22622(t5,t2);}

/* k36875 in a36872 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_36877(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  emit");
f_22740(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* a36804 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_36805(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[13],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_36805,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=C_SCHEME_END_OF_LIST;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_36818,a[2]=t7,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t9=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36824,a[2]=t8,a[3]=t7,a[4]=t5,a[5]=t4,a[6]=t2,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 380  token-unit-type=?");
f_22668(t9,t4,C_fix(14336));}

/* k36822 in a36804 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_36824(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[29],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36824,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cadddr(((C_word*)t0)[6]);
t3=t2;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_36830,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t8,a[6]=t6,a[7]=((C_word*)t0)[4],a[8]=((C_word*)t0)[5],a[9]=t4,tmp=(C_word)a,a+=10,tmp);
t10=((C_word*)t4)[1];
if(C_truep(t10)){
t11=(C_word)C_i_car(((C_word*)t4)[1]);
t12=C_set_block_item(t6,0,t11);
t13=t9;
f_36830(t13,t12);}
else{
t11=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_36859,a[2]=t9,a[3]=t6,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  make-parse-unit");
f_22583(t11,C_fix(4608),lf[860],C_SCHEME_FALSE);}}
else{
t2=(C_word)C_i_caddr(((C_word*)t0)[6]);
t3=(C_word)C_a_i_list(&a,3,((C_word*)t0)[5],((C_word*)t0)[4],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_36818(t5,t4);}}

/* k36857 in k36822 in a36804 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_36859(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_36830(t3,t2);}

/* k36828 in k36822 in a36804 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_36830(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_36830,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_36834,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 380  fifth");
t3=C_retrieve(lf[47]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k36832 in k36828 in k36822 in a36804 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_36834(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36834,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36837,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t4=((C_word*)((C_word*)t0)[8])[1];
if(C_truep(t4)){
t5=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[8])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=t3;
f_36837(t7,t6);}
else{
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_36848,a[2]=t3,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  make-parse-unit");
f_22583(t5,C_fix(4608),lf[859],C_SCHEME_FALSE);}}

/* k36846 in k36832 in k36828 in k36822 in a36804 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_36848(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_36837(t3,t2);}

/* k36835 in k36832 in k36828 in k36822 in a36804 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_36837(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_36837,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,4,((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_36818(t4,t3);}

/* k36816 in a36804 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_36818(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  make-parse-unit");
f_22583(((C_word*)t0)[3],C_fix(32256),((C_word*)((C_word*)t0)[2])[1],C_SCHEME_FALSE);}

/* k36797 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_36799(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  hash-table-set!");
t2=C_retrieve(lf[790]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[385],"*rules*"),C_fix(32256),t1);}

/* k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_24180(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word t36;
C_word t37;
C_word t38;
C_word t39;
C_word t40;
C_word t41;
C_word t42;
C_word t43;
C_word t44;
C_word t45;
C_word t46;
C_word t47;
C_word t48;
C_word t49;
C_word t50;
C_word t51;
C_word t52;
C_word t53;
C_word t54;
C_word t55;
C_word t56;
C_word t57;
C_word t58;
C_word t59;
C_word t60;
C_word ab[174],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24180,2,t0,t1);}
t2=C_mutate(&lf[439],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24182,a[2]=((C_word)li376),tmp=(C_word)a,a+=3,tmp));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24703,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36527,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t6=(C_word)C_a_i_cons(&a,2,C_fix(23296),t5);
t7=(C_word)C_a_i_cons(&a,2,lf[417],t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t9=(C_word)C_a_i_cons(&a,2,C_fix(18944),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[432],t9);
t11=(C_word)C_a_i_cons(&a,2,t10,C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,C_fix(29696),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(10756),t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(25088),t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(22272),t14);
t16=(C_word)C_a_i_cons(&a,2,lf[417],t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t18=(C_word)C_a_i_cons(&a,2,C_fix(22784),t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(25088),t18);
t20=(C_word)C_a_i_cons(&a,2,C_fix(22272),t19);
t21=(C_word)C_a_i_cons(&a,2,lf[417],t20);
t22=(C_word)C_a_i_cons(&a,2,C_fix(21760),C_SCHEME_END_OF_LIST);
t23=(C_word)C_a_i_cons(&a,2,C_fix(20992),t22);
t24=(C_word)C_a_i_cons(&a,2,C_fix(23552),t23);
t25=(C_word)C_a_i_cons(&a,2,C_fix(21248),t24);
t26=(C_word)C_a_i_cons(&a,2,lf[418],t25);
t27=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t28=(C_word)C_a_i_cons(&a,2,t26,t27);
t29=(C_word)C_a_i_cons(&a,2,lf[432],t28);
t30=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t31=(C_word)C_a_i_cons(&a,2,C_fix(21504),t30);
t32=(C_word)C_a_i_cons(&a,2,lf[432],t31);
t33=(C_word)C_a_i_cons(&a,2,t32,C_SCHEME_END_OF_LIST);
t34=(C_word)C_a_i_cons(&a,2,t29,t33);
t35=(C_word)C_a_i_cons(&a,2,C_fix(29696),t34);
t36=(C_word)C_a_i_cons(&a,2,C_fix(22528),t35);
t37=(C_word)C_a_i_cons(&a,2,C_fix(25088),t36);
t38=(C_word)C_a_i_cons(&a,2,C_fix(22272),t37);
t39=(C_word)C_a_i_cons(&a,2,lf[417],t38);
t40=(C_word)C_a_i_cons(&a,2,C_fix(21760),C_SCHEME_END_OF_LIST);
t41=(C_word)C_a_i_cons(&a,2,C_fix(20992),t40);
t42=(C_word)C_a_i_cons(&a,2,C_fix(23552),t41);
t43=(C_word)C_a_i_cons(&a,2,C_fix(21248),t42);
t44=(C_word)C_a_i_cons(&a,2,lf[418],t43);
t45=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t46=(C_word)C_a_i_cons(&a,2,C_fix(21504),t45);
t47=(C_word)C_a_i_cons(&a,2,lf[432],t46);
t48=(C_word)C_a_i_cons(&a,2,t47,C_SCHEME_END_OF_LIST);
t49=(C_word)C_a_i_cons(&a,2,C_fix(29696),t48);
t50=(C_word)C_a_i_cons(&a,2,t44,t49);
t51=(C_word)C_a_i_cons(&a,2,C_fix(25088),t50);
t52=(C_word)C_a_i_cons(&a,2,C_fix(22272),t51);
t53=(C_word)C_a_i_cons(&a,2,lf[417],t52);
t54=(C_word)C_a_i_cons(&a,2,t53,C_SCHEME_END_OF_LIST);
t55=(C_word)C_a_i_cons(&a,2,t39,t54);
t56=(C_word)C_a_i_cons(&a,2,t21,t55);
t57=(C_word)C_a_i_cons(&a,2,t16,t56);
t58=(C_word)C_a_i_cons(&a,2,t7,t57);
t59=(C_word)C_a_i_cons(&a,2,lf[418],t58);
C_trace("ChickenBridge.scm: 380  make-rule");
f_22282(t4,lf[858],C_fix(33024),t59,C_retrieve2(lf[439],"sal-parse-stepping"),C_SCHEME_FALSE);}

/* k36525 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_36527(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  hash-table-set!");
t2=C_retrieve(lf[790]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[385],"*rules*"),C_fix(33024),t1);}

/* k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_24703(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[37],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24703,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24706,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36471,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(20224),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[417],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(19456),t7);
t9=(C_word)C_a_i_cons(&a,2,lf[417],t8);
t10=(C_word)C_a_i_cons(&a,2,t9,C_SCHEME_END_OF_LIST);
t11=(C_word)C_a_i_cons(&a,2,t6,t10);
t12=(C_word)C_a_i_cons(&a,2,lf[418],t11);
t13=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_36479,a[2]=t12,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  simple-unit-parser");
f_22981(t13,C_fix(33280));}

/* k36477 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_36479(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  make-rule");
f_22282(((C_word*)t0)[3],lf[857],C_fix(33280),((C_word*)t0)[2],t1,C_SCHEME_FALSE);}

/* k36469 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_36471(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  hash-table-set!");
t2=C_retrieve(lf[790]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[385],"*rules*"),C_fix(33280),t1);}

/* k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_24706(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word ab[78],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24706,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25212,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36299,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(16144),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(14864),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[418],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(29952),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,lf[432],t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(33024),C_SCHEME_END_OF_LIST);
t10=(C_word)C_a_i_cons(&a,2,lf[102],t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(33280),C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,lf[102],t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t14=(C_word)C_a_i_cons(&a,2,lf[98],t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,C_fix(22016),t15);
t17=(C_word)C_a_i_cons(&a,2,lf[432],t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(18193),C_SCHEME_END_OF_LIST);
t19=(C_word)C_a_i_cons(&a,2,t17,t18);
t20=(C_word)C_a_i_cons(&a,2,t14,t19);
t21=(C_word)C_a_i_cons(&a,2,t12,t20);
t22=(C_word)C_a_i_cons(&a,2,t10,t21);
t23=(C_word)C_a_i_cons(&a,2,t8,t22);
t24=(C_word)C_a_i_cons(&a,2,t6,t23);
t25=(C_word)C_a_i_cons(&a,2,lf[417],t24);
t26=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36305,a[2]=((C_word)li593),tmp=(C_word)a,a+=3,tmp);
t27=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36351,a[2]=((C_word)li598),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  make-rule");
f_22282(t3,lf[856],C_fix(32512),t25,t26,t27);}

/* a36350 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_36351(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[7],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_36351,5,t0,t1,t2,t3,t4);}
t5=t3;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24712,a[2]=t4,a[3]=t6,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  parse-unit-parsed");
f_22622(t7,t2);}

/* k24710 in a36350 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_24712(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24712,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_END_OF_LIST;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_END_OF_LIST;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_END_OF_LIST;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_END_OF_LIST;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_END_OF_LIST;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_24730,a[2]=t11,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t7,a[6]=((C_word*)t0)[4],a[7]=t15,a[8]=t13,a[9]=t5,a[10]=t9,a[11]=t3,tmp=(C_word)a,a+=12,tmp);
t17=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25171,a[2]=t3,a[3]=((C_word*)t0)[2],a[4]=t5,a[5]=t16,a[6]=((C_word*)t0)[3],tmp=(C_word)a,a+=7,tmp);
t18=(C_word)C_i_car(((C_word*)t3)[1]);
C_trace("ChickenBridge.scm: 380  token-unit-type=?");
f_22668(t17,t18,C_fix(14864));}

/* k25169 in k24710 in a36350 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_25171(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25171,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25175,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  add-emit-info");
f_22712(t2,lf[853],C_SCHEME_TRUE,((C_word*)((C_word*)t0)[6])[1]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25178,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25205,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  get-emit-info");
f_22700(t3,lf[842],((C_word*)((C_word*)t0)[6])[1]);}}

/* k25203 in k25169 in k24710 in a36350 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_25205(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25205,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_25178(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25193,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25197,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
C_trace("ChickenBridge.scm: 380  parse-unit-position");
f_22640(t3,t4);}}

/* k25195 in k25203 in k25169 in k24710 in a36350 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_25197(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  make-parse-error");
f_22532(((C_word*)t0)[2],lf[855],t1);}

/* k25191 in k25203 in k25169 in k24710 in a36350 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_25193(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  errf");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k25176 in k25169 in k24710 in a36350 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_25178(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25178,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25182,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  add-emit-info");
f_22712(t2,lf[854],C_SCHEME_TRUE,((C_word*)((C_word*)t0)[4])[1]);}

/* k25180 in k25176 in k25169 in k24710 in a36350 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_25182(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_TRUE);
t4=((C_word*)t0)[2];
f_24730(t4,t3);}

/* k25173 in k25169 in k24710 in a36350 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_25175(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_24730(t3,t2);}

/* k24728 in k24710 in a36350 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_24730(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24730,NULL,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[11])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t4=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_24737,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[11],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_car(((C_word*)((C_word*)t0)[11])[1]))){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25160,a[2]=t4,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25164,a[2]=((C_word*)t0)[5],a[3]=t5,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_car(((C_word*)((C_word*)t0)[11])[1]);
C_trace("ChickenBridge.scm: 380  emit");
f_22740(t6,t7,((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]);}
else{
t5=t4;
f_24737(t5,C_SCHEME_UNDEFINED);}}

/* k25162 in k24728 in k24710 in a36350 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_25164(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  append");
t2=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k25158 in k24728 in k24710 in a36350 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_25160(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_24737(t3,t2);}

/* k24735 in k24728 in k24710 in a36350 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_24737(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24737,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_24740,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
t3=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25035,a[2]=((C_word*)t0)[11],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[6],a[6]=t5,a[7]=((C_word)li597),tmp=(C_word)a,a+=8,tmp));
t7=((C_word*)t5)[1];
f_25035(t7,t2,t3);}

/* do3851 in k24735 in k24728 in k24710 in a36350 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_25035(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25035,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25045,a[2]=t1,a[3]=((C_word*)t0)[6],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25056,a[2]=t3,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 380  parse-unit-parsed");
f_22622(t4,t5);}}

/* k25054 in do3851 in k24735 in k24728 in k24710 in a36350 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_25056(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25056,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25058,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t3,a[6]=((C_word*)t0)[6],a[7]=((C_word)li596),tmp=(C_word)a,a+=8,tmp));
t5=((C_word*)t3)[1];
f_25058(t5,((C_word*)t0)[2],t1);}

/* do3854 in k25054 in do3851 in k24735 in k24728 in k24710 in a36350 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_25058(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25058,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(C_word)C_i_car(t2);
t4=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_25072,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t3,a[5]=((C_word*)t0)[4],a[6]=t1,a[7]=((C_word*)t0)[5],a[8]=t2,a[9]=((C_word*)t0)[6],tmp=(C_word)a,a+=10,tmp);
t5=(C_word)C_i_car(t3);
t6=(C_word)C_i_cadr(t3);
t7=(C_word)C_a_i_list(&a,2,t5,t6);
t8=(C_word)C_a_i_list(&a,1,t7);
C_trace("ChickenBridge.scm: 380  append");
t9=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t4,((C_word*)((C_word*)t0)[6])[1],t8);}}

/* k25070 in do3854 in k25054 in do3851 in k24735 in k24728 in k24710 in a36350 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_25072(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25072,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,t1);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25075,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_caddr(((C_word*)t0)[4]))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25125,a[2]=t3,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_caddr(((C_word*)t0)[4]);
t6=(C_word)C_a_i_list(&a,1,t5);
C_trace("ChickenBridge.scm: 380  append");
t7=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t4,((C_word*)((C_word*)t0)[2])[1],t6);}
else{
t4=t3;
f_25075(t4,C_SCHEME_UNDEFINED);}}

/* k25123 in k25070 in do3854 in k25054 in do3851 in k24735 in k24728 in k24710 in a36350 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_25125(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_25075(t3,t2);}

/* k25073 in k25070 in do3854 in k25054 in do3851 in k24735 in k24728 in k24710 in a36350 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_25075(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25075,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25078,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_cadddr(((C_word*)t0)[3]))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25110,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_i_cadddr(((C_word*)t0)[3]);
t5=(C_word)C_a_i_list(&a,1,t4);
C_trace("ChickenBridge.scm: 380  append");
t6=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t3,((C_word*)((C_word*)t0)[2])[1],t5);}
else{
t3=t2;
f_25078(t3,C_SCHEME_UNDEFINED);}}

/* k25108 in k25073 in k25070 in do3854 in k25054 in do3851 in k24735 in k24728 in k24710 in a36350 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_25110(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_25078(t3,t2);}

/* k25076 in k25073 in k25070 in do3854 in k25054 in do3851 in k24735 in k24728 in k24710 in a36350 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_25078(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25078,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25081,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25091,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  fifth");
t4=C_retrieve(lf[47]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k25089 in k25076 in k25073 in k25070 in do3854 in k25054 in do3851 in k24735 in k24728 in k24710 in a36350 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_25091(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25091,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25095,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25103,a[2]=((C_word*)t0)[4],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  fifth");
t4=C_retrieve(lf[47]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_25081(t2,C_SCHEME_UNDEFINED);}}

/* k25101 in k25089 in k25076 in k25073 in k25070 in do3854 in k25054 in do3851 in k24735 in k24728 in k24710 in a36350 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_25103(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25103,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
C_trace("ChickenBridge.scm: 380  append");
t3=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t2);}

/* k25093 in k25089 in k25076 in k25073 in k25070 in do3854 in k25054 in do3851 in k24735 in k24728 in k24710 in a36350 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_25095(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_25081(t3,t2);}

/* k25079 in k25076 in k25073 in k25070 in do3854 in k25054 in do3851 in k24735 in k24728 in k24710 in a36350 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_25081(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_25058(t3,((C_word*)t0)[2],t2);}

/* k25043 in do3851 in k24735 in k24728 in k24710 in a36350 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_25045(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_25035(t3,((C_word*)t0)[2],t2);}

/* k24738 in k24735 in k24728 in k24710 in a36350 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_24740(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24740,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_24743,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
t3=(C_word)C_i_cadddr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24999,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t5,a[5]=((C_word*)t0)[11],a[6]=((C_word)li595),tmp=(C_word)a,a+=7,tmp));
t7=((C_word*)t5)[1];
f_24999(t7,t2,t3);}

/* do3865 in k24738 in k24735 in k24728 in k24710 in a36350 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_24999(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24999,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25010,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25025,a[2]=((C_word*)t0)[5],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 380  emit");
f_22740(t4,t5,((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2]);}}

/* k25023 in do3865 in k24738 in k24735 in k24728 in k24710 in a36350 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_25025(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25025,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
C_trace("ChickenBridge.scm: 380  append");
t3=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t2);}

/* k25008 in do3865 in k24738 in k24735 in k24728 in k24710 in a36350 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_25010(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_24999(t4,((C_word*)t0)[2],t3);}

/* k24741 in k24738 in k24735 in k24728 in k24710 in a36350 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_24743(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24743,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_24747,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 380  append");
t3=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)((C_word*)t0)[11])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k24745 in k24741 in k24738 in k24735 in k24728 in k24710 in a36350 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_24747(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24747,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[10])+1,t1);
t3=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_24750,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
t4=(C_word)C_i_caddr(((C_word*)((C_word*)t0)[2])[1]);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24943,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t6,a[5]=((C_word*)t0)[8],a[6]=((C_word)li594),tmp=(C_word)a,a+=7,tmp));
t8=((C_word*)t6)[1];
f_24943(t8,t3,t4);}

/* do3870 in k24745 in k24741 in k24738 in k24735 in k24728 in k24710 in a36350 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_24943(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24943,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24953,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=t2,a[7]=((C_word*)t0)[5],tmp=(C_word)a,a+=8,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 380  parse-unit-parsed");
f_22622(t3,t4);}}

/* k24951 in do3870 in k24745 in k24741 in k24738 in k24735 in k24728 in k24710 in a36350 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_24953(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24953,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24956,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cadr(t1);
C_trace("ChickenBridge.scm: 380  emit");
f_22740(t2,t3,((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2]);}

/* k24954 in k24951 in do3870 in k24745 in k24741 in k24738 in k24735 in k24728 in k24710 in a36350 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_24956(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24956,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24959,a[2]=t3,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24977,a[2]=t4,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_car(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 380  token-unit-type=?");
f_22668(t5,t6,C_fix(20224));}

/* k24975 in k24954 in k24951 in do3870 in k24745 in k24741 in k24738 in k24735 in k24728 in k24710 in a36350 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_24977(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24977,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,2,lf[419],((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_24959(t4,t3);}
else{
t2=((C_word*)t0)[2];
f_24959(t2,C_SCHEME_UNDEFINED);}}

/* k24957 in k24954 in k24951 in do3870 in k24745 in k24741 in k24738 in k24735 in k24728 in k24710 in a36350 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_24959(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24959,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24963,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[2])[1]);
C_trace("ChickenBridge.scm: 380  append");
t4=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,((C_word*)((C_word*)t0)[6])[1],t3);}

/* k24961 in k24957 in k24954 in k24951 in do3870 in k24745 in k24741 in k24738 in k24735 in k24728 in k24710 in a36350 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_24963(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_24943(t4,((C_word*)t0)[2],t3);}

/* k24748 in k24745 in k24741 in k24738 in k24735 in k24728 in k24710 in a36350 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_24750(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24750,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_24753,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[9])[1]))){
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[9])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[9])+1,t4);
t6=t2;
f_24753(t6,t5);}
else{
t4=(C_word)C_a_i_cons(&a,2,lf[418],((C_word*)((C_word*)t0)[9])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[9])+1,t4);
t6=t2;
f_24753(t6,t5);}}
else{
t3=C_set_block_item(((C_word*)t0)[9],0,C_SCHEME_FALSE);
t4=t2;
f_24753(t4,t3);}}

/* k24751 in k24748 in k24745 in k24741 in k24738 in k24735 in k24728 in k24710 in a36350 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_24753(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24753,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24756,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24906,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t2,a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 380  fifth");
t4=C_retrieve(lf[47]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k24904 in k24751 in k24748 in k24745 in k24741 in k24738 in k24735 in k24728 in k24710 in a36350 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_24906(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24906,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24910,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24914,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  fifth");
t4=C_retrieve(lf[47]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_FALSE);
t3=((C_word*)t0)[5];
f_24756(t3,t2);}}

/* k24912 in k24904 in k24751 in k24748 in k24745 in k24741 in k24738 in k24735 in k24728 in k24710 in a36350 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_24914(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  emit");
f_22740(((C_word*)t0)[4],t1,((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2]);}

/* k24908 in k24904 in k24751 in k24748 in k24745 in k24741 in k24738 in k24735 in k24728 in k24710 in a36350 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_24910(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_24756(t3,t2);}

/* k24754 in k24751 in k24748 in k24745 in k24741 in k24738 in k24735 in k24728 in k24710 in a36350 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_24756(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[31],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24756,NULL,2,t0,t1);}
t2=((C_word*)((C_word*)t0)[7])[1];
if(C_truep(t2)){
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24784,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 380  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[852]);}
else{
t3=(C_word)C_a_i_list(&a,2,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1]);
t4=(C_word)C_a_i_cons(&a,2,t3,((C_word*)((C_word*)t0)[2])[1]);
t5=(C_word)C_a_i_cons(&a,2,C_SCHEME_END_OF_LIST,t4);
t6=(C_word)C_a_i_cons(&a,2,lf[670],t5);
t7=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_a_i_list(&a,3,lf[2],((C_word*)((C_word*)t0)[3])[1],t6));}}

/* k24782 in k24754 in k24751 in k24748 in k24745 in k24741 in k24738 in k24735 in k24728 in k24710 in a36350 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_24784(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24784,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24787,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 380  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[851]);}

/* k24785 in k24782 in k24754 in k24751 in k24748 in k24745 in k24741 in k24738 in k24735 in k24728 in k24710 in a36350 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_24787(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24787,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_24790,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 380  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[850]);}

/* k24788 in k24785 in k24782 in k24754 in k24751 in k24748 in k24745 in k24741 in k24738 in k24735 in k24728 in k24710 in a36350 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_24790(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24790,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_24793,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 380  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[849]);}

/* k24791 in k24788 in k24785 in k24782 in k24754 in k24751 in k24748 in k24745 in k24741 in k24738 in k24735 in k24728 in k24710 in a36350 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_24793(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24793,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_24796,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 380  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[848]);}

/* k24794 in k24791 in k24788 in k24785 in k24782 in k24754 in k24751 in k24748 in k24745 in k24741 in k24738 in k24735 in k24728 in k24710 in a36350 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_24796(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word ab[120],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24796,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)t0)[10]);
t3=(C_word)C_a_i_list(&a,2,((C_word*)t0)[9],C_fix(0));
t4=(C_word)C_a_i_list(&a,3,lf[777],C_SCHEME_END_OF_LIST,((C_word*)t0)[10]);
t5=(C_word)C_a_i_list(&a,2,lf[778],t4);
t6=(C_word)C_a_i_list(&a,1,((C_word*)t0)[8]);
t7=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[9],((C_word*)t0)[8]);
t8=(C_word)C_a_i_list(&a,3,lf[777],t6,t7);
t9=(C_word)C_a_i_list(&a,2,lf[780],t8);
t10=(C_word)C_a_i_list(&a,3,t3,t5,t9);
t11=(C_word)C_a_i_list(&a,1,t1);
t12=(C_word)C_a_i_list(&a,1,((C_word*)t0)[7]);
t13=(C_word)C_a_i_list(&a,1,lf[781]);
t14=(C_word)C_a_i_list(&a,4,lf[782],((C_word*)t0)[7],t13,lf[846]);
t15=(C_word)C_a_i_list(&a,2,t1,C_fix(-2));
t16=(C_word)C_a_i_list(&a,4,lf[777],t12,t14,t15);
t17=(C_word)C_a_i_list(&a,3,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1],C_fix(-1));
t18=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_24855,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t2,a[5]=t10,a[6]=t11,a[7]=t16,a[8]=t17,tmp=(C_word)a,a+=9,tmp);
t19=(C_word)C_a_i_list(&a,1,((C_word*)t0)[9]);
C_trace("##sys#append");
t20=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t20+1)))(4,t20,t18,((C_word*)((C_word*)t0)[2])[1],t19);}

/* k24853 in k24794 in k24791 in k24788 in k24785 in k24782 in k24754 in k24751 in k24748 in k24745 in k24741 in k24738 in k24735 in k24728 in k24710 in a36350 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_24855(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[72],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24855,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[16],t1);
t3=(C_word)C_a_i_list(&a,3,lf[847],((C_word*)t0)[8],t2);
t4=(C_word)C_a_i_list(&a,3,lf[777],C_SCHEME_END_OF_LIST,t3);
t5=(C_word)C_a_i_list(&a,3,lf[730],((C_word*)t0)[7],t4);
t6=(C_word)C_a_i_list(&a,3,lf[777],((C_word*)t0)[6],t5);
t7=(C_word)C_a_i_list(&a,2,lf[731],t6);
t8=(C_word)C_a_i_list(&a,3,lf[2],((C_word*)t0)[5],t7);
t9=(C_word)C_a_i_list(&a,3,lf[777],((C_word*)t0)[4],t8);
t10=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t10+1)))(2,t10,(C_word)C_a_i_list(&a,3,lf[2],((C_word*)((C_word*)t0)[2])[1],t9));}

/* a36304 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_36305(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[10],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_36305,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=t5;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_caddr(t2);
t9=(C_word)C_i_cadddr(t2);
t10=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36321,a[2]=t2,a[3]=t1,a[4]=t9,a[5]=t8,a[6]=t7,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 380  fifth");
t11=C_retrieve(lf[47]);
((C_proc3)C_retrieve_proc(t11))(3,t11,t10,t2);}

/* k36319 in a36304 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_36321(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36321,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36324,a[2]=((C_word*)t0)[3],a[3]=t1,a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 380  sixth");
t3=C_retrieve(lf[48]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k36322 in k36319 in a36304 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_36324(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36324,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_36327,a[2]=((C_word*)t0)[2],a[3]=t3,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[6])+1,t5);
t7=t4;
f_36327(t7,t6);}
else{
t5=t4;
f_36327(t5,C_SCHEME_UNDEFINED);}}

/* k36325 in k36322 in k36319 in a36304 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_36327(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_36327,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_36330,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
t3=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=t2;
f_36330(t5,t4);}
else{
t3=t2;
f_36330(t3,C_SCHEME_UNDEFINED);}}

/* k36328 in k36325 in k36322 in k36319 in a36304 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_36330(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_36330,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,6,((C_word*)t0)[8],((C_word*)((C_word*)t0)[7])[1],((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_36341,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  parse-unit-position");
f_22640(t3,((C_word*)t0)[8]);}

/* k36339 in k36328 in k36325 in k36322 in k36319 in a36304 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_36341(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  make-parse-unit");
f_22583(((C_word*)t0)[3],C_fix(32512),((C_word*)t0)[2],t1);}

/* k36297 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_36299(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  hash-table-set!");
t2=C_retrieve(lf[790]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[385],"*rules*"),C_fix(32512),t1);}

/* k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_25212(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word ab[63],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25212,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25215,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36154,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(512),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[417],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(25088),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(256),t7);
t9=(C_word)C_a_i_cons(&a,2,lf[102],t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t11=(C_word)C_a_i_cons(&a,2,t9,t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(25088),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(512),t12);
t14=(C_word)C_a_i_cons(&a,2,lf[417],t13);
t15=(C_word)C_a_i_cons(&a,2,t14,C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,t6,t15);
t17=(C_word)C_a_i_cons(&a,2,lf[418],t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t19=(C_word)C_a_i_cons(&a,2,t17,t18);
t20=(C_word)C_a_i_cons(&a,2,C_fix(25088),t19);
t21=(C_word)C_a_i_cons(&a,2,lf[417],t20);
t22=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36160,a[2]=((C_word)li592),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  make-rule");
f_22282(t3,lf[845],C_fix(37632),t21,t22,C_SCHEME_FALSE);}

/* a36159 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_36160(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[13],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_36160,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=t5;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_caddr(t2);
t9=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_36173,a[2]=t1,a[3]=t8,a[4]=t7,a[5]=t4,tmp=(C_word)a,a+=6,tmp);
t10=(C_word)C_i_length(((C_word*)t7)[1]);
if(C_truep((C_word)C_i_nequalp(t10,C_fix(2)))){
t11=C_set_block_item(t7,0,C_SCHEME_END_OF_LIST);
t12=t9;
f_36173(t12,t11);}
else{
t11=(C_word)C_i_cadr(((C_word*)t7)[1]);
t12=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_36199,a[2]=t9,a[3]=t7,a[4]=t11,tmp=(C_word)a,a+=5,tmp);
t13=(C_word)C_i_caddr(((C_word*)t7)[1]);
C_trace("ChickenBridge.scm: 380  remove-token-type");
f_23918(t12,t13,C_fix(256));}}

/* k36197 in a36159 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_36199(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36199,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_36173(t4,t3);}

/* k36171 in a36159 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_36173(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_36173,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 380  make-parse-unit");
f_22583(((C_word*)t0)[2],C_fix(37632),t2,C_SCHEME_FALSE);}

/* k36152 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_36154(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  hash-table-set!");
t2=C_retrieve(lf[790]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[385],"*rules*"),C_fix(37632),t1);}

/* k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_25215(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word ab[72],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25215,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25218,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35697,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(30208),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[102],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(30208),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(24576),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[417],t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(37632),C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,C_fix(24064),t11);
t13=(C_word)C_a_i_cons(&a,2,lf[417],t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(37632),C_SCHEME_END_OF_LIST);
t15=(C_word)C_a_i_cons(&a,2,C_fix(24320),t14);
t16=(C_word)C_a_i_cons(&a,2,lf[417],t15);
t17=(C_word)C_a_i_cons(&a,2,t16,C_SCHEME_END_OF_LIST);
t18=(C_word)C_a_i_cons(&a,2,t13,t17);
t19=(C_word)C_a_i_cons(&a,2,t10,t18);
t20=(C_word)C_a_i_cons(&a,2,lf[418],t19);
t21=(C_word)C_a_i_cons(&a,2,t20,C_SCHEME_END_OF_LIST);
t22=(C_word)C_a_i_cons(&a,2,C_fix(13824),t21);
t23=(C_word)C_a_i_cons(&a,2,lf[417],t22);
t24=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35703,a[2]=((C_word)li588),tmp=(C_word)a,a+=3,tmp);
t25=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35742,a[2]=((C_word)li591),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  make-rule");
f_22282(t3,lf[844],C_fix(36352),t23,t24,t25);}

/* a35741 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_35742(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_35742,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35746,a[2]=t4,a[3]=t5,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  parse-unit-parsed");
f_22622(t6,t2);}

/* k35744 in a35741 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_35746(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35746,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=(C_word)C_a_i_list(&a,1,lf[443]);
t4=t3;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35755,a[2]=t3,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t7=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_35758,a[2]=t2,a[3]=t3,a[4]=t6,a[5]=((C_word*)t0)[2],a[6]=((C_word*)t0)[3],a[7]=t5,a[8]=t1,tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 380  token-unit-type=?");
f_22668(t7,t2,C_fix(24576));}

/* k35756 in k35744 in a35741 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_35758(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35758,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cdr(((C_word*)t0)[8]);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35767,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=t4,a[5]=((C_word*)t0)[7],a[6]=((C_word)li589),tmp=(C_word)a,a+=7,tmp));
t6=((C_word*)t4)[1];
f_35767(t6,((C_word*)t0)[4],t2);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35816,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[8]);
C_trace("ChickenBridge.scm: 380  parse-unit-parsed");
f_22622(t2,t3);}}

/* k35814 in k35756 in k35744 in a35741 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_35816(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35816,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35819,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,tmp=(C_word)a,a+=8,tmp);
t3=(C_word)C_i_car(t1);
C_trace("ChickenBridge.scm: 380  emit");
f_22740(t2,t3,((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]);}

/* k35817 in k35814 in k35756 in k35744 in a35741 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_35819(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35819,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_35822,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=t1,tmp=(C_word)a,a+=9,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[7]);
C_trace("ChickenBridge.scm: 380  emit");
f_22740(t2,t3,((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]);}

/* k35820 in k35817 in k35814 in k35756 in k35744 in a35741 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_35822(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35822,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_36034,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 380  append");
t3=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,t1,C_SCHEME_END_OF_LIST);}

/* k36032 in k35820 in k35817 in k35814 in k35756 in k35744 in a35741 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_36034(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36034,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[9],t1);
t3=(C_word)C_i_caddr(((C_word*)t0)[8]);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_35831,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t3,a[5]=t2,a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[5],a[9]=((C_word*)t0)[6],a[10]=((C_word*)t0)[7],a[11]=t7,a[12]=t5,tmp=(C_word)a,a+=13,tmp);
t9=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t9))){
t10=t8;
f_35831(t10,C_SCHEME_UNDEFINED);}
else{
t10=(C_word)C_i_length(t2);
t11=(C_word)C_a_i_minus(&a,2,t10,C_fix(2));
t12=(C_word)C_i_list_tail(t2,t11);
t13=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35972,a[2]=t12,a[3]=t8,tmp=(C_word)a,a+=4,tmp);
t14=(C_word)C_i_cadr(t12);
C_trace("ChickenBridge.scm: 380  symbol->string");
t15=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t15))(3,t15,t13,t14);}}

/* k35970 in k36032 in k35820 in k35817 in k35814 in k35756 in k35744 in a35741 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_35972(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35972,2,t0,t1);}
t2=(C_word)C_i_string_length(t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_35981,a[2]=t1,a[3]=t2,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_greaterp(t2,C_fix(3)))){
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36006,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_a_i_minus(&a,2,t2,C_fix(3));
C_trace("ChickenBridge.scm: 380  substring");
t6=*((C_word*)lf[457]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,t1,t5);}
else{
t4=t3;
f_35981(t4,C_SCHEME_FALSE);}}

/* k36004 in k35970 in k36032 in k35820 in k35817 in k35814 in k35756 in k35744 in a35741 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_36006(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_35981(t2,(C_word)C_i_string_equal_p(t1,lf[843]));}

/* k35979 in k35970 in k36032 in k35820 in k35817 in k35814 in k35756 in k35744 in a35741 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_35981(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_35981,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35988,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35992,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[3],C_fix(3));
C_trace("ChickenBridge.scm: 380  substring");
t5=*((C_word*)lf[457]+1);
((C_proc5)C_retrieve_proc(t5))(5,t5,t3,((C_word*)t0)[2],C_fix(0),t4);}
else{
t2=((C_word*)t0)[5];
f_35831(t2,C_SCHEME_UNDEFINED);}}

/* k35990 in k35979 in k35970 in k36032 in k35820 in k35817 in k35814 in k35756 in k35744 in a35741 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_35992(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  string->symbol");
t2=*((C_word*)lf[415]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k35986 in k35979 in k35970 in k36032 in k35820 in k35817 in k35814 in k35756 in k35744 in a35741 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_35988(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_35831(t2,(C_word)C_i_set_cdr(((C_word*)t0)[2],t1));}

/* k35829 in k36032 in k35820 in k35817 in k35814 in k35756 in k35744 in a35741 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_35831(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_35831,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35834,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[11],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_35909,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t2,a[6]=((C_word*)t0)[12],a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[6],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 380  token-unit-type=?");
f_22668(t3,((C_word*)t0)[2],C_fix(24064));}

/* k35907 in k35829 in k36032 in k35820 in k35817 in k35814 in k35756 in k35744 in a35741 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_35909(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35909,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_35913,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 380  add-emit-info");
f_22712(t2,lf[840],C_SCHEME_TRUE,((C_word*)((C_word*)t0)[9])[1]);}
else{
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_35950,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 380  token-unit-type=?");
f_22668(t2,((C_word*)t0)[2],C_fix(24320));}}

/* k35948 in k35907 in k35829 in k36032 in k35820 in k35817 in k35814 in k35756 in k35744 in a35741 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_35950(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35950,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_35954,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 380  add-emit-info");
f_22712(t2,lf[842],C_SCHEME_TRUE,((C_word*)((C_word*)t0)[8])[1]);}
else{
t2=((C_word*)t0)[4];
f_35834(t2,C_SCHEME_UNDEFINED);}}

/* k35952 in k35948 in k35907 in k35829 in k36032 in k35820 in k35817 in k35814 in k35756 in k35744 in a35741 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_35954(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35954,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_35958,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 380  emit");
f_22740(t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[8])[1],((C_word*)t0)[2]);}

/* k35956 in k35952 in k35948 in k35907 in k35829 in k36032 in k35820 in k35817 in k35814 in k35756 in k35744 in a35741 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_35958(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35958,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_a_i_list(&a,3,lf[773],((C_word*)t0)[4],((C_word*)((C_word*)t0)[5])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[5])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[841]);
t6=((C_word*)t0)[2];
f_35834(t6,t5);}

/* k35911 in k35907 in k35829 in k36032 in k35820 in k35817 in k35814 in k35756 in k35744 in a35741 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_35913(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35913,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35917,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 380  emit");
f_22740(t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[8])[1],((C_word*)t0)[2]);}

/* k35915 in k35911 in k35907 in k35829 in k36032 in k35820 in k35817 in k35814 in k35756 in k35744 in a35741 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_35917(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35917,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_35920,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35944,a[2]=t3,a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  get-emit-info");
f_22700(t4,lf[840],((C_word*)((C_word*)t0)[2])[1]);}

/* k35942 in k35915 in k35911 in k35907 in k35829 in k36032 in k35820 in k35817 in k35814 in k35756 in k35744 in a35741 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_35944(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35944,2,t0,t1);}
t2=(C_word)C_eqp(lf[839],t1);
if(C_truep(t2)){
t3=(C_word)C_a_i_list(&a,1,lf[641]);
t4=(C_word)C_a_i_list(&a,3,lf[777],t3,((C_word*)((C_word*)t0)[3])[1]);
t5=(C_word)C_a_i_list(&a,2,lf[731],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_35920(t7,t6);}
else{
t3=((C_word*)t0)[2];
f_35920(t3,C_SCHEME_UNDEFINED);}}

/* k35918 in k35915 in k35911 in k35907 in k35829 in k36032 in k35820 in k35817 in k35814 in k35756 in k35744 in a35741 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_35920(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_35920,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,lf[773],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[838]);
t5=((C_word*)t0)[2];
f_35834(t5,t4);}

/* k35832 in k35829 in k36032 in k35820 in k35817 in k35814 in k35756 in k35744 in a35741 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_35834(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_35834,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_35837,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35848,a[2]=((C_word*)t0)[3],a[3]=t2,a[4]=((C_word*)t0)[7],tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35906,a[2]=((C_word*)t0)[7],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  symbol->string");
t5=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,((C_word*)t0)[2]);}

/* k35904 in k35832 in k35829 in k36032 in k35820 in k35817 in k35814 in k35756 in k35744 in a35741 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_35906(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  string-append");
t2=*((C_word*)lf[165]+1);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1,lf[837]);}

/* k35846 in k35832 in k35829 in k36032 in k35820 in k35817 in k35814 in k35756 in k35744 in a35741 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_35848(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35848,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35850,a[2]=t3,a[3]=((C_word*)t0)[4],a[4]=((C_word)li590),tmp=(C_word)a,a+=5,tmp));
t5=((C_word*)t3)[1];
f_35850(t5,((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* do3952 in k35846 in k35832 in k35829 in k36032 in k35820 in k35817 in k35814 in k35756 in k35744 in a35741 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_35850(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_35850,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t3))){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35865,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  string-append");
t6=*((C_word*)lf[165]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,((C_word*)t4)[1],lf[835]);}
else{
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_35869,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t3,a[5]=t4,tmp=(C_word)a,a+=6,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35898,a[2]=t4,a[3]=t5,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_car(t3);
C_trace("ChickenBridge.scm: 380  symbol->string");
t8=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t8))(3,t8,t6,t7);}}

/* k35896 in do3952 in k35846 in k35832 in k35829 in k36032 in k35820 in k35817 in k35814 in k35756 in k35744 in a35741 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_35898(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  string-append");
t2=*((C_word*)lf[165]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k35867 in do3952 in k35846 in k35832 in k35829 in k36032 in k35820 in k35817 in k35814 in k35756 in k35744 in a35741 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_35869(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35869,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_35872,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_i_cdr(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_nullp(t4))){
t5=t3;
f_35872(t5,C_SCHEME_UNDEFINED);}
else{
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35886,a[2]=t3,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  string-append");
t6=*((C_word*)lf[165]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,((C_word*)((C_word*)t0)[5])[1],lf[836]);}}

/* k35884 in k35867 in do3952 in k35846 in k35832 in k35829 in k36032 in k35820 in k35817 in k35814 in k35756 in k35744 in a35741 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_35886(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_35872(t3,t2);}

/* k35870 in k35867 in do3952 in k35846 in k35832 in k35829 in k36032 in k35820 in k35817 in k35814 in k35756 in k35744 in a35741 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_35872(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
t3=((C_word*)((C_word*)t0)[4])[1];
f_35850(t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t2);}

/* k35863 in do3952 in k35846 in k35832 in k35829 in k36032 in k35820 in k35817 in k35814 in k35756 in k35744 in a35741 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_35865(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35865,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,lf[466],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t3);}

/* k35835 in k35832 in k35829 in k36032 in k35820 in k35817 in k35814 in k35756 in k35744 in a35741 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_35837(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35837,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t3=((C_word*)t0)[3];
f_35755(2,t3,(C_word)C_i_set_cdr(((C_word*)t0)[2],t2));}

/* do3926 in k35756 in k35744 in a35741 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_35767(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_35767,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_35777,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 380  emit");
f_22740(t3,t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2]);}}

/* k35775 in do3926 in k35756 in k35744 in a35741 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_35777(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35777,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35783,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t2,a[7]=t1,tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 380  sprintf");
t4=C_retrieve(lf[31]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,lf[834],t2);}

/* k35781 in k35775 in do3926 in k35756 in k35744 in a35741 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_35783(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35783,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[773],((C_word*)t0)[7]);
t3=(C_word)C_a_i_list(&a,3,lf[465],t1,((C_word*)t0)[6]);
t4=(C_word)C_a_i_list(&a,2,t2,t3);
t5=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[5])[1],t4);
t6=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[5])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[5])+1,t6);
t8=(C_word)C_i_cdr(((C_word*)t0)[4]);
t9=((C_word*)((C_word*)t0)[3])[1];
f_35767(t9,((C_word*)t0)[2],t8);}

/* k35753 in k35744 in a35741 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_35755(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* a35702 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_35703(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[11],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_35703,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(C_word)C_i_cadr(((C_word*)t4)[1]);
t6=C_set_block_item(t4,0,t5);
t7=(C_word)C_i_car(((C_word*)t4)[1]);
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35714,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35720,a[2]=t8,a[3]=t7,a[4]=t4,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  token-unit-type=?");
f_22668(t9,t7,C_fix(24576));}

/* k35718 in a35702 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_35720(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35720,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_35736,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_i_caddr(((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 380  remove-token-type");
f_23918(t3,t4,C_fix(256));}
else{
t2=((C_word*)t0)[2];
f_35714(t2,C_SCHEME_UNDEFINED);}}

/* k35734 in k35718 in a35702 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_35736(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35736,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[5],t1);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_35714(t5,t4);}

/* k35712 in a35702 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_35714(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  make-parse-unit");
f_22583(((C_word*)t0)[3],C_fix(36352),((C_word*)((C_word*)t0)[2])[1],C_SCHEME_FALSE);}

/* k35695 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_35697(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  hash-table-set!");
t2=C_retrieve(lf[790]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[385],"*rules*"),C_fix(36352),t1);}

/* k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_25218(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[57],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25218,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25221,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35621,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(33792),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(35584),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(35072),t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(36096),t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(34816),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(35328),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(31488),t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(31744),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(32512),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(32256),t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(30464),t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(34304),t14);
t16=(C_word)C_a_i_cons(&a,2,C_fix(34560),t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(33536),t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(32000),t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(36352),t18);
t20=(C_word)C_a_i_cons(&a,2,lf[418],t19);
C_trace("ChickenBridge.scm: 380  make-rule");
f_22282(t3,lf[833],C_fix(36608),t20,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k35619 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_35621(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  hash-table-set!");
t2=C_retrieve(lf[790]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[385],"*rules*"),C_fix(36608),t1);}

/* k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_25221(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25221,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25224,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35577,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,lf[98],t4);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35583,a[2]=((C_word)li586),tmp=(C_word)a,a+=3,tmp);
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35597,a[2]=((C_word)li587),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  make-rule");
f_22282(t3,lf[832],C_fix(36864),t5,t6,t7);}

/* a35596 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_35597(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_35597,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35605,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35609,a[2]=t4,a[3]=t3,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  parse-unit-parsed");
f_22622(t6,t2);}

/* k35607 in a35596 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_35609(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  emit");
f_22740(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k35603 in a35596 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_35605(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35605,2,t0,t1);}
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,lf[443],t1));}

/* a35582 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_35583(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_35583,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35591,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 380  parse-unit-position");
f_22640(t4,t5);}

/* k35589 in a35582 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_35591(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  make-parse-unit");
f_22583(((C_word*)t0)[3],C_fix(36864),((C_word*)t0)[2],t1);}

/* k35575 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_35577(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  hash-table-set!");
t2=C_retrieve(lf[790]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[385],"*rules*"),C_fix(36864),t1);}

/* k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_25224(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25224,2,t0,t1);}
t2=lf[450]=C_SCHEME_FALSE;;
t3=lf[451]=C_SCHEME_FALSE;;
t4=lf[452]=C_SCHEME_FALSE;;
t5=C_set_block_item(lf[453],0,C_SCHEME_FALSE);
t6=C_mutate((C_word*)lf[454]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25231,a[2]=((C_word)li382),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate((C_word*)lf[465]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25408,a[2]=((C_word)li386),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate((C_word*)lf[475]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25561,a[2]=((C_word)li387),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate((C_word*)lf[476]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25570,a[2]=((C_word)li388),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate((C_word*)lf[484]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25617,a[2]=((C_word)li389),tmp=(C_word)a,a+=3,tmp));
t11=C_mutate((C_word*)lf[486]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25623,a[2]=((C_word)li390),tmp=(C_word)a,a+=3,tmp));
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25642,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t13=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35569,a[2]=((C_word)li585),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 381  ##sys#register-macro-2");
t14=C_retrieve(lf[789]);
((C_proc4)C_retrieve_proc(t14))(4,t14,t12,lf[830],t13);}

/* a35568 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_35569(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_35569,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28995,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 381  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[831]);}

/* k28993 in a35568 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_28995(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28995,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28998,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 381  parse-iteration");
f_28977(t2,lf[830],((C_word*)t0)[2],C_retrieve2(lf[679],"*loop-operators*"));}

/* k28996 in k28993 in a35568 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_28998(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28998,2,t0,t1);}
t2=C_SCHEME_END_OF_LIST;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_assoc(lf[641],C_retrieve2(lf[679],"*loop-operators*"));
t7=(C_word)C_i_cadddr(t6);
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29005,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t3,a[6]=t5,tmp=(C_word)a,a+=7,tmp);
t9=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29150,a[2]=t8,a[3]=t7,tmp=(C_word)a,a+=4,tmp);
t10=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29164,a[2]=t1,a[3]=t9,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 381  loop-returning");
t11=C_retrieve2(lf[497],"loop-returning");
f_25749(3,t11,t10,t1);}

/* k29162 in k28996 in k28993 in a35568 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_29164(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29164,2,t0,t1);}
if(C_truep((C_word)C_i_nullp(t1))){
t2=((C_word*)t0)[3];
f_29150(t2,C_SCHEME_FALSE);}
else{
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29160,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 381  loop-returning");
t3=C_retrieve2(lf[497],"loop-returning");
f_25749(3,t3,t2,((C_word*)t0)[2]);}}

/* k29158 in k29162 in k28996 in k28993 in a35568 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_29160(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_29150(t2,(C_word)C_i_car(t1));}

/* k29148 in k28996 in k28993 in a35568 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_29150(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 381  returnfn");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k29003 in k28996 in k28993 in a35568 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_29005(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29005,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29009,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 381  loop-end-tests");
t4=C_retrieve2(lf[492],"loop-end-tests");
f_25701(3,t4,t3,((C_word*)t0)[2]);}

/* k29007 in k29003 in k28996 in k28993 in a35568 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_29009(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29009,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29012,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(t1))){
t3=t2;
f_29012(t3,C_SCHEME_END_OF_LIST);}
else{
t3=(C_word)C_i_cdr(t1);
t4=(C_word)C_i_nullp(t3);
t5=(C_truep(t4)?(C_word)C_i_car(t1):(C_word)C_a_i_cons(&a,2,lf[418],t1));
t6=(C_word)C_a_i_list(&a,4,lf[20],t5,lf[829],C_SCHEME_FALSE);
t7=t2;
f_29012(t7,(C_word)C_a_i_list(&a,1,t6));}}

/* k29010 in k29007 in k29003 in k28996 in k28993 in a35568 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_29012(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29012,NULL,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29023,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 381  loop-bindings");
t4=C_retrieve2(lf[489],"loop-bindings");
f_25665(3,t4,t3,((C_word*)t0)[2]);}

/* k29021 in k29010 in k29007 in k29003 in k28996 in k28993 in a35568 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_29023(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29023,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29027,a[2]=((C_word*)t0)[6],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29031,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t2,a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 381  loop-initially");
t4=C_retrieve2(lf[491],"loop-initially");
f_25689(3,t4,t3,((C_word*)t0)[3]);}

/* k29029 in k29021 in k29010 in k29007 in k29003 in k28996 in k28993 in a35568 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_29031(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29031,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,lf[641]);
t3=(C_word)C_a_i_list(&a,1,lf[823]);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_29095,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t1,a[5]=((C_word*)t0)[5],a[6]=t2,a[7]=t3,a[8]=((C_word*)t0)[6],tmp=(C_word)a,a+=9,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29099,a[2]=((C_word*)t0)[2],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29103,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[6],a[4]=t5,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 381  loop-looping");
t7=C_retrieve2(lf[493],"loop-looping");
f_25713(3,t7,t6,((C_word*)t0)[3]);}

/* k29101 in k29029 in k29021 in k29010 in k29007 in k29003 in k28996 in k28993 in a35568 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_29103(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29103,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29107,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29111,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 381  loop-stepping");
t4=C_retrieve2(lf[495],"loop-stepping");
f_25725(3,t4,t3,((C_word*)t0)[2]);}

/* k29109 in k29101 in k29029 in k29021 in k29010 in k29007 in k29003 in k28996 in k28993 in a35568 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_29111(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29111,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)t0)[3]);
t3=(C_word)C_a_i_list(&a,1,t2);
C_trace("ChickenBridge.scm: 381  ##sys#append");
t4=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,((C_word*)t0)[2],t1,t3);}

/* k29105 in k29101 in k29029 in k29021 in k29010 in k29007 in k29003 in k28996 in k28993 in a35568 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_29107(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 381  ##sys#append");
t2=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k29097 in k29029 in k29021 in k29010 in k29007 in k29003 in k28996 in k28993 in a35568 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_29099(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 381  ##sys#append");
t2=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k29093 in k29029 in k29021 in k29010 in k29007 in k29003 in k28996 in k28993 in a35568 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_29095(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[34],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29095,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,C_SCHEME_END_OF_LIST,t1);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[8],t2);
t4=(C_word)C_a_i_cons(&a,2,lf[1],t3);
t5=(C_word)C_a_i_list(&a,3,lf[777],((C_word*)t0)[7],t4);
t6=(C_word)C_a_i_list(&a,2,lf[731],t5);
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29063,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=t6,tmp=(C_word)a,a+=6,tmp);
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29067,a[2]=t7,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 381  loop-finally");
t9=C_retrieve2(lf[496],"loop-finally");
f_25737(3,t9,t8,((C_word*)t0)[2]);}

/* k29065 in k29093 in k29029 in k29021 in k29010 in k29007 in k29003 in k28996 in k28993 in a35568 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_29067(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29067,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 381  ##sys#append");
t3=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[2],t1,t2);}

/* k29061 in k29093 in k29029 in k29021 in k29010 in k29007 in k29003 in k28996 in k28993 in a35568 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_29063(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29063,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[5],t1);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t2);
t4=(C_word)C_a_i_cons(&a,2,lf[777],t3);
t5=(C_word)C_a_i_list(&a,2,lf[731],t4);
t6=(C_word)C_a_i_list(&a,1,t5);
C_trace("ChickenBridge.scm: 381  ##sys#append");
t7=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t7+1)))(4,t7,((C_word*)t0)[3],((C_word*)t0)[2],t6);}

/* k29025 in k29021 in k29010 in k29007 in k29003 in k28996 in k28993 in a35568 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_29027(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29027,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,lf[1],t2));}

/* k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_25642(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25642,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25645,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35555,a[2]=((C_word)li584),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 381  ##sys#register-macro");
t4=C_retrieve(lf[775]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[828],t3);}

/* a35554 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_35555(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[27],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_35555,4,t0,t1,t2,t3);}
t4=(C_word)C_a_i_list(&a,3,lf[827],t2,t3);
t5=(C_word)C_a_i_list(&a,3,lf[12],t3,t4);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_a_i_list(&a,3,lf[443],t5,t3));}

/* k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_25645(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25645,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25648,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35526,a[2]=((C_word)li583),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 381  ##sys#register-macro");
t4=C_retrieve(lf[775]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[826],t3);}

/* a35525 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_35526(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_35526,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35530,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 381  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[825]);}

/* k35528 in a35525 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_35530(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[42],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35530,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,lf[8],((C_word*)t0)[3]);
t3=(C_word)C_a_i_list(&a,2,t1,t2);
t4=(C_word)C_a_i_list(&a,1,t3);
t5=(C_word)C_a_i_list(&a,2,lf[15],((C_word*)t0)[3]);
t6=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[3],t5);
t7=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_a_i_list(&a,4,lf[1],t4,t6,t1));}

/* k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_25648(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25648,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25651,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35523,a[2]=((C_word)li582),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 381  ##sys#register-macro");
t4=C_retrieve(lf[775]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[824],t3);}

/* a35522 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_35523(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_35523,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}

/* k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_25651(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word t36;
C_word t37;
C_word t38;
C_word t39;
C_word t40;
C_word t41;
C_word t42;
C_word t43;
C_word t44;
C_word t45;
C_word t46;
C_word t47;
C_word t48;
C_word t49;
C_word t50;
C_word t51;
C_word t52;
C_word t53;
C_word t54;
C_word t55;
C_word t56;
C_word t57;
C_word t58;
C_word t59;
C_word t60;
C_word t61;
C_word t62;
C_word t63;
C_word t64;
C_word t65;
C_word t66;
C_word t67;
C_word t68;
C_word t69;
C_word t70;
C_word t71;
C_word t72;
C_word t73;
C_word ab[492],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25651,2,t0,t1);}
t2=C_mutate(&lf[488],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25659,a[2]=((C_word)li391),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[489],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25665,a[2]=((C_word)li392),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate(&lf[490],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25677,a[2]=((C_word)li393),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate(&lf[491],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25689,a[2]=((C_word)li394),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate(&lf[492],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25701,a[2]=((C_word)li395),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate(&lf[493],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25713,a[2]=((C_word)li396),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate(&lf[494],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25719,a[2]=((C_word)li397),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate(&lf[495],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25725,a[2]=((C_word)li398),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate(&lf[496],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25737,a[2]=((C_word)li399),tmp=(C_word)a,a+=3,tmp));
t11=C_mutate(&lf[497],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25749,a[2]=((C_word)li400),tmp=(C_word)a,a+=3,tmp));
t12=C_mutate(&lf[498],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25761,a[2]=((C_word)li402),tmp=(C_word)a,a+=3,tmp));
t13=C_mutate(&lf[508],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25912,a[2]=((C_word)li405),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate(&lf[509],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25983,a[2]=((C_word)li406),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate(&lf[510],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25989,a[2]=((C_word)li407),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate(&lf[511],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25995,a[2]=((C_word)li408),tmp=(C_word)a,a+=3,tmp));
t17=C_mutate(&lf[512],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26001,a[2]=((C_word)li412),tmp=(C_word)a,a+=3,tmp));
t18=C_mutate(&lf[520],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26161,a[2]=((C_word)li413),tmp=(C_word)a,a+=3,tmp));
t19=C_mutate(&lf[528],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26243,a[2]=((C_word)li415),tmp=(C_word)a,a+=3,tmp));
t20=C_mutate(&lf[558],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26625,a[2]=((C_word)li418),tmp=(C_word)a,a+=3,tmp));
t21=C_mutate(&lf[561],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26672,a[2]=((C_word)li420),tmp=(C_word)a,a+=3,tmp));
t22=C_mutate(&lf[580],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27023,a[2]=((C_word)li422),tmp=(C_word)a,a+=3,tmp));
t23=C_mutate(&lf[588],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27165,a[2]=((C_word)li424),tmp=(C_word)a,a+=3,tmp));
t24=C_mutate(&lf[602],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27358,a[2]=((C_word)li426),tmp=(C_word)a,a+=3,tmp));
t25=C_mutate(&lf[605],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27425,a[2]=((C_word)li427),tmp=(C_word)a,a+=3,tmp));
t26=C_mutate(&lf[608],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27463,a[2]=((C_word)li428),tmp=(C_word)a,a+=3,tmp));
t27=C_mutate(&lf[611],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27622,a[2]=((C_word)li434),tmp=(C_word)a,a+=3,tmp));
t28=C_mutate(&lf[640],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28168,a[2]=((C_word)li435),tmp=(C_word)a,a+=3,tmp));
t29=C_mutate(&lf[642],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28174,a[2]=((C_word)li436),tmp=(C_word)a,a+=3,tmp));
t30=C_mutate(&lf[648],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28240,a[2]=((C_word)li437),tmp=(C_word)a,a+=3,tmp));
t31=C_mutate(&lf[654],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28331,a[2]=((C_word)li438),tmp=(C_word)a,a+=3,tmp));
t32=C_mutate(&lf[657],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28432,a[2]=((C_word)li442),tmp=(C_word)a,a+=3,tmp));
t33=C_mutate(&lf[663],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28563,a[2]=((C_word)li447),tmp=(C_word)a,a+=3,tmp));
t34=C_mutate(&lf[669],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28977,a[2]=((C_word)li452),tmp=(C_word)a,a+=3,tmp));
t35=(C_word)C_a_i_list(&a,3,lf[589],C_retrieve2(lf[588],"parse-with"),C_SCHEME_FALSE);
t36=(C_word)C_a_i_list(&a,3,lf[502],C_retrieve2(lf[608],"parse-initially"),C_SCHEME_FALSE);
t37=(C_word)C_a_i_list(&a,3,lf[677],C_retrieve2(lf[558],"parse-repeat"),lf[674]);
t38=(C_word)C_a_i_list(&a,2,lf[536],C_retrieve2(lf[528],"parse-numerical-for"));
t39=(C_word)C_a_i_list(&a,2,lf[532],C_retrieve2(lf[528],"parse-numerical-for"));
t40=(C_word)C_a_i_list(&a,2,lf[534],C_retrieve2(lf[528],"parse-numerical-for"));
t41=(C_word)C_a_i_list(&a,2,lf[543],C_retrieve2(lf[528],"parse-numerical-for"));
t42=(C_word)C_a_i_list(&a,2,lf[533],C_retrieve2(lf[528],"parse-numerical-for"));
t43=(C_word)C_a_i_list(&a,2,lf[535],C_retrieve2(lf[528],"parse-numerical-for"));
t44=(C_word)C_a_i_list(&a,2,lf[568],C_retrieve2(lf[561],"parse-sequence-iteration"));
t45=(C_word)C_a_i_list(&a,2,lf[577],C_retrieve2(lf[561],"parse-sequence-iteration"));
t46=(C_word)C_a_i_list(&a,2,lf[562],C_retrieve2(lf[561],"parse-sequence-iteration"));
t47=(C_word)C_a_i_list(&a,2,lf[581],C_retrieve2(lf[580],"parse-general-iteration"));
t48=(C_word)C_a_i_list(&a,2,lf[567],C_retrieve2(lf[561],"parse-sequence-iteration"));
t49=(C_word)C_a_i_list(&a,14,lf[529],C_retrieve2(lf[520],"parse-for"),lf[674],t38,t39,t40,t41,t42,t43,t44,t45,t46,t47,t48);
t50=(C_word)C_a_i_list(&a,3,lf[678],C_retrieve2(lf[520],"parse-for"),lf[674]);
t51=(C_word)C_a_i_list(&a,3,lf[670],C_retrieve2(lf[602],"parse-do"),lf[661]);
t52=(C_word)C_a_i_list(&a,3,lf[622],C_retrieve2(lf[611],"parse-accumulation"),lf[661]);
t53=(C_word)C_a_i_list(&a,3,lf[18],C_retrieve2(lf[611],"parse-accumulation"),lf[661]);
t54=(C_word)C_a_i_list(&a,3,lf[627],C_retrieve2(lf[611],"parse-accumulation"),lf[661]);
t55=(C_word)C_a_i_list(&a,3,lf[612],C_retrieve2(lf[611],"parse-accumulation"),lf[661]);
t56=(C_word)C_a_i_list(&a,3,lf[613],C_retrieve2(lf[611],"parse-accumulation"),lf[661]);
t57=(C_word)C_a_i_list(&a,3,lf[615],C_retrieve2(lf[611],"parse-accumulation"),lf[661]);
t58=(C_word)C_a_i_list(&a,3,lf[616],C_retrieve2(lf[611],"parse-accumulation"),lf[661]);
t59=(C_word)C_a_i_list(&a,4,lf[649],C_retrieve2(lf[648],"parse-thereis"),lf[661],C_retrieve2(lf[640],"loop-return"));
t60=(C_word)C_a_i_list(&a,4,lf[650],C_retrieve2(lf[648],"parse-thereis"),lf[661],C_retrieve2(lf[640],"loop-return"));
t61=(C_word)C_a_i_list(&a,4,lf[651],C_retrieve2(lf[648],"parse-thereis"),lf[661],C_retrieve2(lf[640],"loop-return"));
t62=(C_word)C_a_i_list(&a,4,lf[641],C_retrieve2(lf[654],"parse-return"),lf[661],C_retrieve2(lf[640],"loop-return"));
t63=(C_word)C_a_i_list(&a,3,lf[645],C_retrieve2(lf[642],"parse-while-until"),C_SCHEME_FALSE);
t64=(C_word)C_a_i_list(&a,3,lf[644],C_retrieve2(lf[642],"parse-while-until"),C_SCHEME_FALSE);
t65=(C_word)C_a_i_list(&a,3,lf[11],C_retrieve2(lf[663],"parse-conditional"),lf[661]);
t66=(C_word)C_a_i_list(&a,3,lf[6],C_retrieve2(lf[663],"parse-conditional"),lf[661]);
t67=(C_word)C_a_i_list(&a,3,lf[20],C_retrieve2(lf[663],"parse-conditional"),lf[661]);
t68=(C_word)C_a_i_list(&a,3,lf[506],C_retrieve2(lf[605],"parse-finally"),C_SCHEME_FALSE);
t69=(C_word)C_a_i_list(&a,23,t35,t36,t37,t49,t50,t51,t52,t53,t54,t55,t56,t57,t58,t59,t60,t61,t62,t63,t64,t65,t66,t67,t68);
t70=C_mutate(&lf[679],t69);
t71=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29171,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t72=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35381,a[2]=((C_word)li581),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 381  ##sys#register-macro-2");
t73=C_retrieve(lf[789]);
((C_proc4)C_retrieve_proc(t73))(4,t73,t71,lf[674],t72);}

/* a35380 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_35381(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_35381,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29177,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 381  parse-iteration");
f_28977(t3,lf[674],t2,C_retrieve2(lf[679],"*loop-operators*"));}

/* k29175 in a35380 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_29177(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29177,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29180,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_assoc(lf[641],C_retrieve2(lf[679],"*loop-operators*"));
t4=(C_word)C_i_cadddr(t3);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29309,a[2]=t4,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 381  loop-returning");
t6=C_retrieve2(lf[497],"loop-returning");
f_25749(3,t6,t5,t1);}

/* k29307 in k29175 in a35380 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_29309(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29309,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=(C_word)C_a_i_list(&a,1,t2);
C_apply(4,0,((C_word*)t0)[3],((C_word*)t0)[2],t3);}

/* k29178 in k29175 in a35380 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_29180(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29180,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29191,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 381  loop-bindings");
t3=C_retrieve2(lf[489],"loop-bindings");
f_25665(3,t3,t2,((C_word*)t0)[2]);}

/* k29189 in k29178 in k29175 in a35380 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_29191(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29191,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29195,a[2]=((C_word*)t0)[4],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29199,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 381  loop-initially");
t4=C_retrieve2(lf[491],"loop-initially");
f_25689(3,t4,t3,((C_word*)t0)[2]);}

/* k29197 in k29189 in k29178 in k29175 in a35380 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_29199(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29199,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29219,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29223,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 381  loop-end-tests");
t4=C_retrieve2(lf[492],"loop-end-tests");
f_25701(3,t4,t3,((C_word*)t0)[2]);}

/* k29221 in k29197 in k29189 in k29178 in k29175 in a35380 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_29223(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29223,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29226,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
if(C_truep(t1)){
t3=(C_word)C_i_cdr(t1);
t4=(C_truep(t3)?(C_word)C_a_i_cons(&a,2,lf[418],t1):(C_word)C_i_car(t1));
t5=(C_word)C_a_i_list(&a,2,lf[823],lf[382]);
t6=(C_word)C_a_i_list(&a,3,lf[20],t4,t5);
t7=t2;
f_29226(t7,(C_word)C_a_i_list(&a,1,t6));}
else{
t3=t2;
f_29226(t3,C_SCHEME_END_OF_LIST);}}

/* k29224 in k29221 in k29197 in k29189 in k29178 in k29175 in a35380 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_29226(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29226,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29230,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29234,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 381  loop-looping");
t4=C_retrieve2(lf[493],"loop-looping");
f_25713(3,t4,t3,((C_word*)t0)[2]);}

/* k29232 in k29224 in k29221 in k29197 in k29189 in k29178 in k29175 in a35380 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_29234(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29234,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29238,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29242,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 381  loop-stepping");
t4=C_retrieve2(lf[495],"loop-stepping");
f_25725(3,t4,t3,((C_word*)t0)[2]);}

/* k29240 in k29232 in k29224 in k29221 in k29197 in k29189 in k29178 in k29175 in a35380 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_29242(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29242,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,lf[823],lf[819]);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29258,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29262,a[2]=t3,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 381  loop-finally");
t5=C_retrieve2(lf[496],"loop-finally");
f_25737(3,t5,t4,((C_word*)t0)[2]);}

/* k29260 in k29240 in k29232 in k29224 in k29221 in k29197 in k29189 in k29178 in k29175 in a35380 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_29262(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29262,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)t0)[3]);
C_trace("##sys#append");
t3=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[2],t1,t2);}

/* k29256 in k29240 in k29232 in k29224 in k29221 in k29197 in k29189 in k29178 in k29175 in a35380 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_29258(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29258,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[382],t1);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t2);
C_trace("##sys#append");
t4=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,((C_word*)t0)[3],((C_word*)t0)[2],t3);}

/* k29236 in k29232 in k29224 in k29221 in k29197 in k29189 in k29178 in k29175 in a35380 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_29238(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("##sys#append");
t2=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k29228 in k29224 in k29221 in k29197 in k29189 in k29178 in k29175 in a35380 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_29230(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("##sys#append");
t2=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k29217 in k29197 in k29189 in k29178 in k29175 in a35380 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_29219(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29219,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[819],t1);
t3=(C_word)C_a_i_cons(&a,2,lf[820],t2);
t4=(C_word)C_a_i_list(&a,3,lf[821],lf[822],t3);
t5=(C_word)C_a_i_list(&a,1,t4);
C_trace("##sys#append");
t6=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t6+1)))(4,t6,((C_word*)t0)[3],((C_word*)t0)[2],t5);}

/* k29193 in k29189 in k29178 in k29175 in a35380 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_29195(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29195,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,lf[1],t2));}

/* k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_29171(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word t36;
C_word t37;
C_word t38;
C_word t39;
C_word t40;
C_word t41;
C_word ab[117],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29171,2,t0,t1);}
t2=C_mutate((C_word*)lf[680]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29315,a[2]=((C_word)li454),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate((C_word*)lf[685]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30044,a[2]=((C_word)li456),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate((C_word*)lf[686]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30063,a[2]=((C_word)li458),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate((C_word*)lf[687]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30514,a[2]=((C_word)li460),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate((C_word*)lf[688]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30533,a[2]=((C_word)li462),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate((C_word*)lf[690]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31262,a[2]=((C_word)li464),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate((C_word*)lf[691]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31281,a[2]=((C_word)li466),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate((C_word*)lf[693]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32010,a[2]=((C_word)li468),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate((C_word*)lf[694]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32029,a[2]=((C_word)li470),tmp=(C_word)a,a+=3,tmp));
t11=C_mutate((C_word*)lf[695]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32480,a[2]=((C_word)li472),tmp=(C_word)a,a+=3,tmp));
t12=C_mutate((C_word*)lf[696]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32499,a[2]=((C_word)li474),tmp=(C_word)a,a+=3,tmp));
t13=C_mutate((C_word*)lf[697]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32950,a[2]=((C_word)li476),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate((C_word*)lf[698]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32969,a[2]=((C_word)li478),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate((C_word*)lf[699]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33439,a[2]=((C_word)li480),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate((C_word*)lf[700]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33457,a[2]=((C_word)li482),tmp=(C_word)a,a+=3,tmp));
t17=C_mutate((C_word*)lf[701]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33472,a[2]=((C_word)li484),tmp=(C_word)a,a+=3,tmp));
t18=C_mutate((C_word*)lf[702]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33487,a[2]=((C_word)li486),tmp=(C_word)a,a+=3,tmp));
t19=C_mutate((C_word*)lf[703]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33506,a[2]=((C_word)li488),tmp=(C_word)a,a+=3,tmp));
t20=C_mutate((C_word*)lf[704]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33521,a[2]=((C_word)li490),tmp=(C_word)a,a+=3,tmp));
t21=C_mutate((C_word*)lf[705]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33540,a[2]=((C_word)li492),tmp=(C_word)a,a+=3,tmp));
t22=C_mutate((C_word*)lf[706]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33559,a[2]=((C_word)li494),tmp=(C_word)a,a+=3,tmp));
t23=C_mutate((C_word*)lf[707]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33582,a[2]=((C_word)li496),tmp=(C_word)a,a+=3,tmp));
t24=C_mutate((C_word*)lf[708]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33601,a[2]=((C_word)li498),tmp=(C_word)a,a+=3,tmp));
t25=C_mutate((C_word*)lf[709]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33624,a[2]=((C_word)li501),tmp=(C_word)a,a+=3,tmp));
t26=C_mutate((C_word*)lf[711]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33671,a[2]=((C_word)li504),tmp=(C_word)a,a+=3,tmp));
t27=C_mutate((C_word*)lf[713]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33726,a[2]=((C_word)li506),tmp=(C_word)a,a+=3,tmp));
t28=C_mutate((C_word*)lf[714]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33745,a[2]=((C_word)li508),tmp=(C_word)a,a+=3,tmp));
t29=C_mutate((C_word*)lf[715]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33768,a[2]=((C_word)li510),tmp=(C_word)a,a+=3,tmp));
t30=C_mutate((C_word*)lf[716]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33796,a[2]=((C_word)li512),tmp=(C_word)a,a+=3,tmp));
t31=C_mutate((C_word*)lf[717]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33824,a[2]=((C_word)li514),tmp=(C_word)a,a+=3,tmp));
t32=C_mutate((C_word*)lf[718]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33852,a[2]=((C_word)li516),tmp=(C_word)a,a+=3,tmp));
t33=C_mutate((C_word*)lf[719]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33880,a[2]=((C_word)li518),tmp=(C_word)a,a+=3,tmp));
t34=C_mutate((C_word*)lf[720]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33908,a[2]=((C_word)li520),tmp=(C_word)a,a+=3,tmp));
t35=C_mutate((C_word*)lf[721]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33936,a[2]=((C_word)li522),tmp=(C_word)a,a+=3,tmp));
t36=C_mutate((C_word*)lf[722]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33964,a[2]=((C_word)li524),tmp=(C_word)a,a+=3,tmp));
t37=C_mutate((C_word*)lf[723]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33992,a[2]=((C_word)li526),tmp=(C_word)a,a+=3,tmp));
t38=C_mutate((C_word*)lf[724]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34020,a[2]=((C_word)li528),tmp=(C_word)a,a+=3,tmp));
t39=C_mutate((C_word*)lf[725]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34035,a[2]=((C_word)li535),tmp=(C_word)a,a+=3,tmp));
t40=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34093,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 382  hash-table-set!");
t41=C_retrieve(lf[790]);
((C_proc5)C_retrieve_proc(t41))(5,t41,t40,C_retrieve(lf[29]),lf[817],lf[818]);}

/* k34091 in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_34093(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34093,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34096,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 382  hash-table-set!");
t3=C_retrieve(lf[790]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[815],lf[816]);}

/* k34094 in k34091 in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_34096(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34096,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34099,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 382  hash-table-set!");
t3=C_retrieve(lf[790]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[813],lf[814]);}

/* k34097 in k34094 in k34091 in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_34099(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34099,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34102,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 382  hash-table-set!");
t3=C_retrieve(lf[790]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[811],lf[812]);}

/* k34100 in k34097 in k34094 in k34091 in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_34102(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34102,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34105,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 382  hash-table-set!");
t3=C_retrieve(lf[790]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[809],lf[810]);}

/* k34103 in k34100 in k34097 in k34094 in k34091 in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_34105(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34105,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34108,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 382  hash-table-set!");
t3=C_retrieve(lf[790]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[807],lf[808]);}

/* k34106 in k34103 in k34100 in k34097 in k34094 in k34091 in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_34108(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34108,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34111,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 382  hash-table-set!");
t3=C_retrieve(lf[790]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[805],lf[806]);}

/* k34109 in k34106 in k34103 in k34100 in k34097 in k34094 in k34091 in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_34111(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34111,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34114,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 382  hash-table-set!");
t3=C_retrieve(lf[790]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[803],lf[804]);}

/* k34112 in k34109 in k34106 in k34103 in k34100 in k34097 in k34094 in k34091 in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_34114(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34114,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34117,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 382  hash-table-set!");
t3=C_retrieve(lf[790]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[801],lf[802]);}

/* k34115 in k34112 in k34109 in k34106 in k34103 in k34100 in k34097 in k34094 in k34091 in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_34117(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34117,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34120,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 382  hash-table-set!");
t3=C_retrieve(lf[790]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[799],lf[800]);}

/* k34118 in k34115 in k34112 in k34109 in k34106 in k34103 in k34100 in k34097 in k34094 in k34091 in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_34120(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34120,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34123,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 382  hash-table-set!");
t3=C_retrieve(lf[790]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[797],lf[798]);}

/* k34121 in k34118 in k34115 in k34112 in k34109 in k34106 in k34103 in k34100 in k34097 in k34094 in k34091 in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_34123(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34123,2,t0,t1);}
t2=C_mutate((C_word*)lf[732]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34125,a[2]=((C_word)li537),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate((C_word*)lf[733]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34182,a[2]=((C_word)li539),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate((C_word*)lf[734]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34239,a[2]=((C_word)li541),tmp=(C_word)a,a+=3,tmp));
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34248,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 383  hash-table-set!");
t6=C_retrieve(lf[790]);
((C_proc5)C_retrieve_proc(t6))(5,t6,t5,C_retrieve(lf[29]),lf[795],lf[796]);}

/* k34246 in k34121 in k34118 in k34115 in k34112 in k34109 in k34106 in k34103 in k34100 in k34097 in k34094 in k34091 in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_34248(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34248,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34251,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 383  hash-table-set!");
t3=C_retrieve(lf[790]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[793],lf[794]);}

/* k34249 in k34246 in k34121 in k34118 in k34115 in k34112 in k34109 in k34106 in k34103 in k34100 in k34097 in k34094 in k34091 in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_34251(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34251,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34254,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 383  hash-table-set!");
t3=C_retrieve(lf[790]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[791],lf[792]);}

/* k34252 in k34249 in k34246 in k34121 in k34118 in k34115 in k34112 in k34109 in k34106 in k34103 in k34100 in k34097 in k34094 in k34091 in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_34254(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word ab[67],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34254,2,t0,t1);}
t2=C_mutate((C_word*)lf[735]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34256,a[2]=((C_word)li544),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate((C_word*)lf[466]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34446,a[2]=((C_word)li545),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate((C_word*)lf[455]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34460,a[2]=((C_word)li546),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate((C_word*)lf[743]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34474,a[2]=((C_word)li547),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate((C_word*)lf[744]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34477,a[2]=((C_word)li548),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate(&lf[745],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34489,a[2]=((C_word)li550),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate(&lf[747],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34498,a[2]=((C_word)li552),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate(&lf[748],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34542,a[2]=((C_word)li554),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate((C_word*)lf[477]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34564,a[2]=((C_word)li556),tmp=(C_word)a,a+=3,tmp));
t11=C_mutate((C_word*)lf[749]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34583,a[2]=((C_word)li563),tmp=(C_word)a,a+=3,tmp));
t12=C_mutate((C_word*)lf[752]+1,C_retrieve(lf[744]));
t13=C_mutate((C_word*)lf[753]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34759,a[2]=((C_word)li565),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate((C_word*)lf[759]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34822,a[2]=((C_word)li567),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate((C_word*)lf[760]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34831,a[2]=((C_word)li569),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate((C_word*)lf[761]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34837,a[2]=((C_word)li571),tmp=(C_word)a,a+=3,tmp));
t17=C_mutate((C_word*)lf[762]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34846,a[2]=((C_word)li573),tmp=(C_word)a,a+=3,tmp));
t18=C_mutate((C_word*)lf[764]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34904,a[2]=((C_word)li575),tmp=(C_word)a,a+=3,tmp));
t19=C_mutate(&lf[765],lf[766]);
t20=C_mutate(&lf[767],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34914,a[2]=((C_word)li576),tmp=(C_word)a,a+=3,tmp));
t21=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t22=t21;
t23=(*a=C_VECTOR_TYPE|1,a[1]=t22,tmp=(C_word)a,a+=2,tmp);
t24=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34985,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t25=C_SCHEME_UNDEFINED;
t26=(*a=C_VECTOR_TYPE|1,a[1]=t25,tmp=(C_word)a,a+=2,tmp);
t27=C_set_block_item(t26,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_35318,a[2]=t26,a[3]=t21,a[4]=t23,a[5]=((C_word)li580),tmp=(C_word)a,a+=6,tmp));
t28=((C_word*)t26)[1];
f_35318(t28,t24,C_retrieve2(lf[679],"*loop-operators*"));}

/* do6254 in k34252 in k34249 in k34246 in k34121 in k34118 in k34115 in k34112 in k34109 in k34106 in k34103 in k34100 in k34097 in k34094 in k34091 in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_35318(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[32],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_35318,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=(C_word)C_a_i_list(&a,3,lf[645],C_retrieve2(lf[767],"run-while-until"),C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,3,lf[644],C_retrieve2(lf[767],"run-while-until"),C_SCHEME_FALSE);
t5=(C_word)C_a_i_list(&a,2,t3,t4);
t6=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[4])[1],t5);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_i_cdr(((C_word*)t0)[3]));}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35346,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_car(t4);
if(C_truep((C_truep((C_word)C_i_equalp(t5,lf[622]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[18]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[627]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[612]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[613]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[615]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[616]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[649]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[650]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[651]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[641]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[645]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[644]))?C_SCHEME_TRUE:C_SCHEME_FALSE))))))))))))))){
t6=t3;
f_35346(t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_i_car(t2);
t7=(C_word)C_a_i_list(&a,1,t6);
t8=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[4])[1],t7);
t9=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t10=C_mutate(((C_word *)((C_word*)t0)[4])+1,t9);
t11=t3;
f_35346(t11,t10);}}}

/* k35344 in do6254 in k34252 in k34249 in k34246 in k34121 in k34118 in k34115 in k34112 in k34109 in k34106 in k34103 in k34100 in k34097 in k34094 in k34091 in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_35346(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_35318(t3,((C_word*)t0)[2],t2);}

/* k34983 in k34252 in k34249 in k34246 in k34121 in k34118 in k34115 in k34112 in k34109 in k34106 in k34103 in k34100 in k34097 in k34094 in k34091 in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_34985(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34985,2,t0,t1);}
t2=C_mutate(&lf[770],t1);
t3=C_mutate(&lf[771],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34987,a[2]=((C_word)li577),tmp=(C_word)a,a+=3,tmp));
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35275,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35312,a[2]=((C_word)li579),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 661  ##sys#register-macro-2");
t6=C_retrieve(lf[789]);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,lf[788],t5);}

/* a35311 in k34983 in k34252 in k34249 in k34246 in k34121 in k34118 in k34115 in k34112 in k34109 in k34106 in k34103 in k34100 in k34097 in k34094 in k34091 in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_35312(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_35312,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35030,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 606  parse-iteration");
f_28977(t3,lf[788],t2,C_retrieve2(lf[770],"*run-operators*"));}

/* k35028 in a35311 in k34983 in k34252 in k34249 in k34246 in k34121 in k34118 in k34115 in k34112 in k34109 in k34106 in k34103 in k34100 in k34097 in k34094 in k34091 in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_35030(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35030,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_END_OF_LIST;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_retrieve2(lf[765],"*process-stop*");
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_car(((C_word*)t7)[1]);
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35036,a[2]=t7,a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t3,a[6]=t8,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 614  gensym");
t10=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t10))(3,t10,t9,lf[787]);}

/* k35034 in k35028 in a35311 in k34983 in k34252 in k34249 in k34246 in k34121 in k34118 in k34115 in k34112 in k34109 in k34106 in k34103 in k34100 in k34097 in k34094 in k34091 in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_35036(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35036,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_35039,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 615  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[786]);}

/* k35037 in k35034 in k35028 in a35311 in k34983 in k34252 in k34249 in k34246 in k34121 in k34118 in k34115 in k34112 in k34109 in k34106 in k34103 in k34100 in k34097 in k34094 in k34091 in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_35039(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35039,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_35042,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 616  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[785]);}

/* k35040 in k35037 in k35034 in k35028 in a35311 in k34983 in k34252 in k34249 in k34246 in k34121 in k34118 in k34115 in k34112 in k34109 in k34106 in k34103 in k34100 in k34097 in k34094 in k34091 in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_35042(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35042,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_35046,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t1,a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 618  loop-end-tests");
t3=C_retrieve2(lf[492],"loop-end-tests");
f_25701(3,t3,t2,((C_word*)t0)[3]);}

/* k35044 in k35040 in k35037 in k35034 in k35028 in a35311 in k34983 in k34252 in k34249 in k34246 in k34121 in k34118 in k34115 in k34112 in k34109 in k34106 in k34103 in k34100 in k34097 in k34094 in k34091 in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_35046(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35046,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[10])+1,t1);
t3=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_35049,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[10],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35256,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 619  loop-finally");
t5=C_retrieve2(lf[496],"loop-finally");
f_25737(3,t5,t4,((C_word*)t0)[3]);}

/* k35254 in k35044 in k35040 in k35037 in k35034 in k35028 in a35311 in k34983 in k34252 in k34249 in k34246 in k34121 in k34118 in k34115 in k34112 in k34109 in k34106 in k34103 in k34100 in k34097 in k34094 in k34091 in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_35256(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35256,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35264,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35268,a[2]=t2,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 620  loop-finally");
t4=C_retrieve2(lf[496],"loop-finally");
f_25737(3,t4,t3,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_35049(t2,C_SCHEME_UNDEFINED);}}

/* k35266 in k35254 in k35044 in k35040 in k35037 in k35034 in k35028 in a35311 in k34983 in k34252 in k34249 in k34246 in k34121 in k34118 in k34115 in k34112 in k34109 in k34106 in k34103 in k34100 in k34097 in k34094 in k34091 in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_35268(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35268,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 605  ##sys#append");
t3=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[2],t1,t2);}

/* k35262 in k35254 in k35044 in k35040 in k35037 in k35034 in k35028 in a35311 in k34983 in k34252 in k34249 in k34246 in k34121 in k34118 in k34115 in k34112 in k34109 in k34106 in k34103 in k34100 in k34097 in k34094 in k34091 in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_35264(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35264,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[443],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_35049(t4,t3);}

/* k35047 in k35044 in k35040 in k35037 in k35034 in k35028 in a35311 in k34983 in k34252 in k34249 in k34246 in k34121 in k34118 in k34115 in k34112 in k34109 in k34106 in k34103 in k34100 in k34097 in k34094 in k34091 in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_35049(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_35049,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_35052,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35242,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35249,a[2]=((C_word*)t0)[2],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 628  loop-looping");
t5=C_retrieve2(lf[493],"loop-looping");
f_25713(3,t5,t4,((C_word*)t0)[4]);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35213,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
if(C_truep((C_word)C_i_nullp(t4))){
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=t3;
f_35213(t7,t6);}
else{
t5=(C_word)C_a_i_cons(&a,2,lf[418],((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=t3;
f_35213(t7,t6);}}}

/* k35211 in k35047 in k35044 in k35040 in k35037 in k35034 in k35028 in a35311 in k34983 in k34252 in k34249 in k34246 in k34121 in k34118 in k34115 in k34112 in k34109 in k34106 in k34103 in k34100 in k34097 in k34094 in k34091 in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_35213(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_35213,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,lf[20],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]);
t3=(C_word)C_a_i_list(&a,1,t2);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=((C_word*)t0)[2];
f_35052(2,t5,t4);}

/* k35247 in k35047 in k35044 in k35040 in k35037 in k35034 in k35028 in a35311 in k34983 in k34252 in k34249 in k34246 in k34121 in k34118 in k34115 in k34112 in k34109 in k34106 in k34103 in k34100 in k34097 in k34094 in k34091 in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_35249(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 627  process-code-terminates?");
f_34987(((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* k35240 in k35047 in k35044 in k35040 in k35037 in k35034 in k35028 in a35311 in k34983 in k34252 in k34249 in k34246 in k34121 in k34118 in k34115 in k34112 in k34109 in k34106 in k34103 in k34100 in k34097 in k34094 in k34091 in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_35242(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[2];
f_35052(2,t2,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 629  printf");
t2=C_retrieve(lf[434]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],lf[784]);}}

/* k35050 in k35047 in k35044 in k35040 in k35037 in k35034 in k35028 in a35311 in k34983 in k34252 in k34249 in k34246 in k34121 in k34118 in k34115 in k34112 in k34109 in k34106 in k34103 in k34100 in k34097 in k34094 in k34091 in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_35052(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word ab[117],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35052,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)t0)[9]);
t3=(C_word)C_a_i_list(&a,2,((C_word*)t0)[8],C_fix(0));
t4=(C_word)C_a_i_list(&a,3,lf[777],C_SCHEME_END_OF_LIST,((C_word*)t0)[9]);
t5=(C_word)C_a_i_list(&a,2,lf[778],t4);
t6=(C_word)C_a_i_list(&a,1,lf[779]);
t7=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[8],lf[779]);
t8=(C_word)C_a_i_list(&a,3,lf[777],t6,t7);
t9=(C_word)C_a_i_list(&a,2,lf[780],t8);
t10=(C_word)C_a_i_list(&a,3,t3,t5,t9);
t11=(C_word)C_a_i_list(&a,1,((C_word*)t0)[7]);
t12=(C_word)C_a_i_list(&a,1,((C_word*)t0)[6]);
t13=(C_word)C_a_i_list(&a,1,lf[781]);
t14=(C_word)C_a_i_list(&a,4,lf[782],((C_word*)t0)[6],t13,lf[783]);
t15=(C_word)C_a_i_list(&a,2,((C_word*)t0)[7],C_fix(-2));
t16=(C_word)C_a_i_list(&a,4,lf[777],t12,t14,t15);
t17=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_35143,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t2,a[6]=t10,a[7]=t11,a[8]=t16,tmp=(C_word)a,a+=9,tmp);
t18=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35147,a[2]=((C_word*)t0)[2],a[3]=t17,tmp=(C_word)a,a+=4,tmp);
t19=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35151,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[8],a[4]=t18,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 648  loop-looping");
t20=C_retrieve2(lf[493],"loop-looping");
f_25713(3,t20,t19,((C_word*)t0)[3]);}

/* k35149 in k35050 in k35047 in k35044 in k35040 in k35037 in k35034 in k35028 in a35311 in k34983 in k34252 in k34249 in k34246 in k34121 in k34118 in k34115 in k34112 in k34109 in k34106 in k34103 in k34100 in k34097 in k34094 in k34091 in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_35151(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35151,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35155,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35159,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 649  loop-stepping");
t4=C_retrieve2(lf[495],"loop-stepping");
f_25725(3,t4,t3,((C_word*)t0)[2]);}

/* k35157 in k35149 in k35050 in k35047 in k35044 in k35040 in k35037 in k35034 in k35028 in a35311 in k34983 in k34252 in k34249 in k34246 in k34121 in k34118 in k34115 in k34112 in k34109 in k34106 in k34103 in k34100 in k34097 in k34094 in k34091 in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_35159(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35159,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 605  ##sys#append");
t3=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[2],t1,t2);}

/* k35153 in k35149 in k35050 in k35047 in k35044 in k35040 in k35037 in k35034 in k35028 in a35311 in k34983 in k34252 in k34249 in k34246 in k34121 in k34118 in k34115 in k34112 in k34109 in k34106 in k34103 in k34100 in k34097 in k34094 in k34091 in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_35155(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 605  ##sys#append");
t2=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k35145 in k35050 in k35047 in k35044 in k35040 in k35037 in k35034 in k35028 in a35311 in k34983 in k34252 in k34249 in k34246 in k34121 in k34118 in k34115 in k34112 in k34109 in k34106 in k34103 in k34100 in k34097 in k34094 in k34091 in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_35147(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 605  ##sys#append");
t2=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k35141 in k35050 in k35047 in k35044 in k35040 in k35037 in k35034 in k35028 in a35311 in k34983 in k34252 in k34249 in k34246 in k34121 in k34118 in k34115 in k34112 in k34109 in k34106 in k34103 in k34100 in k34097 in k34094 in k34091 in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_35143(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[57],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35143,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,C_SCHEME_END_OF_LIST,t1);
t3=(C_word)C_a_i_cons(&a,2,lf[777],t2);
t4=(C_word)C_a_i_list(&a,3,lf[730],((C_word*)t0)[8],t3);
t5=(C_word)C_a_i_list(&a,3,lf[777],((C_word*)t0)[7],t4);
t6=(C_word)C_a_i_list(&a,2,lf[731],t5);
t7=(C_word)C_a_i_list(&a,3,lf[2],((C_word*)t0)[6],t6);
t8=(C_word)C_a_i_list(&a,3,lf[777],((C_word*)t0)[5],t7);
t9=C_mutate(((C_word *)((C_word*)t0)[4])+1,t8);
t10=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35062,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t11=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35099,a[2]=((C_word*)t0)[2],a[3]=t10,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 653  loop-bindings");
t12=C_retrieve2(lf[489],"loop-bindings");
f_25665(3,t12,t11,((C_word*)t0)[2]);}

/* k35097 in k35141 in k35050 in k35047 in k35044 in k35040 in k35037 in k35034 in k35028 in a35311 in k34983 in k34252 in k34249 in k34246 in k34121 in k34118 in k34115 in k34112 in k34109 in k34106 in k34103 in k34100 in k34097 in k34094 in k34091 in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_35099(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35099,2,t0,t1);}
if(C_truep((C_word)C_i_nullp(t1))){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35095,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 654  loop-initially");
t3=C_retrieve2(lf[491],"loop-initially");
f_25689(3,t3,t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_35062(t2,C_SCHEME_FALSE);}}

/* k35093 in k35097 in k35141 in k35050 in k35047 in k35044 in k35040 in k35037 in k35034 in k35028 in a35311 in k34983 in k34252 in k34249 in k34246 in k34121 in k34118 in k34115 in k34112 in k34109 in k34106 in k34103 in k34100 in k34097 in k34094 in k34091 in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_35095(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_35062(t2,(C_word)C_i_nullp(t1));}

/* k35060 in k35141 in k35050 in k35047 in k35044 in k35040 in k35037 in k35034 in k35028 in a35311 in k34983 in k34252 in k34249 in k34246 in k34121 in k34118 in k34115 in k34112 in k34109 in k34106 in k34103 in k34100 in k34097 in k34094 in k34091 in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_35062(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_35062,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[3])[1]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35073,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 657  loop-bindings");
t3=C_retrieve2(lf[489],"loop-bindings");
f_25665(3,t3,t2,((C_word*)t0)[2]);}}

/* k35071 in k35060 in k35141 in k35050 in k35047 in k35044 in k35040 in k35037 in k35034 in k35028 in a35311 in k34983 in k34252 in k34249 in k34246 in k34121 in k34118 in k34115 in k34112 in k34109 in k34106 in k34103 in k34100 in k34097 in k34094 in k34091 in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_35073(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35073,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35077,a[2]=((C_word*)t0)[4],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35081,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 658  loop-initially");
t4=C_retrieve2(lf[491],"loop-initially");
f_25689(3,t4,t3,((C_word*)t0)[2]);}

/* k35079 in k35071 in k35060 in k35141 in k35050 in k35047 in k35044 in k35040 in k35037 in k35034 in k35028 in a35311 in k34983 in k34252 in k34249 in k34246 in k34121 in k34118 in k34115 in k34112 in k34109 in k34106 in k34103 in k34100 in k34097 in k34094 in k34091 in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_35081(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35081,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 605  ##sys#append");
t3=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[2],t1,t2);}

/* k35075 in k35071 in k35060 in k35141 in k35050 in k35047 in k35044 in k35040 in k35037 in k35034 in k35028 in a35311 in k34983 in k34252 in k34249 in k34246 in k34121 in k34118 in k34115 in k34112 in k34109 in k34106 in k34103 in k34100 in k34097 in k34094 in k34091 in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_35077(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35077,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,lf[2],t2));}

/* k35273 in k34983 in k34252 in k34249 in k34246 in k34121 in k34118 in k34115 in k34112 in k34109 in k34106 in k34103 in k34100 in k34097 in k34094 in k34091 in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_35275(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35275,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35278,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35283,a[2]=((C_word)li578),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 664  ##sys#register-macro");
t4=C_retrieve(lf[775]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[776],t3);}

/* a35282 in k35273 in k34983 in k34252 in k34249 in k34246 in k34121 in k34118 in k34115 in k34112 in k34109 in k34106 in k34103 in k34100 in k34097 in k34094 in k34091 in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_35283(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+9)){
C_save_and_reclaim((void*)tr3r,(void*)f_35283r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_35283r(t0,t1,t2,t3);}}

static void C_ccall f_35283r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a=C_alloc(9);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35287,a[2]=t1,a[3]=t3,a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35297,a[2]=t2,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_pairp(t2))){
t6=(C_word)C_i_car(t2);
t7=t5;
f_35297(t7,(C_word)C_i_symbolp(t6));}
else{
t6=t5;
f_35297(t6,C_SCHEME_FALSE);}}

/* k35295 in a35282 in k35273 in k34983 in k34252 in k34249 in k34246 in k34121 in k34118 in k34115 in k34112 in k34109 in k34106 in k34103 in k34100 in k34097 in k34094 in k34091 in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_35297(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[3];
f_35287(2,t2,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 666  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[774],((C_word*)t0)[2]);}}

/* k35285 in a35282 in k35273 in k34983 in k34252 in k34249 in k34246 in k34121 in k34118 in k34115 in k34112 in k34109 in k34106 in k34103 in k34100 in k34097 in k34094 in k34091 in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_35287(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35287,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,lf[773],t2));}

/* k35276 in k35273 in k34983 in k34252 in k34249 in k34246 in k34121 in k34118 in k34115 in k34112 in k34109 in k34106 in k34103 in k34100 in k34097 in k34094 in k34091 in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_35278(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35278,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35281,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 773  return-to-host");
t3=C_retrieve(lf[772]);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k35279 in k35276 in k35273 in k34983 in k34252 in k34249 in k34246 in k34121 in k34118 in k34115 in k34112 in k34109 in k34106 in k34103 in k34100 in k34097 in k34094 in k34091 in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_35281(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}

/* process-code-terminates? in k34983 in k34252 in k34249 in k34246 in k34121 in k34118 in k34115 in k34112 in k34109 in k34106 in k34103 in k34100 in k34097 in k34094 in k34091 in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_34987(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word *a;
loop:
a=C_alloc(5);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_34987,NULL,3,t1,t2,t3);}
if(C_truep((C_word)C_i_nullp(t2))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_FALSE);}
else{
if(C_truep((C_word)C_i_pairp(t2))){
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35003,a[2]=t3,a[3]=t2,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 601  process-code-terminates?");
t8=t4;
t9=t5;
t10=t3;
t1=t8;
t2=t9;
t3=t10;
goto loop;}
else{
t4=(C_word)C_i_car(t3);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_eqp(t2,t4));}}}

/* k35001 in process-code-terminates? in k34983 in k34252 in k34249 in k34246 in k34121 in k34118 in k34115 in k34112 in k34109 in k34106 in k34103 in k34100 in k34097 in k34094 in k34091 in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_35003(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,t1);}
else{
t2=(C_word)C_i_cdr(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 602  process-code-terminates?");
f_34987(((C_word*)t0)[4],t2,((C_word*)t0)[2]);}}

/* run-while-until in k34252 in k34249 in k34246 in k34121 in k34118 in k34115 in k34112 in k34109 in k34106 in k34103 in k34100 in k34097 in k34094 in k34091 in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_34914(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[19],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_34914,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t5)[1];
t7=(C_word)C_i_car(((C_word*)t5)[1]);
t8=(C_word)C_i_cdr(((C_word*)t5)[1]);
t9=C_set_block_item(t5,0,t8);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_34925,a[2]=t7,a[3]=t11,a[4]=t5,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t5)[1]))){
C_trace("ChickenBridge.scm: 569  loop-error");
f_26001(t12,t4,t6,(C_word)C_a_i_list(&a,3,lf[768],t7,lf[769]));}
else{
t13=t12;
f_34925(2,t13,C_SCHEME_UNDEFINED);}}

/* k34923 in run-while-until in k34252 in k34249 in k34246 in k34121 in k34118 in k34115 in k34112 in k34109 in k34106 in k34103 in k34100 in k34097 in k34094 in k34091 in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_34925(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34925,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_34928,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[2],lf[644]);
if(C_truep(t3)){
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t8=t2;
f_34928(t8,t7);}
else{
t4=(C_word)C_eqp(((C_word*)t0)[2],lf[645]);
if(C_truep(t4)){
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[4])+1,t6);
t8=(C_word)C_a_i_list(&a,2,lf[419],t5);
t9=C_mutate(((C_word *)((C_word*)t0)[3])+1,t8);
t10=t2;
f_34928(t10,t9);}
else{
t5=t2;
f_34928(t5,C_SCHEME_UNDEFINED);}}}

/* k34926 in k34923 in run-while-until in k34252 in k34249 in k34246 in k34121 in k34118 in k34115 in k34112 in k34109 in k34106 in k34103 in k34100 in k34097 in k34094 in k34091 in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_34928(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_34928,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34935,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_list(&a,3,lf[20],((C_word*)((C_word*)t0)[3])[1],C_retrieve2(lf[765],"*process-stop*"));
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 573  make-loop-clause");
f_25761(t2,(C_word)C_a_i_list(&a,4,lf[499],((C_word*)t0)[2],lf[504],t4));}

/* k34933 in k34926 in k34923 in run-while-until in k34252 in k34249 in k34246 in k34121 in k34118 in k34115 in k34112 in k34109 in k34106 in k34103 in k34100 in k34097 in k34094 in k34091 in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_34935(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 573  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* hush in k34252 in k34249 in k34246 in k34121 in k34118 in k34115 in k34112 in k34109 in k34106 in k34103 in k34100 in k34097 in k34094 in k34091 in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_34904(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34904,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34908,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34559,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("##sys#gc");
t4=C_retrieve(lf[746]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,C_SCHEME_FALSE);}

/* k34557 in hush in k34252 in k34249 in k34246 in k34121 in k34118 in k34115 in k34112 in k34109 in k34106 in k34103 in k34100 in k34097 in k34094 in k34091 in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_34559(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34559,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub6166,a[2]=((C_word)li574),tmp=(C_word)a,a+=3,tmp);
((C_proc3)C_retrieve_proc(t3))(3,t3,((C_word*)t0)[2],t2);}

/* k34906 in hush in k34252 in k34249 in k34246 in k34121 in k34118 in k34115 in k34112 in k34109 in k34106 in k34103 in k34100 in k34097 in k34094 in k34091 in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_34908(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 554  values");
C_values(2,0,((C_word*)t0)[2]);}

/* stop in k34252 in k34249 in k34246 in k34121 in k34118 in k34115 in k34112 in k34109 in k34106 in k34103 in k34100 in k34097 in k34094 in k34091 in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_34846(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+9)){
C_save_and_reclaim((void*)tr2r,(void*)f_34846r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_34846r(t0,t1,t2);}}

static void C_ccall f_34846r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a=C_alloc(9);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34850,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 544  scheduler-stop");
f_34542(t3,C_fix(-1));}
else{
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34864,a[2]=t5,a[3]=((C_word)li572),tmp=(C_word)a,a+=4,tmp));
t7=((C_word*)t5)[1];
f_34864(t7,t3,t2);}}

/* do6224 in stop in k34252 in k34249 in k34246 in k34121 in k34118 in k34115 in k34112 in k34109 in k34106 in k34103 in k34100 in k34097 in k34094 in k34091 in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_34864(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_34864,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_34874,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
if(C_truep((C_word)C_fixnump(t4))){
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 548  scheduler-stop");
f_34542(t3,t5);}
else{
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 549  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t3,lf[763],t5);}}}

/* k34872 in do6224 in stop in k34252 in k34249 in k34246 in k34121 in k34118 in k34115 in k34112 in k34109 in k34106 in k34103 in k34100 in k34097 in k34094 in k34091 in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_34874(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_34864(t3,((C_word*)t0)[2],t2);}

/* k34848 in stop in k34252 in k34249 in k34246 in k34121 in k34118 in k34115 in k34112 in k34109 in k34106 in k34103 in k34100 in k34097 in k34094 in k34091 in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_34850(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 550  values");
C_values(2,0,((C_word*)t0)[2]);}

/* cont in k34252 in k34249 in k34246 in k34121 in k34118 in k34115 in k34112 in k34109 in k34106 in k34103 in k34100 in k34097 in k34094 in k34091 in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_34837(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34837,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34841,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34537,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("##sys#gc");
t4=C_retrieve(lf[746]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,C_SCHEME_FALSE);}

/* k34535 in cont in k34252 in k34249 in k34246 in k34121 in k34118 in k34115 in k34112 in k34109 in k34106 in k34103 in k34100 in k34097 in k34094 in k34091 in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_34537(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34537,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub6156,a[2]=((C_word)li570),tmp=(C_word)a,a+=3,tmp);
((C_proc3)C_retrieve_proc(t3))(3,t3,((C_word*)t0)[2],t2);}

/* k34839 in cont in k34252 in k34249 in k34246 in k34121 in k34118 in k34115 in k34112 in k34109 in k34106 in k34103 in k34100 in k34097 in k34094 in k34091 in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_34841(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 540  values");
C_values(2,0,((C_word*)t0)[2]);}

/* paused? in k34252 in k34249 in k34246 in k34121 in k34118 in k34115 in k34112 in k34109 in k34106 in k34103 in k34100 in k34097 in k34094 in k34091 in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_34831(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34831,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34519,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("##sys#gc");
t3=C_retrieve(lf[746]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,C_SCHEME_FALSE);}

/* k34517 in paused? in k34252 in k34249 in k34246 in k34121 in k34118 in k34115 in k34112 in k34109 in k34106 in k34103 in k34100 in k34097 in k34094 in k34091 in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_34519(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34519,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub6148,a[2]=((C_word)li568),tmp=(C_word)a,a+=3,tmp);
((C_proc3)C_retrieve_proc(t3))(3,t3,((C_word*)t0)[2],t2);}

/* pause in k34252 in k34249 in k34246 in k34121 in k34118 in k34115 in k34112 in k34109 in k34106 in k34103 in k34100 in k34097 in k34094 in k34091 in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_34822(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34822,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34826,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34528,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("##sys#gc");
t4=C_retrieve(lf[746]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,C_SCHEME_FALSE);}

/* k34526 in pause in k34252 in k34249 in k34246 in k34121 in k34118 in k34115 in k34112 in k34109 in k34106 in k34103 in k34100 in k34097 in k34094 in k34091 in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_34528(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34528,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub6152,a[2]=((C_word)li566),tmp=(C_word)a,a+=3,tmp);
((C_proc3)C_retrieve_proc(t3))(3,t3,((C_word*)t0)[2],t2);}

/* k34824 in pause in k34252 in k34249 in k34246 in k34121 in k34118 in k34115 in k34112 in k34109 in k34106 in k34103 in k34100 in k34097 in k34094 in k34091 in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_34826(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 533  values");
C_values(2,0,((C_word*)t0)[2]);}

/* time-format in k34252 in k34249 in k34246 in k34121 in k34118 in k34115 in k34112 in k34109 in k34106 in k34103 in k34100 in k34097 in k34094 in k34091 in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_34759(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+11)){
C_save_and_reclaim((void*)tr2rv,(void*)f_34759r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest_vector(a,C_rest_count(0));
f_34759r(t0,t1,t2);}}

static void C_ccall f_34759r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(11);
if(C_truep((C_word)C_vemptyp(t2))){
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34772,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34484,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
C_trace("##sys#gc");
t5=C_retrieve(lf[746]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,C_SCHEME_FALSE);}
else{
t3=(C_word)C_i_vector_ref(t2,C_fix(0));
t4=(C_word)C_i_eqvp(t3,lf[755]);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_34784,a[2]=t2,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
if(C_truep(t4)){
t6=t5;
f_34784(t6,t4);}
else{
t6=(C_word)C_eqp(t3,C_fix(1));
t7=t5;
f_34784(t7,(C_truep(t6)?t6:(C_word)C_eqp(t3,lf[758])));}}}

/* k34782 in time-format in k34252 in k34249 in k34246 in k34121 in k34118 in k34115 in k34112 in k34109 in k34106 in k34103 in k34100 in k34097 in k34094 in k34091 in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_34784(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
if(C_truep(t1)){
t2=C_mutate((C_word*)lf[752]+1,C_retrieve(lf[744]));
C_trace("ChickenBridge.scm: 522  scheduler-set-time-milliseconds");
f_34489(((C_word*)t0)[4],C_SCHEME_FALSE);}
else{
t2=(C_word)C_eqp(((C_word*)t0)[3],C_fix(1000));
t3=(C_truep(t2)?t2:(C_word)C_eqp(((C_word*)t0)[3],lf[756]));
if(C_truep(t3)){
t4=C_mutate((C_word*)lf[752]+1,C_retrieve(lf[743]));
C_trace("ChickenBridge.scm: 526  scheduler-set-time-milliseconds");
f_34489(((C_word*)t0)[4],C_SCHEME_TRUE);}
else{
t4=(C_word)C_i_vector_ref(((C_word*)t0)[2],C_fix(0));
C_trace("ChickenBridge.scm: 529  error");
t5=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,((C_word*)t0)[4],lf[757],t4);}}}

/* k34482 in time-format in k34252 in k34249 in k34246 in k34121 in k34118 in k34115 in k34112 in k34109 in k34106 in k34103 in k34100 in k34097 in k34094 in k34091 in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_34484(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34484,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub6128,a[2]=((C_word)li564),tmp=(C_word)a,a+=3,tmp);
((C_proc3)C_retrieve_proc(t3))(3,t3,((C_word*)t0)[2],t2);}

/* k34770 in time-format in k34252 in k34249 in k34246 in k34121 in k34118 in k34115 in k34112 in k34109 in k34106 in k34103 in k34100 in k34097 in k34094 in k34091 in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_34772(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_truep(t1)?C_fix(1000):lf[754]));}

/* sprout in k34252 in k34249 in k34246 in k34121 in k34118 in k34115 in k34112 in k34109 in k34106 in k34103 in k34100 in k34097 in k34094 in k34091 in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_34583(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+12)){
C_save_and_reclaim((void*)tr3r,(void*)f_34583r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_34583r(t0,t1,t2,t3);}}

static void C_ccall f_34583r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a=C_alloc(12);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34585,a[2]=t2,a[3]=((C_word)li560),tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34705,a[2]=t4,a[3]=((C_word)li561),tmp=(C_word)a,a+=4,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34710,a[2]=t5,a[3]=((C_word)li562),tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("def-start61836204");
t7=t6;
f_34710(t7,t1);}
else{
t7=(C_word)C_i_car(t3);
t8=(C_word)C_i_cdr(t3);
if(C_truep((C_word)C_i_nullp(t8))){
C_trace("def-id61846202");
t9=t5;
f_34705(t9,t1,t7);}
else{
t9=(C_word)C_i_car(t8);
t10=(C_word)C_i_cdr(t8);
if(C_truep((C_word)C_i_nullp(t10))){
C_trace("body61816186");
t11=t4;
f_34585(t11,t1,t7,t9);}
else{
C_trace("##sys#error");
t11=*((C_word*)lf[750]+1);
((C_proc4)(void*)(*((C_word*)t11+1)))(4,t11,t1,lf[751],t10);}}}}

/* def-start6183 in sprout in k34252 in k34249 in k34246 in k34121 in k34118 in k34115 in k34112 in k34109 in k34106 in k34103 in k34100 in k34097 in k34094 in k34091 in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_34710(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_34710,NULL,2,t0,t1);}
C_trace("def-id61846202");
t2=((C_word*)t0)[2];
f_34705(t2,t1,C_fix(0));}

/* def-id6184 in sprout in k34252 in k34249 in k34246 in k34121 in k34118 in k34115 in k34112 in k34109 in k34106 in k34103 in k34100 in k34097 in k34094 in k34091 in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_34705(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_34705,NULL,3,t0,t1,t2);}
C_trace("body61816186");
t3=((C_word*)t0)[2];
f_34585(t3,t1,t2,C_fix(-1));}

/* body6181 in sprout in k34252 in k34249 in k34246 in k34121 in k34118 in k34115 in k34112 in k34109 in k34106 in k34103 in k34100 in k34097 in k34094 in k34091 in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_34585(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_34585,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34587,a[2]=t4,a[3]=((C_word)li557),tmp=(C_word)a,a+=4,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34615,a[2]=t5,a[3]=((C_word)li558),tmp=(C_word)a,a+=4,tmp);
t8=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34645,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t0)[2]))){
t9=C_SCHEME_UNDEFINED;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_set_block_item(t10,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34656,a[2]=t6,a[3]=t7,a[4]=t10,a[5]=((C_word*)t0)[2],a[6]=((C_word)li559),tmp=(C_word)a,a+=7,tmp));
t12=((C_word*)t10)[1];
f_34656(t12,t8,((C_word*)t0)[2]);}
else{
t9=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34692,a[2]=((C_word*)t0)[2],a[3]=t8,tmp=(C_word)a,a+=4,tmp);
t10=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_34704,a[2]=t7,a[3]=((C_word*)t0)[2],a[4]=t9,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 506  nextstart");
t11=t6;
f_34587(t11,t10);}}

/* k34702 in body6181 in sprout in k34252 in k34249 in k34246 in k34121 in k34118 in k34115 in k34112 in k34109 in k34106 in k34103 in k34100 in k34097 in k34094 in k34091 in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_34704(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34704,2,t0,t1);}
t2=(C_word)C_a_i_times(&a,2,t1,C_fix(1000));
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_34700,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 506  nextid");
t4=((C_word*)t0)[2];
f_34615(t4,t3);}

/* k34698 in k34702 in body6181 in sprout in k34252 in k34249 in k34246 in k34121 in k34118 in k34115 in k34112 in k34109 in k34106 in k34103 in k34100 in k34097 in k34094 in k34091 in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_34700(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 506  scheduler-sprout");
f_34498(((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k34690 in body6181 in sprout in k34252 in k34249 in k34246 in k34121 in k34118 in k34115 in k34112 in k34109 in k34106 in k34103 in k34100 in k34097 in k34094 in k34091 in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_34692(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_34645(2,t2,((C_word*)t0)[2]);}

/* do6195 in body6181 in sprout in k34252 in k34249 in k34246 in k34121 in k34118 in k34115 in k34112 in k34109 in k34106 in k34103 in k34100 in k34097 in k34094 in k34091 in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_34656(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_34656,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)t0)[5]);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_34666,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_34689,a[2]=((C_word*)t0)[3],a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 503  nextstart");
t6=((C_word*)t0)[2];
f_34587(t6,t5);}}

/* k34687 in do6195 in body6181 in sprout in k34252 in k34249 in k34246 in k34121 in k34118 in k34115 in k34112 in k34109 in k34106 in k34103 in k34100 in k34097 in k34094 in k34091 in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_34689(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34689,2,t0,t1);}
t2=(C_word)C_a_i_times(&a,2,t1,C_fix(1000));
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_34685,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 504  nextid");
t4=((C_word*)t0)[2];
f_34615(t4,t3);}

/* k34683 in k34687 in do6195 in body6181 in sprout in k34252 in k34249 in k34246 in k34121 in k34118 in k34115 in k34112 in k34109 in k34106 in k34103 in k34100 in k34097 in k34094 in k34091 in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_34685(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 503  scheduler-sprout");
f_34498(((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k34664 in do6195 in body6181 in sprout in k34252 in k34249 in k34246 in k34121 in k34118 in k34115 in k34112 in k34109 in k34106 in k34103 in k34100 in k34097 in k34094 in k34091 in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_34666(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_34656(t3,((C_word*)t0)[2],t2);}

/* k34643 in body6181 in sprout in k34252 in k34249 in k34246 in k34121 in k34118 in k34115 in k34112 in k34109 in k34106 in k34103 in k34100 in k34097 in k34094 in k34091 in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_34645(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 510  values");
C_values(2,0,((C_word*)t0)[2]);}

/* nextid in body6181 in sprout in k34252 in k34249 in k34246 in k34121 in k34118 in k34115 in k34112 in k34109 in k34106 in k34103 in k34100 in k34097 in k34094 in k34091 in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_34615(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_34615,NULL,2,t0,t1);}
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[2])[1]))){
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t4=(C_word)C_i_nullp(t3);
t5=(C_truep(t4)?(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]):(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]));
t6=C_mutate(((C_word *)((C_word*)t0)[2])+1,t5);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,t2);}
else{
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}}

/* nextstart in body6181 in sprout in k34252 in k34249 in k34246 in k34121 in k34118 in k34115 in k34112 in k34109 in k34106 in k34103 in k34100 in k34097 in k34094 in k34091 in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_34587(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_34587,NULL,2,t0,t1);}
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[2])[1]))){
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t4=(C_word)C_i_nullp(t3);
t5=(C_truep(t4)?(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]):(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]));
t6=C_mutate(((C_word *)((C_word*)t0)[2])+1,t5);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,t2);}
else{
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}}

/* load-sal-file in k34252 in k34249 in k34246 in k34121 in k34118 in k34115 in k34112 in k34109 in k34106 in k34103 in k34100 in k34097 in k34094 in k34091 in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_34564(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_34564,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34569,a[2]=((C_word)li555),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t3+1)))(3,t3,t1,t2);}

/* f_34569 in load-sal-file in k34252 in k34249 in k34246 in k34121 in k34118 in k34115 in k34112 in k34109 in k34106 in k34103 in k34100 in k34097 in k34094 in k34091 in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_34569(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_34569,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34574,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep(t2)){
t4=(C_word)C_i_foreign_string_argumentp(t2);
C_trace("##sys#make-c-string");
t5=C_retrieve(lf[46]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}
else{
t4=t3;
f_34574(2,t4,C_SCHEME_FALSE);}}

/* k34572 */
static void C_ccall f_34574(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub6172(C_SCHEME_UNDEFINED,t1));}

/* scheduler-stop in k34252 in k34249 in k34246 in k34121 in k34118 in k34115 in k34112 in k34109 in k34106 in k34103 in k34100 in k34097 in k34094 in k34091 in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_34542(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_34542,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34546,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("##sys#gc");
t4=C_retrieve(lf[746]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,C_SCHEME_FALSE);}

/* k34544 in scheduler-stop in k34252 in k34249 in k34246 in k34121 in k34118 in k34115 in k34112 in k34109 in k34106 in k34103 in k34100 in k34097 in k34094 in k34091 in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_34546(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34546,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(C_word)C_i_foreign_fixnum_argumentp(((C_word*)t0)[3]);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub6161,a[2]=((C_word)li553),tmp=(C_word)a,a+=3,tmp);
((C_proc4)C_retrieve_proc(t4))(4,t4,((C_word*)t0)[2],t2,t3);}

/* scheduler-sprout in k34252 in k34249 in k34246 in k34121 in k34118 in k34115 in k34112 in k34109 in k34106 in k34103 in k34100 in k34097 in k34094 in k34091 in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_34498(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_34498,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_34502,a[2]=t2,a[3]=t1,a[4]=t4,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
C_trace("##sys#gc");
t6=C_retrieve(lf[746]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,C_SCHEME_FALSE);}

/* k34500 in scheduler-sprout in k34252 in k34249 in k34246 in k34121 in k34118 in k34115 in k34112 in k34109 in k34106 in k34103 in k34100 in k34097 in k34094 in k34091 in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_34502(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34502,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(C_word)C_i_foreign_flonum_argumentp(((C_word*)t0)[5]);
t4=(C_word)C_i_foreign_fixnum_argumentp(((C_word*)t0)[4]);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub6141,a[2]=((C_word)li551),tmp=(C_word)a,a+=3,tmp);
((C_proc6)C_retrieve_proc(t5))(6,t5,((C_word*)t0)[3],t2,((C_word*)t0)[2],t3,t4);}

/* scheduler-set-time-milliseconds in k34252 in k34249 in k34246 in k34121 in k34118 in k34115 in k34112 in k34109 in k34106 in k34103 in k34100 in k34097 in k34094 in k34091 in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_34489(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_34489,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34493,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("##sys#gc");
t4=C_retrieve(lf[746]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,C_SCHEME_FALSE);}

/* k34491 in scheduler-set-time-milliseconds in k34252 in k34249 in k34246 in k34121 in k34118 in k34115 in k34112 in k34109 in k34106 in k34103 in k34100 in k34097 in k34094 in k34091 in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_34493(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34493,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub6133,a[2]=((C_word)li549),tmp=(C_word)a,a+=3,tmp);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],t2,((C_word*)t0)[2]);}

/* current-time-seconds in k34252 in k34249 in k34246 in k34121 in k34118 in k34115 in k34112 in k34109 in k34106 in k34103 in k34100 in k34097 in k34094 in k34091 in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_34477(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34477,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub6125(t2));}

/* current-time-milliseconds in k34252 in k34249 in k34246 in k34121 in k34118 in k34115 in k34112 in k34109 in k34106 in k34103 in k34100 in k34097 in k34094 in k34091 in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_34474(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34474,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub6122(t2));}

/* print-error in k34252 in k34249 in k34246 in k34121 in k34118 in k34115 in k34112 in k34109 in k34106 in k34103 in k34100 in k34097 in k34094 in k34091 in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_34460(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_34460,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34465,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep(t2)){
t4=(C_word)C_i_foreign_string_argumentp(t2);
C_trace("##sys#make-c-string");
t5=C_retrieve(lf[46]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}
else{
t4=t3;
f_34465(2,t4,C_SCHEME_FALSE);}}

/* k34463 in print-error in k34252 in k34249 in k34246 in k34121 in k34118 in k34115 in k34112 in k34109 in k34106 in k34103 in k34100 in k34097 in k34094 in k34091 in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_34465(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub6117(C_SCHEME_UNDEFINED,t1));}

/* print-message in k34252 in k34249 in k34246 in k34121 in k34118 in k34115 in k34112 in k34109 in k34106 in k34103 in k34100 in k34097 in k34094 in k34091 in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_34446(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_34446,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34451,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep(t2)){
t4=(C_word)C_i_foreign_string_argumentp(t2);
C_trace("##sys#make-c-string");
t5=C_retrieve(lf[46]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}
else{
t4=t3;
f_34451(2,t4,C_SCHEME_FALSE);}}

/* k34449 in print-message in k34252 in k34249 in k34246 in k34121 in k34118 in k34115 in k34112 in k34109 in k34106 in k34103 in k34100 in k34097 in k34094 in k34091 in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_34451(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub6111(C_SCHEME_UNDEFINED,t1));}

/* cm-logo in k34252 in k34249 in k34246 in k34121 in k34118 in k34115 in k34112 in k34109 in k34106 in k34103 in k34100 in k34097 in k34094 in k34091 in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_34256(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_34256,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34310,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34317,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 399  make-string");
t5=*((C_word*)lf[368]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,C_fix(15));}

/* k34315 in cm-logo in k34252 in k34249 in k34246 in k34121 in k34118 in k34115 in k34112 in k34109 in k34106 in k34103 in k34100 in k34097 in k34094 in k34091 in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_34317(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34317,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_34319,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word)li543),tmp=(C_word)a,a+=5,tmp));
t5=((C_word*)t3)[1];
f_34319(t5,((C_word*)t0)[2],lf[742],t1,C_fix(0));}

/* do6085 in k34315 in cm-logo in k34252 in k34249 in k34246 in k34121 in k34118 in k34115 in k34112 in k34109 in k34106 in k34103 in k34100 in k34097 in k34094 in k34091 in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_34319(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_34319,NULL,5,t0,t1,t2,t3,t4);}
if(C_truep((C_word)C_i_nequalp(t4,C_fix(7)))){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_FALSE);}
else{
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34329,a[2]=((C_word*)t0)[2],a[3]=t3,a[4]=t2,a[5]=t1,a[6]=((C_word*)t0)[3],a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nequalp(t4,C_fix(0)))){
C_trace("ChickenBridge.scm: 402  printf");
t6=C_retrieve(lf[434]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,t2);}
else{
t6=t5;
f_34329(2,t6,C_SCHEME_UNDEFINED);}}}

/* k34327 in do6085 in k34315 in cm-logo in k34252 in k34249 in k34246 in k34121 in k34118 in k34115 in k34112 in k34109 in k34106 in k34103 in k34100 in k34097 in k34094 in k34091 in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_34329(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34329,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34332,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34346,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34348,a[2]=t5,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[7],a[6]=((C_word)li542),tmp=(C_word)a,a+=7,tmp));
t7=((C_word*)t5)[1];
f_34348(t7,t3,C_fix(0));}

/* do6099 in k34327 in do6085 in k34315 in cm-logo in k34252 in k34249 in k34246 in k34121 in k34118 in k34115 in k34112 in k34109 in k34106 in k34103 in k34100 in k34097 in k34094 in k34091 in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_34348(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_34348,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nequalp(t2,C_fix(15)))){
if(C_truep((C_word)C_i_nequalp(((C_word*)t0)[5],C_fix(3)))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34368,a[2]=((C_word*)t0)[4],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t4=((C_word*)t0)[3];
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_fix(0);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_fix(0);
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_fix(0);
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34303,a[2]=t3,a[3]=t11,a[4]=t9,a[5]=t5,a[6]=t7,tmp=(C_word)a,a+=7,tmp);
t13=(C_word)C_a_i_divide(&a,2,((C_word*)t5)[1],C_fix(10000));
C_trace("ChickenBridge.scm: 391  floor");
t14=*((C_word*)lf[173]+1);
((C_proc3)C_retrieve_proc(t14))(3,t14,t12,t13);}
else{
C_trace("ChickenBridge.scm: 407  string-append");
t3=*((C_word*)lf[165]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t1,((C_word*)t0)[4],lf[741]);}}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_34385,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_34388,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_a_i_minus(&a,2,t2,((C_word*)t0)[5]);
C_trace("ChickenBridge.scm: 409  <=");
C_less_or_equal_p(5,0,t4,C_fix(2),t5,C_fix(4));}}

/* k34386 in do6099 in k34327 in do6085 in k34315 in cm-logo in k34252 in k34249 in k34246 in k34121 in k34118 in k34115 in k34112 in k34109 in k34106 in k34103 in k34100 in k34097 in k34094 in k34091 in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_34388(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34388,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_34385(t2,C_make_character(92));}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_34430,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_a_i_plus(&a,2,C_fix(13),((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 410  modulo");
t4=*((C_word*)lf[130]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,t3,C_fix(15));}}

/* k34428 in k34386 in do6099 in k34327 in do6085 in k34315 in cm-logo in k34252 in k34249 in k34246 in k34121 in k34118 in k34115 in k34112 in k34109 in k34106 in k34103 in k34100 in k34097 in k34094 in k34091 in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_34430(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34430,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,C_fix(4),t1);
t3=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[4],t2);
if(C_truep((C_word)C_i_nequalp(t3,C_fix(1)))){
t4=((C_word*)t0)[3];
f_34385(t4,C_make_character(47));}
else{
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_34400,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 412  <=");
C_less_or_equal_p(5,0,t4,C_fix(1),((C_word*)t0)[2],C_fix(5));}}

/* k34398 in k34428 in k34386 in do6099 in k34327 in do6085 in k34315 in cm-logo in k34252 in k34249 in k34246 in k34121 in k34118 in k34115 in k34112 in k34109 in k34106 in k34103 in k34100 in k34097 in k34094 in k34091 in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_34400(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34400,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_34385(t2,C_make_character(45));}
else{
t2=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[3],C_fix(6));
t3=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[2],C_fix(3));
t4=(C_word)C_a_i_times(&a,2,t2,t3);
t5=(C_word)C_i_nequalp(t4,C_fix(15));
t6=((C_word*)t0)[4];
f_34385(t6,(C_truep(t5)?C_make_character(47):C_make_character(32)));}}

/* k34383 in do6099 in k34327 in do6085 in k34315 in cm-logo in k34252 in k34249 in k34246 in k34121 in k34118 in k34115 in k34112 in k34109 in k34106 in k34103 in k34100 in k34097 in k34094 in k34091 in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_34385(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_34385,NULL,2,t0,t1);}
t2=(C_word)C_i_string_set(((C_word*)t0)[5],((C_word*)t0)[4],t1);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t4=((C_word*)((C_word*)t0)[3])[1];
f_34348(t4,((C_word*)t0)[2],t3);}

/* k34301 in do6099 in k34327 in do6085 in k34315 in cm-logo in k34252 in k34249 in k34246 in k34121 in k34118 in k34115 in k34112 in k34109 in k34106 in k34103 in k34100 in k34097 in k34094 in k34091 in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_34303(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34303,2,t0,t1);}
t2=(C_word)C_i_inexact_to_exact(t1);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34268,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 392  modulo");
t5=*((C_word*)lf[130]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,((C_word*)((C_word*)t0)[5])[1],C_fix(10000));}

/* k34266 in k34301 in do6099 in k34327 in do6085 in k34315 in cm-logo in k34252 in k34249 in k34246 in k34121 in k34118 in k34115 in k34112 in k34109 in k34106 in k34103 in k34100 in k34097 in k34094 in k34091 in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_34268(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34268,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34295,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
t4=(C_word)C_a_i_divide(&a,2,((C_word*)((C_word*)t0)[6])[1],C_fix(100));
C_trace("ChickenBridge.scm: 393  floor");
t5=*((C_word*)lf[173]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}

/* k34293 in k34266 in k34301 in do6099 in k34327 in do6085 in k34315 in cm-logo in k34252 in k34249 in k34246 in k34121 in k34118 in k34115 in k34112 in k34109 in k34106 in k34103 in k34100 in k34097 in k34094 in k34091 in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_34295(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34295,2,t0,t1);}
t2=(C_word)C_i_inexact_to_exact(t1);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_34276,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 394  modulo");
t5=*((C_word*)lf[130]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,((C_word*)((C_word*)t0)[2])[1],C_fix(100));}

/* k34274 in k34293 in k34266 in k34301 in do6099 in k34327 in do6085 in k34315 in cm-logo in k34252 in k34249 in k34246 in k34121 in k34118 in k34115 in k34112 in k34109 in k34106 in k34103 in k34100 in k34097 in k34094 in k34091 in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_34276(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34276,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_34283,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 395  number->string");
C_number_to_string(3,0,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k34281 in k34274 in k34293 in k34266 in k34301 in do6099 in k34327 in do6085 in k34315 in cm-logo in k34252 in k34249 in k34246 in k34121 in k34118 in k34115 in k34112 in k34109 in k34106 in k34103 in k34100 in k34097 in k34094 in k34091 in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_34283(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34283,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_34287,a[2]=((C_word*)t0)[3],a[3]=t1,a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 396  number->string");
C_number_to_string(3,0,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k34285 in k34281 in k34274 in k34293 in k34266 in k34301 in do6099 in k34327 in do6085 in k34315 in cm-logo in k34252 in k34249 in k34246 in k34121 in k34118 in k34115 in k34112 in k34109 in k34106 in k34103 in k34100 in k34097 in k34094 in k34091 in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_34287(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34287,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_34291,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 397  number->string");
C_number_to_string(3,0,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k34289 in k34285 in k34281 in k34274 in k34293 in k34266 in k34301 in do6099 in k34327 in do6085 in k34315 in cm-logo in k34252 in k34249 in k34246 in k34121 in k34118 in k34115 in k34112 in k34109 in k34106 in k34103 in k34100 in k34097 in k34094 in k34091 in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_34291(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 395  string-append");
t2=*((C_word*)lf[165]+1);
((C_proc8)C_retrieve_proc(t2))(8,t2,((C_word*)t0)[4],lf[738],((C_word*)t0)[3],lf[739],((C_word*)t0)[2],lf[740],t1);}

/* k34366 in do6099 in k34327 in do6085 in k34315 in cm-logo in k34252 in k34249 in k34246 in k34121 in k34118 in k34115 in k34112 in k34109 in k34106 in k34103 in k34100 in k34097 in k34094 in k34091 in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_34368(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 406  string-append");
t2=*((C_word*)lf[165]+1);
((C_proc6)C_retrieve_proc(t2))(6,t2,((C_word*)t0)[3],((C_word*)t0)[2],lf[736],t1,lf[737]);}

/* k34344 in k34327 in do6085 in k34315 in cm-logo in k34252 in k34249 in k34246 in k34121 in k34118 in k34115 in k34112 in k34109 in k34106 in k34103 in k34100 in k34097 in k34094 in k34091 in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_34346(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 403  printf");
t2=C_retrieve(lf[434]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k34330 in k34327 in do6085 in k34315 in cm-logo in k34252 in k34249 in k34246 in k34121 in k34118 in k34115 in k34112 in k34109 in k34106 in k34103 in k34100 in k34097 in k34094 in k34091 in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_34332(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34332,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34335,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 415  printf");
t3=C_retrieve(lf[434]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[3]);}

/* k34333 in k34330 in k34327 in do6085 in k34315 in cm-logo in k34252 in k34249 in k34246 in k34121 in k34118 in k34115 in k34112 in k34109 in k34106 in k34103 in k34100 in k34097 in k34094 in k34091 in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_34335(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34335,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
t3=((C_word*)((C_word*)t0)[5])[1];
f_34319(t3,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k34308 in cm-logo in k34252 in k34249 in k34246 in k34121 in k34118 in k34115 in k34112 in k34109 in k34106 in k34103 in k34100 in k34097 in k34094 in k34091 in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_34310(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 416  values");
C_values(2,0,((C_word*)t0)[2]);}

/* cs:clear in k34121 in k34118 in k34115 in k34112 in k34109 in k34106 in k34103 in k34100 in k34097 in k34094 in k34091 in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_34239(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34239,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34244,a[2]=((C_word)li540),tmp=(C_word)a,a+=3,tmp);
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,t1);}

/* f_34244 in cs:clear in k34121 in k34118 in k34115 in k34112 in k34109 in k34106 in k34103 in k34100 in k34097 in k34094 in k34091 in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_34244(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34244,2,t0,t1);}
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub6077(C_SCHEME_UNDEFINED));}

/* cs:f in k34121 in k34118 in k34115 in k34112 in k34109 in k34106 in k34103 in k34100 in k34097 in k34094 in k34091 in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_34182(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+13)){
C_save_and_reclaim((void*)tr2r,(void*)f_34182r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_34182r(t0,t1,t2);}}

static void C_ccall f_34182r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(13);
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34186,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t3)[1]))){
t5=t4;
f_34186(2,t5,C_SCHEME_UNDEFINED);}
else{
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34195,a[2]=t4,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34215,a[2]=t5,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_cdr(((C_word*)t3)[1]);
if(C_truep((C_word)C_i_nullp(t7))){
t8=(C_word)C_i_car(((C_word*)t3)[1]);
t9=t6;
f_34215(t9,(C_word)C_i_pairp(t8));}
else{
t8=t6;
f_34215(t8,C_SCHEME_FALSE);}}}

/* k34213 in cs:f in k34121 in k34118 in k34115 in k34112 in k34109 in k34106 in k34103 in k34100 in k34097 in k34094 in k34091 in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_34215(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_34195(t4,t3);}
else{
t2=((C_word*)t0)[2];
f_34195(t2,C_SCHEME_UNDEFINED);}}

/* k34193 in cs:f in k34121 in k34118 in k34115 in k34112 in k34109 in k34106 in k34103 in k34100 in k34097 in k34094 in k34091 in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_34195(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_34195,NULL,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[3])[1]);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34203,a[2]=((C_word)li538),tmp=(C_word)a,a+=3,tmp);
((C_proc5)(void*)(*((C_word*)t3+1)))(5,t3,((C_word*)t0)[2],C_fix(2),t2,((C_word*)((C_word*)t0)[3])[1]);}

/* f_34203 in k34193 in cs:f in k34121 in k34118 in k34115 in k34112 in k34109 in k34106 in k34103 in k34100 in k34097 in k34094 in k34091 in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_34203(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_34203,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_i_foreign_fixnum_argumentp(t2);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)stub6070(C_SCHEME_UNDEFINED,t5,t6,t4));}

/* k34184 in cs:f in k34121 in k34118 in k34115 in k34112 in k34109 in k34106 in k34103 in k34100 in k34097 in k34094 in k34091 in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_34186(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 383  values");
C_values(2,0,((C_word*)t0)[2]);}

/* cs:i in k34121 in k34118 in k34115 in k34112 in k34109 in k34106 in k34103 in k34100 in k34097 in k34094 in k34091 in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_34125(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+13)){
C_save_and_reclaim((void*)tr2r,(void*)f_34125r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_34125r(t0,t1,t2);}}

static void C_ccall f_34125r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(13);
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34129,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t3)[1]))){
t5=t4;
f_34129(2,t5,C_SCHEME_UNDEFINED);}
else{
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34138,a[2]=t4,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34158,a[2]=t5,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_cdr(((C_word*)t3)[1]);
if(C_truep((C_word)C_i_nullp(t7))){
t8=(C_word)C_i_car(((C_word*)t3)[1]);
t9=t6;
f_34158(t9,(C_word)C_i_pairp(t8));}
else{
t8=t6;
f_34158(t8,C_SCHEME_FALSE);}}}

/* k34156 in cs:i in k34121 in k34118 in k34115 in k34112 in k34109 in k34106 in k34103 in k34100 in k34097 in k34094 in k34091 in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_34158(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_34138(t4,t3);}
else{
t2=((C_word*)t0)[2];
f_34138(t2,C_SCHEME_UNDEFINED);}}

/* k34136 in cs:i in k34121 in k34118 in k34115 in k34112 in k34109 in k34106 in k34103 in k34100 in k34097 in k34094 in k34091 in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_34138(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_34138,NULL,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[3])[1]);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34146,a[2]=((C_word)li536),tmp=(C_word)a,a+=3,tmp);
((C_proc5)(void*)(*((C_word*)t3+1)))(5,t3,((C_word*)t0)[2],C_fix(1),t2,((C_word*)((C_word*)t0)[3])[1]);}

/* f_34146 in k34136 in cs:i in k34121 in k34118 in k34115 in k34112 in k34109 in k34106 in k34103 in k34100 in k34097 in k34094 in k34091 in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_34146(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_34146,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_i_foreign_fixnum_argumentp(t2);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)stub6059(C_SCHEME_UNDEFINED,t5,t6,t4));}

/* k34127 in cs:i in k34121 in k34118 in k34115 in k34112 in k34109 in k34106 in k34103 in k34100 in k34097 in k34094 in k34091 in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_34129(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 383  values");
C_values(2,0,((C_word*)t0)[2]);}

/* mp:inhook in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_34035(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_34035,3,t0,t1,t2);}
if(C_truep((C_word)C_i_closurep(t2))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34047,a[2]=t2,a[3]=((C_word)li532),tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34084,a[2]=((C_word)li533),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t4+1)))(3,t4,t1,t3);}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34089,a[2]=((C_word)li534),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t3+1)))(3,t3,t1,C_SCHEME_FALSE);}}

/* f_34089 in mp:inhook in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_34089(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_34089,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub6003(C_SCHEME_UNDEFINED,t2));}

/* f_34084 in mp:inhook in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_34084(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_34084,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub5994(C_SCHEME_UNDEFINED,t2));}

/* a34046 in mp:inhook in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_34047(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_34047,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_34053,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word)li531),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 382  call-with-current-continuation");
t4=*((C_word*)lf[731]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t1,t3);}

/* a34052 in a34046 in mp:inhook in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_34053(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_34053,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34059,a[2]=t2,a[3]=((C_word)li529),tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_34079,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word)li530),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 382  with-exception-handler");
t5=C_retrieve(lf[730]);
((C_proc4)C_retrieve_proc(t5))(4,t5,t1,t3,t4);}

/* a34078 in a34052 in a34046 in mp:inhook in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_34079(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34079,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34083,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 382  %hook");
t3=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k34081 in a34078 in a34052 in a34046 in mp:inhook in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_34083(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_fix(0));}

/* a34058 in a34052 in a34046 in mp:inhook in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_34059(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[14],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_34059,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34063,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34070,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34074,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34077,a[2]=t2,a[3]=t5,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 382  condition-property-accessor");
t7=C_retrieve(lf[727]);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[728],lf[729]);}

/* k34075 in a34058 in a34052 in a34046 in mp:inhook in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_34077(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=t1;
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k34072 in a34058 in a34052 in a34046 in mp:inhook in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_34074(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 382  sprintf");
t2=C_retrieve(lf[31]);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],lf[726],t1);}

/* k34068 in a34058 in a34052 in a34046 in mp:inhook in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_34070(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 382  print-error");
t2=C_retrieve(lf[455]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k34061 in a34058 in a34052 in a34046 in mp:inhook in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_34063(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 382  %cont");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],C_fix(-1));}

/* mp:mm in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_34020(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_34020,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34025,a[2]=((C_word)li527),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t3+1)))(3,t3,t1,t2);}

/* f_34025 in mp:mm in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_34025(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_34025,3,t0,t1,t2);}
t3=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub5987(C_SCHEME_UNDEFINED,t3));}

/* mp:bend in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_33992(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word ab[3],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_33992,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33997,a[2]=((C_word)li525),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t5+1)))(7,t5,t1,C_fix(14),t2,t4,t3,C_fix(0));}

/* f_33997 in mp:bend in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_33997(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_33997,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub5978(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:press in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_33964(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word ab[3],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_33964,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33969,a[2]=((C_word)li523),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t5+1)))(7,t5,t1,C_fix(13),t2,t4,t3,C_fix(0));}

/* f_33969 in mp:press in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_33969(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_33969,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub5963(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:prog in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_33936(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word ab[3],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_33936,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33941,a[2]=((C_word)li521),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t5+1)))(7,t5,t1,C_fix(12),t2,t4,t3,C_fix(0));}

/* f_33941 in mp:prog in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_33941(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_33941,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub5948(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:ctrl in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_33908(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word ab[3],*a=ab;
if(c!=6) C_bad_argc_2(c,6,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr6,(void*)f_33908,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33913,a[2]=((C_word)li519),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t6+1)))(7,t6,t1,C_fix(11),t2,t5,t3,t4);}

/* f_33913 in mp:ctrl in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_33913(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_33913,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub5933(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:touch in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_33880(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word ab[3],*a=ab;
if(c!=6) C_bad_argc_2(c,6,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr6,(void*)f_33880,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33885,a[2]=((C_word)li517),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t6+1)))(7,t6,t1,C_fix(10),t2,t5,t3,t4);}

/* f_33885 in mp:touch in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_33885(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_33885,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub5917(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:on in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_33852(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word ab[3],*a=ab;
if(c!=6) C_bad_argc_2(c,6,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr6,(void*)f_33852,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33857,a[2]=((C_word)li515),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t6+1)))(7,t6,t1,C_fix(9),t2,t5,t3,t4);}

/* f_33857 in mp:on in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_33857(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_33857,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub5901(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:off in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_33824(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word ab[3],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_33824,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33829,a[2]=((C_word)li513),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t5+1)))(7,t5,t1,C_fix(8),t2,t4,t3,C_fix(0));}

/* f_33829 in mp:off in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_33829(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_33829,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub5885(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:midi in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_33796(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word ab[3],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_33796,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33801,a[2]=((C_word)li511),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t7+1)))(7,t7,t1,t2,t3,t4,t5,t6);}

/* f_33801 in mp:midi in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_33801(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_33801,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_flonum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub5870(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:note in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_33768(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word ab[3],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_33768,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33773,a[2]=((C_word)li509),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t7+1)))(7,t7,t1,t2,t3,t4,t5,t6);}

/* f_33773 in mp:note in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_33773(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_33773,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_flonum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub5853(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mm:num-set! in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_33745(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_33745,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33749,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33750,a[2]=((C_word)li507),tmp=(C_word)a,a+=3,tmp);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t4,t2,C_fix(1),t3);}

/* f_33750 in mm:num-set! in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_33750(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_33750,5,t0,t1,t2,t3,t4);}
t5=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=(C_word)C_i_foreign_fixnum_argumentp(t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)stub5835(C_SCHEME_UNDEFINED,t5,t6,t7));}

/* k33747 in mm:num-set! in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_33749(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* mm:num in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_33726(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_33726,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33731,a[2]=((C_word)li505),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(1));}

/* f_33731 in mm:num in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_33731(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_33731,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub5824(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:val-set! in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_33671(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_33671,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33675,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33678,a[2]=t3,a[3]=t2,a[4]=t4,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 382  mm:type?");
t6=C_retrieve(lf[710]);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,t2,C_fix(11));}

/* k33676 in mm:val-set! in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_33678(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33678,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33681,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
if(C_truep(t1)){
t3=t2;
f_33681(2,t3,t1);}
else{
C_trace("ChickenBridge.scm: 382  mm:type?");
t3=C_retrieve(lf[710]);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)t0)[3],C_fix(10));}}

/* k33679 in k33676 in mm:val-set! in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_33681(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33681,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33685,a[2]=((C_word)li502),tmp=(C_word)a,a+=3,tmp);
((C_proc5)(void*)(*((C_word*)t2+1)))(5,t2,((C_word*)t0)[4],((C_word*)t0)[3],C_fix(2),((C_word*)t0)[2]);}
else{
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33705,a[2]=((C_word)li503),tmp=(C_word)a,a+=3,tmp);
((C_proc5)(void*)(*((C_word*)t2+1)))(5,t2,((C_word*)t0)[4],((C_word*)t0)[3],C_fix(1),C_retrieve(lf[712]));}}

/* f_33705 in k33679 in k33676 in mm:val-set! in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_33705(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_33705,5,t0,t1,t2,t3,t4);}
t5=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=(C_word)C_i_foreign_fixnum_argumentp(t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)stub5813(C_SCHEME_UNDEFINED,t5,t6,t7));}

/* f_33685 in k33679 in k33676 in mm:val-set! in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_33685(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_33685,5,t0,t1,t2,t3,t4);}
t5=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=(C_word)C_i_foreign_fixnum_argumentp(t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)stub5803(C_SCHEME_UNDEFINED,t5,t6,t7));}

/* k33673 in mm:val-set! in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_33675(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* mm:val in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_33624(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_33624,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33631,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 382  mm:type?");
t4=C_retrieve(lf[710]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,t2,C_fix(11));}

/* k33629 in mm:val in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_33631(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33631,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33634,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
if(C_truep(t1)){
t3=t2;
f_33634(2,t3,t1);}
else{
C_trace("ChickenBridge.scm: 382  mm:type?");
t3=C_retrieve(lf[710]);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)t0)[2],C_fix(10));}}

/* k33632 in k33629 in mm:val in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_33634(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33634,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33638,a[2]=((C_word)li499),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],C_fix(2));}
else{
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33654,a[2]=((C_word)li500),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],C_fix(1));}}

/* f_33654 in k33632 in k33629 in mm:val in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_33654(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_33654,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub5790(C_SCHEME_UNDEFINED,t4,t5));}

/* f_33638 in k33632 in k33629 in mm:val in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_33638(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_33638,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub5782(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:vel-set! in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_33601(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_33601,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33605,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33606,a[2]=((C_word)li497),tmp=(C_word)a,a+=3,tmp);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t4,t2,C_fix(2),t3);}

/* f_33606 in mm:vel-set! in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_33606(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_33606,5,t0,t1,t2,t3,t4);}
t5=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=(C_word)C_i_foreign_fixnum_argumentp(t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)stub5769(C_SCHEME_UNDEFINED,t5,t6,t7));}

/* k33603 in mm:vel-set! in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_33605(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* mm:vel in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_33582(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_33582,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33587,a[2]=((C_word)li495),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(2));}

/* f_33587 in mm:vel in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_33587(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_33587,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub5758(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:key-set! in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_33559(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_33559,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33563,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33564,a[2]=((C_word)li493),tmp=(C_word)a,a+=3,tmp);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t4,t2,C_fix(1),t3);}

/* f_33564 in mm:key-set! in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_33564(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_33564,5,t0,t1,t2,t3,t4);}
t5=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=(C_word)C_i_foreign_fixnum_argumentp(t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)stub5747(C_SCHEME_UNDEFINED,t5,t6,t7));}

/* k33561 in mm:key-set! in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_33563(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* mm:key in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_33540(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_33540,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33545,a[2]=((C_word)li491),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(1));}

/* f_33545 in mm:key in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_33545(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_33545,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub5736(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:chan-set! in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_33521(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_33521,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33525,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33526,a[2]=((C_word)li489),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t4,t2,t3);}

/* f_33526 in mm:chan-set! in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_33526(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_33526,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub5726(C_SCHEME_UNDEFINED,t4,t5));}

/* k33523 in mm:chan-set! in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_33525(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* mm:chan in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_33506(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_33506,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33511,a[2]=((C_word)li487),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t3+1)))(3,t3,t1,t2);}

/* f_33511 in mm:chan in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_33511(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_33511,3,t0,t1,t2);}
t3=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub5717(C_SCHEME_UNDEFINED,t3));}

/* mm:time-set! in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_33487(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_33487,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33491,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33492,a[2]=((C_word)li485),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t4,t2,t3);}

/* f_33492 in mm:time-set! in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_33492(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_33492,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_flonum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub5708(C_SCHEME_UNDEFINED,t4,t5));}

/* k33489 in mm:time-set! in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_33491(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* mm:time in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_33472(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_33472,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33477,a[2]=((C_word)li483),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t3+1)))(3,t3,t1,t2);}

/* f_33477 in mm:time in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_33477(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_33477,3,t0,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub5698(t3,t4));}

/* mm:copy in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_33457(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_33457,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33462,a[2]=((C_word)li481),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t3+1)))(3,t3,t1,t2);}

/* f_33462 in mm:copy in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_33462(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_33462,3,t0,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub5690(t3,t4));}

/* mm:free in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_33439(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_33439,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33443,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33447,a[2]=((C_word)li479),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t4+1)))(3,t4,t3,t2);}

/* f_33447 in mm:free in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_33447(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_33447,3,t0,t1,t2);}
t3=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub5682(C_SCHEME_UNDEFINED,t3));}

/* k33441 in mm:free in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_33443(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 382  values");
C_values(2,0,((C_word*)t0)[2]);}

/* mm:make-bend in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_32969(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+58)){
C_save_and_reclaim((void*)tr2r,(void*)f_32969r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_32969r(t0,t1,t2);}}

static void C_ccall f_32969r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word *a=C_alloc(58);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(8192);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=t2;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_32973,a[2]=t14,a[3]=t12,a[4]=t18,a[5]=t10,a[6]=t2,a[7]=t16,a[8]=t6,a[9]=t8,a[10]=t4,a[11]=t1,tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t16)[1]))){
t20=t19;
f_32973(t20,C_SCHEME_UNDEFINED);}
else{
t20=(C_word)C_i_car(((C_word*)t16)[1]);
t21=(C_word)C_eqp(t20,lf[681]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33298,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t10,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t10)[1])){
C_trace("error");
t23=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[19],lf[681]);}
else{
t23=t22;
f_33298(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t20,lf[689]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33333,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t12,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[19],lf[689]);}
else{
t24=t23;
f_33333(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(C_word)C_eqp(t20,lf[684]);
if(C_truep(t23)){
t24=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33368,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t14,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t25=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[19],lf[684]);}
else{
t25=t24;
f_33368(2,t25,C_SCHEME_UNDEFINED);}}
else{
t24=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_33397,a[2]=t19,a[3]=t10,a[4]=t4,a[5]=t16,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t25=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[10],t2);}
else{
t25=t24;
f_33397(2,t25,C_SCHEME_UNDEFINED);}}}}}}

/* k33395 in mm:make-bend in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_33397(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33397,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33404,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33412,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k33410 in k33395 in mm:make-bend in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_33412(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_33404(2,t2,C_SCHEME_UNDEFINED);}}

/* k33402 in k33395 in mm:make-bend in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_33404(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_32973(t5,t4);}

/* k33366 in mm:make-bend in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_33368(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33368,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33372,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_33372(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33370 in k33366 in mm:make-bend in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_33372(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32973(t7,t6);}

/* k33331 in mm:make-bend in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_33333(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33333,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33337,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_33337(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33335 in k33331 in mm:make-bend in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_33337(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32973(t7,t6);}

/* k33296 in mm:make-bend in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_33298(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33298,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33302,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_33302(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33300 in k33296 in mm:make-bend in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_33302(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32973(t7,t6);}

/* k32971 in mm:make-bend in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_32973(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[42],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32973,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_32976,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_32976(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[681]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33163,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[681]);}
else{
t6=t5;
f_33163(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[689]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33198,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[689]);}
else{
t7=t6;
f_33198(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[684]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33233,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[684]);}
else{
t8=t7;
f_33233(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_33262,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_33262(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k33260 in k32971 in mm:make-bend in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_33262(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33262,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33269,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33277,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k33275 in k33260 in k32971 in mm:make-bend in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_33277(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_33269(2,t2,C_SCHEME_UNDEFINED);}}

/* k33267 in k33260 in k32971 in mm:make-bend in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_33269(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_32976(t5,t4);}

/* k33231 in k32971 in mm:make-bend in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_33233(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33233,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33237,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_33237(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33235 in k33231 in k32971 in mm:make-bend in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_33237(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32976(t7,t6);}

/* k33196 in k32971 in mm:make-bend in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_33198(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33198,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33202,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_33202(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33200 in k33196 in k32971 in mm:make-bend in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_33202(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32976(t7,t6);}

/* k33161 in k32971 in mm:make-bend in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_33163(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33163,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33167,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_33167(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33165 in k33161 in k32971 in mm:make-bend in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_33167(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32976(t7,t6);}

/* k32974 in k32971 in mm:make-bend in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_32976(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32976,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32979,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_32979(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[681]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33028,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[681]);}
else{
t6=t5;
f_33028(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[689]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33063,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[689]);}
else{
t7=t6;
f_33063(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[684]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33098,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[684]);}
else{
t8=t7;
f_33098(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_33127,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_33127(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k33125 in k32974 in k32971 in mm:make-bend in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_33127(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33127,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33134,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33142,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k33140 in k33125 in k32974 in k32971 in mm:make-bend in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_33142(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_33134(2,t2,C_SCHEME_UNDEFINED);}}

/* k33132 in k33125 in k32974 in k32971 in mm:make-bend in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_33134(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_32979(t5,t4);}

/* k33096 in k32974 in k32971 in mm:make-bend in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_33098(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33098,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33102,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_33102(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33100 in k33096 in k32974 in k32971 in mm:make-bend in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_33102(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32979(t7,t6);}

/* k33061 in k32974 in k32971 in mm:make-bend in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_33063(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33063,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33067,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_33067(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33065 in k33061 in k32974 in k32971 in mm:make-bend in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_33067(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32979(t7,t6);}

/* k33026 in k32974 in k32971 in mm:make-bend in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_33028(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33028,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33032,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_33032(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33030 in k33026 in k32974 in k32971 in mm:make-bend in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_33032(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32979(t7,t6);}

/* k32977 in k32974 in k32971 in mm:make-bend in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_32979(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32979,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_32982,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_32982(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k32980 in k32977 in k32974 in k32971 in mm:make-bend in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_32982(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32982,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32986,a[2]=((C_word)li477),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t2+1)))(7,t2,((C_word*)t0)[5],C_fix(14),((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0));}

/* f_32986 in k32980 in k32977 in k32974 in k32971 in mm:make-bend in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_32986(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_32986,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t8=(C_word)C_i_foreign_fixnum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_fixnum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=t1;
((C_proc2)(void*)(*((C_word*)t13+1)))(2,t13,(C_word)stub5659(t7,t8,t9,t10,t11,t12));}

/* mm:press? in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_32950(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_32950,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32955,a[2]=((C_word)li475),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(13));}

/* f_32955 in mm:press? in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_32955(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_32955,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub5580(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:make-press in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_32499(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+58)){
C_save_and_reclaim((void*)tr2r,(void*)f_32499r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_32499r(t0,t1,t2);}}

static void C_ccall f_32499r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word *a=C_alloc(58);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(0);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=t2;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_32503,a[2]=t14,a[3]=t12,a[4]=t18,a[5]=t10,a[6]=t2,a[7]=t16,a[8]=t6,a[9]=t8,a[10]=t4,a[11]=t1,tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t16)[1]))){
t20=t19;
f_32503(t20,C_SCHEME_UNDEFINED);}
else{
t20=(C_word)C_i_car(((C_word*)t16)[1]);
t21=(C_word)C_eqp(t20,lf[681]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32828,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t10,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t10)[1])){
C_trace("error");
t23=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[19],lf[681]);}
else{
t23=t22;
f_32828(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t20,lf[689]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32863,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t12,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[19],lf[689]);}
else{
t24=t23;
f_32863(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(C_word)C_eqp(t20,lf[684]);
if(C_truep(t23)){
t24=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32898,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t14,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t25=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[19],lf[684]);}
else{
t25=t24;
f_32898(2,t25,C_SCHEME_UNDEFINED);}}
else{
t24=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_32927,a[2]=t19,a[3]=t10,a[4]=t4,a[5]=t16,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t25=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[10],t2);}
else{
t25=t24;
f_32927(2,t25,C_SCHEME_UNDEFINED);}}}}}}

/* k32925 in mm:make-press in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_32927(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32927,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32934,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32942,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k32940 in k32925 in mm:make-press in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_32942(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_32934(2,t2,C_SCHEME_UNDEFINED);}}

/* k32932 in k32925 in mm:make-press in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_32934(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_32503(t5,t4);}

/* k32896 in mm:make-press in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_32898(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32898,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32902,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_32902(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32900 in k32896 in mm:make-press in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_32902(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32503(t7,t6);}

/* k32861 in mm:make-press in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_32863(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32863,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32867,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_32867(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32865 in k32861 in mm:make-press in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_32867(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32503(t7,t6);}

/* k32826 in mm:make-press in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_32828(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32828,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32832,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_32832(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32830 in k32826 in mm:make-press in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_32832(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32503(t7,t6);}

/* k32501 in mm:make-press in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_32503(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[42],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32503,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_32506,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_32506(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[681]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32693,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[681]);}
else{
t6=t5;
f_32693(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[689]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32728,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[689]);}
else{
t7=t6;
f_32728(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[684]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32763,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[684]);}
else{
t8=t7;
f_32763(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_32792,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_32792(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k32790 in k32501 in mm:make-press in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_32792(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32792,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32799,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32807,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k32805 in k32790 in k32501 in mm:make-press in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_32807(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_32799(2,t2,C_SCHEME_UNDEFINED);}}

/* k32797 in k32790 in k32501 in mm:make-press in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_32799(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_32506(t5,t4);}

/* k32761 in k32501 in mm:make-press in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_32763(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32763,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32767,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_32767(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32765 in k32761 in k32501 in mm:make-press in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_32767(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32506(t7,t6);}

/* k32726 in k32501 in mm:make-press in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_32728(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32728,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32732,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_32732(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32730 in k32726 in k32501 in mm:make-press in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_32732(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32506(t7,t6);}

/* k32691 in k32501 in mm:make-press in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_32693(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32693,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32697,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_32697(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32695 in k32691 in k32501 in mm:make-press in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_32697(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32506(t7,t6);}

/* k32504 in k32501 in mm:make-press in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_32506(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32506,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32509,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_32509(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[681]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32558,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[681]);}
else{
t6=t5;
f_32558(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[689]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32593,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[689]);}
else{
t7=t6;
f_32593(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[684]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32628,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[684]);}
else{
t8=t7;
f_32628(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_32657,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_32657(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k32655 in k32504 in k32501 in mm:make-press in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_32657(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32657,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32664,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32672,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k32670 in k32655 in k32504 in k32501 in mm:make-press in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_32672(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_32664(2,t2,C_SCHEME_UNDEFINED);}}

/* k32662 in k32655 in k32504 in k32501 in mm:make-press in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_32664(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_32509(t5,t4);}

/* k32626 in k32504 in k32501 in mm:make-press in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_32628(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32628,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32632,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_32632(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32630 in k32626 in k32504 in k32501 in mm:make-press in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_32632(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32509(t7,t6);}

/* k32591 in k32504 in k32501 in mm:make-press in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_32593(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32593,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32597,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_32597(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32595 in k32591 in k32504 in k32501 in mm:make-press in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_32597(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32509(t7,t6);}

/* k32556 in k32504 in k32501 in mm:make-press in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_32558(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32558,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32562,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_32562(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32560 in k32556 in k32504 in k32501 in mm:make-press in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_32562(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32509(t7,t6);}

/* k32507 in k32504 in k32501 in mm:make-press in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_32509(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32509,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_32512,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_32512(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k32510 in k32507 in k32504 in k32501 in mm:make-press in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_32512(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32512,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32516,a[2]=((C_word)li473),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t2+1)))(7,t2,((C_word*)t0)[5],C_fix(13),((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0));}

/* f_32516 in k32510 in k32507 in k32504 in k32501 in mm:make-press in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_32516(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_32516,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t8=(C_word)C_i_foreign_fixnum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_fixnum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=t1;
((C_proc2)(void*)(*((C_word*)t13+1)))(2,t13,(C_word)stub5565(t7,t8,t9,t10,t11,t12));}

/* mm:prog? in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_32480(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_32480,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32485,a[2]=((C_word)li471),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(12));}

/* f_32485 in mm:prog? in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_32485(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_32485,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub5486(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:make-prog in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_32029(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+58)){
C_save_and_reclaim((void*)tr2r,(void*)f_32029r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_32029r(t0,t1,t2);}}

static void C_ccall f_32029r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word *a=C_alloc(58);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(0);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=t2;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_32033,a[2]=t14,a[3]=t12,a[4]=t18,a[5]=t10,a[6]=t2,a[7]=t16,a[8]=t6,a[9]=t8,a[10]=t4,a[11]=t1,tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t16)[1]))){
t20=t19;
f_32033(t20,C_SCHEME_UNDEFINED);}
else{
t20=(C_word)C_i_car(((C_word*)t16)[1]);
t21=(C_word)C_eqp(t20,lf[681]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32358,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t10,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t10)[1])){
C_trace("error");
t23=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[19],lf[681]);}
else{
t23=t22;
f_32358(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t20,lf[689]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32393,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t12,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[19],lf[689]);}
else{
t24=t23;
f_32393(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(C_word)C_eqp(t20,lf[684]);
if(C_truep(t23)){
t24=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32428,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t14,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t25=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[19],lf[684]);}
else{
t25=t24;
f_32428(2,t25,C_SCHEME_UNDEFINED);}}
else{
t24=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_32457,a[2]=t19,a[3]=t10,a[4]=t4,a[5]=t16,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t25=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[10],t2);}
else{
t25=t24;
f_32457(2,t25,C_SCHEME_UNDEFINED);}}}}}}

/* k32455 in mm:make-prog in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_32457(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32457,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32464,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32472,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k32470 in k32455 in mm:make-prog in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_32472(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_32464(2,t2,C_SCHEME_UNDEFINED);}}

/* k32462 in k32455 in mm:make-prog in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_32464(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_32033(t5,t4);}

/* k32426 in mm:make-prog in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_32428(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32428,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32432,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_32432(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32430 in k32426 in mm:make-prog in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_32432(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32033(t7,t6);}

/* k32391 in mm:make-prog in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_32393(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32393,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32397,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_32397(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32395 in k32391 in mm:make-prog in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_32397(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32033(t7,t6);}

/* k32356 in mm:make-prog in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_32358(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32358,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32362,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_32362(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32360 in k32356 in mm:make-prog in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_32362(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32033(t7,t6);}

/* k32031 in mm:make-prog in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_32033(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[42],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32033,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_32036,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_32036(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[681]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32223,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[681]);}
else{
t6=t5;
f_32223(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[689]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32258,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[689]);}
else{
t7=t6;
f_32258(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[684]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32293,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[684]);}
else{
t8=t7;
f_32293(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_32322,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_32322(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k32320 in k32031 in mm:make-prog in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_32322(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32322,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32329,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32337,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k32335 in k32320 in k32031 in mm:make-prog in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_32337(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_32329(2,t2,C_SCHEME_UNDEFINED);}}

/* k32327 in k32320 in k32031 in mm:make-prog in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_32329(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_32036(t5,t4);}

/* k32291 in k32031 in mm:make-prog in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_32293(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32293,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32297,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_32297(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32295 in k32291 in k32031 in mm:make-prog in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_32297(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32036(t7,t6);}

/* k32256 in k32031 in mm:make-prog in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_32258(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32258,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32262,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_32262(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32260 in k32256 in k32031 in mm:make-prog in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_32262(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32036(t7,t6);}

/* k32221 in k32031 in mm:make-prog in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_32223(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32223,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32227,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_32227(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32225 in k32221 in k32031 in mm:make-prog in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_32227(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32036(t7,t6);}

/* k32034 in k32031 in mm:make-prog in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_32036(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32036,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32039,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_32039(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[681]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32088,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[681]);}
else{
t6=t5;
f_32088(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[689]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32123,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[689]);}
else{
t7=t6;
f_32123(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[684]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32158,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[684]);}
else{
t8=t7;
f_32158(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_32187,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_32187(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k32185 in k32034 in k32031 in mm:make-prog in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_32187(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32187,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32194,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32202,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k32200 in k32185 in k32034 in k32031 in mm:make-prog in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_32202(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_32194(2,t2,C_SCHEME_UNDEFINED);}}

/* k32192 in k32185 in k32034 in k32031 in mm:make-prog in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_32194(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_32039(t5,t4);}

/* k32156 in k32034 in k32031 in mm:make-prog in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_32158(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32158,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32162,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_32162(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32160 in k32156 in k32034 in k32031 in mm:make-prog in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_32162(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32039(t7,t6);}

/* k32121 in k32034 in k32031 in mm:make-prog in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_32123(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32123,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32127,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_32127(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32125 in k32121 in k32034 in k32031 in mm:make-prog in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_32127(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32039(t7,t6);}

/* k32086 in k32034 in k32031 in mm:make-prog in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_32088(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32088,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32092,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_32092(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32090 in k32086 in k32034 in k32031 in mm:make-prog in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_32092(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32039(t7,t6);}

/* k32037 in k32034 in k32031 in mm:make-prog in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_32039(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32039,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_32042,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_32042(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k32040 in k32037 in k32034 in k32031 in mm:make-prog in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_32042(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32042,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32046,a[2]=((C_word)li469),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t2+1)))(7,t2,((C_word*)t0)[5],C_fix(12),((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0));}

/* f_32046 in k32040 in k32037 in k32034 in k32031 in mm:make-prog in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_32046(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_32046,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t8=(C_word)C_i_foreign_fixnum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_fixnum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=t1;
((C_proc2)(void*)(*((C_word*)t13+1)))(2,t13,(C_word)stub5471(t7,t8,t9,t10,t11,t12));}

/* mm:ctrl? in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_32010(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_32010,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32015,a[2]=((C_word)li467),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(11));}

/* f_32015 in mm:ctrl? in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_32015(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_32015,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub5392(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:make-ctrl in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_31281(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+72)){
C_save_and_reclaim((void*)tr2r,(void*)f_31281r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_31281r(t0,t1,t2);}}

static void C_ccall f_31281r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word *a=C_alloc(72);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(0);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_fix(0);
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_FALSE;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=t2;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_SCHEME_FALSE;
t22=(*a=C_VECTOR_TYPE|1,a[1]=t21,tmp=(C_word)a,a+=2,tmp);
t23=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_31285,a[2]=t18,a[3]=t16,a[4]=t14,a[5]=t22,a[6]=t12,a[7]=t2,a[8]=t20,a[9]=t8,a[10]=t6,a[11]=t10,a[12]=t4,a[13]=t1,tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t20)[1]))){
t24=t23;
f_31285(t24,C_SCHEME_UNDEFINED);}
else{
t24=(C_word)C_i_car(((C_word*)t20)[1]);
t25=(C_word)C_eqp(t24,lf[681]);
if(C_truep(t25)){
t26=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31853,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t12,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t27=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t27))(4,t27,t26,lf[19],lf[681]);}
else{
t27=t26;
f_31853(2,t27,C_SCHEME_UNDEFINED);}}
else{
t26=(C_word)C_eqp(t24,lf[692]);
if(C_truep(t26)){
t27=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31888,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t14,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t28=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t28))(4,t28,t27,lf[19],lf[692]);}
else{
t28=t27;
f_31888(2,t28,C_SCHEME_UNDEFINED);}}
else{
t27=(C_word)C_eqp(t24,lf[689]);
if(C_truep(t27)){
t28=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31923,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t16,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t16)[1])){
C_trace("error");
t29=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t29))(4,t29,t28,lf[19],lf[689]);}
else{
t29=t28;
f_31923(2,t29,C_SCHEME_UNDEFINED);}}
else{
t28=(C_word)C_eqp(t24,lf[684]);
if(C_truep(t28)){
t29=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31958,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t18,a[7]=t10,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t30=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t30))(4,t30,t29,lf[19],lf[684]);}
else{
t30=t29;
f_31958(2,t30,C_SCHEME_UNDEFINED);}}
else{
t29=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_31987,a[2]=t23,a[3]=t12,a[4]=t4,a[5]=t20,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t22)[1])){
C_trace("error");
t30=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t30))(4,t30,t29,lf[10],t2);}
else{
t30=t29;
f_31987(2,t30,C_SCHEME_UNDEFINED);}}}}}}}

/* k31985 in mm:make-ctrl in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_31987(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31987,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31994,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32002,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k32000 in k31985 in mm:make-ctrl in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_32002(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_31994(2,t2,C_SCHEME_UNDEFINED);}}

/* k31992 in k31985 in mm:make-ctrl in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_31994(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_31285(t5,t4);}

/* k31956 in mm:make-ctrl in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_31958(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31958,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31962,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31962(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31960 in k31956 in mm:make-ctrl in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_31962(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31285(t7,t6);}

/* k31921 in mm:make-ctrl in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_31923(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31923,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31927,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31927(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31925 in k31921 in mm:make-ctrl in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_31927(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31285(t7,t6);}

/* k31886 in mm:make-ctrl in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_31888(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31888,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31892,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31892(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31890 in k31886 in mm:make-ctrl in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_31892(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31285(t7,t6);}

/* k31851 in mm:make-ctrl in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_31853(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31853,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31857,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31857(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31855 in k31851 in mm:make-ctrl in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_31857(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31285(t7,t6);}

/* k31283 in mm:make-ctrl in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_31285(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[52],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31285,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_31288,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_31288(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[681]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31683,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[681]);}
else{
t6=t5;
f_31683(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[692]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31718,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[692]);}
else{
t7=t6;
f_31718(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[689]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31753,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[689]);}
else{
t8=t7;
f_31753(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[684]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31788,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[684]);}
else{
t9=t8;
f_31788(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_31817,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[10],((C_word*)t0)[7]);}
else{
t9=t8;
f_31817(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k31815 in k31283 in mm:make-ctrl in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_31817(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31817,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31824,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31832,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k31830 in k31815 in k31283 in mm:make-ctrl in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_31832(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_31824(2,t2,C_SCHEME_UNDEFINED);}}

/* k31822 in k31815 in k31283 in mm:make-ctrl in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_31824(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_31288(t5,t4);}

/* k31786 in k31283 in mm:make-ctrl in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_31788(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31788,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31792,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31792(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31790 in k31786 in k31283 in mm:make-ctrl in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_31792(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31288(t7,t6);}

/* k31751 in k31283 in mm:make-ctrl in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_31753(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31753,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31757,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31757(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31755 in k31751 in k31283 in mm:make-ctrl in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_31757(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31288(t7,t6);}

/* k31716 in k31283 in mm:make-ctrl in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_31718(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31718,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31722,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31722(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31720 in k31716 in k31283 in mm:make-ctrl in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_31722(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31288(t7,t6);}

/* k31681 in k31283 in mm:make-ctrl in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_31683(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31683,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31687,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31687(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31685 in k31681 in k31283 in mm:make-ctrl in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_31687(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31288(t7,t6);}

/* k31286 in k31283 in mm:make-ctrl in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_31288(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[52],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31288,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_31291,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_31291(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[681]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31513,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[681]);}
else{
t6=t5;
f_31513(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[692]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31548,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[692]);}
else{
t7=t6;
f_31548(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[689]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31583,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[689]);}
else{
t8=t7;
f_31583(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[684]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31618,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[684]);}
else{
t9=t8;
f_31618(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_31647,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[10],((C_word*)t0)[7]);}
else{
t9=t8;
f_31647(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k31645 in k31286 in k31283 in mm:make-ctrl in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_31647(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31647,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31654,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31662,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k31660 in k31645 in k31286 in k31283 in mm:make-ctrl in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_31662(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_31654(2,t2,C_SCHEME_UNDEFINED);}}

/* k31652 in k31645 in k31286 in k31283 in mm:make-ctrl in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_31654(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_31291(t5,t4);}

/* k31616 in k31286 in k31283 in mm:make-ctrl in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_31618(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31618,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31622,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31622(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31620 in k31616 in k31286 in k31283 in mm:make-ctrl in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_31622(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31291(t7,t6);}

/* k31581 in k31286 in k31283 in mm:make-ctrl in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_31583(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31583,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31587,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31587(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31585 in k31581 in k31286 in k31283 in mm:make-ctrl in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_31587(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31291(t7,t6);}

/* k31546 in k31286 in k31283 in mm:make-ctrl in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_31548(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31548,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31552,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31552(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31550 in k31546 in k31286 in k31283 in mm:make-ctrl in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_31552(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31291(t7,t6);}

/* k31511 in k31286 in k31283 in mm:make-ctrl in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_31513(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31513,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31517,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31517(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31515 in k31511 in k31286 in k31283 in mm:make-ctrl in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_31517(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31291(t7,t6);}

/* k31289 in k31286 in k31283 in mm:make-ctrl in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_31291(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[47],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31291,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_31294,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[11],a[7]=((C_word*)t0)[12],a[8]=((C_word*)t0)[13],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_31294(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[681]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31343,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[681]);}
else{
t6=t5;
f_31343(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[692]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31378,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[692]);}
else{
t7=t6;
f_31378(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[689]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31413,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[689]);}
else{
t8=t7;
f_31413(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[684]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31448,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[684]);}
else{
t9=t8;
f_31448(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_31477,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[10],((C_word*)t0)[7]);}
else{
t9=t8;
f_31477(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k31475 in k31289 in k31286 in k31283 in mm:make-ctrl in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_31477(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31477,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31484,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31492,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k31490 in k31475 in k31289 in k31286 in k31283 in mm:make-ctrl in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_31492(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_31484(2,t2,C_SCHEME_UNDEFINED);}}

/* k31482 in k31475 in k31289 in k31286 in k31283 in mm:make-ctrl in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_31484(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_31294(t5,t4);}

/* k31446 in k31289 in k31286 in k31283 in mm:make-ctrl in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_31448(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31448,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31452,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31452(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31450 in k31446 in k31289 in k31286 in k31283 in mm:make-ctrl in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_31452(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31294(t7,t6);}

/* k31411 in k31289 in k31286 in k31283 in mm:make-ctrl in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_31413(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31413,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31417,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31417(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31415 in k31411 in k31289 in k31286 in k31283 in mm:make-ctrl in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_31417(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31294(t7,t6);}

/* k31376 in k31289 in k31286 in k31283 in mm:make-ctrl in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_31378(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31378,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31382,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31382(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31380 in k31376 in k31289 in k31286 in k31283 in mm:make-ctrl in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_31382(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31294(t7,t6);}

/* k31341 in k31289 in k31286 in k31283 in mm:make-ctrl in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_31343(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31343,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31347,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31347(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31345 in k31341 in k31289 in k31286 in k31283 in mm:make-ctrl in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_31347(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31294(t7,t6);}

/* k31292 in k31289 in k31286 in k31283 in mm:make-ctrl in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_31294(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31294,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31297,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_31297(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k31295 in k31292 in k31289 in k31286 in k31283 in mm:make-ctrl in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_31297(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31297,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31301,a[2]=((C_word)li465),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t2+1)))(7,t2,((C_word*)t0)[6],C_fix(11),((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* f_31301 in k31295 in k31292 in k31289 in k31286 in k31283 in mm:make-ctrl in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_31301(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_31301,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t8=(C_word)C_i_foreign_fixnum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_fixnum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=t1;
((C_proc2)(void*)(*((C_word*)t13+1)))(2,t13,(C_word)stub5376(t7,t8,t9,t10,t11,t12));}

/* mm:touch? in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_31262(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_31262,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31267,a[2]=((C_word)li463),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(10));}

/* f_31267 in mm:touch? in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_31267(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_31267,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub5260(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:make-touch in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_30533(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+72)){
C_save_and_reclaim((void*)tr2r,(void*)f_30533r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_30533r(t0,t1,t2);}}

static void C_ccall f_30533r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word *a=C_alloc(72);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(0);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_fix(0);
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_FALSE;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=t2;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_SCHEME_FALSE;
t22=(*a=C_VECTOR_TYPE|1,a[1]=t21,tmp=(C_word)a,a+=2,tmp);
t23=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_30537,a[2]=t18,a[3]=t16,a[4]=t14,a[5]=t22,a[6]=t12,a[7]=t2,a[8]=t20,a[9]=t8,a[10]=t6,a[11]=t10,a[12]=t4,a[13]=t1,tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t20)[1]))){
t24=t23;
f_30537(t24,C_SCHEME_UNDEFINED);}
else{
t24=(C_word)C_i_car(((C_word*)t20)[1]);
t25=(C_word)C_eqp(t24,lf[681]);
if(C_truep(t25)){
t26=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31105,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t12,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t27=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t27))(4,t27,t26,lf[19],lf[681]);}
else{
t27=t26;
f_31105(2,t27,C_SCHEME_UNDEFINED);}}
else{
t26=(C_word)C_eqp(t24,lf[682]);
if(C_truep(t26)){
t27=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31140,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t14,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t28=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t28))(4,t28,t27,lf[19],lf[682]);}
else{
t28=t27;
f_31140(2,t28,C_SCHEME_UNDEFINED);}}
else{
t27=(C_word)C_eqp(t24,lf[689]);
if(C_truep(t27)){
t28=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31175,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t16,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t16)[1])){
C_trace("error");
t29=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t29))(4,t29,t28,lf[19],lf[689]);}
else{
t29=t28;
f_31175(2,t29,C_SCHEME_UNDEFINED);}}
else{
t28=(C_word)C_eqp(t24,lf[684]);
if(C_truep(t28)){
t29=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31210,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t18,a[7]=t10,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t30=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t30))(4,t30,t29,lf[19],lf[684]);}
else{
t30=t29;
f_31210(2,t30,C_SCHEME_UNDEFINED);}}
else{
t29=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_31239,a[2]=t23,a[3]=t12,a[4]=t4,a[5]=t20,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t22)[1])){
C_trace("error");
t30=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t30))(4,t30,t29,lf[10],t2);}
else{
t30=t29;
f_31239(2,t30,C_SCHEME_UNDEFINED);}}}}}}}

/* k31237 in mm:make-touch in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_31239(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31239,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31246,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31254,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k31252 in k31237 in mm:make-touch in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_31254(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_31246(2,t2,C_SCHEME_UNDEFINED);}}

/* k31244 in k31237 in mm:make-touch in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_31246(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_30537(t5,t4);}

/* k31208 in mm:make-touch in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_31210(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31210,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31214,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31214(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31212 in k31208 in mm:make-touch in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_31214(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30537(t7,t6);}

/* k31173 in mm:make-touch in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_31175(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31175,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31179,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31179(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31177 in k31173 in mm:make-touch in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_31179(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30537(t7,t6);}

/* k31138 in mm:make-touch in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_31140(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31140,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31144,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31144(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31142 in k31138 in mm:make-touch in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_31144(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30537(t7,t6);}

/* k31103 in mm:make-touch in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_31105(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31105,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31109,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31109(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31107 in k31103 in mm:make-touch in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_31109(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30537(t7,t6);}

/* k30535 in mm:make-touch in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_30537(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[52],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30537,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_30540,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_30540(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[681]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30935,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[681]);}
else{
t6=t5;
f_30935(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[682]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30970,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[682]);}
else{
t7=t6;
f_30970(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[689]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31005,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[689]);}
else{
t8=t7;
f_31005(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[684]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31040,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[684]);}
else{
t9=t8;
f_31040(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_31069,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[10],((C_word*)t0)[7]);}
else{
t9=t8;
f_31069(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k31067 in k30535 in mm:make-touch in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_31069(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31069,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31076,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31084,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k31082 in k31067 in k30535 in mm:make-touch in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_31084(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_31076(2,t2,C_SCHEME_UNDEFINED);}}

/* k31074 in k31067 in k30535 in mm:make-touch in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_31076(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_30540(t5,t4);}

/* k31038 in k30535 in mm:make-touch in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_31040(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31040,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31044,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31044(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31042 in k31038 in k30535 in mm:make-touch in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_31044(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30540(t7,t6);}

/* k31003 in k30535 in mm:make-touch in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_31005(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31005,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31009,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31009(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31007 in k31003 in k30535 in mm:make-touch in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_31009(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30540(t7,t6);}

/* k30968 in k30535 in mm:make-touch in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_30970(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30970,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30974,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30974(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30972 in k30968 in k30535 in mm:make-touch in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_30974(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30540(t7,t6);}

/* k30933 in k30535 in mm:make-touch in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_30935(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30935,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30939,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30939(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30937 in k30933 in k30535 in mm:make-touch in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_30939(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30540(t7,t6);}

/* k30538 in k30535 in mm:make-touch in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_30540(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[52],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30540,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_30543,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_30543(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[681]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30765,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[681]);}
else{
t6=t5;
f_30765(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[682]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30800,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[682]);}
else{
t7=t6;
f_30800(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[689]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30835,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[689]);}
else{
t8=t7;
f_30835(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[684]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30870,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[684]);}
else{
t9=t8;
f_30870(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_30899,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[10],((C_word*)t0)[7]);}
else{
t9=t8;
f_30899(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k30897 in k30538 in k30535 in mm:make-touch in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_30899(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30899,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30906,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30914,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k30912 in k30897 in k30538 in k30535 in mm:make-touch in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_30914(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_30906(2,t2,C_SCHEME_UNDEFINED);}}

/* k30904 in k30897 in k30538 in k30535 in mm:make-touch in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_30906(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_30543(t5,t4);}

/* k30868 in k30538 in k30535 in mm:make-touch in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_30870(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30870,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30874,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30874(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30872 in k30868 in k30538 in k30535 in mm:make-touch in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_30874(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30543(t7,t6);}

/* k30833 in k30538 in k30535 in mm:make-touch in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_30835(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30835,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30839,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30839(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30837 in k30833 in k30538 in k30535 in mm:make-touch in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_30839(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30543(t7,t6);}

/* k30798 in k30538 in k30535 in mm:make-touch in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_30800(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30800,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30804,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30804(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30802 in k30798 in k30538 in k30535 in mm:make-touch in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_30804(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30543(t7,t6);}

/* k30763 in k30538 in k30535 in mm:make-touch in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_30765(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30765,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30769,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30769(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30767 in k30763 in k30538 in k30535 in mm:make-touch in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_30769(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30543(t7,t6);}

/* k30541 in k30538 in k30535 in mm:make-touch in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_30543(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[47],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30543,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_30546,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[11],a[7]=((C_word*)t0)[12],a[8]=((C_word*)t0)[13],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_30546(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[681]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30595,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[681]);}
else{
t6=t5;
f_30595(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[682]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30630,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[682]);}
else{
t7=t6;
f_30630(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[689]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30665,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[689]);}
else{
t8=t7;
f_30665(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[684]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30700,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[684]);}
else{
t9=t8;
f_30700(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_30729,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[10],((C_word*)t0)[7]);}
else{
t9=t8;
f_30729(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k30727 in k30541 in k30538 in k30535 in mm:make-touch in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_30729(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30729,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30736,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30744,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k30742 in k30727 in k30541 in k30538 in k30535 in mm:make-touch in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_30744(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_30736(2,t2,C_SCHEME_UNDEFINED);}}

/* k30734 in k30727 in k30541 in k30538 in k30535 in mm:make-touch in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_30736(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_30546(t5,t4);}

/* k30698 in k30541 in k30538 in k30535 in mm:make-touch in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_30700(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30700,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30704,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30704(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30702 in k30698 in k30541 in k30538 in k30535 in mm:make-touch in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_30704(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30546(t7,t6);}

/* k30663 in k30541 in k30538 in k30535 in mm:make-touch in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_30665(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30665,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30669,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30669(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30667 in k30663 in k30541 in k30538 in k30535 in mm:make-touch in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_30669(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30546(t7,t6);}

/* k30628 in k30541 in k30538 in k30535 in mm:make-touch in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_30630(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30630,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30634,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30634(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30632 in k30628 in k30541 in k30538 in k30535 in mm:make-touch in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_30634(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30546(t7,t6);}

/* k30593 in k30541 in k30538 in k30535 in mm:make-touch in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_30595(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30595,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30599,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30599(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30597 in k30593 in k30541 in k30538 in k30535 in mm:make-touch in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_30599(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30546(t7,t6);}

/* k30544 in k30541 in k30538 in k30535 in mm:make-touch in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_30546(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30546,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30549,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_30549(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k30547 in k30544 in k30541 in k30538 in k30535 in mm:make-touch in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_30549(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30549,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30553,a[2]=((C_word)li461),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t2+1)))(7,t2,((C_word*)t0)[6],C_fix(10),((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* f_30553 in k30547 in k30544 in k30541 in k30538 in k30535 in mm:make-touch in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_30553(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_30553,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t8=(C_word)C_i_foreign_fixnum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_fixnum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=t1;
((C_proc2)(void*)(*((C_word*)t13+1)))(2,t13,(C_word)stub5244(t7,t8,t9,t10,t11,t12));}

/* mm:off? in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_30514(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_30514,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30519,a[2]=((C_word)li459),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(8));}

/* f_30519 in mm:off? in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_30519(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_30519,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub5128(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:make-off in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_30063(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+58)){
C_save_and_reclaim((void*)tr2r,(void*)f_30063r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_30063r(t0,t1,t2);}}

static void C_ccall f_30063r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word *a=C_alloc(58);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(60);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=t2;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_30067,a[2]=t14,a[3]=t12,a[4]=t18,a[5]=t10,a[6]=t2,a[7]=t16,a[8]=t6,a[9]=t8,a[10]=t4,a[11]=t1,tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t16)[1]))){
t20=t19;
f_30067(t20,C_SCHEME_UNDEFINED);}
else{
t20=(C_word)C_i_car(((C_word*)t16)[1]);
t21=(C_word)C_eqp(t20,lf[681]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30392,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t10,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t10)[1])){
C_trace("error");
t23=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[19],lf[681]);}
else{
t23=t22;
f_30392(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t20,lf[682]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30427,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t12,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[19],lf[682]);}
else{
t24=t23;
f_30427(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(C_word)C_eqp(t20,lf[684]);
if(C_truep(t23)){
t24=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30462,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t14,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t25=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[19],lf[684]);}
else{
t25=t24;
f_30462(2,t25,C_SCHEME_UNDEFINED);}}
else{
t24=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_30491,a[2]=t19,a[3]=t10,a[4]=t4,a[5]=t16,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t25=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[10],t2);}
else{
t25=t24;
f_30491(2,t25,C_SCHEME_UNDEFINED);}}}}}}

/* k30489 in mm:make-off in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_30491(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30491,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30498,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30506,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k30504 in k30489 in mm:make-off in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_30506(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_30498(2,t2,C_SCHEME_UNDEFINED);}}

/* k30496 in k30489 in mm:make-off in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_30498(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_30067(t5,t4);}

/* k30460 in mm:make-off in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_30462(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30462,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30466,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30466(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30464 in k30460 in mm:make-off in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_30466(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30067(t7,t6);}

/* k30425 in mm:make-off in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_30427(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30427,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30431,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30431(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30429 in k30425 in mm:make-off in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_30431(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30067(t7,t6);}

/* k30390 in mm:make-off in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_30392(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30392,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30396,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30396(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30394 in k30390 in mm:make-off in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_30396(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30067(t7,t6);}

/* k30065 in mm:make-off in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_30067(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[42],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30067,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_30070,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_30070(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[681]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30257,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[681]);}
else{
t6=t5;
f_30257(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[682]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30292,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[682]);}
else{
t7=t6;
f_30292(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[684]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30327,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[684]);}
else{
t8=t7;
f_30327(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_30356,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_30356(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k30354 in k30065 in mm:make-off in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_30356(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30356,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30363,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30371,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k30369 in k30354 in k30065 in mm:make-off in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_30371(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_30363(2,t2,C_SCHEME_UNDEFINED);}}

/* k30361 in k30354 in k30065 in mm:make-off in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_30363(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_30070(t5,t4);}

/* k30325 in k30065 in mm:make-off in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_30327(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30327,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30331,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30331(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30329 in k30325 in k30065 in mm:make-off in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_30331(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30070(t7,t6);}

/* k30290 in k30065 in mm:make-off in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_30292(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30292,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30296,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30296(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30294 in k30290 in k30065 in mm:make-off in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_30296(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30070(t7,t6);}

/* k30255 in k30065 in mm:make-off in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_30257(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30257,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30261,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30261(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30259 in k30255 in k30065 in mm:make-off in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_30261(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30070(t7,t6);}

/* k30068 in k30065 in mm:make-off in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_30070(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30070,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30073,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_30073(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[681]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30122,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[681]);}
else{
t6=t5;
f_30122(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[682]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30157,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[682]);}
else{
t7=t6;
f_30157(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[684]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30192,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[684]);}
else{
t8=t7;
f_30192(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_30221,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_30221(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k30219 in k30068 in k30065 in mm:make-off in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_30221(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30221,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30228,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30236,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k30234 in k30219 in k30068 in k30065 in mm:make-off in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_30236(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_30228(2,t2,C_SCHEME_UNDEFINED);}}

/* k30226 in k30219 in k30068 in k30065 in mm:make-off in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_30228(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_30073(t5,t4);}

/* k30190 in k30068 in k30065 in mm:make-off in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_30192(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30192,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30196,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30196(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30194 in k30190 in k30068 in k30065 in mm:make-off in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_30196(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30073(t7,t6);}

/* k30155 in k30068 in k30065 in mm:make-off in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_30157(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30157,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30161,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30161(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30159 in k30155 in k30068 in k30065 in mm:make-off in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_30161(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30073(t7,t6);}

/* k30120 in k30068 in k30065 in mm:make-off in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_30122(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30122,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30126,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30126(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30124 in k30120 in k30068 in k30065 in mm:make-off in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_30126(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30073(t7,t6);}

/* k30071 in k30068 in k30065 in mm:make-off in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_30073(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30073,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_30076,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_30076(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k30074 in k30071 in k30068 in k30065 in mm:make-off in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_30076(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30076,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30080,a[2]=((C_word)li457),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t2+1)))(7,t2,((C_word*)t0)[5],C_fix(8),((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0));}

/* f_30080 in k30074 in k30071 in k30068 in k30065 in mm:make-off in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_30080(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_30080,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t8=(C_word)C_i_foreign_fixnum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_fixnum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=t1;
((C_proc2)(void*)(*((C_word*)t13+1)))(2,t13,(C_word)stub5113(t7,t8,t9,t10,t11,t12));}

/* mm:on? in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_30044(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_30044,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30049,a[2]=((C_word)li455),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(9));}

/* f_30049 in mm:on? in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_30049(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_30049,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub5034(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:make-on in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_29315(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+72)){
C_save_and_reclaim((void*)tr2r,(void*)f_29315r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_29315r(t0,t1,t2);}}

static void C_ccall f_29315r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word *a=C_alloc(72);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(60);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(64);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_fix(0);
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_FALSE;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=t2;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_SCHEME_FALSE;
t22=(*a=C_VECTOR_TYPE|1,a[1]=t21,tmp=(C_word)a,a+=2,tmp);
t23=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_29319,a[2]=t18,a[3]=t16,a[4]=t14,a[5]=t22,a[6]=t12,a[7]=t2,a[8]=t20,a[9]=t8,a[10]=t6,a[11]=t10,a[12]=t4,a[13]=t1,tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t20)[1]))){
t24=t23;
f_29319(t24,C_SCHEME_UNDEFINED);}
else{
t24=(C_word)C_i_car(((C_word*)t20)[1]);
t25=(C_word)C_eqp(t24,lf[681]);
if(C_truep(t25)){
t26=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29887,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t12,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t27=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t27))(4,t27,t26,lf[19],lf[681]);}
else{
t27=t26;
f_29887(2,t27,C_SCHEME_UNDEFINED);}}
else{
t26=(C_word)C_eqp(t24,lf[682]);
if(C_truep(t26)){
t27=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29922,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t14,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t28=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t28))(4,t28,t27,lf[19],lf[682]);}
else{
t28=t27;
f_29922(2,t28,C_SCHEME_UNDEFINED);}}
else{
t27=(C_word)C_eqp(t24,lf[683]);
if(C_truep(t27)){
t28=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29957,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t16,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t16)[1])){
C_trace("error");
t29=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t29))(4,t29,t28,lf[19],lf[683]);}
else{
t29=t28;
f_29957(2,t29,C_SCHEME_UNDEFINED);}}
else{
t28=(C_word)C_eqp(t24,lf[684]);
if(C_truep(t28)){
t29=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29992,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t18,a[7]=t10,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t30=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t30))(4,t30,t29,lf[19],lf[684]);}
else{
t30=t29;
f_29992(2,t30,C_SCHEME_UNDEFINED);}}
else{
t29=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_30021,a[2]=t23,a[3]=t12,a[4]=t4,a[5]=t20,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t22)[1])){
C_trace("error");
t30=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t30))(4,t30,t29,lf[10],t2);}
else{
t30=t29;
f_30021(2,t30,C_SCHEME_UNDEFINED);}}}}}}}

/* k30019 in mm:make-on in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_30021(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30021,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30028,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30036,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k30034 in k30019 in mm:make-on in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_30036(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_30028(2,t2,C_SCHEME_UNDEFINED);}}

/* k30026 in k30019 in mm:make-on in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_30028(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_29319(t5,t4);}

/* k29990 in mm:make-on in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_29992(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29992,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29996,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_29996(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k29994 in k29990 in mm:make-on in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_29996(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_29319(t7,t6);}

/* k29955 in mm:make-on in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_29957(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29957,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29961,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_29961(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k29959 in k29955 in mm:make-on in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_29961(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_29319(t7,t6);}

/* k29920 in mm:make-on in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_29922(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29922,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29926,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_29926(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k29924 in k29920 in mm:make-on in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_29926(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_29319(t7,t6);}

/* k29885 in mm:make-on in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_29887(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29887,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29891,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_29891(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k29889 in k29885 in mm:make-on in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_29891(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_29319(t7,t6);}

/* k29317 in mm:make-on in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_29319(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[52],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29319,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_29322,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_29322(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[681]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29717,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[681]);}
else{
t6=t5;
f_29717(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[682]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29752,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[682]);}
else{
t7=t6;
f_29752(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[683]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29787,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[683]);}
else{
t8=t7;
f_29787(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[684]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29822,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[684]);}
else{
t9=t8;
f_29822(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29851,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[10],((C_word*)t0)[7]);}
else{
t9=t8;
f_29851(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k29849 in k29317 in mm:make-on in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_29851(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29851,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29858,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29866,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k29864 in k29849 in k29317 in mm:make-on in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_29866(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_29858(2,t2,C_SCHEME_UNDEFINED);}}

/* k29856 in k29849 in k29317 in mm:make-on in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_29858(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_29322(t5,t4);}

/* k29820 in k29317 in mm:make-on in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_29822(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29822,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29826,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_29826(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k29824 in k29820 in k29317 in mm:make-on in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_29826(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_29322(t7,t6);}

/* k29785 in k29317 in mm:make-on in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_29787(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29787,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29791,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_29791(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k29789 in k29785 in k29317 in mm:make-on in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_29791(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_29322(t7,t6);}

/* k29750 in k29317 in mm:make-on in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_29752(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29752,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29756,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_29756(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k29754 in k29750 in k29317 in mm:make-on in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_29756(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_29322(t7,t6);}

/* k29715 in k29317 in mm:make-on in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_29717(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29717,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29721,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_29721(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k29719 in k29715 in k29317 in mm:make-on in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_29721(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_29322(t7,t6);}

/* k29320 in k29317 in mm:make-on in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_29322(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[52],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29322,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_29325,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_29325(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[681]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29547,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[681]);}
else{
t6=t5;
f_29547(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[682]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29582,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[682]);}
else{
t7=t6;
f_29582(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[683]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29617,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[683]);}
else{
t8=t7;
f_29617(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[684]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29652,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[684]);}
else{
t9=t8;
f_29652(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29681,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[10],((C_word*)t0)[7]);}
else{
t9=t8;
f_29681(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k29679 in k29320 in k29317 in mm:make-on in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_29681(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29681,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29688,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29696,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k29694 in k29679 in k29320 in k29317 in mm:make-on in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_29696(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_29688(2,t2,C_SCHEME_UNDEFINED);}}

/* k29686 in k29679 in k29320 in k29317 in mm:make-on in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_29688(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_29325(t5,t4);}

/* k29650 in k29320 in k29317 in mm:make-on in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_29652(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29652,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29656,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_29656(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k29654 in k29650 in k29320 in k29317 in mm:make-on in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_29656(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_29325(t7,t6);}

/* k29615 in k29320 in k29317 in mm:make-on in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_29617(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29617,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29621,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_29621(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k29619 in k29615 in k29320 in k29317 in mm:make-on in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_29621(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_29325(t7,t6);}

/* k29580 in k29320 in k29317 in mm:make-on in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_29582(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29582,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29586,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_29586(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k29584 in k29580 in k29320 in k29317 in mm:make-on in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_29586(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_29325(t7,t6);}

/* k29545 in k29320 in k29317 in mm:make-on in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_29547(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29547,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29551,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_29551(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k29549 in k29545 in k29320 in k29317 in mm:make-on in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_29551(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_29325(t7,t6);}

/* k29323 in k29320 in k29317 in mm:make-on in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_29325(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[47],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29325,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_29328,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[11],a[7]=((C_word*)t0)[12],a[8]=((C_word*)t0)[13],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_29328(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[681]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29377,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[681]);}
else{
t6=t5;
f_29377(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[682]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29412,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[682]);}
else{
t7=t6;
f_29412(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[683]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29447,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[683]);}
else{
t8=t7;
f_29447(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[684]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29482,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[684]);}
else{
t9=t8;
f_29482(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29511,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[10],((C_word*)t0)[7]);}
else{
t9=t8;
f_29511(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k29509 in k29323 in k29320 in k29317 in mm:make-on in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_29511(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29511,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29518,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29526,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k29524 in k29509 in k29323 in k29320 in k29317 in mm:make-on in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_29526(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_29518(2,t2,C_SCHEME_UNDEFINED);}}

/* k29516 in k29509 in k29323 in k29320 in k29317 in mm:make-on in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_29518(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_29328(t5,t4);}

/* k29480 in k29323 in k29320 in k29317 in mm:make-on in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_29482(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29482,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29486,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_29486(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k29484 in k29480 in k29323 in k29320 in k29317 in mm:make-on in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_29486(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_29328(t7,t6);}

/* k29445 in k29323 in k29320 in k29317 in mm:make-on in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_29447(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29447,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29451,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_29451(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k29449 in k29445 in k29323 in k29320 in k29317 in mm:make-on in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_29451(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_29328(t7,t6);}

/* k29410 in k29323 in k29320 in k29317 in mm:make-on in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_29412(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29412,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29416,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_29416(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k29414 in k29410 in k29323 in k29320 in k29317 in mm:make-on in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_29416(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_29328(t7,t6);}

/* k29375 in k29323 in k29320 in k29317 in mm:make-on in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_29377(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29377,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29381,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_29381(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k29379 in k29375 in k29323 in k29320 in k29317 in mm:make-on in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_29381(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_29328(t7,t6);}

/* k29326 in k29323 in k29320 in k29317 in mm:make-on in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_29328(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29328,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29331,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_29331(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k29329 in k29326 in k29323 in k29320 in k29317 in mm:make-on in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_29331(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29331,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29335,a[2]=((C_word)li453),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t2+1)))(7,t2,((C_word*)t0)[6],C_fix(9),((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* f_29335 in k29329 in k29326 in k29323 in k29320 in k29317 in mm:make-on in k29169 in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_29335(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_29335,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t8=(C_word)C_i_foreign_fixnum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_fixnum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=t1;
((C_proc2)(void*)(*((C_word*)t13+1)))(2,t13,(C_word)stub5018(t7,t8,t9,t10,t11,t12));}

/* parse-iteration in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_28977(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28977,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28985,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t6=t3;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_nullp(((C_word*)t7)[1]);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28817,a[2]=t4,a[3]=t7,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
if(C_truep(t8)){
t10=t9;
f_28817(t10,t8);}
else{
t10=(C_word)C_i_car(((C_word*)t7)[1]);
t11=(C_word)C_i_symbolp(t10);
t12=t9;
f_28817(t12,(C_word)C_i_not(t11));}}

/* k28815 in parse-iteration in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_28817(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[37],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28817,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28824,a[2]=((C_word*)t0)[4],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 381  make-loop-clause");
f_25761(t2,(C_word)C_a_i_list(&a,4,lf[499],lf[670],lf[504],((C_word*)((C_word*)t0)[3])[1]));}
else{
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28825,a[2]=((C_word)li448),tmp=(C_word)a,a+=3,tmp);
t3=((C_word*)((C_word*)t0)[3])[1];
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_END_OF_LIST;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28850,a[2]=t6,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t8=C_SCHEME_UNDEFINED;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_set_block_item(t9,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_28852,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=t9,a[5]=t6,a[6]=t4,a[7]=((C_word*)t0)[3],a[8]=((C_word)li451),tmp=(C_word)a,a+=9,tmp));
t11=((C_word*)t9)[1];
f_28852(t11,t7,C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST);}}

/* do4816 in k28815 in parse-iteration in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_28852(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28852,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t10=t1;
((C_proc2)(void*)(*((C_word*)t10+1)))(2,t10,C_SCHEME_UNDEFINED);}
else{
t10=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_28862,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t9,a[5]=t7,a[6]=t1,a[7]=((C_word*)t0)[4],a[8]=((C_word*)t0)[5],a[9]=t8,a[10]=((C_word*)t0)[7],a[11]=((C_word*)t0)[6],a[12]=t6,tmp=(C_word)a,a+=13,tmp);
t11=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t12=(C_word)C_eqp(t11,lf[417]);
if(C_truep(t12)){
t13=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t14=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t15=C_mutate(((C_word *)((C_word*)t0)[7])+1,t14);
t16=t10;
f_28862(t16,t13);}
else{
t13=t10;
f_28862(t13,C_SCHEME_UNDEFINED);}}}

/* k28860 in do4816 in k28815 in parse-iteration in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_28862(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28862,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_28866,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
C_trace("ChickenBridge.scm: 381  loop-op?");
f_25983(t2,t3,((C_word*)t0)[3]);}

/* k28864 in k28860 in do4816 in k28815 in parse-iteration in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_28866(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28866,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[12])+1,t1);
t3=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_28869,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[12],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],a[12]=((C_word*)t0)[11],tmp=(C_word)a,a+=13,tmp);
t4=((C_word*)((C_word*)t0)[12])[1];
if(C_truep(t4)){
t5=t3;
f_28869(2,t5,C_SCHEME_UNDEFINED);}
else{
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
C_trace("ChickenBridge.scm: 381  loop-error");
f_26001(t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[11])[1],(C_word)C_a_i_list(&a,3,lf[675],t5,lf[676]));}}

/* k28867 in k28864 in k28860 in do4816 in k28815 in parse-iteration in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_28869(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28869,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_28872,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28921,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[6],a[6]=((C_word)li449),tmp=(C_word)a,a+=7,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28930,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[5],a[4]=((C_word)li450),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 381  call-with-values");
C_call_with_values(4,0,t2,t3,t4);}

/* a28929 in k28867 in k28864 in k28860 in do4816 in k28815 in parse-iteration in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_28930(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_28930,4,t0,t1,t2,t3);}
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t5);}

/* a28920 in k28867 in k28864 in k28860 in do4816 in k28815 in parse-iteration in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_28921(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28921,2,t0,t1);}
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[5])[1]);
t3=t2;
((C_proc5)C_retrieve_proc(t3))(5,t3,t1,((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2]);}

/* k28870 in k28867 in k28864 in k28860 in do4816 in k28815 in parse-iteration in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_28872(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28872,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_28875,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[12],tmp=(C_word)a,a+=11,tmp);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28891,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[3],a[5]=t2,a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[4],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 381  op-type?");
f_28825(t3,((C_word*)((C_word*)t0)[6])[1],lf[661]);}

/* k28889 in k28870 in k28867 in k28864 in k28860 in do4816 in k28815 in parse-iteration in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_28891(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28891,2,t0,t1);}
if(C_truep(t1)){
t2=C_mutate(((C_word *)((C_word*)t0)[7])+1,((C_word*)((C_word*)t0)[6])[1]);
t3=((C_word*)t0)[5];
f_28875(2,t3,t2);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28898,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 381  op-type?");
f_28825(t2,((C_word*)((C_word*)t0)[6])[1],lf[674]);}}

/* k28896 in k28889 in k28870 in k28867 in k28864 in k28860 in do4816 in k28815 in parse-iteration in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_28898(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28898,2,t0,t1);}
if(C_truep(t1)){
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t2=((C_word*)t0)[5];
f_28875(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
C_trace("ChickenBridge.scm: 381  loop-error");
f_26001(((C_word*)t0)[5],((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],(C_word)C_a_i_list(&a,5,lf[671],t2,lf[672],t3,lf[673]));}}
else{
t2=((C_word*)t0)[5];
f_28875(2,t2,C_SCHEME_UNDEFINED);}}

/* k28873 in k28870 in k28867 in k28864 in k28860 in do4816 in k28815 in parse-iteration in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_28875(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28875,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[10])+1,((C_word*)((C_word*)t0)[9])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[9])+1,((C_word*)((C_word*)t0)[8])[1]);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_28881,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
t5=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 381  append");
t6=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,((C_word*)((C_word*)t0)[7])[1],t5);}

/* k28879 in k28873 in k28870 in k28867 in k28864 in k28860 in do4816 in k28815 in parse-iteration in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_28881(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=((C_word*)((C_word*)t0)[7])[1];
f_28852(t3,((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k28848 in k28815 in parse-iteration in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_28850(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_28985(t2,((C_word*)((C_word*)t0)[2])[1]);}

/* op-type? in k28815 in parse-iteration in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_28825(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28825,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_cddr(t2);
if(C_truep((C_word)C_i_nullp(t4))){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_FALSE);}
else{
t5=(C_word)C_i_caddr(t2);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_eqp(t5,t3));}}

/* k28822 in k28815 in parse-iteration in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_28824(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28824,2,t0,t1);}
t2=((C_word*)t0)[2];
f_28985(t2,(C_word)C_a_i_list(&a,1,t1));}

/* k28983 in parse-iteration in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_28985(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 381  gather-clauses");
f_25912(((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* parse-conditional in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_28563(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word ab[34],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_28563,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_a_i_cons(&a,2,lf[664],t4);
t7=((C_word*)t5)[1];
t8=(C_word)C_i_car(((C_word*)t5)[1]);
t9=C_SCHEME_END_OF_LIST;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_END_OF_LIST;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_END_OF_LIST;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_END_OF_LIST;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_28585,a[2]=t8,a[3]=t7,a[4]=t3,a[5]=t6,a[6]=t16,a[7]=t14,a[8]=t1,a[9]=t10,a[10]=t12,a[11]=t5,tmp=(C_word)a,a+=12,tmp);
t18=(C_word)C_i_cdr(((C_word*)t5)[1]);
if(C_truep((C_word)C_i_nullp(t18))){
C_trace("ChickenBridge.scm: 381  loop-error");
f_26001(t17,t6,t7,(C_word)C_a_i_list(&a,3,lf[667],t8,lf[668]));}
else{
t19=t17;
f_28585(2,t19,C_SCHEME_UNDEFINED);}}

/* k28583 in parse-conditional in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_28585(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28585,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[11])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[11])[1]);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[11])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[11])+1,t5);
t7=C_mutate(((C_word *)((C_word*)t0)[10])+1,t4);
t8=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_28600,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[11])[1]))){
C_trace("ChickenBridge.scm: 381  loop-error");
f_26001(t8,((C_word*)t0)[5],((C_word*)((C_word*)t0)[11])[1],(C_word)C_a_i_list(&a,1,lf[666]));}
else{
t9=t8;
f_28600(2,t9,C_SCHEME_UNDEFINED);}}

/* k28598 in k28583 in parse-conditional in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_28600(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28600,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_28603,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[2],lf[6]);
if(C_truep(t3)){
t4=(C_word)C_a_i_list(&a,2,lf[419],((C_word*)((C_word*)t0)[11])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[11])+1,t4);
t6=t2;
f_28603(t6,t5);}
else{
t4=t2;
f_28603(t4,C_SCHEME_UNDEFINED);}}

/* k28601 in k28598 in k28583 in parse-conditional in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_28603(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28603,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_28606,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28773,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[6],a[5]=((C_word)li445),tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28779,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word)li446),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 381  call-with-values");
C_call_with_values(4,0,t2,t3,t4);}

/* a28778 in k28601 in k28598 in k28583 in parse-conditional in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_28779(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_28779,4,t0,t1,t2,t3);}
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t5);}

/* a28772 in k28601 in k28598 in k28583 in parse-conditional in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_28773(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28773,2,t0,t1);}
C_trace("ChickenBridge.scm: 381  parse-then-else-dependents");
f_28432(t1,((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k28604 in k28601 in k28598 in k28583 in parse-conditional in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_28606(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28606,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_28609,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[7])+1,t4);
t6=t2;
f_28609(t6,t5);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28755,a[2]=t2,a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 381  gather-clauses");
f_25912(t4,C_SCHEME_END_OF_LIST,((C_word*)((C_word*)t0)[7])[1]);}}

/* k28753 in k28604 in k28601 in k28598 in k28583 in parse-conditional in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_28755(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_28609(t3,t2);}

/* k28607 in k28604 in k28601 in k28598 in k28583 in parse-conditional in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_28609(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28609,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_28612,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 381  loop-operator-set!");
f_25659(t2,((C_word*)((C_word*)t0)[7])[1],lf[20]);}

/* k28610 in k28607 in k28604 in k28601 in k28598 in k28583 in parse-conditional in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_28612(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28612,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_28736,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28748,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 381  loop-looping");
t4=C_retrieve2(lf[493],"loop-looping");
f_25713(3,t4,t3,((C_word*)((C_word*)t0)[7])[1]);}

/* k28746 in k28610 in k28607 in k28604 in k28601 in k28598 in k28583 in parse-conditional in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_28748(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28748,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[443],t1);
C_trace("ChickenBridge.scm: 381  append");
t3=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[2],t2,C_SCHEME_END_OF_LIST);}

/* k28734 in k28610 in k28607 in k28604 in k28601 in k28598 in k28583 in parse-conditional in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_28736(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28736,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,4,lf[20],((C_word*)((C_word*)t0)[10])[1],t1,C_SCHEME_FALSE);
t3=C_mutate(((C_word *)((C_word*)t0)[9])+1,t2);
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28619,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
t5=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_28632,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t4,a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[6],tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t6=t5;
f_28632(t6,C_SCHEME_FALSE);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t7=t5;
f_28632(t7,(C_word)C_eqp(t6,lf[16]));}}

/* k28630 in k28734 in k28610 in k28607 in k28604 in k28601 in k28598 in k28583 in parse-conditional in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_28632(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28632,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[9])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[9])+1,t2);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_28639,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[9])[1]))){
C_trace("ChickenBridge.scm: 381  loop-error");
f_26001(t4,((C_word*)t0)[4],((C_word*)t0)[2],(C_word)C_a_i_list(&a,1,lf[665]));}
else{
t5=t4;
f_28639(2,t5,C_SCHEME_UNDEFINED);}}
else{
t2=((C_word*)t0)[6];
f_28619(t2,C_SCHEME_UNDEFINED);}}

/* k28637 in k28630 in k28734 in k28610 in k28607 in k28604 in k28601 in k28598 in k28583 in parse-conditional in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_28639(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28639,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28642,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28695,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word)li443),tmp=(C_word)a,a+=7,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28709,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word)li444),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 381  call-with-values");
C_call_with_values(4,0,t2,t3,t4);}

/* a28708 in k28637 in k28630 in k28734 in k28610 in k28607 in k28604 in k28601 in k28598 in k28583 in parse-conditional in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_28709(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_28709,4,t0,t1,t2,t3);}
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t5);}

/* a28694 in k28637 in k28630 in k28734 in k28610 in k28607 in k28604 in k28601 in k28598 in k28583 in parse-conditional in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_28695(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28695,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28703,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 381  append");
t4=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,((C_word*)t0)[2],t3);}

/* k28701 in a28694 in k28637 in k28630 in k28734 in k28610 in k28607 in k28604 in k28601 in k28598 in k28583 in parse-conditional in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_28703(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 381  parse-then-else-dependents");
f_28432(((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],t1,((C_word*)t0)[2]);}

/* k28640 in k28637 in k28630 in k28734 in k28610 in k28607 in k28604 in k28601 in k28598 in k28583 in parse-conditional in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_28642(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28642,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28645,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t6=t2;
f_28645(t6,t5);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28681,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 381  gather-clauses");
f_25912(t4,C_SCHEME_END_OF_LIST,((C_word*)((C_word*)t0)[2])[1]);}}

/* k28679 in k28640 in k28637 in k28630 in k28734 in k28610 in k28607 in k28604 in k28601 in k28598 in k28583 in parse-conditional in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_28681(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_28645(t3,t2);}

/* k28643 in k28640 in k28637 in k28630 in k28734 in k28610 in k28607 in k28604 in k28601 in k28598 in k28583 in parse-conditional in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_28645(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28645,NULL,2,t0,t1);}
t2=(C_word)C_i_cdddr(((C_word*)((C_word*)t0)[5])[1]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28674,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 381  loop-looping");
t4=C_retrieve2(lf[493],"loop-looping");
f_25713(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k28672 in k28643 in k28640 in k28637 in k28630 in k28734 in k28610 in k28607 in k28604 in k28601 in k28598 in k28583 in parse-conditional in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_28674(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28674,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[443],t1);
t3=(C_word)C_i_set_car(((C_word*)t0)[5],t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28651,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 381  loop-looping-set!");
f_25719(t4,((C_word*)((C_word*)t0)[4])[1],C_SCHEME_END_OF_LIST);}

/* k28649 in k28672 in k28643 in k28640 in k28637 in k28630 in k28734 in k28610 in k28607 in k28604 in k28601 in k28598 in k28583 in parse-conditional in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_28651(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28651,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28654,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 381  loop-looping-set!");
f_25719(t2,((C_word*)((C_word*)t0)[2])[1],C_SCHEME_END_OF_LIST);}

/* k28652 in k28649 in k28672 in k28643 in k28640 in k28637 in k28630 in k28734 in k28610 in k28607 in k28604 in k28601 in k28598 in k28583 in parse-conditional in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_28654(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28654,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28658,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_list(&a,2,((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[2])[1]);
C_trace("ChickenBridge.scm: 381  gather-clauses");
f_25912(t2,lf[20],t3);}

/* k28656 in k28652 in k28649 in k28672 in k28643 in k28640 in k28637 in k28630 in k28734 in k28610 in k28607 in k28604 in k28601 in k28598 in k28583 in parse-conditional in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_28658(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_28619(t3,t2);}

/* k28617 in k28734 in k28610 in k28607 in k28604 in k28601 in k28598 in k28583 in parse-conditional in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_28619(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28619,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28622,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[2])[1]);
C_trace("ChickenBridge.scm: 381  loop-looping-set!");
f_25719(t2,((C_word*)((C_word*)t0)[4])[1],t3);}

/* k28620 in k28617 in k28734 in k28610 in k28607 in k28604 in k28601 in k28598 in k28583 in parse-conditional in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_28622(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 381  values");
C_values(4,0,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* parse-then-else-dependents in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_28432(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28432,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t5)[1];
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_END_OF_LIST;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28436,a[2]=t5,a[3]=t11,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t13=C_SCHEME_UNDEFINED;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_set_block_item(t14,0,(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_28441,a[2]=t3,a[3]=t14,a[4]=t7,a[5]=t11,a[6]=t4,a[7]=t9,a[8]=t5,a[9]=((C_word)li441),tmp=(C_word)a,a+=10,tmp));
t16=((C_word*)t14)[1];
f_28441(t16,t12,C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* do4749 in parse-then-else-dependents in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_28441(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28441,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]);
t9=(C_truep(t8)?t8:((C_word*)((C_word*)t0)[7])[1]);
if(C_truep(t9)){
t10=t1;
((C_proc2)(void*)(*((C_word*)t10+1)))(2,t10,C_SCHEME_UNDEFINED);}
else{
t10=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t11=((C_word*)t0)[6];
t12=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_28389,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[6],a[5]=t6,a[6]=t1,a[7]=((C_word*)t0)[3],a[8]=t7,a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[4],a[11]=((C_word*)t0)[5],a[12]=t5,tmp=(C_word)a,a+=13,tmp);
C_trace("ChickenBridge.scm: 381  loop-op?");
f_25983(t12,t10,t11);}}

/* k28387 in do4749 in parse-then-else-dependents in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_28389(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28389,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_28395,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=t1,tmp=(C_word)a,a+=14,tmp);
if(C_truep(t1)){
t3=(C_word)C_i_cddr(t1);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t2;
f_28395(t4,C_SCHEME_FALSE);}
else{
t4=(C_word)C_i_caddr(t1);
t5=(C_word)C_eqp(t4,lf[661]);
if(C_truep(t5)){
t6=(C_word)C_i_car(t1);
t7=(C_word)C_i_member(t6,lf[662]);
t8=t2;
f_28395(t8,(C_word)C_i_not(t7));}
else{
t6=t2;
f_28395(t6,C_SCHEME_FALSE);}}}
else{
t3=t2;
f_28395(t3,C_SCHEME_FALSE);}}

/* k28393 in k28387 in do4749 in parse-then-else-dependents in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_28395(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28395,NULL,2,t0,t1);}
t2=(C_truep(t1)?((C_word*)t0)[13]:C_SCHEME_FALSE);
t3=C_mutate(((C_word *)((C_word*)t0)[12])+1,t2);
t4=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_28458,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[12],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],a[12]=((C_word*)t0)[11],tmp=(C_word)a,a+=13,tmp);
t5=((C_word*)((C_word*)t0)[12])[1];
if(C_truep(t5)){
t6=t4;
f_28458(2,t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
C_trace("ChickenBridge.scm: 381  loop-error");
f_26001(t4,((C_word*)t0)[4],((C_word*)((C_word*)t0)[10])[1],(C_word)C_a_i_list(&a,3,lf[659],t6,lf[660]));}}

/* k28456 in k28393 in k28387 in do4749 in parse-then-else-dependents in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_28458(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28458,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_28461,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[12],tmp=(C_word)a,a+=12,tmp);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28531,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[6],a[7]=((C_word)li439),tmp=(C_word)a,a+=8,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28544,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[5],a[4]=((C_word)li440),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 381  call-with-values");
C_call_with_values(4,0,t2,t3,t4);}

/* a28543 in k28456 in k28393 in k28387 in do4749 in parse-then-else-dependents in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_28544(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_28544,4,t0,t1,t2,t3);}
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t5);}

/* a28530 in k28456 in k28393 in k28387 in do4749 in parse-then-else-dependents in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_28531(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28531,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28539,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t1,a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 381  append");
t3=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k28537 in a28530 in k28456 in k28393 in k28387 in do4749 in parse-then-else-dependents in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_28539(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[5])[1]);
t3=t2;
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],t1,((C_word*)t0)[2]);}

/* k28459 in k28456 in k28393 in k28387 in do4749 in parse-then-else-dependents in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_28461(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28461,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_28465,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 381  append");
t4=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,((C_word*)((C_word*)t0)[11])[1],t3);}

/* k28463 in k28459 in k28456 in k28393 in k28387 in do4749 in parse-then-else-dependents in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_28465(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28465,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[11])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[10])+1,((C_word*)((C_word*)t0)[9])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[9])+1,((C_word*)((C_word*)t0)[8])[1]);
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28470,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[9])[1]))){
t6=t5;
f_28470(2,t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
t7=(C_word)C_eqp(t6,lf[417]);
if(C_truep(t7)){
t8=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[9])[1]);
t9=C_mutate(((C_word *)((C_word*)t0)[9])+1,t8);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[9])[1]))){
C_trace("ChickenBridge.scm: 381  loop-error");
f_26001(t5,((C_word*)t0)[3],((C_word*)((C_word*)t0)[10])[1],(C_word)C_a_i_list(&a,1,lf[658]));}
else{
t10=t5;
f_28470(2,t10,C_SCHEME_UNDEFINED);}}
else{
t8=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
t9=(C_word)C_eqp(t8,lf[16]);
if(C_truep(t9)){
t10=C_set_block_item(((C_word*)t0)[2],0,C_SCHEME_TRUE);
t11=t5;
f_28470(2,t11,t10);}
else{
t10=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28508,a[2]=t5,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t11=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
C_trace("ChickenBridge.scm: 381  loop-op?");
f_25983(t10,t11,((C_word*)t0)[3]);}}}}

/* k28506 in k28463 in k28459 in k28456 in k28393 in k28387 in do4749 in parse-then-else-dependents in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_28508(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_TRUE);
t3=((C_word*)t0)[2];
f_28470(2,t3,t2);}
else{
t2=((C_word*)t0)[2];
f_28470(2,t2,C_SCHEME_UNDEFINED);}}

/* k28468 in k28463 in k28459 in k28456 in k28393 in k28387 in do4749 in parse-then-else-dependents in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_28470(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[6])[1];
f_28441(t2,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k28434 in parse-then-else-dependents in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_28436(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 381  values");
C_values(4,0,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* parse-return in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_28331(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[23],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_28331,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_car(((C_word*)t5)[1]);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28338,a[2]=t4,a[3]=t6,a[4]=t1,a[5]=t10,a[6]=t8,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
t12=(C_word)C_i_cdr(((C_word*)t5)[1]);
if(C_truep((C_word)C_i_nullp(t12))){
t13=(C_word)C_i_car(((C_word*)t5)[1]);
C_trace("ChickenBridge.scm: 381  loop-error");
f_26001(t11,t4,((C_word*)t5)[1],(C_word)C_a_i_list(&a,3,lf[655],t13,lf[656]));}
else{
t13=t11;
f_28338(2,t13,C_SCHEME_UNDEFINED);}}

/* k28336 in parse-return in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_28338(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28338,2,t0,t1);}
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[7])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[7])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[7])+1,t4);
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28369,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 381  loop-op?");
f_25983(t6,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k28367 in k28336 in parse-return in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_28369(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28369,2,t0,t1);}
t2=(C_word)C_i_cadddr(t1);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28357,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28365,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 381  func");
t6=((C_word*)((C_word*)t0)[5])[1];
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[2])[1]);}

/* k28363 in k28367 in k28336 in parse-return in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_28365(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28365,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
C_trace("ChickenBridge.scm: 381  make-loop-clause");
f_25761(((C_word*)t0)[2],(C_word)C_a_i_list(&a,4,lf[499],lf[641],lf[504],t2));}

/* k28355 in k28367 in k28336 in parse-return in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_28357(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 381  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-thereis in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_28240(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[26],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_28240,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_car(((C_word*)t5)[1]);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_28247,a[2]=t4,a[3]=t6,a[4]=t10,a[5]=t1,a[6]=t12,a[7]=t8,a[8]=t5,tmp=(C_word)a,a+=9,tmp);
t14=(C_word)C_i_cdr(((C_word*)t5)[1]);
if(C_truep((C_word)C_i_nullp(t14))){
t15=(C_word)C_i_car(((C_word*)t5)[1]);
C_trace("ChickenBridge.scm: 381  loop-error");
f_26001(t13,t4,((C_word*)t5)[1],(C_word)C_a_i_list(&a,3,lf[652],t15,lf[653]));}
else{
t15=t13;
f_28247(2,t15,C_SCHEME_UNDEFINED);}}

/* k28245 in parse-thereis in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_28247(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28247,2,t0,t1);}
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[8])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28315,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 381  loop-op?");
f_25983(t4,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k28313 in k28245 in parse-thereis in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_28315(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28315,2,t0,t1);}
t2=(C_word)C_i_cadddr(t1);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28258,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
t5=(C_word)C_eqp(((C_word*)t0)[2],lf[649]);
if(C_truep(t5)){
t6=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_FALSE);
t7=t4;
f_28258(t7,t6);}
else{
t6=(C_word)C_eqp(((C_word*)t0)[2],lf[650]);
if(C_truep(t6)){
t7=(C_word)C_a_i_list(&a,2,lf[419],((C_word*)((C_word*)t0)[4])[1]);
t8=C_mutate(((C_word *)((C_word*)t0)[4])+1,t7);
t9=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_TRUE);
t10=t4;
f_28258(t10,t9);}
else{
t7=(C_word)C_eqp(((C_word*)t0)[2],lf[651]);
if(C_truep(t7)){
t8=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_TRUE);
t9=t4;
f_28258(t9,t8);}
else{
t8=t4;
f_28258(t8,C_SCHEME_UNDEFINED);}}}}

/* k28256 in k28313 in k28245 in parse-thereis in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_28258(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28258,NULL,2,t0,t1);}
t2=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28269,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28285,a[2]=t4,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t6=(C_word)C_i_not(((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 381  func");
t7=((C_word*)((C_word*)t0)[2])[1];
((C_proc3)C_retrieve_proc(t7))(3,t7,t5,t6);}

/* k28283 in k28256 in k28313 in k28245 in parse-thereis in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_28285(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28285,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,lf[20],((C_word*)((C_word*)t0)[4])[1],t1);
t3=(C_word)C_a_i_list(&a,1,t2);
t4=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 381  make-loop-clause");
f_25761(((C_word*)t0)[2],(C_word)C_a_i_list(&a,6,lf[499],lf[649],lf[504],t3,lf[507],t4));}

/* k28267 in k28256 in k28313 in k28245 in parse-thereis in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_28269(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 381  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-while-until in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_28174(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[19],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_28174,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t5)[1];
t7=(C_word)C_i_car(((C_word*)t5)[1]);
t8=(C_word)C_i_cdr(((C_word*)t5)[1]);
t9=C_set_block_item(t5,0,t8);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28185,a[2]=t7,a[3]=t11,a[4]=t5,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t5)[1]))){
C_trace("ChickenBridge.scm: 381  loop-error");
f_26001(t12,t4,t6,(C_word)C_a_i_list(&a,3,lf[646],t7,lf[647]));}
else{
t13=t12;
f_28185(2,t13,C_SCHEME_UNDEFINED);}}

/* k28183 in parse-while-until in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_28185(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28185,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28188,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[2],lf[644]);
if(C_truep(t3)){
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t8=t2;
f_28188(t8,t7);}
else{
t4=(C_word)C_eqp(((C_word*)t0)[2],lf[645]);
if(C_truep(t4)){
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[4])+1,t6);
t8=(C_word)C_a_i_list(&a,2,lf[419],t5);
t9=C_mutate(((C_word *)((C_word*)t0)[3])+1,t8);
t10=t2;
f_28188(t10,t9);}
else{
t5=t2;
f_28188(t5,C_SCHEME_UNDEFINED);}}}

/* k28186 in k28183 in parse-while-until in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_28188(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28188,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28195,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_list(&a,3,lf[20],((C_word*)((C_word*)t0)[3])[1],lf[643]);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 381  make-loop-clause");
f_25761(t2,(C_word)C_a_i_list(&a,4,lf[499],((C_word*)t0)[2],lf[504],t4));}

/* k28193 in k28186 in k28183 in parse-while-until in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_28195(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 381  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* loop-return in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_28168(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_28168,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_list(&a,2,lf[641],t2));}

/* parse-accumulation in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_27622(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word ab[55],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_27622,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t5)[1];
t7=(C_word)C_i_car(((C_word*)t5)[1]);
t8=(C_word)C_i_cdr(((C_word*)t5)[1]);
t9=C_set_block_item(t5,0,t8);
t10=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27631,a[2]=((C_word)li429),tmp=(C_word)a,a+=3,tmp);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27636,a[2]=((C_word)li430),tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27641,a[2]=((C_word)li431),tmp=(C_word)a,a+=3,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_FALSE;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=C_SCHEME_FALSE;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_SCHEME_END_OF_LIST;
t22=(*a=C_VECTOR_TYPE|1,a[1]=t21,tmp=(C_word)a,a+=2,tmp);
t23=C_SCHEME_END_OF_LIST;
t24=(*a=C_VECTOR_TYPE|1,a[1]=t23,tmp=(C_word)a,a+=2,tmp);
t25=C_SCHEME_END_OF_LIST;
t26=(*a=C_VECTOR_TYPE|1,a[1]=t25,tmp=(C_word)a,a+=2,tmp);
t27=C_SCHEME_END_OF_LIST;
t28=(*a=C_VECTOR_TYPE|1,a[1]=t27,tmp=(C_word)a,a+=2,tmp);
t29=(*a=C_CLOSURE_TYPE|18,a[1]=(C_word)f_27653,a[2]=t3,a[3]=t11,a[4]=t6,a[5]=t4,a[6]=t12,a[7]=t10,a[8]=t20,a[9]=t24,a[10]=t26,a[11]=t22,a[12]=t28,a[13]=t7,a[14]=t18,a[15]=t1,a[16]=t16,a[17]=t14,a[18]=t5,tmp=(C_word)a,a+=19,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t5)[1]))){
C_trace("ChickenBridge.scm: 381  loop-error");
f_26001(t29,t4,((C_word*)t5)[1],(C_word)C_a_i_list(&a,3,lf[638],t7,lf[639]));}
else{
t30=t29;
f_27653(2,t30,C_SCHEME_UNDEFINED);}}

/* k27651 in parse-accumulation in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_27653(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[29],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27653,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[18])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[18])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[18])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[17])+1,t2);
t6=(*a=C_CLOSURE_TYPE|18,a[1]=(C_word)f_27664,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[17],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],a[12]=((C_word*)t0)[11],a[13]=((C_word*)t0)[12],a[14]=((C_word*)t0)[13],a[15]=((C_word*)t0)[14],a[16]=((C_word*)t0)[18],a[17]=((C_word*)t0)[15],a[18]=((C_word*)t0)[16],tmp=(C_word)a,a+=19,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[18])[1]))){
t7=t6;
f_27664(2,t7,C_SCHEME_UNDEFINED);}
else{
t7=(C_word)C_i_car(((C_word*)((C_word*)t0)[18])[1]);
t8=(C_word)C_eqp(t7,lf[634]);
if(C_truep(t8)){
t9=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28117,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t6,a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[18],tmp=(C_word)a,a+=7,tmp);
t10=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[18])[1]);
if(C_truep((C_word)C_i_nullp(t10))){
C_trace("ChickenBridge.scm: 381  loop-error");
f_26001(t9,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[637]));}
else{
t11=t9;
f_28117(2,t11,C_SCHEME_UNDEFINED);}}
else{
t9=t6;
f_27664(2,t9,C_SCHEME_UNDEFINED);}}}

/* k28115 in k27651 in parse-accumulation in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_28117(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28117,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28123,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[6])[1]);
C_trace("ChickenBridge.scm: 381  loop-variable?");
f_25989(t2,t3);}

/* k28121 in k28115 in k27651 in parse-accumulation in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_28123(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28123,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[6])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[6])+1,t4);
t6=((C_word*)t0)[4];
f_27664(2,t6,t5);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
C_trace("ChickenBridge.scm: 381  loop-error");
f_26001(((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],(C_word)C_a_i_list(&a,3,lf[635],t2,lf[636]));}}

/* k27662 in k27651 in parse-accumulation in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_27664(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27664,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|17,a[1]=(C_word)f_27668,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[12],a[12]=((C_word*)t0)[13],a[13]=((C_word*)t0)[14],a[14]=((C_word*)t0)[15],a[15]=((C_word*)t0)[16],a[16]=((C_word*)t0)[17],a[17]=((C_word*)t0)[18],tmp=(C_word)a,a+=18,tmp);
t3=((C_word*)((C_word*)t0)[8])[1];
t4=((C_word*)t0)[2];
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27549,a[2]=t3,a[3]=t7,a[4]=t5,a[5]=((C_word)li433),tmp=(C_word)a,a+=6,tmp));
t9=((C_word*)t7)[1];
f_27549(t9,t2,C_SCHEME_FALSE);}

/* do4571 in k27662 in k27651 in parse-accumulation in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_27549(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27549,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[4])[1]);
t5=(C_truep(t4)?t4:((C_word*)t3)[1]);
if(C_truep(t5)){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,((C_word*)t3)[1]);}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27563,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27574,a[2]=t6,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t8=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 381  loop-collectors");
t9=C_retrieve2(lf[490],"loop-collectors");
f_25677(3,t9,t7,t8);}}

/* k27572 in do4571 in k27662 in k27651 in parse-accumulation in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_27574(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27574,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27509,a[2]=((C_word*)t0)[3],a[3]=t5,a[4]=t3,a[5]=((C_word)li432),tmp=(C_word)a,a+=6,tmp));
t7=((C_word*)t5)[1];
f_27509(t7,((C_word*)t0)[2],C_SCHEME_FALSE);}

/* do4563 in k27572 in do4571 in k27662 in k27651 in parse-accumulation in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_27509(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27509,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[4])[1]);
t5=(C_truep(t4)?t4:((C_word*)t3)[1]);
if(C_truep(t5)){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,((C_word*)t3)[1]);}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27522,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t7=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t8=(C_word)C_i_car(t7);
t9=(C_word)C_eqp(((C_word*)t0)[2],t8);
if(C_truep(t9)){
t10=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t11=C_set_block_item(t3,0,t10);
t12=t6;
f_27522(t12,t11);}
else{
t10=t6;
f_27522(t10,C_SCHEME_UNDEFINED);}}}

/* k27520 in do4563 in k27572 in do4571 in k27662 in k27651 in parse-accumulation in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_27522(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=((C_word*)((C_word*)t0)[4])[1];
f_27509(t4,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k27561 in do4571 in k27662 in k27651 in parse-accumulation in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_27563(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=((C_word*)((C_word*)t0)[3])[1];
f_27549(t5,((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1]);}

/* k27666 in k27662 in k27651 in parse-accumulation in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_27668(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27668,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[17])+1,t1);
t3=(*a=C_CLOSURE_TYPE|14,a[1]=(C_word)f_27671,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[12],a[10]=((C_word*)t0)[13],a[11]=((C_word*)t0)[17],a[12]=((C_word*)t0)[14],a[13]=((C_word*)t0)[15],a[14]=((C_word*)t0)[16],tmp=(C_word)a,a+=15,tmp);
t4=((C_word*)((C_word*)t0)[17])[1];
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28101,a[2]=((C_word*)t0)[17],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[13],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=t3,tmp=(C_word)a,a+=8,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28105,a[2]=t5,a[3]=((C_word*)t0)[13],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 381  collector-type");
f_27636(t6,((C_word*)((C_word*)t0)[17])[1]);}
else{
t5=C_set_block_item(((C_word*)t0)[14],0,C_SCHEME_TRUE);
t6=t3;
f_27671(2,t6,t5);}}

/* k28103 in k27666 in k27662 in k27651 in parse-accumulation in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_28105(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a;
t2=lf[631];
t3=lf[632];
t4=lf[633];
t5=(C_word)C_eqp(((C_word*)t0)[3],t1);
if(C_truep(t5)){
t6=((C_word*)t0)[2];
f_28101(t6,t5);}
else{
t6=(C_word)C_i_member(((C_word*)t0)[3],t2);
t7=(C_truep(t6)?(C_word)C_i_member(t1,t2):C_SCHEME_FALSE);
if(C_truep(t7)){
t8=((C_word*)t0)[2];
f_28101(t8,t7);}
else{
t8=(C_word)C_i_member(((C_word*)t0)[3],t3);
t9=(C_truep(t8)?(C_word)C_i_member(t1,t3):C_SCHEME_FALSE);
if(C_truep(t9)){
t10=((C_word*)t0)[2];
f_28101(t10,t9);}
else{
t10=(C_word)C_i_member(((C_word*)t0)[3],t4);
t11=((C_word*)t0)[2];
f_28101(t11,(C_truep(t10)?(C_word)C_i_member(t1,t4):C_SCHEME_FALSE));}}}}

/* k28099 in k27666 in k27662 in k27651 in parse-accumulation in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_28101(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28101,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[7];
f_27671(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28097,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 381  collector-type");
f_27636(t2,((C_word*)((C_word*)t0)[2])[1]);}}

/* k28095 in k28099 in k27666 in k27662 in k27651 in parse-accumulation in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_28097(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28097,2,t0,t1);}
C_trace("ChickenBridge.scm: 381  loop-error");
f_26001(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],(C_word)C_a_i_list(&a,5,lf[628],t1,lf[629],((C_word*)t0)[2],lf[630]));}

/* k27669 in k27666 in k27662 in k27651 in parse-accumulation in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_27671(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[61],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27671,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_27674,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[12],a[9]=((C_word*)t0)[13],a[10]=((C_word*)t0)[14],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[10],lf[612]);
t4=(C_truep(t3)?t3:(C_word)C_eqp(((C_word*)t0)[10],lf[613]));
if(C_truep(t4)){
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27717,a[2]=t2,a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[5],a[5]=t6,a[6]=((C_word*)t0)[10],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[12])[1])){
t8=((C_word*)((C_word*)t0)[4])[1];
t9=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_27755,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=t7,a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[6],a[9]=t6,tmp=(C_word)a,a+=10,tmp);
if(C_truep(t8)){
t10=t9;
f_27755(2,t10,t8);}
else{
C_trace("ChickenBridge.scm: 381  gensym");
t10=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t10))(3,t10,t9,lf[614]);}}
else{
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27784,a[2]=t7,a[3]=t6,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 381  collector-acc");
f_27641(t8,((C_word*)((C_word*)t0)[11])[1]);}}
else{
t5=(C_word)C_eqp(((C_word*)t0)[10],lf[615]);
t6=(C_truep(t5)?t5:(C_word)C_eqp(((C_word*)t0)[10],lf[616]));
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_27796,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[11],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[12],a[8]=t2,a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[5],a[11]=((C_word*)t0)[6],a[12]=((C_word*)t0)[10],tmp=(C_word)a,a+=13,tmp);
C_trace("ChickenBridge.scm: 381  gensym");
t8=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t8))(3,t8,t7,lf[618]);}
else{
t7=(C_word)C_eqp(((C_word*)t0)[10],lf[18]);
t8=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_27891,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[11],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[12],a[9]=((C_word*)t0)[5],a[10]=((C_word*)t0)[10],a[11]=t2,a[12]=((C_word*)t0)[8],a[13]=((C_word*)t0)[4],tmp=(C_word)a,a+=14,tmp);
if(C_truep(t7)){
t9=t8;
f_27891(t9,t7);}
else{
t9=(C_word)C_eqp(((C_word*)t0)[10],lf[622]);
t10=t8;
f_27891(t10,(C_truep(t9)?t9:(C_word)C_eqp(((C_word*)t0)[10],lf[627])));}}}}

/* k27889 in k27669 in k27666 in k27662 in k27651 in parse-accumulation in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_27891(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[35],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27891,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_27894,a[2]=t5,a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[11],a[6]=((C_word*)t0)[12],a[7]=t3,a[8]=((C_word*)t0)[13],tmp=(C_word)a,a+=9,tmp);
t7=((C_word*)((C_word*)t0)[8])[1];
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_28007,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t6,a[6]=((C_word*)t0)[13],a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[7],a[10]=t3,a[11]=t5,tmp=(C_word)a,a+=12,tmp);
if(C_truep(((C_word*)((C_word*)t0)[13])[1])){
t9=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28065,a[2]=t8,a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 381  make-binding");
f_25995(t9,((C_word*)((C_word*)t0)[13])[1],lf[626]);}
else{
t9=t8;
f_28007(t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28000,a[2]=t6,a[3]=t3,a[4]=((C_word*)t0)[5],a[5]=t5,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 381  collector-acc");
f_27641(t8,((C_word*)((C_word*)t0)[5])[1]);}}
else{
t2=((C_word*)t0)[11];
f_27674(t2,C_SCHEME_UNDEFINED);}}

/* k27998 in k27889 in k27669 in k27666 in k27662 in k27651 in parse-accumulation in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_28000(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=((C_word*)((C_word*)t0)[4])[1];
t4=(C_word)C_i_cadddr(t3);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=((C_word*)t0)[2];
f_27894(t6,t5);}

/* k28063 in k27889 in k27669 in k27666 in k27662 in k27651 in parse-accumulation in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_28065(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28065,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_28007(t4,((C_word*)((C_word*)t0)[3])[1]);}

/* k28005 in k27889 in k27669 in k27666 in k27662 in k27651 in parse-accumulation in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_28007(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28007,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_28011,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 381  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[625]);}

/* k28009 in k28005 in k27889 in k27669 in k27666 in k27662 in k27651 in parse-accumulation in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_28011(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28011,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[11])+1,t1);
t3=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_28015,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 381  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[624]);}

/* k28013 in k28009 in k28005 in k27889 in k27669 in k27666 in k27662 in k27651 in parse-accumulation in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_28015(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28015,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[11])+1,t1);
t3=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_28057,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 381  make-binding");
f_25995(t3,((C_word*)((C_word*)t0)[11])[1],lf[623]);}

/* k28055 in k28013 in k28009 in k28005 in k27889 in k27669 in k27666 in k27662 in k27651 in parse-accumulation in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_28057(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28057,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[11])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t4=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_28053,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 381  make-binding");
f_25995(t4,((C_word*)((C_word*)t0)[10])[1],C_SCHEME_FALSE);}

/* k28051 in k28055 in k28013 in k28009 in k28005 in k27889 in k27669 in k27666 in k27662 in k27651 in parse-accumulation in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_28053(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28053,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[11])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[10])[1],((C_word*)((C_word*)t0)[9])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[8])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[8])+1,t5);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28031,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 381  make-collector");
f_27631(t7,((C_word*)((C_word*)t0)[6])[1],((C_word*)t0)[2],((C_word*)((C_word*)t0)[10])[1],((C_word*)((C_word*)t0)[9])[1]);}

/* k28029 in k28051 in k28055 in k28013 in k28009 in k28005 in k27889 in k27669 in k27666 in k27662 in k27651 in parse-accumulation in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_28031(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28031,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=((C_word*)((C_word*)t0)[5])[1];
if(C_truep(t3)){
t4=((C_word*)t0)[4];
f_27894(t4,C_SCHEME_UNDEFINED);}
else{
t4=(C_word)C_a_i_list(&a,2,lf[15],((C_word*)((C_word*)t0)[3])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[2])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[2])+1,t5);
t7=((C_word*)t0)[4];
f_27894(t7,((C_word*)((C_word*)t0)[2])[1]);}}

/* k27892 in k27889 in k27669 in k27666 in k27662 in k27651 in parse-accumulation in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_27894(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word ab[114],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27894,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27897,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[4],lf[18]);
if(C_truep(t3)){
t4=(C_word)C_a_i_list(&a,1,lf[619]);
t5=(C_word)C_a_i_list(&a,3,lf[18],((C_word*)((C_word*)t0)[3])[1],t4);
t6=(C_word)C_a_i_list(&a,3,lf[620],((C_word*)((C_word*)t0)[2])[1],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,((C_word*)((C_word*)t0)[6])[1]);
t8=C_mutate(((C_word *)((C_word*)t0)[6])+1,t7);
t9=(C_word)C_a_i_list(&a,2,lf[621],((C_word*)((C_word*)t0)[2])[1]);
t10=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[2])[1],t9);
t11=(C_word)C_a_i_cons(&a,2,t10,((C_word*)((C_word*)t0)[6])[1]);
t12=C_mutate(((C_word *)((C_word*)t0)[6])+1,t11);
t13=t2;
f_27897(t13,((C_word*)((C_word*)t0)[6])[1]);}
else{
t4=(C_word)C_eqp(((C_word*)t0)[4],lf[622]);
if(C_truep(t4)){
t5=(C_word)C_a_i_list(&a,2,lf[619],((C_word*)((C_word*)t0)[3])[1]);
t6=(C_word)C_a_i_list(&a,3,lf[620],((C_word*)((C_word*)t0)[2])[1],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,((C_word*)((C_word*)t0)[6])[1]);
t8=C_mutate(((C_word *)((C_word*)t0)[6])+1,t7);
t9=(C_word)C_a_i_list(&a,2,lf[15],((C_word*)((C_word*)t0)[2])[1]);
t10=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[2])[1],t9);
t11=(C_word)C_a_i_cons(&a,2,t10,((C_word*)((C_word*)t0)[6])[1]);
t12=C_mutate(((C_word *)((C_word*)t0)[6])+1,t11);
t13=t2;
f_27897(t13,((C_word*)((C_word*)t0)[6])[1]);}
else{
t5=(C_word)C_a_i_list(&a,3,lf[620],((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[3])[1]);
t6=(C_word)C_a_i_cons(&a,2,t5,((C_word*)((C_word*)t0)[6])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[6])+1,t6);
t8=(C_word)C_a_i_list(&a,2,lf[621],((C_word*)((C_word*)t0)[2])[1]);
t9=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[2])[1],t8);
t10=(C_word)C_a_i_cons(&a,2,t9,((C_word*)((C_word*)t0)[6])[1]);
t11=C_mutate(((C_word *)((C_word*)t0)[6])+1,t10);
t12=t2;
f_27897(t12,((C_word*)((C_word*)t0)[6])[1]);}}}

/* k27895 in k27892 in k27889 in k27669 in k27666 in k27662 in k27651 in parse-accumulation in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_27897(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27897,NULL,2,t0,t1);}
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
t2=(C_word)C_a_i_list(&a,2,lf[15],((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[5])[1],t2);
t4=(C_word)C_a_i_cons(&a,2,t3,((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=((C_word*)t0)[2];
f_27674(t6,((C_word*)((C_word*)t0)[3])[1]);}
else{
t2=((C_word*)t0)[2];
f_27674(t2,C_SCHEME_UNDEFINED);}}

/* k27794 in k27669 in k27666 in k27662 in k27651 in parse-accumulation in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_27796(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27796,2,t0,t1);}
t2=(C_word)C_eqp(((C_word*)t0)[12],lf[615]);
t3=(C_truep(t2)?lf[370]:lf[446]);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_27802,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],a[4]=t3,a[5]=t5,a[6]=((C_word*)t0)[10],a[7]=t1,a[8]=((C_word*)t0)[11],tmp=(C_word)a,a+=9,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
t7=((C_word*)((C_word*)t0)[6])[1];
t8=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_27846,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t6,a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[11],a[9]=t5,tmp=(C_word)a,a+=10,tmp);
if(C_truep(t7)){
t9=t8;
f_27846(2,t9,t7);}
else{
C_trace("ChickenBridge.scm: 381  gensym");
t9=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t9))(3,t9,t8,lf[617]);}}
else{
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27879,a[2]=t6,a[3]=t5,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 381  collector-acc");
f_27641(t7,((C_word*)((C_word*)t0)[5])[1]);}}

/* k27877 in k27794 in k27669 in k27666 in k27662 in k27651 in parse-accumulation in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_27879(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_27802(t3,t2);}

/* k27844 in k27794 in k27669 in k27666 in k27662 in k27651 in parse-accumulation in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_27846(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27846,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,t1);
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_27872,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 381  make-binding");
f_25995(t3,((C_word*)((C_word*)t0)[9])[1],C_SCHEME_FALSE);}

/* k27870 in k27844 in k27794 in k27669 in k27666 in k27662 in k27651 in parse-accumulation in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_27872(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27872,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[9])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[9])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27854,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 381  make-collector");
f_27631(t4,((C_word*)((C_word*)t0)[7])[1],((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_FALSE);}

/* k27852 in k27870 in k27844 in k27794 in k27669 in k27666 in k27662 in k27651 in parse-accumulation in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_27854(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27854,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=((C_word*)((C_word*)t0)[5])[1];
if(C_truep(t3)){
t4=((C_word*)t0)[4];
f_27802(t4,C_SCHEME_UNDEFINED);}
else{
t4=(C_word)C_a_i_list(&a,3,lf[418],((C_word*)((C_word*)t0)[3])[1],C_fix(0));
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[2])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[2])+1,t5);
t7=((C_word*)t0)[4];
f_27802(t7,((C_word*)((C_word*)t0)[2])[1]);}}

/* k27800 in k27794 in k27669 in k27666 in k27662 in k27651 in parse-accumulation in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_27802(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27802,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_27842,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 381  make-binding");
f_25995(t2,((C_word*)t0)[7],C_SCHEME_FALSE);}

/* k27840 in k27800 in k27794 in k27669 in k27666 in k27662 in k27651 in parse-accumulation in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_27842(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[66],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27842,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[8])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[8])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[7],((C_word*)((C_word*)t0)[6])[1]);
t5=(C_word)C_a_i_list(&a,2,lf[419],((C_word*)((C_word*)t0)[5])[1]);
t6=(C_word)C_a_i_list(&a,3,((C_word*)t0)[4],((C_word*)t0)[7],((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_a_i_list(&a,3,lf[418],t5,t6);
t8=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[7]);
t9=(C_word)C_a_i_list(&a,3,lf[20],t7,t8);
t10=(C_word)C_a_i_list(&a,3,lf[443],t4,t9);
t11=(C_word)C_a_i_cons(&a,2,t10,((C_word*)((C_word*)t0)[3])[1]);
t12=C_mutate(((C_word *)((C_word*)t0)[3])+1,t11);
t13=((C_word*)t0)[2];
f_27674(t13,((C_word*)((C_word*)t0)[3])[1]);}

/* k27782 in k27669 in k27666 in k27662 in k27651 in parse-accumulation in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_27784(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_27717(t3,t2);}

/* k27753 in k27669 in k27666 in k27662 in k27651 in parse-accumulation in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_27755(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27755,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,t1);
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_27777,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 381  make-binding");
f_25995(t3,((C_word*)((C_word*)t0)[9])[1],C_fix(0));}

/* k27775 in k27753 in k27669 in k27666 in k27662 in k27651 in parse-accumulation in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_27777(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27777,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[9])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[9])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27763,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 381  make-collector");
f_27631(t4,((C_word*)((C_word*)t0)[7])[1],((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_FALSE);}

/* k27761 in k27775 in k27753 in k27669 in k27666 in k27662 in k27651 in parse-accumulation in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_27763(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27763,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=((C_word*)((C_word*)t0)[5])[1];
if(C_truep(t3)){
t4=((C_word*)t0)[4];
f_27717(t4,C_SCHEME_UNDEFINED);}
else{
t4=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t6=((C_word*)t0)[4];
f_27717(t6,((C_word*)((C_word*)t0)[2])[1]);}}

/* k27715 in k27669 in k27666 in k27662 in k27651 in parse-accumulation in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_27717(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[51],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27717,NULL,2,t0,t1);}
t2=(C_word)C_eqp(((C_word*)t0)[6],lf[612]);
if(C_truep(t2)){
t3=(C_word)C_a_i_list(&a,3,lf[98],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[5])[1],t3);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_27674(t7,((C_word*)((C_word*)t0)[3])[1]);}
else{
t3=(C_word)C_a_i_list(&a,3,lf[98],((C_word*)((C_word*)t0)[5])[1],C_fix(1));
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[5])[1],t3);
t5=(C_word)C_a_i_list(&a,3,lf[20],((C_word*)((C_word*)t0)[4])[1],t4);
t6=(C_word)C_a_i_cons(&a,2,t5,((C_word*)((C_word*)t0)[3])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[3])+1,t6);
t8=((C_word*)t0)[2];
f_27674(t8,((C_word*)((C_word*)t0)[3])[1]);}}

/* k27672 in k27669 in k27666 in k27662 in k27651 in parse-accumulation in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_27674(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27674,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27681,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[10],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_27685,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=t2,a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 381  reverse");
t4=*((C_word*)lf[188]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k27683 in k27672 in k27669 in k27666 in k27662 in k27651 in parse-accumulation in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_27685(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27685,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_27689,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t1,a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 381  reverse");
t3=*((C_word*)lf[188]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k27687 in k27683 in k27672 in k27669 in k27666 in k27662 in k27651 in parse-accumulation in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_27689(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27689,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_27693,a[2]=((C_word*)t0)[3],a[3]=t1,a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 381  reverse");
t3=*((C_word*)lf[188]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k27691 in k27687 in k27683 in k27672 in k27669 in k27666 in k27662 in k27651 in parse-accumulation in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_27693(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27693,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_27697,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 381  reverse");
t3=*((C_word*)lf[188]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k27695 in k27691 in k27687 in k27683 in k27672 in k27669 in k27666 in k27662 in k27651 in parse-accumulation in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_27697(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27697,2,t0,t1);}
t2=(C_truep(((C_word*)((C_word*)t0)[8])[1])?(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[7])[1]):C_SCHEME_END_OF_LIST);
C_trace("ChickenBridge.scm: 381  make-loop-clause");
f_25761(((C_word*)t0)[6],(C_word)C_a_i_list(&a,14,lf[499],((C_word*)t0)[5],lf[500],((C_word*)t0)[4],lf[502],((C_word*)t0)[3],lf[504],((C_word*)t0)[2],lf[507],t1,lf[501],t2,lf[503],C_SCHEME_END_OF_LIST));}

/* k27679 in k27672 in k27669 in k27666 in k27662 in k27651 in parse-accumulation in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_27681(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 381  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* collector-acc in parse-accumulation in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_27641(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27641,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_caddr(t2));}

/* collector-type in parse-accumulation in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_27636(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27636,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_cadr(t2));}

/* make-collector in parse-accumulation in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_27631(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27631,NULL,5,t1,t2,t3,t4,t5);}
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_a_i_list(&a,4,t2,t3,t4,t5));}

/* parse-initially in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_27463(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[19],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_27463,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_car(((C_word*)t5)[1]);
t7=(C_word)C_i_cdr(((C_word*)t5)[1]);
t8=C_set_block_item(t5,0,t7);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27474,a[2]=t6,a[3]=t1,a[4]=t10,a[5]=t5,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t5)[1]))){
C_trace("ChickenBridge.scm: 381  loop-error");
f_26001(t11,t4,((C_word*)t5)[1],(C_word)C_a_i_list(&a,3,lf[609],t6,lf[610]));}
else{
t12=t11;
f_27474(2,t12,C_SCHEME_UNDEFINED);}}

/* k27472 in parse-initially in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_27474(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27474,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[5])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27489,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 381  make-loop-clause");
f_25761(t6,(C_word)C_a_i_list(&a,4,lf[499],((C_word*)t0)[2],lf[502],t7));}

/* k27487 in k27472 in parse-initially in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_27489(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 381  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-finally in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_27425(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[19],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_27425,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_car(((C_word*)t5)[1]);
t7=(C_word)C_i_cdr(((C_word*)t5)[1]);
t8=C_set_block_item(t5,0,t7);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27436,a[2]=t6,a[3]=t1,a[4]=t10,a[5]=t5,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t5)[1]))){
C_trace("ChickenBridge.scm: 381  loop-error");
f_26001(t11,t4,((C_word*)t5)[1],(C_word)C_a_i_list(&a,3,lf[606],t6,lf[607]));}
else{
t12=t11;
f_27436(2,t12,C_SCHEME_UNDEFINED);}}

/* k27434 in parse-finally in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_27436(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27436,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[5])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27451,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 381  make-loop-clause");
f_25761(t6,(C_word)C_a_i_list(&a,4,lf[499],((C_word*)t0)[2],lf[506],t7));}

/* k27449 in k27434 in parse-finally in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_27451(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 381  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-do in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_27358(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[21],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_27358,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t5)[1];
t7=(C_word)C_i_car(((C_word*)t5)[1]);
t8=(C_word)C_i_cdr(((C_word*)t5)[1]);
t9=C_set_block_item(t5,0,t8);
t10=C_SCHEME_END_OF_LIST;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27369,a[2]=t11,a[3]=t7,a[4]=t5,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
t13=C_SCHEME_UNDEFINED;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_set_block_item(t14,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_27378,a[2]=t14,a[3]=t7,a[4]=t6,a[5]=t4,a[6]=t11,a[7]=t5,a[8]=((C_word)li425),tmp=(C_word)a,a+=9,tmp));
t16=((C_word*)t14)[1];
f_27378(t16,t12);}

/* do4520 in parse-do in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_27378(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27378,NULL,2,t0,t1);}
t2=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]);
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_27388,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=t1,a[8]=((C_word*)t0)[6],tmp=(C_word)a,a+=9,tmp);
if(C_truep(t2)){
t4=t3;
f_27388(2,t4,t2);}
else{
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
C_trace("ChickenBridge.scm: 381  loop-op?");
f_25983(t3,t4,((C_word*)t0)[5]);}}

/* k27386 in do4520 in parse-do in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_27388(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27388,2,t0,t1);}
if(C_truep(t1)){
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
C_trace("ChickenBridge.scm: 381  loop-error");
f_26001(((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,3,lf[603],((C_word*)t0)[4],lf[604]));}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27401,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 381  reverse");
t3=*((C_word*)lf[188]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[8])[1]);}}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t3=(C_word)C_a_i_cons(&a,2,t2,((C_word*)((C_word*)t0)[8])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[8])+1,t3);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)((C_word*)t0)[2])[1];
f_27378(t7,((C_word*)t0)[7]);}}

/* k27399 in k27386 in do4520 in parse-do in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_27401(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}

/* k27367 in parse-do in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_27369(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27369,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27376,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 381  make-loop-clause");
f_25761(t2,(C_word)C_a_i_list(&a,4,lf[499],((C_word*)t0)[3],lf[504],((C_word*)((C_word*)t0)[2])[1]));}

/* k27374 in k27367 in parse-do in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_27376(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 381  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-with in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_27165(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word ab[37],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_27165,5,t0,t1,t2,t3,t4);}
t5=t2;
t6=(C_word)C_i_cdr(t2);
t7=t6;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_END_OF_LIST;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_END_OF_LIST;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_27172,a[2]=t12,a[3]=t10,a[4]=t5,a[5]=t4,a[6]=t14,a[7]=t16,a[8]=t18,a[9]=t8,a[10]=t1,tmp=(C_word)a,a+=11,tmp);
t20=C_SCHEME_UNDEFINED;
t21=(*a=C_VECTOR_TYPE|1,a[1]=t20,tmp=(C_word)a,a+=2,tmp);
t22=C_set_block_item(t21,0,(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_27225,a[2]=t18,a[3]=t16,a[4]=t5,a[5]=t4,a[6]=t14,a[7]=t12,a[8]=t10,a[9]=t21,a[10]=t8,a[11]=((C_word)li423),tmp=(C_word)a,a+=12,tmp));
t23=((C_word*)t21)[1];
f_27225(t23,t19,C_SCHEME_TRUE,C_SCHEME_FALSE);}

/* do4476 in parse-with in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_27225(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27225,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[10])[1]);
t7=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_27235,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=t4,a[10]=((C_word*)t0)[9],a[11]=t5,a[12]=((C_word*)t0)[10],a[13]=t1,tmp=(C_word)a,a+=14,tmp);
if(C_truep(t6)){
t8=t7;
f_27235(2,t8,t6);}
else{
t8=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
C_trace("ChickenBridge.scm: 381  loop-op?");
f_25983(t7,t8,((C_word*)t0)[5]);}}

/* k27233 in do4476 in parse-with in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_27235(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27235,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[13];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[12])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[12])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[12])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27246,a[2]=((C_word*)t0)[11],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[13],a[5]=((C_word*)t0)[10],tmp=(C_word)a,a+=6,tmp);
t7=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_27349,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=t6,a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[7],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[8],a[12]=((C_word*)t0)[9],tmp=(C_word)a,a+=13,tmp);
C_trace("ChickenBridge.scm: 381  loop-variable?");
f_25989(t7,((C_word*)((C_word*)t0)[11])[1]);}}

/* k27347 in k27233 in do4476 in parse-with in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_27349(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[64],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27349,2,t0,t1);}
t2=(C_truep(t1)?((C_word*)((C_word*)t0)[12])[1]:C_SCHEME_FALSE);
if(C_truep(t2)){
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_27255,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[12],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[11],tmp=(C_word)a,a+=10,tmp);
if(C_truep(((C_word*)((C_word*)t0)[11])[1])){
C_trace("ChickenBridge.scm: 381  loop-error");
f_26001(t3,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,3,lf[593],((C_word*)((C_word*)t0)[10])[1],lf[594]));}
else{
t4=t3;
f_27255(2,t4,C_SCHEME_UNDEFINED);}}
else{
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[10])[1],lf[417]);
if(C_truep(t3)){
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27277,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[11],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[8])[1])){
C_trace("ChickenBridge.scm: 381  loop-error");
f_26001(t4,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[595]));}
else{
if(C_truep(((C_word*)((C_word*)t0)[11])[1])){
if(C_truep(((C_word*)((C_word*)t0)[9])[1])){
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27306,a[2]=t4,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[11],a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 381  make-binding");
f_25995(t5,((C_word*)((C_word*)t0)[11])[1],C_SCHEME_FALSE);}
else{
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27314,a[2]=t4,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 381  make-binding");
f_25995(t5,((C_word*)((C_word*)t0)[11])[1],C_SCHEME_FALSE);}}
else{
C_trace("ChickenBridge.scm: 381  loop-error");
f_26001(t4,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[596]));}}}
else{
t4=(C_word)C_eqp(((C_word*)((C_word*)t0)[10])[1],lf[581]);
if(C_truep(t4)){
if(C_truep(((C_word*)((C_word*)t0)[9])[1])){
C_trace("ChickenBridge.scm: 381  loop-error");
f_26001(((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[597]));}
else{
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t6);
t8=C_mutate(((C_word *)((C_word*)t0)[9])+1,t5);
t9=((C_word*)t0)[7];
f_27246(2,t9,t8);}}
else{
if(C_truep(((C_word*)((C_word*)t0)[12])[1])){
C_trace("ChickenBridge.scm: 381  loop-error");
f_26001(((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,3,lf[598],((C_word*)((C_word*)t0)[10])[1],lf[599]));}
else{
C_trace("ChickenBridge.scm: 381  loop-error");
f_26001(((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,3,lf[600],((C_word*)((C_word*)t0)[10])[1],lf[601]));}}}}}

/* k27312 in k27347 in k27233 in do4476 in parse-with in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_27314(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27314,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_27277(2,t4,((C_word*)((C_word*)t0)[3])[1]);}

/* k27304 in k27347 in k27233 in do4476 in parse-with in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_27306(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27306,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_27277(2,t7,((C_word*)((C_word*)t0)[3])[1]);}

/* k27275 in k27347 in k27233 in do4476 in parse-with in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_27277(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_FALSE);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_FALSE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_TRUE);
t6=((C_word*)t0)[2];
f_27246(2,t6,t5);}

/* k27253 in k27347 in k27233 in do4476 in parse-with in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_27255(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27255,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27258,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
C_trace("ChickenBridge.scm: 381  loop-error");
f_26001(t2,((C_word*)t0)[3],((C_word*)t0)[2],(C_word)C_a_i_list(&a,3,lf[591],((C_word*)((C_word*)t0)[8])[1],lf[592]));}
else{
t3=t2;
f_27258(2,t3,C_SCHEME_UNDEFINED);}}

/* k27256 in k27253 in k27347 in k27233 in do4476 in parse-with in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_27258(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[7])+1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_FALSE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_FALSE);
t5=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_FALSE);
t6=((C_word*)t0)[2];
f_27246(2,t6,t5);}

/* k27244 in k27233 in do4476 in parse-with in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_27246(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[5])[1];
f_27225(t2,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k27170 in parse-with in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_27172(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27172,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27175,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[10],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("ChickenBridge.scm: 381  loop-error");
f_26001(t2,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[590]));}
else{
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27215,a[2]=t2,a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 381  make-binding");
f_25995(t3,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27223,a[2]=t2,a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 381  make-binding");
f_25995(t3,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE);}}
else{
t3=t2;
f_27175(2,t3,C_SCHEME_UNDEFINED);}}}

/* k27221 in k27170 in parse-with in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_27223(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27223,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_27175(2,t4,((C_word*)((C_word*)t0)[3])[1]);}

/* k27213 in k27170 in parse-with in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_27215(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27215,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_27175(2,t7,((C_word*)((C_word*)t0)[3])[1]);}

/* k27173 in k27170 in parse-with in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_27175(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27175,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27182,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27186,a[2]=((C_word*)t0)[3],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 381  reverse");
t4=*((C_word*)lf[188]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k27184 in k27173 in k27170 in parse-with in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_27186(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27186,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27190,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 381  reverse");
t3=*((C_word*)lf[188]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k27188 in k27184 in k27173 in k27170 in parse-with in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_27190(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27190,2,t0,t1);}
C_trace("ChickenBridge.scm: 381  make-loop-clause");
f_25761(((C_word*)t0)[3],(C_word)C_a_i_list(&a,6,lf[499],lf[589],lf[500],((C_word*)t0)[2],lf[502],t1));}

/* k27180 in k27173 in k27170 in parse-with in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_27182(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 381  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-general-iteration in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_27023(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word ab[32],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_27023,5,t0,t1,t2,t3,t4);}
t5=t2;
t6=(C_word)C_i_cadr(t2);
t7=(C_word)C_i_cddr(t2);
t8=t7;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_FALSE;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27033,a[2]=t6,a[3]=t17,a[4]=t15,a[5]=t11,a[6]=t9,a[7]=t1,tmp=(C_word)a,a+=8,tmp);
t19=C_SCHEME_UNDEFINED;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_set_block_item(t20,0,(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_27071,a[2]=t17,a[3]=t11,a[4]=t5,a[5]=t4,a[6]=t13,a[7]=t15,a[8]=t6,a[9]=t20,a[10]=t9,a[11]=((C_word)li421),tmp=(C_word)a,a+=12,tmp));
t22=((C_word*)t20)[1];
f_27071(t22,t18,C_SCHEME_FALSE);}

/* do4438 in parse-general-iteration in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_27071(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27071,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[10])[1]);
t5=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_27081,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=t3,a[11]=((C_word*)t0)[10],a[12]=t1,tmp=(C_word)a,a+=13,tmp);
if(C_truep(t4)){
t6=t5;
f_27081(2,t6,t4);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
C_trace("ChickenBridge.scm: 381  loop-op?");
f_25983(t5,t6,((C_word*)t0)[5]);}}

/* k27079 in do4438 in parse-general-iteration in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_27081(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27081,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[12];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[11])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[11])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[11])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[10])+1,t2);
t6=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_27092,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[12],a[11]=((C_word*)t0)[9],a[12]=((C_word*)t0)[10],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[11])[1]))){
C_trace("ChickenBridge.scm: 381  loop-error");
f_26001(t6,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[587]));}
else{
t7=t6;
f_27092(2,t7,C_SCHEME_UNDEFINED);}}}

/* k27090 in k27079 in do4438 in parse-general-iteration in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_27092(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27092,2,t0,t1);}
t2=((C_word*)((C_word*)t0)[12])[1];
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27095,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[10],a[4]=((C_word*)t0)[11],tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_eqp(t2,lf[581]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27104,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("ChickenBridge.scm: 381  loop-error");
f_26001(t5,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[582]));}
else{
t6=t5;
f_27104(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t2,lf[583]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_27129,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[2],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[3],tmp=(C_word)a,a+=10,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 381  loop-error");
f_26001(t6,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[584]));}
else{
t7=t6;
f_27129(2,t7,C_SCHEME_UNDEFINED);}}
else{
C_trace("ChickenBridge.scm: 381  loop-error");
f_26001(t3,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,3,lf[585],((C_word*)((C_word*)t0)[12])[1],lf[586]));}}}

/* k27127 in k27090 in k27079 in do4438 in parse-general-iteration in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_27129(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27129,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,((C_word*)((C_word*)t0)[8])[1]);
t3=C_set_block_item(((C_word*)t0)[8],0,C_SCHEME_FALSE);
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[7])+1,t5);
t7=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[6],t4);
t8=C_mutate(((C_word *)((C_word*)t0)[5])+1,t7);
t9=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t10=((C_word*)t0)[2];
f_27095(2,t10,t9);}

/* k27102 in k27090 in k27079 in do4438 in parse-general-iteration in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_27104(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27104,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[7])+1,t3);
t5=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[6],t2);
t6=C_mutate(((C_word *)((C_word*)t0)[5])+1,t5);
t7=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t8=((C_word*)t0)[2];
f_27095(2,t8,t7);}

/* k27093 in k27090 in k27079 in do4438 in parse-general-iteration in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_27095(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
f_27071(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k27031 in parse-general-iteration in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_27033(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27033,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27040,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27069,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 381  make-binding");
f_25995(t3,((C_word*)t0)[2],C_SCHEME_FALSE);}

/* k27067 in k27031 in parse-general-iteration in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_27069(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[42],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27069,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
t3=(C_truep(((C_word*)((C_word*)t0)[5])[1])?(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[5])[1]):C_SCHEME_END_OF_LIST);
t4=(C_truep(((C_word*)((C_word*)t0)[4])[1])?(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]):C_SCHEME_END_OF_LIST);
t5=(C_truep(((C_word*)((C_word*)t0)[3])[1])?(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]):C_SCHEME_END_OF_LIST);
C_trace("ChickenBridge.scm: 381  make-loop-clause");
f_25761(((C_word*)t0)[2],(C_word)C_a_i_list(&a,10,lf[499],lf[529],lf[500],t2,lf[502],t3,lf[504],t4,lf[505],t5));}

/* k27038 in k27031 in parse-general-iteration in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_27040(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 381  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-sequence-iteration in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_26672(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[7],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_26672,5,t0,t1,t2,t3,t4);}
t5=t2;
t6=(C_word)C_i_cadr(t2);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26679,a[2]=t5,a[3]=t4,a[4]=t6,a[5]=t1,a[6]=t2,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 381  gensym");
t8=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t8))(3,t8,t7,lf[579]);}

/* k26677 in parse-sequence-iteration in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_26679(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word ab[44],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26679,2,t0,t1);}
t2=(C_word)C_i_cddr(((C_word*)t0)[6]);
t3=t2;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_END_OF_LIST;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_END_OF_LIST;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_END_OF_LIST;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_END_OF_LIST;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_END_OF_LIST;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=C_SCHEME_FALSE;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_26685,a[2]=t8,a[3]=t14,a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=t20,a[7]=t18,a[8]=t12,a[9]=t10,a[10]=t16,a[11]=t4,a[12]=((C_word*)t0)[5],a[13]=t6,tmp=(C_word)a,a+=14,tmp);
t22=C_SCHEME_UNDEFINED;
t23=(*a=C_VECTOR_TYPE|1,a[1]=t22,tmp=(C_word)a,a+=2,tmp);
t24=C_set_block_item(t23,0,(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_26913,a[2]=t14,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t8,a[6]=t20,a[7]=t23,a[8]=t4,a[9]=((C_word)li419),tmp=(C_word)a,a+=10,tmp));
t25=((C_word*)t23)[1];
f_26913(t25,t21,C_SCHEME_FALSE);}

/* do4371 in k26677 in parse-sequence-iteration in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_26913(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26913,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]);
t5=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_26923,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=t3,a[9]=((C_word*)t0)[8],a[10]=t1,tmp=(C_word)a,a+=11,tmp);
if(C_truep(t4)){
t6=t5;
f_26923(2,t6,t4);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
C_trace("ChickenBridge.scm: 381  loop-op?");
f_25983(t5,t6,((C_word*)t0)[4]);}}

/* k26921 in do4371 in k26677 in parse-sequence-iteration in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_26923(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26923,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[10];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[9])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[9])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[8])+1,t2);
t6=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_26934,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[7],a[10]=((C_word*)t0)[8],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[9])[1]))){
C_trace("ChickenBridge.scm: 381  loop-error");
f_26001(t6,((C_word*)t0)[4],((C_word*)t0)[3],(C_word)C_a_i_list(&a,1,lf[578]));}
else{
t7=t6;
f_26934(2,t7,C_SCHEME_UNDEFINED);}}}

/* k26932 in k26921 in do4371 in k26677 in parse-sequence-iteration in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_26934(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26934,2,t0,t1);}
t2=((C_word*)((C_word*)t0)[10])[1];
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26937,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_eqp(t2,lf[568]);
t5=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_26946,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=t3,a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[7],tmp=(C_word)a,a+=11,tmp);
if(C_truep(t4)){
t6=t5;
f_26946(t6,t4);}
else{
t6=(C_word)C_eqp(t2,lf[577]);
if(C_truep(t6)){
t7=t5;
f_26946(t7,t6);}
else{
t7=(C_word)C_eqp(t2,lf[562]);
t8=t5;
f_26946(t8,(C_truep(t7)?t7:(C_word)C_eqp(t2,lf[567])));}}}

/* k26944 in k26932 in k26921 in do4371 in k26677 in parse-sequence-iteration in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_26946(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[37],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26946,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26949,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[10])[1])){
C_trace("ChickenBridge.scm: 381  loop-error");
f_26001(t2,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,5,lf[570],((C_word*)((C_word*)t0)[9])[1],lf[571],((C_word*)((C_word*)t0)[10])[1],lf[572]));}
else{
t3=t2;
f_26949(2,t3,C_SCHEME_UNDEFINED);}}
else{
t2=(C_word)C_eqp(((C_word*)t0)[3],lf[553]);
if(C_truep(t2)){
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 381  loop-error");
f_26001(((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[573]));}
else{
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[10])[1],lf[562]);
if(C_truep(t3)){
C_trace("ChickenBridge.scm: 381  loop-error");
f_26001(((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[574]));}
else{
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[8])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[8])+1,t5);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t8=((C_word*)t0)[6];
f_26937(2,t8,t7);}}}
else{
C_trace("ChickenBridge.scm: 381  loop-error");
f_26001(((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,3,lf[575],((C_word*)((C_word*)t0)[9])[1],lf[576]));}}}

/* k26947 in k26944 in k26932 in k26921 in do4371 in k26677 in parse-sequence-iteration in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_26949(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t4);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=((C_word*)t0)[2];
f_26937(2,t7,t6);}

/* k26935 in k26932 in k26921 in do4371 in k26677 in parse-sequence-iteration in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_26937(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
f_26913(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k26683 in k26677 in parse-sequence-iteration in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_26685(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26685,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_26911,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
C_trace("ChickenBridge.scm: 381  make-binding");
f_25995(t2,((C_word*)t0)[4],C_SCHEME_FALSE);}

/* k26909 in k26683 in k26677 in parse-sequence-iteration in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_26911(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26911,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[13])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[13])+1,t2);
t4=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_26907,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[12],a[12]=((C_word*)t0)[13],tmp=(C_word)a,a+=13,tmp);
C_trace("ChickenBridge.scm: 381  make-binding");
f_25995(t4,((C_word*)t0)[5],((C_word*)((C_word*)t0)[2])[1]);}

/* k26905 in k26909 in k26683 in k26677 in parse-sequence-iteration in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_26907(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word ab[92],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26907,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[12])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[12])+1,t2);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_26696,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],tmp=(C_word)a,a+=9,tmp);
t5=(C_word)C_eqp(((C_word*)((C_word*)t0)[5])[1],lf[562]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_26713,a[2]=t4,a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[4],a[9]=((C_word*)t0)[12],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 381  gensym");
t7=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t7))(3,t7,t6,lf[566]);}
else{
t6=(C_word)C_eqp(((C_word*)((C_word*)t0)[5])[1],lf[567]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26789,a[2]=t4,a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
t8=(C_word)C_a_i_list(&a,3,lf[295],((C_word*)t0)[4],((C_word*)((C_word*)t0)[2])[1]);
t9=t7;
f_26789(t9,(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[3],t8));}
else{
t8=(C_word)C_a_i_list(&a,2,lf[295],((C_word*)t0)[4]);
t9=t7;
f_26789(t9,(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[3],t8));}}
else{
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26818,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[5],a[4]=t4,a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26853,a[2]=t7,a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[2],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_listp(((C_word*)((C_word*)t0)[2])[1]))){
t9=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t10=t8;
f_26853(t10,(C_word)C_eqp(t9,lf[569]));}
else{
t9=t8;
f_26853(t9,C_SCHEME_FALSE);}}
else{
t8=(C_word)C_a_i_list(&a,2,lf[15],((C_word*)t0)[4]);
t9=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[4],t8);
t10=(C_word)C_a_i_cons(&a,2,t9,((C_word*)((C_word*)t0)[6])[1]);
t11=C_mutate(((C_word *)((C_word*)t0)[6])+1,t10);
t12=t7;
f_26818(t12,((C_word*)((C_word*)t0)[6])[1]);}}}}

/* k26851 in k26905 in k26909 in k26683 in k26677 in parse-sequence-iteration in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_26853(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[36],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26853,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_a_i_list(&a,2,t2,((C_word*)t0)[4]);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[4],t3);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_26818(t7,((C_word*)((C_word*)t0)[3])[1]);}
else{
t2=(C_word)C_a_i_list(&a,2,((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[4]);
t3=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[4],t2);
t4=(C_word)C_a_i_cons(&a,2,t3,((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=((C_word*)t0)[2];
f_26818(t6,((C_word*)((C_word*)t0)[3])[1]);}}

/* k26816 in k26905 in k26909 in k26683 in k26677 in parse-sequence-iteration in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_26818(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26818,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26834,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[3])[1],lf[568]);
if(C_truep(t3)){
t4=(C_word)C_a_i_list(&a,2,lf[8],((C_word*)t0)[6]);
t5=t2;
f_26834(t5,(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[2],t4));}
else{
t4=t2;
f_26834(t4,(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[2],((C_word*)t0)[6]));}}

/* k26832 in k26816 in k26905 in k26909 in k26683 in k26677 in parse-sequence-iteration in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_26834(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26834,NULL,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_a_i_list(&a,2,lf[3],((C_word*)t0)[4]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_26696(t7,((C_word*)((C_word*)t0)[3])[1]);}

/* k26787 in k26905 in k26909 in k26683 in k26677 in parse-sequence-iteration in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_26789(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26789,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,lf[293],((C_word*)t0)[4]);
t3=(C_word)C_a_i_list(&a,3,lf[443],t1,t2);
t4=(C_word)C_a_i_cons(&a,2,t3,((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=((C_word*)t0)[2];
f_26696(t6,((C_word*)((C_word*)t0)[3])[1]);}

/* k26711 in k26905 in k26909 in k26683 in k26677 in parse-sequence-iteration in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_26713(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26713,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_26716,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 381  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[565]);}

/* k26714 in k26711 in k26905 in k26909 in k26683 in k26677 in parse-sequence-iteration in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_26716(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26716,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_26780,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=t1,a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 381  make-binding");
f_25995(t2,((C_word*)t0)[7],C_fix(0));}

/* k26778 in k26714 in k26711 in k26905 in k26909 in k26683 in k26677 in parse-sequence-iteration in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_26780(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26780,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[11])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t4=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_26776,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 381  make-binding");
f_25995(t4,((C_word*)t0)[9],C_SCHEME_FALSE);}

/* k26774 in k26778 in k26714 in k26711 in k26905 in k26909 in k26683 in k26677 in parse-sequence-iteration in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_26776(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word ab[81],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26776,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[11])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t4=(C_word)C_a_i_list(&a,2,lf[563],((C_word*)t0)[10]);
t5=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[9],t4);
t6=(C_word)C_a_i_cons(&a,2,t5,((C_word*)((C_word*)t0)[8])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[8])+1,t6);
t8=(C_word)C_a_i_list(&a,3,lf[98],C_fix(1),((C_word*)t0)[7]);
t9=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[7],t8);
t10=(C_word)C_a_i_cons(&a,2,t9,((C_word*)((C_word*)t0)[6])[1]);
t11=C_mutate(((C_word *)((C_word*)t0)[6])+1,t10);
t12=(C_word)C_a_i_list(&a,3,lf[564],((C_word*)t0)[10],((C_word*)t0)[7]);
t13=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[5],t12);
t14=(C_word)C_a_i_cons(&a,2,t13,((C_word*)((C_word*)t0)[4])[1]);
t15=C_mutate(((C_word *)((C_word*)t0)[4])+1,t14);
t16=(C_word)C_a_i_list(&a,3,lf[370],((C_word*)t0)[7],((C_word*)t0)[9]);
t17=(C_word)C_a_i_list(&a,2,lf[419],t16);
t18=(C_word)C_a_i_cons(&a,2,t17,((C_word*)((C_word*)t0)[3])[1]);
t19=C_mutate(((C_word *)((C_word*)t0)[3])+1,t18);
t20=((C_word*)t0)[2];
f_26696(t20,((C_word*)((C_word*)t0)[3])[1]);}

/* k26694 in k26905 in k26909 in k26683 in k26677 in parse-sequence-iteration in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_26696(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26696,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26703,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26707,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=t2,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 381  reverse");
t4=*((C_word*)lf[188]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k26705 in k26694 in k26905 in k26909 in k26683 in k26677 in parse-sequence-iteration in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_26707(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[36],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26707,2,t0,t1);}
C_trace("ChickenBridge.scm: 381  make-loop-clause");
f_25761(((C_word*)t0)[6],(C_word)C_a_i_list(&a,12,lf[499],lf[529],lf[500],t1,lf[503],((C_word*)((C_word*)t0)[5])[1],lf[502],((C_word*)((C_word*)t0)[4])[1],lf[504],((C_word*)((C_word*)t0)[3])[1],lf[505],((C_word*)((C_word*)t0)[2])[1]));}

/* k26701 in k26694 in k26905 in k26909 in k26683 in k26677 in parse-sequence-iteration in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_26703(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 381  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-repeat in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_26625(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[13],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_26625,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t5))){
C_trace("ChickenBridge.scm: 381  loop-error");
f_26001(t1,t4,t2,(C_word)C_a_i_list(&a,1,lf[559]));}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26640,a[2]=t4,a[3]=t3,a[4]=t2,a[5]=((C_word)li416),tmp=(C_word)a,a+=6,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26658,a[2]=t2,a[3]=((C_word)li417),tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 381  call-with-values");
C_call_with_values(4,0,t1,t6,t7);}}

/* a26657 in parse-repeat in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_26658(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_26658,4,t0,t1,t2,t3);}
t4=(C_word)C_i_cddr(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 381  values");
C_values(4,0,t1,t2,t4);}

/* a26639 in parse-repeat in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_26640(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26640,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26652,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 381  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[560]);}

/* k26650 in a26639 in parse-repeat in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_26652(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26652,2,t0,t1);}
t2=(C_word)C_i_cadr(((C_word*)t0)[5]);
t3=(C_word)C_a_i_list(&a,4,lf[529],t1,lf[534],t2);
C_trace("ChickenBridge.scm: 381  parse-numerical-for");
t4=C_retrieve2(lf[528],"parse-numerical-for");
f_26243(5,t4,((C_word*)t0)[4],t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* parse-numerical-for in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_26243(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word ab[48],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_26243,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_i_cadr(t2);
t6=(C_word)C_i_cddr(t2);
t7=t6;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_END_OF_LIST;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_END_OF_LIST;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_FALSE;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=C_SCHEME_FALSE;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_SCHEME_FALSE;
t22=(*a=C_VECTOR_TYPE|1,a[1]=t21,tmp=(C_word)a,a+=2,tmp);
t23=C_SCHEME_FALSE;
t24=(*a=C_VECTOR_TYPE|1,a[1]=t23,tmp=(C_word)a,a+=2,tmp);
t25=C_SCHEME_FALSE;
t26=(*a=C_VECTOR_TYPE|1,a[1]=t25,tmp=(C_word)a,a+=2,tmp);
t27=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_26253,a[2]=t18,a[3]=t16,a[4]=t14,a[5]=t24,a[6]=t10,a[7]=t12,a[8]=t20,a[9]=t8,a[10]=t1,a[11]=t22,a[12]=t5,a[13]=t26,tmp=(C_word)a,a+=14,tmp);
t28=C_SCHEME_UNDEFINED;
t29=(*a=C_VECTOR_TYPE|1,a[1]=t28,tmp=(C_word)a,a+=2,tmp);
t30=C_set_block_item(t29,0,(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_26452,a[2]=t22,a[3]=t18,a[4]=t20,a[5]=t2,a[6]=t4,a[7]=t14,a[8]=t16,a[9]=t29,a[10]=t8,a[11]=((C_word)li414),tmp=(C_word)a,a+=12,tmp));
t31=((C_word*)t29)[1];
f_26452(t31,t27,C_SCHEME_FALSE);}

/* do4272 in parse-numerical-for in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_26452(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26452,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[10])[1]);
t5=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_26462,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=t3,a[11]=((C_word*)t0)[10],a[12]=t1,tmp=(C_word)a,a+=13,tmp);
if(C_truep(t4)){
t6=t5;
f_26462(2,t6,t4);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
C_trace("ChickenBridge.scm: 381  loop-op?");
f_25983(t5,t6,((C_word*)t0)[6]);}}

/* k26460 in do4272 in parse-numerical-for in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_26462(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26462,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[12];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[11])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[11])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[11])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[10])+1,t2);
t6=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_26473,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[12],a[11]=((C_word*)t0)[9],a[12]=((C_word*)t0)[10],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[11])[1]))){
C_trace("ChickenBridge.scm: 381  loop-error");
f_26001(t6,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[557]));}
else{
t7=t6;
f_26473(2,t7,C_SCHEME_UNDEFINED);}}}

/* k26471 in k26460 in do4272 in parse-numerical-for in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_26473(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[132],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26473,2,t0,t1);}
t2=((C_word*)((C_word*)t0)[12])[1];
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26476,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[10],a[4]=((C_word*)t0)[11],tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_eqp(t2,lf[536]);
t5=(C_truep(t4)?t4:(C_word)C_eqp(t2,lf[532]));
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26488,a[2]=t3,a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[12],a[6]=((C_word*)t0)[9],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[9])[1])){
C_trace("ChickenBridge.scm: 381  loop-error");
f_26001(t6,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,5,lf[537],((C_word*)((C_word*)t0)[12])[1],lf[538],((C_word*)((C_word*)t0)[9])[1],lf[539]));}
else{
t7=t6;
f_26488(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t2,lf[534]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26509,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 381  loop-error");
f_26001(t7,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,5,lf[540],((C_word*)((C_word*)t0)[12])[1],lf[541],((C_word*)((C_word*)t0)[3])[1],lf[542]));}
else{
t8=t7;
f_26509(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t2,lf[543]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26530,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 381  loop-error");
f_26001(t8,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,5,lf[544],((C_word*)((C_word*)t0)[12])[1],lf[545],((C_word*)((C_word*)t0)[3])[1],lf[546]));}
else{
t9=t8;
f_26530(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(C_word)C_eqp(t2,lf[533]);
if(C_truep(t8)){
t9=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26551,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 381  loop-error");
f_26001(t9,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,5,lf[547],((C_word*)((C_word*)t0)[12])[1],lf[548],((C_word*)((C_word*)t0)[3])[1],lf[549]));}
else{
t10=t9;
f_26551(2,t10,C_SCHEME_UNDEFINED);}}
else{
t9=(C_word)C_eqp(t2,lf[535]);
if(C_truep(t9)){
t10=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26572,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 381  loop-error");
f_26001(t10,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,5,lf[550],((C_word*)((C_word*)t0)[12])[1],lf[551],((C_word*)((C_word*)t0)[3])[1],lf[552]));}
else{
t11=t10;
f_26572(2,t11,C_SCHEME_UNDEFINED);}}
else{
t10=(C_word)C_eqp(t2,lf[553]);
if(C_truep(t10)){
t11=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26593,a[2]=t3,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[8],tmp=(C_word)a,a+=5,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 381  loop-error");
f_26001(t11,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[554]));}
else{
t12=t11;
f_26593(2,t12,C_SCHEME_UNDEFINED);}}
else{
C_trace("ChickenBridge.scm: 381  loop-error");
f_26001(t3,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,3,lf[555],((C_word*)((C_word*)t0)[12])[1],lf[556]));}}}}}}}

/* k26591 in k26471 in k26460 in do4272 in parse-numerical-for in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_26593(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t6=((C_word*)t0)[2];
f_26476(2,t6,t5);}

/* k26570 in k26471 in k26460 in do4272 in parse-numerical-for in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_26572(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[6])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t7=((C_word*)t0)[2];
f_26476(2,t7,t6);}

/* k26549 in k26471 in k26460 in do4272 in parse-numerical-for in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_26551(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[6])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t7=((C_word*)t0)[2];
f_26476(2,t7,t6);}

/* k26528 in k26471 in k26460 in do4272 in parse-numerical-for in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_26530(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[6])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t7=((C_word*)t0)[2];
f_26476(2,t7,t6);}

/* k26507 in k26471 in k26460 in do4272 in parse-numerical-for in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_26509(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[6])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t7=((C_word*)t0)[2];
f_26476(2,t7,t6);}

/* k26486 in k26471 in k26460 in do4272 in parse-numerical-for in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_26488(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t4);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=((C_word*)t0)[2];
f_26476(2,t7,t6);}

/* k26474 in k26471 in k26460 in do4272 in parse-numerical-for in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_26476(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
f_26452(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k26251 in parse-numerical-for in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_26253(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26253,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_26256,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
t3=((C_word*)((C_word*)t0)[3])[1];
if(C_truep(t3)){
t4=t2;
f_26256(t4,C_SCHEME_UNDEFINED);}
else{
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[536]);
t5=t2;
f_26256(t5,t4);}}

/* k26254 in k26251 in parse-numerical-for in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_26256(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26256,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_26259,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[12],a[11]=((C_word*)t0)[13],tmp=(C_word)a,a+=12,tmp);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[3])[1],lf[532]);
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26419,a[2]=t2,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[13],tmp=(C_word)a,a+=6,tmp);
if(C_truep(t3)){
t5=t4;
f_26419(t5,t3);}
else{
t5=(C_word)C_eqp(((C_word*)((C_word*)t0)[2])[1],lf[535]);
t6=t4;
f_26419(t6,(C_truep(t5)?t5:(C_word)C_eqp(((C_word*)((C_word*)t0)[2])[1],lf[533])));}}

/* k26417 in k26254 in k26251 in parse-numerical-for in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_26419(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word *a;
if(C_truep(t1)){
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,lf[100]);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[4])[1],lf[533]);
if(C_truep(t3)){
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[236]);
t5=((C_word*)t0)[2];
f_26259(t5,t4);}
else{
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[370]);
t5=((C_word*)t0)[2];
f_26259(t5,t4);}}
else{
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,lf[98]);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[4])[1],lf[534]);
if(C_truep(t3)){
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[440]);
t5=((C_word*)t0)[2];
f_26259(t5,t4);}
else{
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[446]);
t5=((C_word*)t0)[2];
f_26259(t5,t4);}}}

/* k26257 in k26254 in k26251 in parse-numerical-for in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_26259(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26259,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_26262,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_i_not(((C_word*)((C_word*)t0)[2])[1]);
t4=(C_truep(t3)?t3:(C_word)C_i_numberp(((C_word*)((C_word*)t0)[2])[1]));
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26390,a[2]=t2,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t6=((C_word*)((C_word*)t0)[2])[1];
t7=(C_truep(t6)?t6:C_fix(0));
C_trace("ChickenBridge.scm: 381  make-binding");
f_25995(t5,((C_word*)t0)[10],t7);}
else{
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26410,a[2]=t2,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 381  make-binding");
f_25995(t5,((C_word*)t0)[10],C_SCHEME_FALSE);}}

/* k26408 in k26257 in k26254 in k26251 in parse-numerical-for in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_26410(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26410,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_26262(t7,((C_word*)((C_word*)t0)[3])[1]);}

/* k26388 in k26257 in k26254 in k26251 in parse-numerical-for in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_26390(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26390,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_26262(t4,((C_word*)((C_word*)t0)[3])[1]);}

/* k26260 in k26257 in k26254 in k26251 in parse-numerical-for in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_26262(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26262,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_26265,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
t3=((C_word*)((C_word*)t0)[8])[1];
if(C_truep(t3)){
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[8])[1]))){
t4=t2;
f_26265(t4,C_SCHEME_UNDEFINED);}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26355,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 381  gensym");
t5=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,lf[531]);}}
else{
t4=C_set_block_item(((C_word*)t0)[8],0,C_fix(1));
t5=t2;
f_26265(t5,t4);}}

/* k26353 in k26260 in k26257 in k26254 in k26251 in parse-numerical-for in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_26355(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26355,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26372,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 381  make-binding");
f_25995(t2,t1,C_SCHEME_FALSE);}

/* k26370 in k26353 in k26260 in k26257 in k26254 in k26251 in parse-numerical-for in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_26372(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26372,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)t0)[5]);
t8=((C_word*)t0)[2];
f_26265(t8,t7);}

/* k26263 in k26260 in k26257 in k26254 in k26251 in parse-numerical-for in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_26265(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[34],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26265,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,((C_word*)((C_word*)t0)[10])[1],((C_word*)t0)[9],((C_word*)((C_word*)t0)[8])[1]);
t3=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[9],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[8])+1,t3);
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26272,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26304,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],a[4]=t5,a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[2],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 381  gensym");
t7=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t7))(3,t7,t6,lf[530]);}
else{
t6=t5;
f_26272(t6,C_SCHEME_UNDEFINED);}}

/* k26302 in k26263 in k26260 in k26257 in k26254 in k26251 in parse-numerical-for in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_26304(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26304,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26307,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t1,a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[5])[1]))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26322,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 381  make-binding");
f_25995(t3,t1,((C_word*)((C_word*)t0)[5])[1]);}
else{
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26338,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[5],a[5]=t1,a[6]=((C_word*)t0)[3],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 381  make-binding");
f_25995(t3,t1,C_SCHEME_FALSE);}}

/* k26336 in k26302 in k26263 in k26260 in k26257 in k26254 in k26251 in parse-numerical-for in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_26338(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26338,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_26307(t7,((C_word*)((C_word*)t0)[3])[1]);}

/* k26320 in k26302 in k26263 in k26260 in k26257 in k26254 in k26251 in parse-numerical-for in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_26322(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26322,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_26307(t4,((C_word*)((C_word*)t0)[3])[1]);}

/* k26305 in k26302 in k26263 in k26260 in k26257 in k26254 in k26251 in parse-numerical-for in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_26307(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26307,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,((C_word*)((C_word*)t0)[6])[1],((C_word*)t0)[5],((C_word*)t0)[4]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_26272(t4,t3);}

/* k26270 in k26263 in k26260 in k26257 in k26254 in k26251 in parse-numerical-for in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_26272(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26272,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26279,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26283,a[2]=((C_word*)t0)[3],a[3]=t2,a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 381  reverse");
t4=*((C_word*)lf[188]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k26281 in k26270 in k26263 in k26260 in k26257 in k26254 in k26251 in parse-numerical-for in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_26283(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26283,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26287,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 381  reverse");
t3=*((C_word*)lf[188]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k26285 in k26281 in k26270 in k26263 in k26260 in k26257 in k26254 in k26251 in parse-numerical-for in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_26287(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[36],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26287,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[5])[1]);
t3=((C_word*)((C_word*)t0)[4])[1];
t4=(C_truep(t3)?(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]):C_SCHEME_END_OF_LIST);
C_trace("ChickenBridge.scm: 381  make-loop-clause");
f_25761(((C_word*)t0)[3],(C_word)C_a_i_list(&a,10,lf[499],lf[529],lf[500],((C_word*)t0)[2],lf[502],t1,lf[505],t2,lf[503],t4));}

/* k26277 in k26270 in k26263 in k26260 in k26257 in k26254 in k26251 in parse-numerical-for in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_26279(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 381  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-for in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_26161(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_26161,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26165,a[2]=t3,a[3]=t4,a[4]=t1,a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t6=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 381  loop-op?");
f_25983(t5,t6,t4);}

/* k26163 in parse-for in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_26165(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26165,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 381  loop-error");
f_26001(((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[521]));}
else{
t3=(C_word)C_i_cadr(((C_word*)t0)[5]);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26183,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 381  loop-variable?");
f_25989(t4,t3);}}

/* k26181 in k26163 in parse-for in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_26183(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26183,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cddr(((C_word*)t0)[6]);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 381  loop-error");
f_26001(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[6],(C_word)C_a_i_list(&a,1,lf[522]));}
else{
t3=(C_word)C_i_caddr(((C_word*)t0)[6]);
t4=(C_word)C_i_cdddr(((C_word*)t0)[3]);
t5=(C_word)C_i_assoc(t3,t4);
if(C_truep(t5)){
t6=(C_word)C_i_cadr(t5);
t7=t6;
((C_proc5)C_retrieve_proc(t7))(5,t7,((C_word*)t0)[5],((C_word*)t0)[6],((C_word*)t0)[2],((C_word*)t0)[4]);}
else{
t6=(C_word)C_i_caddr(((C_word*)t0)[6]);
C_trace("ChickenBridge.scm: 381  loop-error");
f_26001(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[6],(C_word)C_a_i_list(&a,4,lf[523],t6,lf[524],lf[525]));}}}
else{
t2=(C_word)C_i_cadr(((C_word*)t0)[6]);
C_trace("ChickenBridge.scm: 381  loop-error");
f_26001(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[6],(C_word)C_a_i_list(&a,3,lf[526],t2,lf[527]));}}

/* loop-error in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_26001(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26001,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26057,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t6=t3;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_UNDEFINED;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_set_block_item(t9,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26009,a[2]=t2,a[3]=t9,a[4]=t7,a[5]=((C_word)li411),tmp=(C_word)a,a+=6,tmp));
t11=((C_word*)t9)[1];
f_26009(t11,t5,((C_word*)t7)[1],C_SCHEME_END_OF_LIST);}

/* do4223 in loop-error in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_26009(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26009,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[4])[1]);
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26019,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t4,a[6]=t1,tmp=(C_word)a,a+=7,tmp);
if(C_truep(t5)){
t7=t6;
f_26019(2,t7,t5);}
else{
t7=(C_word)C_eqp(t2,((C_word*)((C_word*)t0)[4])[1]);
if(C_truep(t7)){
t8=t6;
f_26019(2,t8,C_SCHEME_FALSE);}
else{
t8=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 381  loop-op?");
f_25983(t6,t8,((C_word*)t0)[2]);}}}

/* k26017 in do4223 in loop-error in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_26019(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26019,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 381  reverse");
t2=*((C_word*)lf[188]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1]);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_a_i_cons(&a,2,t2,((C_word*)((C_word*)t0)[5])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[5])+1,t3);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=((C_word*)((C_word*)t0)[3])[1];
f_26009(t7,((C_word*)t0)[6],((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1]);}}

/* k26055 in loop-error in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_26057(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26057,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26060,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 381  newline");
t3=*((C_word*)lf[359]+1);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k26058 in k26055 in loop-error in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_26060(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26060,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26063,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 381  display");
t3=*((C_word*)lf[360]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[519]);}

/* k26061 in k26058 in k26055 in loop-error in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_26063(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26063,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26066,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26138,a[2]=t4,a[3]=((C_word)li410),tmp=(C_word)a,a+=4,tmp));
t6=((C_word*)t4)[1];
f_26138(t6,t2,((C_word*)t0)[2]);}

/* do4233 in k26061 in k26058 in k26055 in loop-error in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_26138(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26138,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26148,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 381  display");
t5=*((C_word*)lf[360]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}}

/* k26146 in do4233 in k26061 in k26058 in k26055 in loop-error in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_26148(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_26138(t3,((C_word*)t0)[2],t2);}

/* k26064 in k26061 in k26058 in k26055 in loop-error in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_26066(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26066,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26069,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 381  newline");
t3=*((C_word*)lf[359]+1);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k26067 in k26064 in k26061 in k26058 in k26055 in loop-error in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_26069(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26069,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26072,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 381  display");
t3=*((C_word*)lf[360]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[518]);}

/* k26070 in k26067 in k26064 in k26061 in k26058 in k26055 in loop-error in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_26072(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26072,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26075,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[2]))){
C_trace("ChickenBridge.scm: 381  display");
t3=*((C_word*)lf[360]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[514]);}
else{
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26092,a[2]=((C_word*)t0)[2],a[3]=t4,a[4]=((C_word)li409),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_26092(t6,t2,((C_word*)t0)[2]);}}

/* do4238 in k26070 in k26067 in k26064 in k26061 in k26058 in k26055 in loop-error in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_26092(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26092,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26102,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_eqp(t2,((C_word*)t0)[2]);
if(C_truep(t4)){
C_trace("ChickenBridge.scm: 381  display");
t5=*((C_word*)lf[360]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,lf[517]);}
else{
t5=t3;
f_26102(2,t5,C_SCHEME_UNDEFINED);}}}

/* k26100 in do4238 in k26070 in k26067 in k26064 in k26061 in k26058 in k26055 in loop-error in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_26102(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26102,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26105,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 381  display");
t4=*((C_word*)lf[360]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,t3);}

/* k26103 in k26100 in do4238 in k26070 in k26067 in k26064 in k26061 in k26058 in k26055 in loop-error in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_26105(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26105,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26108,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=(C_word)C_i_nullp(t3);
t5=(C_truep(t4)?lf[515]:lf[516]);
C_trace("ChickenBridge.scm: 381  display");
t6=*((C_word*)lf[360]+1);
((C_proc3)C_retrieve_proc(t6))(3,t6,t2,t5);}

/* k26106 in k26103 in k26100 in do4238 in k26070 in k26067 in k26064 in k26061 in k26058 in k26055 in loop-error in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_26108(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_26092(t3,((C_word*)t0)[2],t2);}

/* k26073 in k26070 in k26067 in k26064 in k26061 in k26058 in k26055 in loop-error in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_26075(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26075,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26078,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 381  newline");
t3=*((C_word*)lf[359]+1);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k26076 in k26073 in k26070 in k26067 in k26064 in k26061 in k26058 in k26055 in loop-error in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_26078(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 381  error");
t2=*((C_word*)lf[4]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],lf[513]);}

/* make-binding in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_25995(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25995,NULL,3,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_list(&a,2,t2,t3));}

/* loop-variable? in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_25989(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25989,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_symbolp(t2));}

/* loop-op? in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_25983(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25983,NULL,3,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_assoc(t2,t3));}

/* gather-clauses in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_25912(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25912,NULL,3,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25914,a[2]=((C_word)li404),tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25953,a[2]=t3,a[3]=t4,a[4]=t2,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 381  gather-clause");
f_25914(t5,t3,C_retrieve2(lf[489],"loop-bindings"));}

/* k25951 in gather-clauses in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_25953(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25953,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25957,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 381  gather-clause");
f_25914(t2,((C_word*)t0)[2],C_retrieve2(lf[490],"loop-collectors"));}

/* k25955 in k25951 in gather-clauses in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_25957(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25957,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25961,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 381  gather-clause");
f_25914(t2,((C_word*)t0)[2],C_retrieve2(lf[491],"loop-initially"));}

/* k25959 in k25955 in k25951 in gather-clauses in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_25961(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25961,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_25965,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 381  gather-clause");
f_25914(t2,((C_word*)t0)[2],C_retrieve2(lf[492],"loop-end-tests"));}

/* k25963 in k25959 in k25955 in k25951 in gather-clauses in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_25965(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25965,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_25969,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 381  gather-clause");
f_25914(t2,((C_word*)t0)[2],C_retrieve2(lf[493],"loop-looping"));}

/* k25967 in k25963 in k25959 in k25955 in k25951 in gather-clauses in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_25969(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25969,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_25973,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 381  gather-clause");
f_25914(t2,((C_word*)t0)[2],C_retrieve2(lf[495],"loop-stepping"));}

/* k25971 in k25967 in k25963 in k25959 in k25955 in k25951 in gather-clauses in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_25973(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25973,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_25977,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 381  gather-clause");
f_25914(t2,((C_word*)t0)[2],C_retrieve2(lf[496],"loop-finally"));}

/* k25975 in k25971 in k25967 in k25963 in k25959 in k25955 in k25951 in gather-clauses in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_25977(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25977,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_25981,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 381  gather-clause");
f_25914(t2,((C_word*)t0)[2],C_retrieve2(lf[497],"loop-returning"));}

/* k25979 in k25975 in k25971 in k25967 in k25963 in k25959 in k25955 in k25951 in gather-clauses in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_25981(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[54],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25981,2,t0,t1);}
C_trace("ChickenBridge.scm: 381  make-loop-clause");
f_25761(((C_word*)t0)[10],(C_word)C_a_i_list(&a,18,lf[499],((C_word*)t0)[9],lf[500],((C_word*)t0)[8],lf[501],((C_word*)t0)[7],lf[502],((C_word*)t0)[6],lf[503],((C_word*)t0)[5],lf[504],((C_word*)t0)[4],lf[505],((C_word*)t0)[3],lf[506],((C_word*)t0)[2],lf[507],t1));}

/* gather-clause in gather-clauses in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_25914(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25914,NULL,3,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25920,a[2]=t3,a[3]=t6,a[4]=t4,a[5]=((C_word)li403),tmp=(C_word)a,a+=6,tmp));
t8=((C_word*)t6)[1];
f_25920(t8,t1,C_SCHEME_END_OF_LIST);}

/* do4206 in gather-clause in gather-clauses in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_25920(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25920,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[4])[1]))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,((C_word*)t3)[1]);}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25931,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25942,a[2]=t3,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 381  accessor");
t7=((C_word*)t0)[2];
((C_proc3)C_retrieve_proc(t7))(3,t7,t5,t6);}}

/* k25940 in do4206 in gather-clause in gather-clauses in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_25942(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 381  append");
t2=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k25929 in do4206 in gather-clause in gather-clauses in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_25931(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=((C_word*)((C_word*)t0)[3])[1];
f_25920(t5,((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1]);}

/* make-loop-clause in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_25761(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25761,NULL,2,t1,t2);}
t3=(C_word)C_a_i_vector(&a,9,C_SCHEME_FALSE,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST);
if(C_truep((C_word)C_i_nullp(t2))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t3);}
else{
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25776,a[2]=t5,a[3]=t3,a[4]=((C_word)li401),tmp=(C_word)a,a+=5,tmp));
t7=((C_word*)t5)[1];
f_25776(t7,t1,t2);}}

/* do4194 in make-loop-clause in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_25776(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25776,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)t0)[3]);}
else{
t3=(C_word)C_i_car(t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25789,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_eqp(t3,lf[499]);
if(C_truep(t5)){
t6=(C_word)C_i_cadr(t2);
C_trace("ChickenBridge.scm: 381  loop-operator-set!");
f_25659(t4,((C_word*)t0)[3],t6);}
else{
t6=(C_word)C_eqp(t3,lf[500]);
if(C_truep(t6)){
t7=(C_word)C_i_cadr(t2);
t8=t4;
f_25789(2,t8,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(1),t7));}
else{
t7=(C_word)C_eqp(t3,lf[501]);
if(C_truep(t7)){
t8=(C_word)C_i_cadr(t2);
t9=t4;
f_25789(2,t9,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(2),t8));}
else{
t8=(C_word)C_eqp(t3,lf[502]);
if(C_truep(t8)){
t9=(C_word)C_i_cadr(t2);
t10=t4;
f_25789(2,t10,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(3),t9));}
else{
t9=(C_word)C_eqp(t3,lf[503]);
if(C_truep(t9)){
t10=(C_word)C_i_cadr(t2);
t11=t4;
f_25789(2,t11,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(4),t10));}
else{
t10=(C_word)C_eqp(t3,lf[504]);
if(C_truep(t10)){
t11=(C_word)C_i_cadr(t2);
C_trace("ChickenBridge.scm: 381  loop-looping-set!");
f_25719(t4,((C_word*)t0)[3],t11);}
else{
t11=(C_word)C_eqp(t3,lf[505]);
if(C_truep(t11)){
t12=(C_word)C_i_cadr(t2);
t13=t4;
f_25789(2,t13,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(6),t12));}
else{
t12=(C_word)C_eqp(t3,lf[506]);
if(C_truep(t12)){
t13=(C_word)C_i_cadr(t2);
t14=t4;
f_25789(2,t14,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(7),t13));}
else{
t13=(C_word)C_eqp(t3,lf[507]);
if(C_truep(t13)){
t14=(C_word)C_i_cadr(t2);
t15=t4;
f_25789(2,t15,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(8),t14));}
else{
t14=t4;
f_25789(2,t14,C_SCHEME_UNDEFINED);}}}}}}}}}}}

/* k25787 in do4194 in make-loop-clause in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_25789(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cddr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_25776(t3,((C_word*)t0)[2],t2);}

/* loop-returning in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_25749(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_25749,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(8)));}

/* loop-finally in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_25737(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_25737,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(7)));}

/* loop-stepping in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_25725(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_25725,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(6)));}

/* loop-looping-set! in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_25719(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25719,NULL,3,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_vector_set(t2,C_fix(5),t3));}

/* loop-looping in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_25713(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_25713,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(5)));}

/* loop-end-tests in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_25701(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_25701,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(4)));}

/* loop-initially in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_25689(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_25689,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(3)));}

/* loop-collectors in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_25677(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_25677,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(2)));}

/* loop-bindings in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_25665(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_25665,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(1)));}

/* loop-operator-set! in k25649 in k25646 in k25643 in k25640 in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_25659(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25659,NULL,3,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_vector_set(t2,C_fix(0),t3));}

/* sal:output in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_25623(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25623,2,t0,t1);}
C_trace("ChickenBridge.scm: 380  print-error");
t2=C_retrieve(lf[455]);
((C_proc3)C_retrieve_proc(t2))(3,t2,t1,lf[487]);}

/* sal:open in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_25617(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25617,2,t0,t1);}
C_trace("ChickenBridge.scm: 380  print-error");
t2=C_retrieve(lf[455]);
((C_proc3)C_retrieve_proc(t2))(3,t2,t1,lf[485]);}

/* sal:load in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_25570(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_25570,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25574,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  file-exists?");
t4=C_retrieve(lf[483]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k25572 in sal:load in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_25574(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25574,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25577,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
if(C_truep(t1)){
t3=(C_word)C_i_string_length(((C_word*)t0)[2]);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25599,a[2]=((C_word*)t0)[2],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_greaterp(t3,C_fix(4)))){
t5=(C_word)C_a_i_minus(&a,2,t3,C_fix(4));
C_trace("substring=?");
t6=C_retrieve(lf[479]);
((C_proc7)(void*)(*((C_word*)t6+1)))(7,t6,t4,((C_word*)t0)[2],lf[480],t5,C_fix(0),C_SCHEME_FALSE);}
else{
t5=t4;
f_25599(2,t5,C_SCHEME_FALSE);}}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25590,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  string-append");
t4=*((C_word*)lf[165]+1);
((C_proc5)C_retrieve_proc(t4))(5,t4,t3,lf[481],((C_word*)t0)[2],lf[482]);}}

/* k25588 in k25572 in sal:load in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_25590(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  print-error");
t2=C_retrieve(lf[455]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k25597 in k25572 in sal:load in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_25599(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 380  load-sal-file");
t2=C_retrieve(lf[477]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
C_trace("ChickenBridge.scm: 380  load");
t2=C_retrieve(lf[478]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}}

/* k25575 in k25572 in sal:load in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_25577(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  values");
C_values(2,0,((C_word*)t0)[2]);}

/* sal:chdir in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_25561(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_25561,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25565,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  chdir");
t4=C_retrieve(lf[44]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k25563 in sal:chdir in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_25565(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  values");
C_values(2,0,((C_word*)t0)[2]);}

/* sal:print in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_25408(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+16)){
C_save_and_reclaim((void*)tr2r,(void*)f_25408r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_25408r(t0,t1,t2);}}

static void C_ccall f_25408r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word *a=C_alloc(16);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25411,a[2]=t4,a[3]=((C_word)li384),tmp=(C_word)a,a+=4,tmp));
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25530,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25535,a[2]=t4,a[3]=t8,a[4]=((C_word)li385),tmp=(C_word)a,a+=5,tmp));
t10=((C_word*)t8)[1];
f_25535(t10,t6,t2);}

/* do4021 in sal:print in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_25535(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25535,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 380  print-message");
t3=C_retrieve(lf[466]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t1,lf[474]);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25548,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 380  printer");
t5=((C_word*)((C_word*)t0)[2])[1];
f_25411(t5,t3,t4,C_fix(0));}}

/* k25546 in do4021 in sal:print in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_25548(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_25535(t3,((C_word*)t0)[2],t2);}

/* k25528 in sal:print in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_25530(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  values");
C_values(2,0,((C_word*)t0)[2]);}

/* printer in sal:print in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_25411(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25411,NULL,4,t0,t1,t2,t3);}
t4=t2;
if(C_truep(t4)){
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 380  print-message");
t5=C_retrieve(lf[466]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t1,lf[467]);}
else{
if(C_truep((C_word)C_i_pairp(t2))){
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25439,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=t3,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 380  print-message");
t6=C_retrieve(lf[466]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,lf[470]);}
else{
t5=(C_word)C_eqp(t2,C_SCHEME_TRUE);
if(C_truep(t5)){
C_trace("ChickenBridge.scm: 380  print-message");
t6=C_retrieve(lf[466]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t1,lf[471]);}
else{
if(C_truep((C_word)C_i_numberp(t2))){
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25511,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  number->string");
C_number_to_string(3,0,t6,t2);}
else{
if(C_truep((C_word)C_i_stringp(t2))){
C_trace("ChickenBridge.scm: 380  print-message");
t6=C_retrieve(lf[466]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t1,t2);}
else{
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25527,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  sprintf");
t7=C_retrieve(lf[31]);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[472],t2);}}}}}}
else{
C_trace("ChickenBridge.scm: 380  print-message");
t5=C_retrieve(lf[466]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t1,lf[473]);}}

/* k25525 in printer in sal:print in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_25527(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  print-message");
t2=C_retrieve(lf[466]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k25509 in printer in sal:print in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_25511(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  print-message");
t2=C_retrieve(lf[466]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k25437 in printer in sal:print in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_25439(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25439,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25442,a[2]=((C_word*)t0)[5],tmp=(C_word)a,a+=3,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25447,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t4,a[5]=((C_word)li383),tmp=(C_word)a,a+=6,tmp));
t6=((C_word*)t4)[1];
f_25447(t6,t2,((C_word*)t0)[2]);}

/* do4013 in k25437 in printer in sal:print in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_25447(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25447,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25457,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
t5=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[3],C_fix(1));
C_trace("ChickenBridge.scm: 380  printer");
t6=((C_word*)((C_word*)t0)[2])[1];
f_25411(t6,t3,t4,t5);}}

/* k25455 in do4013 in k25437 in printer in sal:print in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_25457(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25457,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25460,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t2;
f_25460(2,t4,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 380  print-message");
t4=C_retrieve(lf[466]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,lf[469]);}}

/* k25458 in k25455 in do4013 in k25437 in printer in sal:print in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_25460(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_25447(t3,((C_word*)t0)[2],t2);}

/* k25440 in k25437 in printer in sal:print in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_25442(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  print-message");
t2=C_retrieve(lf[466]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],lf[468]);}

/* sal in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_25231(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
if(c!=6) C_bad_argc_2(c,6,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr6,(void*)f_25231,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25235,a[2]=t4,a[3]=t6,a[4]=t5,a[5]=t1,a[6]=t2,tmp=(C_word)a,a+=7,tmp);
if(C_truep(C_retrieve(lf[453]))){
C_trace("ChickenBridge.scm: 380  printf");
t8=C_retrieve(lf[434]);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[464],t4);}
else{
t8=t7;
f_25235(2,t8,C_SCHEME_UNDEFINED);}}

/* k25233 in sal in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_25235(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25235,2,t0,t1);}
t2=C_mutate(&lf[450],((C_word*)t0)[6]);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25240,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t4=((C_word*)t0)[2];
C_trace("map");
t5=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t3,C_retrieve2(lf[381],"list->token"),t4);}

/* k25238 in k25233 in sal in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_25240(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25240,2,t0,t1);}
t2=C_mutate(&lf[451],t1);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25243,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[2])[1],C_fix(0)))){
t4=C_set_block_item(((C_word*)t0)[2],0,C_fix(36608));
t5=t3;
f_25243(t5,t4);}
else{
t4=t3;
f_25243(t4,C_SCHEME_FALSE);}}

/* k25241 in k25238 in k25233 in sal in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_25243(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25243,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25247,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=((C_word*)((C_word*)t0)[2])[1];
t4=C_retrieve2(lf[451],"*sal-tokens*");
t5=(C_word)C_a_i_list(&a,4,C_SCHEME_FALSE,C_fix(0),C_SCHEME_FALSE,C_SCHEME_FALSE);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23055,a[2]=t4,a[3]=t3,a[4]=((C_word)li381),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  call/cc");
t7=*((C_word*)lf[463]+1);
((C_proc3)C_retrieve_proc(t7))(3,t7,t2,t6);}

/* a23054 in k25241 in k25238 in k25233 in sal in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_23055(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_23055,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23061,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word)li379),tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23068,a[2]=t2,a[3]=((C_word)li380),tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  call-with-values");
C_call_with_values(4,0,t1,t3,t4);}

/* a23067 in a23054 in k25241 in k25238 in k25233 in sal in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_23068(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_23068,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23075,a[2]=((C_word*)t0)[2],a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
if(C_truep(t2)){
t6=(C_word)C_i_nullp(t4);
t7=t5;
f_23075(t7,(C_truep(t6)?t6:C_SCHEME_FALSE));}
else{
t6=t5;
f_23075(t6,C_SCHEME_FALSE);}}

/* k23073 in a23067 in a23054 in k25241 in k25238 in k25233 in sal in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_23075(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23075,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23082,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  add-emit-info");
f_22712(t2,lf[460],lf[461],C_SCHEME_END_OF_LIST);}
else{
C_trace("ChickenBridge.scm: 380  make-parse-error");
f_22532(((C_word*)t0)[4],lf[462],C_retrieve2(lf[428],"*maxtokpos*"));}}

/* k23080 in k23073 in a23067 in a23054 in k25241 in k25238 in k25233 in sal in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_23082(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  emit");
f_22740(((C_word*)t0)[4],((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* a23060 in a23054 in k25241 in k25238 in k25233 in sal in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_23061(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23061,2,t0,t1);}
t2=lf[428]=C_fix(0);;
C_trace("ChickenBridge.scm: 380  parser");
f_23093(t1,((C_word*)t0)[4],((C_word*)t0)[3],C_SCHEME_FALSE,C_fix(0),C_SCHEME_FALSE,((C_word*)t0)[2]);}

/* k25245 in k25241 in k25238 in k25233 in sal in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_25247(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25247,2,t0,t1);}
t2=C_mutate(&lf[452],t1);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25250,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
t4=C_retrieve2(lf[452],"*sal-output*");
if(C_truep((C_word)C_i_structurep(t4,lf[397]))){
t5=C_retrieve2(lf[450],"*sal-string*");
t6=C_retrieve2(lf[452],"*sal-output*");
t7=(C_word)C_i_string_length(t5);
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25284,a[2]=t7,a[3]=t6,a[4]=t5,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 380  parse-error-position");
f_22571(t8,t6);}
else{
if(C_truep(((C_word*)t0)[2])){
C_trace("ChickenBridge.scm: 380  pp");
t5=C_retrieve(lf[458]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,C_retrieve2(lf[452],"*sal-output*"));}
else{
C_trace("ChickenBridge.scm: 380  eval");
t5=C_retrieve(lf[459]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,C_retrieve2(lf[452],"*sal-output*"));}}}

/* k25282 in k25245 in k25241 in k25238 in k25233 in sal in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_25284(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25284,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
t3=t2;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(0);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_25290,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t1,a[7]=t6,a[8]=t4,tmp=(C_word)a,a+=9,tmp);
t8=C_SCHEME_UNDEFINED;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_set_block_item(t9,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25377,a[2]=((C_word*)t0)[4],a[3]=t9,a[4]=t4,a[5]=((C_word)li378),tmp=(C_word)a,a+=6,tmp));
t11=((C_word*)t9)[1];
f_25377(t11,t7,C_SCHEME_FALSE);}

/* do3986 in k25282 in k25245 in k25241 in k25238 in k25233 in sal in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_25377(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25377,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=((C_word*)t3)[1];
t5=(C_truep(t4)?t4:(C_word)C_i_nequalp(((C_word*)((C_word*)t0)[4])[1],C_fix(-1)));
if(C_truep(t5)){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,C_SCHEME_FALSE);}
else{
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25387,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t7=(C_word)C_i_string_ref(((C_word*)t0)[2],((C_word*)((C_word*)t0)[4])[1]);
t8=(C_word)C_eqp(t7,C_make_character(10));
if(C_truep(t8)){
t9=C_set_block_item(t3,0,C_SCHEME_TRUE);
t10=t6;
f_25387(t10,t9);}
else{
t9=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[4])[1],C_fix(1));
t10=C_mutate(((C_word *)((C_word*)t0)[4])+1,t9);
t11=t6;
f_25387(t11,t10);}}}

/* k25385 in do3986 in k25282 in k25245 in k25241 in k25238 in k25233 in sal in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_25387(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
f_25377(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k25288 in k25282 in k25245 in k25241 in k25238 in k25233 in sal in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_25290(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25290,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[8])[1],C_fix(1));
t3=C_mutate(((C_word *)((C_word*)t0)[8])+1,t2);
t4=C_mutate(((C_word *)((C_word*)t0)[7])+1,((C_word*)t0)[6]);
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25298,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[5],tmp=(C_word)a,a+=8,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25347,a[2]=((C_word*)t0)[4],a[3]=t7,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[7],a[6]=((C_word)li377),tmp=(C_word)a,a+=7,tmp));
t9=((C_word*)t7)[1];
f_25347(t9,t5,C_SCHEME_FALSE);}

/* do3993 in k25288 in k25282 in k25245 in k25241 in k25238 in k25233 in sal in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_25347(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25347,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=((C_word*)t3)[1];
t5=(C_truep(t4)?t4:(C_word)C_i_nequalp(((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[4]));
if(C_truep(t5)){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,C_SCHEME_FALSE);}
else{
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25357,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t7=(C_word)C_i_string_ref(((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1]);
t8=(C_word)C_eqp(t7,C_make_character(10));
if(C_truep(t8)){
t9=C_set_block_item(t3,0,C_SCHEME_TRUE);
t10=t6;
f_25357(t10,t9);}
else{
t9=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[5])[1],C_fix(1));
t10=C_mutate(((C_word *)((C_word*)t0)[5])+1,t9);
t11=t6;
f_25357(t11,t10);}}}

/* k25355 in do3993 in k25288 in k25282 in k25245 in k25241 in k25238 in k25233 in sal in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_25357(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
f_25347(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k25296 in k25288 in k25282 in k25245 in k25241 in k25238 in k25233 in sal in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_25298(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25298,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25301,a[2]=((C_word*)t0)[7],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25308,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25312,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t3,a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 380  parse-error-string");
f_22553(t4,((C_word*)t0)[2]);}

/* k25310 in k25296 in k25288 in k25282 in k25245 in k25241 in k25238 in k25233 in sal in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_25312(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25312,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25316,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 380  make-string");
t3=*((C_word*)lf[368]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,C_fix(1),C_make_character(10));}

/* k25314 in k25310 in k25296 in k25288 in k25282 in k25245 in k25241 in k25238 in k25233 in sal in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_25316(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25316,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25320,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 380  substring");
t3=*((C_word*)lf[457]+1);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k25318 in k25314 in k25310 in k25296 in k25288 in k25282 in k25245 in k25241 in k25238 in k25233 in sal in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_25320(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25320,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25324,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 380  make-string");
t3=*((C_word*)lf[368]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,C_fix(1),C_make_character(10));}

/* k25322 in k25318 in k25314 in k25310 in k25296 in k25288 in k25282 in k25245 in k25241 in k25238 in k25233 in sal in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_25324(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25324,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[7],((C_word*)((C_word*)t0)[6])[1]);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25331,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=t2,tmp=(C_word)a,a+=8,tmp);
t4=(C_word)C_a_i_plus(&a,2,t2,C_fix(2));
C_trace("ChickenBridge.scm: 380  make-string");
t5=*((C_word*)lf[368]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,t4,C_make_character(32));}

/* k25329 in k25322 in k25318 in k25314 in k25310 in k25296 in k25288 in k25282 in k25245 in k25241 in k25238 in k25233 in sal in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_25331(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25331,2,t0,t1);}
t2=(C_word)C_i_string_set(t1,((C_word*)t0)[7],C_make_character(94));
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[7],C_fix(1));
t4=(C_word)C_i_string_set(t1,t3,C_make_character(10));
C_trace("ChickenBridge.scm: 380  string-append");
t5=*((C_word*)lf[165]+1);
((C_proc8)C_retrieve_proc(t5))(8,t5,((C_word*)t0)[6],lf[456],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k25306 in k25296 in k25288 in k25282 in k25245 in k25241 in k25238 in k25233 in sal in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_25308(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  print-error");
t2=C_retrieve(lf[455]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k25299 in k25296 in k25288 in k25282 in k25245 in k25241 in k25238 in k25233 in sal in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_25301(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  values");
C_values(2,0,((C_word*)t0)[2]);}

/* k25248 in k25245 in k25241 in k25238 in k25233 in sal in k25222 in k25219 in k25216 in k25213 in k25210 in k24704 in k24701 in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_25250(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  values");
C_values(2,0,((C_word*)t0)[2]);}

/* sal-parse-stepping in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_24182(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word ab[51],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_24182,4,t0,t1,t2,t3);}
t4=C_SCHEME_END_OF_LIST;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_FALSE;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=C_SCHEME_FALSE;
t19=(*a=C_VECTOR_TYPE|1,a[1]=t18,tmp=(C_word)a,a+=2,tmp);
t20=C_SCHEME_FALSE;
t21=(*a=C_VECTOR_TYPE|1,a[1]=t20,tmp=(C_word)a,a+=2,tmp);
t22=C_SCHEME_FALSE;
t23=(*a=C_VECTOR_TYPE|1,a[1]=t22,tmp=(C_word)a,a+=2,tmp);
t24=C_SCHEME_FALSE;
t25=(*a=C_VECTOR_TYPE|1,a[1]=t24,tmp=(C_word)a,a+=2,tmp);
t26=C_SCHEME_FALSE;
t27=(*a=C_VECTOR_TYPE|1,a[1]=t26,tmp=(C_word)a,a+=2,tmp);
t28=C_SCHEME_FALSE;
t29=(*a=C_VECTOR_TYPE|1,a[1]=t28,tmp=(C_word)a,a+=2,tmp);
t30=C_SCHEME_FALSE;
t31=(*a=C_VECTOR_TYPE|1,a[1]=t30,tmp=(C_word)a,a+=2,tmp);
t32=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24189,a[2]=t5,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t33=(*a=C_CLOSURE_TYPE|18,a[1]=(C_word)f_24195,a[2]=t27,a[3]=t25,a[4]=t29,a[5]=t31,a[6]=t23,a[7]=t19,a[8]=t17,a[9]=t21,a[10]=t15,a[11]=t7,a[12]=t3,a[13]=t2,a[14]=t32,a[15]=t5,a[16]=t13,a[17]=t11,a[18]=t9,tmp=(C_word)a,a+=19,tmp);
t34=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 380  token-unit-type=?");
f_22668(t33,t34,C_fix(23296));}

/* k24193 in sal-parse-stepping in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_24195(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24195,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24199,a[2]=((C_word*)t0)[14],a[3]=((C_word*)t0)[15],a[4]=((C_word*)t0)[16],a[5]=((C_word*)t0)[17],a[6]=((C_word*)t0)[18],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[13]);
C_trace("ChickenBridge.scm: 380  emit");
f_22740(t2,t3,C_SCHEME_END_OF_LIST,((C_word*)t0)[12]);}
else{
t2=(*a=C_CLOSURE_TYPE|17,a[1]=(C_word)f_24245,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[16],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[13],a[10]=((C_word*)t0)[12],a[11]=((C_word*)t0)[8],a[12]=((C_word*)t0)[9],a[13]=((C_word*)t0)[14],a[14]=((C_word*)t0)[15],a[15]=((C_word*)t0)[10],a[16]=((C_word*)t0)[18],a[17]=((C_word*)t0)[11],tmp=(C_word)a,a+=18,tmp);
t3=(C_word)C_i_caddr(((C_word*)t0)[13]);
C_trace("ChickenBridge.scm: 380  token-unit-type=?");
f_22668(t2,t3,C_fix(10756));}}

/* k24243 in k24193 in sal-parse-stepping in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_24245(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24245,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_24249,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[10],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[12],a[6]=((C_word*)t0)[13],a[7]=((C_word*)t0)[14],a[8]=((C_word*)t0)[15],a[9]=((C_word*)t0)[16],a[10]=((C_word*)t0)[17],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[9]);
C_trace("ChickenBridge.scm: 380  emit");
f_22740(t2,t3,C_SCHEME_END_OF_LIST,((C_word*)t0)[10]);}
else{
t2=(*a=C_CLOSURE_TYPE|14,a[1]=(C_word)f_24342,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[13],a[11]=((C_word*)t0)[14],a[12]=((C_word*)t0)[8],a[13]=((C_word*)t0)[16],a[14]=((C_word*)t0)[17],tmp=(C_word)a,a+=15,tmp);
t3=(C_word)C_i_caddr(((C_word*)t0)[9]);
C_trace("ChickenBridge.scm: 380  token-unit-type=?");
f_22668(t2,t3,C_fix(22784));}}

/* k24340 in k24243 in k24193 in sal-parse-stepping in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_24342(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24342,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_24346,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[11],a[6]=((C_word*)t0)[12],a[7]=((C_word*)t0)[13],a[8]=((C_word*)t0)[14],tmp=(C_word)a,a+=9,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[9]);
C_trace("ChickenBridge.scm: 380  emit");
f_22740(t2,t3,C_SCHEME_END_OF_LIST,((C_word*)t0)[8]);}
else{
t2=(C_word)C_i_length(((C_word*)t0)[9]);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_24410,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[6],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[7],a[12]=((C_word*)t0)[14],tmp=(C_word)a,a+=13,tmp);
t5=(C_word)C_i_cadr(((C_word*)t0)[9]);
C_trace("ChickenBridge.scm: 380  emit");
f_22740(t4,t5,C_SCHEME_END_OF_LIST,((C_word*)t0)[8]);}}

/* k24408 in k24340 in k24243 in k24193 in sal-parse-stepping in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_24410(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24410,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[12])+1,t1);
t3=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[11])[1],C_fix(1));
t4=(C_word)C_i_list_ref(((C_word*)t0)[10],t3);
t5=C_mutate(((C_word *)((C_word*)t0)[9])+1,t4);
t6=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_24417,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[6],a[10]=((C_word*)t0)[12],a[11]=((C_word*)t0)[7],a[12]=((C_word*)t0)[8],tmp=(C_word)a,a+=13,tmp);
if(C_truep(((C_word*)((C_word*)t0)[9])[1])){
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24667,a[2]=t6,a[3]=((C_word*)t0)[9],tmp=(C_word)a,a+=4,tmp);
t8=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[9])[1]);
C_trace("ChickenBridge.scm: 380  emit");
f_22740(t7,t8,C_SCHEME_END_OF_LIST,((C_word*)t0)[2]);}
else{
t7=C_set_block_item(((C_word*)t0)[9],0,C_fix(1));
t8=t6;
f_24417(t8,t7);}}

/* k24665 in k24408 in k24340 in k24243 in k24193 in sal-parse-stepping in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_24667(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_24417(t3,t2);}

/* k24415 in k24408 in k24340 in k24243 in k24193 in sal-parse-stepping in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_24417(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24417,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_24420,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[12],tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[4])[1],C_fix(6)))){
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24606,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
t4=(C_word)C_i_cadddr(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 380  emit");
f_22740(t3,t4,C_SCHEME_END_OF_LIST,((C_word*)t0)[3]);}
else{
t3=C_set_block_item(((C_word*)t0)[9],0,C_fix(0));
t4=(C_word)C_i_caddr(((C_word*)t0)[2]);
t5=C_mutate(((C_word *)((C_word*)t0)[6])+1,t4);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24655,a[2]=t2,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_cadddr(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 380  emit");
f_22740(t6,t7,C_SCHEME_END_OF_LIST,((C_word*)t0)[3]);}}

/* k24653 in k24415 in k24408 in k24340 in k24243 in k24193 in sal-parse-stepping in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_24655(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_24420(t3,t2);}

/* k24604 in k24415 in k24408 in k24340 in k24243 in k24193 in sal-parse-stepping in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_24606(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24606,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[7])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24612,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 380  fifth");
t4=C_retrieve(lf[47]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k24610 in k24604 in k24415 in k24408 in k24340 in k24243 in k24193 in sal-parse-stepping in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_24612(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24612,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24636,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 380  fifth");
t3=C_retrieve(lf[47]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}
else{
t2=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_FALSE);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_FALSE);
t4=((C_word*)t0)[4];
f_24420(t4,t3);}}

/* k24634 in k24610 in k24604 in k24415 in k24408 in k24340 in k24243 in k24193 in sal-parse-stepping in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_24636(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24636,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24620,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24632,a[2]=((C_word*)t0)[3],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  fifth");
t6=C_retrieve(lf[47]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)t0)[2]);}

/* k24630 in k24634 in k24610 in k24604 in k24415 in k24408 in k24340 in k24243 in k24193 in sal-parse-stepping in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_24632(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cadr(t1);
C_trace("ChickenBridge.scm: 380  emit");
f_22740(((C_word*)t0)[3],t2,C_SCHEME_END_OF_LIST,((C_word*)t0)[2]);}

/* k24618 in k24634 in k24610 in k24604 in k24415 in k24408 in k24340 in k24243 in k24193 in sal-parse-stepping in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_24620(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_24420(t3,t2);}

/* k24418 in k24415 in k24408 in k24340 in k24243 in k24193 in sal-parse-stepping in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_24420(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24420,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_24423,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[5])[1]))){
t3=t2;
f_24423(t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24582,a[2]=t2,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[9],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[449]);}}

/* k24580 in k24418 in k24415 in k24408 in k24340 in k24243 in k24193 in sal-parse-stepping in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_24582(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24582,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24586,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_a_i_list(&a,5,t1,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 380  append");
t5=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,((C_word*)((C_word*)t0)[4])[1],t4);}

/* k24584 in k24580 in k24418 in k24415 in k24408 in k24340 in k24243 in k24193 in sal-parse-stepping in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_24586(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)t0)[3]);
t4=((C_word*)t0)[2];
f_24423(t4,t3);}

/* k24421 in k24418 in k24415 in k24408 in k24340 in k24243 in k24193 in sal-parse-stepping in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_24423(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24423,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_24426,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_24426(t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24559,a[2]=t2,a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[9],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[448]);}}

/* k24557 in k24421 in k24418 in k24415 in k24408 in k24340 in k24243 in k24193 in sal-parse-stepping in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_24559(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24559,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24563,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_a_i_list(&a,5,t1,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 380  append");
t5=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,((C_word*)((C_word*)t0)[4])[1],t4);}

/* k24561 in k24557 in k24421 in k24418 in k24415 in k24408 in k24340 in k24243 in k24193 in sal-parse-stepping in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_24563(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)t0)[3]);
t4=((C_word*)t0)[2];
f_24426(t4,t3);}

/* k24424 in k24421 in k24418 in k24415 in k24408 in k24340 in k24243 in k24193 in sal-parse-stepping in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_24426(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24426,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_24429,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[2])[1]))){
t3=t2;
f_24429(t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24536,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[9],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[447]);}}
else{
t3=t2;
f_24429(t3,C_SCHEME_UNDEFINED);}}

/* k24534 in k24424 in k24421 in k24418 in k24415 in k24408 in k24340 in k24243 in k24193 in sal-parse-stepping in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_24536(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24536,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24540,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_a_i_list(&a,5,t1,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 380  append");
t5=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,((C_word*)((C_word*)t0)[4])[1],t4);}

/* k24538 in k24534 in k24424 in k24421 in k24418 in k24415 in k24408 in k24340 in k24243 in k24193 in sal-parse-stepping in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_24540(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)t0)[3]);
t4=((C_word*)t0)[2];
f_24429(t4,t3);}

/* k24427 in k24424 in k24421 in k24418 in k24415 in k24408 in k24340 in k24243 in k24193 in sal-parse-stepping in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_24429(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[34],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24429,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24432,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
t3=((C_word*)((C_word*)t0)[3])[1];
if(C_truep(t3)){
t4=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24461,a[2]=((C_word*)t0)[3],a[3]=t2,a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 380  token-unit-type=?");
f_22668(t4,((C_word*)((C_word*)t0)[3])[1],C_fix(21248));}
else{
t4=(C_word)C_a_i_list(&a,3,lf[98],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[5])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[7])[1],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[5])+1,t5);
t7=t2;
f_24432(t7,t6);}}

/* k24459 in k24427 in k24424 in k24421 in k24418 in k24415 in k24408 in k24340 in k24243 in k24193 in sal-parse-stepping in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_24461(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[35],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24461,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[440],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[98],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[7])[1],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=((C_word*)t0)[3];
f_24432(t7,t6);}
else{
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24479,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 380  token-unit-type=?");
f_22668(t2,((C_word*)((C_word*)t0)[2])[1],C_fix(23552));}}

/* k24477 in k24459 in k24427 in k24424 in k24421 in k24418 in k24415 in k24408 in k24340 in k24243 in k24193 in sal-parse-stepping in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_24479(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[35],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24479,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[446],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[98],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[7])[1],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=((C_word*)t0)[3];
f_24432(t7,t6);}
else{
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24497,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 380  token-unit-type=?");
f_22668(t2,((C_word*)((C_word*)t0)[2])[1],C_fix(20992));}}

/* k24495 in k24477 in k24459 in k24427 in k24424 in k24421 in k24418 in k24415 in k24408 in k24340 in k24243 in k24193 in sal-parse-stepping in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_24497(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[34],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24497,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[236],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[100],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[7])[1],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=((C_word*)t0)[3];
f_24432(t7,t6);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24515,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 380  token-unit-type=?");
f_22668(t2,((C_word*)((C_word*)t0)[2])[1],C_fix(21760));}}

/* k24513 in k24495 in k24477 in k24459 in k24427 in k24424 in k24421 in k24418 in k24415 in k24408 in k24340 in k24243 in k24193 in sal-parse-stepping in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_24515(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24515,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[370],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[100],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[3])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[6])[1],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24432(t7,t6);}
else{
t2=((C_word*)t0)[2];
f_24432(t2,C_SCHEME_UNDEFINED);}}

/* k24430 in k24427 in k24424 in k24421 in k24418 in k24415 in k24408 in k24340 in k24243 in k24193 in sal-parse-stepping in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_24432(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24432,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24436,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],C_SCHEME_FALSE,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 380  append");
t5=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,((C_word*)((C_word*)t0)[7])[1],t4);}

/* k24434 in k24430 in k24427 in k24424 in k24421 in k24418 in k24415 in k24408 in k24340 in k24243 in k24193 in sal-parse-stepping in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_24436(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_24189(t3,t2);}

/* k24344 in k24340 in k24243 in k24193 in sal-parse-stepping in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_24346(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24346,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24350,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t4=(C_word)C_i_cadddr(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 380  emit");
f_22740(t3,t4,C_SCHEME_END_OF_LIST,((C_word*)t0)[2]);}

/* k24348 in k24344 in k24340 in k24243 in k24193 in sal-parse-stepping in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_24350(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24350,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24354,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 380  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[445]);}

/* k24352 in k24348 in k24344 in k24340 in k24243 in k24193 in sal-parse-stepping in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_24354(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[72],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24354,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(C_word)C_a_i_list(&a,2,lf[15],((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[6])[1],t3);
t5=(C_word)C_a_i_list(&a,2,lf[3],((C_word*)((C_word*)t0)[6])[1]);
t6=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_FALSE,t4,t5);
t7=(C_word)C_a_i_list(&a,2,lf[8],((C_word*)((C_word*)t0)[6])[1]);
t8=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[4])[1],t7);
t9=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[4])[1],C_SCHEME_FALSE,t8,C_SCHEME_FALSE,C_SCHEME_FALSE);
t10=(C_word)C_a_i_list(&a,2,t6,t9);
t11=C_mutate(((C_word *)((C_word*)t0)[3])+1,t10);
t12=((C_word*)t0)[2];
f_24189(t12,t11);}

/* k24247 in k24243 in k24193 in sal-parse-stepping in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_24249(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24249,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[10])+1,t1);
t3=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_24253,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
t4=(C_word)C_i_cadddr(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 380  emit");
f_22740(t3,t4,C_SCHEME_END_OF_LIST,((C_word*)t0)[3]);}

/* k24251 in k24247 in k24243 in k24193 in sal-parse-stepping in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_24253(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24253,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[10])+1,t1);
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_24257,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[10],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 380  fifth");
t4=C_retrieve(lf[47]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k24255 in k24251 in k24247 in k24243 in k24193 in sal-parse-stepping in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_24257(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24257,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24260,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[9])[1])){
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_24276,a[2]=t3,a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[4],a[8]=((C_word*)t0)[9],tmp=(C_word)a,a+=9,tmp);
t5=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[9])[1]);
C_trace("ChickenBridge.scm: 380  emit");
f_22740(t4,t5,C_SCHEME_END_OF_LIST,((C_word*)t0)[2]);}
else{
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t4);
t6=t3;
f_24260(t6,t5);}}

/* k24274 in k24255 in k24251 in k24247 in k24243 in k24193 in sal-parse-stepping in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_24276(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24276,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_24280,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 380  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[444]);}

/* k24278 in k24274 in k24255 in k24251 in k24247 in k24243 in k24193 in sal-parse-stepping in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_24280(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[66],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24280,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[8])[1],C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[6])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[443],t3,t4);
t6=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_a_i_list(&a,4,lf[20],((C_word*)((C_word*)t0)[8])[1],t5,t6);
t8=C_mutate(((C_word *)((C_word*)t0)[4])+1,t7);
t9=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[8])[1],C_SCHEME_TRUE,C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);
t10=(C_word)C_a_i_list(&a,1,t9);
t11=C_mutate(((C_word *)((C_word*)t0)[3])+1,t10);
t12=((C_word*)t0)[2];
f_24260(t12,t11);}

/* k24258 in k24255 in k24251 in k24247 in k24243 in k24193 in sal-parse-stepping in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_24260(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24260,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24264,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE,((C_word*)((C_word*)t0)[2])[1],C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 380  append");
t5=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,((C_word*)((C_word*)t0)[5])[1],t4);}

/* k24262 in k24258 in k24255 in k24251 in k24247 in k24243 in k24193 in sal-parse-stepping in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_24264(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_24189(t3,t2);}

/* k24197 in k24193 in sal-parse-stepping in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_24199(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24199,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24203,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 380  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[442]);}

/* k24201 in k24197 in k24193 in sal-parse-stepping in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_24203(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24203,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24207,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 380  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[441]);}

/* k24205 in k24201 in k24197 in k24193 in sal-parse-stepping in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_24207(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[63],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24207,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,3,lf[98],((C_word*)((C_word*)t0)[4])[1],C_fix(1));
t5=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[4])[1],t4);
t6=(C_word)C_a_i_list(&a,3,lf[440],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[6])[1]);
t7=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[4])[1],C_fix(0),C_SCHEME_FALSE,t5,t6);
t8=(C_word)C_a_i_list(&a,2,t3,t7);
t9=C_mutate(((C_word *)((C_word*)t0)[3])+1,t8);
t10=((C_word*)t0)[2];
f_24189(t10,t9);}

/* k24187 in sal-parse-stepping in k24178 in k24175 in k24172 in k24169 in k24166 in k24163 in k24160 in k24157 in k24154 in k24151 in k24148 in k24145 in k24142 in k24139 in k24136 in k24133 in k24130 in k24127 in k24124 in k24121 in k24118 in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_24189(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  make-parse-unit");
f_22583(((C_word*)t0)[3],C_fix(33024),((C_word*)((C_word*)t0)[2])[1],C_SCHEME_FALSE);}

/* inf->pre in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_24004(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24004,NULL,2,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t3)[1]))){
t12=C_SCHEME_UNDEFINED;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_set_block_item(t13,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_24016,a[2]=t9,a[3]=t13,a[4]=t11,a[5]=t5,a[6]=t7,a[7]=t3,a[8]=((C_word)li374),tmp=(C_word)a,a+=9,tmp));
t15=((C_word*)t13)[1];
f_24016(t15,t1);}
else{
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,((C_word*)t3)[1]);}}

/* do3622 in inf->pre in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_24016(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24016,NULL,2,t0,t1);}
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[6])[1]);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[7])+1,t4);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_24035,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[7],a[6]=t1,a[7]=((C_word*)t0)[3],a[8]=((C_word*)t0)[4],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 380  is-op?");
f_23983(t6,((C_word*)((C_word*)t0)[5])[1]);}}

/* k24033 in do3622 in inf->pre in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_24035(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24035,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24038,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[8])[1]))){
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_24053,a[2]=((C_word*)t0)[8],a[3]=t5,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],a[8]=((C_word)li373),tmp=(C_word)a,a+=9,tmp));
t7=((C_word*)t5)[1];
f_24053(t7,t3,C_SCHEME_FALSE,C_SCHEME_TRUE,C_SCHEME_END_OF_LIST);}
else{
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,((C_word*)((C_word*)t0)[2])[1]);
t5=t3;
f_24038(2,t5,t4);}}

/* do3624 in k24033 in do3622 in inf->pre in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_24053(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24053,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]);
t9=(C_truep(t8)?t8:(C_word)C_i_not(((C_word*)t6)[1]));
if(C_truep(t9)){
t10=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24067,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24081,a[2]=t10,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  reverse");
t12=*((C_word*)lf[188]+1);
((C_proc3)C_retrieve_proc(t12))(3,t12,t11,((C_word*)t7)[1]);}
else{
t10=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_24085,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[2],a[4]=t7,a[5]=t6,a[6]=t1,a[7]=((C_word*)t0)[3],a[8]=t5,tmp=(C_word)a,a+=9,tmp);
t11=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
C_trace("ChickenBridge.scm: 380  is-op?");
f_23983(t10,t11);}}

/* k24083 in do3624 in k24033 in do3622 in inf->pre in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_24085(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24085,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24088,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t4=(C_truep(((C_word*)((C_word*)t0)[8])[1])?(C_word)C_i_less_or_equalp(((C_word*)((C_word*)t0)[8])[1],((C_word*)((C_word*)t0)[3])[1]):C_SCHEME_FALSE);
if(C_truep(t4)){
t5=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_FALSE);
t6=t3;
f_24088(t6,t5);}
else{
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t6);
t8=(C_word)C_a_i_cons(&a,2,t5,((C_word*)((C_word*)t0)[4])[1]);
t9=C_mutate(((C_word *)((C_word*)t0)[4])+1,t8);
t10=t3;
f_24088(t10,t9);}}

/* k24086 in k24083 in do3624 in k24033 in do3622 in inf->pre in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_24088(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[6])[1];
f_24053(t2,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k24079 in do3624 in k24033 in do3622 in inf->pre in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_24081(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  inf->pre");
f_24004(((C_word*)t0)[2],t1);}

/* k24065 in do3624 in k24033 in do3622 in inf->pre in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_24067(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24067,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_truep(((C_word*)((C_word*)t0)[4])[1])?(C_word)C_a_i_list(&a,3,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[5])[1]):(C_word)C_a_i_list(&a,3,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_FALSE));
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,t4);}

/* k24036 in k24033 in do3622 in inf->pre in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_24038(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[3])[1];
f_24016(t2,((C_word*)t0)[2]);}

/* is-op? in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_23983(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23983,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23990,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  token-unit?");
f_22652(t3,t2);}

/* k23988 in is-op? in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_23990(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23990,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23993,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  parse-unit-type");
f_22604(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* k23991 in k23988 in is-op? in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_23993(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23993,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23999,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  SalOpType?");
f_23760(t2,t1);}

/* k23997 in k23991 in k23988 in is-op? in k23979 in k23976 in k23973 in k23970 in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_23999(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23999,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[3];
t3=((C_word*)t0)[2];
t4=t2;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_bitwise_and(&a,2,t3,C_fix(255)));}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* remove-token-type in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_23918(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23918,NULL,3,t1,t2,t3);}
t4=(C_word)C_a_i_list(&a,1,C_SCHEME_TRUE);
t5=t4;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23927,a[2]=t3,a[3]=t6,a[4]=t8,a[5]=t4,a[6]=((C_word)li370),tmp=(C_word)a,a+=7,tmp));
t10=((C_word*)t8)[1];
f_23927(t10,t1,t2);}

/* do3588 in remove-token-type in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_23927(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23927,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_cdr(((C_word*)t0)[5]));}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23940,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23950,a[2]=((C_word*)t0)[3],a[3]=t2,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 380  token-unit-type=?");
f_22668(t4,t5,((C_word*)t0)[2]);}}

/* k23948 in do3588 in remove-token-type in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_23950(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23950,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_23940(t2,C_SCHEME_FALSE);}
else{
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=(C_word)C_a_i_list(&a,1,t2);
t4=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t3);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[2])+1,t5);
t7=((C_word*)t0)[4];
f_23940(t7,t6);}}

/* k23938 in do3588 in remove-token-type in k23914 in k23911 in k23908 in k23905 in k23902 in k23899 in k23896 in k23893 in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_23940(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_23927(t3,((C_word*)t0)[2],t2);}

/* SalType=? in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_23874(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23874,NULL,3,t1,t2,t3);}
t4=(C_word)C_a_i_arithmetic_shift(&a,2,t2,C_fix(-8));
t5=(C_word)C_a_i_arithmetic_shift(&a,2,t3,C_fix(-8));
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_i_nequalp(t4,t5));}

/* SalRuleType? in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_23862(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23862,NULL,2,t1,t2);}
t3=(C_word)C_i_lessp(C_fix(25600),t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_truep(t3)?(C_word)C_i_lessp(t2,C_fix(38400)):C_SCHEME_FALSE));}

/* SalOpType? in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_23760(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23760,NULL,2,t1,t2);}
t3=(C_word)C_i_lessp(C_fix(6656),t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_truep(t3)?(C_word)C_i_lessp(t2,C_fix(11520)):C_SCHEME_FALSE));}

/* SalTokenType? in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_23712(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23712,NULL,2,t1,t2);}
t3=(C_word)C_i_lessp(C_fix(0),t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_truep(t3)?(C_word)C_i_lessp(t2,C_fix(25600)):C_SCHEME_FALSE));}

/* parser in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_23093(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7){
C_word tmp;
C_word t8;
C_word t9;
C_word t10;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23093,NULL,7,t1,t2,t3,t4,t5,t6,t7);}
t8=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_23097,a[2]=t4,a[3]=t7,a[4]=t6,a[5]=t5,a[6]=t8,a[7]=t1,a[8]=t2,tmp=(C_word)a,a+=9,tmp);
if(C_truep(t6)){
C_trace("ChickenBridge.scm: 380  printf");
t10=C_retrieve(lf[434]);
((C_proc6)C_retrieve_proc(t10))(6,t10,t9,lf[435],t5,t2,((C_word*)t8)[1]);}
else{
t10=t9;
f_23097(2,t10,C_SCHEME_UNDEFINED);}}

/* k23095 in parser in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_23097(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23097,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_23100,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 380  null-tokens?");
f_22272(t2,((C_word*)((C_word*)t0)[6])[1]);}

/* k23098 in k23095 in parser in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_23100(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23100,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_23103,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
if(C_truep(t1)){
t3=t2;
f_23103(t3,t1);}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23518,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23522,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23526,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  first-token");
f_22260(t5,((C_word*)((C_word*)t0)[6])[1]);}}

/* k23524 in k23098 in k23095 in parser in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_23526(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  token-position");
f_22219(((C_word*)t0)[2],t1);}

/* k23520 in k23098 in k23095 in parser in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_23522(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  max");
t2=*((C_word*)lf[301]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],C_retrieve2(lf[428],"*maxtokpos*"),t1);}

/* k23516 in k23098 in k23095 in parser in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_23518(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(&lf[428],t1);
t3=((C_word*)t0)[2];
f_23103(t3,t2);}

/* k23101 in k23098 in k23095 in parser in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_23103(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23103,NULL,2,t0,t1);}
t2=((C_word*)t0)[8];
if(C_truep((C_word)C_i_numberp(t2))){
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23112,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 380  pattern-value");
t4=C_retrieve2(lf[274],"pattern-value");
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[8]);}
else{
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_23226,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[2],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 380  pattern-clause?");
f_22414(t3,((C_word*)t0)[8]);}}

/* k23224 in k23101 in k23098 in k23095 in parser in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_23226(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23226,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_23232,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
t3=((C_word*)t0)[2];
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22459,a[2]=t2,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  pattern-clause?");
f_22414(t4,t3);}
else{
C_trace("ChickenBridge.scm: 380  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[6],lf[433],((C_word*)t0)[2]);}}

/* k22457 in k23224 in k23101 in k23098 in k23095 in parser in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_22459(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
f_23232(t3,(C_word)C_eqp(t2,lf[417]));}
else{
t2=((C_word*)t0)[2];
f_23232(t2,C_SCHEME_FALSE);}}

/* k23230 in k23224 in k23101 in k23098 in k23095 in parser in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_23232(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[32],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23232,NULL,2,t0,t1);}
t2=(C_truep(t1)?t1:((C_word*)t0)[8]);
if(C_truep(t2)){
t3=C_SCHEME_FALSE;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=((C_word*)((C_word*)t0)[7])[1];
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_END_OF_LIST;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_23241,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t10,a[7]=((C_word*)t0)[7],a[8]=t6,a[9]=t8,a[10]=t4,a[11]=((C_word*)t0)[6],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 380  pattern-nsubs");
f_22432(t11,((C_word*)t0)[2]);}
else{
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23320,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
t4=((C_word*)t0)[2];
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22475,a[2]=t3,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  pattern-clause?");
f_22414(t5,t4);}}

/* k22473 in k23230 in k23224 in k23101 in k23098 in k23095 in parser in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_22475(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
f_23320(t3,(C_word)C_eqp(t2,lf[418]));}
else{
t2=((C_word*)t0)[2];
f_23320(t2,C_SCHEME_FALSE);}}

/* k23318 in k23230 in k23224 in k23101 in k23098 in k23095 in parser in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_23320(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23320,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_END_OF_LIST;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_23326,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t7,a[8]=t5,a[9]=((C_word*)t0)[7],a[10]=t3,tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 380  pattern-nsubs");
f_22432(t8,((C_word*)t0)[2]);}
else{
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23390,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[2],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 380  pattern-zero-or-more?");
f_22500(t2,((C_word*)t0)[2]);}}

/* k23388 in k23318 in k23230 in k23224 in k23101 in k23098 in k23095 in parser in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_23390(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23390,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23393,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(t1)){
t3=t2;
f_23393(t3,t1);}
else{
t3=((C_word*)t0)[5];
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22491,a[2]=t2,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  pattern-clause?");
f_22414(t4,t3);}}

/* k22489 in k23388 in k23318 in k23230 in k23224 in k23101 in k23098 in k23095 in parser in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_22491(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
f_23393(t3,(C_word)C_eqp(t2,lf[98]));}
else{
t2=((C_word*)t0)[2];
f_23393(t2,C_SCHEME_FALSE);}}

/* k23391 in k23388 in k23318 in k23230 in k23224 in k23101 in k23098 in k23095 in parser in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_23393(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word ab[46],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23393,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_SCHEME_TRUE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)((C_word*)t0)[7])[1];
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_END_OF_LIST;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_fix(0);
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23399,a[2]=((C_word*)t0)[5],a[3]=t11,a[4]=((C_word*)t0)[7],a[5]=t9,a[6]=t3,a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
t13=C_SCHEME_UNDEFINED;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_set_block_item(t14,0,(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_23422,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t5,a[7]=t11,a[8]=t7,a[9]=((C_word*)t0)[7],a[10]=t9,a[11]=t14,a[12]=t3,a[13]=((C_word)li362),tmp=(C_word)a,a+=14,tmp));
t16=((C_word*)t14)[1];
f_23422(t16,t12);}
else{
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23471,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
t3=((C_word*)t0)[5];
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22523,a[2]=t2,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  pattern-clause?");
f_22414(t4,t3);}}

/* k22521 in k23391 in k23388 in k23318 in k23230 in k23224 in k23101 in k23098 in k23095 in parser in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_22523(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
f_23471(t3,(C_word)C_eqp(t2,lf[432]));}
else{
t2=((C_word*)t0)[2];
f_23471(t2,C_SCHEME_FALSE);}}

/* k23469 in k23391 in k23388 in k23318 in k23230 in k23224 in k23101 in k23098 in k23095 in parser in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_23471(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23471,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_END_OF_LIST;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_END_OF_LIST;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23480,a[2]=((C_word*)t0)[6],a[3]=t7,a[4]=t5,a[5]=((C_word*)t0)[7],a[6]=t3,tmp=(C_word)a,a+=7,tmp);
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23491,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],a[7]=((C_word)li363),tmp=(C_word)a,a+=8,tmp);
t10=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23497,a[2]=t7,a[3]=t5,a[4]=t3,a[5]=((C_word)li364),tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 380  call-with-values");
C_call_with_values(4,0,t8,t9,t10);}
else{
t2=((C_word*)t0)[5];
t3=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 380  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,((C_word*)t0)[7],lf[431],t3);}}

/* a23496 in k23469 in k23391 in k23388 in k23318 in k23230 in k23224 in k23101 in k23098 in k23095 in parser in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_23497(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_23497,5,t0,t1,t2,t3,t4);}
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,t7);}

/* a23490 in k23469 in k23391 in k23388 in k23318 in k23230 in k23224 in k23101 in k23098 in k23095 in parser in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_23491(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23491,2,t0,t1);}
C_trace("ChickenBridge.scm: 380  parser");
f_23093(t1,((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_TRUE,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k23478 in k23469 in k23391 in k23388 in k23318 in k23230 in k23224 in k23101 in k23098 in k23095 in parser in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_23480(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("ChickenBridge.scm: 380  values");
C_values(5,0,((C_word*)t0)[5],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]);}
else{
C_trace("ChickenBridge.scm: 380  values");
C_values(5,0,((C_word*)t0)[5],C_SCHEME_TRUE,C_SCHEME_FALSE,((C_word*)((C_word*)t0)[2])[1]);}}

/* do3325 in k23391 in k23388 in k23318 in k23230 in k23224 in k23101 in k23098 in k23095 in parser in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_23422(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23422,NULL,2,t0,t1);}
t2=(C_word)C_i_not(((C_word*)((C_word*)t0)[12])[1]);
t3=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_23432,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[12],a[12]=((C_word*)t0)[11],a[13]=t1,tmp=(C_word)a,a+=14,tmp);
if(C_truep(t2)){
t4=t3;
f_23432(2,t4,t2);}
else{
C_trace("ChickenBridge.scm: 380  null-tokens?");
f_22272(t3,((C_word*)((C_word*)t0)[8])[1]);}}

/* k23430 in do3325 in k23391 in k23388 in k23318 in k23230 in k23224 in k23101 in k23098 in k23095 in parser in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_23432(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23432,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[13];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}
else{
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_23435,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[13],a[9]=((C_word*)t0)[12],tmp=(C_word)a,a+=10,tmp);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23452,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[5],a[7]=((C_word)li360),tmp=(C_word)a,a+=8,tmp);
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23458,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[11],a[5]=((C_word)li361),tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 380  call-with-values");
C_call_with_values(4,0,t2,t3,t4);}}

/* a23457 in k23430 in do3325 in k23391 in k23388 in k23318 in k23230 in k23224 in k23101 in k23098 in k23095 in parser in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_23458(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_23458,5,t0,t1,t2,t3,t4);}
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,t7);}

/* a23451 in k23430 in do3325 in k23391 in k23388 in k23318 in k23230 in k23224 in k23101 in k23098 in k23095 in parser in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_23452(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23452,2,t0,t1);}
C_trace("ChickenBridge.scm: 380  parser");
f_23093(t1,((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_TRUE,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k23433 in k23430 in do3325 in k23391 in k23388 in k23318 in k23230 in k23224 in k23101 in k23098 in k23095 in parser in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_23435(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23435,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23438,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],tmp=(C_word)a,a+=4,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23445,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 380  append");
t4=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[2])[1]);}
else{
t3=t2;
f_23438(t3,C_SCHEME_UNDEFINED);}}

/* k23443 in k23433 in k23430 in do3325 in k23391 in k23388 in k23318 in k23230 in k23224 in k23101 in k23098 in k23095 in parser in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_23445(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23445,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,((C_word*)((C_word*)t0)[4])[1]);
t4=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(1));
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=((C_word*)t0)[2];
f_23438(t6,t5);}

/* k23436 in k23433 in k23430 in do3325 in k23391 in k23388 in k23318 in k23230 in k23224 in k23101 in k23098 in k23095 in parser in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_23438(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[3])[1];
f_23422(t2,((C_word*)t0)[2]);}

/* k23397 in k23391 in k23388 in k23318 in k23230 in k23224 in k23101 in k23098 in k23095 in parser in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_23399(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23399,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23402,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23408,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 380  pattern-zero-or-more?");
f_22500(t3,((C_word*)t0)[2]);}

/* k23406 in k23397 in k23391 in k23388 in k23318 in k23230 in k23224 in k23101 in k23098 in k23095 in parser in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_23408(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=(C_truep(t1)?t1:(C_word)C_i_greaterp(((C_word*)((C_word*)t0)[5])[1],C_fix(0)));
if(C_truep(t2)){
t3=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t4=((C_word*)t0)[3];
f_23402(t4,t3);}
else{
t3=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_FALSE);
t4=C_set_block_item(((C_word*)t0)[2],0,C_SCHEME_END_OF_LIST);
t5=((C_word*)t0)[3];
f_23402(t5,t4);}}

/* k23400 in k23397 in k23391 in k23388 in k23318 in k23230 in k23224 in k23101 in k23098 in k23095 in parser in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_23402(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  values");
C_values(5,0,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k23324 in k23318 in k23230 in k23224 in k23101 in k23098 in k23095 in parser in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_23326(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23326,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23329,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],tmp=(C_word)a,a+=7,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_23344,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[5],a[9]=t4,a[10]=t1,a[11]=((C_word*)t0)[10],a[12]=((C_word)li359),tmp=(C_word)a,a+=13,tmp));
t6=((C_word*)t4)[1];
f_23344(t6,t2,C_fix(0));}

/* do3305 in k23324 in k23318 in k23230 in k23224 in k23101 in k23098 in k23095 in parser in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_23344(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23344,NULL,3,t0,t1,t2);}
t3=((C_word*)((C_word*)t0)[11])[1];
t4=(C_truep(t3)?t3:(C_word)C_i_nequalp(t2,((C_word*)t0)[10]));
if(C_truep(t4)){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_FALSE);}
else{
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23354,a[2]=t1,a[3]=((C_word*)t0)[9],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_23363,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word)li357),tmp=(C_word)a,a+=9,tmp);
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23377,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[11],a[5]=((C_word)li358),tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 380  call-with-values");
C_call_with_values(4,0,t5,t6,t7);}}

/* a23376 in do3305 in k23324 in k23318 in k23230 in k23224 in k23101 in k23098 in k23095 in parser in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_23377(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_23377,5,t0,t1,t2,t3,t4);}
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,t7);}

/* a23362 in do3305 in k23324 in k23318 in k23230 in k23224 in k23101 in k23098 in k23095 in parser in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_23363(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23363,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23371,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=t1,a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 380  pattern-sub");
f_22442(t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k23369 in a23362 in do3305 in k23324 in k23318 in k23230 in k23224 in k23101 in k23098 in k23095 in parser in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_23371(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23371,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
C_trace("ChickenBridge.scm: 380  parser");
f_23093(((C_word*)t0)[5],t1,((C_word*)((C_word*)t0)[4])[1],C_SCHEME_FALSE,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k23352 in do3305 in k23324 in k23318 in k23230 in k23224 in k23101 in k23098 in k23095 in parser in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_23354(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23354,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t3=((C_word*)((C_word*)t0)[3])[1];
f_23344(t3,((C_word*)t0)[2],t2);}

/* k23327 in k23324 in k23318 in k23230 in k23224 in k23101 in k23098 in k23095 in parser in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_23329(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("ChickenBridge.scm: 380  values");
C_values(5,0,((C_word*)t0)[5],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]);}
else{
C_trace("ChickenBridge.scm: 380  values");
C_values(5,0,((C_word*)t0)[5],C_SCHEME_FALSE,C_SCHEME_END_OF_LIST,((C_word*)((C_word*)t0)[2])[1]);}}

/* k23239 in k23230 in k23224 in k23101 in k23098 in k23095 in parser in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_23241(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23241,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23244,a[2]=((C_word*)t0)[7],a[3]=t3,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_23263,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[10],a[10]=t6,a[11]=t3,a[12]=t1,a[13]=((C_word)li356),tmp=(C_word)a,a+=14,tmp));
t8=((C_word*)t6)[1];
f_23263(t8,t4,C_fix(0));}

/* do3283 in k23239 in k23230 in k23224 in k23101 in k23098 in k23095 in parser in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_23263(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23263,NULL,3,t0,t1,t2);}
t3=(C_word)C_i_nequalp(t2,((C_word*)t0)[12]);
t4=(C_truep(t3)?t3:((C_word*)((C_word*)t0)[11])[1]);
if(C_truep(t4)){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_FALSE);}
else{
t5=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_23276,a[2]=((C_word*)t0)[11],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=t1,a[7]=((C_word*)t0)[10],a[8]=t2,tmp=(C_word)a,a+=9,tmp);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_23296,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word)li354),tmp=(C_word)a,a+=9,tmp);
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23310,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word)li355),tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 380  call-with-values");
C_call_with_values(4,0,t5,t6,t7);}}

/* a23309 in do3283 in k23239 in k23230 in k23224 in k23101 in k23098 in k23095 in parser in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_23310(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_23310,5,t0,t1,t2,t3,t4);}
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,t7);}

/* a23295 in do3283 in k23239 in k23230 in k23224 in k23101 in k23098 in k23095 in parser in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_23296(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23296,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23304,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=t1,a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 380  pattern-sub");
f_22442(t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k23302 in a23295 in do3283 in k23239 in k23230 in k23224 in k23101 in k23098 in k23095 in parser in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_23304(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23304,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
C_trace("ChickenBridge.scm: 380  parser");
f_23093(((C_word*)t0)[5],t1,((C_word*)((C_word*)t0)[4])[1],C_SCHEME_FALSE,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k23274 in do3283 in k23239 in k23230 in k23224 in k23101 in k23098 in k23095 in parser in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_23276(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23276,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23279,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],tmp=(C_word)a,a+=5,tmp);
t3=((C_word*)((C_word*)t0)[5])[1];
if(C_truep(t3)){
t4=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=t2;
f_23279(t6,t5);}
else{
t4=C_set_block_item(((C_word*)t0)[2],0,C_SCHEME_TRUE);
t5=t2;
f_23279(t5,t4);}}

/* k23277 in k23274 in do3283 in k23239 in k23230 in k23224 in k23101 in k23098 in k23095 in parser in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_23279(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23279,NULL,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t3=((C_word*)((C_word*)t0)[3])[1];
f_23263(t3,((C_word*)t0)[2],t2);}

/* k23242 in k23239 in k23230 in k23224 in k23101 in k23098 in k23095 in parser in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_23244(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23244,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23247,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
t3=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_FALSE);
t4=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_END_OF_LIST);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[2])[1]);
t6=t2;
f_23247(t6,t5);}
else{
t3=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_TRUE);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23261,a[2]=t2,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  reverse");
t5=*((C_word*)lf[188]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,((C_word*)((C_word*)t0)[5])[1]);}}

/* k23259 in k23242 in k23239 in k23230 in k23224 in k23101 in k23098 in k23095 in parser in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_23261(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_23247(t3,t2);}

/* k23245 in k23242 in k23239 in k23230 in k23224 in k23101 in k23098 in k23095 in parser in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_23247(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  values");
C_values(5,0,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k23110 in k23101 in k23098 in k23095 in parser in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_23112(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23112,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23118,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 380  SalTokenType?");
f_23712(t2,t1);}

/* k23116 in k23110 in k23101 in k23098 in k23095 in parser in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_23118(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23118,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23124,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  null-tokens?");
f_22272(t2,((C_word*)((C_word*)t0)[6])[1]);}
else{
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23176,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[4],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 380  SalRuleType?");
f_23862(t2,((C_word*)t0)[5]);}}

/* k23174 in k23116 in k23110 in k23101 in k23098 in k23095 in parser in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_23176(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23176,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23179,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 380  get-rule");
f_22390(t2,((C_word*)t0)[2],C_SCHEME_END_OF_LIST);}
else{
C_trace("ChickenBridge.scm: 380  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[430],((C_word*)t0)[2]);}}

/* k23177 in k23174 in k23116 in k23110 in k23101 in k23098 in k23095 in parser in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_23179(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23179,2,t0,t1);}
t2=t1;
t3=(C_word)C_i_check_structure(t2,lf[387]);
t4=(C_word)C_i_block_ref(t2,C_fix(3));
t5=t1;
t6=(C_word)C_i_check_structure(t5,lf[387]);
t7=(C_word)C_i_block_ref(t5,C_fix(4));
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23190,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t4,a[6]=((C_word*)t0)[6],a[7]=((C_word)li352),tmp=(C_word)a,a+=8,tmp);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23200,a[2]=((C_word*)t0)[3],a[3]=t7,a[4]=((C_word)li353),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  call-with-values");
C_call_with_values(4,0,((C_word*)t0)[2],t8,t9);}

/* a23199 in k23177 in k23174 in k23116 in k23110 in k23101 in k23098 in k23095 in parser in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_23200(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_23200,5,t0,t1,t2,t3,t4);}
if(C_truep(t2)){
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23211,a[2]=t4,a[3]=t2,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
if(C_truep(((C_word*)t0)[3])){
C_trace("ChickenBridge.scm: 380  func");
t6=((C_word*)t0)[3];
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,t3,((C_word*)t0)[2]);}
else{
t6=t5;
f_23211(2,t6,t3);}}
else{
C_trace("ChickenBridge.scm: 380  values");
C_values(5,0,t1,C_SCHEME_FALSE,C_SCHEME_FALSE,t4);}}

/* k23209 in a23199 in k23177 in k23174 in k23116 in k23110 in k23101 in k23098 in k23095 in parser in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_23211(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  values");
C_values(5,0,((C_word*)t0)[4],((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* a23189 in k23177 in k23174 in k23116 in k23110 in k23101 in k23098 in k23095 in parser in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_23190(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23190,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
C_trace("ChickenBridge.scm: 380  parser");
f_23093(t1,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],C_SCHEME_FALSE,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k23122 in k23116 in k23110 in k23101 in k23098 in k23095 in parser in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_23124(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23124,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 380  values");
C_values(5,0,((C_word*)t0)[4],C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_END_OF_LIST);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23134,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  first-token");
f_22260(t2,((C_word*)((C_word*)t0)[3])[1]);}}

/* k23132 in k23122 in k23116 in k23110 in k23101 in k23098 in k23095 in parser in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_23134(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23134,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23140,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23170,a[2]=((C_word*)t0)[2],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  token-type");
f_22183(t3,t1);}

/* k23168 in k23132 in k23122 in k23116 in k23110 in k23101 in k23098 in k23095 in parser in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_23170(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  SalType=?");
f_23874(((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* k23138 in k23132 in k23122 in k23116 in k23110 in k23101 in k23098 in k23095 in parser in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_23140(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23140,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23147,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23155,a[2]=((C_word*)t0)[2],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  token-type");
f_22183(t3,((C_word*)t0)[2]);}
else{
C_trace("ChickenBridge.scm: 380  values");
C_values(5,0,((C_word*)t0)[3],C_SCHEME_FALSE,C_SCHEME_FALSE,((C_word*)((C_word*)t0)[4])[1]);}}

/* k23153 in k23138 in k23132 in k23122 in k23116 in k23110 in k23101 in k23098 in k23095 in parser in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_23155(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23155,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23159,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  token-string");
f_22201(t2,((C_word*)t0)[2]);}

/* k23157 in k23153 in k23138 in k23132 in k23122 in k23116 in k23110 in k23101 in k23098 in k23095 in parser in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_23159(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23159,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23163,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  token-position");
f_22219(t2,((C_word*)t0)[2]);}

/* k23161 in k23157 in k23153 in k23138 in k23132 in k23122 in k23116 in k23110 in k23101 in k23098 in k23095 in parser in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_23163(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  make-parse-unit");
f_22583(((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k23145 in k23138 in k23132 in k23122 in k23116 in k23110 in k23101 in k23098 in k23095 in parser in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_23147(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=((C_word*)((C_word*)t0)[3])[1];
t3=(C_word)C_i_cdr(t2);
C_trace("ChickenBridge.scm: 380  values");
C_values(5,0,((C_word*)t0)[2],C_SCHEME_TRUE,t1,t3);}

/* simple-unit-emitter in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_22989(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22989,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22991,a[2]=t2,a[3]=((C_word)li350),tmp=(C_word)a,a+=4,tmp));}

/* f_22991 in simple-unit-emitter in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_22991(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_22991,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22995,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=t4,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23039,a[2]=t5,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  parse-unit-parsed");
f_22622(t6,t2);}

/* k23037 */
static void C_ccall f_23039(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  append");
t2=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],t1,C_SCHEME_END_OF_LIST);}

/* k22993 */
static void C_ccall f_22995(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22995,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=((C_word*)t3)[1];
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22998,a[2]=t3,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t4,tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)t0)[2])){
t6=(C_word)C_i_set_car(((C_word*)t3)[1],((C_word*)t0)[2]);
t7=(C_word)C_i_cdr(((C_word*)t3)[1]);
t8=C_set_block_item(t3,0,t7);
t9=t5;
f_22998(t9,t8);}
else{
t6=t5;
f_22998(t6,C_SCHEME_UNDEFINED);}}

/* k22996 in k22993 */
static void C_fcall f_22998(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22998,NULL,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23003,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t3,a[5]=((C_word*)t0)[6],a[6]=((C_word)li349),tmp=(C_word)a,a+=7,tmp));
t5=((C_word*)t3)[1];
f_23003(t5,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* do3240 in k22996 in k22993 */
static void C_fcall f_23003(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23003,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)t0)[5]);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23024,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 380  emit");
f_22740(t3,t4,((C_word*)t0)[3],((C_word*)t0)[2]);}}

/* k23022 in do3240 in k22996 in k22993 */
static void C_ccall f_23024(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=(C_word)C_i_set_car(((C_word*)t0)[4],t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_23003(t4,((C_word*)t0)[2],t3);}

/* simple-unit-parser in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_22981(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22981,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22983,a[2]=t2,a[3]=((C_word)li347),tmp=(C_word)a,a+=4,tmp));}

/* f_22983 in simple-unit-parser in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_22983(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_22983,4,t0,t1,t2,t3);}
C_trace("ChickenBridge.scm: 380  make-parse-unit");
f_22583(t1,((C_word*)t0)[2],t2,C_SCHEME_FALSE);}

/* emit-list in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_22773(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22773,NULL,4,t1,t2,t3,t4);}
if(C_truep((C_word)C_i_nullp(t2))){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_END_OF_LIST);}
else{
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22790,a[2]=t4,a[3]=t3,a[4]=t2,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
t6=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 380  emit");
f_22740(t5,t6,t3,t4);}}

/* k22788 in emit-list in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_22790(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22790,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22794,a[2]=t1,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 380  emit-list");
f_22773(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k22792 in k22788 in emit-list in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_22794(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22794,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* emit in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_22740(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22740,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22747,a[2]=t4,a[3]=t3,a[4]=t2,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 380  token-unit?");
f_22652(t5,t2);}

/* k22745 in emit in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_22747(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22747,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[5];
t3=((C_word*)t0)[4];
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22818,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  parse-unit-type");
f_22604(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22756,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=((C_word*)t0)[4];
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22691,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  parse-unit?");
f_22589(t4,t3);}}

/* k22689 in k22745 in emit in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_22691(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22691,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22698,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  parse-unit-type");
f_22604(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_22756(2,t2,C_SCHEME_FALSE);}}

/* k22696 in k22689 in k22745 in emit in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_22698(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  SalRuleType?");
f_23862(((C_word*)t0)[2],t1);}

/* k22754 in k22745 in emit in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_22756(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22756,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[5];
t3=((C_word*)t0)[4];
t4=((C_word*)t0)[3];
t5=((C_word*)t0)[2];
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22956,a[2]=t5,a[3]=t4,a[4]=t3,a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22979,a[2]=t6,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  parse-unit-type");
f_22604(t7,t3);}
else{
if(C_truep((C_word)C_i_listp(((C_word*)t0)[4]))){
C_trace("ChickenBridge.scm: 380  emit-list");
f_22773(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
C_trace("ChickenBridge.scm: 380  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[5],lf[424],((C_word*)t0)[4]);}}}

/* k22977 in k22754 in k22745 in emit in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_22979(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  get-rule");
f_22390(((C_word*)t0)[2],t1,C_SCHEME_END_OF_LIST);}

/* k22954 in k22754 in k22745 in emit in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_22956(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22956,2,t0,t1);}
t2=(C_word)C_i_check_structure(t1,lf[387]);
t3=(C_word)C_i_block_ref(t1,C_fix(5));
if(C_truep(t3)){
C_trace("ChickenBridge.scm: 380  meth");
t4=t3;
((C_proc5)C_retrieve_proc(t4))(5,t4,((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22972,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  parse-unit-parsed");
f_22622(t4,((C_word*)t0)[4]);}}

/* k22970 in k22954 in k22754 in k22745 in emit in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_22972(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  emit");
f_22740(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k22816 in k22745 in emit in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_22818(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22818,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22821,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  parse-unit-parsed");
f_22622(t2,((C_word*)t0)[2]);}

/* k22819 in k22816 in k22745 in emit in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_22821(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22821,2,t0,t1);}
t2=((C_word*)t0)[4];
t3=(C_word)C_i_lessp(C_fix(2560),t2);
t4=(C_truep(t3)?(C_word)C_i_lessp(t2,C_fix(3584)):C_SCHEME_FALSE);
if(C_truep(t4)){
C_trace("ChickenBridge.scm: 380  string->number");
C_string_to_number(3,0,((C_word*)t0)[3],t1);}
else{
t5=((C_word*)t0)[4];
t6=(C_word)C_i_lessp(C_fix(13056),t5);
t7=(C_truep(t6)?(C_word)C_i_lessp(t5,C_fix(23808)):C_SCHEME_FALSE);
if(C_truep(t7)){
C_trace("ChickenBridge.scm: 380  string->symbol");
t8=*((C_word*)lf[415]+1);
((C_proc3)C_retrieve_proc(t8))(3,t8,((C_word*)t0)[3],t1);}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22845,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=t1,a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 380  SalOpType?");
f_23760(t8,((C_word*)t0)[4]);}}}

/* k22843 in k22819 in k22816 in k22745 in emit in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_22845(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22845,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22851,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  SalType=?");
f_23874(t2,((C_word*)t0)[3],C_fix(7941));}
else{
t2=((C_word*)t0)[3];
t3=(C_word)C_i_lessp(C_fix(4096),t2);
t4=(C_truep(t3)?(C_word)C_i_lessp(t2,C_fix(4864)):C_SCHEME_FALSE);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22896,a[2]=((C_word*)t0)[5],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  SalType=?");
f_23874(t5,((C_word*)t0)[3],C_fix(4352));}
else{
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22902,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 380  SalType=?");
f_23874(t5,((C_word*)t0)[3],C_fix(2304));}}}

/* k22900 in k22843 in k22819 in k22816 in k22745 in emit in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_22902(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22902,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[5];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22908,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 380  SalType=?");
f_23874(t2,((C_word*)t0)[2],C_fix(6144));}}

/* k22906 in k22900 in k22843 in k22819 in k22816 in k22745 in emit in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_22908(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22908,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 380  string->keyword");
t2=C_retrieve(lf[24]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[5],((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22917,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 380  SalType=?");
f_23874(t2,((C_word*)t0)[2],C_fix(3840));}}

/* k22915 in k22906 in k22900 in k22843 in k22819 in k22816 in k22745 in emit in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_22917(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22917,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 380  string->keyword");
t2=C_retrieve(lf[24]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[5],((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22926,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 380  SalType=?");
f_23874(t2,((C_word*)t0)[2],C_fix(6400));}}

/* k22924 in k22915 in k22906 in k22900 in k22843 in k22819 in k22816 in k22745 in emit in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_22926(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22926,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 380  string->symbol");
t2=*((C_word*)lf[415]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[5],((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22935,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 380  SalType=?");
f_23874(t2,((C_word*)t0)[2],C_fix(25344));}}

/* k22933 in k22924 in k22915 in k22906 in k22900 in k22843 in k22819 in k22816 in k22745 in emit in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_22935(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22935,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 380  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[5],lf[420],((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22944,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  SalType=?");
f_23874(t2,((C_word*)t0)[2],C_fix(25088));}}

/* k22942 in k22933 in k22924 in k22915 in k22906 in k22900 in k22843 in k22819 in k22816 in k22745 in emit in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_22944(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 380  string->symbol");
t2=*((C_word*)lf[415]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[4],((C_word*)t0)[3]);}
else{
C_trace("ChickenBridge.scm: 380  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[4],lf[421],((C_word*)t0)[2]);}}

/* k22894 in k22843 in k22819 in k22816 in k22745 in emit in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_22896(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_truep(t1)?C_SCHEME_TRUE:C_SCHEME_FALSE));}

/* k22849 in k22843 in k22819 in k22816 in k22745 in emit in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_22851(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22851,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[130]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22857,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  SalType=?");
f_23874(t2,((C_word*)t0)[2],C_fix(8199));}}

/* k22855 in k22849 in k22843 in k22819 in k22816 in k22745 in emit in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_22857(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22857,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[108]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22863,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  SalType=?");
f_23874(t2,((C_word*)t0)[2],C_fix(10244));}}

/* k22861 in k22855 in k22849 in k22843 in k22819 in k22816 in k22745 in emit in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_22863(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22863,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[416]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22869,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  SalType=?");
f_23874(t2,((C_word*)t0)[2],C_fix(8450));}}

/* k22867 in k22861 in k22855 in k22849 in k22843 in k22819 in k22816 in k22745 in emit in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_22869(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22869,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[417]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22875,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  SalType=?");
f_23874(t2,((C_word*)t0)[2],C_fix(8705));}}

/* k22873 in k22867 in k22861 in k22855 in k22849 in k22843 in k22819 in k22816 in k22745 in emit in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_22875(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22875,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[418]);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22881,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  SalType=?");
f_23874(t2,((C_word*)t0)[2],C_fix(8963));}}

/* k22879 in k22873 in k22867 in k22861 in k22855 in k22849 in k22843 in k22819 in k22816 in k22745 in emit in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_22881(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[419]);}
else{
C_trace("ChickenBridge.scm: 380  string->symbol");
t2=*((C_word*)lf[415]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}}

/* set-emit-info! in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_22722(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22722,NULL,4,t1,t2,t3,t4);}
t5=(C_word)C_i_assoc(t2,t4);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22729,a[2]=t3,a[3]=t5,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
if(C_truep(t5)){
t7=t6;
f_22729(2,t7,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 380  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[413],t2);}}

/* k22727 in set-emit-info! in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_22729(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_set_cdr(((C_word*)t0)[3],((C_word*)t0)[2]));}

/* add-emit-info in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_22712(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22712,NULL,4,t1,t2,t3,t4);}
t5=(C_word)C_a_i_cons(&a,2,t2,t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_a_i_cons(&a,2,t5,t4));}

/* get-emit-info in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_22700(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22700,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_assoc(t2,t3);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_truep(t4)?(C_word)C_i_cdr(t4):C_SCHEME_FALSE));}

/* token-unit-type=? in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_22668(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22668,NULL,3,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22675,a[2]=t2,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  token-unit?");
f_22652(t4,t2);}

/* k22673 in token-unit-type=? in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_22675(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22675,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22682,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  parse-unit-type");
f_22604(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* k22680 in k22673 in token-unit-type=? in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_22682(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  SalType=?");
f_23874(((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* token-unit? in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_22652(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22652,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22659,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  parse-unit?");
f_22589(t3,t2);}

/* k22657 in token-unit? in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_22659(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22659,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22666,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  parse-unit-type");
f_22604(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* k22664 in k22657 in token-unit? in k22648 in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_22666(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  SalTokenType?");
f_23712(((C_word*)t0)[2],t1);}

/* parse-unit-position in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_22640(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22640,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[401]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(3)));}

/* parse-unit-parsed in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_22622(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22622,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[401]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* parse-unit-type in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_22604(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22604,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[401]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* parse-unit? in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_22589(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22589,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_structurep(t2,lf[401]));}

/* make-parse-unit in k22579 in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_22583(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22583,NULL,4,t1,t2,t3,t4);}
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_a_i_record(&a,4,lf[401],t2,t3,t4));}

/* parse-error-position in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_22571(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22571,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[397]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* parse-error-string in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_22553(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22553,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[397]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* make-parse-error in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_22532(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22532,NULL,3,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_record(&a,3,lf[397],t2,t3));}

/* pattern-zero-or-more? in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_22500(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22500,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22507,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  pattern-clause?");
f_22414(t3,t2);}

/* k22505 in pattern-zero-or-more? in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_22507(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_eqp(t2,lf[102]));}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* pattern-sub in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_22442(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22442,NULL,3,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22450,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  pattern-subs");
f_22426(t4,t2);}

/* k22448 in pattern-sub in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_22450(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_list_ref(t1,((C_word*)t0)[2]));}

/* pattern-nsubs in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_22432(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22432,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22440,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  pattern-subs");
f_22426(t3,t2);}

/* k22438 in pattern-nsubs in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_22440(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_length(t1));}

/* pattern-subs in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_22426(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22426,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_cdr(t2));}

/* pattern-clause? in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_22414(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22414,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_pairp(t2));}

/* pattern-value in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_22411(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_22411,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}

/* get-rule in k22386 in k22383 in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_22390(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22390,NULL,3,t1,t2,t3);}
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 380  hash-table-ref");
t4=*((C_word*)lf[41]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t1,C_retrieve2(lf[385],"*rules*"),t2);}
else{
C_trace("ChickenBridge.scm: 380  hash-table-ref/default");
t4=C_retrieve(lf[390]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t1,C_retrieve2(lf[385],"*rules*"),t3);}}

/* rule-name in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_22303(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22303,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[387]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* make-rule in k22278 in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_22282(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22282,NULL,6,t1,t2,t3,t4,t5,t6);}
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_a_i_record(&a,6,lf[387],t2,t3,t4,t5,t6));}

/* null-tokens? in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_22272(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22272,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_nullp(t2));}

/* first-token in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_22260(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22260,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_car(t2));}

/* list->token in k22227 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_22231(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_22231,3,t0,t1,t2);}
t3=(C_word)C_i_car(t2);
t4=(C_word)C_eqp(t3,lf[382]);
if(C_truep(t4)){
t5=(C_word)C_i_cdr(t2);
C_apply(4,0,t1,C_retrieve2(lf[376],"make-token"),t5);}
else{
C_apply(4,0,t1,C_retrieve2(lf[376],"make-token"),t2);}}

/* token-position in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_22219(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22219,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[377]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(3)));}

/* token-string in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_22201(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22201,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[377]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* token-type in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_22183(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22183,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[377]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* make-token in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_22162(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_22162,5,t0,t1,t2,t3,t4);}
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_a_i_record(&a,4,lf[377],t2,t3,t4));}

/* markov-analyze in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_21140(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+61)){
C_save_and_reclaim((void*)tr3r,(void*)f_21140r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_21140r(t0,t1,t2,t3);}}

static void C_ccall f_21140r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word *a=C_alloc(61);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_length(t2);
t9=C_SCHEME_END_OF_LIST;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_END_OF_LIST;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_fix(8);
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_fix(1);
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_fix(1);
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=C_SCHEME_FALSE;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_SCHEME_FALSE;
t22=(*a=C_VECTOR_TYPE|1,a[1]=t21,tmp=(C_word)a,a+=2,tmp);
t23=t3;
t24=(*a=C_VECTOR_TYPE|1,a[1]=t23,tmp=(C_word)a,a+=2,tmp);
t25=C_SCHEME_FALSE;
t26=(*a=C_VECTOR_TYPE|1,a[1]=t25,tmp=(C_word)a,a+=2,tmp);
t27=(*a=C_CLOSURE_TYPE|16,a[1]=(C_word)f_21150,a[2]=t22,a[3]=t26,a[4]=t20,a[5]=t3,a[6]=t24,a[7]=t2,a[8]=t8,a[9]=t14,a[10]=t10,a[11]=t1,a[12]=t12,a[13]=t18,a[14]=t7,a[15]=t16,a[16]=t5,tmp=(C_word)a,a+=17,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t24)[1]))){
t28=t27;
f_21150(t28,C_SCHEME_UNDEFINED);}
else{
t28=(C_word)C_i_car(((C_word*)t24)[1]);
t29=(C_word)C_eqp(t28,lf[215]);
if(C_truep(t29)){
t30=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22075,a[2]=t3,a[3]=t27,a[4]=t24,a[5]=t26,a[6]=t20,a[7]=t16,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t20)[1])){
C_trace("error");
t31=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t31))(4,t31,t30,lf[19],lf[215]);}
else{
t31=t30;
f_22075(2,t31,C_SCHEME_UNDEFINED);}}
else{
t30=(C_word)C_eqp(t28,lf[375]);
if(C_truep(t30)){
t31=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22110,a[2]=t3,a[3]=t27,a[4]=t24,a[5]=t26,a[6]=t22,a[7]=t18,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t22)[1])){
C_trace("error");
t32=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t32))(4,t32,t31,lf[19],lf[375]);}
else{
t32=t31;
f_22110(2,t32,C_SCHEME_UNDEFINED);}}
else{
t31=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22139,a[2]=t27,a[3]=t20,a[4]=t16,a[5]=t24,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t26)[1])){
C_trace("error");
t32=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t32))(4,t32,t31,lf[10],t3);}
else{
t32=t31;
f_22139(2,t32,C_SCHEME_UNDEFINED);}}}}}

/* k22137 in markov-analyze in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_22139(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22139,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22146,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22154,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k22152 in k22137 in markov-analyze in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_22154(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_22146(2,t2,C_SCHEME_UNDEFINED);}}

/* k22144 in k22137 in markov-analyze in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_22146(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_21150(t5,t4);}

/* k22108 in markov-analyze in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_22110(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22110,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22114,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_22114(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k22112 in k22108 in markov-analyze in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_22114(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_21150(t7,t6);}

/* k22073 in markov-analyze in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_22075(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22075,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22079,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_22079(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k22077 in k22073 in markov-analyze in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_22079(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_21150(t7,t6);}

/* k21148 in markov-analyze in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_21150(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[36],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21150,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_21153,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[12],a[10]=((C_word*)t0)[13],a[11]=((C_word*)t0)[14],a[12]=((C_word*)t0)[15],a[13]=((C_word*)t0)[16],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_21153(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[215]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21975,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[15],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[215]);}
else{
t6=t5;
f_21975(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[375]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22010,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[13],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[375]);}
else{
t7=t6;
f_22010(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22039,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[13],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_22039(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k22037 in k21148 in markov-analyze in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_22039(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22039,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22046,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22054,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k22052 in k22037 in k21148 in markov-analyze in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_22054(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_22046(2,t2,C_SCHEME_UNDEFINED);}}

/* k22044 in k22037 in k21148 in markov-analyze in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_22046(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_21153(t5,t4);}

/* k22008 in k21148 in markov-analyze in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_22010(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22010,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22014,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_22014(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k22012 in k22008 in k21148 in markov-analyze in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_22014(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_21153(t7,t6);}

/* k21973 in k21148 in markov-analyze in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_21975(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21975,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21979,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_21979(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k21977 in k21973 in k21148 in markov-analyze in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_21979(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_21153(t7,t6);}

/* k21151 in k21148 in markov-analyze in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_21153(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21153,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_21156,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[12],a[11]=((C_word*)t0)[13],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_21156(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k21154 in k21151 in k21148 in markov-analyze in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_21156(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21156,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[11])+1,((C_word*)((C_word*)t0)[10])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[9])+1,((C_word*)((C_word*)t0)[8])[1]);
t4=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_21161,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[11],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[7],tmp=(C_word)a,a+=10,tmp);
t5=((C_word*)((C_word*)t0)[9])[1];
if(C_truep((C_truep((C_word)C_i_equalp(t5,C_fix(1)))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,C_fix(2)))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,C_fix(3)))?C_SCHEME_TRUE:C_SCHEME_FALSE))))){
t6=t4;
f_21161(2,t6,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 379  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,lf[374],((C_word*)((C_word*)t0)[9])[1]);}}

/* k21159 in k21154 in k21151 in k21148 in markov-analyze in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_21161(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[29],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21161,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21163,a[2]=((C_word*)t0)[9],a[3]=((C_word)li294),tmp=(C_word)a,a+=4,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21245,a[2]=t4,a[3]=((C_word)li297),tmp=(C_word)a,a+=4,tmp));
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21355,a[2]=t4,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_21868,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=t8,a[7]=((C_word*)t0)[4],a[8]=((C_word)li314),tmp=(C_word)a,a+=9,tmp));
t10=((C_word*)t8)[1];
f_21868(t10,t6,C_fix(0));}

/* do2889 in k21159 in k21154 in k21151 in k21148 in markov-analyze in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_21868(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21868,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nequalp(t2,((C_word*)t0)[7]))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21878,a[2]=t1,a[3]=((C_word*)t0)[6],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_21891,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=t5,a[5]=((C_word*)t0)[2],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[4],a[8]=((C_word*)t0)[5],a[9]=((C_word)li313),tmp=(C_word)a,a+=10,tmp));
t7=((C_word*)t5)[1];
f_21891(t7,t3,C_SCHEME_END_OF_LIST,C_fix(0),C_SCHEME_FALSE);}}

/* do2892 in do2889 in k21159 in k21154 in k21151 in k21148 in markov-analyze in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_21891(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21891,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_greaterp(t3,((C_word*)((C_word*)t0)[8])[1]))){
t7=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21901,a[2]=t1,a[3]=((C_word*)t0)[7],a[4]=t6,tmp=(C_word)a,a+=5,tmp);
t8=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21919,a[2]=t6,a[3]=t7,a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  reverse");
t9=*((C_word*)lf[188]+1);
((C_proc3)C_retrieve_proc(t9))(3,t9,t8,((C_word*)t5)[1]);}
else{
t7=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_21944,a[2]=((C_word*)t0)[8],a[3]=t5,a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=t3,a[7]=t6,a[8]=((C_word*)t0)[5],tmp=(C_word)a,a+=9,tmp);
t8=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[3],t3);
C_trace("ChickenBridge.scm: 379  modulo");
t9=*((C_word*)lf[130]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t7,t8,((C_word*)t0)[2]);}}

/* k21942 in do2892 in do2889 in k21159 in k21154 in k21151 in k21148 in markov-analyze in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_21944(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21944,2,t0,t1);}
t2=(C_word)C_i_list_ref(((C_word*)t0)[8],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21926,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_lessp(((C_word*)t0)[6],((C_word*)((C_word*)t0)[2])[1]))){
t5=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=t4;
f_21926(t7,t6);}
else{
t5=t4;
f_21926(t5,C_SCHEME_UNDEFINED);}}

/* k21924 in k21942 in do2892 in do2889 in k21159 in k21154 in k21151 in k21148 in markov-analyze in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_21926(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21926,NULL,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
t3=((C_word*)((C_word*)t0)[5])[1];
f_21891(t3,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k21917 in do2892 in do2889 in k21159 in k21154 in k21151 in k21148 in markov-analyze in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_21919(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  add-outcome");
t2=((C_word*)t0)[4];
f_21163(t2,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* k21899 in do2892 in do2889 in k21159 in k21154 in k21151 in k21148 in markov-analyze in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_21901(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21901,2,t0,t1);}
if(C_truep((C_word)C_i_member(((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]))){
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t3);}}

/* k21876 in do2889 in k21159 in k21154 in k21151 in k21148 in markov-analyze in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_21878(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21878,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t3=((C_word*)((C_word*)t0)[3])[1];
f_21868(t3,((C_word*)t0)[2],t2);}

/* k21353 in k21159 in k21154 in k21151 in k21148 in markov-analyze in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_21355(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21355,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21358,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_numberp(t3))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21824,a[2]=t2,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  sort");
t5=C_retrieve(lf[190]);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,((C_word*)((C_word*)t0)[4])[1],*((C_word*)lf[370]+1));}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21830,a[2]=t2,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]))){
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t6=t4;
f_21830(t6,(C_word)C_i_symbolp(t5));}
else{
t5=t4;
f_21830(t5,C_SCHEME_FALSE);}}}

/* k21828 in k21353 in k21159 in k21154 in k21151 in k21148 in markov-analyze in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_21830(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21830,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21834,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21836,a[2]=((C_word)li312),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  sort");
t4=C_retrieve(lf[190]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,((C_word*)((C_word*)t0)[3])[1],t3);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21852,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  reverse");
t3=*((C_word*)lf[188]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[3])[1]);}}

/* k21850 in k21828 in k21353 in k21159 in k21154 in k21151 in k21148 in markov-analyze in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_21852(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_21358(t3,t2);}

/* a21835 in k21828 in k21353 in k21159 in k21154 in k21151 in k21148 in markov-analyze in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_21836(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_21836,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21844,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  format");
t5=C_retrieve(lf[355]);
((C_proc5)C_retrieve_proc(t5))(5,t5,t4,C_SCHEME_FALSE,lf[373],t2);}

/* k21842 in a21835 in k21828 in k21353 in k21159 in k21154 in k21151 in k21148 in markov-analyze in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_21844(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21844,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21848,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  format");
t3=C_retrieve(lf[355]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_SCHEME_FALSE,lf[372],((C_word*)t0)[2]);}

/* k21846 in k21842 in a21835 in k21828 in k21353 in k21159 in k21154 in k21151 in k21148 in markov-analyze in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_21848(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  string-ci<?");
t2=*((C_word*)lf[371]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k21832 in k21828 in k21353 in k21159 in k21154 in k21151 in k21148 in markov-analyze in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_21834(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_21358(t3,t2);}

/* k21822 in k21353 in k21159 in k21154 in k21151 in k21148 in markov-analyze in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_21824(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_21358(t3,t2);}

/* k21356 in k21353 in k21159 in k21154 in k21151 in k21148 in markov-analyze in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_21358(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21358,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21361,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21701,a[2]=t4,a[3]=((C_word*)t0)[3],a[4]=((C_word)li311),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_21701(t6,t2,((C_word*)((C_word*)t0)[7])[1],C_fix(0));}

/* do2905 in k21356 in k21353 in k21159 in k21154 in k21151 in k21148 in markov-analyze in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_21701(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21701,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21712,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  max");
t6=*((C_word*)lf[301]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,((C_word*)t4)[1],((C_word*)((C_word*)t0)[3])[1]);}
else{
t5=(C_word)C_i_car(t2);
t6=(C_word)C_i_cadr(t5);
t7=(C_word)C_i_cddr(t5);
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21725,a[2]=t7,a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t2,a[6]=t4,tmp=(C_word)a,a+=7,tmp);
t9=(C_word)C_i_string_length(t6);
C_trace("ChickenBridge.scm: 379  max");
t10=*((C_word*)lf[301]+1);
((C_proc4)C_retrieve_proc(t10))(4,t10,t8,((C_word*)t4)[1],t9);}}

/* k21723 in do2905 in k21356 in k21353 in k21159 in k21154 in k21151 in k21148 in markov-analyze in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_21725(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21725,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21728,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21787,a[2]=t5,a[3]=((C_word)li310),tmp=(C_word)a,a+=4,tmp));
t7=((C_word*)t5)[1];
f_21787(t7,t3,((C_word*)t0)[2],C_fix(0));}

/* do2913 in k21723 in do2905 in k21356 in k21353 in k21159 in k21154 in k21151 in k21148 in markov-analyze in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_21787(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
loop:
a=C_alloc(4);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_21787,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nullp(t2))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t3);}
else{
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t4);
t6=(C_word)C_a_i_plus(&a,2,t3,t5);
t7=t3=t6;
t8=(C_word)C_i_cdr(t2);
t10=t1;
t11=t8;
t12=t3;
t1=t10;
t2=t11;
t3=t12;
goto loop;}}

/* k21726 in k21723 in do2905 in k21356 in k21353 in k21159 in k21154 in k21151 in k21148 in markov-analyze in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_21728(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21728,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_a_i_times(&a,2,((C_word*)t3)[1],lf[369]);
t5=C_set_block_item(t3,0,t4);
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21735,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21744,a[2]=t3,a[3]=t8,a[4]=((C_word)li309),tmp=(C_word)a,a+=5,tmp));
t10=((C_word*)t8)[1];
f_21744(t10,t6,((C_word*)t0)[2]);}

/* do2919 in k21726 in k21723 in do2905 in k21356 in k21353 in k21159 in k21154 in k21151 in k21148 in markov-analyze in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_21744(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21744,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(C_word)C_i_car(t2);
t4=(C_word)C_i_cdr(t3);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21769,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=t4,tmp=(C_word)a,a+=6,tmp);
t6=(C_word)C_i_car(t2);
t7=(C_word)C_i_cadr(t6);
t8=(C_word)C_a_i_divide(&a,2,t7,((C_word*)((C_word*)t0)[2])[1]);
C_trace("ChickenBridge.scm: 379  decimals");
t9=C_retrieve(lf[106]);
((C_proc4)C_retrieve_proc(t9))(4,t9,t5,t8,C_fix(3));}}

/* k21767 in do2919 in k21726 in k21723 in do2905 in k21356 in k21353 in k21159 in k21154 in k21151 in k21148 in markov-analyze in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_21769(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=(C_word)C_i_set_car(((C_word*)t0)[5],t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_21744(t4,((C_word*)t0)[2],t3);}

/* k21733 in k21726 in k21723 in do2905 in k21356 in k21353 in k21159 in k21154 in k21151 in k21148 in markov-analyze in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_21735(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
t3=((C_word*)((C_word*)t0)[4])[1];
f_21701(t3,((C_word*)t0)[3],t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k21710 in do2905 in k21356 in k21353 in k21159 in k21154 in k21151 in k21148 in markov-analyze in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_21712(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}

/* k21359 in k21356 in k21353 in k21159 in k21154 in k21151 in k21148 in markov-analyze in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_21361(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21361,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21365,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21687,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[2],a[4]=((C_word)li308),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  sort");
t4=C_retrieve(lf[190]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,((C_word*)((C_word*)t0)[7])[1],t3);}

/* a21686 in k21359 in k21356 in k21353 in k21159 in k21154 in k21151 in k21148 in markov-analyze in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_21687(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_21687,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_car(t3);
C_trace("ChickenBridge.scm: 379  before?");
t6=((C_word*)((C_word*)t0)[3])[1];
f_21245(t6,t1,t4,t5,((C_word*)((C_word*)t0)[2])[1]);}

/* k21363 in k21359 in k21356 in k21353 in k21159 in k21154 in k21151 in k21148 in markov-analyze in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_21365(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21365,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21368,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_eqp(((C_word*)((C_word*)t0)[5])[1],C_fix(1));
if(C_truep(t4)){
t5=lf[358];
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21409,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t5,a[6]=t3,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  make-string");
t7=*((C_word*)lf[368]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,C_fix(5),C_make_character(45));}
else{
t5=t3;
f_21368(2,t5,C_SCHEME_UNDEFINED);}}

/* k21407 in k21363 in k21359 in k21356 in k21353 in k21159 in k21154 in k21151 in k21148 in markov-analyze in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_21409(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21409,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21412,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 379  newline");
t3=*((C_word*)lf[359]+1);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k21410 in k21407 in k21363 in k21359 in k21356 in k21353 in k21159 in k21154 in k21151 in k21148 in markov-analyze in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_21412(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21412,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21415,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21668,a[2]=t4,a[3]=((C_word*)t0)[3],a[4]=((C_word)li307),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_21668(t6,t2,C_fix(0));}

/* do2932 in k21410 in k21407 in k21363 in k21359 in k21356 in k21353 in k21159 in k21154 in k21151 in k21148 in markov-analyze in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_21668(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21668,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nequalp(t2,((C_word*)((C_word*)t0)[3])[1]))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21678,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("write-char/port");
t4=C_retrieve(lf[361]);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,t3,C_make_character(42),*((C_word*)lf[362]+1));}}

/* k21676 in do2932 in k21410 in k21407 in k21363 in k21359 in k21356 in k21353 in k21159 in k21154 in k21151 in k21148 in markov-analyze in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_21678(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21678,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t3=((C_word*)((C_word*)t0)[3])[1];
f_21668(t3,((C_word*)t0)[2],t2);}

/* k21413 in k21410 in k21407 in k21363 in k21359 in k21356 in k21353 in k21159 in k21154 in k21151 in k21148 in markov-analyze in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_21415(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21415,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21418,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21606,a[2]=((C_word*)t0)[6],a[3]=t4,a[4]=((C_word)li306),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_21606(t6,t2,((C_word*)((C_word*)t0)[4])[1]);}

/* do2937 in k21413 in k21410 in k21407 in k21363 in k21359 in k21356 in k21353 in k21159 in k21154 in k21151 in k21148 in markov-analyze in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_21606(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21606,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21616,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  display");
t4=*((C_word*)lf[360]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}}

/* k21614 in do2937 in k21413 in k21410 in k21407 in k21363 in k21359 in k21356 in k21353 in k21159 in k21154 in k21151 in k21148 in markov-analyze in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_21616(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21616,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21619,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 379  format");
t4=C_retrieve(lf[355]);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,C_SCHEME_FALSE,lf[367],t3);}

/* k21617 in k21614 in do2937 in k21413 in k21410 in k21407 in k21363 in k21359 in k21356 in k21353 in k21159 in k21154 in k21151 in k21148 in markov-analyze in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_21619(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21619,2,t0,t1);}
t2=(C_word)C_i_string_length(t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21625,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21639,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_a_i_minus(&a,2,C_fix(5),t2);
C_trace("ChickenBridge.scm: 379  max");
t6=*((C_word*)lf[301]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,t5,C_fix(0));}

/* k21637 in k21617 in k21614 in do2937 in k21413 in k21410 in k21407 in k21363 in k21359 in k21356 in k21353 in k21159 in k21154 in k21151 in k21148 in markov-analyze in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_21639(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21639,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21641,a[2]=t3,a[3]=((C_word)li305),tmp=(C_word)a,a+=4,tmp));
t5=((C_word*)t3)[1];
f_21641(t5,((C_word*)t0)[2],C_fix(0),t1);}

/* do2942 in k21637 in k21617 in k21614 in do2937 in k21413 in k21410 in k21407 in k21363 in k21359 in k21356 in k21353 in k21159 in k21154 in k21151 in k21148 in markov-analyze in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_21641(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21641,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nequalp(t2,t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_FALSE);}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21651,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
C_trace("write-char/port");
t5=C_retrieve(lf[361]);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t4,C_make_character(32),*((C_word*)lf[362]+1));}}

/* k21649 in do2942 in k21637 in k21617 in k21614 in do2937 in k21413 in k21410 in k21407 in k21363 in k21359 in k21356 in k21353 in k21159 in k21154 in k21151 in k21148 in markov-analyze in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_21651(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21651,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],C_fix(1));
t3=((C_word*)((C_word*)t0)[4])[1];
f_21641(t3,((C_word*)t0)[3],t2,((C_word*)t0)[2]);}

/* k21623 in k21617 in k21614 in do2937 in k21413 in k21410 in k21407 in k21363 in k21359 in k21356 in k21353 in k21159 in k21154 in k21151 in k21148 in markov-analyze in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_21625(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21625,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21628,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  display");
t3=*((C_word*)lf[360]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k21626 in k21623 in k21617 in k21614 in do2937 in k21413 in k21410 in k21407 in k21363 in k21359 in k21356 in k21353 in k21159 in k21154 in k21151 in k21148 in markov-analyze in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_21628(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_21606(t3,((C_word*)t0)[2],t2);}

/* k21416 in k21413 in k21410 in k21407 in k21363 in k21359 in k21356 in k21353 in k21159 in k21154 in k21151 in k21148 in markov-analyze in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_21418(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21418,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21421,a[2]=((C_word*)t0)[7],tmp=(C_word)a,a+=3,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21426,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=t4,a[7]=((C_word)li304),tmp=(C_word)a,a+=8,tmp));
t6=((C_word*)t4)[1];
f_21426(t6,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* do2952 in k21416 in k21413 in k21410 in k21407 in k21363 in k21359 in k21356 in k21353 in k21159 in k21154 in k21151 in k21148 in markov-analyze in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_21426(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21426,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(C_word)C_i_car(t2);
t4=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_21439,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t3,a[7]=t1,a[8]=((C_word*)t0)[6],a[9]=t2,tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 379  newline");
t5=*((C_word*)lf[359]+1);
((C_proc2)C_retrieve_proc(t5))(2,t5,t4);}}

/* k21437 in do2952 in k21416 in k21413 in k21410 in k21407 in k21363 in k21359 in k21356 in k21353 in k21159 in k21154 in k21151 in k21148 in markov-analyze in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_21439(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21439,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_21442,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[6]);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t2;
f_21442(2,t4,lf[364]);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21313,a[2]=t2,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_car(t3);
C_trace("ChickenBridge.scm: 379  format");
t6=C_retrieve(lf[355]);
((C_proc5)C_retrieve_proc(t6))(5,t6,t4,C_SCHEME_FALSE,lf[366],t5);}}

/* k21311 in k21437 in do2952 in k21416 in k21413 in k21410 in k21407 in k21363 in k21359 in k21356 in k21353 in k21159 in k21154 in k21151 in k21148 in markov-analyze in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_21313(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21313,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_cdr(((C_word*)t0)[3]);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21322,a[2]=t6,a[3]=t3,a[4]=((C_word)li303),tmp=(C_word)a,a+=5,tmp));
t8=((C_word*)t6)[1];
f_21322(t8,((C_word*)t0)[2],t4);}

/* do2884 in k21311 in k21437 in do2952 in k21416 in k21413 in k21410 in k21407 in k21363 in k21359 in k21356 in k21353 in k21159 in k21154 in k21151 in k21148 in markov-analyze in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_21322(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21322,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)((C_word*)t0)[3])[1]);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21333,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21344,a[2]=((C_word*)t0)[3],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 379  format");
t6=C_retrieve(lf[355]);
((C_proc5)C_retrieve_proc(t6))(5,t6,t4,C_SCHEME_FALSE,lf[365],t5);}}

/* k21342 in do2884 in k21311 in k21437 in do2952 in k21416 in k21413 in k21410 in k21407 in k21363 in k21359 in k21356 in k21353 in k21159 in k21154 in k21151 in k21148 in markov-analyze in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_21344(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  string-append");
t2=*((C_word*)lf[165]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k21331 in do2884 in k21311 in k21437 in do2952 in k21416 in k21413 in k21410 in k21407 in k21363 in k21359 in k21356 in k21353 in k21159 in k21154 in k21151 in k21148 in markov-analyze in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_21333(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_21322(t4,((C_word*)t0)[2],t3);}

/* k21440 in k21437 in do2952 in k21416 in k21413 in k21410 in k21407 in k21363 in k21359 in k21356 in k21353 in k21159 in k21154 in k21151 in k21148 in markov-analyze in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_21442(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21442,2,t0,t1);}
t2=(C_word)C_i_string_length(t1);
t3=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_21448,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=t1,a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[7],a[10]=((C_word*)t0)[8],a[11]=((C_word*)t0)[9],tmp=(C_word)a,a+=12,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21577,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[2])[1],t2);
C_trace("ChickenBridge.scm: 379  max");
t6=*((C_word*)lf[301]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,t5,C_fix(0));}

/* k21575 in k21440 in k21437 in do2952 in k21416 in k21413 in k21410 in k21407 in k21363 in k21359 in k21356 in k21353 in k21159 in k21154 in k21151 in k21148 in markov-analyze in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_21577(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21577,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21579,a[2]=t3,a[3]=((C_word)li302),tmp=(C_word)a,a+=4,tmp));
t5=((C_word*)t3)[1];
f_21579(t5,((C_word*)t0)[2],C_fix(0),t1);}

/* do2958 in k21575 in k21440 in k21437 in do2952 in k21416 in k21413 in k21410 in k21407 in k21363 in k21359 in k21356 in k21353 in k21159 in k21154 in k21151 in k21148 in markov-analyze in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_21579(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21579,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nequalp(t2,t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_FALSE);}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21589,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
C_trace("write-char/port");
t5=C_retrieve(lf[361]);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t4,C_make_character(32),*((C_word*)lf[362]+1));}}

/* k21587 in do2958 in k21575 in k21440 in k21437 in do2952 in k21416 in k21413 in k21410 in k21407 in k21363 in k21359 in k21356 in k21353 in k21159 in k21154 in k21151 in k21148 in markov-analyze in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_21589(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21589,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],C_fix(1));
t3=((C_word*)((C_word*)t0)[4])[1];
f_21579(t3,((C_word*)t0)[3],t2,((C_word*)t0)[2]);}

/* k21446 in k21440 in k21437 in do2952 in k21416 in k21413 in k21410 in k21407 in k21363 in k21359 in k21356 in k21353 in k21159 in k21154 in k21151 in k21148 in markov-analyze in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_21448(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21448,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_21451,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],tmp=(C_word)a,a+=9,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21550,a[2]=t2,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  min");
t4=*((C_word*)lf[363]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2]);}

/* k21548 in k21446 in k21440 in k21437 in do2952 in k21416 in k21413 in k21410 in k21407 in k21363 in k21359 in k21356 in k21353 in k21159 in k21154 in k21151 in k21148 in markov-analyze in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_21550(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21550,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21552,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word)li301),tmp=(C_word)a,a+=5,tmp));
t5=((C_word*)t3)[1];
f_21552(t5,((C_word*)t0)[2],C_fix(0),t1);}

/* do2964 in k21548 in k21446 in k21440 in k21437 in do2952 in k21416 in k21413 in k21410 in k21407 in k21363 in k21359 in k21356 in k21353 in k21159 in k21154 in k21151 in k21148 in markov-analyze in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_21552(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21552,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nequalp(t2,t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_FALSE);}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21562,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t5=(C_word)C_i_string_ref(((C_word*)t0)[2],t2);
C_trace("write-char/port");
t6=C_retrieve(lf[361]);
((C_proc4)(void*)(*((C_word*)t6+1)))(4,t6,t4,t5,*((C_word*)lf[362]+1));}}

/* k21560 in do2964 in k21548 in k21446 in k21440 in k21437 in do2952 in k21416 in k21413 in k21410 in k21407 in k21363 in k21359 in k21356 in k21353 in k21159 in k21154 in k21151 in k21148 in markov-analyze in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_21562(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21562,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],C_fix(1));
t3=((C_word*)((C_word*)t0)[4])[1];
f_21552(t3,((C_word*)t0)[3],t2,((C_word*)t0)[2]);}

/* k21449 in k21446 in k21440 in k21437 in do2952 in k21416 in k21413 in k21410 in k21407 in k21363 in k21359 in k21356 in k21353 in k21159 in k21154 in k21151 in k21148 in markov-analyze in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_21451(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21451,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21454,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],tmp=(C_word)a,a+=5,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21463,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t4,a[5]=((C_word*)t0)[5],a[6]=((C_word)li300),tmp=(C_word)a,a+=7,tmp));
t6=((C_word*)t4)[1];
f_21463(t6,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* do2971 in k21449 in k21446 in k21440 in k21437 in do2952 in k21416 in k21413 in k21410 in k21407 in k21363 in k21359 in k21356 in k21353 in k21159 in k21154 in k21151 in k21148 in markov-analyze in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_21463(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21463,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(C_word)C_i_car(t2);
t4=(C_word)C_i_cddr(((C_word*)t0)[5]);
t5=(C_word)C_i_assoc(t3,t4);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21476,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
if(C_truep(t5)){
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21495,a[2]=((C_word*)t0)[3],a[3]=t6,tmp=(C_word)a,a+=4,tmp);
t8=(C_word)C_i_cadr(t5);
C_trace("ChickenBridge.scm: 379  number->string");
C_number_to_string(3,0,t7,t8);}
else{
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21489,a[2]=((C_word*)t0)[2],a[3]=t6,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  display");
t8=*((C_word*)lf[360]+1);
((C_proc3)C_retrieve_proc(t8))(3,t8,t7,((C_word*)t0)[3]);}}}

/* k21487 in do2971 in k21449 in k21446 in k21440 in k21437 in do2952 in k21416 in k21413 in k21410 in k21407 in k21363 in k21359 in k21356 in k21353 in k21159 in k21154 in k21151 in k21148 in markov-analyze in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_21489(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  display");
t2=*((C_word*)lf[360]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k21493 in do2971 in k21449 in k21446 in k21440 in k21437 in do2952 in k21416 in k21413 in k21410 in k21407 in k21363 in k21359 in k21356 in k21353 in k21159 in k21154 in k21151 in k21148 in markov-analyze in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_21495(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21495,2,t0,t1);}
t2=(C_word)C_i_string_length(t1);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21501,a[2]=t2,a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  display");
t4=*((C_word*)lf[360]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k21499 in k21493 in do2971 in k21449 in k21446 in k21440 in k21437 in do2952 in k21416 in k21413 in k21410 in k21407 in k21363 in k21359 in k21356 in k21353 in k21159 in k21154 in k21151 in k21148 in markov-analyze in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_21501(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21501,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21504,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21511,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_minus(&a,2,C_fix(5),((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 379  max");
t5=*((C_word*)lf[301]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,t4,C_fix(0));}

/* k21509 in k21499 in k21493 in do2971 in k21449 in k21446 in k21440 in k21437 in do2952 in k21416 in k21413 in k21410 in k21407 in k21363 in k21359 in k21356 in k21353 in k21159 in k21154 in k21151 in k21148 in markov-analyze in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_21511(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21511,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21513,a[2]=t3,a[3]=((C_word)li299),tmp=(C_word)a,a+=4,tmp));
t5=((C_word*)t3)[1];
f_21513(t5,((C_word*)t0)[2],C_fix(0),t1);}

/* do2978 in k21509 in k21499 in k21493 in do2971 in k21449 in k21446 in k21440 in k21437 in do2952 in k21416 in k21413 in k21410 in k21407 in k21363 in k21359 in k21356 in k21353 in k21159 in k21154 in k21151 in k21148 in markov-analyze in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_21513(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21513,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nequalp(t2,t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_FALSE);}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21523,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
C_trace("write-char/port");
t5=C_retrieve(lf[361]);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t4,C_make_character(32),*((C_word*)lf[362]+1));}}

/* k21521 in do2978 in k21509 in k21499 in k21493 in do2971 in k21449 in k21446 in k21440 in k21437 in do2952 in k21416 in k21413 in k21410 in k21407 in k21363 in k21359 in k21356 in k21353 in k21159 in k21154 in k21151 in k21148 in markov-analyze in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_21523(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21523,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],C_fix(1));
t3=((C_word*)((C_word*)t0)[4])[1];
f_21513(t3,((C_word*)t0)[3],t2,((C_word*)t0)[2]);}

/* k21502 in k21499 in k21493 in do2971 in k21449 in k21446 in k21440 in k21437 in do2952 in k21416 in k21413 in k21410 in k21407 in k21363 in k21359 in k21356 in k21353 in k21159 in k21154 in k21151 in k21148 in markov-analyze in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_21504(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  display");
t2=*((C_word*)lf[360]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k21474 in do2971 in k21449 in k21446 in k21440 in k21437 in do2952 in k21416 in k21413 in k21410 in k21407 in k21363 in k21359 in k21356 in k21353 in k21159 in k21154 in k21151 in k21148 in markov-analyze in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_21476(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_21463(t3,((C_word*)t0)[2],t2);}

/* k21452 in k21449 in k21446 in k21440 in k21437 in do2952 in k21416 in k21413 in k21410 in k21407 in k21363 in k21359 in k21356 in k21353 in k21159 in k21154 in k21151 in k21148 in markov-analyze in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_21454(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_21426(t3,((C_word*)t0)[2],t2);}

/* k21419 in k21416 in k21413 in k21410 in k21407 in k21363 in k21359 in k21356 in k21353 in k21159 in k21154 in k21151 in k21148 in markov-analyze in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_21421(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  newline");
t2=*((C_word*)lf[359]+1);
((C_proc2)C_retrieve_proc(t2))(2,t2,((C_word*)t0)[2]);}

/* k21366 in k21363 in k21359 in k21356 in k21353 in k21159 in k21154 in k21151 in k21148 in markov-analyze in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_21368(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21368,2,t0,t1);}
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[4])[1],C_fix(1)))){
C_trace("ChickenBridge.scm: 379  values");
C_values(2,0,((C_word*)t0)[3]);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21380,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21391,a[2]=((C_word)li298),tmp=(C_word)a,a+=3,tmp);
C_trace("map");
t4=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,t2,t3,((C_word*)((C_word*)t0)[2])[1]);}}

/* a21390 in k21366 in k21363 in k21359 in k21356 in k21353 in k21159 in k21154 in k21151 in k21148 in markov-analyze in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_21391(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_21391,3,t0,t1,t2);}
t3=(C_word)C_i_car(t2);
t4=(C_word)C_i_cddr(t2);
C_trace("ChickenBridge.scm: 379  append");
t5=*((C_word*)lf[18]+1);
((C_proc5)C_retrieve_proc(t5))(5,t5,t1,t3,lf[357],t4);}

/* k21378 in k21366 in k21363 in k21359 in k21356 in k21353 in k21159 in k21154 in k21151 in k21148 in markov-analyze in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_21380(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[3])[1],C_fix(2)))){
C_trace("ChickenBridge.scm: 379  make-markov");
t2=C_retrieve(lf[335]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,t1);}}

/* before? in k21159 in k21154 in k21151 in k21148 in markov-analyze in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_21245(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21245,NULL,5,t0,t1,t2,t3,t4);}
if(C_truep((C_word)C_i_nullp(t2))){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_TRUE);}
else{
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21255,a[2]=t4,a[3]=((C_word*)t0)[2],a[4]=t3,a[5]=t2,a[6]=t1,tmp=(C_word)a,a+=7,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21293,a[2]=t2,a[3]=((C_word)li296),tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  list-index");
t7=C_retrieve(lf[65]);
((C_proc4)C_retrieve_proc(t7))(4,t7,t5,t6,t4);}}

/* a21292 in before? in k21159 in k21154 in k21151 in k21148 in markov-analyze in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_21293(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_21293,3,t0,t1,t2);}
t3=(C_word)C_i_car(((C_word*)t0)[2]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_equalp(t3,t2));}

/* k21253 in before? in k21159 in k21154 in k21151 in k21148 in markov-analyze in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_21255(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21255,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21258,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,tmp=(C_word)a,a+=8,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21283,a[2]=((C_word*)t0)[4],a[3]=((C_word)li295),tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  list-index");
t4=C_retrieve(lf[65]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,t3,((C_word*)t0)[2]);}

/* a21282 in k21253 in before? in k21159 in k21154 in k21151 in k21148 in markov-analyze in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_21283(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_21283,3,t0,t1,t2);}
t3=(C_word)C_i_car(((C_word*)t0)[2]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_equalp(t3,t2));}

/* k21256 in k21253 in before? in k21159 in k21154 in k21151 in k21148 in markov-analyze in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_21258(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
if(C_truep((C_word)C_i_lessp(((C_word*)t0)[7],t1))){
t2=((C_word*)t0)[6];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_TRUE);}
else{
if(C_truep((C_word)C_i_nequalp(((C_word*)t0)[7],t1))){
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 379  before?");
t4=((C_word*)((C_word*)t0)[3])[1];
f_21245(t4,((C_word*)t0)[6],t2,t3,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[6];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}}

/* add-outcome in k21159 in k21154 in k21151 in k21148 in markov-analyze in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_21163(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21163,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21167,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=t1,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21235,a[2]=t2,a[3]=((C_word)li293),tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  list-find");
t6=C_retrieve(lf[66]);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,t5,((C_word*)((C_word*)t0)[2])[1]);}

/* a21234 in add-outcome in k21159 in k21154 in k21151 in k21148 in markov-analyze in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_21235(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_21235,3,t0,t1,t2);}
t3=(C_word)C_i_car(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_equalp(((C_word*)t0)[2],t3));}

/* k21165 in add-outcome in k21159 in k21154 in k21151 in k21148 in markov-analyze in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_21167(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21167,2,t0,t1);}
t2=t1;
if(C_truep(t2)){
t3=(C_word)C_i_cddr(t1);
t4=(C_word)C_i_assoc(((C_word*)t0)[5],t3);
if(C_truep(t4)){
t5=(C_word)C_i_cdr(t4);
t6=(C_word)C_i_cadr(t4);
t7=(C_word)C_a_i_plus(&a,2,C_fix(1),t6);
t8=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)C_i_set_car(t5,t7));}
else{
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21217,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_cdr(t1);
C_trace("ChickenBridge.scm: 379  tail");
t7=C_retrieve(lf[58]);
((C_proc3)C_retrieve_proc(t7))(3,t7,t5,t6);}}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21185,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  format");
t4=C_retrieve(lf[355]);
((C_proc5)C_retrieve_proc(t4))(5,t4,t3,C_SCHEME_FALSE,lf[356],((C_word*)t0)[3]);}}

/* k21183 in k21165 in add-outcome in k21159 in k21154 in k21151 in k21148 in markov-analyze in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_21185(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21185,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,((C_word*)t0)[5],C_fix(1));
t3=(C_word)C_a_i_list(&a,3,((C_word*)t0)[4],t1,t2);
t4=(C_word)C_a_i_cons(&a,2,t3,((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t5);}

/* k21215 in k21165 in add-outcome in k21159 in k21154 in k21151 in k21148 in markov-analyze in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_21217(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21217,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,((C_word*)t0)[3],C_fix(1));
t3=(C_word)C_a_i_list(&a,1,t2);
t4=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_set_cdr(t1,t3));}

/* next-in-graph in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_21046(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_21046,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21050,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  pattern-data");
f_14641(t3,t2);}

/* k21048 in next-in-graph in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_21050(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21050,2,t0,t1);}
t2=(C_word)C_i_cdr(t1);
t3=(C_word)C_i_car(t1);
if(C_truep(t3)){
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21079,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_i_check_structure(t3,lf[346]);
t6=(C_word)C_i_block_ref(t3,C_fix(2));
C_trace("ChickenBridge.scm: 379  next-1");
f_15263(t4,t6);}
else{
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_set_car(t1,t4);
t6=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 379  graph-node-datum");
f_20465(((C_word*)t0)[2],t6);}}

/* k21077 in k21048 in next-in-graph in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_21079(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21079,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21084,a[2]=t5,a[3]=t1,a[4]=((C_word*)t0)[4],a[5]=t3,a[6]=((C_word)li291),tmp=(C_word)a,a+=7,tmp));
t7=((C_word*)t5)[1];
f_21084(t7,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* do2807 in k21077 in k21048 in next-in-graph in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_21084(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21084,NULL,3,t0,t1,t2);}
t3=((C_word*)((C_word*)t0)[5])[1];
t4=(C_truep(t3)?t3:(C_word)C_i_nullp(t2));
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21094,a[2]=((C_word*)t0)[5],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t6=((C_word*)((C_word*)t0)[5])[1];
if(C_truep(t6)){
t7=t5;
f_21094(2,t7,(C_word)C_i_set_car(((C_word*)t0)[4],((C_word*)((C_word*)t0)[5])[1]));}
else{
C_trace("ChickenBridge.scm: 379  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t5,lf[353],((C_word*)t0)[3]);}}
else{
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21109,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t6=(C_word)C_i_car(t2);
t7=(C_word)C_i_check_structure(t6,lf[346]);
t8=(C_word)C_i_block_ref(t6,C_fix(3));
t9=(C_word)C_eqp(((C_word*)t0)[3],t8);
if(C_truep(t9)){
t10=(C_word)C_i_car(t2);
t11=C_mutate(((C_word *)((C_word*)t0)[5])+1,t10);
t12=t5;
f_21109(t12,t11);}
else{
t10=t5;
f_21109(t10,C_SCHEME_UNDEFINED);}}}

/* k21107 in do2807 in k21077 in k21048 in next-in-graph in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_21109(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_21084(t3,((C_word*)t0)[2],t2);}

/* k21092 in do2807 in k21077 in k21048 in next-in-graph in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_21094(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  graph-node-datum");
f_20465(((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* make-graph in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_20528(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+17)){
C_save_and_reclaim((void*)tr3r,(void*)f_20528r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_20528r(t0,t1,t2,t3);}}

static void C_ccall f_20528r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a=C_alloc(17);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20532,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20790,a[2]=t5,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t7=((C_word*)t4)[1];
t8=C_fix(1);
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20799,a[2]=t9,a[3]=((C_word)li289),tmp=(C_word)a,a+=4,tmp);
C_trace("map");
t11=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t11+1)))(4,t11,t6,t10,t7);}
else{
C_trace("ChickenBridge.scm: 379  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[352],((C_word*)t4)[1]);}}

/* parse-graph-item in make-graph in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_20799(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_20799,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20803,a[2]=t2,a[3]=t1,a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(t2))){
t4=t3;
f_20803(2,t4,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 379  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,lf[351],t2);}}

/* k20801 in parse-graph-item in make-graph in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_20803(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20803,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20808,a[2]=((C_word*)t0)[4],a[3]=((C_word)li288),tmp=(C_word)a,a+=4,tmp);
C_apply(4,0,((C_word*)t0)[3],t2,((C_word*)t0)[2]);}

/* a20807 in k20801 in parse-graph-item in make-graph in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_20808(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+46)){
C_save_and_reclaim((void*)tr3r,(void*)f_20808r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_20808r(t0,t1,t2,t3);}}

static void C_ccall f_20808r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word *a=C_alloc(46);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=t3;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_FALSE;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_20812,a[2]=t11,a[3]=t15,a[4]=t9,a[5]=t3,a[6]=t13,a[7]=t7,a[8]=t5,a[9]=t2,a[10]=t1,a[11]=((C_word*)t0)[2],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t13)[1]))){
t17=t16;
f_20812(t17,C_SCHEME_UNDEFINED);}
else{
t17=(C_word)C_i_car(((C_word*)t13)[1]);
t18=(C_word)C_eqp(t17,lf[349]);
if(C_truep(t18)){
t19=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20950,a[2]=t3,a[3]=t16,a[4]=t13,a[5]=t15,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("error");
t20=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t20))(4,t20,t19,lf[19],lf[349]);}
else{
t20=t19;
f_20950(2,t20,C_SCHEME_UNDEFINED);}}
else{
t19=(C_word)C_eqp(t17,lf[350]);
if(C_truep(t19)){
t20=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20985,a[2]=t3,a[3]=t16,a[4]=t13,a[5]=t15,a[6]=t11,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("error");
t21=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t21))(4,t21,t20,lf[19],lf[350]);}
else{
t21=t20;
f_20985(2,t21,C_SCHEME_UNDEFINED);}}
else{
t20=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21014,a[2]=t16,a[3]=t9,a[4]=t5,a[5]=t13,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t15)[1])){
C_trace("error");
t21=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t21))(4,t21,t20,lf[10],t3);}
else{
t21=t20;
f_21014(2,t21,C_SCHEME_UNDEFINED);}}}}}

/* k21012 in a20807 in k20801 in parse-graph-item in make-graph in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_21014(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21014,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21021,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21029,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k21027 in k21012 in a20807 in k20801 in parse-graph-item in make-graph in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_21029(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_21021(2,t2,C_SCHEME_UNDEFINED);}}

/* k21019 in k21012 in a20807 in k20801 in parse-graph-item in make-graph in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_21021(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_20812(t5,t4);}

/* k20983 in a20807 in k20801 in parse-graph-item in make-graph in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_20985(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20985,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20989,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_20989(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k20987 in k20983 in a20807 in k20801 in parse-graph-item in make-graph in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_20989(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_20812(t7,t6);}

/* k20948 in a20807 in k20801 in parse-graph-item in make-graph in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_20950(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20950,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20954,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_20954(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k20952 in k20948 in a20807 in k20801 in parse-graph-item in make-graph in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_20954(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_20812(t7,t6);}

/* k20810 in a20807 in k20801 in parse-graph-item in make-graph in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_20812(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[31],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20812,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_20815,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_20815(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[349]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20850,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[349]);}
else{
t6=t5;
f_20850(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[350]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20885,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[350]);}
else{
t7=t6;
f_20885(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20914,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_20914(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k20912 in k20810 in a20807 in k20801 in parse-graph-item in make-graph in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_20914(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20914,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20921,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20929,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k20927 in k20912 in k20810 in a20807 in k20801 in parse-graph-item in make-graph in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_20929(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_20921(2,t2,C_SCHEME_UNDEFINED);}}

/* k20919 in k20912 in k20810 in a20807 in k20801 in parse-graph-item in make-graph in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_20921(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_20815(t5,t4);}

/* k20883 in k20810 in a20807 in k20801 in parse-graph-item in make-graph in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_20885(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20885,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20889,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_20889(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k20887 in k20883 in k20810 in a20807 in k20801 in parse-graph-item in make-graph in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_20889(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_20815(t7,t6);}

/* k20848 in k20810 in a20807 in k20801 in parse-graph-item in make-graph in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_20850(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20850,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20854,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_20854(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k20852 in k20848 in k20810 in a20807 in k20801 in parse-graph-item in make-graph in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_20854(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_20815(t7,t6);}

/* k20813 in k20810 in a20807 in k20801 in parse-graph-item in make-graph in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_20815(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20815,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20818,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_20818(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k20816 in k20813 in k20810 in a20807 in k20801 in parse-graph-item in make-graph in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_20818(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20818,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20821,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
t3=t2;
f_20821(t3,C_SCHEME_UNDEFINED);}
else{
t3=C_mutate(((C_word *)((C_word*)t0)[2])+1,((C_word*)((C_word*)t0)[6])[1]);
t4=t2;
f_20821(t4,t3);}}

/* k20819 in k20816 in k20813 in k20810 in a20807 in k20801 in parse-graph-item in make-graph in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_20821(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20821,NULL,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[6])[1],C_fix(1));
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=((C_word*)t0)[5];
t5=((C_word*)t0)[4];
t6=((C_word*)((C_word*)t0)[3])[1];
t7=((C_word*)((C_word*)t0)[2])[1];
t8=t4;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)C_a_i_record(&a,4,lf[346],t5,t6,t7));}

/* k20788 in make-graph in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_20790(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_20532(2,t3,t2);}

/* k20530 in make-graph in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_20532(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20532,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=((C_word*)t0)[4];
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_20535,a[2]=t9,a[3]=t13,a[4]=t7,a[5]=((C_word*)t0)[4],a[6]=t11,a[7]=t5,a[8]=t3,a[9]=((C_word*)t0)[2],a[10]=((C_word*)t0)[3],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t11)[1]))){
t15=t14;
f_20535(t15,C_SCHEME_UNDEFINED);}
else{
t15=(C_word)C_i_car(((C_word*)t11)[1]);
t16=(C_word)C_eqp(t15,lf[304]);
if(C_truep(t16)){
t17=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20695,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t7,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t7)[1])){
C_trace("ChickenBridge.scm: 379  error");
t18=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t18))(4,t18,t17,lf[19],lf[304]);}
else{
t18=t17;
f_20695(2,t18,C_SCHEME_UNDEFINED);}}
else{
t17=(C_word)C_eqp(t15,lf[305]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20730,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 379  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[19],lf[305]);}
else{
t19=t18;
f_20730(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20759,a[2]=t14,a[3]=t7,a[4]=t3,a[5]=t11,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 379  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[10],((C_word*)t0)[4]);}
else{
t19=t18;
f_20759(2,t19,C_SCHEME_UNDEFINED);}}}}}

/* k20757 in k20530 in make-graph in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_20759(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20759,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20766,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20774,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k20772 in k20757 in k20530 in make-graph in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_20774(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 379  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_20766(2,t2,C_SCHEME_UNDEFINED);}}

/* k20764 in k20757 in k20530 in make-graph in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_20766(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_20535(t5,t4);}

/* k20728 in k20530 in make-graph in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_20730(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20730,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20734,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 379  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_20734(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k20732 in k20728 in k20530 in make-graph in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_20734(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_20535(t7,t6);}

/* k20693 in k20530 in make-graph in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_20695(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20695,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20699,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 379  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_20699(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k20697 in k20693 in k20530 in make-graph in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_20699(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_20535(t7,t6);}

/* k20533 in k20530 in make-graph in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_20535(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20535,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20538,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_20538(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[304]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20595,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 379  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[304]);}
else{
t6=t5;
f_20595(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[305]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20630,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 379  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[305]);}
else{
t7=t6;
f_20630(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20659,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 379  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_20659(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k20657 in k20533 in k20530 in make-graph in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_20659(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20659,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20666,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20674,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k20672 in k20657 in k20533 in k20530 in make-graph in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_20674(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 379  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_20666(2,t2,C_SCHEME_UNDEFINED);}}

/* k20664 in k20657 in k20533 in k20530 in make-graph in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_20666(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_20538(t5,t4);}

/* k20628 in k20533 in k20530 in make-graph in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_20630(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20630,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20634,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 379  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_20634(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k20632 in k20628 in k20533 in k20530 in make-graph in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_20634(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_20538(t7,t6);}

/* k20593 in k20533 in k20530 in make-graph in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_20595(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20595,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20599,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 379  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_20599(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k20597 in k20593 in k20533 in k20530 in make-graph in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_20599(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_20538(t7,t6);}

/* k20536 in k20533 in k20530 in make-graph in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_20538(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20538,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20541,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_20541(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 379  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k20539 in k20536 in k20533 in k20530 in make-graph in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_20541(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20541,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20544,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  %alloc-pattern");
f_14912(t2);}

/* k20542 in k20539 in k20536 in k20533 in k20530 in make-graph in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_20544(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20544,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[5])[1]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20550,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_SCHEME_FALSE,((C_word*)((C_word*)t0)[5])[1]);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20556,a[2]=((C_word)li287),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  initialize-pattern");
f_14922(t3,t1,t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t2,C_retrieve2(lf[348],"next-in-graph"),t5);}

/* a20555 in k20542 in k20539 in k20536 in k20533 in k20530 in make-graph in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_20556(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_20556,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20562,a[2]=((C_word)li286),tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20574,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  pattern-data");
f_14641(t5,t3);}

/* k20572 in a20555 in k20542 in k20539 in k20536 in k20533 in k20530 in make-graph in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_20574(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(t1);
C_trace("for-each");
t3=*((C_word*)lf[209]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* a20561 in a20555 in k20542 in k20539 in k20536 in k20533 in k20530 in make-graph in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_20562(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_20562,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 379  graph-node-datum");
f_20465(t1,t2);}

/* k20548 in k20542 in k20539 in k20536 in k20533 in k20530 in make-graph in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_20550(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* graph-node-datum in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_20465(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20465,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[346]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* next-in-markov in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_20125(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_20125,3,t0,t1,t2);}
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20128,a[2]=t4,a[3]=((C_word)li280),tmp=(C_word)a,a+=4,tmp));
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20307,a[2]=t1,a[3]=t4,a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  pattern-data");
f_14641(t6,t2);}

/* k20305 in next-in-markov in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_20307(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20307,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20311,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  pattern-cache");
f_14857(t2,((C_word*)t0)[4]);}

/* k20309 in k20305 in next-in-markov in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_20311(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20311,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20313,a[2]=t3,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word)li283),tmp=(C_word)a,a+=6,tmp));
t5=((C_word*)t3)[1];
f_20313(t5,((C_word*)t0)[3],((C_word*)t0)[2],t1,C_SCHEME_FALSE);}

/* do2648 in k20309 in k20305 in next-in-markov in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_20313(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20313,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_nullp(t2);
t7=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_20323,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=((C_word*)t0)[4],a[6]=t3,a[7]=t1,a[8]=t5,tmp=(C_word)a,a+=9,tmp);
if(C_truep(t6)){
t8=t7;
f_20323(2,t8,t6);}
else{
t8=(C_word)C_i_nullp(t3);
if(C_truep(t8)){
t9=t7;
f_20323(2,t9,t8);}
else{
t9=(C_word)C_i_car(t2);
t10=(C_word)C_i_car(t9);
t11=t3;
t12=C_SCHEME_UNDEFINED;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_set_block_item(t13,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20238,a[2]=t13,a[3]=((C_word)li282),tmp=(C_word)a,a+=4,tmp));
t15=((C_word*)t13)[1];
f_20238(t15,t7,t10,t11,C_SCHEME_TRUE);}}}

/* do2633 in do2648 in k20309 in k20305 in next-in-markov in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_20238(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20238,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_nullp(t2);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20248,a[2]=((C_word*)t0)[2],a[3]=t3,a[4]=t2,a[5]=t5,a[6]=t1,tmp=(C_word)a,a+=7,tmp);
if(C_truep(t6)){
t8=t7;
f_20248(t8,t6);}
else{
t8=(C_word)C_i_nullp(t3);
t9=t7;
f_20248(t9,(C_truep(t8)?t8:(C_word)C_i_not(((C_word*)t5)[1])));}}

/* k20246 in do2633 in do2648 in k20309 in k20305 in next-in-markov in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_20248(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20248,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[6];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[5])[1]);}
else{
t2=(C_word)C_i_car(((C_word*)t0)[4]);
t3=(C_word)C_eqp(t2,lf[102]);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20255,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
if(C_truep(t3)){
t5=t4;
f_20255(t5,t3);}
else{
t5=(C_word)C_i_car(((C_word*)t0)[4]);
t6=(C_word)C_i_car(((C_word*)t0)[3]);
t7=(C_word)C_i_equalp(t5,t6);
if(C_truep(t7)){
t8=t4;
f_20255(t8,t7);}
else{
t8=(C_word)C_i_car(((C_word*)t0)[3]);
t9=t4;
f_20255(t9,(C_word)C_eqp(t8,lf[102]));}}}}

/* k20253 in k20246 in do2633 in do2648 in k20309 in k20305 in next-in-markov in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_20255(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[5]);
t4=(C_word)C_i_cdr(((C_word*)t0)[4]);
t5=((C_word*)((C_word*)t0)[3])[1];
f_20238(t5,((C_word*)t0)[2],t3,t4,((C_word*)((C_word*)t0)[6])[1]);}

/* k20321 in do2648 in k20309 in k20305 in next-in-markov in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_20323(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20323,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20326,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[4]))){
C_trace("ChickenBridge.scm: 379  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[344],((C_word*)t0)[6]);}
else{
t3=t2;
f_20326(2,t3,C_SCHEME_UNDEFINED);}}
else{
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[2])[1];
f_20313(t3,((C_word*)t0)[7],t2,((C_word*)t0)[6],((C_word*)((C_word*)t0)[8])[1]);}}

/* k20324 in k20321 in do2648 in k20309 in k20305 in next-in-markov in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_20326(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20326,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20330,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[3]);
t4=(C_word)C_i_cadr(t3);
t5=(C_word)C_i_car(((C_word*)t0)[3]);
t6=(C_word)C_i_cddr(t5);
C_trace("ChickenBridge.scm: 379  select-output");
t7=((C_word*)((C_word*)t0)[2])[1];
f_20128(t7,t2,t4,t6);}

/* k20328 in k20324 in k20321 in do2648 in k20309 in k20305 in next-in-markov in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_20330(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20330,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20333,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[3]))){
t4=t3;
f_20333(2,t4,C_SCHEME_UNDEFINED);}
else{
t4=(C_word)C_i_cdr(((C_word*)t0)[3]);
if(C_truep((C_word)C_i_nullp(t4))){
t5=t3;
f_20333(2,t5,(C_word)C_i_set_car(((C_word*)t0)[3],((C_word*)((C_word*)t0)[5])[1]));}
else{
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20350,a[2]=t6,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[3],a[6]=((C_word)li281),tmp=(C_word)a,a+=7,tmp));
t8=((C_word*)t6)[1];
f_20350(t8,t3,((C_word*)t0)[3]);}}}

/* do2657 in k20328 in k20324 in k20321 in do2648 in k20309 in k20305 in next-in-markov in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_20350(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a;
loop:
a=C_alloc(4);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_20350,NULL,3,t0,t1,t2);}
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_set_car(((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_i_set_cdr(t2,((C_word*)t0)[5]);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20366,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_cdr(((C_word*)t0)[5]);
C_trace("ChickenBridge.scm: 379  pattern-cache-set!");
f_14848(t6,((C_word*)t0)[3],t7);}
else{
t4=(C_word)C_i_cdr(t2);
t10=t1;
t11=t4;
t1=t10;
t2=t11;
goto loop;}}

/* k20364 in do2657 in k20328 in k20324 in k20321 in do2648 in k20309 in k20305 in next-in-markov in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_20366(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_set_cdr(t2,C_SCHEME_END_OF_LIST));}

/* k20331 in k20328 in k20324 in k20321 in do2648 in k20309 in k20305 in next-in-markov in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_20333(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* select-output in next-in-markov in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_20128(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20128,NULL,4,t0,t1,t2,t3);}
t4=t2;
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20196,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  tb:ranf");
f_7845(t5,t2);}
else{
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20140,a[2]=t6,a[3]=t3,a[4]=((C_word*)t0)[2],a[5]=((C_word)li279),tmp=(C_word)a,a+=6,tmp));
t8=((C_word*)t6)[1];
f_20140(t8,t1,t3,C_SCHEME_FALSE,C_fix(0));}}

/* do2617 in select-output in next-in-markov in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_20140(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20140,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 379  select-output");
t7=((C_word*)((C_word*)t0)[4])[1];
f_20128(t7,t1,((C_word*)t6)[1],((C_word*)t0)[3]);}
else{
t7=(C_word)C_i_car(t2);
t8=C_set_block_item(t5,0,t7);
t9=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20176,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,a[5]=t5,a[6]=t6,tmp=(C_word)a,a+=7,tmp);
t10=(C_word)C_i_caddr(((C_word*)t5)[1]);
if(C_truep((C_word)C_i_numberp(t10))){
t11=t9;
f_20176(2,t11,(C_word)C_i_caddr(((C_word*)t5)[1]));}
else{
t11=(C_word)C_i_caddr(((C_word*)t5)[1]);
C_trace("ChickenBridge.scm: 379  next-1");
f_15263(t9,t11);}}}

/* k20174 in do2617 in select-output in next-in-markov in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_20176(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20176,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[6])[1],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t5=(C_word)C_i_set_car(t4,((C_word*)((C_word*)t0)[6])[1]);
t6=(C_word)C_i_cdr(((C_word*)t0)[4]);
t7=((C_word*)((C_word*)t0)[3])[1];
f_20140(t7,((C_word*)t0)[2],t6,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[6])[1]);}

/* k20194 in select-output in next-in-markov in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_20196(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20196,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20201,a[2]=t3,a[3]=t1,a[4]=((C_word)li278),tmp=(C_word)a,a+=5,tmp));
t5=((C_word*)t3)[1];
f_20201(t5,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* do2627 in k20194 in select-output in next-in-markov in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_20201(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a;
loop:
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20201,NULL,3,t0,t1,t2);}
t3=(C_word)C_i_car(t2);
t4=(C_word)C_i_cadr(t3);
if(C_truep((C_word)C_i_lessp(((C_word*)t0)[3],t4))){
t5=(C_word)C_i_car(t2);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_i_car(t5));}
else{
t5=(C_word)C_i_cdr(t2);
t8=t1;
t9=t5;
t1=t8;
t2=t9;
goto loop;}}

/* make-markov in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_19638(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+22)){
C_save_and_reclaim((void*)tr3r,(void*)f_19638r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_19638r(t0,t1,t2,t3);}}

static void C_ccall f_19638r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a=C_alloc(22);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19642,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20119,a[2]=t5,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t7=((C_word*)t4)[1];
t8=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t9=C_SCHEME_UNDEFINED;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_set_block_item(t10,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19565,a[2]=t7,a[3]=t10,a[4]=t8,a[5]=((C_word)li276),tmp=(C_word)a,a+=6,tmp));
t12=((C_word*)t10)[1];
f_19565(t12,t6,t7,C_SCHEME_FALSE,t8,C_SCHEME_FALSE);}
else{
C_trace("ChickenBridge.scm: 379  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[343],((C_word*)t4)[1]);}}

/* do2518 in make-markov in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_19565(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19565,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,(C_word)C_i_cdr(((C_word*)t0)[4]));}
else{
t9=(C_word)C_i_car(t2);
t10=t9;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_19410,a[2]=((C_word*)t0)[2],a[3]=t6,a[4]=t1,a[5]=((C_word*)t0)[3],a[6]=t2,a[7]=t7,a[8]=t8,a[9]=t11,tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t11)[1]))){
t13=t12;
f_19410(2,t13,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 379  error");
t13=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t13))(4,t13,t12,lf[342],((C_word*)t11)[1]);}}}

/* k19408 in do2518 in make-markov in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_19410(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19410,2,t0,t1);}
t2=(C_word)C_i_member(lf[338],((C_word*)((C_word*)t0)[9])[1]);
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_19416,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
if(C_truep(t2)){
t4=t3;
f_19416(2,t4,t2);}
else{
t4=(C_word)C_i_member(lf[340],((C_word*)((C_word*)t0)[9])[1]);
if(C_truep(t4)){
t5=t3;
f_19416(2,t5,t4);}
else{
C_trace("ChickenBridge.scm: 379  error");
t5=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,lf[341],((C_word*)((C_word*)t0)[9])[1]);}}}

/* k19414 in k19408 in do2518 in make-markov in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_19416(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[37],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19416,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_END_OF_LIST;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_fix(0);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_END_OF_LIST;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t11=t10;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_19428,a[2]=t3,a[3]=t9,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=t5,a[12]=t7,tmp=(C_word)a,a+=13,tmp);
t14=C_SCHEME_UNDEFINED;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_set_block_item(t15,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_19501,a[2]=t15,a[3]=t12,a[4]=t5,a[5]=t10,a[6]=t3,a[7]=((C_word*)t0)[2],a[8]=((C_word)li275),tmp=(C_word)a,a+=9,tmp));
t17=((C_word*)t15)[1];
f_19501(t17,t13);}

/* do2496 in k19414 in k19408 in do2518 in make-markov in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_19501(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word *a;
loop:
a=C_alloc(3);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_19501,NULL,2,t0,t1);}
t2=(C_word)C_eqp(((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[6])[1]);
if(C_truep(t2)){
t3=(C_word)C_i_cdr(((C_word*)t0)[5]);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[6])+1,t5);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,t6);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_a_i_list(&a,1,t3);
t5=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[3])[1],t4);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[3])+1,t6);
t8=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t9=C_mutate(((C_word *)((C_word*)t0)[7])+1,t8);
t15=t1;
t1=t15;
goto loop;}}

/* k19426 in k19414 in k19408 in do2518 in make-markov in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_19428(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19428,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_19431,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[12],tmp=(C_word)a,a+=12,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19444,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[12],a[4]=((C_word)li274),tmp=(C_word)a,a+=5,tmp);
C_trace("for-each");
t4=*((C_word*)lf[209]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,t2,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* a19443 in k19426 in k19414 in k19408 in do2518 in make-markov in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_19444(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[14],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_19444,3,t0,t1,t2);}
t3=C_SCHEME_FALSE;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19448,a[2]=t8,a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t6,a[6]=((C_word*)t0)[3],a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_pairp(t2))){
t10=(C_word)C_i_car(t2);
t11=C_set_block_item(t4,0,t10);
t12=(C_word)C_i_cdr(t2);
t13=(C_word)C_i_nullp(t12);
t14=(C_truep(t13)?C_fix(1):(C_word)C_i_cadr(t2));
t15=C_set_block_item(t8,0,t14);
t16=C_set_block_item(t6,0,((C_word*)t8)[1]);
if(C_truep((C_word)C_i_numberp(((C_word*)t8)[1]))){
t17=t9;
f_19448(t17,C_SCHEME_UNDEFINED);}
else{
t17=C_set_block_item(t8,0,C_SCHEME_FALSE);
t18=t9;
f_19448(t18,t17);}}
else{
t10=C_set_block_item(t4,0,t2);
t11=C_set_block_item(t8,0,C_fix(1));
t12=C_set_block_item(t6,0,C_fix(1));
t13=t9;
f_19448(t13,t12);}}

/* k19446 in a19443 in k19426 in k19414 in k19408 in do2518 in make-markov in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_19448(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19448,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19451,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_truep(((C_word*)((C_word*)t0)[2])[1])?((C_word*)((C_word*)t0)[6])[1]:C_SCHEME_FALSE);
if(C_truep(t3)){
t4=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[2])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[6])+1,t4);
t6=t2;
f_19451(t6,t5);}
else{
t4=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_FALSE);
t5=t2;
f_19451(t5,t4);}}

/* k19449 in k19446 in a19443 in k19426 in k19414 in k19408 in do2518 in make-markov in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_19451(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19451,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_a_i_cons(&a,2,t2,((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,t4);}

/* k19429 in k19426 in k19414 in k19408 in do2518 in make-markov in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_19431(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19431,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_19442,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 379  reverse");
t3=*((C_word*)lf[188]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k19440 in k19429 in k19426 in k19414 in k19408 in do2518 in make-markov in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_19442(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19442,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[10])[1],t1);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[9])[1],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[8])+1,t3);
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19582,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
t6=((C_word*)((C_word*)t0)[3])[1];
if(C_truep(t6)){
t7=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t8=(C_word)C_i_length(t7);
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[3])[1],t8))){
t9=t5;
f_19582(2,t9,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 379  error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t5,lf[339],((C_word*)t0)[2]);}}
else{
t7=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t8=(C_word)C_i_length(t7);
t9=C_mutate(((C_word *)((C_word*)t0)[3])+1,t8);
t10=t5;
f_19582(2,t10,t9);}}

/* k19580 in k19440 in k19429 in k19426 in k19414 in k19408 in do2518 in make-markov in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_19582(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19582,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[7])[1]);
t3=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[6])[1],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[6])+1,t4);
t6=(C_word)C_i_cdr(((C_word*)t0)[5]);
t7=((C_word*)((C_word*)t0)[4])[1];
f_19565(t7,((C_word*)t0)[3],t6,((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[7])[1]);}

/* k20117 in make-markov in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_20119(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_19642(2,t3,t2);}

/* k19640 in make-markov in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_19642(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word ab[59],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19642,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=((C_word*)t0)[4];
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_19645,a[2]=t13,a[3]=t11,a[4]=t17,a[5]=t9,a[6]=((C_word*)t0)[4],a[7]=t15,a[8]=t5,a[9]=t3,a[10]=t7,a[11]=((C_word*)t0)[2],a[12]=((C_word*)t0)[3],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t15)[1]))){
t19=t18;
f_19645(t19,C_SCHEME_UNDEFINED);}
else{
t19=(C_word)C_i_car(((C_word*)t15)[1]);
t20=(C_word)C_eqp(t19,lf[304]);
if(C_truep(t20)){
t21=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19989,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t9,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 379  error");
t22=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t22))(4,t22,t21,lf[19],lf[304]);}
else{
t22=t21;
f_19989(2,t22,C_SCHEME_UNDEFINED);}}
else{
t21=(C_word)C_eqp(t19,lf[305]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20024,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t11,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("ChickenBridge.scm: 379  error");
t23=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[19],lf[305]);}
else{
t23=t22;
f_20024(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t19,lf[337]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20059,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t13,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 379  error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[19],lf[337]);}
else{
t24=t23;
f_20059(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20088,a[2]=t18,a[3]=t9,a[4]=t3,a[5]=t15,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t17)[1])){
C_trace("ChickenBridge.scm: 379  error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[10],((C_word*)t0)[4]);}
else{
t24=t23;
f_20088(2,t24,C_SCHEME_UNDEFINED);}}}}}}

/* k20086 in k19640 in make-markov in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_20088(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20088,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20095,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20103,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k20101 in k20086 in k19640 in make-markov in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_20103(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 379  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_20095(2,t2,C_SCHEME_UNDEFINED);}}

/* k20093 in k20086 in k19640 in make-markov in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_20095(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_19645(t5,t4);}

/* k20057 in k19640 in make-markov in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_20059(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20059,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20063,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 379  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_20063(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k20061 in k20057 in k19640 in make-markov in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_20063(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_19645(t7,t6);}

/* k20022 in k19640 in make-markov in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_20024(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20024,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20028,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 379  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_20028(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k20026 in k20022 in k19640 in make-markov in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_20028(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_19645(t7,t6);}

/* k19987 in k19640 in make-markov in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_19989(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19989,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19993,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 379  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_19993(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k19991 in k19987 in k19640 in make-markov in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_19993(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_19645(t7,t6);}

/* k19643 in k19640 in make-markov in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_19645(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[43],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19645,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_19648,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_19648(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[304]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19854,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 379  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[304]);}
else{
t6=t5;
f_19854(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[305]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19889,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 379  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[305]);}
else{
t7=t6;
f_19889(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[337]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19924,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 379  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[337]);}
else{
t8=t7;
f_19924(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19953,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 379  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_19953(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k19951 in k19643 in k19640 in make-markov in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_19953(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19953,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19960,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19968,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k19966 in k19951 in k19643 in k19640 in make-markov in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_19968(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 379  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_19960(2,t2,C_SCHEME_UNDEFINED);}}

/* k19958 in k19951 in k19643 in k19640 in make-markov in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_19960(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_19648(t5,t4);}

/* k19922 in k19643 in k19640 in make-markov in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_19924(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19924,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19928,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 379  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_19928(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k19926 in k19922 in k19643 in k19640 in make-markov in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_19928(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_19648(t7,t6);}

/* k19887 in k19643 in k19640 in make-markov in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_19889(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19889,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19893,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 379  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_19893(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k19891 in k19887 in k19643 in k19640 in make-markov in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_19893(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_19648(t7,t6);}

/* k19852 in k19643 in k19640 in make-markov in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_19854(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19854,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19858,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 379  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_19858(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k19856 in k19852 in k19643 in k19640 in make-markov in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_19858(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_19648(t7,t6);}

/* k19646 in k19643 in k19640 in make-markov in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_19648(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19648,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_19651,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[12],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_19651(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[304]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19719,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 379  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[304]);}
else{
t6=t5;
f_19719(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[305]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19754,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 379  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[305]);}
else{
t7=t6;
f_19754(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[337]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19789,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 379  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[337]);}
else{
t8=t7;
f_19789(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19818,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 379  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_19818(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k19816 in k19646 in k19643 in k19640 in make-markov in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_19818(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19818,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19825,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19833,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k19831 in k19816 in k19646 in k19643 in k19640 in make-markov in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_19833(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 379  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_19825(2,t2,C_SCHEME_UNDEFINED);}}

/* k19823 in k19816 in k19646 in k19643 in k19640 in make-markov in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_19825(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_19651(t5,t4);}

/* k19787 in k19646 in k19643 in k19640 in make-markov in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_19789(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19789,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19793,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 379  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_19793(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k19791 in k19787 in k19646 in k19643 in k19640 in make-markov in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_19793(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_19651(t7,t6);}

/* k19752 in k19646 in k19643 in k19640 in make-markov in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_19754(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19754,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19758,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 379  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_19758(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k19756 in k19752 in k19646 in k19643 in k19640 in make-markov in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_19758(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_19651(t7,t6);}

/* k19717 in k19646 in k19643 in k19640 in make-markov in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_19719(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19719,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19723,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 379  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_19723(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k19721 in k19717 in k19646 in k19643 in k19640 in make-markov in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_19723(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_19651(t7,t6);}

/* k19649 in k19646 in k19643 in k19640 in make-markov in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_19651(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19651,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19654,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_19654(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 379  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k19652 in k19649 in k19646 in k19643 in k19640 in make-markov in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_19654(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19654,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19657,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  %alloc-pattern");
f_14912(t2);}

/* k19655 in k19652 in k19649 in k19646 in k19643 in k19640 in make-markov in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_19657(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19657,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[6])[1]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19663,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[4],a[4]=t1,a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19690,a[2]=((C_word)li273),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  initialize-pattern");
f_14922(t3,t1,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t2,C_retrieve2(lf[336],"next-in-markov"),t4);}

/* a19689 in k19655 in k19652 in k19649 in k19646 in k19643 in k19640 in make-markov in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_19690(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_19690,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19698,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  pattern-data");
f_14641(t4,t3);}

/* k19696 in a19689 in k19655 in k19652 in k19649 in k19646 in k19643 in k19640 in make-markov in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_19698(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("for-each");
t2=*((C_word*)lf[209]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k19661 in k19655 in k19652 in k19649 in k19646 in k19643 in k19640 in make-markov in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_19663(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19663,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19666,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_19666(t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19676,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t5=(C_word)C_i_car(t4);
t6=(C_word)C_i_length(t5);
C_trace("ChickenBridge.scm: 379  make-list");
t7=C_retrieve(lf[63]);
((C_proc4)C_retrieve_proc(t7))(4,t7,t3,t6,lf[102]);}}

/* k19674 in k19661 in k19655 in k19652 in k19649 in k19646 in k19643 in k19640 in make-markov in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_19676(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_19666(t3,t2);}

/* k19664 in k19661 in k19655 in k19652 in k19649 in k19646 in k19643 in k19640 in make-markov in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_19666(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19666,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19669,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  pattern-cache-set!");
f_14848(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k19667 in k19664 in k19661 in k19655 in k19652 in k19649 in k19646 in k19643 in k19640 in make-markov in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_19669(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* next-in-weighting in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_19205(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_19205,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19209,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  pattern-data");
f_14641(t3,t2);}

/* k19207 in next-in-weighting in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_19209(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19209,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19212,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  pattern-period");
f_14695(t2,((C_word*)t0)[2]);}

/* k19210 in k19207 in next-in-weighting in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_19212(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19212,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19215,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  pattern-flags");
f_14623(t2,((C_word*)t0)[2]);}

/* k19213 in k19210 in k19207 in next-in-weighting in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_19215(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19215,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19221,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[5],a[4]=t2,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19384,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t3,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  bitwise-test");
f_7634(t4,t1,C_fix(4));}

/* k19382 in k19213 in k19210 in k19207 in next-in-weighting in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_19384(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19384,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_19221(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19397,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  period-count");
f_14473(t2,((C_word*)t0)[2]);}}

/* k19395 in k19382 in k19213 in k19210 in k19207 in next-in-weighting in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_19397(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19397,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19401,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  period-length");
f_14491(t2,((C_word*)t0)[2]);}

/* k19399 in k19395 in k19382 in k19213 in k19210 in k19207 in next-in-weighting in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_19401(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep((C_word)C_i_nequalp(((C_word*)t0)[4],t1))){
C_trace("ChickenBridge.scm: 379  recalc-weightings");
f_19093(((C_word*)t0)[3],((C_word*)t0)[2],C_SCHEME_FALSE);}
else{
t2=((C_word*)t0)[3];
f_19221(2,t2,C_SCHEME_UNDEFINED);}}

/* k19219 in k19213 in k19210 in k19207 in next-in-weighting in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_19221(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19221,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19227,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[4]))){
t3=t2;
f_19227(t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19358,a[2]=((C_word*)t0)[4],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19377,a[2]=((C_word*)t0)[4],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  random-item-count");
f_18243(t4,((C_word*)t0)[4]);}}

/* k19375 in k19219 in k19213 in k19210 in k19207 in next-in-weighting in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_19377(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19377,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,C_fix(1),t1);
C_trace("ChickenBridge.scm: 379  random-item-count-set!");
f_18234(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k19356 in k19219 in k19213 in k19210 in k19207 in next-in-weighting in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_19358(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19358,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19365,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  random-item-count");
f_18243(t2,((C_word*)t0)[2]);}

/* k19363 in k19356 in k19219 in k19213 in k19210 in k19207 in next-in-weighting in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_19365(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19365,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19369,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  random-item-min");
f_18207(t2,((C_word*)t0)[2]);}

/* k19367 in k19363 in k19356 in k19219 in k19213 in k19210 in k19207 in next-in-weighting in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_19369(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_19227(t2,(C_word)C_i_lessp(((C_word*)t0)[2],t1));}

/* k19225 in k19219 in k19213 in k19210 in k19207 in next-in-weighting in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_19227(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19227,NULL,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 379  random-item-datum");
f_18153(((C_word*)t0)[5],((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19233,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  pattern-cache");
f_14857(t2,((C_word*)t0)[2]);}}

/* k19231 in k19225 in k19219 in k19213 in k19210 in k19207 in next-in-weighting in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_19233(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19233,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)t0)[4]);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19237,a[2]=((C_word)li269),tmp=(C_word)a,a+=3,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19275,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t5,a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19317,a[2]=t6,a[3]=t5,a[4]=t1,a[5]=t2,a[6]=t3,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  pick");
f_19237(t7,t2,t1);}

/* k19315 in k19231 in k19225 in k19219 in k19213 in k19210 in k19207 in next-in-weighting in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_19317(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19317,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19319,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=t3,a[7]=((C_word)li271),tmp=(C_word)a,a+=8,tmp));
t5=((C_word*)t3)[1];
f_19319(t5,((C_word*)t0)[2],t1);}

/* do2470 in k19315 in k19231 in k19225 in k19219 in k19213 in k19210 in k19207 in next-in-weighting in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_19319(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19319,NULL,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_19338,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=t1,a[8]=((C_word*)t0)[6],tmp=(C_word)a,a+=9,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19341,a[2]=t2,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  random-item-max");
f_18225(t4,t2);}

/* k19339 in do2470 in k19315 in k19231 in k19225 in k19219 in k19213 in k19210 in k19207 in next-in-weighting in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_19341(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19341,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19348,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  random-item-count");
f_18243(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_19338(t2,C_SCHEME_FALSE);}}

/* k19346 in k19339 in do2470 in k19315 in k19231 in k19225 in k19219 in k19213 in k19210 in k19207 in next-in-weighting in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_19348(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19348,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19352,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  random-item-max");
f_18225(t2,((C_word*)t0)[2]);}

/* k19350 in k19346 in k19339 in do2470 in k19315 in k19231 in k19225 in k19219 in k19213 in k19210 in k19207 in next-in-weighting in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_19352(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_19338(t2,(C_word)C_i_nequalp(((C_word*)t0)[2],t1));}

/* k19336 in do2470 in k19315 in k19231 in k19225 in k19219 in k19213 in k19210 in k19207 in next-in-weighting in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_19338(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19338,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19334,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  pick");
f_19237(t2,((C_word*)t0)[5],((C_word*)t0)[4]);}
else{
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,((C_word*)t0)[2]);
t3=((C_word*)t0)[7];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}}

/* k19332 in k19336 in do2470 in k19315 in k19231 in k19225 in k19219 in k19213 in k19210 in k19207 in next-in-weighting in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_19334(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[3])[1];
f_19319(t2,((C_word*)t0)[2],t1);}

/* k19273 in k19231 in k19225 in k19219 in k19213 in k19210 in k19207 in next-in-weighting in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_19275(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19275,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19278,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[3]);
if(C_truep(t3)){
t4=t2;
f_19278(2,t4,C_SCHEME_UNDEFINED);}
else{
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19292,a[2]=t5,a[3]=((C_word)li270),tmp=(C_word)a,a+=4,tmp));
t7=((C_word*)t5)[1];
f_19292(t7,t2,((C_word*)t0)[2]);}}

/* do2474 in k19273 in k19231 in k19225 in k19219 in k19213 in k19210 in k19207 in next-in-weighting in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_19292(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19292,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19302,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 379  random-item-count-set!");
f_18234(t3,t4,C_fix(0));}}

/* k19300 in do2474 in k19273 in k19231 in k19225 in k19219 in k19213 in k19210 in k19207 in next-in-weighting in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_19302(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_19292(t3,((C_word*)t0)[2],t2);}

/* k19276 in k19273 in k19231 in k19225 in k19219 in k19213 in k19210 in k19207 in next-in-weighting in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_19278(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_set_cdr(((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 379  random-item-datum");
f_18153(((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}

/* pick in k19231 in k19225 in k19219 in k19213 in k19210 in k19207 in next-in-weighting in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_19237(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19237,NULL,3,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19245,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  tb:ranf");
f_7845(t4,t3);}

/* k19243 in pick in k19231 in k19225 in k19219 in k19213 in k19210 in k19207 in next-in-weighting in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_19245(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19245,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19247,a[2]=t3,a[3]=((C_word)li268),tmp=(C_word)a,a+=4,tmp));
t5=((C_word*)t3)[1];
f_19247(t5,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* do2465 in k19243 in pick in k19231 in k19225 in k19219 in k19213 in k19210 in k19207 in next-in-weighting in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_19247(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19247,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19268,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=t1,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 379  random-item-index");
f_18171(t4,t5);}

/* k19266 in do2465 in k19243 in pick in k19231 in k19225 in k19219 in k19213 in k19210 in k19207 in next-in-weighting in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_19268(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep((C_word)C_i_lessp(((C_word*)t0)[5],t1))){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_car(((C_word*)t0)[3]));}
else{
t2=(C_word)C_i_cdr(((C_word*)t0)[3]);
t3=((C_word*)((C_word*)t0)[2])[1];
f_19247(t3,((C_word*)t0)[4],t2,((C_word*)t0)[5]);}}

/* recalc-weightings in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_19093(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19093,NULL,3,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19203,a[2]=t1,a[3]=t2,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  pattern-data");
f_14641(t4,t2);}

/* k19201 in recalc-weightings in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_19203(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19203,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=lf[334];
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19100,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=t4,a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19162,a[2]=t7,a[3]=t4,a[4]=((C_word)li266),tmp=(C_word)a,a+=5,tmp));
t9=((C_word*)t7)[1];
f_19162(t9,t5,t2);}

/* do2437 in k19201 in recalc-weightings in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_19162(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19162,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19191,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19195,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 379  random-item-weight");
f_18189(t4,t5);}}

/* k19193 in do2437 in k19201 in recalc-weightings in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_19195(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  next-1");
f_15263(((C_word*)t0)[2],t1);}

/* k19189 in do2437 in k19201 in recalc-weightings in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_19191(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19191,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[5])[1],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19176,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 379  random-item-index-set!");
f_18162(t4,t5,((C_word*)((C_word*)t0)[5])[1]);}

/* k19174 in k19189 in do2437 in k19201 in recalc-weightings in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_19176(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_19162(t3,((C_word*)t0)[2],t2);}

/* k19098 in k19201 in recalc-weightings in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_19100(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19100,2,t0,t1);}
if(C_truep(((C_word*)t0)[6])){
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19108,a[2]=((C_word*)t0)[4],a[3]=t3,a[4]=((C_word*)t0)[5],a[5]=((C_word)li265),tmp=(C_word)a,a+=6,tmp));
t5=((C_word*)t3)[1];
f_19108(t5,((C_word*)t0)[3],((C_word*)t0)[2],C_fix(0),C_fix(0));}
else{
C_trace("ChickenBridge.scm: 379  pattern-cache-set!");
f_14848(((C_word*)t0)[3],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);}}

/* do2443 in k19098 in k19201 in recalc-weightings in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_19108(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19108,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 379  pattern-cache-set!");
f_14848(t1,((C_word*)t0)[4],((C_word*)t6)[1]);}
else{
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19141,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=t6,a[6]=t5,tmp=(C_word)a,a+=7,tmp);
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19153,a[2]=t7,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t9=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 379  random-item-index");
f_18171(t8,t9);}}

/* k19151 in do2443 in k19098 in k19201 in recalc-weightings in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_19153(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19153,2,t0,t1);}
t2=(C_word)C_a_i_divide(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=(C_word)C_a_i_times(&a,2,t2,C_fix(1073741823));
C_trace("ChickenBridge.scm: 379  floor");
t4=*((C_word*)lf[173]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,((C_word*)t0)[2],t3);}

/* k19139 in do2443 in k19098 in k19201 in recalc-weightings in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_19141(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19141,2,t0,t1);}
t2=(C_word)C_i_inexact_to_exact(t1);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19125,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
t5=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 379  random-item-index-set!");
f_18162(t4,t5,((C_word*)((C_word*)t0)[6])[1]);}

/* k19123 in k19139 in do2443 in k19098 in k19201 in recalc-weightings in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_19125(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_19108(t4,((C_word*)t0)[2],t3,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[6])[1]);}

/* make-weighting in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_18326(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+7)){
C_save_and_reclaim((void*)tr3r,(void*)f_18326r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_18326r(t0,t1,t2,t3);}}

static void C_ccall f_18326r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a=C_alloc(7);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18330,a[2]=t1,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18643,a[2]=((C_word)li263),tmp=(C_word)a,a+=3,tmp);
C_trace("map");
t6=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t6+1)))(4,t6,t4,t5,t2);}

/* %make-random-item in make-weighting in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_18643(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[9],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_18643,3,t0,t1,t2);}
t3=C_SCHEME_FALSE;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_END_OF_LIST;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18650,a[2]=t4,a[3]=t1,a[4]=t6,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(t2))){
t8=(C_word)C_i_car(t2);
t9=C_set_block_item(t4,0,t8);
t10=(C_word)C_i_cdr(t2);
t11=C_set_block_item(t6,0,t10);
t12=t7;
f_18650(t12,t11);}
else{
t8=C_set_block_item(t4,0,t2);
t9=t7;
f_18650(t9,t8);}}

/* k18648 in %make-random-item in make-weighting in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_18650(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word ab[59],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18650,NULL,2,t0,t1);}
t2=C_fix(1);
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_fix(1);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=((C_word*)((C_word*)t0)[4])[1];
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_18653,a[2]=t13,a[3]=t11,a[4]=t17,a[5]=t9,a[6]=((C_word*)t0)[4],a[7]=t15,a[8]=t7,a[9]=t5,a[10]=t3,a[11]=((C_word*)t0)[2],a[12]=((C_word*)t0)[3],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t15)[1]))){
t19=t18;
f_18653(t19,C_SCHEME_UNDEFINED);}
else{
t19=(C_word)C_i_car(((C_word*)t15)[1]);
t20=(C_word)C_eqp(t19,lf[333]);
if(C_truep(t20)){
t21=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18956,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t9,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 379  error");
t22=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t22))(4,t22,t21,lf[19],lf[333]);}
else{
t22=t21;
f_18956(2,t22,C_SCHEME_UNDEFINED);}}
else{
t21=(C_word)C_eqp(t19,lf[219]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18991,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t11,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("ChickenBridge.scm: 379  error");
t23=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[19],lf[219]);}
else{
t23=t22;
f_18991(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t19,lf[220]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19026,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t13,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 379  error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[19],lf[220]);}
else{
t24=t23;
f_19026(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19055,a[2]=t18,a[3]=t9,a[4]=t3,a[5]=t15,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t17)[1])){
C_trace("ChickenBridge.scm: 379  error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[10],((C_word*)((C_word*)t0)[4])[1]);}
else{
t24=t23;
f_19055(2,t24,C_SCHEME_UNDEFINED);}}}}}}

/* k19053 in k18648 in %make-random-item in make-weighting in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_19055(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19055,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19062,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19070,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k19068 in k19053 in k18648 in %make-random-item in make-weighting in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_19070(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 379  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_19062(2,t2,C_SCHEME_UNDEFINED);}}

/* k19060 in k19053 in k18648 in %make-random-item in make-weighting in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_19062(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_18653(t5,t4);}

/* k19024 in k18648 in %make-random-item in make-weighting in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_19026(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19026,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19030,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 379  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_19030(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k19028 in k19024 in k18648 in %make-random-item in make-weighting in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_19030(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18653(t7,t6);}

/* k18989 in k18648 in %make-random-item in make-weighting in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_18991(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18991,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18995,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 379  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_18995(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k18993 in k18989 in k18648 in %make-random-item in make-weighting in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_18995(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18653(t7,t6);}

/* k18954 in k18648 in %make-random-item in make-weighting in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_18956(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18956,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18960,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 379  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_18960(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k18958 in k18954 in k18648 in %make-random-item in make-weighting in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_18960(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18653(t7,t6);}

/* k18651 in k18648 in %make-random-item in make-weighting in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_18653(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[43],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18653,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_18656,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_18656(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[333]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18821,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 379  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[333]);}
else{
t6=t5;
f_18821(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[219]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18856,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 379  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[219]);}
else{
t7=t6;
f_18856(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[220]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18891,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 379  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[220]);}
else{
t8=t7;
f_18891(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18920,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 379  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)((C_word*)t0)[6])[1]);}
else{
t8=t7;
f_18920(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k18918 in k18651 in k18648 in %make-random-item in make-weighting in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_18920(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18920,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18927,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18935,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k18933 in k18918 in k18651 in k18648 in %make-random-item in make-weighting in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_18935(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 379  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_18927(2,t2,C_SCHEME_UNDEFINED);}}

/* k18925 in k18918 in k18651 in k18648 in %make-random-item in make-weighting in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_18927(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_18656(t5,t4);}

/* k18889 in k18651 in k18648 in %make-random-item in make-weighting in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_18891(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18891,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18895,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 379  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_18895(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k18893 in k18889 in k18651 in k18648 in %make-random-item in make-weighting in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_18895(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18656(t7,t6);}

/* k18854 in k18651 in k18648 in %make-random-item in make-weighting in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_18856(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18856,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18860,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 379  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_18860(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k18858 in k18854 in k18651 in k18648 in %make-random-item in make-weighting in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_18860(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18656(t7,t6);}

/* k18819 in k18651 in k18648 in %make-random-item in make-weighting in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_18821(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18821,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18825,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 379  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_18825(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k18823 in k18819 in k18651 in k18648 in %make-random-item in make-weighting in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_18825(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18656(t7,t6);}

/* k18654 in k18651 in k18648 in %make-random-item in make-weighting in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_18656(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18656,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_18659,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[12],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_18659(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[333]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18686,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 379  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[333]);}
else{
t6=t5;
f_18686(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[219]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18721,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 379  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[219]);}
else{
t7=t6;
f_18721(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[220]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18756,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 379  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[220]);}
else{
t8=t7;
f_18756(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18785,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 379  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)((C_word*)t0)[6])[1]);}
else{
t8=t7;
f_18785(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k18783 in k18654 in k18651 in k18648 in %make-random-item in make-weighting in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_18785(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18785,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18792,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18800,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k18798 in k18783 in k18654 in k18651 in k18648 in %make-random-item in make-weighting in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_18800(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 379  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_18792(2,t2,C_SCHEME_UNDEFINED);}}

/* k18790 in k18783 in k18654 in k18651 in k18648 in %make-random-item in make-weighting in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_18792(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_18659(t5,t4);}

/* k18754 in k18654 in k18651 in k18648 in %make-random-item in make-weighting in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_18756(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18756,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18760,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 379  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_18760(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k18758 in k18754 in k18654 in k18651 in k18648 in %make-random-item in make-weighting in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_18760(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18659(t7,t6);}

/* k18719 in k18654 in k18651 in k18648 in %make-random-item in make-weighting in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_18721(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18721,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18725,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 379  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_18725(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k18723 in k18719 in k18654 in k18651 in k18648 in %make-random-item in make-weighting in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_18725(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18659(t7,t6);}

/* k18684 in k18654 in k18651 in k18648 in %make-random-item in make-weighting in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_18686(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18686,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18690,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 379  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_18690(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k18688 in k18684 in k18654 in k18651 in k18648 in %make-random-item in make-weighting in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_18690(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18659(t7,t6);}

/* k18657 in k18654 in k18651 in k18648 in %make-random-item in make-weighting in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_18659(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18659,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18662,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_18662(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 379  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)((C_word*)t0)[2])[1]);}}

/* k18660 in k18657 in k18654 in k18651 in k18648 in %make-random-item in make-weighting in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_18662(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18662,2,t0,t1);}
t2=((C_word*)t0)[6];
t3=((C_word*)((C_word*)t0)[5])[1];
t4=((C_word*)((C_word*)t0)[4])[1];
t5=((C_word*)((C_word*)t0)[3])[1];
t6=((C_word*)((C_word*)t0)[2])[1];
t7=t2;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_a_i_record(&a,9,lf[322],t3,C_SCHEME_FALSE,t4,t5,t6,C_fix(0),C_SCHEME_FALSE,C_SCHEME_FALSE));}

/* k18328 in make-weighting in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_18330(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18330,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18333,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  %alloc-pattern");
f_14912(t2);}

/* k18331 in k18328 in make-weighting in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_18333(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18333,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)t0)[4]);
t3=C_SCHEME_FALSE;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_TRUE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_fix(0);
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_18339,a[2]=t10,a[3]=((C_word*)t0)[4],a[4]=t6,a[5]=t1,a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[3],a[8]=t4,a[9]=t2,a[10]=t8,tmp=(C_word)a,a+=11,tmp);
t12=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18607,a[2]=t8,a[3]=t6,a[4]=((C_word)li262),tmp=(C_word)a,a+=5,tmp);
C_trace("for-each");
t13=*((C_word*)lf[209]+1);
((C_proc4)(void*)(*((C_word*)t13+1)))(4,t13,t11,t12,((C_word*)t0)[4]);}

/* a18606 in k18331 in k18328 in make-weighting in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_18607(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_18607,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18611,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  random-item-min");
f_18207(t3,t2);}

/* k18609 in a18606 in k18331 in k18328 in make-weighting in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_18611(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18611,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18614,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  random-item-max");
f_18225(t2,((C_word*)t0)[2]);}

/* k18612 in k18609 in a18606 in k18331 in k18328 in make-weighting in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_18614(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18614,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18617,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  random-item-weight");
f_18189(t2,((C_word*)t0)[2]);}

/* k18615 in k18612 in k18609 in a18606 in k18331 in k18328 in make-weighting in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_18617(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18617,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18620,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  random-item-datum");
f_18153(t2,((C_word*)t0)[2]);}

/* k18618 in k18615 in k18612 in k18609 in a18606 in k18331 in k18328 in make-weighting in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_18620(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18620,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18623,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18633,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  pattern?");
f_14608(t3,t1);}

/* k18631 in k18618 in k18615 in k18612 in k18609 in a18606 in k18331 in k18328 in make-weighting in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_18633(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18633,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(1));
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_18623(t4,t3);}
else{
t2=((C_word*)t0)[2];
f_18623(t2,C_SCHEME_UNDEFINED);}}

/* k18621 in k18618 in k18615 in k18612 in k18609 in a18606 in k18331 in k18328 in make-weighting in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_18623(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep((C_word)C_i_numberp(((C_word*)t0)[4]))){
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=C_set_block_item(((C_word*)t0)[2],0,C_SCHEME_FALSE);
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}}

/* k18337 in k18331 in k18328 in make-weighting in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_18339(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18339,2,t0,t1);}
t2=(C_word)C_i_nequalp(((C_word*)((C_word*)t0)[10])[1],((C_word*)t0)[9]);
t3=(C_truep(t2)?C_fix(1):((C_word*)t0)[9]);
t4=C_mutate(((C_word *)((C_word*)t0)[8])+1,t3);
t5=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_18346,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[7],tmp=(C_word)a,a+=10,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
t6=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[2])[1],C_fix(4));
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t6);
t8=t5;
f_18346(t8,t7);}
else{
t6=t5;
f_18346(t6,C_SCHEME_UNDEFINED);}}

/* k18344 in k18337 in k18331 in k18328 in make-weighting in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_18346(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[50],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18346,NULL,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=((C_word*)t0)[9];
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=(*a=C_CLOSURE_TYPE|15,a[1]=(C_word)f_18349,a[2]=t9,a[3]=t13,a[4]=t7,a[5]=((C_word*)t0)[9],a[6]=t11,a[7]=((C_word*)t0)[2],a[8]=((C_word*)t0)[3],a[9]=((C_word*)t0)[4],a[10]=t5,a[11]=t3,a[12]=((C_word*)t0)[5],a[13]=((C_word*)t0)[6],a[14]=((C_word*)t0)[7],a[15]=((C_word*)t0)[8],tmp=(C_word)a,a+=16,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t11)[1]))){
t15=t14;
f_18349(t15,C_SCHEME_UNDEFINED);}
else{
t15=(C_word)C_i_car(((C_word*)t11)[1]);
t16=(C_word)C_eqp(t15,lf[304]);
if(C_truep(t16)){
t17=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18513,a[2]=((C_word*)t0)[9],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t7,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t7)[1])){
C_trace("ChickenBridge.scm: 379  error");
t18=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t18))(4,t18,t17,lf[19],lf[304]);}
else{
t18=t17;
f_18513(2,t18,C_SCHEME_UNDEFINED);}}
else{
t17=(C_word)C_eqp(t15,lf[305]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18548,a[2]=((C_word*)t0)[9],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 379  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[19],lf[305]);}
else{
t19=t18;
f_18548(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18577,a[2]=t14,a[3]=t7,a[4]=t3,a[5]=t11,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 379  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[10],((C_word*)t0)[9]);}
else{
t19=t18;
f_18577(2,t19,C_SCHEME_UNDEFINED);}}}}}

/* k18575 in k18344 in k18337 in k18331 in k18328 in make-weighting in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_18577(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18577,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18584,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18592,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k18590 in k18575 in k18344 in k18337 in k18331 in k18328 in make-weighting in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_18592(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 379  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_18584(2,t2,C_SCHEME_UNDEFINED);}}

/* k18582 in k18575 in k18344 in k18337 in k18331 in k18328 in make-weighting in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_18584(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_18349(t5,t4);}

/* k18546 in k18344 in k18337 in k18331 in k18328 in make-weighting in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_18548(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18548,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18552,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 379  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_18552(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k18550 in k18546 in k18344 in k18337 in k18331 in k18328 in make-weighting in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_18552(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18349(t7,t6);}

/* k18511 in k18344 in k18337 in k18331 in k18328 in make-weighting in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_18513(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18513,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18517,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 379  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_18517(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k18515 in k18511 in k18344 in k18337 in k18331 in k18328 in make-weighting in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_18517(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18349(t7,t6);}

/* k18347 in k18344 in k18337 in k18331 in k18328 in make-weighting in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_18349(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[35],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18349,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_18352,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[12],a[10]=((C_word*)t0)[13],a[11]=((C_word*)t0)[14],a[12]=((C_word*)t0)[15],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_18352(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[304]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18413,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 379  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[304]);}
else{
t6=t5;
f_18413(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[305]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18448,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 379  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[305]);}
else{
t7=t6;
f_18448(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18477,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 379  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_18477(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k18475 in k18347 in k18344 in k18337 in k18331 in k18328 in make-weighting in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_18477(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18477,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18484,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18492,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k18490 in k18475 in k18347 in k18344 in k18337 in k18331 in k18328 in make-weighting in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_18492(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 379  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_18484(2,t2,C_SCHEME_UNDEFINED);}}

/* k18482 in k18475 in k18347 in k18344 in k18337 in k18331 in k18328 in make-weighting in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_18484(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_18352(t5,t4);}

/* k18446 in k18347 in k18344 in k18337 in k18331 in k18328 in make-weighting in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_18448(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18448,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18452,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 379  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_18452(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k18450 in k18446 in k18347 in k18344 in k18337 in k18331 in k18328 in make-weighting in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_18452(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18352(t7,t6);}

/* k18411 in k18347 in k18344 in k18337 in k18331 in k18328 in make-weighting in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_18413(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18413,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18417,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 379  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_18417(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k18415 in k18411 in k18347 in k18344 in k18337 in k18331 in k18328 in make-weighting in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_18417(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18352(t7,t6);}

/* k18350 in k18347 in k18344 in k18337 in k18331 in k18328 in make-weighting in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_18352(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18352,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_18355,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[12],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_18355(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 379  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k18353 in k18350 in k18347 in k18344 in k18337 in k18331 in k18328 in make-weighting in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_18355(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18355,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18358,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[10],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_a_i_list(&a,1,((C_word*)t0)[7]);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18370,a[2]=((C_word)li261),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  initialize-pattern");
f_14922(t2,((C_word*)t0)[9],t3,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],C_retrieve2(lf[332],"next-in-weighting"),t4);}

/* a18369 in k18353 in k18350 in k18347 in k18344 in k18337 in k18331 in k18328 in make-weighting in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_18370(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_18370,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18376,a[2]=t2,a[3]=((C_word)li260),tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18392,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  pattern-data");
f_14641(t5,t3);}

/* k18390 in a18369 in k18353 in k18350 in k18347 in k18344 in k18337 in k18331 in k18328 in make-weighting in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_18392(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_car(t1);
C_trace("for-each");
t3=*((C_word*)lf[209]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* a18375 in a18369 in k18353 in k18350 in k18347 in k18344 in k18337 in k18331 in k18328 in make-weighting in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_18376(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_18376,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18384,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  random-item-datum");
f_18153(t3,t2);}

/* k18382 in a18375 in a18369 in k18353 in k18350 in k18347 in k18344 in k18337 in k18331 in k18328 in make-weighting in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_18384(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  fn");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k18356 in k18353 in k18350 in k18347 in k18344 in k18337 in k18331 in k18328 in make-weighting in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_18358(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18358,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18361,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 379  recalc-weightings");
f_19093(t2,((C_word*)t0)[3],C_SCHEME_TRUE);}
else{
t3=t2;
f_18361(2,t3,C_SCHEME_UNDEFINED);}}

/* k18359 in k18356 in k18353 in k18350 in k18347 in k18344 in k18337 in k18331 in k18328 in make-weighting in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_18361(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* random-item-count in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_18243(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18243,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[322]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(6)));}

/* random-item-count-set! in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_18234(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18234,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[322]);
C_trace("ChickenBridge.scm: 379  ##sys#block-set!");
t5=*((C_word*)lf[197]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(6),t3);}

/* random-item-max in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_18225(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18225,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[322]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(5)));}

/* random-item-min in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_18207(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18207,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[322]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(4)));}

/* random-item-weight in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_18189(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18189,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[322]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(3)));}

/* random-item-index in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_18171(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18171,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[322]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* random-item-index-set! in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_18162(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18162,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[322]);
C_trace("ChickenBridge.scm: 379  ##sys#block-set!");
t5=*((C_word*)lf[197]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(2),t3);}

/* random-item-datum in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_18153(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18153,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[322]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* next-in-rotation in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_17931(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_17931,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17934,a[2]=((C_word)li250),tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17981,a[2]=t2,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  pattern-data");
f_14641(t4,t2);}

/* k17979 in next-in-rotation in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_17981(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17981,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17984,a[2]=((C_word*)t0)[4],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(t1);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(t1);
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18007,a[2]=((C_word*)t0)[2],a[3]=t4,a[4]=((C_word*)t0)[3],a[5]=t1,a[6]=t2,tmp=(C_word)a,a+=7,tmp);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18126,a[2]=t5,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  pattern-cache");
f_14857(t6,((C_word*)t0)[2]);}
else{
t4=t2;
f_17984(t4,C_SCHEME_UNDEFINED);}}

/* k18124 in k17979 in next-in-rotation in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_18126(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  next-1");
f_15263(((C_word*)t0)[2],t1);}

/* k18005 in k17979 in next-in-rotation in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_18007(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[32],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18007,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18014,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_pairp(t1))){
t3=(C_word)C_i_cdr(t1);
if(C_truep((C_word)C_i_pairp(t3))){
t4=(C_word)C_i_cddr(t1);
if(C_truep((C_word)C_i_pairp(t4))){
t5=(C_word)C_i_cdddr(t1);
if(C_truep((C_word)C_i_pairp(t5))){
C_apply(5,0,t2,((C_word*)t0)[4],((C_word*)t0)[3],t1);}
else{
t6=(C_word)C_i_car(t1);
t7=(C_word)C_i_cadr(t1);
t8=(C_word)C_i_caddr(t1);
t9=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_18061,a[2]=t8,a[3]=t7,a[4]=t6,a[5]=((C_word*)t0)[3],a[6]=t2,a[7]=((C_word*)t0)[4],a[8]=t1,tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 379  pattern-length");
f_14659(t9,((C_word*)t0)[2]);}}
else{
t5=(C_word)C_i_car(t1);
t6=(C_word)C_i_cadr(t1);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18088,a[2]=t6,a[3]=t5,a[4]=((C_word*)t0)[3],a[5]=t2,a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  pattern-length");
f_14659(t7,((C_word*)t0)[2]);}}
else{
t4=(C_word)C_i_car(t1);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18107,a[2]=t4,a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  pattern-length");
f_14659(t5,((C_word*)t0)[2]);}}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18122,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  pattern-length");
f_14659(t3,((C_word*)t0)[2]);}}

/* k18120 in k18005 in k17979 in next-in-rotation in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_18122(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18122,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 379  rotate-items");
t3=((C_word*)t0)[5];
f_17934(7,t3,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],C_fix(1),C_fix(1),t2);}

/* k18105 in k18005 in k17979 in next-in-rotation in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_18107(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18107,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 379  rotate-items");
t3=((C_word*)t0)[5];
f_17934(7,t3,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],C_fix(1),C_fix(1),t2);}

/* k18086 in k18005 in k17979 in next-in-rotation in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_18088(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18088,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 379  rotate-items");
t3=((C_word*)t0)[6];
f_17934(7,t3,((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],C_fix(1),t2);}

/* k18059 in k18005 in k17979 in next-in-rotation in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_18061(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18061,2,t0,t1);}
t2=(C_word)C_i_caddr(((C_word*)t0)[8]);
t3=(C_word)C_a_i_minus(&a,2,t1,t2);
C_trace("ChickenBridge.scm: 379  rotate-items");
t4=((C_word*)t0)[7];
f_17934(7,t4,((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t3);}

/* k18012 in k18005 in k17979 in next-in-rotation in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_18014(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_17984(t2,(C_word)C_i_set_cdr(((C_word*)t0)[2],t1));}

/* k17982 in k17979 in next-in-rotation in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_17984(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[3]);
t3=(C_word)C_i_car(t2);
t4=(C_word)C_i_cddr(((C_word*)t0)[3]);
t5=(C_word)C_i_set_cdr(((C_word*)t0)[3],t4);
t6=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t3);}

/* rotate-items in next-in-rotation in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_17934(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[10],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_17934,7,t0,t1,t2,t3,t4,t5,t6);}
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17940,a[2]=t8,a[3]=t4,a[4]=t5,a[5]=t2,a[6]=t6,a[7]=((C_word)li249),tmp=(C_word)a,a+=8,tmp));
t10=((C_word*)t8)[1];
f_17940(t10,t1,t3);}

/* do2205 in rotate-items in next-in-rotation in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_17940(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17940,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_lessp(t2,((C_word*)t0)[6]))){
t3=(C_word)C_i_list_ref(((C_word*)t0)[5],t2);
t4=(C_word)C_a_i_plus(&a,2,t2,((C_word*)t0)[4]);
t5=(C_word)C_i_list_ref(((C_word*)t0)[5],t4);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_17956,a[2]=t3,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[3],a[8]=t2,tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 379  list-set!");
t7=C_retrieve(lf[61]);
((C_proc5)C_retrieve_proc(t7))(5,t7,t6,((C_word*)t0)[5],t2,t5);}
else{
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)t0)[5]);}}

/* k17954 in do2205 in rotate-items in next-in-rotation in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_17956(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17956,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17959,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[8],((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 379  list-set!");
t4=C_retrieve(lf[61]);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,((C_word*)t0)[3],t3,((C_word*)t0)[2]);}

/* k17957 in k17954 in do2205 in rotate-items in next-in-rotation in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_17959(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17959,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_17940(t3,((C_word*)t0)[2],t2);}

/* make-rotation in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_17457(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+14)){
C_save_and_reclaim((void*)tr3r,(void*)f_17457r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_17457r(t0,t1,t2,t3);}}

static void C_ccall f_17457r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(14);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17461,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17921,a[2]=t5,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  append");
t7=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,((C_word*)t4)[1],C_SCHEME_END_OF_LIST);}
else{
t6=(C_word)C_a_i_list(&a,1,((C_word*)t4)[1]);
t7=C_set_block_item(t4,0,t6);
t8=t5;
f_17461(t8,t7);}}

/* k17919 in make-rotation in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_17921(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_17461(t3,t2);}

/* k17459 in make-rotation in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_17461(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word ab[59],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17461,NULL,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_fix(0);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=((C_word*)t0)[4];
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_17464,a[2]=t13,a[3]=t11,a[4]=t17,a[5]=t9,a[6]=((C_word*)t0)[4],a[7]=t15,a[8]=t5,a[9]=t3,a[10]=t7,a[11]=((C_word*)t0)[2],a[12]=((C_word*)t0)[3],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t15)[1]))){
t19=t18;
f_17464(t19,C_SCHEME_UNDEFINED);}
else{
t19=(C_word)C_i_car(((C_word*)t15)[1]);
t20=(C_word)C_eqp(t19,lf[304]);
if(C_truep(t20)){
t21=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17794,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t9,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 379  error");
t22=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t22))(4,t22,t21,lf[19],lf[304]);}
else{
t22=t21;
f_17794(2,t22,C_SCHEME_UNDEFINED);}}
else{
t21=(C_word)C_eqp(t19,lf[305]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17829,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t11,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("ChickenBridge.scm: 379  error");
t23=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[19],lf[305]);}
else{
t23=t22;
f_17829(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t19,lf[320]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17864,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t13,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 379  error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[19],lf[320]);}
else{
t24=t23;
f_17864(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17893,a[2]=t18,a[3]=t9,a[4]=t3,a[5]=t15,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t17)[1])){
C_trace("ChickenBridge.scm: 379  error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[10],((C_word*)t0)[4]);}
else{
t24=t23;
f_17893(2,t24,C_SCHEME_UNDEFINED);}}}}}}

/* k17891 in k17459 in make-rotation in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_17893(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17893,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17900,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17908,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k17906 in k17891 in k17459 in make-rotation in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_17908(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 379  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_17900(2,t2,C_SCHEME_UNDEFINED);}}

/* k17898 in k17891 in k17459 in make-rotation in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_17900(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_17464(t5,t4);}

/* k17862 in k17459 in make-rotation in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_17864(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17864,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17868,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 379  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_17868(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17866 in k17862 in k17459 in make-rotation in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_17868(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17464(t7,t6);}

/* k17827 in k17459 in make-rotation in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_17829(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17829,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17833,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 379  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_17833(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17831 in k17827 in k17459 in make-rotation in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_17833(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17464(t7,t6);}

/* k17792 in k17459 in make-rotation in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_17794(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17794,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17798,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 379  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_17798(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17796 in k17792 in k17459 in make-rotation in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_17798(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17464(t7,t6);}

/* k17462 in k17459 in make-rotation in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_17464(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[43],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17464,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_17467,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_17467(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[304]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17659,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 379  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[304]);}
else{
t6=t5;
f_17659(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[305]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17694,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 379  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[305]);}
else{
t7=t6;
f_17694(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[320]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17729,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 379  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[320]);}
else{
t8=t7;
f_17729(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17758,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 379  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_17758(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k17756 in k17462 in k17459 in make-rotation in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_17758(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17758,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17765,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17773,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k17771 in k17756 in k17462 in k17459 in make-rotation in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_17773(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 379  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_17765(2,t2,C_SCHEME_UNDEFINED);}}

/* k17763 in k17756 in k17462 in k17459 in make-rotation in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_17765(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_17467(t5,t4);}

/* k17727 in k17462 in k17459 in make-rotation in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_17729(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17729,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17733,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 379  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_17733(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17731 in k17727 in k17462 in k17459 in make-rotation in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_17733(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17467(t7,t6);}

/* k17692 in k17462 in k17459 in make-rotation in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_17694(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17694,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17698,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 379  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_17698(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17696 in k17692 in k17462 in k17459 in make-rotation in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_17698(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17467(t7,t6);}

/* k17657 in k17462 in k17459 in make-rotation in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_17659(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17659,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17663,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 379  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_17663(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17661 in k17657 in k17462 in k17459 in make-rotation in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_17663(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17467(t7,t6);}

/* k17465 in k17462 in k17459 in make-rotation in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_17467(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17467,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_17470,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[12],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_17470(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[304]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17524,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 379  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[304]);}
else{
t6=t5;
f_17524(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[305]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17559,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 379  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[305]);}
else{
t7=t6;
f_17559(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[320]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17594,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 379  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[320]);}
else{
t8=t7;
f_17594(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17623,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 379  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_17623(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k17621 in k17465 in k17462 in k17459 in make-rotation in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_17623(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17623,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17630,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17638,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k17636 in k17621 in k17465 in k17462 in k17459 in make-rotation in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_17638(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 379  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_17630(2,t2,C_SCHEME_UNDEFINED);}}

/* k17628 in k17621 in k17465 in k17462 in k17459 in make-rotation in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_17630(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_17470(t5,t4);}

/* k17592 in k17465 in k17462 in k17459 in make-rotation in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_17594(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17594,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17598,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 379  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_17598(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17596 in k17592 in k17465 in k17462 in k17459 in make-rotation in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_17598(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17470(t7,t6);}

/* k17557 in k17465 in k17462 in k17459 in make-rotation in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_17559(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17559,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17563,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 379  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_17563(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17561 in k17557 in k17465 in k17462 in k17459 in make-rotation in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_17563(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17470(t7,t6);}

/* k17522 in k17465 in k17462 in k17459 in make-rotation in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_17524(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17524,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17528,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 379  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_17528(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17526 in k17522 in k17465 in k17462 in k17459 in make-rotation in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_17528(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17470(t7,t6);}

/* k17468 in k17465 in k17462 in k17459 in make-rotation in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_17470(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17470,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17473,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_17473(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 379  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k17471 in k17468 in k17465 in k17462 in k17459 in make-rotation in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_17473(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17473,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17476,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  %alloc-pattern");
f_14912(t2);}

/* k17474 in k17471 in k17468 in k17465 in k17462 in k17459 in make-rotation in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_17476(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17476,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[6])[1]);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17482,a[2]=((C_word*)t0)[4],a[3]=t1,a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[6])[1]);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17491,a[2]=((C_word)li247),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  initialize-pattern");
f_14922(t3,t1,t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t2,C_retrieve2(lf[319],"next-in-rotation"),t5);}

/* a17490 in k17474 in k17471 in k17468 in k17465 in k17462 in k17459 in make-rotation in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_17491(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_17491,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17503,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  pattern-data");
f_14641(t4,t3);}

/* k17501 in a17490 in k17474 in k17471 in k17468 in k17465 in k17462 in k17459 in make-rotation in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_17503(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_car(t1);
C_trace("for-each");
t3=*((C_word*)lf[209]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k17480 in k17474 in k17471 in k17468 in k17465 in k17462 in k17459 in make-rotation in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_17482(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17482,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17485,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  pattern-cache-set!");
f_14848(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k17483 in k17480 in k17474 in k17471 in k17468 in k17465 in k17462 in k17459 in make-rotation in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_17485(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* next-in-heap in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_17381(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_17381,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17385,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  pattern-data");
f_14641(t3,t2);}

/* k17383 in next-in-heap in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_17385(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17385,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17388,a[2]=((C_word*)t0)[3],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(t1);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17404,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  pattern-length");
f_14659(t4,((C_word*)t0)[2]);}
else{
t4=t2;
f_17388(2,t4,C_SCHEME_UNDEFINED);}}

/* k17402 in k17383 in next-in-heap in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_17404(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17404,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17414,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=((C_word*)t0)[3],a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  tb:rani");
f_7838(t3,t1);}

/* k17412 in k17402 in k17383 in next-in-heap in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_17414(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17414,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17416,a[2]=t3,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word)li245),tmp=(C_word)a,a+=7,tmp));
t5=((C_word*)t3)[1];
f_17416(t5,((C_word*)t0)[2],C_fix(0),t1,C_SCHEME_FALSE);}

/* do2105 in k17412 in k17402 in k17383 in next-in-heap in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_17416(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17416,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nequalp(t2,((C_word*)t0)[5]))){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_i_set_cdr(((C_word*)t0)[4],((C_word*)t0)[3]));}
else{
t6=(C_word)C_i_list_ref(((C_word*)t0)[3],t2);
t7=C_set_block_item(t5,0,t6);
t8=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_17433,a[2]=t3,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[5],a[5]=t5,a[6]=t1,a[7]=((C_word*)t0)[2],a[8]=t2,tmp=(C_word)a,a+=9,tmp);
t9=(C_word)C_i_list_ref(((C_word*)t0)[3],t3);
C_trace("ChickenBridge.scm: 379  list-set!");
t10=C_retrieve(lf[61]);
((C_proc5)C_retrieve_proc(t10))(5,t10,t8,((C_word*)t0)[3],t2,t9);}}

/* k17431 in do2105 in k17412 in k17402 in k17383 in next-in-heap in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_17433(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17433,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17436,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  list-set!");
t3=C_retrieve(lf[61]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,((C_word*)t0)[3],((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1]);}

/* k17434 in k17431 in do2105 in k17412 in k17402 in k17383 in next-in-heap in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_17436(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17436,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17447,a[2]=((C_word*)t0)[3],a[3]=t2,a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  tb:rani");
f_7838(t3,((C_word*)t0)[2]);}

/* k17445 in k17434 in k17431 in do2105 in k17412 in k17402 in k17383 in next-in-heap in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_17447(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[5])[1];
f_17416(t2,((C_word*)t0)[4],((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* k17386 in k17383 in next-in-heap in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_17388(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=(C_word)C_i_cadr(((C_word*)t0)[3]);
t3=(C_word)C_i_cddr(((C_word*)t0)[3]);
t4=(C_word)C_i_set_cdr(((C_word*)t0)[3],t3);
t5=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,t2);}

/* make-heap in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_17118(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+14)){
C_save_and_reclaim((void*)tr3r,(void*)f_17118r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_17118r(t0,t1,t2,t3);}}

static void C_ccall f_17118r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(14);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17122,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17371,a[2]=t5,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  append");
t7=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,((C_word*)t4)[1],C_SCHEME_END_OF_LIST);}
else{
t6=(C_word)C_a_i_list(&a,1,((C_word*)t4)[1]);
t7=C_set_block_item(t4,0,t6);
t8=t5;
f_17122(t8,t7);}}

/* k17369 in make-heap in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_17371(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_17122(t3,t2);}

/* k17120 in make-heap in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_17122(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17122,NULL,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=((C_word*)t0)[4];
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_17125,a[2]=t9,a[3]=t13,a[4]=t7,a[5]=((C_word*)t0)[4],a[6]=t11,a[7]=t5,a[8]=t3,a[9]=((C_word*)t0)[2],a[10]=((C_word*)t0)[3],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t11)[1]))){
t15=t14;
f_17125(t15,C_SCHEME_UNDEFINED);}
else{
t15=(C_word)C_i_car(((C_word*)t11)[1]);
t16=(C_word)C_eqp(t15,lf[304]);
if(C_truep(t16)){
t17=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17279,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t7,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t7)[1])){
C_trace("ChickenBridge.scm: 379  error");
t18=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t18))(4,t18,t17,lf[19],lf[304]);}
else{
t18=t17;
f_17279(2,t18,C_SCHEME_UNDEFINED);}}
else{
t17=(C_word)C_eqp(t15,lf[305]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17314,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 379  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[19],lf[305]);}
else{
t19=t18;
f_17314(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17343,a[2]=t14,a[3]=t7,a[4]=t3,a[5]=t11,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 379  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[10],((C_word*)t0)[4]);}
else{
t19=t18;
f_17343(2,t19,C_SCHEME_UNDEFINED);}}}}}

/* k17341 in k17120 in make-heap in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_17343(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17343,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17350,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17358,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k17356 in k17341 in k17120 in make-heap in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_17358(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 379  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_17350(2,t2,C_SCHEME_UNDEFINED);}}

/* k17348 in k17341 in k17120 in make-heap in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_17350(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_17125(t5,t4);}

/* k17312 in k17120 in make-heap in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_17314(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17314,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17318,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 379  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_17318(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17316 in k17312 in k17120 in make-heap in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_17318(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17125(t7,t6);}

/* k17277 in k17120 in make-heap in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_17279(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17279,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17283,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 379  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_17283(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17281 in k17277 in k17120 in make-heap in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_17283(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17125(t7,t6);}

/* k17123 in k17120 in make-heap in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_17125(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17125,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17128,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_17128(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[304]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17179,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 379  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[304]);}
else{
t6=t5;
f_17179(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[305]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17214,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 379  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[305]);}
else{
t7=t6;
f_17214(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17243,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 379  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_17243(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k17241 in k17123 in k17120 in make-heap in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_17243(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17243,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17250,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17258,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k17256 in k17241 in k17123 in k17120 in make-heap in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_17258(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 379  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_17250(2,t2,C_SCHEME_UNDEFINED);}}

/* k17248 in k17241 in k17123 in k17120 in make-heap in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_17250(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_17128(t5,t4);}

/* k17212 in k17123 in k17120 in make-heap in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_17214(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17214,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17218,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 379  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_17218(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17216 in k17212 in k17123 in k17120 in make-heap in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_17218(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17128(t7,t6);}

/* k17177 in k17123 in k17120 in make-heap in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_17179(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17179,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17183,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 379  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_17183(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17181 in k17177 in k17123 in k17120 in make-heap in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_17183(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17128(t7,t6);}

/* k17126 in k17123 in k17120 in make-heap in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_17128(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17128,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17131,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_17131(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 379  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k17129 in k17126 in k17123 in k17120 in make-heap in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_17131(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17131,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17134,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  %alloc-pattern");
f_14912(t2);}

/* k17132 in k17129 in k17126 in k17123 in k17120 in make-heap in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_17134(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17134,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[5])[1]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17140,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[5])[1]);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17146,a[2]=((C_word)li243),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  initialize-pattern");
f_14922(t3,t1,t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t2,C_retrieve2(lf[317],"next-in-heap"),t5);}

/* a17145 in k17132 in k17129 in k17126 in k17123 in k17120 in make-heap in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_17146(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_17146,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17158,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  pattern-data");
f_14641(t4,t3);}

/* k17156 in a17145 in k17132 in k17129 in k17126 in k17123 in k17120 in make-heap in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_17158(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_car(t1);
C_trace("for-each");
t3=*((C_word*)lf[209]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k17138 in k17132 in k17129 in k17126 in k17123 in k17120 in make-heap in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_17140(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* next-in-line in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_17082(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_17082,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17086,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  pattern-data");
f_14641(t3,t2);}

/* k17084 in next-in-line in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_17086(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17086,2,t0,t1);}
t2=(C_word)C_i_cdr(t1);
if(C_truep((C_word)C_i_nullp(t2))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17095,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17102,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  pattern-period");
f_14695(t4,((C_word*)t0)[2]);}
else{
t3=(C_word)C_i_car(t1);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17108,a[2]=t3,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_cdr(t1);
C_trace("ChickenBridge.scm: 379  pattern-data-set!");
f_14632(t4,((C_word*)t0)[2],t5);}}

/* k17106 in k17084 in next-in-line in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_17108(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* k17100 in k17084 in next-in-line in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_17102(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  period-count-set!");
f_14464(((C_word*)t0)[2],t1,C_fix(1));}

/* k17093 in k17084 in next-in-line in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_17095(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_car(((C_word*)t0)[2]));}

/* make-line in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_16835(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+10)){
C_save_and_reclaim((void*)tr3r,(void*)f_16835r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_16835r(t0,t1,t2,t3);}}

static void C_ccall f_16835r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a=C_alloc(10);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16839,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=t5;
f_16839(t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_a_i_list(&a,1,((C_word*)t4)[1]);
t7=C_set_block_item(t4,0,t6);
t8=t5;
f_16839(t8,t7);}}

/* k16837 in make-line in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_16839(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16839,NULL,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=((C_word*)t0)[4];
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_16842,a[2]=t9,a[3]=t13,a[4]=t7,a[5]=((C_word*)t0)[4],a[6]=t11,a[7]=t5,a[8]=t3,a[9]=((C_word*)t0)[2],a[10]=((C_word*)t0)[3],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t11)[1]))){
t15=t14;
f_16842(t15,C_SCHEME_UNDEFINED);}
else{
t15=(C_word)C_i_car(((C_word*)t11)[1]);
t16=(C_word)C_eqp(t15,lf[304]);
if(C_truep(t16)){
t17=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16988,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t7,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t7)[1])){
C_trace("ChickenBridge.scm: 379  error");
t18=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t18))(4,t18,t17,lf[19],lf[304]);}
else{
t18=t17;
f_16988(2,t18,C_SCHEME_UNDEFINED);}}
else{
t17=(C_word)C_eqp(t15,lf[305]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17023,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 379  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[19],lf[305]);}
else{
t19=t18;
f_17023(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17052,a[2]=t14,a[3]=t7,a[4]=t3,a[5]=t11,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 379  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[10],((C_word*)t0)[4]);}
else{
t19=t18;
f_17052(2,t19,C_SCHEME_UNDEFINED);}}}}}

/* k17050 in k16837 in make-line in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_17052(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17052,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17059,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17067,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k17065 in k17050 in k16837 in make-line in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_17067(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 379  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_17059(2,t2,C_SCHEME_UNDEFINED);}}

/* k17057 in k17050 in k16837 in make-line in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_17059(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_16842(t5,t4);}

/* k17021 in k16837 in make-line in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_17023(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17023,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17027,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 379  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_17027(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17025 in k17021 in k16837 in make-line in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_17027(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16842(t7,t6);}

/* k16986 in k16837 in make-line in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_16988(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16988,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16992,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 379  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_16992(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16990 in k16986 in k16837 in make-line in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_16992(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16842(t7,t6);}

/* k16840 in k16837 in make-line in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_16842(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16842,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16845,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_16845(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[304]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16888,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 379  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[304]);}
else{
t6=t5;
f_16888(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[305]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16923,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 379  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[305]);}
else{
t7=t6;
f_16923(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16952,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 379  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_16952(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k16950 in k16840 in k16837 in make-line in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_16952(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16952,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16959,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16967,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k16965 in k16950 in k16840 in k16837 in make-line in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_16967(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 379  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_16959(2,t2,C_SCHEME_UNDEFINED);}}

/* k16957 in k16950 in k16840 in k16837 in make-line in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_16959(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_16845(t5,t4);}

/* k16921 in k16840 in k16837 in make-line in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_16923(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16923,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16927,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 379  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_16927(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16925 in k16921 in k16840 in k16837 in make-line in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_16927(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16845(t7,t6);}

/* k16886 in k16840 in k16837 in make-line in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_16888(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16888,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16892,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 379  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_16892(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16890 in k16886 in k16840 in k16837 in make-line in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_16892(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16845(t7,t6);}

/* k16843 in k16840 in k16837 in make-line in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_16845(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16845,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16848,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_16848(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 379  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k16846 in k16843 in k16840 in k16837 in make-line in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_16848(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16848,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16851,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  %alloc-pattern");
f_14912(t2);}

/* k16849 in k16846 in k16843 in k16840 in k16837 in make-line in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_16851(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16851,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[5])[1]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16857,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16859,a[2]=((C_word)li240),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  initialize-pattern");
f_14922(t3,t1,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t2,C_retrieve2(lf[315],"next-in-line"),t4);}

/* a16858 in k16849 in k16846 in k16843 in k16840 in k16837 in make-line in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_16859(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_16859,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16867,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  pattern-data");
f_14641(t4,t3);}

/* k16865 in a16858 in k16849 in k16846 in k16843 in k16840 in k16837 in make-line in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_16867(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("for-each");
t2=*((C_word*)lf[209]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k16855 in k16849 in k16846 in k16843 in k16840 in k16837 in make-line in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_16857(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* next-in-palindrome in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_16620(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_16620,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16624,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  pattern-cache");
f_14857(t3,t2);}

/* k16622 in next-in-palindrome in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_16624(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16624,2,t0,t1);}
t2=t1;
t3=(C_word)C_i_check_structure(t2,lf[307]);
t4=(C_word)C_i_block_ref(t2,C_fix(1));
t5=t4;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16630,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t6,a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_lessp(((C_word*)t6)[1],C_fix(0)))){
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16654,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t7,a[5]=t6,tmp=(C_word)a,a+=6,tmp);
t9=t1;
t10=(C_word)C_i_check_structure(t9,lf[307]);
t11=(C_word)C_i_block_ref(t9,C_fix(5));
C_trace("ChickenBridge.scm: 379  next-1");
f_15263(t8,t11);}
else{
t8=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16833,a[2]=t7,a[3]=t1,a[4]=t6,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  palin-len");
f_16061(t8,t1);}}

/* k16831 in k16622 in next-in-palindrome in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_16833(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16833,2,t0,t1);}
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[4])[1],t1))){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16786,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  palin-inc-set!");
f_16070(t2,((C_word*)t0)[3],C_fix(-1));}
else{
t2=((C_word*)t0)[2];
f_16630(2,t2,C_SCHEME_UNDEFINED);}}

/* k16784 in k16831 in k16622 in next-in-palindrome in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_16786(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16786,2,t0,t1);}
t2=((C_word*)t0)[4];
t3=(C_word)C_i_check_structure(t2,lf[307]);
t4=(C_word)C_i_block_ref(t2,C_fix(4));
t5=(C_word)C_eqp(t4,C_SCHEME_TRUE);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16798,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
if(C_truep(t5)){
t7=t6;
f_16798(t7,t5);}
else{
if(C_truep((C_word)C_i_pairp(t4))){
t7=(C_word)C_i_cdr(t4);
if(C_truep((C_word)C_i_pairp(t7))){
t8=(C_word)C_i_cadr(t4);
t9=t6;
f_16798(t9,(C_word)C_eqp(t8,C_SCHEME_TRUE));}
else{
t8=t6;
f_16798(t8,C_SCHEME_FALSE);}}
else{
t7=t6;
f_16798(t7,C_SCHEME_FALSE);}}}

/* k16796 in k16784 in k16831 in k16622 in next-in-palindrome in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_16798(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16798,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(2));
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_16630(2,t4,t3);}
else{
t2=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(1));
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_16630(2,t4,t3);}}

/* k16652 in k16622 in next-in-palindrome in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_16654(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16654,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16657,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  palin-len");
f_16061(t2,((C_word*)t0)[2]);}

/* k16655 in k16652 in k16622 in next-in-palindrome in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_16657(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16657,2,t0,t1);}
t2=(C_word)C_i_nequalp(((C_word*)((C_word*)t0)[6])[1],C_fix(-2));
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_16663,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[3],a[5]=t2,a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],a[8]=t1,tmp=(C_word)a,a+=9,tmp);
t4=((C_word*)t0)[2];
t5=((C_word*)t0)[5];
t6=(C_word)C_i_check_structure(t4,lf[307]);
C_trace("ChickenBridge.scm: 379  ##sys#block-set!");
t7=*((C_word*)lf[197]+1);
((C_proc5)(void*)(*((C_word*)t7+1)))(5,t7,t3,t4,C_fix(4),t5);}

/* k16661 in k16655 in k16652 in k16622 in next-in-palindrome in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_16663(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16663,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16666,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 379  palin-inc-set!");
f_16070(t2,((C_word*)t0)[2],C_fix(1));}

/* k16664 in k16661 in k16655 in k16652 in k16622 in next-in-palindrome in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_16666(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16666,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16669,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[6],C_SCHEME_TRUE);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16754,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
if(C_truep(t3)){
t5=t4;
f_16754(t5,t3);}
else{
if(C_truep((C_word)C_i_pairp(((C_word*)t0)[6]))){
t5=(C_word)C_i_car(((C_word*)t0)[6]);
t6=t4;
f_16754(t6,(C_word)C_eqp(t5,C_SCHEME_TRUE));}
else{
t5=t4;
f_16754(t5,C_SCHEME_FALSE);}}}

/* k16752 in k16664 in k16661 in k16655 in k16652 in k16622 in next-in-palindrome in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_16754(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
if(C_truep(t1)){
if(C_truep(((C_word*)t0)[4])){
t2=C_set_block_item(((C_word*)t0)[3],0,C_fix(0));
t3=((C_word*)t0)[2];
f_16669(t3,t2);}
else{
t2=C_set_block_item(((C_word*)t0)[3],0,C_fix(1));
t3=((C_word*)t0)[2];
f_16669(t3,t2);}}
else{
t2=C_set_block_item(((C_word*)t0)[3],0,C_fix(0));
t3=((C_word*)t0)[2];
f_16669(t3,t2);}}

/* k16667 in k16664 in k16661 in k16655 in k16652 in k16622 in next-in-palindrome in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_16669(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16669,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16675,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16748,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  pattern-flags");
f_14623(t3,((C_word*)t0)[2]);}

/* k16746 in k16667 in k16664 in k16661 in k16655 in k16652 in k16622 in next-in-palindrome in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_16748(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  bitwise-test");
f_7634(((C_word*)t0)[2],t1,C_fix(2));}

/* k16673 in k16667 in k16664 in k16661 in k16655 in k16652 in k16622 in next-in-palindrome in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_16675(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16675,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16678,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  pattern-period");
f_14695(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[4];
f_16630(2,t2,C_SCHEME_UNDEFINED);}}

/* k16676 in k16673 in k16667 in k16664 in k16661 in k16655 in k16652 in k16622 in next-in-palindrome in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_16678(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16678,2,t0,t1);}
t2=(C_word)C_a_i_times(&a,2,((C_word*)t0)[5],C_fix(2));
switch(((C_word*)t0)[4]){
case C_SCHEME_FALSE:
C_trace("ChickenBridge.scm: 379  period-count-set!");
f_14464(((C_word*)t0)[3],t1,t2);
case C_SCHEME_TRUE:
t3=(C_truep(((C_word*)t0)[2])?(C_word)C_a_i_minus(&a,2,t2,C_fix(2)):(C_word)C_a_i_minus(&a,2,t2,C_fix(3)));
C_trace("ChickenBridge.scm: 379  period-count-set!");
f_14464(((C_word*)t0)[3],t1,t3);
default:
if(C_truep((C_word)C_i_equalp(((C_word*)t0)[4],lf[312]))){
t3=(C_word)C_a_i_minus(&a,2,t2,C_fix(1));
C_trace("ChickenBridge.scm: 379  period-count-set!");
f_14464(((C_word*)t0)[3],t1,t3);}
else{
if(C_truep((C_word)C_i_equalp(((C_word*)t0)[4],lf[313]))){
t3=(C_truep(((C_word*)t0)[2])?(C_word)C_a_i_minus(&a,2,t2,C_fix(1)):(C_word)C_a_i_minus(&a,2,t2,C_fix(2)));
C_trace("ChickenBridge.scm: 379  period-count-set!");
f_14464(((C_word*)t0)[3],t1,t3);}
else{
C_trace("ChickenBridge.scm: 379  period-count-set!");
f_14464(((C_word*)t0)[3],t1,t2);}}}}

/* k16628 in k16622 in next-in-palindrome in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_16630(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16630,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16633,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t3=((C_word*)t0)[2];
t4=(C_word)C_i_check_structure(t3,lf[307]);
t5=(C_word)C_i_block_ref(t3,C_fix(3));
t6=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[4])[1],t5);
t7=((C_word*)t0)[2];
t8=(C_word)C_i_check_structure(t7,lf[307]);
C_trace("ChickenBridge.scm: 379  ##sys#block-set!");
t9=*((C_word*)lf[197]+1);
((C_proc5)(void*)(*((C_word*)t9+1)))(5,t9,t2,t7,C_fix(1),t6);}

/* k16631 in k16628 in k16622 in next-in-palindrome in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_16633(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16633,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16640,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  pattern-data");
f_14641(t2,((C_word*)t0)[2]);}

/* k16638 in k16631 in k16628 in k16622 in next-in-palindrome in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_16640(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_list_ref(t1,((C_word*)((C_word*)t0)[2])[1]));}

/* make-palindrome in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_16150(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+10)){
C_save_and_reclaim((void*)tr3r,(void*)f_16150r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_16150r(t0,t1,t2,t3);}}

static void C_ccall f_16150r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a=C_alloc(10);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16154,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=t5;
f_16154(t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_a_i_list(&a,1,((C_word*)t4)[1]);
t7=C_set_block_item(t4,0,t6);
t8=t5;
f_16154(t8,t7);}}

/* k16152 in make-palindrome in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_16154(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word ab[59],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16154,NULL,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=((C_word*)t0)[4];
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_16157,a[2]=t13,a[3]=t11,a[4]=t17,a[5]=t9,a[6]=((C_word*)t0)[4],a[7]=t15,a[8]=t5,a[9]=t3,a[10]=t7,a[11]=((C_word*)t0)[2],a[12]=((C_word*)t0)[3],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t15)[1]))){
t19=t18;
f_16157(t19,C_SCHEME_UNDEFINED);}
else{
t19=(C_word)C_i_car(((C_word*)t15)[1]);
t20=(C_word)C_eqp(t19,lf[304]);
if(C_truep(t20)){
t21=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16491,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t9,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 379  error");
t22=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t22))(4,t22,t21,lf[19],lf[304]);}
else{
t22=t21;
f_16491(2,t22,C_SCHEME_UNDEFINED);}}
else{
t21=(C_word)C_eqp(t19,lf[305]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16526,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t11,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("ChickenBridge.scm: 379  error");
t23=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[19],lf[305]);}
else{
t23=t22;
f_16526(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t19,lf[311]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16561,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t13,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 379  error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[19],lf[311]);}
else{
t24=t23;
f_16561(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16590,a[2]=t18,a[3]=t9,a[4]=t3,a[5]=t15,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t17)[1])){
C_trace("ChickenBridge.scm: 379  error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[10],((C_word*)t0)[4]);}
else{
t24=t23;
f_16590(2,t24,C_SCHEME_UNDEFINED);}}}}}}

/* k16588 in k16152 in make-palindrome in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_16590(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16590,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16597,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16605,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k16603 in k16588 in k16152 in make-palindrome in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_16605(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 379  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_16597(2,t2,C_SCHEME_UNDEFINED);}}

/* k16595 in k16588 in k16152 in make-palindrome in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_16597(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_16157(t5,t4);}

/* k16559 in k16152 in make-palindrome in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_16561(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16561,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16565,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 379  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_16565(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16563 in k16559 in k16152 in make-palindrome in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_16565(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16157(t7,t6);}

/* k16524 in k16152 in make-palindrome in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_16526(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16526,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16530,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 379  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_16530(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16528 in k16524 in k16152 in make-palindrome in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_16530(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16157(t7,t6);}

/* k16489 in k16152 in make-palindrome in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_16491(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16491,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16495,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 379  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_16495(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16493 in k16489 in k16152 in make-palindrome in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_16495(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16157(t7,t6);}

/* k16155 in k16152 in make-palindrome in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_16157(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[43],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16157,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_16160,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_16160(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[304]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16356,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 379  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[304]);}
else{
t6=t5;
f_16356(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[305]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16391,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 379  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[305]);}
else{
t7=t6;
f_16391(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[311]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16426,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 379  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[311]);}
else{
t8=t7;
f_16426(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16455,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 379  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_16455(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k16453 in k16155 in k16152 in make-palindrome in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_16455(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16455,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16462,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16470,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k16468 in k16453 in k16155 in k16152 in make-palindrome in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_16470(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 379  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_16462(2,t2,C_SCHEME_UNDEFINED);}}

/* k16460 in k16453 in k16155 in k16152 in make-palindrome in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_16462(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_16160(t5,t4);}

/* k16424 in k16155 in k16152 in make-palindrome in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_16426(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16426,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16430,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 379  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_16430(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16428 in k16424 in k16155 in k16152 in make-palindrome in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_16430(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16160(t7,t6);}

/* k16389 in k16155 in k16152 in make-palindrome in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_16391(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16391,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16395,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 379  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_16395(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16393 in k16389 in k16155 in k16152 in make-palindrome in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_16395(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16160(t7,t6);}

/* k16354 in k16155 in k16152 in make-palindrome in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_16356(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16356,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16360,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 379  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_16360(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16358 in k16354 in k16155 in k16152 in make-palindrome in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_16360(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16160(t7,t6);}

/* k16158 in k16155 in k16152 in make-palindrome in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_16160(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16160,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_16163,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[12],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_16163(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[304]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16221,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 379  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[304]);}
else{
t6=t5;
f_16221(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[305]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16256,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 379  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[305]);}
else{
t7=t6;
f_16256(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[311]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16291,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 379  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[311]);}
else{
t8=t7;
f_16291(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16320,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 379  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_16320(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k16318 in k16158 in k16155 in k16152 in make-palindrome in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_16320(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16320,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16327,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16335,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k16333 in k16318 in k16158 in k16155 in k16152 in make-palindrome in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_16335(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 379  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_16327(2,t2,C_SCHEME_UNDEFINED);}}

/* k16325 in k16318 in k16158 in k16155 in k16152 in make-palindrome in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_16327(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_16163(t5,t4);}

/* k16289 in k16158 in k16155 in k16152 in make-palindrome in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_16291(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16291,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16295,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 379  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_16295(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16293 in k16289 in k16158 in k16155 in k16152 in make-palindrome in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_16295(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16163(t7,t6);}

/* k16254 in k16158 in k16155 in k16152 in make-palindrome in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_16256(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16256,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16260,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 379  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_16260(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16258 in k16254 in k16158 in k16155 in k16152 in make-palindrome in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_16260(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16163(t7,t6);}

/* k16219 in k16158 in k16155 in k16152 in make-palindrome in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_16221(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16221,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16225,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 379  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_16225(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16223 in k16219 in k16158 in k16155 in k16152 in make-palindrome in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_16225(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16163(t7,t6);}

/* k16161 in k16158 in k16155 in k16152 in make-palindrome in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_16163(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16163,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16166,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_16166(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 379  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k16164 in k16161 in k16158 in k16155 in k16152 in make-palindrome in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_16166(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16166,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16169,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  %alloc-pattern");
f_14912(t2);}

/* k16167 in k16164 in k16161 in k16158 in k16155 in k16152 in make-palindrome in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_16169(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16169,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[6])[1]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16175,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[6],a[4]=t1,a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_a_i_times(&a,2,t2,C_fix(2));
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16192,a[2]=((C_word)li237),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  initialize-pattern");
f_14922(t3,t1,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t4,C_retrieve2(lf[310],"next-in-palindrome"),t5);}

/* a16191 in k16167 in k16164 in k16161 in k16158 in k16155 in k16152 in make-palindrome in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_16192(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_16192,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16200,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  pattern-data");
f_14641(t4,t3);}

/* k16198 in a16191 in k16167 in k16164 in k16161 in k16158 in k16155 in k16152 in make-palindrome in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_16200(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("for-each");
t2=*((C_word*)lf[209]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k16173 in k16167 in k16164 in k16161 in k16158 in k16155 in k16152 in make-palindrome in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_16175(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16175,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16178,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_length(((C_word*)((C_word*)t0)[3])[1]);
t4=((C_word*)((C_word*)t0)[2])[1];
t5=(C_word)C_a_i_record(&a,6,lf[307],C_fix(-2),t3,C_SCHEME_FALSE,C_SCHEME_FALSE,t4);
C_trace("ChickenBridge.scm: 379  pattern-cache-set!");
f_14848(t2,((C_word*)t0)[4],t5);}

/* k16176 in k16173 in k16167 in k16164 in k16161 in k16158 in k16155 in k16152 in make-palindrome in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_16178(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* palin-inc-set! in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_16070(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16070,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[307]);
C_trace("ChickenBridge.scm: 379  ##sys#block-set!");
t5=*((C_word*)lf[197]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(3),t3);}

/* palin-len in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_16061(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16061,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[307]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* next-in-cycle in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_15989(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_15989,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15993,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  pattern-data");
f_14641(t3,t2);}

/* k15991 in next-in-cycle in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_15993(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15993,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15996,a[2]=((C_word*)t0)[2],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(t1);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(t1);
t5=t2;
f_15996(t5,(C_word)C_i_set_cdr(t1,t4));}
else{
t4=t2;
f_15996(t4,C_SCHEME_UNDEFINED);}}

/* k15994 in k15991 in next-in-cycle in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_15996(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=(C_word)C_i_cadr(((C_word*)t0)[3]);
t3=(C_word)C_i_cddr(((C_word*)t0)[3]);
t4=(C_word)C_i_set_cdr(((C_word*)t0)[3],t3);
t5=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,t2);}

/* make-cycle in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_15734(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+10)){
C_save_and_reclaim((void*)tr3r,(void*)f_15734r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_15734r(t0,t1,t2,t3);}}

static void C_ccall f_15734r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a=C_alloc(10);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15738,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=t5;
f_15738(t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_a_i_list(&a,1,((C_word*)t4)[1]);
t7=C_set_block_item(t4,0,t6);
t8=t5;
f_15738(t8,t7);}}

/* k15736 in make-cycle in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_15738(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15738,NULL,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=((C_word*)t0)[4];
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_15741,a[2]=t9,a[3]=t13,a[4]=t7,a[5]=((C_word*)t0)[4],a[6]=t11,a[7]=t5,a[8]=t3,a[9]=((C_word*)t0)[2],a[10]=((C_word*)t0)[3],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t11)[1]))){
t15=t14;
f_15741(t15,C_SCHEME_UNDEFINED);}
else{
t15=(C_word)C_i_car(((C_word*)t11)[1]);
t16=(C_word)C_eqp(t15,lf[304]);
if(C_truep(t16)){
t17=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15895,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t7,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t7)[1])){
C_trace("ChickenBridge.scm: 379  error");
t18=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t18))(4,t18,t17,lf[19],lf[304]);}
else{
t18=t17;
f_15895(2,t18,C_SCHEME_UNDEFINED);}}
else{
t17=(C_word)C_eqp(t15,lf[305]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15930,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 379  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[19],lf[305]);}
else{
t19=t18;
f_15930(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15959,a[2]=t14,a[3]=t7,a[4]=t3,a[5]=t11,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 379  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[10],((C_word*)t0)[4]);}
else{
t19=t18;
f_15959(2,t19,C_SCHEME_UNDEFINED);}}}}}

/* k15957 in k15736 in make-cycle in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_15959(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15959,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15966,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15974,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k15972 in k15957 in k15736 in make-cycle in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_15974(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 379  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_15966(2,t2,C_SCHEME_UNDEFINED);}}

/* k15964 in k15957 in k15736 in make-cycle in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_15966(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_15741(t5,t4);}

/* k15928 in k15736 in make-cycle in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_15930(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15930,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15934,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 379  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_15934(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k15932 in k15928 in k15736 in make-cycle in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_15934(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15741(t7,t6);}

/* k15893 in k15736 in make-cycle in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_15895(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15895,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15899,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 379  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_15899(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k15897 in k15893 in k15736 in make-cycle in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_15899(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15741(t7,t6);}

/* k15739 in k15736 in make-cycle in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_15741(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15741,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15744,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_15744(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[304]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15795,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 379  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[304]);}
else{
t6=t5;
f_15795(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[305]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15830,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 379  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[305]);}
else{
t7=t6;
f_15830(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15859,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 379  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_15859(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k15857 in k15739 in k15736 in make-cycle in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_15859(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15859,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15866,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15874,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k15872 in k15857 in k15739 in k15736 in make-cycle in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_15874(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 379  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_15866(2,t2,C_SCHEME_UNDEFINED);}}

/* k15864 in k15857 in k15739 in k15736 in make-cycle in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_15866(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_15744(t5,t4);}

/* k15828 in k15739 in k15736 in make-cycle in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_15830(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15830,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15834,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 379  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_15834(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k15832 in k15828 in k15739 in k15736 in make-cycle in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_15834(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15744(t7,t6);}

/* k15793 in k15739 in k15736 in make-cycle in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_15795(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15795,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15799,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 379  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_15799(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k15797 in k15793 in k15739 in k15736 in make-cycle in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_15799(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15744(t7,t6);}

/* k15742 in k15739 in k15736 in make-cycle in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_15744(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15744,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15747,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_15747(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 379  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k15745 in k15742 in k15739 in k15736 in make-cycle in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_15747(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15747,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15750,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  %alloc-pattern");
f_14912(t2);}

/* k15748 in k15745 in k15742 in k15739 in k15736 in make-cycle in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_15750(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15750,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[5])[1]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15756,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[5])[1]);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15762,a[2]=((C_word)li232),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  initialize-pattern");
f_14922(t3,t1,t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t2,C_retrieve2(lf[303],"next-in-cycle"),t5);}

/* a15761 in k15748 in k15745 in k15742 in k15739 in k15736 in make-cycle in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_15762(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_15762,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15774,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  pattern-data");
f_14641(t4,t3);}

/* k15772 in a15761 in k15748 in k15745 in k15742 in k15739 in k15736 in make-cycle in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_15774(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_car(t1);
C_trace("for-each");
t3=*((C_word*)lf[209]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k15754 in k15748 in k15745 in k15742 in k15739 in k15736 in make-cycle in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_15756(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* reset-period in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_15619(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15619,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15732,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  pattern?");
f_14608(t3,t2);}

/* k15730 in reset-period in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_15732(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15732,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15629,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  pattern-period");
f_14695(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_fix(1));}}

/* k15627 in k15730 in reset-period in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_15629(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15629,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15632,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=t5,a[6]=t3,tmp=(C_word)a,a+=7,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15717,a[2]=t6,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  period-stream");
f_14509(t7,t1);}

/* k15715 in k15627 in k15730 in reset-period in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_15717(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15717,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15724,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15728,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  period-stream");
f_14509(t3,((C_word*)t0)[3]);}
else{
t2=((C_word*)t0)[2];
f_15632(2,t2,C_SCHEME_UNDEFINED);}}

/* k15726 in k15715 in k15627 in k15730 in reset-period in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_15728(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  next-1");
f_15263(((C_word*)t0)[2],t1);}

/* k15722 in k15715 in k15627 in k15730 in reset-period in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_15724(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=((C_word*)t0)[3];
t3=(C_word)C_i_check_structure(t2,lf[256]);
C_trace("ChickenBridge.scm: 379  ##sys#block-set!");
t4=*((C_word*)lf[197]+1);
((C_proc5)(void*)(*((C_word*)t4+1)))(5,t4,((C_word*)t0)[2],t2,C_fix(2),t1);}

/* k15630 in k15627 in k15730 in reset-period in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_15632(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15632,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15714,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  period-length");
f_14491(t2,((C_word*)t0)[3]);}

/* k15712 in k15630 in k15627 in k15730 in reset-period in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_15714(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15714,2,t0,t1);}
t2=(C_word)C_eqp(t1,C_SCHEME_TRUE);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15640,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
t5=((C_word*)t0)[3];
t6=(C_word)C_i_check_structure(t5,lf[256]);
t7=t4;
f_15640(2,t7,(C_word)C_i_block_ref(t5,C_fix(4)));}
else{
C_trace("ChickenBridge.scm: 379  period-length");
f_14491(t4,((C_word*)t0)[3]);}}

/* k15638 in k15712 in k15630 in k15627 in k15730 in reset-period in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_15640(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15640,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15643,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15649,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15704,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  pattern-flags");
f_14623(t5,((C_word*)t0)[3]);}
else{
t5=t4;
f_15649(2,t5,C_SCHEME_FALSE);}}

/* k15702 in k15638 in k15712 in k15630 in k15627 in k15730 in reset-period in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_15704(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  bitwise-test");
f_7634(((C_word*)t0)[2],t1,C_fix(8));}

/* k15647 in k15638 in k15712 in k15630 in k15627 in k15730 in reset-period in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_15649(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15649,2,t0,t1);}
if(C_truep(t1)){
t2=C_fix(0);
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15652,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t3,tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15668,a[2]=t3,a[3]=((C_word)li230),tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  map-pattern-data");
f_15573(t4,t5,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_15643(t2,C_SCHEME_UNDEFINED);}}

/* a15667 in k15647 in k15638 in k15712 in k15630 in k15627 in k15730 in reset-period in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_15668(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_15668,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15697,a[2]=t2,a[3]=t1,a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  reset-period");
f_15619(t3,t2);}

/* k15695 in a15667 in k15647 in k15638 in k15712 in k15630 in k15627 in k15730 in reset-period in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_15697(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15697,2,t0,t1);}
if(C_truep((C_word)C_i_nequalp(t1,C_fix(0)))){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15678,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  pattern-period");
f_14695(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}}

/* k15676 in k15695 in a15667 in k15647 in k15638 in k15712 in k15630 in k15627 in k15730 in reset-period in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_15678(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15678,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15681,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15693,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  period-omit");
f_14545(t3,t1);}

/* k15691 in k15676 in k15695 in a15667 in k15647 in k15638 in k15712 in k15630 in k15627 in k15730 in reset-period in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_15693(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15693,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 379  period-omit-set!");
f_14536(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k15679 in k15676 in k15695 in a15667 in k15647 in k15638 in k15712 in k15630 in k15627 in k15730 in reset-period in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_15681(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15681,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(1));
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t3);}

/* k15650 in k15647 in k15638 in k15712 in k15630 in k15627 in k15730 in reset-period in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_15652(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15652,2,t0,t1);}
if(C_truep((C_word)C_i_greaterp(((C_word*)((C_word*)t0)[4])[1],C_fix(0)))){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15662,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 379  max");
t4=*((C_word*)lf[301]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,t3,C_fix(0));}
else{
t2=((C_word*)t0)[2];
f_15643(t2,C_SCHEME_UNDEFINED);}}

/* k15660 in k15650 in k15647 in k15638 in k15712 in k15630 in k15627 in k15730 in reset-period in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_15662(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_15643(t3,t2);}

/* k15641 in k15638 in k15712 in k15630 in k15627 in k15730 in reset-period in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_15643(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15643,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15646,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  period-count-set!");
f_14464(t2,((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}

/* k15644 in k15641 in k15638 in k15712 in k15630 in k15627 in k15730 in reset-period in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_15646(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* map-pattern-data in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_15573(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15573,NULL,3,t1,t2,t3);}
t4=t3;
t5=(C_word)C_i_check_structure(t4,lf[265]);
t6=(C_word)C_i_block_ref(t4,C_fix(13));
t7=t6;
((C_proc4)C_retrieve_proc(t7))(4,t7,t1,t2,t3);}

/* next-in-pattern in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_15564(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15564,NULL,2,t1,t2);}
t3=t2;
t4=(C_word)C_i_check_structure(t3,lf[265]);
t5=(C_word)C_i_block_ref(t3,C_fix(12));
t6=t5;
((C_proc3)C_retrieve_proc(t6))(3,t6,t1,t2);}

/* next-1 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_15263(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15263,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15270,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  pattern?");
f_14608(t3,t2);}

/* k15268 in next-1 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_15270(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15270,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15273,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  pattern-period");
f_14695(t2,((C_word*)t0)[2]);}
else{
if(C_truep((C_word)C_i_closurep(((C_word*)t0)[2]))){
C_trace("ChickenBridge.scm: 379  obj");
t2=((C_word*)t0)[2];
((C_proc2)C_retrieve_proc(t2))(2,t2,((C_word*)t0)[3]);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15559,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  promise?");
t3=C_retrieve(lf[300]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}}}

/* k15557 in k15268 in next-1 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_15559(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 379  force");
t2=C_retrieve(lf[299]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}}

/* k15271 in k15268 in next-1 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_15273(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15273,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15276,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15544,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t4,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  period-count");
f_14473(t5,t1);}

/* k15542 in k15271 in k15268 in next-1 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_15544(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15544,2,t0,t1);}
if(C_truep((C_word)C_i_nequalp(t1,C_fix(0)))){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15499,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15536,a[2]=t2,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  period-reps");
f_14563(t3,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[4];
f_15276(2,t2,C_SCHEME_UNDEFINED);}}

/* k15534 in k15542 in k15271 in k15268 in next-1 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_15536(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15536,2,t0,t1);}
t2=((C_word*)t0)[4];
t3=(C_word)C_i_check_structure(t2,lf[265]);
t4=(C_word)C_i_block_ref(t2,C_fix(8));
if(C_truep((C_word)C_i_greater_or_equalp(t1,t4))){
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15528,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  pattern-value-set!");
f_14704(t5,((C_word*)t0)[4],lf[294]);}
else{
t5=((C_word*)t0)[2];
f_15499(t5,C_SCHEME_UNDEFINED);}}

/* k15526 in k15534 in k15542 in k15271 in k15268 in next-1 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_15528(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15528,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15531,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  pattern-state-set!");
f_14722(t2,((C_word*)t0)[2],lf[292]);}

/* k15529 in k15526 in k15534 in k15542 in k15271 in k15268 in next-1 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_15531(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[294]);
t3=((C_word*)t0)[2];
f_15499(t3,t2);}

/* k15497 in k15542 in k15271 in k15268 in next-1 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_15499(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15499,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15505,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=((C_word*)((C_word*)t0)[4])[1];
if(C_truep(t3)){
t4=t2;
f_15505(t4,C_SCHEME_FALSE);}
else{
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15522,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  reset-period");
f_15619(t4,((C_word*)t0)[2]);}}

/* k15520 in k15497 in k15542 in k15271 in k15268 in next-1 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_15522(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_15505(t2,(C_word)C_i_nequalp(t1,C_fix(0)));}

/* k15503 in k15497 in k15542 in k15271 in k15268 in next-1 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_15505(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15505,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,lf[280]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15509,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  pattern-value-set!");
f_14704(t3,((C_word*)t0)[2],lf[280]);}
else{
t2=((C_word*)t0)[3];
f_15276(2,t2,C_SCHEME_UNDEFINED);}}

/* k15507 in k15503 in k15497 in k15542 in k15271 in k15268 in next-1 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_15509(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  pattern-state-set!");
f_14722(((C_word*)t0)[3],((C_word*)t0)[2],lf[292]);}

/* k15274 in k15271 in k15268 in next-1 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_15276(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15276,2,t0,t1);}
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[5])[1]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15282,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  pattern-flags");
f_14623(t2,((C_word*)t0)[3]);}}

/* k15280 in k15274 in k15271 in k15268 in next-1 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_15282(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15282,2,t0,t1);}
t2=((C_word*)t0)[4];
t3=(C_word)C_i_check_structure(t2,lf[265]);
t4=(C_word)C_i_block_ref(t2,C_fix(9));
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_15288,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t4,a[5]=t8,a[6]=((C_word*)t0)[4],a[7]=t6,a[8]=((C_word*)t0)[3],tmp=(C_word)a,a+=9,tmp);
t10=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15374,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],a[5]=t9,a[6]=t8,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 379  bitwise-test");
f_7634(t10,t1,C_fix(1));}

/* k15372 in k15280 in k15274 in k15271 in k15268 in next-1 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_15374(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15374,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15377,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15390,a[2]=((C_word*)t0)[4],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  next-in-pattern");
f_15564(t3,((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15397,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15486,a[2]=((C_word*)t0)[3],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  bitwise-test");
f_7634(t3,((C_word*)t0)[2],C_fix(8));}}

/* k15484 in k15372 in k15280 in k15274 in k15271 in k15268 in next-1 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_15486(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15486,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15493,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  period-length");
f_14491(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_15397(t2,C_SCHEME_FALSE);}}

/* k15491 in k15484 in k15372 in k15280 in k15274 in k15271 in k15268 in next-1 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_15493(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_15397(t2,(C_word)C_eqp(t1,C_SCHEME_TRUE));}

/* k15395 in k15372 in k15280 in k15274 in k15271 in k15268 in next-1 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_15397(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15397,NULL,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15399,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t3,a[5]=((C_word*)t0)[5],a[6]=((C_word)li226),tmp=(C_word)a,a+=7,tmp));
t5=((C_word*)t3)[1];
f_15399(t5,((C_word*)t0)[2],t1,C_SCHEME_FALSE);}

/* do1753 in k15395 in k15372 in k15280 in k15274 in k15271 in k15268 in next-1 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_15399(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15399,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
if(C_truep(((C_word*)t4)[1])){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_FALSE);}
else{
t5=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_15406,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t4,a[5]=t2,a[6]=t1,a[7]=((C_word*)t0)[4],a[8]=((C_word*)t0)[5],tmp=(C_word)a,a+=9,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15448,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=t7,a[5]=((C_word)li225),tmp=(C_word)a,a+=6,tmp));
t9=((C_word*)t7)[1];
f_15448(t9,t5);}}

/* do1757 in do1753 in k15395 in k15372 in k15280 in k15274 in k15271 in k15268 in next-1 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_15448(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15448,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15483,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  pattern-datum");
f_14677(t2,((C_word*)t0)[3]);}

/* k15481 in do1757 in do1753 in k15395 in k15372 in k15280 in k15274 in k15271 in k15268 in next-1 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_15483(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15483,2,t0,t1);}
t2=(C_word)C_eqp(t1,lf[280]);
if(C_truep(t2)){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15458,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15465,a[2]=((C_word*)t0)[3],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
if(C_truep(((C_word*)t0)[2])){
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15472,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  next-in-pattern");
f_15564(t5,((C_word*)t0)[3]);}
else{
C_trace("ChickenBridge.scm: 379  next-in-pattern");
f_15564(t4,((C_word*)t0)[3]);}}
else{
t3=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}}

/* k15470 in k15481 in do1757 in do1753 in k15395 in k15372 in k15280 in k15274 in k15271 in k15268 in next-1 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_15472(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15472,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15617,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  pattern?");
f_14608(t2,t1);}

/* k15615 in k15470 in k15481 in do1757 in do1753 in k15395 in k15372 in k15280 in k15274 in k15271 in k15268 in next-1 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_15617(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15617,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15592,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  pattern-period");
f_14695(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_15465(2,t2,((C_word*)t0)[2]);}}

/* k15590 in k15615 in k15470 in k15481 in do1757 in do1753 in k15395 in k15372 in k15280 in k15274 in k15271 in k15268 in next-1 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_15592(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15592,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15613,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  period-omit");
f_14545(t2,t1);}

/* k15611 in k15590 in k15615 in k15470 in k15481 in do1757 in do1753 in k15395 in k15372 in k15280 in k15274 in k15271 in k15268 in next-1 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_15613(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15613,2,t0,t1);}
if(C_truep((C_word)C_i_greaterp(t1,C_fix(0)))){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15601,a[2]=((C_word*)t0)[4],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15609,a[2]=((C_word*)t0)[3],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  period-omit");
f_14545(t3,((C_word*)t0)[3]);}
else{
t2=((C_word*)t0)[4];
f_15465(2,t2,((C_word*)t0)[2]);}}

/* k15607 in k15611 in k15590 in k15615 in k15470 in k15481 in do1757 in do1753 in k15395 in k15372 in k15280 in k15274 in k15271 in k15268 in next-1 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_15609(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15609,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 379  period-omit-set!");
f_14536(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k15599 in k15611 in k15590 in k15615 in k15470 in k15481 in do1757 in do1753 in k15395 in k15372 in k15280 in k15274 in k15271 in k15268 in next-1 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_15601(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_15465(2,t2,lf[280]);}

/* k15463 in k15481 in do1757 in do1753 in k15395 in k15372 in k15280 in k15274 in k15271 in k15268 in next-1 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_15465(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  pattern-datum-set!");
f_14668(((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k15456 in k15481 in do1757 in do1753 in k15395 in k15372 in k15280 in k15274 in k15271 in k15268 in next-1 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_15458(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[3])[1];
f_15448(t2,((C_word*)t0)[2]);}

/* k15404 in do1753 in k15395 in k15372 in k15280 in k15274 in k15271 in k15268 in next-1 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_15406(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15406,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_15410,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15446,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  pattern-datum");
f_14677(t3,((C_word*)t0)[3]);}

/* k15444 in k15404 in do1753 in k15395 in k15372 in k15280 in k15274 in k15271 in k15268 in next-1 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_15446(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  next-1");
f_15263(((C_word*)t0)[2],t1);}

/* k15408 in k15404 in do1753 in k15395 in k15372 in k15280 in k15274 in k15271 in k15268 in next-1 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_15410(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15410,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15413,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15429,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15442,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  pattern-datum");
f_14677(t5,((C_word*)t0)[3]);}

/* k15440 in k15408 in k15404 in do1753 in k15395 in k15372 in k15280 in k15274 in k15271 in k15268 in next-1 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_15442(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  pattern?");
f_14608(((C_word*)t0)[2],t1);}

/* k15427 in k15408 in k15404 in do1753 in k15395 in k15372 in k15280 in k15274 in k15271 in k15268 in next-1 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_15429(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15429,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15433,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15437,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  pattern-datum");
f_14677(t3,((C_word*)t0)[2]);}
else{
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,lf[292]);
t3=((C_word*)t0)[3];
f_15413(t3,t2);}}

/* k15435 in k15427 in k15408 in k15404 in do1753 in k15395 in k15372 in k15280 in k15274 in k15271 in k15268 in next-1 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_15437(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  pattern-state");
f_14731(((C_word*)t0)[2],t1);}

/* k15431 in k15427 in k15408 in k15404 in do1753 in k15395 in k15372 in k15280 in k15274 in k15271 in k15268 in next-1 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_15433(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_15413(t3,t2);}

/* k15411 in k15408 in k15404 in do1753 in k15395 in k15372 in k15280 in k15274 in k15271 in k15268 in next-1 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_15413(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15413,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15416,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[3])[1],lf[280]);
if(C_truep(t3)){
C_trace("ChickenBridge.scm: 379  pattern-datum-set!");
f_14668(t2,((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}
else{
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=t2;
f_15416(2,t5,t4);}}

/* k15414 in k15411 in k15408 in k15404 in do1753 in k15395 in k15372 in k15280 in k15274 in k15271 in k15268 in next-1 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_15416(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[5])[1];
f_15399(t2,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k15388 in k15372 in k15280 in k15274 in k15271 in k15268 in next-1 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_15390(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  pattern-datum-set!");
f_14668(((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k15375 in k15372 in k15280 in k15274 in k15271 in k15268 in next-1 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_15377(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15377,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15381,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15386,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  pattern-datum");
f_14677(t3,((C_word*)t0)[2]);}

/* k15384 in k15375 in k15372 in k15280 in k15274 in k15271 in k15268 in next-1 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_15386(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  next-1");
f_15263(((C_word*)t0)[2],t1);}

/* k15379 in k15375 in k15372 in k15280 in k15274 in k15271 in k15268 in next-1 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_15381(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[292]);
t4=((C_word*)t0)[2];
f_15288(2,t4,t3);}

/* k15286 in k15280 in k15274 in k15271 in k15268 in next-1 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_15288(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15288,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15291,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[5])[1],lf[292]);
if(C_truep(t3)){
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15333,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15345,a[2]=((C_word*)t0)[3],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  period-count");
f_14473(t5,((C_word*)t0)[3]);}
else{
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15348,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15368,a[2]=((C_word*)t0)[6],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  bitwise-test");
f_7634(t5,((C_word*)t0)[2],C_fix(64));}}

/* k15366 in k15286 in k15280 in k15274 in k15271 in k15268 in next-1 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_15368(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 379  pattern-datum-set!");
f_14668(((C_word*)t0)[3],((C_word*)t0)[2],lf[280]);}
else{
t2=((C_word*)t0)[3];
f_15348(2,t2,C_SCHEME_UNDEFINED);}}

/* k15346 in k15286 in k15280 in k15274 in k15271 in k15268 in next-1 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_15348(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15348,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15354,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  bitwise-test");
f_7634(t2,((C_word*)t0)[2],C_fix(16));}

/* k15352 in k15346 in k15286 in k15280 in k15274 in k15271 in k15268 in next-1 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_15354(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15354,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15365,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  period-count");
f_14473(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_15291(2,t2,C_SCHEME_UNDEFINED);}}

/* k15363 in k15352 in k15346 in k15286 in k15280 in k15274 in k15271 in k15268 in next-1 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_15365(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15365,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 379  period-count-set!");
f_14464(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k15343 in k15286 in k15280 in k15274 in k15271 in k15268 in next-1 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_15345(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15345,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 379  period-count-set!");
f_14464(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k15331 in k15286 in k15280 in k15274 in k15271 in k15268 in next-1 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_15333(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15333,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15336,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  pattern-datum-set!");
f_14668(t2,((C_word*)t0)[2],lf[280]);}

/* k15334 in k15331 in k15286 in k15280 in k15274 in k15271 in k15268 in next-1 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_15336(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_FALSE);
t3=((C_word*)t0)[2];
f_15291(2,t3,t2);}

/* k15289 in k15286 in k15280 in k15274 in k15271 in k15268 in next-1 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_15291(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15291,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15294,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15327,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  period-count");
f_14473(t3,((C_word*)t0)[2]);}

/* k15325 in k15289 in k15286 in k15280 in k15274 in k15271 in k15268 in next-1 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_15327(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15327,2,t0,t1);}
if(C_truep((C_word)C_i_nequalp(t1,C_fix(0)))){
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,lf[292]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15322,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  period-reps");
f_14563(t3,((C_word*)t0)[3]);}
else{
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[4])[1]);
t3=((C_word*)t0)[2];
f_15294(2,t3,t2);}}

/* k15320 in k15325 in k15289 in k15286 in k15280 in k15274 in k15271 in k15268 in next-1 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_15322(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15322,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,C_fix(1),t1);
t3=((C_word*)t0)[3];
t4=(C_word)C_i_check_structure(t3,lf[256]);
C_trace("ChickenBridge.scm: 379  ##sys#block-set!");
t5=*((C_word*)lf[197]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,((C_word*)t0)[2],t3,C_fix(6),t2);}

/* k15292 in k15289 in k15286 in k15280 in k15274 in k15271 in k15268 in next-1 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_15294(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15294,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15297,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t0)[2])){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15307,a[2]=t2,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  retfn");
t4=((C_word*)t0)[2];
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[5])[1]);}
else{
t3=t2;
f_15297(t3,C_SCHEME_UNDEFINED);}}

/* k15305 in k15292 in k15289 in k15286 in k15280 in k15274 in k15271 in k15268 in next-1 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_15307(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_15297(t3,t2);}

/* k15295 in k15292 in k15289 in k15286 in k15280 in k15274 in k15271 in k15268 in next-1 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_15297(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15297,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15300,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  pattern-state-set!");
f_14722(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k15298 in k15295 in k15292 in k15289 in k15286 in k15280 in k15274 in k15271 in k15268 in next-1 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_15300(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15300,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15303,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  pattern-value-set!");
f_14704(t2,((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}

/* k15301 in k15298 in k15295 in k15292 in k15289 in k15286 in k15280 in k15274 in k15271 in k15268 in next-1 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_15303(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* next in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_15140(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+16)){
C_save_and_reclaim((void*)tr3rv,(void*)f_15140r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest_vector(a,C_rest_count(0));
f_15140r(t0,t1,t2,t3);}}

static void C_ccall f_15140r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a=C_alloc(16);
t4=(C_word)C_vemptyp(t3);
t5=(C_truep(t4)?C_SCHEME_FALSE:(C_word)C_i_vector_ref(t3,C_fix(0)));
if(C_truep(t5)){
if(C_truep((C_word)C_i_numberp(t5))){
t6=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15161,a[2]=t2,a[3]=t8,a[4]=t6,a[5]=t5,a[6]=((C_word)li222),tmp=(C_word)a,a+=7,tmp));
t10=((C_word*)t8)[1];
f_15161(t10,t1,C_fix(0),t6);}
else{
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15199,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  pattern?");
f_14608(t6,t2);}}
else{
C_trace("ChickenBridge.scm: 379  next-1");
f_15263(t1,t2);}}

/* k15197 in next in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_15199(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15199,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15209,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  next-1");
f_15263(t3,((C_word*)t0)[3]);}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_list(&a,1,((C_word*)t0)[3]));}}

/* k15207 in k15197 in next in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_15209(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15209,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15211,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word*)t0)[4],a[5]=((C_word)li223),tmp=(C_word)a,a+=6,tmp));
t5=((C_word*)t3)[1];
f_15211(t5,((C_word*)t0)[2],t1,((C_word*)t0)[4],C_SCHEME_FALSE);}

/* do1729 in k15207 in k15197 in next in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_15211(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15211,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t7=(C_word)C_eqp(((C_word*)t5)[1],lf[294]);
t8=(C_truep(t7)?t7:((C_word*)t6)[1]);
if(C_truep(t8)){
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,(C_word)C_i_cdr(((C_word*)t0)[4]));}
else{
t9=(C_word)C_a_i_list(&a,1,((C_word*)t5)[1]);
t10=(C_word)C_i_set_cdr(t3,t9);
t11=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15230,a[2]=t6,a[3]=t5,a[4]=t1,a[5]=((C_word*)t0)[3],a[6]=t3,tmp=(C_word)a,a+=7,tmp);
t12=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15240,a[2]=((C_word*)t0)[2],a[3]=t5,a[4]=t11,a[5]=t6,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  eop?");
t13=C_retrieve(lf[291]);
((C_proc3)C_retrieve_proc(t13))(3,t13,t12,((C_word*)t0)[2]);}}

/* k15238 in do1729 in k15207 in k15197 in next in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_15240(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15240,2,t0,t1);}
if(C_truep(t1)){
t2=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t3=((C_word*)t0)[4];
f_15230(t3,t2);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15245,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  next-1");
f_15263(t2,((C_word*)t0)[2]);}}

/* k15243 in k15238 in do1729 in k15207 in k15197 in next in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_15245(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_15230(t3,t2);}

/* k15228 in do1729 in k15207 in k15197 in next in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_15230(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[6]);
t3=((C_word*)((C_word*)t0)[5])[1];
f_15211(t3,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],t2,((C_word*)((C_word*)t0)[2])[1]);}

/* do1722 in next in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_15161(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15161,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_greater_or_equalp(t2,((C_word*)t0)[5]))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_cdr(((C_word*)t0)[4]));}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15193,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  next-1");
f_15263(t4,((C_word*)t0)[2]);}}

/* k15191 in do1722 in next in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_15193(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15193,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
t3=(C_word)C_i_set_cdr(((C_word*)t0)[5],t2);
t4=(C_word)C_a_i_plus(&a,2,C_fix(1),((C_word*)t0)[4]);
t5=(C_word)C_i_cdr(((C_word*)t0)[5]);
t6=((C_word*)((C_word*)t0)[3])[1];
f_15161(t6,((C_word*)t0)[2],t4,t5);}

/* eod? in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_15121(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_15121,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15128,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  pattern?");
f_14608(t3,t2);}

/* k15126 in eod? in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_15128(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15128,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15135,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  pattern-value");
t3=C_retrieve2(lf[274],"pattern-value");
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_eqp(((C_word*)t0)[2],lf[294]));}}

/* k15133 in k15126 in eod? in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_15135(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  eod?");
t2=C_retrieve(lf[293]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* eop? in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_15102(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_15102,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15109,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  pattern?");
f_14608(t3,t2);}

/* k15107 in eop? in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_15109(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15109,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15116,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  pattern-state");
f_14731(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_eqp(((C_word*)t0)[2],lf[292]));}}

/* k15114 in k15107 in eop? in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_15116(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  eop?");
t2=C_retrieve(lf[291]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* initialize-pattern in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_14922(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7,C_word t8,C_word t9,C_word t10){
C_word tmp;
C_word t11;
C_word t12;
C_word t13;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14922,NULL,10,t1,t2,t3,t4,t5,t6,t7,t8,t9,t10);}
t11=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_14926,a[2]=t7,a[3]=t10,a[4]=t9,a[5]=t5,a[6]=t11,a[7]=t1,a[8]=t8,a[9]=t4,a[10]=t2,tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 379  pattern-data-set!");
f_14632(t12,t2,t3);}

/* k14924 in initialize-pattern in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_14926(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14926,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_14929,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],tmp=(C_word)a,a+=10,tmp);
t3=((C_word*)t0)[10];
t4=((C_word*)t0)[2];
t5=(C_word)C_i_check_structure(t3,lf[265]);
C_trace("ChickenBridge.scm: 379  ##sys#block-set!");
t6=*((C_word*)lf[197]+1);
((C_proc5)(void*)(*((C_word*)t6+1)))(5,t6,t2,t3,C_fix(3),t4);}

/* k14927 in k14924 in initialize-pattern in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_14929(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14929,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_14932,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],tmp=(C_word)a,a+=9,tmp);
t3=((C_word*)t0)[9];
t4=((C_word*)t0)[2];
t5=(C_word)C_i_check_structure(t3,lf[265]);
C_trace("ChickenBridge.scm: 379  ##sys#block-set!");
t6=*((C_word*)lf[197]+1);
((C_proc5)(void*)(*((C_word*)t6+1)))(5,t6,t2,t3,C_fix(13),t4);}

/* k14930 in k14927 in k14924 in initialize-pattern in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_14932(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14932,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14935,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
t3=((C_word*)t0)[8];
t4=((C_word*)t0)[2];
t5=(C_word)C_i_check_structure(t3,lf[265]);
C_trace("ChickenBridge.scm: 379  ##sys#block-set!");
t6=*((C_word*)lf[197]+1);
((C_proc5)(void*)(*((C_word*)t6+1)))(5,t6,t2,t3,C_fix(12),t4);}

/* k14933 in k14930 in k14927 in k14924 in initialize-pattern in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_14935(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14935,2,t0,t1);}
t2=C_SCHEME_TRUE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_14938,a[2]=t3,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15092,a[2]=t3,a[3]=((C_word)li218),tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  map-pattern-data");
f_15573(t4,t5,((C_word*)t0)[7]);}

/* a15091 in k14933 in k14930 in k14927 in k14924 in initialize-pattern in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_15092(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_15092,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15099,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  pattern?");
f_14608(t3,t2);}

/* k15097 in a15091 in k14933 in k14930 in k14927 in k14924 in initialize-pattern in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_15099(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_FALSE);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}}

/* k14936 in k14933 in k14930 in k14927 in k14924 in initialize-pattern in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_14938(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14938,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14941,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
t3=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[4])[1],C_fix(1));
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=t2;
f_14941(t5,t4);}
else{
t3=t2;
f_14941(t3,C_SCHEME_UNDEFINED);}}

/* k14939 in k14936 in k14933 in k14930 in k14927 in k14924 in initialize-pattern in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_14941(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14941,NULL,2,t0,t1);}
t2=((C_word*)t0)[7];
t3=(C_word)C_i_check_structure(t2,lf[265]);
t4=(C_word)C_i_block_ref(t2,C_fix(10));
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14947,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t6=(C_word)C_eqp(t4,lf[281]);
if(C_truep(t6)){
t7=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(8));
t8=C_mutate(((C_word *)((C_word*)t0)[3])+1,t7);
t9=t5;
f_14947(2,t9,t8);}
else{
t7=(C_word)C_eqp(t4,lf[288]);
if(C_truep(t7)){
t8=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(16));
t9=C_mutate(((C_word *)((C_word*)t0)[3])+1,t8);
t10=t5;
f_14947(2,t10,t9);}
else{
C_trace("ChickenBridge.scm: 379  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t5,lf[289],t4);}}}

/* k14945 in k14939 in k14936 in k14933 in k14930 in k14927 in k14924 in initialize-pattern in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_14947(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14947,2,t0,t1);}
t2=((C_word*)t0)[7];
t3=(C_word)C_i_check_structure(t2,lf[265]);
t4=(C_word)C_i_block_ref(t2,C_fix(11));
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14953,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
t6=(C_word)C_eqp(t4,lf[282]);
if(C_truep(t6)){
t7=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(32));
t8=C_mutate(((C_word *)((C_word*)t0)[3])+1,t7);
t9=t5;
f_14953(2,t9,t8);}
else{
t7=(C_word)C_eqp(t4,lf[286]);
if(C_truep(t7)){
t8=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(64));
t9=C_mutate(((C_word *)((C_word*)t0)[3])+1,t8);
t10=t5;
f_14953(2,t10,t9);}
else{
C_trace("ChickenBridge.scm: 379  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t5,lf[287],t4);}}}

/* k14951 in k14945 in k14939 in k14936 in k14933 in k14930 in k14927 in k14924 in initialize-pattern in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_14953(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14953,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14956,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15016,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  bitwise-test");
f_7634(t3,((C_word*)((C_word*)t0)[3])[1],C_fix(16));}

/* k15014 in k14951 in k14945 in k14939 in k14936 in k14933 in k14930 in k14927 in k14924 in initialize-pattern in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_15016(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15016,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_bitwise_and(&a,2,((C_word*)((C_word*)t0)[3])[1],lf[284]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_14956(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15030,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  bitwise-test");
f_7634(t2,((C_word*)((C_word*)t0)[3])[1],C_fix(1));}}

/* k15028 in k15014 in k14951 in k14945 in k14939 in k14936 in k14933 in k14930 in k14927 in k14924 in initialize-pattern in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_15030(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15030,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_bitwise_and(&a,2,((C_word*)((C_word*)t0)[3])[1],lf[285]);
t3=(C_word)C_a_i_bitwise_ior(&a,2,t2,C_fix(16));
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_14956(t5,t4);}
else{
t2=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(8));
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_14956(t4,t3);}}

/* k14954 in k14951 in k14945 in k14939 in k14936 in k14933 in k14930 in k14927 in k14924 in initialize-pattern in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_14956(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14956,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14959,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_numberp(((C_word*)t0)[2]);
t4=(C_truep(t3)?(C_word)C_i_greaterp(((C_word*)t0)[2],C_fix(0)):C_SCHEME_FALSE);
t5=(C_truep(t4)?((C_word*)t0)[2]:C_fix(1073741823));
t6=((C_word*)t0)[4];
t7=(C_word)C_i_check_structure(t6,lf[265]);
C_trace("ChickenBridge.scm: 379  ##sys#block-set!");
t8=*((C_word*)lf[197]+1);
((C_proc5)(void*)(*((C_word*)t8+1)))(5,t8,t2,t6,C_fix(8),t5);}

/* k14957 in k14954 in k14951 in k14945 in k14939 in k14936 in k14933 in k14930 in k14927 in k14924 in initialize-pattern in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_14959(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14959,2,t0,t1);}
t2=((C_word*)t0)[6];
t3=(C_truep(t2)?t2:((C_word*)t0)[5]);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14965,a[2]=((C_word*)t0)[5],a[3]=t3,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
t5=((C_word*)t0)[6];
if(C_truep(t5)){
t6=t4;
f_14965(t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[2])[1],C_fix(2));
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t6);
t8=t4;
f_14965(t8,t7);}}

/* k14963 in k14957 in k14954 in k14951 in k14945 in k14939 in k14936 in k14933 in k14930 in k14927 in k14924 in initialize-pattern in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_14965(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14965,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14968,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14978,a[2]=t2,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_i_numberp(((C_word*)t0)[3]);
t5=(C_truep(t4)?t4:(C_word)C_eqp(((C_word*)t0)[3],C_SCHEME_TRUE));
if(C_truep(t5)){
C_trace("ChickenBridge.scm: 379  make-period");
f_14452(t3,C_fix(0),((C_word*)t0)[3],C_SCHEME_FALSE,((C_word*)t0)[2],C_fix(0),C_fix(0));}
else{
C_trace("ChickenBridge.scm: 379  make-period");
f_14452(t3,C_fix(0),C_SCHEME_FALSE,((C_word*)t0)[3],((C_word*)t0)[2],C_fix(0),C_fix(0));}}

/* k14976 in k14963 in k14957 in k14954 in k14951 in k14945 in k14939 in k14936 in k14933 in k14930 in k14927 in k14924 in initialize-pattern in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_14978(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=((C_word*)t0)[3];
t3=(C_word)C_i_check_structure(t2,lf[265]);
C_trace("ChickenBridge.scm: 379  ##sys#block-set!");
t4=*((C_word*)lf[197]+1);
((C_proc5)(void*)(*((C_word*)t4+1)))(5,t4,((C_word*)t0)[2],t2,C_fix(5),t1);}

/* k14966 in k14963 in k14957 in k14954 in k14951 in k14945 in k14939 in k14936 in k14933 in k14930 in k14927 in k14924 in initialize-pattern in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_14968(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14968,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14971,a[2]=((C_word*)t0)[4],tmp=(C_word)a,a+=3,tmp);
t3=((C_word*)t0)[3];
t4=((C_word*)((C_word*)t0)[2])[1];
t5=(C_word)C_i_check_structure(t3,lf[265]);
C_trace("ChickenBridge.scm: 379  ##sys#block-set!");
t6=*((C_word*)lf[197]+1);
((C_proc5)(void*)(*((C_word*)t6+1)))(5,t6,t2,t3,C_fix(1),t4);}

/* k14969 in k14966 in k14963 in k14957 in k14954 in k14951 in k14945 in k14939 in k14936 in k14933 in k14930 in k14927 in k14924 in initialize-pattern in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_14971(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  values");
C_values(2,0,((C_word*)t0)[2]);}

/* %alloc-pattern in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_14912(C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14912,NULL,1,t1);}
t2=lf[280];
t3=lf[280];
t4=lf[280];
t5=lf[281];
t6=lf[282];
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_a_i_record(&a,15,lf[265],C_fix(0),C_SCHEME_END_OF_LIST,C_SCHEME_FALSE,t2,C_SCHEME_FALSE,t3,t4,C_fix(1073741823),C_SCHEME_FALSE,t5,t6,C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE));}

/* pattern-cache in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_14857(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14857,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[265]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(14)));}

/* pattern-cache-set! in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_14848(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14848,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[265]);
C_trace("ChickenBridge.scm: 379  ##sys#block-set!");
t5=*((C_word*)lf[197]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(14),t3);}

/* pattern-state in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_14731(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14731,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[265]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(7)));}

/* pattern-state-set! in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_14722(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14722,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[265]);
C_trace("ChickenBridge.scm: 379  ##sys#block-set!");
t5=*((C_word*)lf[197]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(7),t3);}

/* f_14713 in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_14713(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_14713,3,t0,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[265]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(6)));}

/* pattern-value-set! in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_14704(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14704,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[265]);
C_trace("ChickenBridge.scm: 379  ##sys#block-set!");
t5=*((C_word*)lf[197]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(6),t3);}

/* pattern-period in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_14695(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14695,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[265]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(5)));}

/* pattern-datum in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_14677(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14677,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[265]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(4)));}

/* pattern-datum-set! in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_14668(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14668,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[265]);
C_trace("ChickenBridge.scm: 379  ##sys#block-set!");
t5=*((C_word*)lf[197]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(4),t3);}

/* pattern-length in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_14659(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14659,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[265]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(3)));}

/* pattern-data in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_14641(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14641,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[265]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* pattern-data-set! in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_14632(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14632,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[265]);
C_trace("ChickenBridge.scm: 379  ##sys#block-set!");
t5=*((C_word*)lf[197]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(2),t3);}

/* pattern-flags in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_14623(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14623,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[265]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* pattern? in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_14608(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14608,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_structurep(t2,lf[265]));}

/* period-reps in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_14563(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14563,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[256]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(6)));}

/* period-omit in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_14545(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14545,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[256]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(5)));}

/* period-omit-set! in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_14536(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14536,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[256]);
C_trace("ChickenBridge.scm: 379  ##sys#block-set!");
t5=*((C_word*)lf[197]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(5),t3);}

/* period-stream in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_14509(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14509,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[256]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(3)));}

/* period-length in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_14491(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14491,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[256]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* period-count in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_14473(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14473,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[256]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* period-count-set! in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_14464(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14464,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[256]);
C_trace("ChickenBridge.scm: 379  ##sys#block-set!");
t5=*((C_word*)lf[197]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(1),t3);}

/* make-period in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_14452(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7){
C_word tmp;
C_word t8;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14452,NULL,7,t1,t2,t3,t4,t5,t6,t7);}
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)C_a_i_record(&a,7,lf[256],t2,t3,t4,t5,t6,t7));}

/* import-spear-frames in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_14326(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_14326,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14332,a[2]=((C_word)li193),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  with-input-from-file");
t4=C_retrieve(lf[254]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t1,t2,t3);}

/* a14331 in import-spear-frames in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_14332(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14332,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14336,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  current-input-port");
t3=*((C_word*)lf[253]+1);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k14334 in a14331 in import-spear-frames in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_14336(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14336,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14337,a[2]=((C_word)li188),tmp=(C_word)a,a+=3,tmp);
t3=C_SCHEME_FALSE;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14354,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=t1,a[5]=t4,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  rhdr");
f_14337(t5,t1);}

/* k14352 in k14334 in a14331 in import-spear-frames in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_14354(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14354,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14357,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_equalp(((C_word*)((C_word*)t0)[5])[1],lf[251]))){
t4=t3;
f_14357(2,t4,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,lf[252],((C_word*)t0)[4]);}}

/* k14355 in k14352 in k14334 in a14331 in import-spear-frames in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_14357(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14357,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14361,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  rhdr");
f_14337(t2,((C_word*)t0)[4]);}

/* k14359 in k14355 in k14352 in k14334 in a14331 in import-spear-frames in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_14361(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14361,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14364,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_equalp(((C_word*)((C_word*)t0)[5])[1],lf[249]))){
t4=t3;
f_14364(2,t4,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,lf[250],((C_word*)t0)[4]);}}

/* k14362 in k14359 in k14355 in k14352 in k14334 in a14331 in import-spear-frames in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_14364(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14364,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14367,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14416,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[2],a[4]=t4,a[5]=((C_word*)t0)[3],a[6]=((C_word)li192),tmp=(C_word)a,a+=7,tmp));
t6=((C_word*)t4)[1];
f_14416(t6,t2);}

/* do1477 in k14362 in k14359 in k14355 in k14352 in k14334 in a14331 in import-spear-frames in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_14416(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14416,NULL,2,t0,t1);}
if(C_truep((C_word)C_i_equalp(((C_word*)((C_word*)t0)[5])[1],lf[248]))){
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14427,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  rhdr");
f_14337(t2,((C_word*)t0)[2]);}}

/* k14425 in do1477 in k14362 in k14359 in k14355 in k14352 in k14334 in a14331 in import-spear-frames in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_14427(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=((C_word*)((C_word*)t0)[3])[1];
f_14416(t3,((C_word*)t0)[2]);}

/* k14365 in k14362 in k14359 in k14355 in k14352 in k14334 in a14331 in import-spear-frames in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_14367(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14367,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t3=t2;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14377,a[2]=((C_word*)t0)[2],a[3]=t4,a[4]=((C_word*)t0)[3],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  read-line");
t6=C_retrieve(lf[244]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)t0)[3]);}

/* k14375 in k14365 in k14362 in k14359 in k14355 in k14352 in k14334 in a14331 in import-spear-frames in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_14377(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14377,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14379,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t3,a[5]=((C_word*)t0)[5],a[6]=((C_word)li191),tmp=(C_word)a,a+=7,tmp));
t5=((C_word*)t3)[1];
f_14379(t5,((C_word*)t0)[2],t1,C_SCHEME_FALSE);}

/* do1487 in k14375 in k14365 in k14362 in k14359 in k14355 in k14352 in k14334 in a14331 in import-spear-frames in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_14379(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14379,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_eofp(t2))){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_i_cdr(((C_word*)t0)[5]));}
else{
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14393,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=t4,tmp=(C_word)a,a+=7,tmp);
t6=t2;
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14223,a[2]=t5,a[3]=t6,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  open-input-string");
t8=C_retrieve(lf[247]);
((C_proc3)C_retrieve_proc(t8))(3,t8,t7,t6);}}

/* k14221 in do1487 in k14375 in k14365 in k14362 in k14359 in k14355 in k14352 in k14334 in a14331 in import-spear-frames in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_14223(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[23],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14223,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14224,a[2]=((C_word*)t0)[3],a[3]=((C_word)li189),tmp=(C_word)a,a+=4,tmp);
t3=C_SCHEME_FALSE;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t8=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t9=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_14247,a[2]=t1,a[3]=t2,a[4]=t7,a[5]=((C_word*)t0)[2],a[6]=t8,a[7]=t6,a[8]=t4,tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 378  rdat");
t10=t2;
f_14224(t10,t9,t1);}

/* k14245 in k14221 in do1487 in k14375 in k14365 in k14362 in k14359 in k14355 in k14352 in k14334 in a14331 in import-spear-frames in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_14247(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14247,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_14251,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 378  rdat");
t4=((C_word*)t0)[3];
f_14224(t4,t3,((C_word*)t0)[2]);}

/* k14249 in k14245 in k14221 in do1487 in k14375 in k14365 in k14362 in k14359 in k14355 in k14352 in k14334 in a14331 in import-spear-frames in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_14251(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14251,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14254,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14277,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t5,a[5]=((C_word*)t0)[8],a[6]=((C_word)li190),tmp=(C_word)a,a+=7,tmp));
t7=((C_word*)t5)[1];
f_14277(t7,t3,C_fix(0),((C_word*)t0)[5],((C_word*)t0)[7]);}

/* do1456 in k14249 in k14245 in k14221 in do1487 in k14375 in k14365 in k14362 in k14359 in k14355 in k14352 in k14334 in a14331 in import-spear-frames in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_14277(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14277,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nequalp(t2,((C_word*)((C_word*)t0)[5])[1]))){
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,C_SCHEME_FALSE);}
else{
t7=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_14287,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=t2,a[7]=t5,a[8]=t6,tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 378  rdat");
t8=((C_word*)t0)[3];
f_14224(t8,t7,((C_word*)t0)[2]);}}

/* k14285 in do1456 in k14249 in k14245 in k14221 in do1487 in k14375 in k14365 in k14362 in k14359 in k14355 in k14352 in k14334 in a14331 in import-spear-frames in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_14287(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14287,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_14324,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 378  rdat");
t3=((C_word*)t0)[3];
f_14224(t3,t2,((C_word*)t0)[2]);}

/* k14322 in k14285 in do1456 in k14249 in k14245 in k14221 in do1487 in k14375 in k14365 in k14362 in k14359 in k14355 in k14352 in k14334 in a14331 in import-spear-frames in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_14324(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14324,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
t3=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[8])[1],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[8])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[8])+1,t4);
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14316,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  rdat");
t7=((C_word*)t0)[3];
f_14224(t7,t6,((C_word*)t0)[2]);}

/* k14314 in k14322 in k14285 in do1456 in k14249 in k14245 in k14221 in do1487 in k14375 in k14365 in k14362 in k14359 in k14355 in k14352 in k14334 in a14331 in import-spear-frames in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_14316(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14316,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
t3=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[6])[1],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[6])+1,t4);
t6=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],C_fix(1));
t7=((C_word*)((C_word*)t0)[4])[1];
f_14277(t7,((C_word*)t0)[3],t6,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k14252 in k14249 in k14245 in k14221 in do1487 in k14375 in k14365 in k14362 in k14359 in k14355 in k14352 in k14334 in a14331 in import-spear-frames in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_14254(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[6]);
if(C_truep((C_word)C_i_nullp(t2))){
t3=((C_word*)t0)[5];
f_14393(2,t3,C_SCHEME_FALSE);}
else{
t3=(C_word)C_i_cdr(((C_word*)t0)[6]);
t4=(C_word)C_i_cdr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 378  make-spectrum");
f_10989(((C_word*)t0)[5],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],t3,t4);}}

/* rdat in k14221 in do1487 in k14375 in k14365 in k14362 in k14359 in k14355 in k14352 in k14334 in a14331 in import-spear-frames in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_14224(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14224,NULL,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14228,a[2]=((C_word*)t0)[2],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  read");
t4=*((C_word*)lf[246]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k14226 in rdat in k14221 in do1487 in k14375 in k14365 in k14362 in k14359 in k14355 in k14352 in k14334 in a14331 in import-spear-frames in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_14228(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14228,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14231,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_eofp(t1))){
C_trace("ChickenBridge.scm: 378  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[245],((C_word*)t0)[2]);}
else{
t3=t2;
f_14231(2,t3,C_SCHEME_UNDEFINED);}}

/* k14229 in k14226 in rdat in k14221 in do1487 in k14375 in k14365 in k14362 in k14359 in k14355 in k14352 in k14334 in a14331 in import-spear-frames in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_14231(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* k14391 in do1487 in k14375 in k14365 in k14362 in k14359 in k14355 in k14352 in k14334 in a14331 in import-spear-frames in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_14393(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14393,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14396,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
t4=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[6])[1]);
t5=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t4);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t6);
t8=t3;
f_14396(t8,t7);}
else{
t4=t3;
f_14396(t4,C_SCHEME_UNDEFINED);}}

/* k14394 in k14391 in do1487 in k14375 in k14365 in k14362 in k14359 in k14355 in k14352 in k14334 in a14331 in import-spear-frames in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_14396(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14396,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14403,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  read-line");
t3=C_retrieve(lf[244]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k14401 in k14394 in k14391 in do1487 in k14375 in k14365 in k14362 in k14359 in k14355 in k14352 in k14334 in a14331 in import-spear-frames in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_14403(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
f_14379(t2,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* rhdr in k14334 in a14331 in import-spear-frames in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_14337(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14337,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14341,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  read-line");
t4=C_retrieve(lf[244]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k14339 in rhdr in k14334 in a14331 in import-spear-frames in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_14341(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14341,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14344,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_eofp(t1))){
C_trace("ChickenBridge.scm: 378  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[243],((C_word*)t0)[2]);}
else{
t3=t2;
f_14344(2,t3,C_SCHEME_UNDEFINED);}}

/* k14342 in k14339 in rhdr in k14334 in a14331 in import-spear-frames in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_14344(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* spectrum-rescale! in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_13813(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...){
C_word tmp;
C_word t4;
va_list v;
C_word *a,c2=c;
C_save_rest(t3,c2,4);
if(c<4) C_bad_min_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+24)){
C_save_and_reclaim((void*)tr4r,(void*)f_13813r,4,t0,t1,t2,t3);}
else{
a=C_alloc((c-4)*3);
t4=C_restore_rest(a,C_rest_count(0));
f_13813r(t0,t1,t2,t3,t4);}}

static void C_ccall f_13813r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word *a=C_alloc(24);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13817,a[2]=t5,a[3]=t10,a[4]=t8,a[5]=t6,a[6]=t2,a[7]=t1,tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t6)[1]))){
C_trace("ChickenBridge.scm: 378  error");
t12=*((C_word*)lf[4]+1);
((C_proc3)C_retrieve_proc(t12))(3,t12,t11,lf[240]);}
else{
t12=(C_word)C_i_cdr(((C_word*)t6)[1]);
if(C_truep((C_word)C_i_nullp(t12))){
t13=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14186,a[2]=t11,a[3]=t6,tmp=(C_word)a,a+=4,tmp);
t14=(C_word)C_i_car(((C_word*)t6)[1]);
t15=(C_word)C_i_pairp(t14);
t16=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14192,a[2]=t6,a[3]=t13,tmp=(C_word)a,a+=4,tmp);
if(C_truep(t15)){
t17=t16;
f_14192(t17,t15);}
else{
t17=(C_word)C_i_car(((C_word*)t6)[1]);
t18=t16;
f_14192(t18,(C_word)C_i_numberp(t17));}}
else{
t13=t11;
f_13817(2,t13,C_SCHEME_UNDEFINED);}}}

/* k14190 in spectrum-rescale! in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_14192(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[3];
f_14186(2,t2,(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]));}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
C_trace("ChickenBridge.scm: 378  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],lf[241],t2);}}

/* k14184 in spectrum-rescale! in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_14186(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_13817(2,t3,t2);}

/* k13815 in spectrum-rescale! in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_13817(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13817,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13820,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14170,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  <=");
C_less_or_equal_p(5,0,t3,C_fix(1),((C_word*)((C_word*)t0)[2])[1],C_fix(8));}

/* k14168 in k13815 in spectrum-rescale! in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_14170(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14170,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(1));
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_13820(2,t4,t3);}
else{
C_trace("ChickenBridge.scm: 378  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],lf[239],((C_word*)((C_word*)t0)[3])[1]);}}

/* k13818 in k13815 in spectrum-rescale! in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_13820(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13820,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13823,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_bit_setp(((C_word*)((C_word*)t0)[2])[1],C_fix(2)))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14152,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  spectrum-amps");
t4=C_retrieve(lf[202]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[6]);}
else{
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14156,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  spectrum-freqs");
t4=C_retrieve(lf[200]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[6]);}}

/* k14154 in k13818 in k13815 in spectrum-rescale! in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_14156(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_13823(t3,t2);}

/* k14150 in k13818 in k13815 in spectrum-rescale! in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_14152(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_13823(t3,t2);}

/* k13821 in k13818 in k13815 in spectrum-rescale! in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_13823(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13823,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13826,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_bit_setp(((C_word*)((C_word*)t0)[2])[1],C_fix(1)))){
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14141,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  spectrum-amps");
t4=C_retrieve(lf[202]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[6]);}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14145,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  spectrum-freqs");
t4=C_retrieve(lf[200]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[6]);}}

/* k14143 in k13821 in k13818 in k13815 in spectrum-rescale! in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_14145(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_SCHEME_UNDEFINED;
t3=((C_word*)t0)[2];
f_13826(t3,t2);}

/* k14139 in k13821 in k13818 in k13815 in spectrum-rescale! in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_14141(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_SCHEME_UNDEFINED;
t3=((C_word*)t0)[2];
f_13826(t3,t2);}

/* k13824 in k13821 in k13818 in k13815 in spectrum-rescale! in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_13826(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13826,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13829,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_bit_setp(((C_word*)((C_word*)t0)[2])[1],C_fix(0)))){
t3=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t4=t2;
f_13829(t4,t3);}
else{
t3=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_FALSE);
t4=t2;
f_13829(t4,t3);}}

/* k13827 in k13824 in k13821 in k13818 in k13815 in spectrum-rescale! in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_13829(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[32],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13829,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13832,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[5])[1]))){
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13843,a[2]=t4,a[3]=((C_word*)t0)[5],a[4]=((C_word)li179),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_13843(t6,t2,((C_word*)((C_word*)t0)[3])[1]);}
else{
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13873,a[2]=t4,a[3]=((C_word*)t0)[5],a[4]=((C_word)li180),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_13873(t6,t2,((C_word*)((C_word*)t0)[3])[1]);}}
else{
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13893,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],a[6]=t2,tmp=(C_word)a,a+=7,tmp);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14129,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t3,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  every?");
t5=C_retrieve(lf[67]);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,*((C_word*)lf[238]+1),((C_word*)((C_word*)t0)[5])[1]);}}

/* k14127 in k13827 in k13824 in k13821 in k13818 in k13815 in spectrum-rescale! in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_14129(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[31],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14129,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[6];
f_13893(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_13987,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[6],a[5]=t5,a[6]=t3,a[7]=t9,a[8]=t7,a[9]=((C_word*)t0)[4],a[10]=((C_word*)t0)[5],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_bit_setp(((C_word*)((C_word*)t0)[3])[1],C_fix(1)))){
t11=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14113,a[2]=((C_word*)t0)[2],a[3]=t10,a[4]=t5,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  spectrum-minamp");
t12=C_retrieve(lf[208]);
((C_proc3)C_retrieve_proc(t12))(3,t12,t11,((C_word*)t0)[2]);}
else{
t11=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14121,a[2]=((C_word*)t0)[2],a[3]=t10,a[4]=t5,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  spectrum-minfreq");
t12=C_retrieve(lf[206]);
((C_proc3)C_retrieve_proc(t12))(3,t12,t11,((C_word*)t0)[2]);}}}

/* k14119 in k14127 in k13827 in k13824 in k13821 in k13818 in k13815 in spectrum-rescale! in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_14121(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14121,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14125,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  spectrum-maxfreq");
t4=C_retrieve(lf[207]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k14123 in k14119 in k14127 in k13827 in k13824 in k13821 in k13818 in k13815 in spectrum-rescale! in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_14125(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_13987(t3,t2);}

/* k14111 in k14127 in k13827 in k13824 in k13821 in k13818 in k13815 in spectrum-rescale! in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_14113(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14113,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14117,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  spectrum-maxamp");
t4=C_retrieve(lf[211]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k14115 in k14111 in k14127 in k13827 in k13824 in k13821 in k13818 in k13815 in spectrum-rescale! in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_14117(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_13987(t3,t2);}

/* k13985 in k14127 in k13827 in k13824 in k13821 in k13818 in k13815 in spectrum-rescale! in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_13987(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13987,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_13990,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[10],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_bit_setp(((C_word*)((C_word*)t0)[3])[1],C_fix(2)))){
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14094,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  spectrum-minamp");
t4=C_retrieve(lf[208]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14102,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  spectrum-minfreq");
t4=C_retrieve(lf[206]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}}

/* k14100 in k13985 in k14127 in k13827 in k13824 in k13821 in k13818 in k13815 in spectrum-rescale! in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_14102(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14102,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14106,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  spectrum-maxfreq");
t4=C_retrieve(lf[207]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k14104 in k14100 in k13985 in k14127 in k13827 in k13824 in k13821 in k13818 in k13815 in spectrum-rescale! in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_14106(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_13990(t3,t2);}

/* k14092 in k13985 in k14127 in k13827 in k13824 in k13821 in k13818 in k13815 in spectrum-rescale! in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_14094(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14094,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14098,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  spectrum-maxamp");
t4=C_retrieve(lf[211]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k14096 in k14092 in k13985 in k14127 in k13827 in k13824 in k13821 in k13818 in k13815 in spectrum-rescale! in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_14098(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_13990(t3,t2);}

/* k13988 in k13985 in k14127 in k13827 in k13824 in k13821 in k13818 in k13815 in spectrum-rescale! in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_13990(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13990,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_13994,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 378  append");
t3=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)((C_word*)t0)[8])[1],C_SCHEME_END_OF_LIST);}

/* k13992 in k13988 in k13985 in k14127 in k13827 in k13824 in k13821 in k13818 in k13815 in spectrum-rescale! in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_13994(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13994,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_13999,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=t4,a[8]=((C_word)li186),tmp=(C_word)a,a+=9,tmp));
t6=((C_word*)t4)[1];
f_13999(t6,((C_word*)t0)[2],((C_word*)((C_word*)t0)[8])[1]);}

/* do1419 in k13992 in k13988 in k13985 in k14127 in k13827 in k13824 in k13821 in k13818 in k13815 in spectrum-rescale! in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_13999(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13999,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14009,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=t1,a[6]=((C_word*)t0)[7],a[7]=t2,tmp=(C_word)a,a+=8,tmp);
t4=(C_word)C_i_car(t2);
t5=(C_word)C_eqp(t4,C_SCHEME_FALSE);
if(C_truep(t5)){
t6=t3;
f_14009(t6,(C_word)C_i_set_car(t2,((C_word*)((C_word*)t0)[3])[1]));}
else{
t6=(C_word)C_i_car(t2);
t7=(C_word)C_eqp(t6,C_SCHEME_TRUE);
t8=t3;
f_14009(t8,(C_truep(t7)?(C_word)C_i_set_car(t2,((C_word*)((C_word*)t0)[2])[1]):C_SCHEME_UNDEFINED));}}}

/* k14007 in do1419 in k13992 in k13988 in k13985 in k14127 in k13827 in k13824 in k13821 in k13818 in k13815 in spectrum-rescale! in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_14009(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14009,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14012,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],tmp=(C_word)a,a+=5,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
t3=(C_word)C_i_cadr(((C_word*)t0)[7]);
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[237],t3);}
else{
t3=(C_word)C_i_cadr(((C_word*)t0)[7]);
t4=(C_word)C_eqp(t3,C_SCHEME_FALSE);
if(C_truep(t4)){
t5=(C_word)C_i_cdr(((C_word*)t0)[7]);
t6=t2;
f_14012(2,t6,(C_word)C_i_set_car(t5,((C_word*)((C_word*)t0)[3])[1]));}
else{
t5=(C_word)C_i_cadr(((C_word*)t0)[7]);
t6=(C_word)C_eqp(t5,C_SCHEME_TRUE);
if(C_truep(t6)){
t7=(C_word)C_i_cdr(((C_word*)t0)[7]);
t8=t2;
f_14012(2,t8,(C_word)C_i_set_car(t7,((C_word*)((C_word*)t0)[2])[1]));}
else{
t7=t2;
f_14012(2,t7,C_SCHEME_UNDEFINED);}}}}

/* k14010 in k14007 in do1419 in k13992 in k13988 in k13985 in k14127 in k13827 in k13824 in k13821 in k13818 in k13815 in spectrum-rescale! in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_14012(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cddr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_13999(t3,((C_word*)t0)[2],t2);}

/* k13891 in k13827 in k13824 in k13821 in k13818 in k13815 in spectrum-rescale! in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_13893(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13893,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13896,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13918,a[2]=((C_word*)t0)[3],a[3]=t4,a[4]=((C_word)li184),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_13918(t6,t2,((C_word*)((C_word*)t0)[2])[1]);}
else{
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13956,a[2]=((C_word*)t0)[3],a[3]=t4,a[4]=((C_word)li185),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_13956(t6,t2,((C_word*)((C_word*)t0)[2])[1]);}}

/* do1433 in k13891 in k13827 in k13824 in k13821 in k13818 in k13815 in spectrum-rescale! in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_13956(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13956,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13977,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 378  interp");
t5=C_retrieve(lf[122]);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,t4,((C_word*)((C_word*)t0)[2])[1]);}}

/* k13975 in do1433 in k13891 in k13827 in k13824 in k13821 in k13818 in k13815 in spectrum-rescale! in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_13977(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=(C_word)C_i_set_car(((C_word*)t0)[4],t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_13956(t4,((C_word*)t0)[2],t3);}

/* do1428 in k13891 in k13827 in k13824 in k13821 in k13818 in k13815 in spectrum-rescale! in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_13918(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13918,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(C_word)C_i_car(t2);
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13947,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 378  interp");
t6=C_retrieve(lf[122]);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,t5,((C_word*)((C_word*)t0)[2])[1]);}}

/* k13945 in do1428 in k13891 in k13827 in k13824 in k13821 in k13818 in k13815 in spectrum-rescale! in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_13947(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13947,2,t0,t1);}
t2=(C_word)C_a_i_times(&a,2,((C_word*)t0)[5],t1);
t3=(C_word)C_i_set_car(((C_word*)t0)[4],t2);
t4=(C_word)C_i_cdr(((C_word*)t0)[4]);
t5=((C_word*)((C_word*)t0)[3])[1];
f_13918(t5,((C_word*)t0)[2],t4);}

/* k13894 in k13891 in k13827 in k13824 in k13821 in k13818 in k13815 in spectrum-rescale! in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_13896(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13896,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13909,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13913,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  spectrum-freqs");
t4=C_retrieve(lf[200]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k13911 in k13894 in k13891 in k13827 in k13824 in k13821 in k13818 in k13815 in spectrum-rescale! in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_13913(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_apply(4,0,((C_word*)t0)[2],*((C_word*)lf[236]+1),t1);}

/* k13907 in k13894 in k13891 in k13827 in k13824 in k13821 in k13818 in k13815 in spectrum-rescale! in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_13909(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13909,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[3];
f_13832(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=((C_word*)t0)[2];
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13276,a[2]=((C_word*)t0)[3],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13351,a[2]=((C_word)li183),tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13359,a[2]=t2,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  spectrum-freqs");
t6=C_retrieve(lf[200]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,t2);}}

/* k13357 in k13907 in k13894 in k13891 in k13827 in k13824 in k13821 in k13818 in k13815 in spectrum-rescale! in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_13359(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13359,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13363,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  spectrum-amps");
t3=C_retrieve(lf[202]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k13361 in k13357 in k13907 in k13894 in k13891 in k13827 in k13824 in k13821 in k13818 in k13815 in spectrum-rescale! in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_13363(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  map");
t2=*((C_word*)lf[235]+1);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* a13350 in k13907 in k13894 in k13891 in k13827 in k13824 in k13821 in k13818 in k13815 in spectrum-rescale! in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_13351(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word ab[6],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_13351,4,t0,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_list(&a,2,t2,t3));}

/* k13274 in k13907 in k13894 in k13891 in k13827 in k13824 in k13821 in k13818 in k13815 in spectrum-rescale! in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_13276(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13276,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13280,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t3,tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13337,a[2]=((C_word)li182),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  sort!");
t6=C_retrieve(lf[234]);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,((C_word*)t3)[1],t5);}

/* a13336 in k13274 in k13907 in k13894 in k13891 in k13827 in k13824 in k13821 in k13818 in k13815 in spectrum-rescale! in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_13337(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_13337,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_car(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_i_lessp(t4,t5));}

/* k13278 in k13274 in k13907 in k13894 in k13891 in k13827 in k13824 in k13821 in k13818 in k13815 in spectrum-rescale! in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_13280(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13280,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=((C_word*)((C_word*)t0)[4])[1];
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13288,a[2]=t6,a[3]=t3,a[4]=t4,a[5]=((C_word*)t0)[3],a[6]=((C_word)li181),tmp=(C_word)a,a+=7,tmp));
t8=((C_word*)t6)[1];
f_13288(t8,((C_word*)t0)[2],((C_word*)((C_word*)t0)[4])[1],t4);}

/* do1304 in k13278 in k13274 in k13907 in k13894 in k13891 in k13827 in k13824 in k13821 in k13818 in k13815 in spectrum-rescale! in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_13288(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13288,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13298,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  spectrum-freqs-set!");
f_11037(t5,((C_word*)t0)[5],((C_word*)t0)[3]);}
else{
t5=(C_word)C_i_car(t2);
t6=(C_word)C_i_car(t5);
t7=(C_word)C_i_cdr(t5);
t8=(C_word)C_i_set_cdr(((C_word*)t4)[1],t7);
t9=(C_word)C_i_cdr(((C_word*)t4)[1]);
t10=C_set_block_item(t4,0,t9);
t11=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13321,a[2]=t4,a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t12=*((C_word*)lf[222]+1);
t13=t12;
((C_proc4)C_retrieve_proc(t13))(4,t13,t11,t2,t6);}}

/* k13319 in do1304 in k13278 in k13274 in k13907 in k13894 in k13891 in k13827 in k13824 in k13821 in k13818 in k13815 in spectrum-rescale! in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_13321(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
t3=((C_word*)((C_word*)t0)[4])[1];
f_13288(t3,((C_word*)t0)[3],t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k13296 in do1304 in k13278 in k13274 in k13907 in k13894 in k13891 in k13827 in k13824 in k13821 in k13818 in k13815 in spectrum-rescale! in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_13298(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13298,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13301,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 378  spectrum-amps-set!");
f_11055(t2,((C_word*)t0)[3],t3);}

/* k13299 in k13296 in do1304 in k13278 in k13274 in k13907 in k13894 in k13891 in k13827 in k13824 in k13821 in k13818 in k13815 in spectrum-rescale! in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_13301(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* do1406 in k13827 in k13824 in k13821 in k13818 in k13815 in spectrum-rescale! in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_13873(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
loop:
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13873,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(C_word)C_i_set_car(t2,((C_word*)((C_word*)t0)[3])[1]);
t4=(C_word)C_i_cdr(t2);
t6=t1;
t7=t4;
t1=t6;
t2=t7;
goto loop;}}

/* do1401 in k13827 in k13824 in k13821 in k13818 in k13815 in spectrum-rescale! in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_13843(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a;
loop:
a=C_alloc(4);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_13843,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(C_word)C_i_car(t2);
t4=(C_word)C_a_i_times(&a,2,t3,((C_word*)((C_word*)t0)[3])[1]);
t5=(C_word)C_i_set_car(t2,t4);
t6=(C_word)C_i_cdr(t2);
t8=t1;
t9=t6;
t1=t8;
t2=t9;
goto loop;}}

/* k13830 in k13827 in k13824 in k13821 in k13818 in k13815 in spectrum-rescale! in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_13832(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* spectrum-flip! in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_13756(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_13756,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13764,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  spectrum-maxfreq");
t4=C_retrieve(lf[207]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k13762 in spectrum-flip! in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_13764(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13764,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13768,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  spectrum-minfreq");
t3=C_retrieve(lf[206]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[3]);}

/* k13766 in k13762 in spectrum-flip! in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_13768(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13768,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13772,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  spectrum-freqs");
t3=C_retrieve(lf[200]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[4]);}

/* k13770 in k13766 in k13762 in spectrum-flip! in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_13772(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13772,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13778,a[2]=t3,a[3]=((C_word*)t0)[5],a[4]=((C_word)li177),tmp=(C_word)a,a+=5,tmp));
t5=((C_word*)t3)[1];
f_13778(t5,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1,C_SCHEME_END_OF_LIST);}

/* do1382 in k13770 in k13766 in k13762 in spectrum-flip! in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_13778(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word *a;
loop:
a=C_alloc(15);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_13778,NULL,6,t0,t1,t2,t3,t4,t5);}
if(C_truep((C_word)C_i_nullp(t4))){
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13788,a[2]=((C_word*)t0)[3],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  spectrum-freqs-set!");
f_11037(t6,((C_word*)t0)[3],t5);}
else{
t6=(C_word)C_i_car(t4);
t7=(C_word)C_a_i_divide(&a,2,t2,t6);
t8=(C_word)C_a_i_times(&a,2,t3,t7);
t9=(C_word)C_a_i_cons(&a,2,t8,t5);
t10=t5=t9;
t11=(C_word)C_i_cdr(t4);
t14=t1;
t15=t2;
t16=t3;
t17=t11;
t18=t5;
t1=t14;
t2=t15;
t3=t16;
t4=t17;
t5=t18;
goto loop;}}

/* k13786 in do1382 in k13770 in k13766 in k13762 in spectrum-flip! in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_13788(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* rm-spectrum in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_13544(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[17],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_13544,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13546,a[2]=((C_word)li169),tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13563,a[2]=((C_word)li170),tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13580,a[2]=((C_word)li171),tmp=(C_word)a,a+=3,tmp);
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13612,a[2]=t4,a[3]=t2,a[4]=t3,a[5]=t5,a[6]=t6,a[7]=t1,tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 378  getfreqs");
f_13546(t7,t2);}

/* k13610 in rm-spectrum in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_13612(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13612,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13615,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=t1,a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 378  getfreqs");
f_13546(t2,((C_word*)t0)[4]);}

/* k13613 in k13610 in rm-spectrum in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_13615(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13615,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13618,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t1,a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 378  getamps");
f_13563(t2,((C_word*)t0)[2]);}

/* k13616 in k13613 in k13610 in rm-spectrum in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_13618(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13618,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13621,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  getamps");
f_13563(t2,((C_word*)t0)[2]);}

/* k13619 in k13616 in k13613 in k13610 in rm-spectrum in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_13621(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13621,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13624,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  make-spectrum");
f_10989(t2,C_SCHEME_FALSE,C_fix(0),C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST);}

/* k13622 in k13619 in k13616 in k13613 in k13610 in rm-spectrum in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_13624(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[31],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13624,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13627,a[2]=t1,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t0)[4]))){
if(C_truep((C_word)C_i_pairp(((C_word*)t0)[3]))){
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13641,a[2]=((C_word*)t0)[4],a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t4,a[6]=((C_word)li173),tmp=(C_word)a,a+=7,tmp));
t6=((C_word*)t4)[1];
f_13641(t6,t2,((C_word*)t0)[3]);}
else{
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13690,a[2]=((C_word*)t0)[3],a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t4,a[6]=((C_word)li174),tmp=(C_word)a,a+=7,tmp));
t6=((C_word*)t4)[1];
f_13690(t6,t2,((C_word*)t0)[4]);}}
else{
if(C_truep((C_word)C_i_pairp(((C_word*)t0)[3]))){
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13722,a[2]=((C_word*)t0)[4],a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t4,a[6]=((C_word)li175),tmp=(C_word)a,a+=7,tmp));
t6=((C_word*)t4)[1];
f_13722(t6,t2,((C_word*)t0)[3]);}
else{
C_trace("ChickenBridge.scm: 378  sums-and-diffs");
f_13580(t2,t1,((C_word*)t0)[4],((C_word*)t0)[3]);}}}

/* do1375 in k13622 in k13619 in k13616 in k13613 in k13610 in rm-spectrum in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_13722(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13722,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13732,a[2]=t1,a[3]=((C_word*)t0)[5],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 378  sums-and-diffs");
f_13580(t3,((C_word*)t0)[3],((C_word*)t0)[2],t4);}}

/* k13730 in do1375 in k13622 in k13619 in k13616 in k13613 in k13610 in rm-spectrum in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_13732(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_13722(t3,((C_word*)t0)[2],t2);}

/* do1370 in k13622 in k13619 in k13616 in k13613 in k13610 in rm-spectrum in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_13690(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13690,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13700,a[2]=t1,a[3]=((C_word*)t0)[5],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 378  sums-and-diffs");
f_13580(t3,((C_word*)t0)[3],t4,((C_word*)t0)[2]);}}

/* k13698 in do1370 in k13622 in k13619 in k13616 in k13613 in k13610 in rm-spectrum in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_13700(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_13690(t3,((C_word*)t0)[2],t2);}

/* do1360 in k13622 in k13619 in k13616 in k13613 in k13610 in rm-spectrum in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_13641(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13641,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13651,a[2]=t1,a[3]=((C_word*)t0)[5],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13660,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t2,a[5]=t5,a[6]=((C_word)li172),tmp=(C_word)a,a+=7,tmp));
t7=((C_word*)t5)[1];
f_13660(t7,t3,((C_word*)t0)[2]);}}

/* do1363 in do1360 in k13622 in k13619 in k13616 in k13613 in k13610 in rm-spectrum in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_13660(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13660,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13670,a[2]=t1,a[3]=((C_word*)t0)[5],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 378  sums-and-diffs");
f_13580(t3,((C_word*)t0)[2],t4,t5);}}

/* k13668 in do1363 in do1360 in k13622 in k13619 in k13616 in k13613 in k13610 in rm-spectrum in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_13670(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_13660(t3,((C_word*)t0)[2],t2);}

/* k13649 in do1360 in k13622 in k13619 in k13616 in k13613 in k13610 in rm-spectrum in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_13651(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_13641(t3,((C_word*)t0)[2],t2);}

/* k13625 in k13622 in k13619 in k13616 in k13613 in k13610 in rm-spectrum in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_13627(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* sums-and-diffs in rm-spectrum in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_13580(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13580,NULL,4,t1,t2,t3,t4);}
if(C_truep((C_word)C_i_nequalp(t3,t4))){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_UNDEFINED);}
else{
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13590,a[2]=t2,a[3]=t1,a[4]=t4,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t6=(C_word)C_a_i_plus(&a,2,t3,t4);
C_trace("ChickenBridge.scm: 378  spectrum-add!");
t7=C_retrieve(lf[226]);
((C_proc5)C_retrieve_proc(t7))(5,t7,t5,t2,t6,lf[231]);}}

/* k13588 in sums-and-diffs in rm-spectrum in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_13590(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13590,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[5],((C_word*)t0)[4]);
t3=(C_word)C_a_i_abs(&a,1,t2);
C_trace("ChickenBridge.scm: 378  spectrum-add!");
t4=C_retrieve(lf[226]);
((C_proc5)C_retrieve_proc(t4))(5,t4,((C_word*)t0)[3],((C_word*)t0)[2],t3,lf[230]);}

/* getamps in rm-spectrum in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_13563(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13563,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13570,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  spectrum?");
f_10995(t3,t2);}

/* k13568 in getamps in rm-spectrum in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_13570(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 378  spectrum-amps");
t2=C_retrieve(lf[202]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
t2=(C_word)C_i_pairp(((C_word*)t0)[2]);
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_truep(t2)?lf[228]:lf[229]));}}

/* getfreqs in rm-spectrum in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_13546(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13546,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13553,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  spectrum?");
f_10995(t3,t2);}

/* k13551 in getfreqs in rm-spectrum in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_13553(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 378  spectrum-freqs");
t2=C_retrieve(lf[200]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
t2=(C_word)C_i_pairp(((C_word*)t0)[2]);
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_truep(t2)?((C_word*)t0)[2]:((C_word*)t0)[2]));}}

/* spectrum-add! in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_13365(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_13365,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13373,a[2]=t1,a[3]=t3,a[4]=t4,a[5]=t2,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  spectrum-freqs");
t6=C_retrieve(lf[200]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,t2);}

/* k13371 in spectrum-add! in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_13373(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13373,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13377,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  spectrum-amps");
t3=C_retrieve(lf[202]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[5]);}

/* k13375 in k13371 in spectrum-add! in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_13377(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13377,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13379,a[2]=t3,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word)li167),tmp=(C_word)a,a+=7,tmp));
t5=((C_word*)t3)[1];
f_13379(t5,((C_word*)t0)[3],((C_word*)t0)[2],t1,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST);}

/* do1320 in k13375 in k13371 in spectrum-add! in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_13379(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13379,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(C_word)C_i_nullp(t2);
t7=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_13389,a[2]=((C_word*)t0)[2],a[3]=t3,a[4]=t5,a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=t4,a[8]=t2,a[9]=((C_word*)t0)[5],a[10]=t1,tmp=(C_word)a,a+=11,tmp);
if(C_truep(t6)){
t8=t7;
f_13389(t8,t6);}
else{
t8=(C_word)C_i_car(t2);
t9=t7;
f_13389(t9,(C_word)C_i_greater_or_equalp(t8,((C_word*)t0)[3]));}}

/* k13387 in do1320 in k13375 in k13371 in spectrum-add! in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_13389(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13389,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13392,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[10],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[8]))){
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[7]))){
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13404,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[9],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_a_i_list(&a,1,((C_word*)t0)[5]);
C_trace("ChickenBridge.scm: 378  spectrum-freqs-set!");
f_11037(t3,((C_word*)t0)[9],t4);}
else{
t3=(C_word)C_a_i_list(&a,1,((C_word*)t0)[5]);
t4=(C_word)C_i_set_cdr(((C_word*)t0)[7],t3);
t5=(C_word)C_a_i_list(&a,1,((C_word*)t0)[6]);
t6=(C_word)C_i_set_cdr(((C_word*)t0)[4],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13435,a[2]=((C_word*)t0)[9],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  spectrum-size");
t8=C_retrieve(lf[198]);
((C_proc3)C_retrieve_proc(t8))(3,t8,t7,((C_word*)t0)[9]);}}
else{
t3=(C_word)C_i_car(((C_word*)t0)[8]);
if(C_truep((C_word)C_i_nequalp(t3,((C_word*)t0)[5]))){
t4=(C_word)C_i_car(((C_word*)t0)[3]);
t5=(C_word)C_a_i_plus(&a,2,t4,((C_word*)t0)[6]);
t6=t2;
f_13392(2,t6,(C_word)C_i_set_car(((C_word*)t0)[3],t5));}
else{
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[7]))){
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13469,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[9],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t5=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[5],((C_word*)t0)[8]);
C_trace("ChickenBridge.scm: 378  spectrum-freqs-set!");
f_11037(t4,((C_word*)t0)[9],t5);}
else{
t4=(C_word)C_a_i_list(&a,1,((C_word*)t0)[5]);
t5=(C_word)C_a_i_list(&a,1,((C_word*)t0)[6]);
t6=(C_word)C_i_set_cdr(t4,((C_word*)t0)[8]);
t7=(C_word)C_i_set_cdr(((C_word*)t0)[7],t4);
t8=(C_word)C_i_set_cdr(t5,((C_word*)t0)[3]);
t9=(C_word)C_i_set_cdr(((C_word*)t0)[4],t5);
t10=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13520,a[2]=((C_word*)t0)[9],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  spectrum-size");
t11=C_retrieve(lf[198]);
((C_proc3)C_retrieve_proc(t11))(3,t11,t10,((C_word*)t0)[9]);}}}}
else{
t2=(C_word)C_i_cdr(((C_word*)t0)[8]);
t3=(C_word)C_i_cdr(((C_word*)t0)[3]);
t4=((C_word*)((C_word*)t0)[2])[1];
f_13379(t4,((C_word*)t0)[10],t2,t3,((C_word*)t0)[8],((C_word*)t0)[3]);}}

/* k13518 in k13387 in do1320 in k13375 in k13371 in spectrum-add! in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_13520(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13520,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 378  spectrum-size-set!");
f_11019(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k13467 in k13387 in do1320 in k13375 in k13371 in spectrum-add! in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_13469(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13469,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13472,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 378  spectrum-amps-set!");
f_11055(t2,((C_word*)t0)[4],t3);}

/* k13470 in k13467 in k13387 in do1320 in k13375 in k13371 in spectrum-add! in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_13472(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13472,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13483,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  spectrum-size");
t3=C_retrieve(lf[198]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k13481 in k13470 in k13467 in k13387 in do1320 in k13375 in k13371 in spectrum-add! in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_13483(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13483,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 378  spectrum-size-set!");
f_11019(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k13433 in k13387 in do1320 in k13375 in k13371 in spectrum-add! in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_13435(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13435,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 378  spectrum-size-set!");
f_11019(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k13402 in k13387 in do1320 in k13375 in k13371 in spectrum-add! in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_13404(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13404,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13407,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_list(&a,1,((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 378  spectrum-amps-set!");
f_11055(t2,((C_word*)t0)[3],t3);}

/* k13405 in k13402 in k13387 in do1320 in k13375 in k13371 in spectrum-add! in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_13407(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  spectrum-size-set!");
f_11019(((C_word*)t0)[3],((C_word*)t0)[2],C_fix(1));}

/* k13390 in k13387 in do1320 in k13375 in k13371 in spectrum-add! in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_13392(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* fm-spectrum in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_12953(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_12953,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_a_i_times(&a,2,t2,t3);
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13270,a[2]=t4,a[3]=t2,a[4]=t5,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  round");
t7=*((C_word*)lf[107]+1);
((C_proc3)C_retrieve_proc(t7))(3,t7,t6,t4);}

/* k13268 in fm-spectrum in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_13270(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13270,2,t0,t1);}
t2=(C_word)C_i_inexact_to_exact(t1);
t3=(C_word)C_a_i_plus(&a,2,t2,C_fix(1));
t4=C_SCHEME_END_OF_LIST;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t7=t6;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12966,a[2]=((C_word*)t0)[5],a[3]=t5,tmp=(C_word)a,a+=4,tmp);
t10=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_13199,a[2]=t9,a[3]=((C_word*)t0)[2],a[4]=t8,a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=t5,a[8]=t6,a[9]=t3,tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 378  -");
C_minus(3,0,t10,t3);}

/* k13197 in k13268 in fm-spectrum in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_13199(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13199,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_13201,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t3,a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word)li165),tmp=(C_word)a,a+=11,tmp));
t5=((C_word*)t3)[1];
f_13201(t5,((C_word*)t0)[2],t1,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* do1242 in k13197 in k13268 in fm-spectrum in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_13201(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[23],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13201,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_greaterp(t2,((C_word*)t0)[9]))){
t7=(C_word)C_i_cdr(((C_word*)t0)[8]);
t8=C_mutate(((C_word *)((C_word*)t0)[7])+1,t7);
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,t8);}
else{
t7=(C_word)C_a_i_times(&a,2,((C_word*)t0)[6],t2);
t8=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],t7);
t9=C_set_block_item(t5,0,t8);
t10=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13220,a[2]=((C_word*)t0)[3],a[3]=t5,a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=t2,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
t11=t2;
t12=((C_word*)t0)[2];
t13=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7940,a[2]=((C_word)li164),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t13+1)))(4,t13,t10,t11,t12);}}

/* f_7940 in do1242 in k13197 in k13268 in fm-spectrum in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_7940(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_7940,4,t0,t1,t2,t3);}
t4=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t5=(C_word)C_i_foreign_fixnum_argumentp(t2);
t6=(C_word)C_i_foreign_flonum_argumentp(t3);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)stub386(t4,t5,t6));}

/* k13218 in do1242 in k13197 in k13268 in fm-spectrum in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_13220(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13220,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[7])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13223,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
t4=(C_word)C_i_nequalp(((C_word*)((C_word*)t0)[7])[1],lf[224]);
t5=(C_truep(t4)?t4:(C_word)C_i_nequalp(((C_word*)((C_word*)t0)[3])[1],lf[225]));
if(C_truep(t5)){
t6=t3;
f_13223(t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_a_i_list(&a,2,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[7])[1]);
t7=(C_word)C_a_i_list(&a,1,t6);
t8=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t7);
t9=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t10=C_mutate(((C_word *)((C_word*)t0)[2])+1,t9);
t11=t3;
f_13223(t11,t10);}}

/* k13221 in k13218 in do1242 in k13197 in k13268 in fm-spectrum in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_13223(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13223,NULL,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
t3=((C_word*)((C_word*)t0)[5])[1];
f_13201(t3,((C_word*)t0)[4],t2,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k12964 in k13268 in fm-spectrum in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_12966(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12966,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12969,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13042,a[2]=t4,a[3]=((C_word*)t0)[3],a[4]=((C_word)li163),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_13042(t6,t2,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* do1254 in k12964 in k13268 in fm-spectrum in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_13042(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13042,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13195,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t5,a[5]=t4,a[6]=((C_word*)t0)[3],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  caar");
t7=*((C_word*)lf[223]+1);
((C_proc3)C_retrieve_proc(t7))(3,t7,t6,((C_word*)((C_word*)t0)[3])[1]);}

/* k13193 in do1254 in k12964 in k13268 in fm-spectrum in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_13195(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13195,2,t0,t1);}
if(C_truep((C_word)C_i_negativep(t1))){
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[6])+1,t4);
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_a_i_abs(&a,1,t6);
t8=C_mutate(((C_word *)((C_word*)t0)[4])+1,t7);
t9=(C_word)C_i_set_car(((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t10=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t11=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13179,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],a[7]=t10,tmp=(C_word)a,a+=8,tmp);
t12=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[5])[1]);
C_trace("ChickenBridge.scm: 378  -");
C_minus(3,0,t11,t12);}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* k13177 in k13193 in do1254 in k12964 in k13268 in fm-spectrum in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_13179(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13179,2,t0,t1);}
t2=(C_word)C_i_set_car(((C_word*)t0)[7],t1);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_i_assoc(t3,((C_word*)((C_word*)t0)[5])[1]);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13073,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
if(C_truep(t4)){
t6=(C_word)C_i_cdr(t4);
t7=(C_word)C_i_cadr(t4);
t8=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[6])[1]);
t9=(C_word)C_a_i_plus(&a,2,t7,t8);
t10=t5;
f_13073(t10,(C_word)C_i_set_car(t6,t9));}
else{
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13098,a[2]=t5,a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t7=(C_word)C_i_length(((C_word*)((C_word*)t0)[5])[1]);
t8=(C_word)C_a_i_minus(&a,2,t7,C_fix(1));
t9=C_SCHEME_UNDEFINED;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_set_block_item(t10,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13131,a[2]=((C_word*)t0)[2],a[3]=t10,a[4]=((C_word*)t0)[5],a[5]=((C_word)li162),tmp=(C_word)a,a+=6,tmp));
t12=((C_word*)t10)[1];
f_13131(t12,t6,t8,C_SCHEME_FALSE,C_SCHEME_FALSE);}}

/* do1260 in k13177 in k13193 in do1254 in k12964 in k13268 in fm-spectrum in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_13131(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13131,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t7=((C_word*)t5)[1];
t8=(C_truep(t7)?t7:(C_word)C_i_lessp(t2,C_fix(0)));
if(C_truep(t8)){
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,((C_word*)t5)[1]);}
else{
t9=(C_word)C_i_list_ref(((C_word*)((C_word*)t0)[4])[1],t2);
t10=(C_word)C_i_car(t9);
t11=C_set_block_item(t6,0,t10);
t12=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13145,a[2]=t6,a[3]=t5,a[4]=t1,a[5]=((C_word*)t0)[3],a[6]=t2,tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_lessp(((C_word*)t6)[1],((C_word*)((C_word*)t0)[2])[1]))){
t13=C_set_block_item(t5,0,t2);
t14=t12;
f_13145(t14,t13);}
else{
t13=t12;
f_13145(t13,C_SCHEME_UNDEFINED);}}}

/* k13143 in do1260 in k13177 in k13193 in do1254 in k12964 in k13268 in fm-spectrum in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_13145(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13145,NULL,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[6],C_fix(1));
t3=((C_word*)((C_word*)t0)[5])[1];
f_13131(t3,((C_word*)t0)[4],t2,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k13096 in k13177 in k13193 in do1254 in k12964 in k13268 in fm-spectrum in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_13098(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13098,2,t0,t1);}
t2=t1;
if(C_truep(t2)){
t3=(C_word)C_i_list_tail(((C_word*)((C_word*)t0)[4])[1],t1);
t4=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=(C_word)C_i_cdr(t3);
t7=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[3])[1],t6);
t8=((C_word*)t0)[2];
f_13073(t8,(C_word)C_i_set_cdr(t3,((C_word*)((C_word*)t0)[3])[1]));}
else{
t3=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[4])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=((C_word*)t0)[2];
f_13073(t5,t4);}}

/* k13071 in k13177 in k13193 in do1254 in k12964 in k13268 in fm-spectrum in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_13073(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[5])[1];
f_13042(t2,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k12967 in k12964 in k13268 in fm-spectrum in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_12969(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12969,2,t0,t1);}
t2=((C_word*)((C_word*)t0)[3])[1];
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12977,a[2]=t5,a[3]=t2,a[4]=t3,a[5]=((C_word)li161),tmp=(C_word)a,a+=6,tmp));
t7=((C_word*)t5)[1];
f_12977(t7,((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1],C_fix(0),t3);}

/* do1282 in k12967 in k12964 in k13268 in fm-spectrum in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_12977(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12977,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t6=(C_word)C_i_cdr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 378  make-spectrum");
f_10989(t1,C_SCHEME_FALSE,t3,((C_word*)t0)[3],t6);}
else{
t6=(C_word)C_i_car(t2);
t7=(C_word)C_i_car(t6);
t8=(C_word)C_i_cdr(t6);
t9=(C_word)C_i_cadr(t6);
t10=(C_word)C_a_i_abs(&a,1,t9);
t11=(C_word)C_i_set_car(t8,t10);
t12=(C_word)C_i_cdr(t6);
t13=(C_word)C_i_set_cdr(((C_word*)t5)[1],t12);
t14=(C_word)C_i_cdr(((C_word*)t5)[1]);
t15=C_set_block_item(t5,0,t14);
t16=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13010,a[2]=t5,a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t3,a[6]=t2,tmp=(C_word)a,a+=7,tmp);
t17=*((C_word*)lf[222]+1);
t18=t17;
((C_proc4)C_retrieve_proc(t18))(4,t18,t16,t2,t7);}}

/* k13008 in do1282 in k12967 in k12964 in k13268 in fm-spectrum in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_13010(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13010,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)t0)[6]);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],C_fix(1));
t4=((C_word*)((C_word*)t0)[4])[1];
f_12977(t4,((C_word*)t0)[3],t2,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* spectrum-keys in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_11480(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+101)){
C_save_and_reclaim((void*)tr3r,(void*)f_11480r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_11480r(t0,t1,t2,t3);}}

static void C_ccall f_11480r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word t36;
C_word t37;
C_word t38;
C_word t39;
C_word t40;
C_word t41;
C_word t42;
C_word t43;
C_word t44;
C_word t45;
C_word t46;
C_word t47;
C_word *a=C_alloc(101);
t4=C_fix(1);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_FALSE;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=C_SCHEME_FALSE;
t19=(*a=C_VECTOR_TYPE|1,a[1]=t18,tmp=(C_word)a,a+=2,tmp);
t20=C_SCHEME_FALSE;
t21=(*a=C_VECTOR_TYPE|1,a[1]=t20,tmp=(C_word)a,a+=2,tmp);
t22=C_SCHEME_FALSE;
t23=(*a=C_VECTOR_TYPE|1,a[1]=t22,tmp=(C_word)a,a+=2,tmp);
t24=C_SCHEME_FALSE;
t25=(*a=C_VECTOR_TYPE|1,a[1]=t24,tmp=(C_word)a,a+=2,tmp);
t26=C_SCHEME_FALSE;
t27=(*a=C_VECTOR_TYPE|1,a[1]=t26,tmp=(C_word)a,a+=2,tmp);
t28=t3;
t29=(*a=C_VECTOR_TYPE|1,a[1]=t28,tmp=(C_word)a,a+=2,tmp);
t30=C_SCHEME_FALSE;
t31=(*a=C_VECTOR_TYPE|1,a[1]=t30,tmp=(C_word)a,a+=2,tmp);
t32=(*a=C_CLOSURE_TYPE|18,a[1]=(C_word)f_11484,a[2]=t27,a[3]=t25,a[4]=t23,a[5]=t21,a[6]=t19,a[7]=t31,a[8]=t17,a[9]=t3,a[10]=t29,a[11]=t15,a[12]=t13,a[13]=t11,a[14]=t9,a[15]=t7,a[16]=t5,a[17]=t2,a[18]=t1,tmp=(C_word)a,a+=19,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t29)[1]))){
t33=t32;
f_11484(t33,C_SCHEME_UNDEFINED);}
else{
t33=(C_word)C_i_car(((C_word*)t29)[1]);
t34=(C_word)C_eqp(t33,lf[215]);
if(C_truep(t34)){
t35=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12726,a[2]=t3,a[3]=t32,a[4]=t29,a[5]=t31,a[6]=t17,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t17)[1])){
C_trace("error");
t36=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t36))(4,t36,t35,lf[19],lf[215]);}
else{
t36=t35;
f_12726(2,t36,C_SCHEME_UNDEFINED);}}
else{
t35=(C_word)C_eqp(t33,lf[216]);
if(C_truep(t35)){
t36=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12761,a[2]=t3,a[3]=t32,a[4]=t29,a[5]=t31,a[6]=t19,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t19)[1])){
C_trace("error");
t37=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t37))(4,t37,t36,lf[19],lf[216]);}
else{
t37=t36;
f_12761(2,t37,C_SCHEME_UNDEFINED);}}
else{
t36=(C_word)C_eqp(t33,lf[217]);
if(C_truep(t36)){
t37=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12796,a[2]=t3,a[3]=t32,a[4]=t29,a[5]=t31,a[6]=t21,a[7]=t9,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t21)[1])){
C_trace("error");
t38=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t38))(4,t38,t37,lf[19],lf[217]);}
else{
t38=t37;
f_12796(2,t38,C_SCHEME_UNDEFINED);}}
else{
t37=(C_word)C_eqp(t33,lf[218]);
if(C_truep(t37)){
t38=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12831,a[2]=t3,a[3]=t32,a[4]=t29,a[5]=t31,a[6]=t23,a[7]=t11,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t23)[1])){
C_trace("error");
t39=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t39))(4,t39,t38,lf[19],lf[218]);}
else{
t39=t38;
f_12831(2,t39,C_SCHEME_UNDEFINED);}}
else{
t38=(C_word)C_eqp(t33,lf[219]);
if(C_truep(t38)){
t39=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12866,a[2]=t3,a[3]=t32,a[4]=t29,a[5]=t31,a[6]=t25,a[7]=t13,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t25)[1])){
C_trace("error");
t40=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t40))(4,t40,t39,lf[19],lf[219]);}
else{
t40=t39;
f_12866(2,t40,C_SCHEME_UNDEFINED);}}
else{
t39=(C_word)C_eqp(t33,lf[220]);
if(C_truep(t39)){
t40=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12901,a[2]=t3,a[3]=t32,a[4]=t29,a[5]=t31,a[6]=t27,a[7]=t15,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t27)[1])){
C_trace("error");
t41=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t41))(4,t41,t40,lf[19],lf[220]);}
else{
t41=t40;
f_12901(2,t41,C_SCHEME_UNDEFINED);}}
else{
t40=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12930,a[2]=t32,a[3]=t17,a[4]=t5,a[5]=t29,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t31)[1])){
C_trace("error");
t41=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t41))(4,t41,t40,lf[10],t3);}
else{
t41=t40;
f_12930(2,t41,C_SCHEME_UNDEFINED);}}}}}}}}}

/* k12928 in spectrum-keys in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_12930(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12930,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12937,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12945,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k12943 in k12928 in spectrum-keys in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_12945(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_12937(2,t2,C_SCHEME_UNDEFINED);}}

/* k12935 in k12928 in spectrum-keys in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_12937(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_11484(t5,t4);}

/* k12899 in spectrum-keys in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_12901(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12901,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12905,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12905(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12903 in k12899 in spectrum-keys in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_12905(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11484(t7,t6);}

/* k12864 in spectrum-keys in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_12866(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12866,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12870,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12870(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12868 in k12864 in spectrum-keys in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_12870(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11484(t7,t6);}

/* k12829 in spectrum-keys in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_12831(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12831,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12835,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12835(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12833 in k12829 in spectrum-keys in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_12835(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11484(t7,t6);}

/* k12794 in spectrum-keys in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_12796(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12796,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12800,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12800(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12798 in k12794 in spectrum-keys in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_12800(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11484(t7,t6);}

/* k12759 in spectrum-keys in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_12761(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12761,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12765,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12765(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12763 in k12759 in spectrum-keys in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_12765(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11484(t7,t6);}

/* k12724 in spectrum-keys in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_12726(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12726,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12730,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12730(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12728 in k12724 in spectrum-keys in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_12730(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11484(t7,t6);}

/* k11482 in spectrum-keys in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_11484(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[73],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11484,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|18,a[1]=(C_word)f_11487,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],a[14]=((C_word*)t0)[14],a[15]=((C_word*)t0)[15],a[16]=((C_word*)t0)[16],a[17]=((C_word*)t0)[17],a[18]=((C_word*)t0)[18],tmp=(C_word)a,a+=19,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[10])[1]))){
t3=t2;
f_11487(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
t4=(C_word)C_eqp(t3,lf[215]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12486,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[16],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[8])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[215]);}
else{
t6=t5;
f_12486(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[216]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12521,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[15],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[216]);}
else{
t7=t6;
f_12521(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[217]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12556,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[14],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[217]);}
else{
t8=t7;
f_12556(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[218]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12591,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[13],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[218]);}
else{
t9=t8;
f_12591(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(C_word)C_eqp(t3,lf[219]);
if(C_truep(t8)){
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12626,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t10=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t10))(4,t10,t9,lf[19],lf[219]);}
else{
t10=t9;
f_12626(2,t10,C_SCHEME_UNDEFINED);}}
else{
t9=(C_word)C_eqp(t3,lf[220]);
if(C_truep(t9)){
t10=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12661,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t11=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t10,lf[19],lf[220]);}
else{
t11=t10;
f_12661(2,t11,C_SCHEME_UNDEFINED);}}
else{
t10=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12690,a[2]=t2,a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[15],a[5]=((C_word*)t0)[10],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
C_trace("error");
t11=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t10,lf[10],((C_word*)t0)[9]);}
else{
t11=t10;
f_12690(2,t11,C_SCHEME_UNDEFINED);}}}}}}}}}

/* k12688 in k11482 in spectrum-keys in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_12690(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12690,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12697,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12705,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k12703 in k12688 in k11482 in spectrum-keys in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_12705(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_12697(2,t2,C_SCHEME_UNDEFINED);}}

/* k12695 in k12688 in k11482 in spectrum-keys in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_12697(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_11487(t5,t4);}

/* k12659 in k11482 in spectrum-keys in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_12661(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12661,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12665,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12665(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12663 in k12659 in k11482 in spectrum-keys in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_12665(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11487(t7,t6);}

/* k12624 in k11482 in spectrum-keys in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_12626(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12626,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12630,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12630(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12628 in k12624 in k11482 in spectrum-keys in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_12630(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11487(t7,t6);}

/* k12589 in k11482 in spectrum-keys in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_12591(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12591,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12595,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12595(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12593 in k12589 in k11482 in spectrum-keys in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_12595(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11487(t7,t6);}

/* k12554 in k11482 in spectrum-keys in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_12556(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12556,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12560,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12560(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12558 in k12554 in k11482 in spectrum-keys in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_12560(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11487(t7,t6);}

/* k12519 in k11482 in spectrum-keys in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_12521(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12521,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12525,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12525(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12523 in k12519 in k11482 in spectrum-keys in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_12525(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11487(t7,t6);}

/* k12484 in k11482 in spectrum-keys in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_12486(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12486,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12490,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12490(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12488 in k12484 in k11482 in spectrum-keys in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_12490(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11487(t7,t6);}

/* k11485 in k11482 in spectrum-keys in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_11487(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[73],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11487,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|18,a[1]=(C_word)f_11490,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],a[14]=((C_word*)t0)[14],a[15]=((C_word*)t0)[15],a[16]=((C_word*)t0)[16],a[17]=((C_word*)t0)[17],a[18]=((C_word*)t0)[18],tmp=(C_word)a,a+=19,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[10])[1]))){
t3=t2;
f_11490(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
t4=(C_word)C_eqp(t3,lf[215]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12246,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[16],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[8])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[215]);}
else{
t6=t5;
f_12246(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[216]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12281,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[15],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[216]);}
else{
t7=t6;
f_12281(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[217]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12316,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[14],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[217]);}
else{
t8=t7;
f_12316(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[218]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12351,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[13],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[218]);}
else{
t9=t8;
f_12351(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(C_word)C_eqp(t3,lf[219]);
if(C_truep(t8)){
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12386,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t10=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t10))(4,t10,t9,lf[19],lf[219]);}
else{
t10=t9;
f_12386(2,t10,C_SCHEME_UNDEFINED);}}
else{
t9=(C_word)C_eqp(t3,lf[220]);
if(C_truep(t9)){
t10=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12421,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t11=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t10,lf[19],lf[220]);}
else{
t11=t10;
f_12421(2,t11,C_SCHEME_UNDEFINED);}}
else{
t10=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12450,a[2]=t2,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[14],a[5]=((C_word*)t0)[10],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
C_trace("error");
t11=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t10,lf[10],((C_word*)t0)[9]);}
else{
t11=t10;
f_12450(2,t11,C_SCHEME_UNDEFINED);}}}}}}}}}

/* k12448 in k11485 in k11482 in spectrum-keys in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_12450(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12450,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12457,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12465,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k12463 in k12448 in k11485 in k11482 in spectrum-keys in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_12465(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_12457(2,t2,C_SCHEME_UNDEFINED);}}

/* k12455 in k12448 in k11485 in k11482 in spectrum-keys in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_12457(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_11490(t5,t4);}

/* k12419 in k11485 in k11482 in spectrum-keys in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_12421(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12421,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12425,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12425(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12423 in k12419 in k11485 in k11482 in spectrum-keys in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_12425(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11490(t7,t6);}

/* k12384 in k11485 in k11482 in spectrum-keys in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_12386(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12386,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12390,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12390(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12388 in k12384 in k11485 in k11482 in spectrum-keys in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_12390(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11490(t7,t6);}

/* k12349 in k11485 in k11482 in spectrum-keys in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_12351(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12351,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12355,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12355(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12353 in k12349 in k11485 in k11482 in spectrum-keys in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_12355(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11490(t7,t6);}

/* k12314 in k11485 in k11482 in spectrum-keys in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_12316(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12316,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12320,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12320(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12318 in k12314 in k11485 in k11482 in spectrum-keys in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_12320(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11490(t7,t6);}

/* k12279 in k11485 in k11482 in spectrum-keys in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_12281(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12281,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12285,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12285(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12283 in k12279 in k11485 in k11482 in spectrum-keys in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_12285(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11490(t7,t6);}

/* k12244 in k11485 in k11482 in spectrum-keys in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_12246(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12246,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12250,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12250(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12248 in k12244 in k11485 in k11482 in spectrum-keys in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_12250(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11490(t7,t6);}

/* k11488 in k11485 in k11482 in spectrum-keys in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_11490(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[73],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11490,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|18,a[1]=(C_word)f_11493,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],a[14]=((C_word*)t0)[14],a[15]=((C_word*)t0)[15],a[16]=((C_word*)t0)[16],a[17]=((C_word*)t0)[17],a[18]=((C_word*)t0)[18],tmp=(C_word)a,a+=19,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[10])[1]))){
t3=t2;
f_11493(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
t4=(C_word)C_eqp(t3,lf[215]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12006,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[16],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[8])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[215]);}
else{
t6=t5;
f_12006(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[216]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12041,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[15],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[216]);}
else{
t7=t6;
f_12041(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[217]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12076,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[14],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[217]);}
else{
t8=t7;
f_12076(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[218]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12111,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[13],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[218]);}
else{
t9=t8;
f_12111(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(C_word)C_eqp(t3,lf[219]);
if(C_truep(t8)){
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12146,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t10=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t10))(4,t10,t9,lf[19],lf[219]);}
else{
t10=t9;
f_12146(2,t10,C_SCHEME_UNDEFINED);}}
else{
t9=(C_word)C_eqp(t3,lf[220]);
if(C_truep(t9)){
t10=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12181,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t11=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t10,lf[19],lf[220]);}
else{
t11=t10;
f_12181(2,t11,C_SCHEME_UNDEFINED);}}
else{
t10=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12210,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[13],a[5]=((C_word*)t0)[10],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
C_trace("error");
t11=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t10,lf[10],((C_word*)t0)[9]);}
else{
t11=t10;
f_12210(2,t11,C_SCHEME_UNDEFINED);}}}}}}}}}

/* k12208 in k11488 in k11485 in k11482 in spectrum-keys in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_12210(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12210,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12217,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12225,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k12223 in k12208 in k11488 in k11485 in k11482 in spectrum-keys in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_12225(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_12217(2,t2,C_SCHEME_UNDEFINED);}}

/* k12215 in k12208 in k11488 in k11485 in k11482 in spectrum-keys in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_12217(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_11493(t5,t4);}

/* k12179 in k11488 in k11485 in k11482 in spectrum-keys in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_12181(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12181,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12185,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12185(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12183 in k12179 in k11488 in k11485 in k11482 in spectrum-keys in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_12185(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11493(t7,t6);}

/* k12144 in k11488 in k11485 in k11482 in spectrum-keys in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_12146(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12146,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12150,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12150(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12148 in k12144 in k11488 in k11485 in k11482 in spectrum-keys in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_12150(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11493(t7,t6);}

/* k12109 in k11488 in k11485 in k11482 in spectrum-keys in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_12111(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12111,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12115,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12115(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12113 in k12109 in k11488 in k11485 in k11482 in spectrum-keys in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_12115(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11493(t7,t6);}

/* k12074 in k11488 in k11485 in k11482 in spectrum-keys in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_12076(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12076,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12080,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12080(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12078 in k12074 in k11488 in k11485 in k11482 in spectrum-keys in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_12080(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11493(t7,t6);}

/* k12039 in k11488 in k11485 in k11482 in spectrum-keys in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_12041(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12041,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12045,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12045(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12043 in k12039 in k11488 in k11485 in k11482 in spectrum-keys in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_12045(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11493(t7,t6);}

/* k12004 in k11488 in k11485 in k11482 in spectrum-keys in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_12006(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12006,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12010,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12010(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12008 in k12004 in k11488 in k11485 in k11482 in spectrum-keys in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_12010(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11493(t7,t6);}

/* k11491 in k11488 in k11485 in k11482 in spectrum-keys in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_11493(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[73],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11493,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|18,a[1]=(C_word)f_11496,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],a[14]=((C_word*)t0)[14],a[15]=((C_word*)t0)[15],a[16]=((C_word*)t0)[16],a[17]=((C_word*)t0)[17],a[18]=((C_word*)t0)[18],tmp=(C_word)a,a+=19,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[10])[1]))){
t3=t2;
f_11496(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
t4=(C_word)C_eqp(t3,lf[215]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11766,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[16],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[8])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[215]);}
else{
t6=t5;
f_11766(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[216]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11801,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[15],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[216]);}
else{
t7=t6;
f_11801(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[217]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11836,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[14],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[217]);}
else{
t8=t7;
f_11836(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[218]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11871,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[13],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[218]);}
else{
t9=t8;
f_11871(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(C_word)C_eqp(t3,lf[219]);
if(C_truep(t8)){
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11906,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t10=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t10))(4,t10,t9,lf[19],lf[219]);}
else{
t10=t9;
f_11906(2,t10,C_SCHEME_UNDEFINED);}}
else{
t9=(C_word)C_eqp(t3,lf[220]);
if(C_truep(t9)){
t10=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11941,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t11=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t10,lf[19],lf[220]);}
else{
t11=t10;
f_11941(2,t11,C_SCHEME_UNDEFINED);}}
else{
t10=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11970,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[12],a[5]=((C_word*)t0)[10],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
C_trace("error");
t11=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t10,lf[10],((C_word*)t0)[9]);}
else{
t11=t10;
f_11970(2,t11,C_SCHEME_UNDEFINED);}}}}}}}}}

/* k11968 in k11491 in k11488 in k11485 in k11482 in spectrum-keys in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_11970(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11970,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11977,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11985,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k11983 in k11968 in k11491 in k11488 in k11485 in k11482 in spectrum-keys in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_11985(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_11977(2,t2,C_SCHEME_UNDEFINED);}}

/* k11975 in k11968 in k11491 in k11488 in k11485 in k11482 in spectrum-keys in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_11977(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_11496(t5,t4);}

/* k11939 in k11491 in k11488 in k11485 in k11482 in spectrum-keys in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_11941(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11941,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11945,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11945(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11943 in k11939 in k11491 in k11488 in k11485 in k11482 in spectrum-keys in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_11945(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11496(t7,t6);}

/* k11904 in k11491 in k11488 in k11485 in k11482 in spectrum-keys in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_11906(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11906,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11910,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11910(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11908 in k11904 in k11491 in k11488 in k11485 in k11482 in spectrum-keys in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_11910(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11496(t7,t6);}

/* k11869 in k11491 in k11488 in k11485 in k11482 in spectrum-keys in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_11871(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11871,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11875,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11875(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11873 in k11869 in k11491 in k11488 in k11485 in k11482 in spectrum-keys in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_11875(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11496(t7,t6);}

/* k11834 in k11491 in k11488 in k11485 in k11482 in spectrum-keys in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_11836(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11836,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11840,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11840(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11838 in k11834 in k11491 in k11488 in k11485 in k11482 in spectrum-keys in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_11840(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11496(t7,t6);}

/* k11799 in k11491 in k11488 in k11485 in k11482 in spectrum-keys in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_11801(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11801,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11805,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11805(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11803 in k11799 in k11491 in k11488 in k11485 in k11482 in spectrum-keys in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_11805(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11496(t7,t6);}

/* k11764 in k11491 in k11488 in k11485 in k11482 in spectrum-keys in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_11766(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11766,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11770,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11770(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11768 in k11764 in k11491 in k11488 in k11485 in k11482 in spectrum-keys in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_11770(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11496(t7,t6);}

/* k11494 in k11491 in k11488 in k11485 in k11482 in spectrum-keys in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_11496(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[66],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11496,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_11499,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[10],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[12],a[6]=((C_word*)t0)[13],a[7]=((C_word*)t0)[14],a[8]=((C_word*)t0)[15],a[9]=((C_word*)t0)[16],a[10]=((C_word*)t0)[17],a[11]=((C_word*)t0)[18],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[10])[1]))){
t3=t2;
f_11499(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
t4=(C_word)C_eqp(t3,lf[215]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11526,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[16],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[8])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[215]);}
else{
t6=t5;
f_11526(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[216]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11561,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[15],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[216]);}
else{
t7=t6;
f_11561(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[217]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11596,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[14],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[217]);}
else{
t8=t7;
f_11596(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[218]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11631,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[13],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[218]);}
else{
t9=t8;
f_11631(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(C_word)C_eqp(t3,lf[219]);
if(C_truep(t8)){
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11666,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t10=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t10))(4,t10,t9,lf[19],lf[219]);}
else{
t10=t9;
f_11666(2,t10,C_SCHEME_UNDEFINED);}}
else{
t9=(C_word)C_eqp(t3,lf[220]);
if(C_truep(t9)){
t10=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11701,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t11=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t10,lf[19],lf[220]);}
else{
t11=t10;
f_11701(2,t11,C_SCHEME_UNDEFINED);}}
else{
t10=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11730,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[10],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
C_trace("error");
t11=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t10,lf[10],((C_word*)t0)[9]);}
else{
t11=t10;
f_11730(2,t11,C_SCHEME_UNDEFINED);}}}}}}}}}

/* k11728 in k11494 in k11491 in k11488 in k11485 in k11482 in spectrum-keys in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_11730(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11730,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11737,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11745,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k11743 in k11728 in k11494 in k11491 in k11488 in k11485 in k11482 in spectrum-keys in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_11745(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_11737(2,t2,C_SCHEME_UNDEFINED);}}

/* k11735 in k11728 in k11494 in k11491 in k11488 in k11485 in k11482 in spectrum-keys in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_11737(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_11499(t5,t4);}

/* k11699 in k11494 in k11491 in k11488 in k11485 in k11482 in spectrum-keys in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_11701(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11701,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11705,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11705(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11703 in k11699 in k11494 in k11491 in k11488 in k11485 in k11482 in spectrum-keys in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_11705(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11499(t7,t6);}

/* k11664 in k11494 in k11491 in k11488 in k11485 in k11482 in spectrum-keys in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_11666(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11666,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11670,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11670(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11668 in k11664 in k11494 in k11491 in k11488 in k11485 in k11482 in spectrum-keys in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_11670(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11499(t7,t6);}

/* k11629 in k11494 in k11491 in k11488 in k11485 in k11482 in spectrum-keys in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_11631(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11631,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11635,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11635(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11633 in k11629 in k11494 in k11491 in k11488 in k11485 in k11482 in spectrum-keys in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_11635(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11499(t7,t6);}

/* k11594 in k11494 in k11491 in k11488 in k11485 in k11482 in spectrum-keys in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_11596(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11596,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11600,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11600(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11598 in k11594 in k11494 in k11491 in k11488 in k11485 in k11482 in spectrum-keys in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_11600(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11499(t7,t6);}

/* k11559 in k11494 in k11491 in k11488 in k11485 in k11482 in spectrum-keys in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_11561(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11561,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11565,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11565(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11563 in k11559 in k11494 in k11491 in k11488 in k11485 in k11482 in spectrum-keys in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_11565(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11499(t7,t6);}

/* k11524 in k11494 in k11491 in k11488 in k11485 in k11482 in spectrum-keys in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_11526(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11526,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11530,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11530(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11528 in k11524 in k11494 in k11491 in k11488 in k11485 in k11482 in spectrum-keys in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_11530(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11499(t7,t6);}

/* k11497 in k11494 in k11491 in k11488 in k11485 in k11482 in spectrum-keys in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_11499(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11499,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_11502,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[11],tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_11502(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k11500 in k11497 in k11494 in k11491 in k11488 in k11485 in k11482 in spectrum-keys in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_11502(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11502,2,t0,t1);}
t2=((C_word*)t0)[9];
t3=((C_word*)t0)[8];
t4=((C_word*)((C_word*)t0)[7])[1];
t5=((C_word*)((C_word*)t0)[6])[1];
t6=((C_word*)((C_word*)t0)[5])[1];
t7=((C_word*)((C_word*)t0)[4])[1];
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=((C_word*)((C_word*)t0)[3])[1];
t10=((C_word*)((C_word*)t0)[2])[1];
t11=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_11261,a[2]=t3,a[3]=t8,a[4]=t5,a[5]=t2,a[6]=t4,a[7]=t6,a[8]=t10,a[9]=t9,tmp=(C_word)a,a+=10,tmp);
t12=(C_word)C_eqp(((C_word*)t8)[1],C_SCHEME_TRUE);
if(C_truep(t12)){
t13=C_set_block_item(t8,0,C_fix(1));
t14=t11;
f_11261(t14,t13);}
else{
t13=t11;
f_11261(t13,C_SCHEME_UNDEFINED);}}

/* k11259 in k11500 in k11497 in k11494 in k11491 in k11488 in k11485 in k11482 in spectrum-keys in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_11261(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word ab[35],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11261,NULL,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_UNDEFINED;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_UNDEFINED;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_UNDEFINED;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_UNDEFINED;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t17=C_set_block_item(t3,0,t16);
t18=(*a=C_CLOSURE_TYPE|17,a[1]=(C_word)f_11270,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t15,a[7]=t13,a[8]=t3,a[9]=t16,a[10]=((C_word*)t0)[6],a[11]=t11,a[12]=((C_word*)t0)[7],a[13]=((C_word*)t0)[8],a[14]=((C_word*)t0)[9],a[15]=t9,a[16]=t7,a[17]=t5,tmp=(C_word)a,a+=18,tmp);
C_trace("ChickenBridge.scm: 378  spectrum-freqs");
t19=C_retrieve(lf[200]);
((C_proc3)C_retrieve_proc(t19))(3,t19,t18,((C_word*)t0)[2]);}

/* k11268 in k11259 in k11500 in k11497 in k11494 in k11491 in k11488 in k11485 in k11482 in spectrum-keys in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_11270(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11270,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[17])+1,t1);
t3=(*a=C_CLOSURE_TYPE|16,a[1]=(C_word)f_11274,a[2]=((C_word*)t0)[17],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],a[14]=((C_word*)t0)[14],a[15]=((C_word*)t0)[15],a[16]=((C_word*)t0)[16],tmp=(C_word)a,a+=17,tmp);
C_trace("ChickenBridge.scm: 378  spectrum-amps");
t4=C_retrieve(lf[202]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k11272 in k11268 in k11259 in k11500 in k11497 in k11494 in k11491 in k11488 in k11485 in k11482 in spectrum-keys in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_11274(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11274,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[16])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[15])+1,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11276,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[13],a[4]=((C_word*)t0)[14],a[5]=((C_word)li154),tmp=(C_word)a,a+=6,tmp));
t4=C_mutate(((C_word *)((C_word*)t0)[11])+1,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11348,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[10],a[5]=((C_word)li155),tmp=(C_word)a,a+=6,tmp));
t5=C_mutate(((C_word *)((C_word*)t0)[7])+1,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11381,a[2]=((C_word*)t0)[15],a[3]=((C_word*)t0)[11],a[4]=((C_word)li156),tmp=(C_word)a,a+=5,tmp));
t6=C_mutate(((C_word *)((C_word*)t0)[6])+1,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11391,a[2]=((C_word*)t0)[15],a[3]=((C_word*)t0)[11],a[4]=((C_word*)t0)[9],a[5]=((C_word)li157),tmp=(C_word)a,a+=6,tmp));
t7=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11411,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[10],a[4]=((C_word*)t0)[9],tmp=(C_word)a,a+=5,tmp);
t8=(C_word)C_i_not(((C_word*)t0)[4]);
t9=(C_truep(t8)?t8:(C_word)C_i_not(((C_word*)((C_word*)t0)[16])[1]));
if(C_truep(t9)){
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("for-each");
t10=*((C_word*)lf[209]+1);
((C_proc4)(void*)(*((C_word*)t10+1)))(4,t10,t7,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[2])[1]);}
else{
C_trace("for-each");
t10=*((C_word*)lf[209]+1);
((C_proc4)(void*)(*((C_word*)t10+1)))(4,t10,t7,((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[2])[1]);}}
else{
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
t10=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11446,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[4],a[4]=((C_word)li158),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  for-each");
t11=*((C_word*)lf[214]+1);
((C_proc5)C_retrieve_proc(t11))(5,t11,t7,t10,((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[16])[1]);}
else{
t10=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11461,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[4],a[4]=((C_word)li159),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  for-each");
t11=*((C_word*)lf[214]+1);
((C_proc5)C_retrieve_proc(t11))(5,t11,t7,t10,((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[16])[1]);}}}

/* a11460 in k11272 in k11268 in k11259 in k11500 in k11497 in k11494 in k11491 in k11488 in k11485 in k11482 in spectrum-keys in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_11461(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_11461,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_greater_or_equalp(t3,((C_word*)t0)[3]))){
C_trace("ChickenBridge.scm: 378  addkey");
t4=((C_word*)((C_word*)t0)[2])[1];
((C_proc3)C_retrieve_proc(t4))(3,t4,t1,t2);}
else{
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_UNDEFINED);}}

/* a11445 in k11272 in k11268 in k11259 in k11500 in k11497 in k11494 in k11491 in k11488 in k11485 in k11482 in spectrum-keys in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_11446(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_11446,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_greater_or_equalp(t3,((C_word*)t0)[3]))){
C_trace("ChickenBridge.scm: 378  adduniquekey");
t4=((C_word*)((C_word*)t0)[2])[1];
((C_proc3)C_retrieve_proc(t4))(3,t4,t1,t2);}
else{
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_UNDEFINED);}}

/* k11409 in k11272 in k11268 in k11259 in k11500 in k11497 in k11494 in k11491 in k11488 in k11485 in k11482 in spectrum-keys in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_11411(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=(C_word)C_eqp(((C_word*)t0)[3],C_fix(0));
if(C_truep(t3)){
C_trace("ChickenBridge.scm: 378  shuffle!");
t4=C_retrieve(lf[142]);
((C_proc3)C_retrieve_proc(t4))(3,t4,((C_word*)t0)[2],t2);}
else{
t4=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t2);}}

/* f_11391 in k11272 in k11268 in k11259 in k11500 in k11497 in k11494 in k11491 in k11488 in k11485 in k11482 in spectrum-keys in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_11391(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11391,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11395,a[2]=((C_word*)t0)[3],a[3]=t1,a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  getkey");
t4=((C_word*)((C_word*)t0)[2])[1];
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k11393 */
static void C_ccall f_11395(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_member(t1,t2))){
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 378  add");
t3=((C_word*)((C_word*)t0)[2])[1];
((C_proc3)C_retrieve_proc(t3))(3,t3,((C_word*)t0)[3],t1);}}

/* f_11381 in k11272 in k11268 in k11259 in k11500 in k11497 in k11494 in k11491 in k11488 in k11485 in k11482 in spectrum-keys in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_11381(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11381,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11389,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  getkey");
t4=((C_word*)((C_word*)t0)[2])[1];
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k11387 */
static void C_ccall f_11389(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  add");
t2=((C_word*)((C_word*)t0)[3])[1];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* f_11348 in k11272 in k11268 in k11259 in k11500 in k11497 in k11494 in k11491 in k11488 in k11485 in k11482 in spectrum-keys in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_11348(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11348,3,t0,t1,t2);}
t3=(C_word)C_eqp(((C_word*)t0)[4],C_fix(-1));
if(C_truep(t3)){
t4=(C_word)C_a_i_list(&a,1,t2);
t5=(C_word)C_i_cdr(((C_word*)t0)[3]);
t6=(C_word)C_i_set_cdr(t4,t5);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_i_set_cdr(((C_word*)t0)[3],t4));}
else{
t4=(C_word)C_a_i_list(&a,1,t2);
t5=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t4);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t6);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,t7);}}

/* f_11276 in k11272 in k11268 in k11259 in k11500 in k11497 in k11494 in k11491 in k11488 in k11485 in k11482 in spectrum-keys in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_11276(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11276,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11280,a[2]=((C_word*)t0)[3],a[3]=t1,a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
if(C_truep(((C_word*)t0)[2])){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11343,a[2]=((C_word*)t0)[2],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  key");
t5=C_retrieve(lf[177]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}
else{
C_trace("ChickenBridge.scm: 378  key");
t4=C_retrieve(lf[177]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}}

/* k11341 */
static void C_ccall f_11343(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  quantize");
t2=C_retrieve(lf[105]);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* k11278 */
static void C_ccall f_11280(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11280,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_truep(((C_word*)t0)[4])?(C_word)C_i_lessp(((C_word*)t3)[1],((C_word*)t0)[4]):C_SCHEME_FALSE);
if(C_truep(t4)){
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11291,a[2]=t6,a[3]=((C_word*)t0)[4],a[4]=t3,a[5]=((C_word)li152),tmp=(C_word)a,a+=6,tmp));
t8=((C_word*)t6)[1];
f_11291(t8,((C_word*)t0)[3]);}
else{
t5=(C_truep(((C_word*)t0)[2])?(C_word)C_i_greaterp(((C_word*)t3)[1],((C_word*)t0)[2]):C_SCHEME_FALSE);
if(C_truep(t5)){
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11316,a[2]=t7,a[3]=((C_word*)t0)[2],a[4]=t3,a[5]=((C_word)li153),tmp=(C_word)a,a+=6,tmp));
t9=((C_word*)t7)[1];
f_11316(t9,((C_word*)t0)[3]);}
else{
t6=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,((C_word*)t3)[1]);}}}

/* do995 in k11278 */
static void C_fcall f_11316(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
loop:
a=C_alloc(4);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_11316,NULL,2,t0,t1);}
if(C_truep((C_word)C_i_less_or_equalp(((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]))){
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[4])[1]);}
else{
t2=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[4])[1],C_fix(12));
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t5=t1;
t1=t5;
goto loop;}}

/* do991 in k11278 */
static void C_fcall f_11291(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
loop:
a=C_alloc(4);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_11291,NULL,2,t0,t1);}
if(C_truep((C_word)C_i_greater_or_equalp(((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]))){
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[4])[1]);}
else{
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[4])[1],C_fix(12));
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t5=t1;
t1=t5;
goto loop;}}

/* spectrum-maxamp in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_11232(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11232,3,t0,t1,t2);}
t3=lf[212];
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11236,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  spectrum-amps");
t6=C_retrieve(lf[202]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,t2);}

/* k11234 in spectrum-maxamp in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_11236(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11236,2,t0,t1);}
t2=t1;
if(C_truep(t2)){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11245,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11247,a[2]=((C_word*)t0)[2],a[3]=((C_word)li150),tmp=(C_word)a,a+=4,tmp);
C_trace("for-each");
t5=*((C_word*)lf[209]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t3,t4,t1);}
else{
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)((C_word*)t0)[2])[1]);}}

/* a11246 in k11234 in spectrum-maxamp in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_11247(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11247,3,t0,t1,t2);}
if(C_truep((C_word)C_i_greaterp(t2,((C_word*)((C_word*)t0)[2])[1]))){
t3=C_mutate(((C_word *)((C_word*)t0)[2])+1,t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t3);}
else{
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_UNDEFINED);}}

/* k11243 in k11234 in spectrum-maxamp in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_11245(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* spectrum-minamp in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_11201(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11201,3,t0,t1,t2);}
t3=C_SCHEME_FALSE;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11205,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  spectrum-amps");
t6=C_retrieve(lf[202]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,t2);}

/* k11203 in spectrum-minamp in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_11205(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11205,2,t0,t1);}
t2=t1;
if(C_truep(t2)){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11214,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11216,a[2]=((C_word*)t0)[2],a[3]=((C_word)li148),tmp=(C_word)a,a+=4,tmp);
C_trace("for-each");
t5=*((C_word*)lf[209]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t3,t4,t1);}
else{
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,lf[210]);}}

/* a11215 in k11203 in spectrum-minamp in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_11216(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11216,3,t0,t1,t2);}
t3=(C_word)C_i_not(((C_word*)((C_word*)t0)[2])[1]);
t4=(C_truep(t3)?t3:(C_word)C_i_lessp(t2,((C_word*)((C_word*)t0)[2])[1]));
if(C_truep(t4)){
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t2);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t5);}
else{
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_UNDEFINED);}}

/* k11212 in k11203 in spectrum-minamp in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_11214(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* spectrum-maxfreq in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_11183(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11183,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11191,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  spectrum-freqs");
t4=C_retrieve(lf[200]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k11189 in spectrum-maxfreq in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_11191(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11191,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11199,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  spectrum-size");
t3=C_retrieve(lf[198]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k11197 in k11189 in spectrum-maxfreq in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_11199(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11199,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_list_ref(((C_word*)t0)[2],t2));}

/* spectrum-minfreq in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_11173(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11173,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11181,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  spectrum-freqs");
t4=C_retrieve(lf[200]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k11179 in spectrum-minfreq in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_11181(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_car(t1));}

/* spectrum-pairs in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_11114(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11114,3,t0,t1,t2);}
t3=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t4=t3;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11121,a[2]=t2,a[3]=t1,a[4]=t5,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  spectrum-freqs");
t7=C_retrieve(lf[200]);
((C_proc3)C_retrieve_proc(t7))(3,t7,t6,t2);}

/* k11119 in spectrum-pairs in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_11121(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11121,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11124,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  spectrum-amps");
t3=C_retrieve(lf[202]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k11122 in k11119 in spectrum-pairs in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_11124(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11124,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11127,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t1,a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  spectrum-size");
t3=C_retrieve(lf[198]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k11125 in k11122 in k11119 in spectrum-pairs in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_11127(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11127,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_11132,a[2]=t3,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,a[8]=((C_word)li144),tmp=(C_word)a,a+=9,tmp));
t5=((C_word*)t3)[1];
f_11132(t5,((C_word*)t0)[2],C_fix(0));}

/* do954 in k11125 in k11122 in k11119 in spectrum-pairs in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_11132(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
loop:
a=C_alloc(10);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_11132,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nequalp(t2,((C_word*)t0)[7]))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_cdr(((C_word*)t0)[6]));}
else{
t3=(C_word)C_i_list_ref(((C_word*)t0)[5],t2);
t4=(C_truep(((C_word*)t0)[4])?(C_word)C_i_list_ref(((C_word*)t0)[4],t2):lf[205]);
t5=(C_word)C_a_i_list(&a,2,t3,t4);
t6=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[3])[1],t5);
t7=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t8=C_mutate(((C_word *)((C_word*)t0)[3])+1,t7);
t9=(C_word)C_a_i_plus(&a,2,t2,C_fix(1));
t11=t1;
t12=t9;
t1=t11;
t2=t12;
goto loop;}}

/* spectrum-copy in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_11076(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11076,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11084,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  spectrum-time");
t4=C_retrieve(lf[195]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k11082 in spectrum-copy in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_11084(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11084,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11088,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  spectrum-size");
t3=C_retrieve(lf[198]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k11086 in k11082 in spectrum-copy in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_11088(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11088,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11092,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11108,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  spectrum-freqs");
t4=C_retrieve(lf[200]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k11106 in k11086 in k11082 in spectrum-copy in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_11108(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  append");
t2=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],t1,C_SCHEME_END_OF_LIST);}

/* k11090 in k11086 in k11082 in spectrum-copy in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_11092(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11092,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11096,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11100,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  spectrum-amps");
t4=C_retrieve(lf[202]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k11098 in k11090 in k11086 in k11082 in spectrum-copy in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_11100(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  append");
t2=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],t1,C_SCHEME_END_OF_LIST);}

/* k11094 in k11090 in k11086 in k11082 in spectrum-copy in k11072 in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_11096(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  make-spectrum");
f_10989(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* spectrum-amps in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_11064(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11064,3,t0,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[193]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(4)));}

/* spectrum-amps-set! in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_11055(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11055,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[193]);
C_trace("ChickenBridge.scm: 378  ##sys#block-set!");
t5=*((C_word*)lf[197]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(4),t3);}

/* spectrum-freqs in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_11046(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11046,3,t0,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[193]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(3)));}

/* spectrum-freqs-set! in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_11037(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11037,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[193]);
C_trace("ChickenBridge.scm: 378  ##sys#block-set!");
t5=*((C_word*)lf[197]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(3),t3);}

/* spectrum-size in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_11028(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11028,3,t0,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[193]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* spectrum-size-set! in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_11019(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11019,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[193]);
C_trace("ChickenBridge.scm: 378  ##sys#block-set!");
t5=*((C_word*)lf[197]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(2),t3);}

/* spectrum-time in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_11010(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11010,3,t0,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[193]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* spectrum? in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_10995(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10995,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_structurep(t2,lf[193]));}

/* make-spectrum in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_10989(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10989,NULL,5,t1,t2,t3,t4,t5);}
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_a_i_record(&a,5,lf[193],t2,t3,t4,t5));}

/* scale-order in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_10847(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+7)){
C_save_and_reclaim((void*)tr3r,(void*)f_10847r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_10847r(t0,t1,t2,t3);}}

static void C_ccall f_10847r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(7);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10851,a[2]=t2,a[3]=t1,a[4]=t4,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t4)[1]))){
t6=C_set_block_item(t4,0,C_fix(1));
t7=t5;
f_10851(t7,t6);}
else{
t6=(C_word)C_i_car(((C_word*)t4)[1]);
t7=C_set_block_item(t4,0,t6);
t8=t5;
f_10851(t8,t7);}}

/* k10849 in scale-order in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_10851(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10851,NULL,2,t0,t1);}
switch(((C_word*)((C_word*)t0)[4])[1]){
case C_fix(1):
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10862,a[2]=((C_word)li131),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  sort");
t3=C_retrieve(lf[190]);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);
case C_fix(-1):
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10920,a[2]=((C_word)li132),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  sort");
t3=C_retrieve(lf[190]);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);
case C_fix(0):
C_trace("ChickenBridge.scm: 377  shuffle");
t2=C_retrieve(lf[143]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);
default:
C_trace("ChickenBridge.scm: 377  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[191],((C_word*)((C_word*)t0)[4])[1]);}}

/* a10919 in k10849 in scale-order in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_10920(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_10920,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_numberp(t2))){
if(C_truep((C_word)C_i_numberp(t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_greaterp(t2,t3));}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10943,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  key");
t5=C_retrieve(lf[177]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t3);}}
else{
if(C_truep((C_word)C_i_numberp(t3))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10956,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  key");
t5=C_retrieve(lf[177]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10963,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  key");
t5=C_retrieve(lf[177]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}}}

/* k10961 in a10919 in k10849 in scale-order in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_10963(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10963,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10967,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  key");
t3=C_retrieve(lf[177]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k10965 in k10961 in a10919 in k10849 in scale-order in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_10967(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_greaterp(((C_word*)t0)[2],t1));}

/* k10954 in a10919 in k10849 in scale-order in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_10956(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_greaterp(t1,((C_word*)t0)[2]));}

/* k10941 in a10919 in k10849 in scale-order in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_10943(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_greaterp(((C_word*)t0)[2],t1));}

/* a10861 in k10849 in scale-order in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_10862(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_10862,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_numberp(t2))){
if(C_truep((C_word)C_i_numberp(t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_lessp(t2,t3));}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10885,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  key");
t5=C_retrieve(lf[177]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t3);}}
else{
if(C_truep((C_word)C_i_numberp(t3))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10898,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  key");
t5=C_retrieve(lf[177]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10905,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  key");
t5=C_retrieve(lf[177]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}}}

/* k10903 in a10861 in k10849 in scale-order in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_10905(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10905,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10909,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  key");
t3=C_retrieve(lf[177]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k10907 in k10903 in a10861 in k10849 in scale-order in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_10909(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_lessp(((C_word*)t0)[2],t1));}

/* k10896 in a10861 in k10849 in scale-order in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_10898(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_lessp(t1,((C_word*)t0)[2]));}

/* k10883 in a10861 in k10849 in scale-order in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_10885(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_lessp(((C_word*)t0)[2],t1));}

/* transpose in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_10681(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[20],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_10681,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_numberp(t2))){
if(C_truep((C_word)C_i_numberp(t3))){
t4=(C_word)C_i_lessp(t2,C_fix(12));
t5=(C_truep(t4)?(C_word)C_i_lessp(t3,C_fix(12)):C_SCHEME_FALSE);
if(C_truep(t5)){
t6=(C_word)C_a_i_plus(&a,2,t2,t3);
C_trace("ChickenBridge.scm: 377  modulo");
t7=*((C_word*)lf[130]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t1,t6,C_fix(12));}
else{
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_a_i_plus(&a,2,t2,t3));}}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10727,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  key");
t5=C_retrieve(lf[177]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t3);}}
else{
if(C_truep((C_word)C_i_pairp(t2))){
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10734,a[2]=((C_word)li128),tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10782,a[2]=t4,a[3]=t1,a[4]=t2,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_numberp(t3))){
t6=t5;
f_10782(2,t6,t3);}
else{
C_trace("ChickenBridge.scm: 377  key");
t6=C_retrieve(lf[177]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,t3);}}
else{
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t1,lf[186],t2);}}}

/* k10780 in transpose in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_10782(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10782,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_numberp(t2))){
t3=(C_word)C_i_car(((C_word*)t0)[4]);
t4=(C_word)C_i_lessp(t3,C_fix(12));
t5=(C_truep(t4)?(C_word)C_i_lessp(t1,C_fix(12)):C_SCHEME_FALSE);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10799,a[2]=t1,a[3]=((C_word)li129),tmp=(C_word)a,a+=4,tmp);
C_trace("map");
t7=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t7+1)))(4,t7,((C_word*)t0)[3],t6,((C_word*)t0)[4]);}
else{
C_trace("ChickenBridge.scm: 377  transpkeys");
f_10734(((C_word*)t0)[3],((C_word*)t0)[4],t1);}}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10827,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10831,a[2]=t1,a[3]=t3,a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  key");
t5=C_retrieve(lf[177]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,((C_word*)t0)[4]);}}

/* k10829 in k10780 in transpose in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_10831(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  transpkeys");
f_10734(((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* k10825 in k10780 in transpose in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_10827(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  note");
t2=C_retrieve(lf[175]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* a10798 in k10780 in transpose in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_10799(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_10799,3,t0,t1,t2);}
t3=(C_word)C_a_i_plus(&a,2,t2,((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 377  modulo");
t4=*((C_word*)lf[130]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t1,t3,C_fix(12));}

/* transpkeys in transpose in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_10734(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10734,NULL,3,t1,t2,t3);}
t4=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10743,a[2]=t6,a[3]=t3,a[4]=t4,a[5]=((C_word)li127),tmp=(C_word)a,a+=6,tmp));
t8=((C_word*)t6)[1];
f_10743(t8,t1,t2,t4);}

/* do818 in transpkeys in transpose in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_10743(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word *a;
loop:
a=C_alloc(7);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_10743,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nullp(t2))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_cdr(((C_word*)t0)[4]));}
else{
t4=(C_word)C_i_car(t2);
t5=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[3],t4);
t6=(C_word)C_a_i_list(&a,1,t5);
t7=(C_word)C_i_set_cdr(t3,t6);
t8=(C_word)C_i_cdr(t3);
t9=t3=t8;
t10=(C_word)C_i_cdr(t2);
t12=t1;
t13=t10;
t14=t3;
t1=t12;
t2=t13;
t3=t14;
goto loop;}}

/* k10725 in transpose in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_10727(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10727,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 377  note");
t3=C_retrieve(lf[175]);
((C_proc3)C_retrieve_proc(t3))(3,t3,((C_word*)t0)[2],t2);}

/* invert in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_10546(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[17],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_10546,3,t0,t1,t2);}
if(C_truep((C_word)C_i_numberp(t2))){
if(C_truep((C_word)C_i_lessp(t2,C_fix(12)))){
t3=(C_word)C_a_i_minus(&a,2,C_fix(12),t2);
C_trace("ChickenBridge.scm: 377  modulo");
t4=*((C_word*)lf[130]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t1,t3,C_fix(12));}
else{
C_trace("ChickenBridge.scm: 377  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t1,lf[183],t2);}}
else{
if(C_truep((C_word)C_i_pairp(t2))){
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10576,a[2]=((C_word)li124),tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_numberp(t4))){
t5=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_lessp(t5,C_fix(12)))){
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10646,a[2]=((C_word)li125),tmp=(C_word)a,a+=3,tmp);
C_trace("map");
t7=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t7+1)))(4,t7,t1,t6,t2);}
else{
C_trace("ChickenBridge.scm: 377  invkeys");
f_10576(t1,t2);}}
else{
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10668,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10672,a[2]=t5,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  key");
t7=C_retrieve(lf[177]);
((C_proc3)C_retrieve_proc(t7))(3,t7,t6,t2);}}
else{
C_trace("ChickenBridge.scm: 377  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t1,lf[184],t2);}}}

/* k10670 in invert in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_10672(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  invkeys");
f_10576(((C_word*)t0)[2],t1);}

/* k10666 in invert in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_10668(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  note");
t2=C_retrieve(lf[175]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* a10645 in invert in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_10646(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_10646,3,t0,t1,t2);}
t3=(C_word)C_a_i_minus(&a,2,C_fix(12),t2);
C_trace("ChickenBridge.scm: 377  modulo");
t4=*((C_word*)lf[130]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t1,t3,C_fix(12));}

/* invkeys in invert in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_10576(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10576,NULL,2,t1,t2);}
t3=(C_word)C_i_car(t2);
t4=(C_word)C_a_i_list(&a,1,t3);
t5=(C_word)C_i_cdr(t2);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10592,a[2]=t7,a[3]=t3,a[4]=t4,a[5]=((C_word)li123),tmp=(C_word)a,a+=6,tmp));
t9=((C_word*)t7)[1];
f_10592(t9,t1,t5,t4);}

/* do803 in invkeys in invert in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_10592(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word *a;
loop:
a=C_alloc(11);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_10592,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nullp(t2))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,((C_word*)t0)[4]);}
else{
t4=(C_word)C_i_car(t2);
t5=(C_word)C_a_i_minus(&a,2,t4,((C_word*)t0)[3]);
t6=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[3],t5);
t7=(C_word)C_a_i_list(&a,1,t6);
t8=(C_word)C_i_set_cdr(t3,t7);
t9=(C_word)C_i_cdr(t3);
t10=t3=t9;
t11=(C_word)C_i_cdr(t2);
t13=t1;
t14=t11;
t15=t3;
t1=t13;
t2=t14;
t3=t15;
goto loop;}}

/* pc in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_10501(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_10501,3,t0,t1,t2);}
if(C_truep((C_word)C_i_numberp(t2))){
C_trace("ChickenBridge.scm: 377  modulo");
t3=*((C_word*)lf[130]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t1,t2,C_fix(12));}
else{
if(C_truep((C_word)C_i_pairp(t2))){
t3=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_numberp(t3))){
C_trace("map");
t4=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,t1,C_retrieve(lf[181]),t2);}
else{
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10533,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  key");
t5=C_retrieve(lf[177]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10544,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  key");
t4=C_retrieve(lf[177]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}}}

/* k10542 in pc in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_10544(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  modulo");
t2=*((C_word*)lf[130]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],t1,C_fix(12));}

/* k10531 in pc in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_10533(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("map");
t2=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[2],C_retrieve(lf[181]),t1);}

/* hz in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_10385(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[13],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_10385,3,t0,t1,t2);}
if(C_truep((C_word)C_i_listp(t2))){
t3=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10400,a[2]=t5,a[3]=t3,a[4]=((C_word)li120),tmp=(C_word)a,a+=5,tmp));
t7=((C_word*)t5)[1];
f_10400(t7,t1,t2,lf[180],C_SCHEME_FALSE,t3);}
else{
if(C_truep((C_word)C_i_numberp(t2))){
C_trace("ChickenBridge.scm: 377  tb:keynum->hertz");
f_7814(t1,t2);}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10499,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  note-aux");
f_10113(t3,t2,C_SCHEME_FALSE,C_SCHEME_TRUE);}}}

/* k10497 in hz in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_10499(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_caddr(t1));}

/* do783 in hz in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_10400(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10400,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,(C_word)C_i_cdr(((C_word*)t0)[3]));}
else{
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10413,a[2]=t7,a[3]=t6,a[4]=t1,a[5]=((C_word*)t0)[2],a[6]=t2,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
t10=(C_word)C_i_car(t2);
t11=(C_word)C_i_numberp(t10);
t12=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10430,a[2]=t6,a[3]=t2,a[4]=t8,a[5]=t9,a[6]=t7,tmp=(C_word)a,a+=7,tmp);
if(C_truep(t11)){
t13=t12;
f_10430(t13,t11);}
else{
t13=(C_word)C_i_car(t2);
t14=t12;
f_10430(t14,(C_word)C_i_listp(t13));}}}

/* k10428 in do783 in hz in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_10430(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10430,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10434,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 377  hz");
t4=C_retrieve(lf[179]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10449,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 377  note-aux");
f_10113(t2,t3,((C_word*)((C_word*)t0)[2])[1],C_SCHEME_TRUE);}}

/* k10447 in k10428 in do783 in hz in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_10449(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10449,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_caddr(((C_word*)((C_word*)t0)[5])[1]);
t4=(C_word)C_a_i_list(&a,1,t3);
t5=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[4])[1],t4);
t6=(C_word)C_i_cddddr(((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_i_car(t6);
t8=C_mutate(((C_word *)((C_word*)t0)[3])+1,t7);
t9=((C_word*)t0)[2];
f_10413(t9,t8);}

/* k10432 in k10428 in do783 in hz in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_10434(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10434,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]);
t4=((C_word*)t0)[3];
f_10413(t4,(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t3));}

/* k10411 in do783 in hz in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_10413(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(C_word)C_i_cdr(((C_word*)t0)[6]);
t5=((C_word*)((C_word*)t0)[5])[1];
f_10400(t5,((C_word*)t0)[4],t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[7])[1]);}

/* key in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_10263(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[19],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_10263,3,t0,t1,t2);}
if(C_truep((C_word)C_i_listp(t2))){
t3=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10278,a[2]=t5,a[3]=t3,a[4]=((C_word)li118),tmp=(C_word)a,a+=5,tmp));
t7=((C_word*)t5)[1];
f_10278(t7,t1,t2,lf[178],C_SCHEME_FALSE,t3);}
else{
if(C_truep((C_word)C_i_numberp(t2))){
if(C_truep((C_word)C_i_greaterp(t2,C_fix(0)))){
t3=t1;
t4=t2;
t5=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t6=(C_word)C_i_foreign_flonum_argumentp(t4);
t7=t3;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)stub306(t5,t6));}
else{
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_fix(-1));}}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10383,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  note-aux");
f_10113(t3,t2,C_SCHEME_FALSE,C_SCHEME_TRUE);}}}

/* k10381 in key in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_10383(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_cadr(t1));}

/* do767 in key in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_10278(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10278,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,(C_word)C_i_cdr(((C_word*)t0)[3]));}
else{
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10291,a[2]=t7,a[3]=t6,a[4]=t1,a[5]=((C_word*)t0)[2],a[6]=t2,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
t10=(C_word)C_i_car(t2);
t11=(C_word)C_i_listp(t10);
t12=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10308,a[2]=t6,a[3]=t2,a[4]=t8,a[5]=t9,a[6]=t7,tmp=(C_word)a,a+=7,tmp);
if(C_truep(t11)){
t13=t12;
f_10308(t13,t11);}
else{
t13=(C_word)C_i_car(t2);
t14=t12;
f_10308(t14,(C_word)C_i_numberp(t13));}}}

/* k10306 in do767 in key in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_10308(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10308,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10312,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 377  key");
t4=C_retrieve(lf[177]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10327,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 377  note-aux");
f_10113(t2,t3,((C_word*)((C_word*)t0)[2])[1],C_SCHEME_TRUE);}}

/* k10325 in k10306 in do767 in key in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_10327(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10327,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[5])[1]);
t4=(C_word)C_a_i_list(&a,1,t3);
t5=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[4])[1],t4);
t6=(C_word)C_i_cddddr(((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_i_car(t6);
t8=C_mutate(((C_word *)((C_word*)t0)[3])+1,t7);
t9=((C_word*)t0)[2];
f_10291(t9,t8);}

/* k10310 in k10306 in do767 in key in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_10312(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10312,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]);
t4=((C_word*)t0)[3];
f_10291(t4,(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t3));}

/* k10289 in do767 in key in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_10291(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(C_word)C_i_cdr(((C_word*)t0)[6]);
t5=((C_word*)((C_word*)t0)[5])[1];
f_10278(t5,((C_word*)t0)[4],t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[7])[1]);}

/* note in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_10166(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[13],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_10166,3,t0,t1,t2);}
if(C_truep((C_word)C_i_listp(t2))){
t3=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10181,a[2]=t5,a[3]=t3,a[4]=((C_word)li116),tmp=(C_word)a,a+=5,tmp));
t7=((C_word*)t5)[1];
f_10181(t7,t1,t2,lf[176],C_SCHEME_FALSE,t3);}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10261,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  note-aux");
f_10113(t3,t2,C_SCHEME_FALSE,C_SCHEME_TRUE);}}

/* k10259 in note in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_10261(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_car(t1));}

/* do753 in note in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_10181(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10181,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,(C_word)C_i_cdr(((C_word*)t0)[3]));}
else{
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10194,a[2]=t7,a[3]=t6,a[4]=t1,a[5]=((C_word*)t0)[2],a[6]=t2,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
t10=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_listp(t10))){
t11=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10212,a[2]=t8,a[3]=t9,a[4]=t7,tmp=(C_word)a,a+=5,tmp);
t12=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 377  note");
t13=C_retrieve(lf[175]);
((C_proc3)C_retrieve_proc(t13))(3,t13,t11,t12);}
else{
t11=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10227,a[2]=t8,a[3]=t9,a[4]=t6,a[5]=t7,tmp=(C_word)a,a+=6,tmp);
t12=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 377  note-aux");
f_10113(t11,t12,((C_word*)t6)[1],C_SCHEME_TRUE);}}}

/* k10225 in do753 in note in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_10227(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10227,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cddddr(((C_word*)((C_word*)t0)[5])[1]);
t4=(C_word)C_i_car(t3);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t4);
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_a_i_list(&a,1,t6);
t8=((C_word*)t0)[3];
f_10194(t8,(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t7));}

/* k10210 in do753 in note in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_10212(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10212,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]);
t4=((C_word*)t0)[3];
f_10194(t4,(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t3));}

/* k10192 in do753 in note in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_10194(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(C_word)C_i_cdr(((C_word*)t0)[6]);
t5=((C_word*)((C_word*)t0)[5])[1];
f_10181(t5,((C_word*)t0)[4],t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[7])[1]);}

/* note-aux in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_10113(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10113,NULL,4,t1,t2,t3,t4);}
if(C_truep((C_word)C_i_numberp(t2))){
t5=t1;
t6=t2;
t7=t4;
if(C_truep((C_word)C_i_exactp(t6))){
t8=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10063,a[2]=t6,a[3]=t7,a[4]=((C_word)li113),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  hash-table-ref");
t9=*((C_word*)lf[41]+1);
((C_proc5)C_retrieve_proc(t9))(5,t9,t5,C_retrieve2(lf[162],"*notes*"),t6,t8);}
else{
t8=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10111,a[2]=t5,a[3]=t7,a[4]=t6,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  floor");
t9=*((C_word*)lf[173]+1);
((C_proc3)C_retrieve_proc(t9))(3,t9,t8,t6);}}
else{
if(C_truep((C_word)C_i_symbolp(t2))){
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10136,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  symbol->string");
t6=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,t2);}
else{
if(C_truep((C_word)C_i_stringp(t2))){
C_trace("ChickenBridge.scm: 377  string->note-entry");
f_10011(t1,t2,t3,t4);}
else{
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10151,a[2]=t2,a[3]=t4,a[4]=t3,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 377  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,t2);}}}}

/* k10149 in note-aux in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_10151(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10151,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10158,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  keyword->string");
t3=C_retrieve(lf[33]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}
else{
if(C_truep(((C_word*)t0)[3])){
C_trace("ChickenBridge.scm: 377  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[5],lf[174],((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[5];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}}

/* k10156 in k10149 in note-aux in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_10158(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  string->note-entry");
f_10011(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k10134 in note-aux in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_10136(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  string->note-entry");
f_10011(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k10109 in note-aux in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_10111(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10111,2,t0,t1);}
t2=(C_word)C_i_inexact_to_exact(t1);
t3=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[4],t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10083,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_lessp(t3,lf[170]))){
t5=t4;
f_10083(t5,t2);}
else{
t5=(C_word)C_i_lessp(t3,lf[171]);
t6=t4;
f_10083(t6,(C_truep(t5)?(C_word)C_a_i_plus(&a,2,t2,lf[172]):(C_word)C_a_i_plus(&a,2,t2,C_fix(1))));}}

/* k10081 in k10109 in note-aux in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_10083(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10083,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10085,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word)li114),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  hash-table-ref");
t3=*((C_word*)lf[41]+1);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[2],C_retrieve2(lf[162],"*notes*"),t1,t2);}

/* a10084 in k10081 in k10109 in note-aux in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_10085(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10085,2,t0,t1);}
if(C_truep(((C_word*)t0)[3])){
C_trace("ChickenBridge.scm: 377  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,t1,lf[169],((C_word*)t0)[2]);}
else{
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* a10062 in note-aux in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_10063(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10063,2,t0,t1);}
if(C_truep(((C_word*)t0)[3])){
C_trace("ChickenBridge.scm: 377  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,t1,lf[168],((C_word*)t0)[2]);}
else{
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* string->note-entry in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_10011(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10011,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10015,a[2]=t2,a[3]=t4,a[4]=t3,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10048,a[2]=((C_word)li111),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  hash-table-ref");
t7=*((C_word*)lf[41]+1);
((C_proc5)C_retrieve_proc(t7))(5,t7,t5,C_retrieve2(lf[162],"*notes*"),t2,t6);}

/* a10047 in string->note-entry in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_10048(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10048,2,t0,t1);}
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}

/* k10013 in string->note-entry in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_10015(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10015,2,t0,t1);}
t2=t1;
if(C_truep(t2)){
t3=((C_word*)t0)[5];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t1);}
else{
if(C_truep(((C_word*)t0)[4])){
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10031,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  string-append");
t4=*((C_word*)lf[165]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,((C_word*)t0)[2],((C_word*)t0)[4]);}
else{
if(C_truep(((C_word*)t0)[3])){
C_trace("ChickenBridge.scm: 377  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[5],lf[166],((C_word*)t0)[2]);}
else{
t3=((C_word*)t0)[5];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}}}}

/* k10029 in k10013 in string->note-entry in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_10031(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10031,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10033,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word)li110),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  hash-table-ref");
t3=*((C_word*)lf[41]+1);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[2],C_retrieve2(lf[162],"*notes*"),t1,t2);}

/* a10032 in k10029 in k10013 in string->note-entry in k10007 in k10004 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_10033(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10033,2,t0,t1);}
if(C_truep(((C_word*)t0)[3])){
C_trace("ChickenBridge.scm: 377  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,t1,lf[164],((C_word*)t0)[2]);}
else{
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* segs in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_9797(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...){
C_word tmp;
C_word t4;
va_list v;
C_word *a,c2=c;
C_save_rest(t3,c2,4);
if(c<4) C_bad_min_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+11)){
C_save_and_reclaim((void*)tr4r,(void*)f_9797r,4,t0,t1,t2,t3);}
else{
a=C_alloc((c-4)*3);
t4=C_restore_rest(a,C_rest_count(0));
f_9797r(t0,t1,t2,t3,t4);}}

static void C_ccall f_9797r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word *a=C_alloc(11);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_lessp(t2,C_fix(1)))){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,C_SCHEME_END_OF_LIST);}
else{
t6=C_fix(1);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9810,a[2]=t1,a[3]=t3,a[4]=t2,a[5]=t5,a[6]=t7,tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t5)[1]))){
t9=(C_word)C_i_car(((C_word*)t5)[1]);
t10=C_set_block_item(t7,0,t9);
t11=(C_word)C_i_cdr(((C_word*)t5)[1]);
t12=C_set_block_item(t5,0,t11);
t13=t8;
f_9810(t13,t12);}
else{
t9=t8;
f_9810(t9,C_SCHEME_UNDEFINED);}}}

/* k9808 in segs in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_9810(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word ab[23],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9810,NULL,2,t0,t1);}
t2=(C_word)C_eqp(((C_word*)((C_word*)t0)[6])[1],C_fix(1));
t3=(C_truep(t2)?t2:(C_word)C_eqp(((C_word*)((C_word*)t0)[6])[1],C_fix(2)));
if(C_truep(t3)){
t4=(C_word)C_eqp(((C_word*)((C_word*)t0)[6])[1],C_fix(1));
t5=(C_truep(t4)?C_retrieve2(lf[77],"tb:explseg"):C_retrieve2(lf[78],"tb:geoseg"));
t6=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[5])[1]);
t7=(C_truep(t6)?C_fix(2):(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]));
t8=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t9=t8;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_9831,a[2]=((C_word*)t0)[2],a[3]=t7,a[4]=((C_word*)t0)[3],a[5]=t5,a[6]=t10,a[7]=t8,a[8]=((C_word*)t0)[4],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_lessp(t7,C_fix(0)))){
C_trace("ChickenBridge.scm: 377  error");
t12=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t12))(4,t12,t11,lf[160],t7);}
else{
t12=t11;
f_9831(2,t12,C_SCHEME_UNDEFINED);}}
else{
t4=(C_word)C_eqp(((C_word*)((C_word*)t0)[6])[1],C_fix(3));
if(C_truep(t4)){
t5=C_retrieve(lf[125]);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9892,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[5],a[5]=t6,a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[5])[1]))){
t8=t7;
f_9892(t8,C_SCHEME_UNDEFINED);}
else{
t8=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t9=C_set_block_item(t6,0,t8);
t10=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t11=C_mutate(((C_word *)((C_word*)t0)[5])+1,t10);
t12=t7;
f_9892(t12,t11);}}
else{
C_trace("ChickenBridge.scm: 377  error");
t5=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,((C_word*)t0)[2],lf[161],((C_word*)((C_word*)t0)[6])[1]);}}}

/* k9890 in k9808 in segs in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_9892(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9892,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9895,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_apply(4,0,t2,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);}

/* k9893 in k9890 in k9808 in segs in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_9895(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9895,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_a_i_list(&a,1,((C_word*)t3)[1]);
t5=t4;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_9903,a[2]=((C_word*)t0)[3],a[3]=t4,a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t8,a[7]=t3,a[8]=t6,a[9]=((C_word*)t0)[6],a[10]=((C_word)li108),tmp=(C_word)a,a+=11,tmp));
t10=((C_word*)t8)[1];
f_9903(t10,((C_word*)t0)[2],C_fix(1),C_SCHEME_FALSE);}

/* do683 in k9893 in k9890 in k9808 in segs in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_9903(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9903,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_lessp(t2,((C_word*)t0)[9]))){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9944,a[2]=t1,a[3]=((C_word*)t0)[6],a[4]=t2,a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=t4,tmp=(C_word)a,a+=8,tmp);
C_apply(4,0,t5,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);}
else{
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9915,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[7],a[4]=t6,a[5]=((C_word*)t0)[3],a[6]=((C_word)li107),tmp=(C_word)a,a+=7,tmp));
t8=((C_word*)t6)[1];
f_9915(t8,t1,((C_word*)t0)[3]);}}

/* do687 in do683 in k9893 in k9890 in k9808 in segs in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_9915(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9915,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)t0)[5]);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9936,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 377  tb:rescale");
f_7675(t3,t4,C_fix(0),((C_word*)((C_word*)t0)[3])[1],C_fix(0),((C_word*)t0)[2],C_fix(1));}}

/* k9934 in do687 in do683 in k9893 in k9890 in k9808 in segs in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_9936(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=(C_word)C_i_set_car(((C_word*)t0)[4],t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_9915(t4,((C_word*)t0)[2],t3);}

/* k9942 in do683 in k9893 in k9890 in k9808 in segs in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_9944(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9944,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[7])+1,t1);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[6])[1],t3);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[6])+1,t5);
t7=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[7])[1]);
t8=C_mutate(((C_word *)((C_word*)t0)[5])+1,t7);
t9=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t10=((C_word*)((C_word*)t0)[3])[1];
f_9903(t10,((C_word*)t0)[2],t9,((C_word*)((C_word*)t0)[7])[1]);}

/* k9829 in k9808 in segs in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_9831(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9831,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_9836,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t3,a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word)li106),tmp=(C_word)a,a+=10,tmp));
t5=((C_word*)t3)[1];
f_9836(t5,((C_word*)t0)[2],C_fix(0));}

/* do671 in k9829 in k9808 in segs in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_9836(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9836,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nequalp(t2,((C_word*)t0)[8]))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_cdr(((C_word*)t0)[7]));}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9868,a[2]=t1,a[3]=((C_word*)t0)[5],a[4]=t2,a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 377  func");
t4=((C_word*)t0)[4];
((C_proc6)C_retrieve_proc(t4))(6,t4,t3,t2,((C_word*)t0)[8],((C_word*)t0)[3],((C_word*)t0)[2]);}}

/* k9866 in do671 in k9829 in k9808 in segs in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_9868(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9868,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
t3=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[5])[1],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t4);
t6=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t7=((C_word*)((C_word*)t0)[3])[1];
f_9836(t7,((C_word*)t0)[2],t6);}

/* rangamma in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_9776(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr2rv,(void*)f_9776r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest_vector(a,C_rest_count(0));
f_9776r(t0,t1,t2);}}

static void C_ccall f_9776r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
if(C_truep((C_word)C_vemptyp(t2))){
C_trace("ChickenBridge.scm: 377  tb:rangamma");
f_7912(t1,C_fix(1));}
else{
t3=(C_word)C_i_vector_ref(t2,C_fix(0));
C_trace("ChickenBridge.scm: 377  tb:rangamma");
f_7912(t1,t3);}}

/* ranpoisson in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_9757(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr2rv,(void*)f_9757r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest_vector(a,C_rest_count(0));
f_9757r(t0,t1,t2);}}

static void C_ccall f_9757r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
if(C_truep((C_word)C_i_nullp(C_retrieve(lf[155])))){
C_trace("ChickenBridge.scm: 377  tb:ranpoisson");
f_7922(t1,C_fix(1));}
else{
t3=(C_word)C_i_vector_ref(t2,C_fix(0));
C_trace("ChickenBridge.scm: 377  tb:ranpoisson");
f_7922(t1,t3);}}

/* rangauss in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_9716(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr2r,(void*)f_9716r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_9716r(t0,t1,t2);}}

static void C_ccall f_9716r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 377  tb:rangauss");
f_7883(t1,C_fix(1),C_fix(0));}
else{
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 377  tb:rangauss");
f_7883(t1,t4,C_fix(0));}
else{
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cdr(t2);
C_trace("ChickenBridge.scm: 377  tb:rangauss");
f_7883(t1,t4,t5);}}}

/* ranexp in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_9697(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr2rv,(void*)f_9697r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest_vector(a,C_rest_count(0));
f_9697r(t0,t1,t2);}}

static void C_ccall f_9697r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
if(C_truep((C_word)C_vemptyp(t2))){
C_trace("ChickenBridge.scm: 377  tb:ranexp");
f_7894(t1,C_fix(1));}
else{
t3=(C_word)C_i_vector_ref(t2,C_fix(0));
C_trace("ChickenBridge.scm: 377  tb:ranexp");
f_7894(t1,t3);}}

/* ranbeta in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_9469(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+44)){
C_save_and_reclaim((void*)tr2r,(void*)f_9469r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_9469r(t0,t1,t2);}}

static void C_ccall f_9469r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word *a=C_alloc(44);
t3=lf[148];
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=t2;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_9473,a[2]=t10,a[3]=t14,a[4]=t8,a[5]=t2,a[6]=t12,a[7]=t6,a[8]=t4,a[9]=t1,tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t12)[1]))){
t16=t15;
f_9473(t16,C_SCHEME_UNDEFINED);}
else{
t16=(C_word)C_i_car(((C_word*)t12)[1]);
t17=(C_word)C_eqp(t16,lf[149]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9610,a[2]=t2,a[3]=t15,a[4]=t12,a[5]=t14,a[6]=t8,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t8)[1])){
C_trace("error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[19],lf[149]);}
else{
t19=t18;
f_9610(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(C_word)C_eqp(t16,lf[150]);
if(C_truep(t18)){
t19=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9645,a[2]=t2,a[3]=t15,a[4]=t12,a[5]=t14,a[6]=t10,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t10)[1])){
C_trace("error");
t20=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t20))(4,t20,t19,lf[19],lf[150]);}
else{
t20=t19;
f_9645(2,t20,C_SCHEME_UNDEFINED);}}
else{
t19=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9674,a[2]=t15,a[3]=t8,a[4]=t4,a[5]=t12,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t20=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t20))(4,t20,t19,lf[10],t2);}
else{
t20=t19;
f_9674(2,t20,C_SCHEME_UNDEFINED);}}}}}

/* k9672 in ranbeta in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_9674(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9674,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9681,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9689,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k9687 in k9672 in ranbeta in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_9689(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_9681(2,t2,C_SCHEME_UNDEFINED);}}

/* k9679 in k9672 in ranbeta in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_9681(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_9473(t5,t4);}

/* k9643 in ranbeta in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_9645(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9645,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9649,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_9649(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k9647 in k9643 in ranbeta in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_9649(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_9473(t7,t6);}

/* k9608 in ranbeta in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_9610(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9610,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9614,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_9614(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k9612 in k9608 in ranbeta in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_9614(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_9473(t7,t6);}

/* k9471 in ranbeta in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_9473(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[29],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9473,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9476,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_9476(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[149]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9510,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[149]);}
else{
t6=t5;
f_9510(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[150]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9545,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[150]);}
else{
t7=t6;
f_9545(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9574,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_9574(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k9572 in k9471 in ranbeta in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_9574(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9574,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9581,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9589,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k9587 in k9572 in k9471 in ranbeta in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_9589(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_9581(2,t2,C_SCHEME_UNDEFINED);}}

/* k9579 in k9572 in k9471 in ranbeta in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_9581(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_9476(t5,t4);}

/* k9543 in k9471 in ranbeta in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_9545(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9545,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9549,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_9549(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k9547 in k9543 in k9471 in ranbeta in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_9549(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_9476(t7,t6);}

/* k9508 in k9471 in ranbeta in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_9510(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9510,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9514,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_9514(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k9512 in k9508 in k9471 in ranbeta in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_9514(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_9476(t7,t6);}

/* k9474 in k9471 in ranbeta in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_9476(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9476,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9479,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_9479(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k9477 in k9474 in k9471 in ranbeta in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_9479(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9479,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9482,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=((C_word*)((C_word*)t0)[2])[1];
if(C_truep(t3)){
t4=t2;
f_9482(t4,C_SCHEME_UNDEFINED);}
else{
t4=C_mutate(((C_word *)((C_word*)t0)[2])+1,((C_word*)((C_word*)t0)[3])[1]);
t5=t2;
f_9482(t5,t4);}}

/* k9480 in k9477 in k9474 in k9471 in ranbeta in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_9482(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9482,NULL,2,t0,t1);}
t2=((C_word*)t0)[4];
t3=((C_word*)((C_word*)t0)[3])[1];
t4=((C_word*)((C_word*)t0)[2])[1];
t5=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t6=(C_word)C_i_foreign_flonum_argumentp(t3);
t7=(C_word)C_i_foreign_flonum_argumentp(t4);
t8=t2;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)stub359(t5,t6,t7));}

/* shuffle in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_9427(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+6)){
C_save_and_reclaim((void*)tr2r,(void*)f_9427r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_9427r(t0,t1,t2);}}

static void C_ccall f_9427r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a=C_alloc(6);
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9441,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 377  append");
t6=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,t5,C_SCHEME_END_OF_LIST);}
else{
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9456,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  append");
t5=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,t2,C_SCHEME_END_OF_LIST);}}

/* k9454 in shuffle in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_9456(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  shuffle!");
t2=C_retrieve(lf[142]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k9439 in shuffle in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_9441(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  shuffle!");
t2=C_retrieve(lf[142]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* shuffle! in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_9372(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_9372,3,t0,t1,t2);}
t3=(C_word)C_i_length(t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9383,a[2]=t1,a[3]=t2,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  tb:rani");
f_7838(t4,t3);}

/* k9381 in shuffle! in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_9383(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9383,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9385,a[2]=t3,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word)li98),tmp=(C_word)a,a+=6,tmp));
t5=((C_word*)t3)[1];
f_9385(t5,((C_word*)t0)[2],C_fix(0),t1,C_SCHEME_FALSE);}

/* do603 in k9381 in shuffle! in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_9385(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9385,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nequalp(t2,((C_word*)t0)[4]))){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,((C_word*)t0)[3]);}
else{
t6=(C_word)C_i_list_ref(((C_word*)t0)[3],t2);
t7=C_set_block_item(t5,0,t6);
t8=(C_word)C_i_list_tail(((C_word*)t0)[3],t2);
t9=(C_word)C_i_list_ref(((C_word*)t0)[3],t3);
t10=(C_word)C_i_set_car(t8,t9);
t11=(C_word)C_i_list_tail(((C_word*)t0)[3],t3);
t12=(C_word)C_i_set_car(t11,((C_word*)t5)[1]);
t13=(C_word)C_a_i_plus(&a,2,t2,C_fix(1));
t14=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9413,a[2]=t5,a[3]=t13,a[4]=t1,a[5]=((C_word*)t0)[2],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 377  tb:rani");
f_7838(t14,((C_word*)t0)[4]);}}

/* k9411 in do603 in k9381 in shuffle! in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_9413(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[5])[1];
f_9385(t2,((C_word*)t0)[4],((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* vary in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_9273(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...){
C_word tmp;
C_word t4;
va_list v;
C_word *a,c2=c;
C_save_rest(t3,c2,4);
if(c<4) C_bad_min_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+8)){
C_save_and_reclaim((void*)tr4r,(void*)f_9273r,4,t0,t1,t2,t3);}
else{
a=C_alloc((c-4)*3);
t4=C_restore_rest(a,C_rest_count(0));
f_9273r(t0,t1,t2,t3,t4);}}

static void C_ccall f_9273r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word *a=C_alloc(8);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9277,a[2]=t1,a[3]=t5,a[4]=t3,a[5]=t2,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t5)[1]))){
t7=C_set_block_item(t5,0,C_fix(0));
t8=t6;
f_9277(t8,t7);}
else{
t7=(C_word)C_i_car(((C_word*)t5)[1]);
t8=C_set_block_item(t5,0,t7);
t9=t6;
f_9277(t9,t8);}}

/* k9275 in vary in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_9277(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9277,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9280,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=((C_word*)((C_word*)t0)[3])[1];
if(C_truep((C_truep((C_word)C_i_equalp(t3,C_fix(0)))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t3,C_fix(-1)))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t3,C_fix(1)))?C_SCHEME_TRUE:C_SCHEME_FALSE))))){
t4=t2;
f_9280(2,t4,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[141],((C_word*)((C_word*)t0)[3])[1]);}}

/* k9278 in k9275 in vary in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_9280(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9280,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9282,a[2]=((C_word)li95),tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_listp(((C_word*)t0)[5]))){
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9345,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t2,a[5]=((C_word)li96),tmp=(C_word)a,a+=6,tmp);
C_trace("map");
t4=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,((C_word*)t0)[2],t3,((C_word*)t0)[5]);}
else{
C_trace("ChickenBridge.scm: 377  vary1");
f_9282(((C_word*)t0)[2],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1]);}}

/* a9344 in k9278 in k9275 in vary in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_9345(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_9345,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 377  vary1");
f_9282(t1,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* vary1 in k9278 in k9275 in vary in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_9282(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9282,NULL,4,t1,t2,t3,t4);}
t5=(C_word)C_i_less_or_equalp(t3,C_fix(0));
t6=(C_truep(t5)?t5:(C_word)C_i_nequalp(t2,C_fix(0)));
if(C_truep(t6)){
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,t2);}
else{
t7=(C_word)C_a_i_times(&a,2,t2,t3);
t8=(C_word)C_a_i_abs(&a,1,t7);
t9=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9298,a[2]=t1,a[3]=t2,a[4]=t8,a[5]=t4,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 377  tb:ranf");
f_7845(t9,t8);}}

/* k9296 in vary1 in k9278 in k9275 in vary in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_9298(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9298,2,t0,t1);}
t2=(C_word)C_eqp(((C_word*)t0)[5],C_fix(0));
if(C_truep(t2)){
t3=(C_word)C_a_i_times(&a,2,((C_word*)t0)[4],lf[140]);
t4=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[3],t3);
t5=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_a_i_plus(&a,2,t4,t1));}
else{
t3=(C_word)C_eqp(((C_word*)t0)[5],C_fix(1));
t4=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_truep(t3)?(C_word)C_a_i_plus(&a,2,((C_word*)t0)[3],t1):(C_word)C_a_i_minus(&a,2,((C_word*)t0)[3],t1)));}}

/* odds in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_9045(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+45)){
C_save_and_reclaim((void*)tr3r,(void*)f_9045r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_9045r(t0,t1,t2,t3);}}

static void C_ccall f_9045r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word *a=C_alloc(45);
t4=C_SCHEME_TRUE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=t3;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_FALSE;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_9049,a[2]=t11,a[3]=t15,a[4]=t9,a[5]=t3,a[6]=t13,a[7]=t7,a[8]=t5,a[9]=t1,a[10]=t2,tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t13)[1]))){
t17=t16;
f_9049(t17,C_SCHEME_UNDEFINED);}
else{
t17=(C_word)C_i_car(((C_word*)t13)[1]);
t18=(C_word)C_eqp(t17,lf[137]);
if(C_truep(t18)){
t19=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9186,a[2]=t3,a[3]=t16,a[4]=t13,a[5]=t15,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("error");
t20=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t20))(4,t20,t19,lf[19],lf[137]);}
else{
t20=t19;
f_9186(2,t20,C_SCHEME_UNDEFINED);}}
else{
t19=(C_word)C_eqp(t17,lf[138]);
if(C_truep(t19)){
t20=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9221,a[2]=t3,a[3]=t16,a[4]=t13,a[5]=t15,a[6]=t11,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("error");
t21=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t21))(4,t21,t20,lf[19],lf[138]);}
else{
t21=t20;
f_9221(2,t21,C_SCHEME_UNDEFINED);}}
else{
t20=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9250,a[2]=t16,a[3]=t9,a[4]=t5,a[5]=t13,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t15)[1])){
C_trace("error");
t21=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t21))(4,t21,t20,lf[10],t3);}
else{
t21=t20;
f_9250(2,t21,C_SCHEME_UNDEFINED);}}}}}

/* k9248 in odds in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_9250(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9250,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9257,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9265,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k9263 in k9248 in odds in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_9265(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_9257(2,t2,C_SCHEME_UNDEFINED);}}

/* k9255 in k9248 in odds in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_9257(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_9049(t5,t4);}

/* k9219 in odds in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_9221(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9221,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9225,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_9225(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k9223 in k9219 in odds in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_9225(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_9049(t7,t6);}

/* k9184 in odds in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_9186(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9186,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9190,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_9190(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k9188 in k9184 in odds in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_9190(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_9049(t7,t6);}

/* k9047 in odds in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_9049(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9049,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9052,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_9052(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[137]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9086,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[137]);}
else{
t6=t5;
f_9086(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[138]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9121,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[138]);}
else{
t7=t6;
f_9121(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9150,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_9150(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k9148 in k9047 in odds in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_9150(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9150,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9157,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9165,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k9163 in k9148 in k9047 in odds in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_9165(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_9157(2,t2,C_SCHEME_UNDEFINED);}}

/* k9155 in k9148 in k9047 in odds in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_9157(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_9052(t5,t4);}

/* k9119 in k9047 in odds in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_9121(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9121,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9125,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_9125(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k9123 in k9119 in k9047 in odds in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_9125(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_9052(t7,t6);}

/* k9084 in k9047 in odds in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_9086(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9086,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9090,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_9090(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k9088 in k9084 in k9047 in odds in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_9090(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_9052(t7,t6);}

/* k9050 in k9047 in odds in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_9052(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9052,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9055,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_9055(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k9053 in k9050 in k9047 in odds in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_9055(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9055,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9065,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 377  tb:ranf");
f_7845(t2,lf[136]);}

/* k9063 in k9053 in k9050 in k9047 in odds in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_9065(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_lessp(t1,((C_word*)t0)[5]);
t3=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_truep(t2)?((C_word*)((C_word*)t0)[3])[1]:((C_word*)((C_word*)t0)[2])[1]));}

/* pick in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_9002(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+8)){
C_save_and_reclaim((void*)tr2r,(void*)f_9002r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_9002r(t0,t1,t2);}}

static void C_ccall f_9002r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word *a=C_alloc(8);
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(t2);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9020,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_car(t2);
t7=(C_word)C_i_length(t6);
C_trace("ChickenBridge.scm: 377  tb:rani");
f_7838(t5,t7);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9035,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_length(t2);
C_trace("ChickenBridge.scm: 377  tb:rani");
f_7838(t4,t5);}}

/* k9033 in pick in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_9035(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_list_ref(((C_word*)t0)[2],t1));}

/* k9018 in pick in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_9020(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_list_ref(((C_word*)t0)[2],t1));}

/* between in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_8981(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[6],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_8981,4,t0,t1,t2,t3);}
t4=(C_word)C_fixnump(t2);
t5=(C_truep(t4)?(C_word)C_fixnump(t3):C_SCHEME_FALSE);
if(C_truep(t5)){
t6=t1;
t7=t2;
t8=t3;
t9=(C_word)C_i_foreign_fixnum_argumentp(t7);
t10=(C_word)C_i_foreign_fixnum_argumentp(t8);
t11=t6;
((C_proc2)(void*)(*((C_word*)t11+1)))(2,t11,(C_word)stub325(C_SCHEME_UNDEFINED,t9,t10));}
else{
t6=t1;
t7=t2;
t8=t3;
t9=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t10=(C_word)C_i_foreign_flonum_argumentp(t7);
t11=(C_word)C_i_foreign_flonum_argumentp(t8);
t12=t6;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub331(t9,t10,t11));}}

/* ran in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_8946(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+6)){
C_save_and_reclaim((void*)tr2r,(void*)f_8946r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_8946r(t0,t1,t2);}}

static void C_ccall f_8946r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a=C_alloc(6);
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8950,a[2]=t1,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t3)[1]))){
t5=C_set_block_item(t3,0,C_fix(1));
t6=t4;
f_8950(t6,t5);}
else{
t5=(C_word)C_i_car(((C_word*)t3)[1]);
t6=C_set_block_item(t3,0,t5);
t7=t4;
f_8950(t7,t6);}}

/* k8948 in ran in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_8950(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep((C_word)C_i_greaterp(((C_word*)((C_word*)t0)[3])[1],C_fix(1)))){
if(C_truep((C_word)C_fixnump(((C_word*)((C_word*)t0)[3])[1]))){
C_trace("ChickenBridge.scm: 377  tb:rani");
f_7838(((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}
else{
C_trace("ChickenBridge.scm: 377  tb:ranf");
f_7845(((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}}
else{
C_trace("ChickenBridge.scm: 377  tb:ranf");
f_7845(((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}}

/* scale in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_8838(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...){
C_word tmp;
C_word t4;
va_list v;
C_word *a,c2=c;
C_save_rest(t3,c2,4);
if(c<4) C_bad_min_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+19)){
C_save_and_reclaim((void*)tr4r,(void*)f_8838r,4,t0,t1,t2,t3);}
else{
a=C_alloc((c-4)*3);
t4=C_restore_rest(a,C_rest_count(0));
f_8838r(t0,t1,t2,t3,t4);}}

static void C_ccall f_8838r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word *a=C_alloc(19);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_a_i_list(&a,1,C_SCHEME_TRUE);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8845,a[2]=t1,a[3]=t6,a[4]=t3,a[5]=t8,a[6]=t2,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
t10=(C_word)C_i_car(((C_word*)t5)[1]);
if(C_truep((C_word)C_i_pairp(t10))){
t11=(C_word)C_i_cdr(((C_word*)t5)[1]);
if(C_truep((C_word)C_i_nullp(t11))){
t12=(C_word)C_i_car(((C_word*)t5)[1]);
t13=C_set_block_item(t5,0,t12);
t14=t9;
f_8845(t14,t13);}
else{
t12=(C_word)C_i_cadr(((C_word*)t5)[1]);
t13=C_set_block_item(t8,0,t12);
t14=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8925,a[2]=t9,a[3]=t5,tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_nequalp(((C_word*)t8)[1],t3))){
C_trace("ChickenBridge.scm: 377  error");
t15=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t15))(4,t15,t14,lf[131],((C_word*)t8)[1]);}
else{
t15=t14;
f_8925(2,t15,C_SCHEME_UNDEFINED);}}}
else{
t11=t9;
f_8845(t11,C_SCHEME_UNDEFINED);}}

/* k8923 in scale in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_8925(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_8845(t4,t3);}

/* k8843 in scale in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_8845(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8845,NULL,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[7])[1]);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_8854,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t4,a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],a[8]=((C_word)li89),tmp=(C_word)a,a+=9,tmp));
t6=((C_word*)t4)[1];
f_8854(t6,((C_word*)t0)[2],C_fix(0),((C_word*)t0)[4],t2,((C_word*)t0)[3]);}

/* do526 in k8843 in scale in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_8854(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8854,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_lessp(t2,((C_word*)t0)[7]))){
t8=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_8867,a[2]=t4,a[3]=t1,a[4]=((C_word*)t0)[5],a[5]=t2,a[6]=((C_word*)t0)[6],a[7]=t7,a[8]=t6,tmp=(C_word)a,a+=9,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
t9=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8901,a[2]=t8,a[3]=t6,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  fit");
t10=C_retrieve(lf[126]);
((C_proc6)C_retrieve_proc(t10))(6,t10,t9,((C_word*)t6)[1],((C_word*)t0)[3],((C_word*)((C_word*)t0)[4])[1],C_fix(1));}
else{
t9=t8;
f_8867(t9,C_SCHEME_UNDEFINED);}}
else{
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)C_i_cdr(((C_word*)t0)[2]));}}

/* k8899 in do526 in k8843 in scale in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_8901(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_8867(t3,t2);}

/* k8865 in do526 in k8843 in scale in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_8867(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8867,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[8])[1]);
t3=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[7])[1],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[7])+1,t4);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_8893,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[6],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 377  modulo");
t7=*((C_word*)lf[130]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,((C_word*)t0)[5],((C_word*)t0)[2]);}

/* k8891 in k8865 in do526 in k8843 in scale in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_8893(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8893,2,t0,t1);}
t2=(C_word)C_i_list_ref(((C_word*)((C_word*)t0)[8])[1],t1);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[7])[1],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[7])+1,t3);
t5=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
t6=((C_word*)((C_word*)t0)[5])[1];
f_8854(t6,((C_word*)t0)[4],t5,((C_word*)((C_word*)t0)[7])[1],((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* fit in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_8705(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,...){
C_word tmp;
C_word t5;
va_list v;
C_word *a,c2=c;
C_save_rest(t4,c2,5);
if(c<5) C_bad_min_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+13)){
C_save_and_reclaim((void*)tr5r,(void*)f_8705r,5,t0,t1,t2,t3,t4);}
else{
a=C_alloc((c-5)*3);
t5=C_restore_rest(a,C_rest_count(0));
f_8705r(t0,t1,t2,t3,t4,t5);}}

static void C_ccall f_8705r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word *a=C_alloc(13);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8709,a[2]=t1,a[3]=t8,a[4]=t7,a[5]=t6,a[6]=t2,tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t8)[1]))){
t10=C_set_block_item(t8,0,C_fix(1));
t11=t9;
f_8709(t11,t10);}
else{
t10=(C_word)C_i_car(((C_word*)t8)[1]);
t11=C_set_block_item(t8,0,t10);
t12=t9;
f_8709(t12,t11);}}

/* k8707 in fit in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_8709(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8709,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8712,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_greaterp(((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]))){
t3=((C_word*)((C_word*)t0)[5])[1];
t4=C_mutate(((C_word *)((C_word*)t0)[5])+1,((C_word*)((C_word*)t0)[4])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t6=t2;
f_8712(t6,t5);}
else{
t3=t2;
f_8712(t3,C_SCHEME_UNDEFINED);}}

/* k8710 in k8707 in fit in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_8712(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8712,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8714,a[2]=((C_word)li86),tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t0)[6]))){
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8816,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t2,a[6]=((C_word)li87),tmp=(C_word)a,a+=7,tmp);
C_trace("map");
t4=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,((C_word*)t0)[2],t3,((C_word*)t0)[6]);}
else{
C_trace("ChickenBridge.scm: 377  fit1");
f_8714(((C_word*)t0)[2],((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]);}}

/* a8815 in k8710 in k8707 in fit in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_8816(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8816,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 377  fit1");
f_8714(t1,t2,((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* fit1 in k8710 in k8707 in fit in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_8714(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8714,NULL,5,t1,t2,t3,t4,t5);}
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8721,a[2]=t5,a[3]=t3,a[4]=t4,a[5]=t2,a[6]=t1,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 377  <=");
C_less_or_equal_p(5,0,t6,t3,t2,t4);}

/* k8719 in fit1 in k8710 in k8707 in fit in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_8721(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8721,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[6];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[5]);}
else{
t2=(C_word)C_i_greaterp(((C_word*)t0)[5],((C_word*)t0)[4]);
t3=(C_truep(t2)?((C_word*)t0)[4]:((C_word*)t0)[3]);
t4=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[4],((C_word*)t0)[3]);
switch(((C_word*)t0)[2]){
case C_fix(1):
t5=(C_word)C_i_nequalp(t3,((C_word*)t0)[4]);
t6=(C_truep(t5)?((C_word*)t0)[3]:((C_word*)t0)[4]);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8744,a[2]=t6,a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
t8=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[5],t3);
C_trace("ChickenBridge.scm: 377  remainder");
t9=*((C_word*)lf[127]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t7,t8,t4);
case C_fix(2):
t5=(C_word)C_a_i_times(&a,2,C_fix(2),t4);
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8763,a[2]=t5,a[3]=t4,a[4]=t3,a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
t7=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[5],t3);
C_trace("ChickenBridge.scm: 377  remainder");
t8=*((C_word*)lf[127]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t6,t7,t5);
case C_fix(3):
t5=((C_word*)t0)[6];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,t3);
default:
C_trace("ChickenBridge.scm: 377  error");
t5=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,((C_word*)t0)[6],lf[128],((C_word*)t0)[2]);}}}

/* k8761 in k8719 in fit1 in k8710 in k8707 in fit in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_8763(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8763,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8770,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_abs(&a,1,t1);
if(C_truep((C_word)C_i_greaterp(t3,((C_word*)t0)[3]))){
t4=(C_word)C_i_greater_or_equalp(t1,C_fix(0));
t5=(C_truep(t4)?*((C_word*)lf[100]+1):*((C_word*)lf[98]+1));
t6=t5;
((C_proc4)C_retrieve_proc(t6))(4,t6,t2,t1,((C_word*)t0)[2]);}
else{
C_trace("ChickenBridge.scm: 377  -");
C_minus(3,0,t2,t1);}}

/* k8768 in k8761 in k8719 in fit1 in k8710 in k8707 in fit in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_8770(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8770,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_plus(&a,2,t1,((C_word*)t0)[2]));}

/* k8742 in k8719 in fit1 in k8710 in k8707 in fit in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_8744(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8744,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_plus(&a,2,((C_word*)t0)[2],t1));}

/* tendency in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_8638(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,...){
C_word tmp;
C_word t5;
va_list v;
C_word *a,c2=c;
C_save_rest(t4,c2,5);
if(c<5) C_bad_min_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+16)){
C_save_and_reclaim((void*)tr5r,(void*)f_8638r,5,t0,t1,t2,t3,t4);}
else{
a=C_alloc((c-5)*3);
t5=C_restore_rest(a,C_rest_count(0));
f_8638r(t0,t1,t2,t3,t4,t5);}}

static void C_ccall f_8638r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word *a=C_alloc(16);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t9=C_retrieve(lf[125]);
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8642,a[2]=t2,a[3]=t8,a[4]=t10,a[5]=t1,a[6]=t7,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t8)[1]))){
t12=t11;
f_8642(t12,C_SCHEME_UNDEFINED);}
else{
t12=(C_word)C_i_car(((C_word*)t8)[1]);
t13=C_set_block_item(t10,0,t12);
t14=(C_word)C_i_cdr(((C_word*)t8)[1]);
t15=C_set_block_item(t8,0,t14);
t16=t11;
f_8642(t16,t15);}}

/* k8640 in tendency in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_8642(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8642,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8645,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[7])[1]))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8688,a[2]=t2,a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  interp1");
f_8506(t3,((C_word*)t0)[2],((C_word*)((C_word*)t0)[7])[1],C_fix(1));}
else{
t3=t2;
f_8645(t3,C_SCHEME_UNDEFINED);}}

/* k8686 in k8640 in tendency in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_8688(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_8645(t3,t2);}

/* k8643 in k8640 in tendency in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_8645(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8645,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8648,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[6])[1]))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8681,a[2]=t2,a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  interp1");
f_8506(t3,((C_word*)t0)[2],((C_word*)((C_word*)t0)[6])[1],C_fix(1));}
else{
t3=t2;
f_8648(t3,C_SCHEME_UNDEFINED);}}

/* k8679 in k8643 in k8640 in tendency in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_8681(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_8648(t3,t2);}

/* k8646 in k8643 in k8640 in tendency in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_8648(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8648,NULL,2,t0,t1);}
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1]))){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[6])[1]);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8661,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_greaterp(((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1]);
t4=(C_truep(t3)?(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1]):(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[6])[1]));
C_apply(5,0,t2,((C_word*)((C_word*)t0)[3])[1],t4,((C_word*)((C_word*)t0)[2])[1]);}}

/* k8659 in k8646 in k8643 in k8640 in tendency in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_8661(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8661,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[2])[1],t1));}

/* interp in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_8592(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+5)){
C_save_and_reclaim((void*)tr3r,(void*)f_8592r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_8592r(t0,t1,t2,t3);}}

static void C_ccall f_8592r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a=C_alloc(5);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8596,a[2]=t2,a[3]=t1,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t5=*((C_word*)lf[4]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,lf[123]);}
else{
t5=t4;
f_8596(2,t5,C_SCHEME_UNDEFINED);}}

/* k8594 in interp in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_8596(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=(C_word)C_i_car(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_pairp(t2))){
t3=(C_word)C_i_car(((C_word*)t0)[4]);
t4=(C_word)C_i_cdr(((C_word*)t0)[4]);
t5=(C_word)C_i_nullp(t4);
t6=(C_truep(t5)?C_fix(1):(C_word)C_i_cadr(((C_word*)t0)[4]));
C_trace("ChickenBridge.scm: 377  interp1");
f_8506(((C_word*)t0)[3],((C_word*)t0)[2],t3,t6);}
else{
C_trace("ChickenBridge.scm: 377  interp1");
f_8506(((C_word*)t0)[3],((C_word*)t0)[2],((C_word*)t0)[4],C_fix(1));}}

/* interp1 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_8506(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8506,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8510,a[2]=t1,a[3]=t2,a[4]=t3,a[5]=t4,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[121],t3);}
else{
t6=t5;
f_8510(2,t6,(C_word)C_i_car(t3));}}

/* k8508 in interp1 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_8510(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8510,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8513,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t3,tmp=(C_word)a,a+=7,tmp);
t5=(C_word)C_i_cdr(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_nullp(t5))){
C_trace("ChickenBridge.scm: 377  err");
t6=C_retrieve(lf[119]);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,lf[120],((C_word*)t0)[4]);}
else{
t6=t4;
f_8513(2,t6,(C_word)C_i_cadr(((C_word*)t0)[4]));}}

/* k8511 in k8508 in interp1 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_8513(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8513,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=((C_word*)((C_word*)t0)[6])[1];
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t3)[1];
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=((C_word*)t0)[5];
t9=(C_word)C_i_cddr(((C_word*)t0)[4]);
t10=C_SCHEME_UNDEFINED;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_set_block_item(t11,0,(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_8522,a[2]=((C_word*)t0)[4],a[3]=t11,a[4]=t8,a[5]=t7,a[6]=t3,a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[3],a[9]=t5,a[10]=((C_word)li82),tmp=(C_word)a,a+=11,tmp));
t13=((C_word*)t11)[1];
f_8522(t13,((C_word*)t0)[2],t9);}

/* do477 in k8511 in k8508 in interp1 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_8522(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8522,NULL,3,t0,t1,t2);}
t3=(C_word)C_i_nullp(t2);
t4=(C_truep(t3)?t3:(C_word)C_i_greaterp(((C_word*)((C_word*)t0)[9])[1],((C_word*)t0)[8]));
if(C_truep(t4)){
C_trace("ChickenBridge.scm: 377  tb:rescale");
f_7675(t1,((C_word*)t0)[8],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[9])[1],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[4]);}
else{
t5=C_mutate(((C_word *)((C_word*)t0)[7])+1,((C_word*)((C_word*)t0)[9])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[6])+1,((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_i_car(t2);
t8=C_mutate(((C_word *)((C_word*)t0)[9])+1,t7);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8544,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t10=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t10))){
C_trace("ChickenBridge.scm: 377  error");
t11=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t9,lf[118],((C_word*)t0)[2]);}
else{
t11=(C_word)C_i_cadr(t2);
t12=C_mutate(((C_word *)((C_word*)t0)[5])+1,t11);
t13=t9;
f_8544(2,t13,t12);}}}

/* k8542 in do477 in k8511 in k8508 in interp1 in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_8544(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cddr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_8522(t3,((C_word*)t0)[2],t2);}

/* ratio->cents in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_8491(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8491,3,t0,t1,t2);}
if(C_truep((C_word)C_i_listp(t2))){
C_trace("map");
t3=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,C_retrieve2(lf[76],"tb:scaler->cents"),t2);}
else{
C_trace("ChickenBridge.scm: 377  tb:scaler->cents");
t3=C_retrieve2(lf[76],"tb:scaler->cents");
f_7769(3,t3,t1,t2);}}

/* cents->ratio in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_8476(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8476,3,t0,t1,t2);}
if(C_truep((C_word)C_i_listp(t2))){
C_trace("map");
t3=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,C_retrieve2(lf[75],"tb:cents->scaler"),t2);}
else{
C_trace("ChickenBridge.scm: 377  tb:cents->scaler");
t3=C_retrieve2(lf[75],"tb:cents->scaler");
f_7762(3,t3,t1,t2);}}

/* rhythm->seconds in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_8240(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+45)){
C_save_and_reclaim((void*)tr3r,(void*)f_8240r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_8240r(t0,t1,t2,t3);}}

static void C_ccall f_8240r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word *a=C_alloc(45);
t4=lf[111];
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=lf[112];
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=t3;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_FALSE;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_8244,a[2]=t11,a[3]=t15,a[4]=t9,a[5]=t3,a[6]=t13,a[7]=t1,a[8]=t7,a[9]=t5,a[10]=t2,tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t13)[1]))){
t17=t16;
f_8244(t17,C_SCHEME_UNDEFINED);}
else{
t17=(C_word)C_i_car(((C_word*)t13)[1]);
t18=(C_word)C_eqp(t17,lf[113]);
if(C_truep(t18)){
t19=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8389,a[2]=t3,a[3]=t16,a[4]=t13,a[5]=t15,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("error");
t20=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t20))(4,t20,t19,lf[19],lf[113]);}
else{
t20=t19;
f_8389(2,t20,C_SCHEME_UNDEFINED);}}
else{
t19=(C_word)C_eqp(t17,lf[114]);
if(C_truep(t19)){
t20=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8424,a[2]=t3,a[3]=t16,a[4]=t13,a[5]=t15,a[6]=t11,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("error");
t21=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t21))(4,t21,t20,lf[19],lf[114]);}
else{
t21=t20;
f_8424(2,t21,C_SCHEME_UNDEFINED);}}
else{
t20=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8453,a[2]=t16,a[3]=t9,a[4]=t5,a[5]=t13,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t15)[1])){
C_trace("error");
t21=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t21))(4,t21,t20,lf[10],t3);}
else{
t21=t20;
f_8453(2,t21,C_SCHEME_UNDEFINED);}}}}}

/* k8451 in rhythm->seconds in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_8453(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8453,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8460,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8468,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k8466 in k8451 in rhythm->seconds in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_8468(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_8460(2,t2,C_SCHEME_UNDEFINED);}}

/* k8458 in k8451 in rhythm->seconds in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_8460(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_8244(t5,t4);}

/* k8422 in rhythm->seconds in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_8424(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8424,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8428,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_8428(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k8426 in k8422 in rhythm->seconds in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_8428(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_8244(t7,t6);}

/* k8387 in rhythm->seconds in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_8389(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8389,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8393,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_8393(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k8391 in k8387 in rhythm->seconds in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_8393(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_8244(t7,t6);}

/* k8242 in rhythm->seconds in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_8244(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8244,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8247,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_8247(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[113]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8289,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[113]);}
else{
t6=t5;
f_8289(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[114]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8324,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[114]);}
else{
t7=t6;
f_8324(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8353,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_8353(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k8351 in k8242 in rhythm->seconds in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_8353(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8353,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8360,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8368,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k8366 in k8351 in k8242 in rhythm->seconds in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_8368(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_8360(2,t2,C_SCHEME_UNDEFINED);}}

/* k8358 in k8351 in k8242 in rhythm->seconds in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_8360(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_8247(t5,t4);}

/* k8322 in k8242 in rhythm->seconds in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_8324(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8324,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8328,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_8328(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k8326 in k8322 in k8242 in rhythm->seconds in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_8328(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_8247(t7,t6);}

/* k8287 in k8242 in rhythm->seconds in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_8289(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8289,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8293,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_8293(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k8291 in k8287 in k8242 in rhythm->seconds in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_8293(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_8247(t7,t6);}

/* k8245 in k8242 in rhythm->seconds in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_8247(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8247,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8250,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_8250(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k8248 in k8245 in k8242 in rhythm->seconds in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_8250(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8250,2,t0,t1);}
if(C_truep((C_word)C_i_listp(((C_word*)t0)[5]))){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8261,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word)li78),tmp=(C_word)a,a+=5,tmp);
C_trace("map");
t3=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[2],t2,((C_word*)t0)[5]);}
else{
C_trace("ChickenBridge.scm: 377  tb:rhythm->seconds");
f_7747(((C_word*)t0)[2],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]);}}

/* a8260 in k8248 in k8245 in k8242 in rhythm->seconds in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_8261(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8261,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 377  tb:rhythm->seconds");
f_7747(t1,t2,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* decimals in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_8200(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_8200,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8204,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  expt");
t5=*((C_word*)lf[108]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,lf[109],t3);}

/* k8202 in decimals in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_8204(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8204,2,t0,t1);}
if(C_truep((C_word)C_i_listp(((C_word*)t0)[3]))){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8215,a[2]=t1,a[3]=((C_word)li76),tmp=(C_word)a,a+=4,tmp);
C_trace("map");
t3=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[2],t2,((C_word*)t0)[3]);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8234,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_times(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 377  round");
t4=*((C_word*)lf[107]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,t3);}}

/* k8232 in k8202 in decimals in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_8234(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8234,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_divide(&a,2,t1,((C_word*)t0)[2]));}

/* a8214 in k8202 in decimals in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_8215(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8215,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8223,a[2]=((C_word*)t0)[2],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_a_i_times(&a,2,t2,((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 377  round");
t5=*((C_word*)lf[107]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}

/* k8221 in a8214 in k8202 in decimals in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_8223(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8223,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_divide(&a,2,t1,((C_word*)t0)[2]));}

/* quantize in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_8179(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_8179,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_listp(t2))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8191,a[2]=t3,a[3]=((C_word)li74),tmp=(C_word)a,a+=4,tmp);
C_trace("map");
t5=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t1,t4,t2);}
else{
C_trace("ChickenBridge.scm: 377  tb:quantize");
f_7736(t1,t2,t3);}}

/* a8190 in quantize in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_8191(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8191,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 377  tb:quantize");
f_7736(t1,t2,((C_word*)t0)[2]);}

/* minus in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_8153(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr3r,(void*)f_8153r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_8153r(t0,t1,t2,t3);}}

static void C_ccall f_8153r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
if(C_truep((C_word)C_i_nullp(t3))){
if(C_truep((C_word)C_i_listp(t2))){
C_apply(4,0,t1,*((C_word*)lf[100]+1),t2);}
else{
C_trace("ChickenBridge.scm: 377  -");
C_minus(3,0,t1,t2);}}
else{
C_apply(5,0,t1,*((C_word*)lf[100]+1),t2,t3);}}

/* plus in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_8111(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr2r,(void*)f_8111r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_8111r(t0,t1,t2);}}

static void C_ccall f_8111r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_fix(0));}
else{
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_listp(t4))){
t5=(C_word)C_i_car(t2);
C_apply(4,0,t1,*((C_word*)lf[98]+1),t5);}
else{
C_apply(4,0,t1,*((C_word*)lf[98]+1),t2);}}
else{
C_apply(4,0,t1,*((C_word*)lf[98]+1),t2);}}}

/* int in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_8096(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8096,3,t0,t1,t2);}
if(C_truep((C_word)C_i_listp(t2))){
C_trace("map");
t3=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,C_retrieve2(lf[72],"tb:int"),t2);}
else{
C_trace("ChickenBridge.scm: 377  tb:int");
t3=C_retrieve2(lf[72],"tb:int");
f_7729(3,t3,t1,t2);}}

/* discrete in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_7985(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,...){
C_word tmp;
C_word t6;
va_list v;
C_word *a,c2=c;
C_save_rest(t5,c2,6);
if(c<6) C_bad_min_argc_2(c,6,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+21)){
C_save_and_reclaim((void*)tr6r,(void*)f_7985r,6,t0,t1,t2,t3,t4,t5);}
else{
a=C_alloc((c-6)*3);
t6=C_restore_rest(a,C_rest_count(0));
f_7985r(t0,t1,t2,t3,t4,t5,t6);}}

static void C_ccall f_7985r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word *a=C_alloc(21);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_fix(1);
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_7989,a[2]=t5,a[3]=t1,a[4]=t12,a[5]=t8,a[6]=t4,a[7]=t3,a[8]=t2,a[9]=t10,tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_pairp(t5))){
t14=C_set_block_item(t10,0,t5);
if(C_truep((C_word)C_i_nullp(t6))){
t15=(C_word)C_i_length(((C_word*)t10)[1]);
t16=C_set_block_item(t8,0,t15);
t17=t13;
f_7989(t17,t16);}
else{
t15=(C_word)C_i_car(t6);
t16=C_set_block_item(t8,0,t15);
t17=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8060,a[2]=t13,a[3]=t12,a[4]=t6,tmp=(C_word)a,a+=5,tmp);
t18=(C_word)C_i_cdr(t6);
t19=(C_word)C_i_nullp(t18);
C_trace("ChickenBridge.scm: 377  not?");
t20=C_retrieve(lf[95]);
((C_proc3)C_retrieve_proc(t20))(3,t20,t17,t19);}}
else{
t14=(C_word)C_i_car(t6);
t15=C_set_block_item(t8,0,t14);
t16=(C_word)C_i_cdr(t6);
if(C_truep((C_word)C_i_nullp(t16))){
t17=t13;
f_7989(t17,C_SCHEME_UNDEFINED);}
else{
t17=(C_word)C_i_cadr(t6);
t18=C_set_block_item(t12,0,t17);
t19=t13;
f_7989(t19,t18);}}}

/* k8058 in discrete in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_8060(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_cadr(((C_word*)t0)[4]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_7989(t4,t3);}
else{
t2=((C_word*)t0)[2];
f_7989(t2,C_SCHEME_UNDEFINED);}}

/* k7987 in discrete in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_7989(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7989,NULL,2,t0,t1);}
if(C_truep(((C_word*)((C_word*)t0)[9])[1])){
if(C_truep((C_word)C_i_listp(((C_word*)t0)[8]))){
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8003,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[9],a[7]=((C_word)li68),tmp=(C_word)a,a+=8,tmp);
C_trace("map");
t3=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],t2,((C_word*)t0)[8]);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8018,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  tb:discrete");
f_7702(t2,((C_word*)t0)[8],((C_word*)t0)[7],((C_word*)t0)[6],C_fix(0),((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);}}
else{
if(C_truep((C_word)C_i_listp(((C_word*)t0)[8]))){
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8029,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word)li69),tmp=(C_word)a,a+=8,tmp);
C_trace("map");
t3=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],t2,((C_word*)t0)[8]);}
else{
C_trace("ChickenBridge.scm: 377  tb:discrete");
f_7702(((C_word*)t0)[3],((C_word*)t0)[8],((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);}}}

/* a8028 in k7987 in discrete in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_8029(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8029,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 377  tb:discrete");
f_7702(t1,t2,((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k8016 in k7987 in discrete in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_8018(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_list_ref(((C_word*)((C_word*)t0)[2])[1],t1));}

/* a8002 in k7987 in discrete in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_8003(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8003,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8011,a[2]=((C_word*)t0)[6],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  tb:discrete");
f_7702(t3,t2,((C_word*)t0)[5],((C_word*)t0)[4],C_fix(0),((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k8009 in a8002 in k7987 in discrete in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_8011(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_list_ref(((C_word*)((C_word*)t0)[2])[1],t1));}

/* rescale in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_7951(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,...){
C_word tmp;
C_word t7;
va_list v;
C_word *a,c2=c;
C_save_rest(t6,c2,7);
if(c<7) C_bad_min_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+8)){
C_save_and_reclaim((void*)tr7r,(void*)f_7951r,7,t0,t1,t2,t3,t4,t5,t6);}
else{
a=C_alloc((c-7)*3);
t7=C_restore_rest(a,C_rest_count(0));
f_7951r(t0,t1,t2,t3,t4,t5,t6,t7);}}

static void C_ccall f_7951r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7){
C_word tmp;
C_word t8;
C_word t9;
C_word t10;
C_word *a=C_alloc(8);
if(C_truep((C_word)C_i_listp(t2))){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_7963,a[2]=t7,a[3]=t6,a[4]=t5,a[5]=t4,a[6]=t3,a[7]=((C_word)li66),tmp=(C_word)a,a+=8,tmp);
C_trace("map");
t9=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t9+1)))(4,t9,t1,t8,t2);}
else{
if(C_truep((C_word)C_i_nullp(t7))){
C_trace("ChickenBridge.scm: 377  tb:rescale");
f_7675(t1,t2,t3,t4,t5,t6,C_fix(1));}
else{
t8=(C_word)C_i_car(t7);
C_trace("ChickenBridge.scm: 377  tb:rescale");
f_7675(t1,t2,t3,t4,t5,t6,t8);}}}

/* a7962 in rescale in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_7963(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7963,3,t0,t1,t2);}
C_apply(9,0,t1,C_retrieve(lf[93]),t2,((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* tb:ranbrown in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_7932(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7932,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub379(t2));}

/* tb:ranpink in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_7929(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7929,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub376(t2));}

/* tb:ranpoisson in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_7922(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7922,NULL,2,t1,t2);}
t3=(C_word)C_i_foreign_flonum_argumentp(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub373(C_SCHEME_UNDEFINED,t3));}

/* tb:rancauchy in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_7919(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7919,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub369(t2));}

/* tb:rangamma in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_7912(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7912,NULL,2,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_word)C_i_foreign_flonum_argumentp(t2);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub365(t3,t4));}

/* tb:ranexp in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_7894(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7894,NULL,2,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_word)C_i_foreign_flonum_argumentp(t2);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub353(t3,t4));}

/* tb:rangauss in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_7883(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7883,NULL,3,t1,t2,t3);}
t4=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t5=(C_word)C_i_foreign_flonum_argumentp(t2);
t6=(C_word)C_i_foreign_flonum_argumentp(t3);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)stub347(t4,t5,t6));}

/* tb:ranmiddle in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_7880(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7880,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub342(t2));}

/* tb:ranhigh in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_7877(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7877,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub339(t2));}

/* tb:ranlow in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_7874(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7874,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub336(t2));}

/* tb:ranf in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_7845(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7845,NULL,2,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_word)C_i_foreign_flonum_argumentp(t2);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub319(t3,t4));}

/* tb:rani in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_7838(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7838,NULL,2,t1,t2);}
t3=(C_word)C_i_foreign_fixnum_argumentp(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub315(C_SCHEME_UNDEFINED,t3));}

/* tb:ran-set! in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_7835(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7835,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub311(C_SCHEME_UNDEFINED,t2));}

/* tb:keynum->hertz in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_7814(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7814,NULL,2,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_word)C_i_foreign_flonum_argumentp(t2);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub297(t3,t4));}

/* tb:geoseg in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_7795(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[6],*a=ab;
if(c!=6) C_bad_argc_2(c,6,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr6,(void*)f_7795,6,t0,t1,t2,t3,t4,t5);}
t6=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_fixnum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=t1;
((C_proc2)(void*)(*((C_word*)t11+1)))(2,t11,(C_word)stub289(t6,t7,t8,t9,t10));}

/* tb:explseg in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_7776(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[6],*a=ab;
if(c!=6) C_bad_argc_2(c,6,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr6,(void*)f_7776,6,t0,t1,t2,t3,t4,t5);}
t6=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_fixnum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=t1;
((C_proc2)(void*)(*((C_word*)t11+1)))(2,t11,(C_word)stub278(t6,t7,t8,t9,t10));}

/* tb:scaler->cents in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_7769(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7769,3,t0,t1,t2);}
t3=(C_word)C_i_foreign_flonum_argumentp(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub271(C_SCHEME_UNDEFINED,t3));}

/* tb:cents->scaler in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_7762(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7762,3,t0,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_word)C_i_foreign_fixnum_argumentp(t2);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub266(t3,t4));}

/* tb:rhythm->seconds in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_7747(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7747,NULL,4,t1,t2,t3,t4);}
t5=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t6=(C_word)C_i_foreign_flonum_argumentp(t2);
t7=(C_word)C_i_foreign_flonum_argumentp(t3);
t8=(C_word)C_i_foreign_flonum_argumentp(t4);
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,(C_word)stub259(t5,t6,t7,t8));}

/* tb:quantize in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_7736(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7736,NULL,3,t1,t2,t3);}
t4=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t5=(C_word)C_i_foreign_flonum_argumentp(t2);
t6=(C_word)C_i_foreign_flonum_argumentp(t3);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)stub251(t4,t5,t6));}

/* tb:int in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_7729(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7729,3,t0,t1,t2);}
t3=(C_word)C_i_foreign_flonum_argumentp(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub246(C_SCHEME_UNDEFINED,t3));}

/* tb:discrete in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_7702(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7){
C_word tmp;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7702,NULL,7,t1,t2,t3,t4,t5,t6,t7);}
t8=(C_word)C_i_foreign_flonum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_flonum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=(C_word)C_i_foreign_flonum_argumentp(t7);
t14=t1;
((C_proc2)(void*)(*((C_word*)t14+1)))(2,t14,(C_word)stub237(C_SCHEME_UNDEFINED,t8,t9,t10,t11,t12,t13));}

/* tb:rescale in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_7675(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7){
C_word tmp;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7675,NULL,7,t1,t2,t3,t4,t5,t6,t7);}
t8=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t9=(C_word)C_i_foreign_flonum_argumentp(t2);
t10=(C_word)C_i_foreign_flonum_argumentp(t3);
t11=(C_word)C_i_foreign_flonum_argumentp(t4);
t12=(C_word)C_i_foreign_flonum_argumentp(t5);
t13=(C_word)C_i_foreign_flonum_argumentp(t6);
t14=(C_word)C_i_foreign_flonum_argumentp(t7);
t15=t1;
((C_proc2)(void*)(*((C_word*)t15+1)))(2,t15,(C_word)stub222(t8,t9,t10,t11,t12,t13,t14));}

/* bitwise-test in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_7634(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7634,NULL,3,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_7640,a[2]=t7,a[3]=t4,a[4]=t5,a[5]=((C_word)li41),tmp=(C_word)a,a+=6,tmp));
t9=((C_word*)t7)[1];
f_7640(t9,t1,C_SCHEME_FALSE);}

/* do187 in bitwise-test in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_7640(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7640,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[4])[1],C_fix(0)))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,((C_word*)t3)[1]);}
else{
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7650,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_bit_setp(((C_word*)((C_word*)t0)[4])[1],C_fix(0)))){
if(C_truep((C_word)C_i_bit_setp(((C_word*)((C_word*)t0)[3])[1],C_fix(0)))){
t5=C_set_block_item(t3,0,C_SCHEME_TRUE);
t6=t4;
f_7650(t6,t5);}
else{
t5=C_set_block_item(t3,0,C_SCHEME_FALSE);
t6=C_set_block_item(((C_word*)t0)[4],0,C_fix(0));
t7=t4;
f_7650(t7,t6);}}
else{
t5=t4;
f_7650(t5,C_SCHEME_UNDEFINED);}}}

/* k7648 in do187 in bitwise-test in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_7650(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7650,NULL,2,t0,t1);}
t2=(C_word)C_a_i_arithmetic_shift(&a,2,((C_word*)((C_word*)t0)[6])[1],C_fix(-1));
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_a_i_arithmetic_shift(&a,2,((C_word*)((C_word*)t0)[5])[1],C_fix(-1));
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t4);
t6=((C_word*)((C_word*)t0)[4])[1];
f_7640(t6,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* list-prop in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_7548(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...){
C_word tmp;
C_word t4;
va_list v;
C_word *a,c2=c;
C_save_rest(t3,c2,4);
if(c<4) C_bad_min_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr4r,(void*)f_7548r,4,t0,t1,t2,t3);}
else{
a=C_alloc((c-4)*3);
t4=C_restore_rest(a,C_rest_count(0));
f_7548r(t0,t1,t2,t3,t4);}}

static void C_ccall f_7548r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
if(C_truep((C_word)C_i_nullp(t2))){
t5=(C_word)C_i_nullp(t4);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_truep(t5)?C_SCHEME_FALSE:(C_word)C_i_car(t4)));}
else{
t5=(C_word)C_i_car(t2);
t6=(C_word)C_eqp(t5,t3);
if(C_truep(t6)){
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_i_cadr(t2));}
else{
t7=(C_word)C_i_cddr(t2);
C_apply(6,0,t1,C_retrieve2(lf[68],"list-prop"),t7,t3,t4);}}}

/* every? in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_7509(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_7509,4,t0,t1,t2,t3);}
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7515,a[2]=t2,a[3]=t5,a[4]=((C_word)li38),tmp=(C_word)a,a+=5,tmp));
t7=((C_word*)t5)[1];
f_7515(t7,t1,t3,C_SCHEME_TRUE);}

/* do171 in every? in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_7515(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7515,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(C_word)C_i_not(((C_word*)t4)[1]);
t6=(C_truep(t5)?t5:(C_word)C_i_nullp(t2));
if(C_truep(t6)){
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,((C_word*)t4)[1]);}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_7528,a[2]=t4,a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7538,a[2]=t4,a[3]=t7,tmp=(C_word)a,a+=4,tmp);
t9=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 376  f");
t10=((C_word*)t0)[2];
((C_proc3)C_retrieve_proc(t10))(3,t10,t8,t9);}}

/* k7536 in do171 in every? in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_7538(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[3];
f_7528(t2,C_SCHEME_FALSE);}
else{
t2=C_set_block_item(((C_word*)t0)[2],0,C_SCHEME_FALSE);
t3=((C_word*)t0)[3];
f_7528(t3,t2);}}

/* k7526 in do171 in every? in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_7528(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
t3=((C_word*)((C_word*)t0)[4])[1];
f_7515(t3,((C_word*)t0)[3],t2,((C_word*)((C_word*)t0)[2])[1]);}

/* list-find in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_7470(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_7470,4,t0,t1,t2,t3);}
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7476,a[2]=t2,a[3]=t5,a[4]=((C_word)li36),tmp=(C_word)a,a+=5,tmp));
t7=((C_word*)t5)[1];
f_7476(t7,t1,t3,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* do160 in list-find in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_7476(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7476,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t5)[1];
t7=(C_truep(t6)?t6:(C_word)C_i_nullp(t2));
if(C_truep(t7)){
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,((C_word*)t5)[1]);}
else{
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7486,a[2]=t5,a[3]=t3,a[4]=t1,a[5]=((C_word*)t0)[3],a[6]=t2,tmp=(C_word)a,a+=7,tmp);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7496,a[2]=t8,a[3]=t5,a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t10=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 376  p");
t11=((C_word*)t0)[2];
((C_proc3)C_retrieve_proc(t11))(3,t11,t9,t10);}}

/* k7494 in do160 in list-find in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_7496(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[4]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_7486(t4,t3);}
else{
t2=((C_word*)t0)[2];
f_7486(t2,C_SCHEME_UNDEFINED);}}

/* k7484 in do160 in list-find in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_7486(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[6]);
t3=((C_word*)((C_word*)t0)[5])[1];
f_7476(t3,((C_word*)t0)[4],t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* list-index in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_7430(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_7430,4,t0,t1,t2,t3);}
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7436,a[2]=t2,a[3]=t5,a[4]=((C_word)li34),tmp=(C_word)a,a+=5,tmp));
t7=((C_word*)t5)[1];
f_7436(t7,t1,t3,C_fix(0),C_SCHEME_FALSE);}

/* do149 in list-index in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_7436(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7436,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t5)[1];
t7=(C_truep(t6)?t6:(C_word)C_i_nullp(t2));
if(C_truep(t7)){
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,((C_word*)t5)[1]);}
else{
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7446,a[2]=t5,a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=t3,a[6]=t2,tmp=(C_word)a,a+=7,tmp);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7460,a[2]=t8,a[3]=t3,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
t10=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 376  p");
t11=((C_word*)t0)[2];
((C_proc3)C_retrieve_proc(t11))(3,t11,t9,t10);}}

/* k7458 in do149 in list-index in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_7460(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
f_7446(t3,t2);}
else{
t2=((C_word*)t0)[2];
f_7446(t2,C_SCHEME_UNDEFINED);}}

/* k7444 in do149 in list-index in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_7446(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7446,NULL,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)t0)[6]);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],C_fix(1));
t4=((C_word*)((C_word*)t0)[4])[1];
f_7436(t4,((C_word*)t0)[3],t2,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* make-list in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_7331(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+5)){
C_save_and_reclaim((void*)tr3r,(void*)f_7331r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_7331r(t0,t1,t2,t3);}}

static void C_ccall f_7331r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a=C_alloc(5);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7335,a[2]=t2,a[3]=t1,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_lessp(t2,C_fix(0)))){
C_trace("ChickenBridge.scm: 376  error");
t5=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,lf[64],t2);}
else{
t5=t4;
f_7335(2,t5,C_SCHEME_UNDEFINED);}}

/* k7333 in make-list in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_7335(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7335,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7337,a[2]=t3,a[3]=((C_word)li31),tmp=(C_word)a,a+=4,tmp));
t7=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7360,a[2]=t5,a[3]=((C_word)li32),tmp=(C_word)a,a+=4,tmp));
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[4]))){
C_trace("ChickenBridge.scm: 376  l1");
t8=((C_word*)t3)[1];
f_7337(t8,((C_word*)t0)[3],((C_word*)t0)[2],C_SCHEME_FALSE);}
else{
t8=(C_word)C_i_car(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_closurep(t8))){
C_trace("ChickenBridge.scm: 376  l2");
t9=((C_word*)t5)[1];
f_7360(t9,((C_word*)t0)[3],((C_word*)t0)[2],((C_word*)t0)[4]);}
else{
t9=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 376  l1");
t10=((C_word*)t3)[1];
f_7337(t10,((C_word*)t0)[3],((C_word*)t0)[2],t9);}}}

/* l2 in k7333 in make-list in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_7360(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7360,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nequalp(t2,C_fix(0)))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_END_OF_LIST);}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_7377,a[2]=t3,a[3]=((C_word*)t0)[2],a[4]=t2,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
t5=(C_word)C_i_car(t3);
t6=(C_word)C_i_cdr(t3);
C_apply(4,0,t4,t5,t6);}}

/* k7375 in l2 in k7333 in make-list in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_7377(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7377,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7381,a[2]=t1,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[4],C_fix(1));
C_trace("ChickenBridge.scm: 376  l2");
t4=((C_word*)((C_word*)t0)[3])[1];
f_7360(t4,t2,t3,((C_word*)t0)[2]);}

/* k7379 in k7375 in l2 in k7333 in make-list in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_7381(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7381,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* l1 in k7333 in make-list in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_7337(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a;
loop:
a=C_alloc(8);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_7337,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nequalp(t2,C_fix(0)))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_END_OF_LIST);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7354,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_a_i_minus(&a,2,t2,C_fix(1));
C_trace("ChickenBridge.scm: 376  l1");
t7=t4;
t8=t5;
t9=t3;
t1=t7;
t2=t8;
t3=t9;
goto loop;}}

/* k7352 in l1 in k7333 in make-list in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_7354(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7354,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* reverse! in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_7270(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[11],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7270,3,t0,t1,t2);}
t3=(C_word)C_i_length(t2);
t4=(C_word)C_a_i_minus(&a,2,t3,C_fix(1));
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7283,a[2]=t2,a[3]=t6,a[4]=((C_word)li29),tmp=(C_word)a,a+=5,tmp));
t8=((C_word*)t6)[1];
f_7283(t8,t1,C_fix(0),t4,t2);}

/* do126 in reverse! in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_7283(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word *a;
loop:
a=C_alloc(12);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_7283,NULL,5,t0,t1,t2,t3,t4);}
if(C_truep((C_word)C_i_lessp(t2,t3))){
t5=(C_word)C_i_car(t4);
t6=(C_word)C_a_i_minus(&a,2,t3,t2);
t7=(C_word)C_i_list_tail(t4,t6);
t8=(C_word)C_i_car(t7);
t9=(C_word)C_i_set_car(t4,t8);
t10=(C_word)C_i_set_car(t7,t5);
t11=(C_word)C_a_i_plus(&a,2,t2,C_fix(1));
t12=(C_word)C_a_i_minus(&a,2,t3,C_fix(1));
t13=(C_word)C_i_cdr(t4);
t15=t1;
t16=t11;
t17=t12;
t18=t13;
t1=t15;
t2=t16;
t3=t17;
t4=t18;
goto loop;}
else{
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,((C_word*)t0)[2]);}}

/* list-set! in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_7260(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_7260,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_i_list_tail(t2,t3);
t6=(C_word)C_i_set_car(t5,t4);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,t4);}

/* list* in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_7220(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+4)){
C_save_and_reclaim((void*)tr2r,(void*)f_7220r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_7220r(t0,t1,t2);}}

static void C_ccall f_7220r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a=C_alloc(4);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 376  error");
t3=*((C_word*)lf[4]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t1,lf[60]);}
else{
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_car(t2));}
else{
t4=(C_word)C_i_car(t2);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7250,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_cdr(t2);
C_apply(4,0,t5,C_retrieve(lf[59]),t6);}}}

/* k7248 in list* in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_7250(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7250,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* tail in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_7130(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7130,3,t0,t1,t2);}
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t2);}
else{
t4=(C_word)C_i_cdr(t2);
C_trace("ChickenBridge.scm: 376  tail");
t5=C_retrieve(lf[58]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t1,t4);}}

/* butlast in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_7082(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[7],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7082,3,t0,t1,t2);}
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_END_OF_LIST);}
else{
t4=(C_word)C_i_cddr(t2);
if(C_truep((C_word)C_i_nullp(t4))){
t5=(C_word)C_i_car(t2);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_a_i_list(&a,1,t5));}
else{
t5=(C_word)C_i_car(t2);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7116,a[2]=t5,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_cdr(t2);
C_trace("ChickenBridge.scm: 376  butlast");
t8=C_retrieve(lf[57]);
((C_proc3)C_retrieve_proc(t8))(3,t8,t6,t7);}}}

/* k7114 in butlast in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_7116(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7116,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* last in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_7059(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7059,3,t0,t1,t2);}
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_car(t2));}
else{
t4=(C_word)C_i_cdr(t2);
C_trace("ChickenBridge.scm: 376  last");
t5=C_retrieve(lf[56]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t1,t4);}}

/* rest in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_7053(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7053,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_cdr(t2));}

/* tenth in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_7038(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7038,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=(C_word)C_i_cddddr(t3);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_i_cadr(t4));}

/* ninth in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_7024(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7024,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=(C_word)C_i_cddddr(t3);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_i_car(t4));}

/* eighth in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_7014(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7014,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_cadddr(t3));}

/* seventh in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_7004(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7004,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_caddr(t3));}

/* sixth in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_6994(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6994,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_cadr(t3));}

/* fifth in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_6984(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6984,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_car(t3));}

/* chdir in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_6955(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+3)){
C_save_and_reclaim((void*)tr2rv,(void*)f_6955r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest_vector(a,C_rest_count(0));
f_6955r(t0,t1,t2);}}

static void C_ccall f_6955r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word *a=C_alloc(3);
t3=(C_word)C_vemptyp(t2);
t4=(C_truep(t3)?lf[45]:(C_word)C_i_vector_ref(t2,C_fix(0)));
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6964,a[2]=((C_word)li15),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t5+1)))(3,t5,t1,t4);}

/* f_6964 in chdir in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_6964(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6964,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6969,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep(t2)){
t4=(C_word)C_i_foreign_string_argumentp(t2);
C_trace("##sys#make-c-string");
t5=C_retrieve(lf[46]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}
else{
t4=t3;
f_6969(2,t4,C_SCHEME_FALSE);}}

/* k6967 */
static void C_ccall f_6969(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub95(C_SCHEME_UNDEFINED,t1));}

/* cwd in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_6944(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6944,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6949,a[2]=((C_word)li13),tmp=(C_word)a,a+=3,tmp);
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,t1);}

/* f_6949 in cwd in k6940 in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_6949(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6949,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
C_trace("##sys#peek-c-string");
t3=*((C_word*)lf[43]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,(C_word)stub90(t2),C_fix(0));}

/* expand-send in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_6651(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[17],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_6651,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=t4;
t7=(C_truep(t6)?t6:(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6931,a[2]=((C_word)li5),tmp=(C_word)a,a+=3,tmp));
t8=t4;
t9=(C_truep(t8)?(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6920,a[2]=((C_word)li6),tmp=(C_word)a,a+=3,tmp):(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6929,a[2]=((C_word)li7),tmp=(C_word)a,a+=3,tmp));
t10=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_6661,a[2]=t9,a[3]=t7,a[4]=t1,a[5]=t5,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_symbolp(t2))){
C_trace("ChickenBridge.scm: 282  symbol->string");
t11=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t11))(3,t11,t10,t2);}
else{
t11=t10;
f_6661(2,t11,t2);}}

/* k6659 in expand-send in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_6661(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6661,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_6664,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6912,a[2]=((C_word)li11),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 283  hash-table-ref");
t4=*((C_word*)lf[41]+1);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,C_retrieve(lf[29]),t1,t3);}

/* a6911 in k6659 in expand-send in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_6912(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6912,2,t0,t1);}
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}

/* k6662 in k6659 in expand-send in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_6664(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6664,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_6667,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t1,a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
t3=t1;
if(C_truep(t3)){
t4=t2;
f_6667(2,t4,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 284  ferror");
t4=((C_word*)t0)[4];
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[40],((C_word*)t0)[3]);}}

/* k6665 in k6662 in k6659 in expand-send in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_6667(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6667,2,t0,t1);}
t2=((C_word*)((C_word*)t0)[7])[1];
t3=(C_word)C_i_car(((C_word*)t0)[6]);
t4=(C_word)C_i_cdr(((C_word*)t0)[6]);
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(C_word)C_i_length(t4);
t8=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_6682,a[2]=t2,a[3]=t7,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=t6,a[8]=t4,a[9]=((C_word*)t0)[7],a[10]=t3,a[11]=((C_word*)t0)[5],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nequalp(t7,C_fix(1)))){
t9=(C_word)C_i_car(t4);
t10=t8;
f_6682(t10,(C_word)C_eqp(t9,lf[39]));}
else{
t9=t8;
f_6682(t9,C_SCHEME_FALSE);}}

/* k6680 in k6665 in k6662 in k6659 in expand-send in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_6682(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6682,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[11];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[10],((C_word*)((C_word*)t0)[9])[1]));}
else{
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_6692,a[2]=((C_word*)t0)[11],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[9],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 298  append");
t3=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)t0)[8],C_SCHEME_END_OF_LIST);}}

/* k6690 in k6680 in k6665 in k6662 in k6659 in expand-send in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_6692(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6692,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_6694,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=t3,a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word)li10),tmp=(C_word)a,a+=13,tmp));
t5=((C_word*)t3)[1];
f_6694(t5,((C_word*)t0)[2],t1,C_SCHEME_FALSE,C_SCHEME_FALSE,C_fix(0));}

/* do63 in k6690 in k6680 in k6665 in k6662 in k6659 in expand-send in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_6694(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6694,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[11])[1]))){
t9=C_SCHEME_UNDEFINED;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_set_block_item(t10,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_6706,a[2]=((C_word*)t0)[9],a[3]=t10,a[4]=t2,a[5]=((C_word*)t0)[10],a[6]=((C_word)li8),tmp=(C_word)a,a+=7,tmp));
t12=((C_word*)t10)[1];
f_6706(t12,t1,t2);}
else{
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_6747,a[2]=t8,a[3]=t7,a[4]=t6,a[5]=t2,a[6]=t1,a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
t10=(*a=C_CLOSURE_TYPE|14,a[1]=(C_word)f_6753,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t8,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=t2,a[9]=t7,a[10]=((C_word*)t0)[9],a[11]=t6,a[12]=((C_word*)t0)[11],a[13]=t9,a[14]=((C_word*)t0)[7],tmp=(C_word)a,a+=15,tmp);
t11=((C_word*)((C_word*)t0)[7])[1];
if(C_truep(t11)){
t12=t10;
f_6753(2,t12,C_SCHEME_FALSE);}
else{
t12=(C_word)C_i_car(((C_word*)((C_word*)t0)[11])[1]);
C_trace("ChickenBridge.scm: 313  keyword?");
t13=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t13))(3,t13,t10,t12);}}}

/* k6751 in do63 in k6690 in k6680 in k6665 in k6662 in k6659 in expand-send in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_6753(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6753,2,t0,t1);}
if(C_truep(t1)){
t2=C_set_block_item(((C_word*)t0)[14],0,C_SCHEME_TRUE);
t3=((C_word*)t0)[13];
f_6747(t3,t2);}
else{
t2=((C_word*)((C_word*)t0)[14])[1];
if(C_truep(t2)){
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[12])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[11])+1,t3);
t5=(C_word)C_i_assoc(((C_word*)((C_word*)t0)[11])[1],((C_word*)t0)[10]);
t6=C_mutate(((C_word *)((C_word*)t0)[9])+1,t5);
t7=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[12])[1]);
t8=C_mutate(((C_word *)((C_word*)t0)[12])+1,t7);
t9=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_6807,a[2]=((C_word*)t0)[11],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[13],a[7]=((C_word*)t0)[12],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
t10=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_6880,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t9,a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[12],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 334  keyword?");
t11=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t11))(3,t11,t10,((C_word*)((C_word*)t0)[11])[1]);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_6763,a[2]=((C_word*)t0)[13],a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]))){
t4=(C_word)C_i_length(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 324  ferror");
t5=((C_word*)t0)[7];
((C_proc6)C_retrieve_proc(t5))(6,t5,t3,lf[38],((C_word*)t0)[6],((C_word*)t0)[3],t4);}
else{
t4=t3;
f_6763(2,t4,C_SCHEME_UNDEFINED);}}}}

/* k6761 in k6751 in do63 in k6690 in k6680 in k6665 in k6662 in k6659 in expand-send in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_6763(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6763,2,t0,t1);}
t2=(C_word)C_i_list_tail(((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t4=(C_word)C_i_set_car(t2,t3);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[4])[1],C_fix(1));
t8=C_mutate(((C_word *)((C_word*)t0)[4])+1,t7);
t9=((C_word*)t0)[2];
f_6747(t9,t8);}

/* k6878 in k6751 in do63 in k6690 in k6680 in k6665 in k6662 in k6659 in expand-send in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_6880(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6880,2,t0,t1);}
if(C_truep(t1)){
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[9])[1]))){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_6853,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 339  keyname");
t3=((C_word*)t0)[5];
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[4])[1]);}
else{
t2=((C_word*)((C_word*)t0)[3])[1];
if(C_truep(t2)){
t3=((C_word*)t0)[7];
f_6807(2,t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_6866,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_6868,a[2]=((C_word*)t0)[5],a[3]=((C_word)li9),tmp=(C_word)a,a+=4,tmp);
C_trace("map");
t5=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t3,t4,((C_word*)t0)[2]);}}}
else{
C_trace("ChickenBridge.scm: 335  ferror");
t2=((C_word*)t0)[8];
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[7],lf[37],((C_word*)t0)[6],((C_word*)((C_word*)t0)[4])[1]);}}

/* a6867 in k6878 in k6751 in do63 in k6690 in k6680 in k6665 in k6662 in k6659 in expand-send in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_6868(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6868,3,t0,t1,t2);}
t3=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 343  keyname");
t4=((C_word*)t0)[2];
((C_proc3)C_retrieve_proc(t4))(3,t4,t1,t3);}

/* k6864 in k6878 in k6751 in do63 in k6690 in k6680 in k6665 in k6662 in k6659 in expand-send in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_6866(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 341  ferror");
t2=((C_word*)t0)[5];
((C_proc6)C_retrieve_proc(t2))(6,t2,((C_word*)t0)[4],lf[36],((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k6851 in k6878 in k6751 in do63 in k6690 in k6680 in k6665 in k6662 in k6659 in expand-send in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_6853(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 338  ferror");
t2=((C_word*)t0)[4];
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[3],lf[35],((C_word*)t0)[2],t1);}

/* k6805 in k6751 in do63 in k6690 in k6680 in k6665 in k6662 in k6659 in expand-send in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_6807(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6807,2,t0,t1);}
t2=(C_word)C_i_member(((C_word*)((C_word*)t0)[9])[1],((C_word*)t0)[8]);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_6813,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],tmp=(C_word)a,a+=5,tmp);
if(C_truep(t2)){
t4=t3;
f_6813(2,t4,C_SCHEME_UNDEFINED);}
else{
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_6834,a[2]=((C_word*)t0)[4],a[3]=t3,a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 350  keyname");
t5=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,((C_word*)((C_word*)t0)[2])[1]);}}

/* k6832 in k6805 in k6751 in do63 in k6690 in k6680 in k6665 in k6662 in k6659 in expand-send in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_6834(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 349  ferror");
t2=((C_word*)t0)[4];
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[3],lf[34],((C_word*)t0)[2],t1);}

/* k6811 in k6805 in k6751 in do63 in k6690 in k6680 in k6665 in k6662 in k6659 in expand-send in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_6813(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_i_set_car(((C_word*)t0)[3],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t4);
t6=((C_word*)t0)[2];
f_6747(t6,t5);}

/* k6745 in do63 in k6690 in k6680 in k6665 in k6662 in k6659 in expand-send in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_6747(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[7])[1];
f_6694(t2,((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* do69 in do63 in k6690 in k6680 in k6665 in k6662 in k6659 in expand-send in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_6706(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6706,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[5],((C_word*)t0)[4]));}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_6719,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_member(t4,((C_word*)t0)[2]))){
t5=(C_word)C_i_car(t2);
t6=(C_word)C_i_cadr(t5);
t7=t3;
f_6719(t7,(C_word)C_i_set_car(t2,t6));}
else{
t5=t3;
f_6719(t5,C_SCHEME_UNDEFINED);}}}

/* k6717 in do69 in do63 in k6690 in k6680 in k6665 in k6662 in k6659 in expand-send in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_fcall f_6719(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_6706(t3,((C_word*)t0)[2],t2);}

/* f_6929 in expand-send in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_6929(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6929,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}

/* f_6920 in expand-send in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_6920(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6920,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6928,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 280  keyword->string");
t4=C_retrieve(lf[33]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k6926 */
static void C_ccall f_6928(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 280  sprintf");
t2=C_retrieve(lf[31]);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],lf[32],t1);}

/* f_6931 in expand-send in k6647 in k6644 in k6640 in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_6931(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+3)){
C_save_and_reclaim((void*)tr3r,(void*)f_6931r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_6931r(t0,t1,t2,t3);}}

static void C_ccall f_6931r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a=C_alloc(3);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6939,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_apply(5,0,t4,C_retrieve(lf[31]),t2,t3);}

/* k6937 */
static void C_ccall f_6939(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 276  error");
t2=*((C_word*)lf[4]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* expand-optkeys in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_6353(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_6353,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_6514,a[2]=t4,a[3]=t2,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6606,a[2]=((C_word)li3),tmp=(C_word)a,a+=3,tmp);
C_trace("map");
t7=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t7+1)))(4,t7,t5,t6,t3);}

/* a6605 in expand-optkeys in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_6606(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[14],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6606,3,t0,t1,t2);}
if(C_truep((C_word)C_i_pairp(t2))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_6620,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6624,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 228  symbol->string");
t6=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t6))(3,t6,t4,t5);}
else{
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_6635,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6639,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 229  symbol->string");
t5=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}}

/* k6637 in a6605 in expand-optkeys in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_6639(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 229  gensym");
t2=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k6633 in a6605 in expand-optkeys in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_6635(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6635,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_list(&a,3,t1,((C_word*)t0)[2],C_SCHEME_FALSE));}

/* k6622 in a6605 in expand-optkeys in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_6624(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 228  gensym");
t2=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k6618 in a6605 in expand-optkeys in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_6620(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6620,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[2]));}

/* k6512 in expand-optkeys in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_6514(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6514,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_6517,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 231  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[28]);}

/* k6515 in k6512 in expand-optkeys in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_6517(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6517,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_6520,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 232  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[27]);}

/* k6518 in k6515 in k6512 in expand-optkeys in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_6520(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6520,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_6523,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_6600,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t1,a[5]=((C_word)li2),tmp=(C_word)a,a+=6,tmp);
C_trace("map");
t4=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,t2,t3,((C_word*)t0)[2]);}

/* a6599 in k6518 in k6515 in k6512 in expand-optkeys in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_6600(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[11],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6600,3,t0,t1,t2);}
t3=((C_word*)t0)[4];
t4=((C_word*)t0)[3];
t5=((C_word*)t0)[2];
t6=(C_word)C_i_car(t2);
t7=(C_word)C_i_cadr(t2);
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_6366,a[2]=t1,a[3]=t3,a[4]=t7,a[5]=t5,a[6]=t4,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
t9=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6425,a[2]=t8,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 192  symbol->string");
t10=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t10))(3,t10,t9,t7);}

/* k6423 in a6599 in k6518 in k6515 in k6512 in expand-optkeys in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_6425(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 192  string->keyword");
t2=C_retrieve(lf[24]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k6364 in a6599 in k6518 in k6515 in k6512 in expand-optkeys in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_6366(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[120],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6366,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
t3=(C_word)C_a_i_list(&a,3,lf[4],lf[19],t1);
t4=(C_word)C_a_i_list(&a,3,lf[20],((C_word*)t0)[7],t3);
t5=(C_word)C_a_i_list(&a,2,lf[15],((C_word*)t0)[6]);
t6=(C_word)C_a_i_list(&a,2,lf[3],t5);
t7=(C_word)C_a_i_list(&a,3,lf[4],lf[21],((C_word*)t0)[5]);
t8=(C_word)C_a_i_list(&a,2,lf[22],((C_word*)t0)[6]);
t9=(C_word)C_a_i_list(&a,4,lf[20],t6,t7,t8);
t10=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[4],t9);
t11=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[7],C_SCHEME_TRUE);
t12=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[3],C_SCHEME_TRUE);
t13=(C_word)C_a_i_list(&a,2,lf[23],((C_word*)t0)[6]);
t14=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[6],t13);
t15=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t15+1)))(2,t15,(C_word)C_a_i_list(&a,6,t2,t4,t10,t11,t12,t14));}

/* k6521 in k6518 in k6515 in k6512 in expand-optkeys in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_6523(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6523,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_6530,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
C_trace("map");
t3=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t2,*((C_word*)lf[15]+1),((C_word*)t0)[2]);}

/* k6528 in k6521 in k6518 in k6515 in k6512 in expand-optkeys in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_6530(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6530,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_6542,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=t1,a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_6576,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6590,a[2]=((C_word)li1),tmp=(C_word)a,a+=3,tmp);
C_trace("map");
t5=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t3,t4,((C_word*)t0)[2]);}

/* a6589 in k6528 in k6521 in k6518 in k6515 in k6512 in expand-optkeys in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_6590(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6590,3,t0,t1,t2);}
t3=(C_word)C_i_car(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_list(&a,2,t3,C_SCHEME_FALSE));}

/* k6574 in k6528 in k6521 in k6518 in k6515 in k6512 in expand-optkeys in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_6576(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6576,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,((C_word*)t0)[5],((C_word*)t0)[4]);
t3=(C_word)C_a_i_list(&a,2,((C_word*)t0)[3],C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,2,t2,t3);
C_trace("ChickenBridge.scm: 238  append");
t5=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,((C_word*)t0)[2],t1,t4);}

/* k6540 in k6528 in k6521 in k6518 in k6515 in k6512 in expand-optkeys in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_6542(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6542,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_6546,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_6550,a[2]=t2,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_6568,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word)li0),tmp=(C_word)a,a+=7,tmp);
C_trace("map");
t5=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t3,t4,((C_word*)t0)[2]);}

/* a6567 in k6540 in k6528 in k6521 in k6518 in k6515 in k6512 in expand-optkeys in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_6568(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word ab[119],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6568,3,t0,t1,t2);}
t3=((C_word*)t0)[5];
t4=((C_word*)t0)[4];
t5=((C_word*)t0)[3];
t6=((C_word*)t0)[2];
t7=(C_word)C_a_i_list(&a,2,lf[3],t4);
t8=(C_word)C_a_i_list(&a,2,lf[8],t4);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_6503,a[2]=t7,a[3]=t1,a[4]=t8,tmp=(C_word)a,a+=5,tmp);
t10=(C_word)C_i_car(t2);
t11=(C_word)C_i_cadr(t2);
t12=(C_word)C_a_i_list(&a,3,lf[4],lf[10],t5);
t13=(C_word)C_a_i_list(&a,3,lf[11],t3,t12);
t14=(C_word)C_a_i_list(&a,2,lf[8],t4);
t15=(C_word)C_a_i_list(&a,3,lf[12],t11,t14);
t16=(C_word)C_a_i_list(&a,2,lf[13],t11);
t17=(C_word)C_a_i_list(&a,3,lf[4],lf[14],t11);
t18=(C_word)C_a_i_list(&a,3,lf[11],t16,t17);
t19=(C_word)C_a_i_list(&a,3,lf[12],t10,C_SCHEME_TRUE);
t20=(C_word)C_a_i_list(&a,2,lf[15],t4);
t21=(C_word)C_a_i_list(&a,3,lf[12],t4,t20);
t22=(C_word)C_a_i_list(&a,6,lf[16],t13,t15,t18,t19,t21);
t23=(C_word)C_a_i_list(&a,1,t22);
C_trace("##sys#append");
t24=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t24+1)))(4,t24,t9,t6,t23);}

/* k6501 in a6567 in k6540 in k6528 in k6521 in k6518 in k6515 in k6512 in expand-optkeys in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_6503(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6503,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t1);
t3=(C_word)C_a_i_cons(&a,2,lf[9],t2);
t4=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_list(&a,3,lf[6],((C_word*)t0)[2],t3));}

/* k6548 in k6540 in k6528 in k6521 in k6518 in k6515 in k6512 in expand-optkeys in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_6550(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6550,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,lf[3],((C_word*)t0)[5]);
t3=(C_word)C_a_i_list(&a,3,lf[4],lf[5],((C_word*)t0)[4]);
t4=(C_word)C_a_i_list(&a,3,lf[6],t2,t3);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)t0)[3]);
C_trace("##sys#append");
t6=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t6+1)))(4,t6,((C_word*)t0)[2],t1,t5);}

/* k6544 in k6540 in k6528 in k6521 in k6518 in k6515 in k6512 in expand-optkeys in k6349 in k6346 in k6343 in k6340 */
static void C_ccall f_6546(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6546,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t1);
t3=(C_word)C_a_i_cons(&a,2,lf[1],t2);
t4=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_list(&a,3,lf[2],((C_word*)t0)[2],t3));}

#ifdef C_ENABLE_PTABLES
static C_PTABLE_ENTRY ptable[2732] = {
{"toplevelChickenBridge.scm",(void*)C_grace_toplevel},
{"f_6342ChickenBridge.scm",(void*)f_6342},
{"f_6345ChickenBridge.scm",(void*)f_6345},
{"f_6348ChickenBridge.scm",(void*)f_6348},
{"f_6351ChickenBridge.scm",(void*)f_6351},
{"f_40233ChickenBridge.scm",(void*)f_40233},
{"f_6642ChickenBridge.scm",(void*)f_6642},
{"f_6646ChickenBridge.scm",(void*)f_6646},
{"f_40181ChickenBridge.scm",(void*)f_40181},
{"f_40228ChickenBridge.scm",(void*)f_40228},
{"f_40218ChickenBridge.scm",(void*)f_40218},
{"f_40185ChickenBridge.scm",(void*)f_40185},
{"f_6649ChickenBridge.scm",(void*)f_6649},
{"f_40175ChickenBridge.scm",(void*)f_40175},
{"f_6942ChickenBridge.scm",(void*)f_6942},
{"f_10006ChickenBridge.scm",(void*)f_10006},
{"f_39959ChickenBridge.scm",(void*)f_39959},
{"f_40173ChickenBridge.scm",(void*)f_40173},
{"f_39993ChickenBridge.scm",(void*)f_39993},
{"f_40005ChickenBridge.scm",(void*)f_40005},
{"f_40009ChickenBridge.scm",(void*)f_40009},
{"f_40013ChickenBridge.scm",(void*)f_40013},
{"f_40157ChickenBridge.scm",(void*)f_40157},
{"f_40019ChickenBridge.scm",(void*)f_40019},
{"f_40039ChickenBridge.scm",(void*)f_40039},
{"f_40042ChickenBridge.scm",(void*)f_40042},
{"f_40050ChickenBridge.scm",(void*)f_40050},
{"f_40057ChickenBridge.scm",(void*)f_40057},
{"f_40060ChickenBridge.scm",(void*)f_40060},
{"f_40064ChickenBridge.scm",(void*)f_40064},
{"f_40071ChickenBridge.scm",(void*)f_40071},
{"f_40074ChickenBridge.scm",(void*)f_40074},
{"f_40078ChickenBridge.scm",(void*)f_40078},
{"f_40085ChickenBridge.scm",(void*)f_40085},
{"f_40029ChickenBridge.scm",(void*)f_40029},
{"f_39982ChickenBridge.scm",(void*)f_39982},
{"f_39972ChickenBridge.scm",(void*)f_39972},
{"f_39975ChickenBridge.scm",(void*)f_39975},
{"f_10009ChickenBridge.scm",(void*)f_10009},
{"f_39949ChickenBridge.scm",(void*)f_39949},
{"f_39957ChickenBridge.scm",(void*)f_39957},
{"f_11074ChickenBridge.scm",(void*)f_11074},
{"f_39935ChickenBridge.scm",(void*)f_39935},
{"f_39943ChickenBridge.scm",(void*)f_39943},
{"f_39947ChickenBridge.scm",(void*)f_39947},
{"f_22229ChickenBridge.scm",(void*)f_22229},
{"f_22280ChickenBridge.scm",(void*)f_22280},
{"f_39925ChickenBridge.scm",(void*)f_39925},
{"f_39933ChickenBridge.scm",(void*)f_39933},
{"f_22385ChickenBridge.scm",(void*)f_22385},
{"f_39822ChickenBridge.scm",(void*)f_39822},
{"f_39885ChickenBridge.scm",(void*)f_39885},
{"f_39889ChickenBridge.scm",(void*)f_39889},
{"f_39903ChickenBridge.scm",(void*)f_39903},
{"f_39825ChickenBridge.scm",(void*)f_39825},
{"f_39845ChickenBridge.scm",(void*)f_39845},
{"f_39849ChickenBridge.scm",(void*)f_39849},
{"f_22388ChickenBridge.scm",(void*)f_22388},
{"f_39808ChickenBridge.scm",(void*)f_39808},
{"f_39816ChickenBridge.scm",(void*)f_39816},
{"f_39820ChickenBridge.scm",(void*)f_39820},
{"f_22581ChickenBridge.scm",(void*)f_22581},
{"f_39782ChickenBridge.scm",(void*)f_39782},
{"f_39786ChickenBridge.scm",(void*)f_39786},
{"f_39792ChickenBridge.scm",(void*)f_39792},
{"f_39803ChickenBridge.scm",(void*)f_39803},
{"f_39799ChickenBridge.scm",(void*)f_39799},
{"f_22650ChickenBridge.scm",(void*)f_22650},
{"f_39760ChickenBridge.scm",(void*)f_39760},
{"f_23895ChickenBridge.scm",(void*)f_23895},
{"f_39740ChickenBridge.scm",(void*)f_39740},
{"f_23898ChickenBridge.scm",(void*)f_23898},
{"f_39700ChickenBridge.scm",(void*)f_39700},
{"f_23901ChickenBridge.scm",(void*)f_23901},
{"f_39606ChickenBridge.scm",(void*)f_39606},
{"f_39610ChickenBridge.scm",(void*)f_39610},
{"f_39613ChickenBridge.scm",(void*)f_39613},
{"f_39631ChickenBridge.scm",(void*)f_39631},
{"f_39634ChickenBridge.scm",(void*)f_39634},
{"f_39665ChickenBridge.scm",(void*)f_39665},
{"f_39637ChickenBridge.scm",(void*)f_39637},
{"f_39643ChickenBridge.scm",(void*)f_39643},
{"f_39596ChickenBridge.scm",(void*)f_39596},
{"f_39590ChickenBridge.scm",(void*)f_39590},
{"f_23904ChickenBridge.scm",(void*)f_23904},
{"f_39498ChickenBridge.scm",(void*)f_39498},
{"f_39500ChickenBridge.scm",(void*)f_39500},
{"f_39504ChickenBridge.scm",(void*)f_39504},
{"f_39507ChickenBridge.scm",(void*)f_39507},
{"f_39510ChickenBridge.scm",(void*)f_39510},
{"f_39550ChickenBridge.scm",(void*)f_39550},
{"f_39542ChickenBridge.scm",(void*)f_39542},
{"f_39513ChickenBridge.scm",(void*)f_39513},
{"f_39516ChickenBridge.scm",(void*)f_39516},
{"f_39519ChickenBridge.scm",(void*)f_39519},
{"f_39490ChickenBridge.scm",(void*)f_39490},
{"f_23907ChickenBridge.scm",(void*)f_23907},
{"f_39462ChickenBridge.scm",(void*)f_39462},
{"f_23910ChickenBridge.scm",(void*)f_23910},
{"f_39426ChickenBridge.scm",(void*)f_39426},
{"f_39438ChickenBridge.scm",(void*)f_39438},
{"f_39434ChickenBridge.scm",(void*)f_39434},
{"f_39408ChickenBridge.scm",(void*)f_39408},
{"f_39402ChickenBridge.scm",(void*)f_39402},
{"f_23913ChickenBridge.scm",(void*)f_23913},
{"f_39316ChickenBridge.scm",(void*)f_39316},
{"f_39320ChickenBridge.scm",(void*)f_39320},
{"f_39323ChickenBridge.scm",(void*)f_39323},
{"f_39326ChickenBridge.scm",(void*)f_39326},
{"f_39339ChickenBridge.scm",(void*)f_39339},
{"f_39285ChickenBridge.scm",(void*)f_39285},
{"f_39289ChickenBridge.scm",(void*)f_39289},
{"f_39304ChickenBridge.scm",(void*)f_39304},
{"f_39279ChickenBridge.scm",(void*)f_39279},
{"f_23916ChickenBridge.scm",(void*)f_23916},
{"f_39165ChickenBridge.scm",(void*)f_39165},
{"f_39181ChickenBridge.scm",(void*)f_39181},
{"f_39192ChickenBridge.scm",(void*)f_39192},
{"f_39159ChickenBridge.scm",(void*)f_39159},
{"f_23972ChickenBridge.scm",(void*)f_23972},
{"f_39026ChickenBridge.scm",(void*)f_39026},
{"f_39049ChickenBridge.scm",(void*)f_39049},
{"f_39046ChickenBridge.scm",(void*)f_39046},
{"f_39020ChickenBridge.scm",(void*)f_39020},
{"f_23975ChickenBridge.scm",(void*)f_23975},
{"f_38874ChickenBridge.scm",(void*)f_38874},
{"f_38892ChickenBridge.scm",(void*)f_38892},
{"f_38901ChickenBridge.scm",(void*)f_38901},
{"f_38868ChickenBridge.scm",(void*)f_38868},
{"f_23978ChickenBridge.scm",(void*)f_23978},
{"f_38821ChickenBridge.scm",(void*)f_38821},
{"f_38825ChickenBridge.scm",(void*)f_38825},
{"f_38828ChickenBridge.scm",(void*)f_38828},
{"f_38844ChickenBridge.scm",(void*)f_38844},
{"f_38803ChickenBridge.scm",(void*)f_38803},
{"f_38797ChickenBridge.scm",(void*)f_38797},
{"f_23981ChickenBridge.scm",(void*)f_23981},
{"f_38721ChickenBridge.scm",(void*)f_38721},
{"f_24120ChickenBridge.scm",(void*)f_24120},
{"f_38647ChickenBridge.scm",(void*)f_38647},
{"f_38654ChickenBridge.scm",(void*)f_38654},
{"f_38641ChickenBridge.scm",(void*)f_38641},
{"f_24123ChickenBridge.scm",(void*)f_24123},
{"f_38537ChickenBridge.scm",(void*)f_38537},
{"f_38545ChickenBridge.scm",(void*)f_38545},
{"f_38511ChickenBridge.scm",(void*)f_38511},
{"f_38528ChickenBridge.scm",(void*)f_38528},
{"f_38519ChickenBridge.scm",(void*)f_38519},
{"f_38505ChickenBridge.scm",(void*)f_38505},
{"f_24126ChickenBridge.scm",(void*)f_24126},
{"f_38461ChickenBridge.scm",(void*)f_38461},
{"f_24129ChickenBridge.scm",(void*)f_24129},
{"f_38379ChickenBridge.scm",(void*)f_38379},
{"f_38390ChickenBridge.scm",(void*)f_38390},
{"f_38392ChickenBridge.scm",(void*)f_38392},
{"f_38421ChickenBridge.scm",(void*)f_38421},
{"f_38357ChickenBridge.scm",(void*)f_38357},
{"f_38373ChickenBridge.scm",(void*)f_38373},
{"f_38351ChickenBridge.scm",(void*)f_38351},
{"f_24132ChickenBridge.scm",(void*)f_24132},
{"f_38304ChickenBridge.scm",(void*)f_38304},
{"f_38308ChickenBridge.scm",(void*)f_38308},
{"f_38315ChickenBridge.scm",(void*)f_38315},
{"f_38282ChickenBridge.scm",(void*)f_38282},
{"f_38298ChickenBridge.scm",(void*)f_38298},
{"f_38276ChickenBridge.scm",(void*)f_38276},
{"f_24135ChickenBridge.scm",(void*)f_24135},
{"f_38144ChickenBridge.scm",(void*)f_38144},
{"f_38184ChickenBridge.scm",(void*)f_38184},
{"f_38148ChickenBridge.scm",(void*)f_38148},
{"f_38164ChickenBridge.scm",(void*)f_38164},
{"f_38176ChickenBridge.scm",(void*)f_38176},
{"f_38180ChickenBridge.scm",(void*)f_38180},
{"f_38172ChickenBridge.scm",(void*)f_38172},
{"f_38069ChickenBridge.scm",(void*)f_38069},
{"f_38112ChickenBridge.scm",(void*)f_38112},
{"f_38116ChickenBridge.scm",(void*)f_38116},
{"f_38076ChickenBridge.scm",(void*)f_38076},
{"f_38087ChickenBridge.scm",(void*)f_38087},
{"f_38063ChickenBridge.scm",(void*)f_38063},
{"f_24138ChickenBridge.scm",(void*)f_24138},
{"f_38043ChickenBridge.scm",(void*)f_38043},
{"f_38037ChickenBridge.scm",(void*)f_38037},
{"f_24141ChickenBridge.scm",(void*)f_24141},
{"f_38017ChickenBridge.scm",(void*)f_38017},
{"f_38021ChickenBridge.scm",(void*)f_38021},
{"f_38009ChickenBridge.scm",(void*)f_38009},
{"f_24144ChickenBridge.scm",(void*)f_24144},
{"f_37989ChickenBridge.scm",(void*)f_37989},
{"f_37993ChickenBridge.scm",(void*)f_37993},
{"f_37981ChickenBridge.scm",(void*)f_37981},
{"f_24147ChickenBridge.scm",(void*)f_24147},
{"f_37961ChickenBridge.scm",(void*)f_37961},
{"f_37965ChickenBridge.scm",(void*)f_37965},
{"f_37953ChickenBridge.scm",(void*)f_37953},
{"f_24150ChickenBridge.scm",(void*)f_24150},
{"f_37933ChickenBridge.scm",(void*)f_37933},
{"f_37937ChickenBridge.scm",(void*)f_37937},
{"f_37925ChickenBridge.scm",(void*)f_37925},
{"f_24153ChickenBridge.scm",(void*)f_24153},
{"f_37824ChickenBridge.scm",(void*)f_37824},
{"f_37794ChickenBridge.scm",(void*)f_37794},
{"f_37818ChickenBridge.scm",(void*)f_37818},
{"f_37788ChickenBridge.scm",(void*)f_37788},
{"f_24156ChickenBridge.scm",(void*)f_24156},
{"f_37738ChickenBridge.scm",(void*)f_37738},
{"f_37740ChickenBridge.scm",(void*)f_37740},
{"f_37744ChickenBridge.scm",(void*)f_37744},
{"f_37772ChickenBridge.scm",(void*)f_37772},
{"f_37764ChickenBridge.scm",(void*)f_37764},
{"f_37760ChickenBridge.scm",(void*)f_37760},
{"f_37747ChickenBridge.scm",(void*)f_37747},
{"f_37730ChickenBridge.scm",(void*)f_37730},
{"f_24159ChickenBridge.scm",(void*)f_24159},
{"f_37677ChickenBridge.scm",(void*)f_37677},
{"f_37679ChickenBridge.scm",(void*)f_37679},
{"f_37683ChickenBridge.scm",(void*)f_37683},
{"f_37714ChickenBridge.scm",(void*)f_37714},
{"f_37706ChickenBridge.scm",(void*)f_37706},
{"f_37702ChickenBridge.scm",(void*)f_37702},
{"f_37686ChickenBridge.scm",(void*)f_37686},
{"f_37689ChickenBridge.scm",(void*)f_37689},
{"f_37669ChickenBridge.scm",(void*)f_37669},
{"f_24162ChickenBridge.scm",(void*)f_24162},
{"f_37619ChickenBridge.scm",(void*)f_37619},
{"f_37633ChickenBridge.scm",(void*)f_37633},
{"f_37625ChickenBridge.scm",(void*)f_37625},
{"f_37584ChickenBridge.scm",(void*)f_37584},
{"f_37617ChickenBridge.scm",(void*)f_37617},
{"f_37578ChickenBridge.scm",(void*)f_37578},
{"f_24165ChickenBridge.scm",(void*)f_24165},
{"f_37525ChickenBridge.scm",(void*)f_37525},
{"f_37529ChickenBridge.scm",(void*)f_37529},
{"f_37542ChickenBridge.scm",(void*)f_37542},
{"f_37534ChickenBridge.scm",(void*)f_37534},
{"f_37482ChickenBridge.scm",(void*)f_37482},
{"f_37515ChickenBridge.scm",(void*)f_37515},
{"f_37476ChickenBridge.scm",(void*)f_37476},
{"f_24168ChickenBridge.scm",(void*)f_24168},
{"f_37396ChickenBridge.scm",(void*)f_37396},
{"f_37390ChickenBridge.scm",(void*)f_37390},
{"f_24171ChickenBridge.scm",(void*)f_24171},
{"f_37159ChickenBridge.scm",(void*)f_37159},
{"f_37163ChickenBridge.scm",(void*)f_37163},
{"f_37171ChickenBridge.scm",(void*)f_37171},
{"f_37194ChickenBridge.scm",(void*)f_37194},
{"f_37197ChickenBridge.scm",(void*)f_37197},
{"f_37200ChickenBridge.scm",(void*)f_37200},
{"f_37203ChickenBridge.scm",(void*)f_37203},
{"f_37263ChickenBridge.scm",(void*)f_37263},
{"f_37270ChickenBridge.scm",(void*)f_37270},
{"f_37280ChickenBridge.scm",(void*)f_37280},
{"f_37290ChickenBridge.scm",(void*)f_37290},
{"f_37304ChickenBridge.scm",(void*)f_37304},
{"f_37314ChickenBridge.scm",(void*)f_37314},
{"f_37324ChickenBridge.scm",(void*)f_37324},
{"f_37334ChickenBridge.scm",(void*)f_37334},
{"f_37206ChickenBridge.scm",(void*)f_37206},
{"f_37230ChickenBridge.scm",(void*)f_37230},
{"f_37209ChickenBridge.scm",(void*)f_37209},
{"f_37116ChickenBridge.scm",(void*)f_37116},
{"f_37149ChickenBridge.scm",(void*)f_37149},
{"f_37110ChickenBridge.scm",(void*)f_37110},
{"f_24174ChickenBridge.scm",(void*)f_24174},
{"f_37028ChickenBridge.scm",(void*)f_37028},
{"f_37032ChickenBridge.scm",(void*)f_37032},
{"f_37038ChickenBridge.scm",(void*)f_37038},
{"f_37058ChickenBridge.scm",(void*)f_37058},
{"f_37002ChickenBridge.scm",(void*)f_37002},
{"f_37012ChickenBridge.scm",(void*)f_37012},
{"f_36996ChickenBridge.scm",(void*)f_36996},
{"f_24177ChickenBridge.scm",(void*)f_24177},
{"f_36873ChickenBridge.scm",(void*)f_36873},
{"f_36877ChickenBridge.scm",(void*)f_36877},
{"f_36805ChickenBridge.scm",(void*)f_36805},
{"f_36824ChickenBridge.scm",(void*)f_36824},
{"f_36859ChickenBridge.scm",(void*)f_36859},
{"f_36830ChickenBridge.scm",(void*)f_36830},
{"f_36834ChickenBridge.scm",(void*)f_36834},
{"f_36848ChickenBridge.scm",(void*)f_36848},
{"f_36837ChickenBridge.scm",(void*)f_36837},
{"f_36818ChickenBridge.scm",(void*)f_36818},
{"f_36799ChickenBridge.scm",(void*)f_36799},
{"f_24180ChickenBridge.scm",(void*)f_24180},
{"f_36527ChickenBridge.scm",(void*)f_36527},
{"f_24703ChickenBridge.scm",(void*)f_24703},
{"f_36479ChickenBridge.scm",(void*)f_36479},
{"f_36471ChickenBridge.scm",(void*)f_36471},
{"f_24706ChickenBridge.scm",(void*)f_24706},
{"f_36351ChickenBridge.scm",(void*)f_36351},
{"f_24712ChickenBridge.scm",(void*)f_24712},
{"f_25171ChickenBridge.scm",(void*)f_25171},
{"f_25205ChickenBridge.scm",(void*)f_25205},
{"f_25197ChickenBridge.scm",(void*)f_25197},
{"f_25193ChickenBridge.scm",(void*)f_25193},
{"f_25178ChickenBridge.scm",(void*)f_25178},
{"f_25182ChickenBridge.scm",(void*)f_25182},
{"f_25175ChickenBridge.scm",(void*)f_25175},
{"f_24730ChickenBridge.scm",(void*)f_24730},
{"f_25164ChickenBridge.scm",(void*)f_25164},
{"f_25160ChickenBridge.scm",(void*)f_25160},
{"f_24737ChickenBridge.scm",(void*)f_24737},
{"f_25035ChickenBridge.scm",(void*)f_25035},
{"f_25056ChickenBridge.scm",(void*)f_25056},
{"f_25058ChickenBridge.scm",(void*)f_25058},
{"f_25072ChickenBridge.scm",(void*)f_25072},
{"f_25125ChickenBridge.scm",(void*)f_25125},
{"f_25075ChickenBridge.scm",(void*)f_25075},
{"f_25110ChickenBridge.scm",(void*)f_25110},
{"f_25078ChickenBridge.scm",(void*)f_25078},
{"f_25091ChickenBridge.scm",(void*)f_25091},
{"f_25103ChickenBridge.scm",(void*)f_25103},
{"f_25095ChickenBridge.scm",(void*)f_25095},
{"f_25081ChickenBridge.scm",(void*)f_25081},
{"f_25045ChickenBridge.scm",(void*)f_25045},
{"f_24740ChickenBridge.scm",(void*)f_24740},
{"f_24999ChickenBridge.scm",(void*)f_24999},
{"f_25025ChickenBridge.scm",(void*)f_25025},
{"f_25010ChickenBridge.scm",(void*)f_25010},
{"f_24743ChickenBridge.scm",(void*)f_24743},
{"f_24747ChickenBridge.scm",(void*)f_24747},
{"f_24943ChickenBridge.scm",(void*)f_24943},
{"f_24953ChickenBridge.scm",(void*)f_24953},
{"f_24956ChickenBridge.scm",(void*)f_24956},
{"f_24977ChickenBridge.scm",(void*)f_24977},
{"f_24959ChickenBridge.scm",(void*)f_24959},
{"f_24963ChickenBridge.scm",(void*)f_24963},
{"f_24750ChickenBridge.scm",(void*)f_24750},
{"f_24753ChickenBridge.scm",(void*)f_24753},
{"f_24906ChickenBridge.scm",(void*)f_24906},
{"f_24914ChickenBridge.scm",(void*)f_24914},
{"f_24910ChickenBridge.scm",(void*)f_24910},
{"f_24756ChickenBridge.scm",(void*)f_24756},
{"f_24784ChickenBridge.scm",(void*)f_24784},
{"f_24787ChickenBridge.scm",(void*)f_24787},
{"f_24790ChickenBridge.scm",(void*)f_24790},
{"f_24793ChickenBridge.scm",(void*)f_24793},
{"f_24796ChickenBridge.scm",(void*)f_24796},
{"f_24855ChickenBridge.scm",(void*)f_24855},
{"f_36305ChickenBridge.scm",(void*)f_36305},
{"f_36321ChickenBridge.scm",(void*)f_36321},
{"f_36324ChickenBridge.scm",(void*)f_36324},
{"f_36327ChickenBridge.scm",(void*)f_36327},
{"f_36330ChickenBridge.scm",(void*)f_36330},
{"f_36341ChickenBridge.scm",(void*)f_36341},
{"f_36299ChickenBridge.scm",(void*)f_36299},
{"f_25212ChickenBridge.scm",(void*)f_25212},
{"f_36160ChickenBridge.scm",(void*)f_36160},
{"f_36199ChickenBridge.scm",(void*)f_36199},
{"f_36173ChickenBridge.scm",(void*)f_36173},
{"f_36154ChickenBridge.scm",(void*)f_36154},
{"f_25215ChickenBridge.scm",(void*)f_25215},
{"f_35742ChickenBridge.scm",(void*)f_35742},
{"f_35746ChickenBridge.scm",(void*)f_35746},
{"f_35758ChickenBridge.scm",(void*)f_35758},
{"f_35816ChickenBridge.scm",(void*)f_35816},
{"f_35819ChickenBridge.scm",(void*)f_35819},
{"f_35822ChickenBridge.scm",(void*)f_35822},
{"f_36034ChickenBridge.scm",(void*)f_36034},
{"f_35972ChickenBridge.scm",(void*)f_35972},
{"f_36006ChickenBridge.scm",(void*)f_36006},
{"f_35981ChickenBridge.scm",(void*)f_35981},
{"f_35992ChickenBridge.scm",(void*)f_35992},
{"f_35988ChickenBridge.scm",(void*)f_35988},
{"f_35831ChickenBridge.scm",(void*)f_35831},
{"f_35909ChickenBridge.scm",(void*)f_35909},
{"f_35950ChickenBridge.scm",(void*)f_35950},
{"f_35954ChickenBridge.scm",(void*)f_35954},
{"f_35958ChickenBridge.scm",(void*)f_35958},
{"f_35913ChickenBridge.scm",(void*)f_35913},
{"f_35917ChickenBridge.scm",(void*)f_35917},
{"f_35944ChickenBridge.scm",(void*)f_35944},
{"f_35920ChickenBridge.scm",(void*)f_35920},
{"f_35834ChickenBridge.scm",(void*)f_35834},
{"f_35906ChickenBridge.scm",(void*)f_35906},
{"f_35848ChickenBridge.scm",(void*)f_35848},
{"f_35850ChickenBridge.scm",(void*)f_35850},
{"f_35898ChickenBridge.scm",(void*)f_35898},
{"f_35869ChickenBridge.scm",(void*)f_35869},
{"f_35886ChickenBridge.scm",(void*)f_35886},
{"f_35872ChickenBridge.scm",(void*)f_35872},
{"f_35865ChickenBridge.scm",(void*)f_35865},
{"f_35837ChickenBridge.scm",(void*)f_35837},
{"f_35767ChickenBridge.scm",(void*)f_35767},
{"f_35777ChickenBridge.scm",(void*)f_35777},
{"f_35783ChickenBridge.scm",(void*)f_35783},
{"f_35755ChickenBridge.scm",(void*)f_35755},
{"f_35703ChickenBridge.scm",(void*)f_35703},
{"f_35720ChickenBridge.scm",(void*)f_35720},
{"f_35736ChickenBridge.scm",(void*)f_35736},
{"f_35714ChickenBridge.scm",(void*)f_35714},
{"f_35697ChickenBridge.scm",(void*)f_35697},
{"f_25218ChickenBridge.scm",(void*)f_25218},
{"f_35621ChickenBridge.scm",(void*)f_35621},
{"f_25221ChickenBridge.scm",(void*)f_25221},
{"f_35597ChickenBridge.scm",(void*)f_35597},
{"f_35609ChickenBridge.scm",(void*)f_35609},
{"f_35605ChickenBridge.scm",(void*)f_35605},
{"f_35583ChickenBridge.scm",(void*)f_35583},
{"f_35591ChickenBridge.scm",(void*)f_35591},
{"f_35577ChickenBridge.scm",(void*)f_35577},
{"f_25224ChickenBridge.scm",(void*)f_25224},
{"f_35569ChickenBridge.scm",(void*)f_35569},
{"f_28995ChickenBridge.scm",(void*)f_28995},
{"f_28998ChickenBridge.scm",(void*)f_28998},
{"f_29164ChickenBridge.scm",(void*)f_29164},
{"f_29160ChickenBridge.scm",(void*)f_29160},
{"f_29150ChickenBridge.scm",(void*)f_29150},
{"f_29005ChickenBridge.scm",(void*)f_29005},
{"f_29009ChickenBridge.scm",(void*)f_29009},
{"f_29012ChickenBridge.scm",(void*)f_29012},
{"f_29023ChickenBridge.scm",(void*)f_29023},
{"f_29031ChickenBridge.scm",(void*)f_29031},
{"f_29103ChickenBridge.scm",(void*)f_29103},
{"f_29111ChickenBridge.scm",(void*)f_29111},
{"f_29107ChickenBridge.scm",(void*)f_29107},
{"f_29099ChickenBridge.scm",(void*)f_29099},
{"f_29095ChickenBridge.scm",(void*)f_29095},
{"f_29067ChickenBridge.scm",(void*)f_29067},
{"f_29063ChickenBridge.scm",(void*)f_29063},
{"f_29027ChickenBridge.scm",(void*)f_29027},
{"f_25642ChickenBridge.scm",(void*)f_25642},
{"f_35555ChickenBridge.scm",(void*)f_35555},
{"f_25645ChickenBridge.scm",(void*)f_25645},
{"f_35526ChickenBridge.scm",(void*)f_35526},
{"f_35530ChickenBridge.scm",(void*)f_35530},
{"f_25648ChickenBridge.scm",(void*)f_25648},
{"f_35523ChickenBridge.scm",(void*)f_35523},
{"f_25651ChickenBridge.scm",(void*)f_25651},
{"f_35381ChickenBridge.scm",(void*)f_35381},
{"f_29177ChickenBridge.scm",(void*)f_29177},
{"f_29309ChickenBridge.scm",(void*)f_29309},
{"f_29180ChickenBridge.scm",(void*)f_29180},
{"f_29191ChickenBridge.scm",(void*)f_29191},
{"f_29199ChickenBridge.scm",(void*)f_29199},
{"f_29223ChickenBridge.scm",(void*)f_29223},
{"f_29226ChickenBridge.scm",(void*)f_29226},
{"f_29234ChickenBridge.scm",(void*)f_29234},
{"f_29242ChickenBridge.scm",(void*)f_29242},
{"f_29262ChickenBridge.scm",(void*)f_29262},
{"f_29258ChickenBridge.scm",(void*)f_29258},
{"f_29238ChickenBridge.scm",(void*)f_29238},
{"f_29230ChickenBridge.scm",(void*)f_29230},
{"f_29219ChickenBridge.scm",(void*)f_29219},
{"f_29195ChickenBridge.scm",(void*)f_29195},
{"f_29171ChickenBridge.scm",(void*)f_29171},
{"f_34093ChickenBridge.scm",(void*)f_34093},
{"f_34096ChickenBridge.scm",(void*)f_34096},
{"f_34099ChickenBridge.scm",(void*)f_34099},
{"f_34102ChickenBridge.scm",(void*)f_34102},
{"f_34105ChickenBridge.scm",(void*)f_34105},
{"f_34108ChickenBridge.scm",(void*)f_34108},
{"f_34111ChickenBridge.scm",(void*)f_34111},
{"f_34114ChickenBridge.scm",(void*)f_34114},
{"f_34117ChickenBridge.scm",(void*)f_34117},
{"f_34120ChickenBridge.scm",(void*)f_34120},
{"f_34123ChickenBridge.scm",(void*)f_34123},
{"f_34248ChickenBridge.scm",(void*)f_34248},
{"f_34251ChickenBridge.scm",(void*)f_34251},
{"f_34254ChickenBridge.scm",(void*)f_34254},
{"f_35318ChickenBridge.scm",(void*)f_35318},
{"f_35346ChickenBridge.scm",(void*)f_35346},
{"f_34985ChickenBridge.scm",(void*)f_34985},
{"f_35312ChickenBridge.scm",(void*)f_35312},
{"f_35030ChickenBridge.scm",(void*)f_35030},
{"f_35036ChickenBridge.scm",(void*)f_35036},
{"f_35039ChickenBridge.scm",(void*)f_35039},
{"f_35042ChickenBridge.scm",(void*)f_35042},
{"f_35046ChickenBridge.scm",(void*)f_35046},
{"f_35256ChickenBridge.scm",(void*)f_35256},
{"f_35268ChickenBridge.scm",(void*)f_35268},
{"f_35264ChickenBridge.scm",(void*)f_35264},
{"f_35049ChickenBridge.scm",(void*)f_35049},
{"f_35213ChickenBridge.scm",(void*)f_35213},
{"f_35249ChickenBridge.scm",(void*)f_35249},
{"f_35242ChickenBridge.scm",(void*)f_35242},
{"f_35052ChickenBridge.scm",(void*)f_35052},
{"f_35151ChickenBridge.scm",(void*)f_35151},
{"f_35159ChickenBridge.scm",(void*)f_35159},
{"f_35155ChickenBridge.scm",(void*)f_35155},
{"f_35147ChickenBridge.scm",(void*)f_35147},
{"f_35143ChickenBridge.scm",(void*)f_35143},
{"f_35099ChickenBridge.scm",(void*)f_35099},
{"f_35095ChickenBridge.scm",(void*)f_35095},
{"f_35062ChickenBridge.scm",(void*)f_35062},
{"f_35073ChickenBridge.scm",(void*)f_35073},
{"f_35081ChickenBridge.scm",(void*)f_35081},
{"f_35077ChickenBridge.scm",(void*)f_35077},
{"f_35275ChickenBridge.scm",(void*)f_35275},
{"f_35283ChickenBridge.scm",(void*)f_35283},
{"f_35297ChickenBridge.scm",(void*)f_35297},
{"f_35287ChickenBridge.scm",(void*)f_35287},
{"f_35278ChickenBridge.scm",(void*)f_35278},
{"f_35281ChickenBridge.scm",(void*)f_35281},
{"f_34987ChickenBridge.scm",(void*)f_34987},
{"f_35003ChickenBridge.scm",(void*)f_35003},
{"f_34914ChickenBridge.scm",(void*)f_34914},
{"f_34925ChickenBridge.scm",(void*)f_34925},
{"f_34928ChickenBridge.scm",(void*)f_34928},
{"f_34935ChickenBridge.scm",(void*)f_34935},
{"f_34904ChickenBridge.scm",(void*)f_34904},
{"f_34559ChickenBridge.scm",(void*)f_34559},
{"f_34908ChickenBridge.scm",(void*)f_34908},
{"f_34846ChickenBridge.scm",(void*)f_34846},
{"f_34864ChickenBridge.scm",(void*)f_34864},
{"f_34874ChickenBridge.scm",(void*)f_34874},
{"f_34850ChickenBridge.scm",(void*)f_34850},
{"f_34837ChickenBridge.scm",(void*)f_34837},
{"f_34537ChickenBridge.scm",(void*)f_34537},
{"f_34841ChickenBridge.scm",(void*)f_34841},
{"f_34831ChickenBridge.scm",(void*)f_34831},
{"f_34519ChickenBridge.scm",(void*)f_34519},
{"f_34822ChickenBridge.scm",(void*)f_34822},
{"f_34528ChickenBridge.scm",(void*)f_34528},
{"f_34826ChickenBridge.scm",(void*)f_34826},
{"f_34759ChickenBridge.scm",(void*)f_34759},
{"f_34784ChickenBridge.scm",(void*)f_34784},
{"f_34484ChickenBridge.scm",(void*)f_34484},
{"f_34772ChickenBridge.scm",(void*)f_34772},
{"f_34583ChickenBridge.scm",(void*)f_34583},
{"f_34710ChickenBridge.scm",(void*)f_34710},
{"f_34705ChickenBridge.scm",(void*)f_34705},
{"f_34585ChickenBridge.scm",(void*)f_34585},
{"f_34704ChickenBridge.scm",(void*)f_34704},
{"f_34700ChickenBridge.scm",(void*)f_34700},
{"f_34692ChickenBridge.scm",(void*)f_34692},
{"f_34656ChickenBridge.scm",(void*)f_34656},
{"f_34689ChickenBridge.scm",(void*)f_34689},
{"f_34685ChickenBridge.scm",(void*)f_34685},
{"f_34666ChickenBridge.scm",(void*)f_34666},
{"f_34645ChickenBridge.scm",(void*)f_34645},
{"f_34615ChickenBridge.scm",(void*)f_34615},
{"f_34587ChickenBridge.scm",(void*)f_34587},
{"f_34564ChickenBridge.scm",(void*)f_34564},
{"f_34569ChickenBridge.scm",(void*)f_34569},
{"f_34574ChickenBridge.scm",(void*)f_34574},
{"f_34542ChickenBridge.scm",(void*)f_34542},
{"f_34546ChickenBridge.scm",(void*)f_34546},
{"f_34498ChickenBridge.scm",(void*)f_34498},
{"f_34502ChickenBridge.scm",(void*)f_34502},
{"f_34489ChickenBridge.scm",(void*)f_34489},
{"f_34493ChickenBridge.scm",(void*)f_34493},
{"f_34477ChickenBridge.scm",(void*)f_34477},
{"f_34474ChickenBridge.scm",(void*)f_34474},
{"f_34460ChickenBridge.scm",(void*)f_34460},
{"f_34465ChickenBridge.scm",(void*)f_34465},
{"f_34446ChickenBridge.scm",(void*)f_34446},
{"f_34451ChickenBridge.scm",(void*)f_34451},
{"f_34256ChickenBridge.scm",(void*)f_34256},
{"f_34317ChickenBridge.scm",(void*)f_34317},
{"f_34319ChickenBridge.scm",(void*)f_34319},
{"f_34329ChickenBridge.scm",(void*)f_34329},
{"f_34348ChickenBridge.scm",(void*)f_34348},
{"f_34388ChickenBridge.scm",(void*)f_34388},
{"f_34430ChickenBridge.scm",(void*)f_34430},
{"f_34400ChickenBridge.scm",(void*)f_34400},
{"f_34385ChickenBridge.scm",(void*)f_34385},
{"f_34303ChickenBridge.scm",(void*)f_34303},
{"f_34268ChickenBridge.scm",(void*)f_34268},
{"f_34295ChickenBridge.scm",(void*)f_34295},
{"f_34276ChickenBridge.scm",(void*)f_34276},
{"f_34283ChickenBridge.scm",(void*)f_34283},
{"f_34287ChickenBridge.scm",(void*)f_34287},
{"f_34291ChickenBridge.scm",(void*)f_34291},
{"f_34368ChickenBridge.scm",(void*)f_34368},
{"f_34346ChickenBridge.scm",(void*)f_34346},
{"f_34332ChickenBridge.scm",(void*)f_34332},
{"f_34335ChickenBridge.scm",(void*)f_34335},
{"f_34310ChickenBridge.scm",(void*)f_34310},
{"f_34239ChickenBridge.scm",(void*)f_34239},
{"f_34244ChickenBridge.scm",(void*)f_34244},
{"f_34182ChickenBridge.scm",(void*)f_34182},
{"f_34215ChickenBridge.scm",(void*)f_34215},
{"f_34195ChickenBridge.scm",(void*)f_34195},
{"f_34203ChickenBridge.scm",(void*)f_34203},
{"f_34186ChickenBridge.scm",(void*)f_34186},
{"f_34125ChickenBridge.scm",(void*)f_34125},
{"f_34158ChickenBridge.scm",(void*)f_34158},
{"f_34138ChickenBridge.scm",(void*)f_34138},
{"f_34146ChickenBridge.scm",(void*)f_34146},
{"f_34129ChickenBridge.scm",(void*)f_34129},
{"f_34035ChickenBridge.scm",(void*)f_34035},
{"f_34089ChickenBridge.scm",(void*)f_34089},
{"f_34084ChickenBridge.scm",(void*)f_34084},
{"f_34047ChickenBridge.scm",(void*)f_34047},
{"f_34053ChickenBridge.scm",(void*)f_34053},
{"f_34079ChickenBridge.scm",(void*)f_34079},
{"f_34083ChickenBridge.scm",(void*)f_34083},
{"f_34059ChickenBridge.scm",(void*)f_34059},
{"f_34077ChickenBridge.scm",(void*)f_34077},
{"f_34074ChickenBridge.scm",(void*)f_34074},
{"f_34070ChickenBridge.scm",(void*)f_34070},
{"f_34063ChickenBridge.scm",(void*)f_34063},
{"f_34020ChickenBridge.scm",(void*)f_34020},
{"f_34025ChickenBridge.scm",(void*)f_34025},
{"f_33992ChickenBridge.scm",(void*)f_33992},
{"f_33997ChickenBridge.scm",(void*)f_33997},
{"f_33964ChickenBridge.scm",(void*)f_33964},
{"f_33969ChickenBridge.scm",(void*)f_33969},
{"f_33936ChickenBridge.scm",(void*)f_33936},
{"f_33941ChickenBridge.scm",(void*)f_33941},
{"f_33908ChickenBridge.scm",(void*)f_33908},
{"f_33913ChickenBridge.scm",(void*)f_33913},
{"f_33880ChickenBridge.scm",(void*)f_33880},
{"f_33885ChickenBridge.scm",(void*)f_33885},
{"f_33852ChickenBridge.scm",(void*)f_33852},
{"f_33857ChickenBridge.scm",(void*)f_33857},
{"f_33824ChickenBridge.scm",(void*)f_33824},
{"f_33829ChickenBridge.scm",(void*)f_33829},
{"f_33796ChickenBridge.scm",(void*)f_33796},
{"f_33801ChickenBridge.scm",(void*)f_33801},
{"f_33768ChickenBridge.scm",(void*)f_33768},
{"f_33773ChickenBridge.scm",(void*)f_33773},
{"f_33745ChickenBridge.scm",(void*)f_33745},
{"f_33750ChickenBridge.scm",(void*)f_33750},
{"f_33749ChickenBridge.scm",(void*)f_33749},
{"f_33726ChickenBridge.scm",(void*)f_33726},
{"f_33731ChickenBridge.scm",(void*)f_33731},
{"f_33671ChickenBridge.scm",(void*)f_33671},
{"f_33678ChickenBridge.scm",(void*)f_33678},
{"f_33681ChickenBridge.scm",(void*)f_33681},
{"f_33705ChickenBridge.scm",(void*)f_33705},
{"f_33685ChickenBridge.scm",(void*)f_33685},
{"f_33675ChickenBridge.scm",(void*)f_33675},
{"f_33624ChickenBridge.scm",(void*)f_33624},
{"f_33631ChickenBridge.scm",(void*)f_33631},
{"f_33634ChickenBridge.scm",(void*)f_33634},
{"f_33654ChickenBridge.scm",(void*)f_33654},
{"f_33638ChickenBridge.scm",(void*)f_33638},
{"f_33601ChickenBridge.scm",(void*)f_33601},
{"f_33606ChickenBridge.scm",(void*)f_33606},
{"f_33605ChickenBridge.scm",(void*)f_33605},
{"f_33582ChickenBridge.scm",(void*)f_33582},
{"f_33587ChickenBridge.scm",(void*)f_33587},
{"f_33559ChickenBridge.scm",(void*)f_33559},
{"f_33564ChickenBridge.scm",(void*)f_33564},
{"f_33563ChickenBridge.scm",(void*)f_33563},
{"f_33540ChickenBridge.scm",(void*)f_33540},
{"f_33545ChickenBridge.scm",(void*)f_33545},
{"f_33521ChickenBridge.scm",(void*)f_33521},
{"f_33526ChickenBridge.scm",(void*)f_33526},
{"f_33525ChickenBridge.scm",(void*)f_33525},
{"f_33506ChickenBridge.scm",(void*)f_33506},
{"f_33511ChickenBridge.scm",(void*)f_33511},
{"f_33487ChickenBridge.scm",(void*)f_33487},
{"f_33492ChickenBridge.scm",(void*)f_33492},
{"f_33491ChickenBridge.scm",(void*)f_33491},
{"f_33472ChickenBridge.scm",(void*)f_33472},
{"f_33477ChickenBridge.scm",(void*)f_33477},
{"f_33457ChickenBridge.scm",(void*)f_33457},
{"f_33462ChickenBridge.scm",(void*)f_33462},
{"f_33439ChickenBridge.scm",(void*)f_33439},
{"f_33447ChickenBridge.scm",(void*)f_33447},
{"f_33443ChickenBridge.scm",(void*)f_33443},
{"f_32969ChickenBridge.scm",(void*)f_32969},
{"f_33397ChickenBridge.scm",(void*)f_33397},
{"f_33412ChickenBridge.scm",(void*)f_33412},
{"f_33404ChickenBridge.scm",(void*)f_33404},
{"f_33368ChickenBridge.scm",(void*)f_33368},
{"f_33372ChickenBridge.scm",(void*)f_33372},
{"f_33333ChickenBridge.scm",(void*)f_33333},
{"f_33337ChickenBridge.scm",(void*)f_33337},
{"f_33298ChickenBridge.scm",(void*)f_33298},
{"f_33302ChickenBridge.scm",(void*)f_33302},
{"f_32973ChickenBridge.scm",(void*)f_32973},
{"f_33262ChickenBridge.scm",(void*)f_33262},
{"f_33277ChickenBridge.scm",(void*)f_33277},
{"f_33269ChickenBridge.scm",(void*)f_33269},
{"f_33233ChickenBridge.scm",(void*)f_33233},
{"f_33237ChickenBridge.scm",(void*)f_33237},
{"f_33198ChickenBridge.scm",(void*)f_33198},
{"f_33202ChickenBridge.scm",(void*)f_33202},
{"f_33163ChickenBridge.scm",(void*)f_33163},
{"f_33167ChickenBridge.scm",(void*)f_33167},
{"f_32976ChickenBridge.scm",(void*)f_32976},
{"f_33127ChickenBridge.scm",(void*)f_33127},
{"f_33142ChickenBridge.scm",(void*)f_33142},
{"f_33134ChickenBridge.scm",(void*)f_33134},
{"f_33098ChickenBridge.scm",(void*)f_33098},
{"f_33102ChickenBridge.scm",(void*)f_33102},
{"f_33063ChickenBridge.scm",(void*)f_33063},
{"f_33067ChickenBridge.scm",(void*)f_33067},
{"f_33028ChickenBridge.scm",(void*)f_33028},
{"f_33032ChickenBridge.scm",(void*)f_33032},
{"f_32979ChickenBridge.scm",(void*)f_32979},
{"f_32982ChickenBridge.scm",(void*)f_32982},
{"f_32986ChickenBridge.scm",(void*)f_32986},
{"f_32950ChickenBridge.scm",(void*)f_32950},
{"f_32955ChickenBridge.scm",(void*)f_32955},
{"f_32499ChickenBridge.scm",(void*)f_32499},
{"f_32927ChickenBridge.scm",(void*)f_32927},
{"f_32942ChickenBridge.scm",(void*)f_32942},
{"f_32934ChickenBridge.scm",(void*)f_32934},
{"f_32898ChickenBridge.scm",(void*)f_32898},
{"f_32902ChickenBridge.scm",(void*)f_32902},
{"f_32863ChickenBridge.scm",(void*)f_32863},
{"f_32867ChickenBridge.scm",(void*)f_32867},
{"f_32828ChickenBridge.scm",(void*)f_32828},
{"f_32832ChickenBridge.scm",(void*)f_32832},
{"f_32503ChickenBridge.scm",(void*)f_32503},
{"f_32792ChickenBridge.scm",(void*)f_32792},
{"f_32807ChickenBridge.scm",(void*)f_32807},
{"f_32799ChickenBridge.scm",(void*)f_32799},
{"f_32763ChickenBridge.scm",(void*)f_32763},
{"f_32767ChickenBridge.scm",(void*)f_32767},
{"f_32728ChickenBridge.scm",(void*)f_32728},
{"f_32732ChickenBridge.scm",(void*)f_32732},
{"f_32693ChickenBridge.scm",(void*)f_32693},
{"f_32697ChickenBridge.scm",(void*)f_32697},
{"f_32506ChickenBridge.scm",(void*)f_32506},
{"f_32657ChickenBridge.scm",(void*)f_32657},
{"f_32672ChickenBridge.scm",(void*)f_32672},
{"f_32664ChickenBridge.scm",(void*)f_32664},
{"f_32628ChickenBridge.scm",(void*)f_32628},
{"f_32632ChickenBridge.scm",(void*)f_32632},
{"f_32593ChickenBridge.scm",(void*)f_32593},
{"f_32597ChickenBridge.scm",(void*)f_32597},
{"f_32558ChickenBridge.scm",(void*)f_32558},
{"f_32562ChickenBridge.scm",(void*)f_32562},
{"f_32509ChickenBridge.scm",(void*)f_32509},
{"f_32512ChickenBridge.scm",(void*)f_32512},
{"f_32516ChickenBridge.scm",(void*)f_32516},
{"f_32480ChickenBridge.scm",(void*)f_32480},
{"f_32485ChickenBridge.scm",(void*)f_32485},
{"f_32029ChickenBridge.scm",(void*)f_32029},
{"f_32457ChickenBridge.scm",(void*)f_32457},
{"f_32472ChickenBridge.scm",(void*)f_32472},
{"f_32464ChickenBridge.scm",(void*)f_32464},
{"f_32428ChickenBridge.scm",(void*)f_32428},
{"f_32432ChickenBridge.scm",(void*)f_32432},
{"f_32393ChickenBridge.scm",(void*)f_32393},
{"f_32397ChickenBridge.scm",(void*)f_32397},
{"f_32358ChickenBridge.scm",(void*)f_32358},
{"f_32362ChickenBridge.scm",(void*)f_32362},
{"f_32033ChickenBridge.scm",(void*)f_32033},
{"f_32322ChickenBridge.scm",(void*)f_32322},
{"f_32337ChickenBridge.scm",(void*)f_32337},
{"f_32329ChickenBridge.scm",(void*)f_32329},
{"f_32293ChickenBridge.scm",(void*)f_32293},
{"f_32297ChickenBridge.scm",(void*)f_32297},
{"f_32258ChickenBridge.scm",(void*)f_32258},
{"f_32262ChickenBridge.scm",(void*)f_32262},
{"f_32223ChickenBridge.scm",(void*)f_32223},
{"f_32227ChickenBridge.scm",(void*)f_32227},
{"f_32036ChickenBridge.scm",(void*)f_32036},
{"f_32187ChickenBridge.scm",(void*)f_32187},
{"f_32202ChickenBridge.scm",(void*)f_32202},
{"f_32194ChickenBridge.scm",(void*)f_32194},
{"f_32158ChickenBridge.scm",(void*)f_32158},
{"f_32162ChickenBridge.scm",(void*)f_32162},
{"f_32123ChickenBridge.scm",(void*)f_32123},
{"f_32127ChickenBridge.scm",(void*)f_32127},
{"f_32088ChickenBridge.scm",(void*)f_32088},
{"f_32092ChickenBridge.scm",(void*)f_32092},
{"f_32039ChickenBridge.scm",(void*)f_32039},
{"f_32042ChickenBridge.scm",(void*)f_32042},
{"f_32046ChickenBridge.scm",(void*)f_32046},
{"f_32010ChickenBridge.scm",(void*)f_32010},
{"f_32015ChickenBridge.scm",(void*)f_32015},
{"f_31281ChickenBridge.scm",(void*)f_31281},
{"f_31987ChickenBridge.scm",(void*)f_31987},
{"f_32002ChickenBridge.scm",(void*)f_32002},
{"f_31994ChickenBridge.scm",(void*)f_31994},
{"f_31958ChickenBridge.scm",(void*)f_31958},
{"f_31962ChickenBridge.scm",(void*)f_31962},
{"f_31923ChickenBridge.scm",(void*)f_31923},
{"f_31927ChickenBridge.scm",(void*)f_31927},
{"f_31888ChickenBridge.scm",(void*)f_31888},
{"f_31892ChickenBridge.scm",(void*)f_31892},
{"f_31853ChickenBridge.scm",(void*)f_31853},
{"f_31857ChickenBridge.scm",(void*)f_31857},
{"f_31285ChickenBridge.scm",(void*)f_31285},
{"f_31817ChickenBridge.scm",(void*)f_31817},
{"f_31832ChickenBridge.scm",(void*)f_31832},
{"f_31824ChickenBridge.scm",(void*)f_31824},
{"f_31788ChickenBridge.scm",(void*)f_31788},
{"f_31792ChickenBridge.scm",(void*)f_31792},
{"f_31753ChickenBridge.scm",(void*)f_31753},
{"f_31757ChickenBridge.scm",(void*)f_31757},
{"f_31718ChickenBridge.scm",(void*)f_31718},
{"f_31722ChickenBridge.scm",(void*)f_31722},
{"f_31683ChickenBridge.scm",(void*)f_31683},
{"f_31687ChickenBridge.scm",(void*)f_31687},
{"f_31288ChickenBridge.scm",(void*)f_31288},
{"f_31647ChickenBridge.scm",(void*)f_31647},
{"f_31662ChickenBridge.scm",(void*)f_31662},
{"f_31654ChickenBridge.scm",(void*)f_31654},
{"f_31618ChickenBridge.scm",(void*)f_31618},
{"f_31622ChickenBridge.scm",(void*)f_31622},
{"f_31583ChickenBridge.scm",(void*)f_31583},
{"f_31587ChickenBridge.scm",(void*)f_31587},
{"f_31548ChickenBridge.scm",(void*)f_31548},
{"f_31552ChickenBridge.scm",(void*)f_31552},
{"f_31513ChickenBridge.scm",(void*)f_31513},
{"f_31517ChickenBridge.scm",(void*)f_31517},
{"f_31291ChickenBridge.scm",(void*)f_31291},
{"f_31477ChickenBridge.scm",(void*)f_31477},
{"f_31492ChickenBridge.scm",(void*)f_31492},
{"f_31484ChickenBridge.scm",(void*)f_31484},
{"f_31448ChickenBridge.scm",(void*)f_31448},
{"f_31452ChickenBridge.scm",(void*)f_31452},
{"f_31413ChickenBridge.scm",(void*)f_31413},
{"f_31417ChickenBridge.scm",(void*)f_31417},
{"f_31378ChickenBridge.scm",(void*)f_31378},
{"f_31382ChickenBridge.scm",(void*)f_31382},
{"f_31343ChickenBridge.scm",(void*)f_31343},
{"f_31347ChickenBridge.scm",(void*)f_31347},
{"f_31294ChickenBridge.scm",(void*)f_31294},
{"f_31297ChickenBridge.scm",(void*)f_31297},
{"f_31301ChickenBridge.scm",(void*)f_31301},
{"f_31262ChickenBridge.scm",(void*)f_31262},
{"f_31267ChickenBridge.scm",(void*)f_31267},
{"f_30533ChickenBridge.scm",(void*)f_30533},
{"f_31239ChickenBridge.scm",(void*)f_31239},
{"f_31254ChickenBridge.scm",(void*)f_31254},
{"f_31246ChickenBridge.scm",(void*)f_31246},
{"f_31210ChickenBridge.scm",(void*)f_31210},
{"f_31214ChickenBridge.scm",(void*)f_31214},
{"f_31175ChickenBridge.scm",(void*)f_31175},
{"f_31179ChickenBridge.scm",(void*)f_31179},
{"f_31140ChickenBridge.scm",(void*)f_31140},
{"f_31144ChickenBridge.scm",(void*)f_31144},
{"f_31105ChickenBridge.scm",(void*)f_31105},
{"f_31109ChickenBridge.scm",(void*)f_31109},
{"f_30537ChickenBridge.scm",(void*)f_30537},
{"f_31069ChickenBridge.scm",(void*)f_31069},
{"f_31084ChickenBridge.scm",(void*)f_31084},
{"f_31076ChickenBridge.scm",(void*)f_31076},
{"f_31040ChickenBridge.scm",(void*)f_31040},
{"f_31044ChickenBridge.scm",(void*)f_31044},
{"f_31005ChickenBridge.scm",(void*)f_31005},
{"f_31009ChickenBridge.scm",(void*)f_31009},
{"f_30970ChickenBridge.scm",(void*)f_30970},
{"f_30974ChickenBridge.scm",(void*)f_30974},
{"f_30935ChickenBridge.scm",(void*)f_30935},
{"f_30939ChickenBridge.scm",(void*)f_30939},
{"f_30540ChickenBridge.scm",(void*)f_30540},
{"f_30899ChickenBridge.scm",(void*)f_30899},
{"f_30914ChickenBridge.scm",(void*)f_30914},
{"f_30906ChickenBridge.scm",(void*)f_30906},
{"f_30870ChickenBridge.scm",(void*)f_30870},
{"f_30874ChickenBridge.scm",(void*)f_30874},
{"f_30835ChickenBridge.scm",(void*)f_30835},
{"f_30839ChickenBridge.scm",(void*)f_30839},
{"f_30800ChickenBridge.scm",(void*)f_30800},
{"f_30804ChickenBridge.scm",(void*)f_30804},
{"f_30765ChickenBridge.scm",(void*)f_30765},
{"f_30769ChickenBridge.scm",(void*)f_30769},
{"f_30543ChickenBridge.scm",(void*)f_30543},
{"f_30729ChickenBridge.scm",(void*)f_30729},
{"f_30744ChickenBridge.scm",(void*)f_30744},
{"f_30736ChickenBridge.scm",(void*)f_30736},
{"f_30700ChickenBridge.scm",(void*)f_30700},
{"f_30704ChickenBridge.scm",(void*)f_30704},
{"f_30665ChickenBridge.scm",(void*)f_30665},
{"f_30669ChickenBridge.scm",(void*)f_30669},
{"f_30630ChickenBridge.scm",(void*)f_30630},
{"f_30634ChickenBridge.scm",(void*)f_30634},
{"f_30595ChickenBridge.scm",(void*)f_30595},
{"f_30599ChickenBridge.scm",(void*)f_30599},
{"f_30546ChickenBridge.scm",(void*)f_30546},
{"f_30549ChickenBridge.scm",(void*)f_30549},
{"f_30553ChickenBridge.scm",(void*)f_30553},
{"f_30514ChickenBridge.scm",(void*)f_30514},
{"f_30519ChickenBridge.scm",(void*)f_30519},
{"f_30063ChickenBridge.scm",(void*)f_30063},
{"f_30491ChickenBridge.scm",(void*)f_30491},
{"f_30506ChickenBridge.scm",(void*)f_30506},
{"f_30498ChickenBridge.scm",(void*)f_30498},
{"f_30462ChickenBridge.scm",(void*)f_30462},
{"f_30466ChickenBridge.scm",(void*)f_30466},
{"f_30427ChickenBridge.scm",(void*)f_30427},
{"f_30431ChickenBridge.scm",(void*)f_30431},
{"f_30392ChickenBridge.scm",(void*)f_30392},
{"f_30396ChickenBridge.scm",(void*)f_30396},
{"f_30067ChickenBridge.scm",(void*)f_30067},
{"f_30356ChickenBridge.scm",(void*)f_30356},
{"f_30371ChickenBridge.scm",(void*)f_30371},
{"f_30363ChickenBridge.scm",(void*)f_30363},
{"f_30327ChickenBridge.scm",(void*)f_30327},
{"f_30331ChickenBridge.scm",(void*)f_30331},
{"f_30292ChickenBridge.scm",(void*)f_30292},
{"f_30296ChickenBridge.scm",(void*)f_30296},
{"f_30257ChickenBridge.scm",(void*)f_30257},
{"f_30261ChickenBridge.scm",(void*)f_30261},
{"f_30070ChickenBridge.scm",(void*)f_30070},
{"f_30221ChickenBridge.scm",(void*)f_30221},
{"f_30236ChickenBridge.scm",(void*)f_30236},
{"f_30228ChickenBridge.scm",(void*)f_30228},
{"f_30192ChickenBridge.scm",(void*)f_30192},
{"f_30196ChickenBridge.scm",(void*)f_30196},
{"f_30157ChickenBridge.scm",(void*)f_30157},
{"f_30161ChickenBridge.scm",(void*)f_30161},
{"f_30122ChickenBridge.scm",(void*)f_30122},
{"f_30126ChickenBridge.scm",(void*)f_30126},
{"f_30073ChickenBridge.scm",(void*)f_30073},
{"f_30076ChickenBridge.scm",(void*)f_30076},
{"f_30080ChickenBridge.scm",(void*)f_30080},
{"f_30044ChickenBridge.scm",(void*)f_30044},
{"f_30049ChickenBridge.scm",(void*)f_30049},
{"f_29315ChickenBridge.scm",(void*)f_29315},
{"f_30021ChickenBridge.scm",(void*)f_30021},
{"f_30036ChickenBridge.scm",(void*)f_30036},
{"f_30028ChickenBridge.scm",(void*)f_30028},
{"f_29992ChickenBridge.scm",(void*)f_29992},
{"f_29996ChickenBridge.scm",(void*)f_29996},
{"f_29957ChickenBridge.scm",(void*)f_29957},
{"f_29961ChickenBridge.scm",(void*)f_29961},
{"f_29922ChickenBridge.scm",(void*)f_29922},
{"f_29926ChickenBridge.scm",(void*)f_29926},
{"f_29887ChickenBridge.scm",(void*)f_29887},
{"f_29891ChickenBridge.scm",(void*)f_29891},
{"f_29319ChickenBridge.scm",(void*)f_29319},
{"f_29851ChickenBridge.scm",(void*)f_29851},
{"f_29866ChickenBridge.scm",(void*)f_29866},
{"f_29858ChickenBridge.scm",(void*)f_29858},
{"f_29822ChickenBridge.scm",(void*)f_29822},
{"f_29826ChickenBridge.scm",(void*)f_29826},
{"f_29787ChickenBridge.scm",(void*)f_29787},
{"f_29791ChickenBridge.scm",(void*)f_29791},
{"f_29752ChickenBridge.scm",(void*)f_29752},
{"f_29756ChickenBridge.scm",(void*)f_29756},
{"f_29717ChickenBridge.scm",(void*)f_29717},
{"f_29721ChickenBridge.scm",(void*)f_29721},
{"f_29322ChickenBridge.scm",(void*)f_29322},
{"f_29681ChickenBridge.scm",(void*)f_29681},
{"f_29696ChickenBridge.scm",(void*)f_29696},
{"f_29688ChickenBridge.scm",(void*)f_29688},
{"f_29652ChickenBridge.scm",(void*)f_29652},
{"f_29656ChickenBridge.scm",(void*)f_29656},
{"f_29617ChickenBridge.scm",(void*)f_29617},
{"f_29621ChickenBridge.scm",(void*)f_29621},
{"f_29582ChickenBridge.scm",(void*)f_29582},
{"f_29586ChickenBridge.scm",(void*)f_29586},
{"f_29547ChickenBridge.scm",(void*)f_29547},
{"f_29551ChickenBridge.scm",(void*)f_29551},
{"f_29325ChickenBridge.scm",(void*)f_29325},
{"f_29511ChickenBridge.scm",(void*)f_29511},
{"f_29526ChickenBridge.scm",(void*)f_29526},
{"f_29518ChickenBridge.scm",(void*)f_29518},
{"f_29482ChickenBridge.scm",(void*)f_29482},
{"f_29486ChickenBridge.scm",(void*)f_29486},
{"f_29447ChickenBridge.scm",(void*)f_29447},
{"f_29451ChickenBridge.scm",(void*)f_29451},
{"f_29412ChickenBridge.scm",(void*)f_29412},
{"f_29416ChickenBridge.scm",(void*)f_29416},
{"f_29377ChickenBridge.scm",(void*)f_29377},
{"f_29381ChickenBridge.scm",(void*)f_29381},
{"f_29328ChickenBridge.scm",(void*)f_29328},
{"f_29331ChickenBridge.scm",(void*)f_29331},
{"f_29335ChickenBridge.scm",(void*)f_29335},
{"f_28977ChickenBridge.scm",(void*)f_28977},
{"f_28817ChickenBridge.scm",(void*)f_28817},
{"f_28852ChickenBridge.scm",(void*)f_28852},
{"f_28862ChickenBridge.scm",(void*)f_28862},
{"f_28866ChickenBridge.scm",(void*)f_28866},
{"f_28869ChickenBridge.scm",(void*)f_28869},
{"f_28930ChickenBridge.scm",(void*)f_28930},
{"f_28921ChickenBridge.scm",(void*)f_28921},
{"f_28872ChickenBridge.scm",(void*)f_28872},
{"f_28891ChickenBridge.scm",(void*)f_28891},
{"f_28898ChickenBridge.scm",(void*)f_28898},
{"f_28875ChickenBridge.scm",(void*)f_28875},
{"f_28881ChickenBridge.scm",(void*)f_28881},
{"f_28850ChickenBridge.scm",(void*)f_28850},
{"f_28825ChickenBridge.scm",(void*)f_28825},
{"f_28824ChickenBridge.scm",(void*)f_28824},
{"f_28985ChickenBridge.scm",(void*)f_28985},
{"f_28563ChickenBridge.scm",(void*)f_28563},
{"f_28585ChickenBridge.scm",(void*)f_28585},
{"f_28600ChickenBridge.scm",(void*)f_28600},
{"f_28603ChickenBridge.scm",(void*)f_28603},
{"f_28779ChickenBridge.scm",(void*)f_28779},
{"f_28773ChickenBridge.scm",(void*)f_28773},
{"f_28606ChickenBridge.scm",(void*)f_28606},
{"f_28755ChickenBridge.scm",(void*)f_28755},
{"f_28609ChickenBridge.scm",(void*)f_28609},
{"f_28612ChickenBridge.scm",(void*)f_28612},
{"f_28748ChickenBridge.scm",(void*)f_28748},
{"f_28736ChickenBridge.scm",(void*)f_28736},
{"f_28632ChickenBridge.scm",(void*)f_28632},
{"f_28639ChickenBridge.scm",(void*)f_28639},
{"f_28709ChickenBridge.scm",(void*)f_28709},
{"f_28695ChickenBridge.scm",(void*)f_28695},
{"f_28703ChickenBridge.scm",(void*)f_28703},
{"f_28642ChickenBridge.scm",(void*)f_28642},
{"f_28681ChickenBridge.scm",(void*)f_28681},
{"f_28645ChickenBridge.scm",(void*)f_28645},
{"f_28674ChickenBridge.scm",(void*)f_28674},
{"f_28651ChickenBridge.scm",(void*)f_28651},
{"f_28654ChickenBridge.scm",(void*)f_28654},
{"f_28658ChickenBridge.scm",(void*)f_28658},
{"f_28619ChickenBridge.scm",(void*)f_28619},
{"f_28622ChickenBridge.scm",(void*)f_28622},
{"f_28432ChickenBridge.scm",(void*)f_28432},
{"f_28441ChickenBridge.scm",(void*)f_28441},
{"f_28389ChickenBridge.scm",(void*)f_28389},
{"f_28395ChickenBridge.scm",(void*)f_28395},
{"f_28458ChickenBridge.scm",(void*)f_28458},
{"f_28544ChickenBridge.scm",(void*)f_28544},
{"f_28531ChickenBridge.scm",(void*)f_28531},
{"f_28539ChickenBridge.scm",(void*)f_28539},
{"f_28461ChickenBridge.scm",(void*)f_28461},
{"f_28465ChickenBridge.scm",(void*)f_28465},
{"f_28508ChickenBridge.scm",(void*)f_28508},
{"f_28470ChickenBridge.scm",(void*)f_28470},
{"f_28436ChickenBridge.scm",(void*)f_28436},
{"f_28331ChickenBridge.scm",(void*)f_28331},
{"f_28338ChickenBridge.scm",(void*)f_28338},
{"f_28369ChickenBridge.scm",(void*)f_28369},
{"f_28365ChickenBridge.scm",(void*)f_28365},
{"f_28357ChickenBridge.scm",(void*)f_28357},
{"f_28240ChickenBridge.scm",(void*)f_28240},
{"f_28247ChickenBridge.scm",(void*)f_28247},
{"f_28315ChickenBridge.scm",(void*)f_28315},
{"f_28258ChickenBridge.scm",(void*)f_28258},
{"f_28285ChickenBridge.scm",(void*)f_28285},
{"f_28269ChickenBridge.scm",(void*)f_28269},
{"f_28174ChickenBridge.scm",(void*)f_28174},
{"f_28185ChickenBridge.scm",(void*)f_28185},
{"f_28188ChickenBridge.scm",(void*)f_28188},
{"f_28195ChickenBridge.scm",(void*)f_28195},
{"f_28168ChickenBridge.scm",(void*)f_28168},
{"f_27622ChickenBridge.scm",(void*)f_27622},
{"f_27653ChickenBridge.scm",(void*)f_27653},
{"f_28117ChickenBridge.scm",(void*)f_28117},
{"f_28123ChickenBridge.scm",(void*)f_28123},
{"f_27664ChickenBridge.scm",(void*)f_27664},
{"f_27549ChickenBridge.scm",(void*)f_27549},
{"f_27574ChickenBridge.scm",(void*)f_27574},
{"f_27509ChickenBridge.scm",(void*)f_27509},
{"f_27522ChickenBridge.scm",(void*)f_27522},
{"f_27563ChickenBridge.scm",(void*)f_27563},
{"f_27668ChickenBridge.scm",(void*)f_27668},
{"f_28105ChickenBridge.scm",(void*)f_28105},
{"f_28101ChickenBridge.scm",(void*)f_28101},
{"f_28097ChickenBridge.scm",(void*)f_28097},
{"f_27671ChickenBridge.scm",(void*)f_27671},
{"f_27891ChickenBridge.scm",(void*)f_27891},
{"f_28000ChickenBridge.scm",(void*)f_28000},
{"f_28065ChickenBridge.scm",(void*)f_28065},
{"f_28007ChickenBridge.scm",(void*)f_28007},
{"f_28011ChickenBridge.scm",(void*)f_28011},
{"f_28015ChickenBridge.scm",(void*)f_28015},
{"f_28057ChickenBridge.scm",(void*)f_28057},
{"f_28053ChickenBridge.scm",(void*)f_28053},
{"f_28031ChickenBridge.scm",(void*)f_28031},
{"f_27894ChickenBridge.scm",(void*)f_27894},
{"f_27897ChickenBridge.scm",(void*)f_27897},
{"f_27796ChickenBridge.scm",(void*)f_27796},
{"f_27879ChickenBridge.scm",(void*)f_27879},
{"f_27846ChickenBridge.scm",(void*)f_27846},
{"f_27872ChickenBridge.scm",(void*)f_27872},
{"f_27854ChickenBridge.scm",(void*)f_27854},
{"f_27802ChickenBridge.scm",(void*)f_27802},
{"f_27842ChickenBridge.scm",(void*)f_27842},
{"f_27784ChickenBridge.scm",(void*)f_27784},
{"f_27755ChickenBridge.scm",(void*)f_27755},
{"f_27777ChickenBridge.scm",(void*)f_27777},
{"f_27763ChickenBridge.scm",(void*)f_27763},
{"f_27717ChickenBridge.scm",(void*)f_27717},
{"f_27674ChickenBridge.scm",(void*)f_27674},
{"f_27685ChickenBridge.scm",(void*)f_27685},
{"f_27689ChickenBridge.scm",(void*)f_27689},
{"f_27693ChickenBridge.scm",(void*)f_27693},
{"f_27697ChickenBridge.scm",(void*)f_27697},
{"f_27681ChickenBridge.scm",(void*)f_27681},
{"f_27641ChickenBridge.scm",(void*)f_27641},
{"f_27636ChickenBridge.scm",(void*)f_27636},
{"f_27631ChickenBridge.scm",(void*)f_27631},
{"f_27463ChickenBridge.scm",(void*)f_27463},
{"f_27474ChickenBridge.scm",(void*)f_27474},
{"f_27489ChickenBridge.scm",(void*)f_27489},
{"f_27425ChickenBridge.scm",(void*)f_27425},
{"f_27436ChickenBridge.scm",(void*)f_27436},
{"f_27451ChickenBridge.scm",(void*)f_27451},
{"f_27358ChickenBridge.scm",(void*)f_27358},
{"f_27378ChickenBridge.scm",(void*)f_27378},
{"f_27388ChickenBridge.scm",(void*)f_27388},
{"f_27401ChickenBridge.scm",(void*)f_27401},
{"f_27369ChickenBridge.scm",(void*)f_27369},
{"f_27376ChickenBridge.scm",(void*)f_27376},
{"f_27165ChickenBridge.scm",(void*)f_27165},
{"f_27225ChickenBridge.scm",(void*)f_27225},
{"f_27235ChickenBridge.scm",(void*)f_27235},
{"f_27349ChickenBridge.scm",(void*)f_27349},
{"f_27314ChickenBridge.scm",(void*)f_27314},
{"f_27306ChickenBridge.scm",(void*)f_27306},
{"f_27277ChickenBridge.scm",(void*)f_27277},
{"f_27255ChickenBridge.scm",(void*)f_27255},
{"f_27258ChickenBridge.scm",(void*)f_27258},
{"f_27246ChickenBridge.scm",(void*)f_27246},
{"f_27172ChickenBridge.scm",(void*)f_27172},
{"f_27223ChickenBridge.scm",(void*)f_27223},
{"f_27215ChickenBridge.scm",(void*)f_27215},
{"f_27175ChickenBridge.scm",(void*)f_27175},
{"f_27186ChickenBridge.scm",(void*)f_27186},
{"f_27190ChickenBridge.scm",(void*)f_27190},
{"f_27182ChickenBridge.scm",(void*)f_27182},
{"f_27023ChickenBridge.scm",(void*)f_27023},
{"f_27071ChickenBridge.scm",(void*)f_27071},
{"f_27081ChickenBridge.scm",(void*)f_27081},
{"f_27092ChickenBridge.scm",(void*)f_27092},
{"f_27129ChickenBridge.scm",(void*)f_27129},
{"f_27104ChickenBridge.scm",(void*)f_27104},
{"f_27095ChickenBridge.scm",(void*)f_27095},
{"f_27033ChickenBridge.scm",(void*)f_27033},
{"f_27069ChickenBridge.scm",(void*)f_27069},
{"f_27040ChickenBridge.scm",(void*)f_27040},
{"f_26672ChickenBridge.scm",(void*)f_26672},
{"f_26679ChickenBridge.scm",(void*)f_26679},
{"f_26913ChickenBridge.scm",(void*)f_26913},
{"f_26923ChickenBridge.scm",(void*)f_26923},
{"f_26934ChickenBridge.scm",(void*)f_26934},
{"f_26946ChickenBridge.scm",(void*)f_26946},
{"f_26949ChickenBridge.scm",(void*)f_26949},
{"f_26937ChickenBridge.scm",(void*)f_26937},
{"f_26685ChickenBridge.scm",(void*)f_26685},
{"f_26911ChickenBridge.scm",(void*)f_26911},
{"f_26907ChickenBridge.scm",(void*)f_26907},
{"f_26853ChickenBridge.scm",(void*)f_26853},
{"f_26818ChickenBridge.scm",(void*)f_26818},
{"f_26834ChickenBridge.scm",(void*)f_26834},
{"f_26789ChickenBridge.scm",(void*)f_26789},
{"f_26713ChickenBridge.scm",(void*)f_26713},
{"f_26716ChickenBridge.scm",(void*)f_26716},
{"f_26780ChickenBridge.scm",(void*)f_26780},
{"f_26776ChickenBridge.scm",(void*)f_26776},
{"f_26696ChickenBridge.scm",(void*)f_26696},
{"f_26707ChickenBridge.scm",(void*)f_26707},
{"f_26703ChickenBridge.scm",(void*)f_26703},
{"f_26625ChickenBridge.scm",(void*)f_26625},
{"f_26658ChickenBridge.scm",(void*)f_26658},
{"f_26640ChickenBridge.scm",(void*)f_26640},
{"f_26652ChickenBridge.scm",(void*)f_26652},
{"f_26243ChickenBridge.scm",(void*)f_26243},
{"f_26452ChickenBridge.scm",(void*)f_26452},
{"f_26462ChickenBridge.scm",(void*)f_26462},
{"f_26473ChickenBridge.scm",(void*)f_26473},
{"f_26593ChickenBridge.scm",(void*)f_26593},
{"f_26572ChickenBridge.scm",(void*)f_26572},
{"f_26551ChickenBridge.scm",(void*)f_26551},
{"f_26530ChickenBridge.scm",(void*)f_26530},
{"f_26509ChickenBridge.scm",(void*)f_26509},
{"f_26488ChickenBridge.scm",(void*)f_26488},
{"f_26476ChickenBridge.scm",(void*)f_26476},
{"f_26253ChickenBridge.scm",(void*)f_26253},
{"f_26256ChickenBridge.scm",(void*)f_26256},
{"f_26419ChickenBridge.scm",(void*)f_26419},
{"f_26259ChickenBridge.scm",(void*)f_26259},
{"f_26410ChickenBridge.scm",(void*)f_26410},
{"f_26390ChickenBridge.scm",(void*)f_26390},
{"f_26262ChickenBridge.scm",(void*)f_26262},
{"f_26355ChickenBridge.scm",(void*)f_26355},
{"f_26372ChickenBridge.scm",(void*)f_26372},
{"f_26265ChickenBridge.scm",(void*)f_26265},
{"f_26304ChickenBridge.scm",(void*)f_26304},
{"f_26338ChickenBridge.scm",(void*)f_26338},
{"f_26322ChickenBridge.scm",(void*)f_26322},
{"f_26307ChickenBridge.scm",(void*)f_26307},
{"f_26272ChickenBridge.scm",(void*)f_26272},
{"f_26283ChickenBridge.scm",(void*)f_26283},
{"f_26287ChickenBridge.scm",(void*)f_26287},
{"f_26279ChickenBridge.scm",(void*)f_26279},
{"f_26161ChickenBridge.scm",(void*)f_26161},
{"f_26165ChickenBridge.scm",(void*)f_26165},
{"f_26183ChickenBridge.scm",(void*)f_26183},
{"f_26001ChickenBridge.scm",(void*)f_26001},
{"f_26009ChickenBridge.scm",(void*)f_26009},
{"f_26019ChickenBridge.scm",(void*)f_26019},
{"f_26057ChickenBridge.scm",(void*)f_26057},
{"f_26060ChickenBridge.scm",(void*)f_26060},
{"f_26063ChickenBridge.scm",(void*)f_26063},
{"f_26138ChickenBridge.scm",(void*)f_26138},
{"f_26148ChickenBridge.scm",(void*)f_26148},
{"f_26066ChickenBridge.scm",(void*)f_26066},
{"f_26069ChickenBridge.scm",(void*)f_26069},
{"f_26072ChickenBridge.scm",(void*)f_26072},
{"f_26092ChickenBridge.scm",(void*)f_26092},
{"f_26102ChickenBridge.scm",(void*)f_26102},
{"f_26105ChickenBridge.scm",(void*)f_26105},
{"f_26108ChickenBridge.scm",(void*)f_26108},
{"f_26075ChickenBridge.scm",(void*)f_26075},
{"f_26078ChickenBridge.scm",(void*)f_26078},
{"f_25995ChickenBridge.scm",(void*)f_25995},
{"f_25989ChickenBridge.scm",(void*)f_25989},
{"f_25983ChickenBridge.scm",(void*)f_25983},
{"f_25912ChickenBridge.scm",(void*)f_25912},
{"f_25953ChickenBridge.scm",(void*)f_25953},
{"f_25957ChickenBridge.scm",(void*)f_25957},
{"f_25961ChickenBridge.scm",(void*)f_25961},
{"f_25965ChickenBridge.scm",(void*)f_25965},
{"f_25969ChickenBridge.scm",(void*)f_25969},
{"f_25973ChickenBridge.scm",(void*)f_25973},
{"f_25977ChickenBridge.scm",(void*)f_25977},
{"f_25981ChickenBridge.scm",(void*)f_25981},
{"f_25914ChickenBridge.scm",(void*)f_25914},
{"f_25920ChickenBridge.scm",(void*)f_25920},
{"f_25942ChickenBridge.scm",(void*)f_25942},
{"f_25931ChickenBridge.scm",(void*)f_25931},
{"f_25761ChickenBridge.scm",(void*)f_25761},
{"f_25776ChickenBridge.scm",(void*)f_25776},
{"f_25789ChickenBridge.scm",(void*)f_25789},
{"f_25749ChickenBridge.scm",(void*)f_25749},
{"f_25737ChickenBridge.scm",(void*)f_25737},
{"f_25725ChickenBridge.scm",(void*)f_25725},
{"f_25719ChickenBridge.scm",(void*)f_25719},
{"f_25713ChickenBridge.scm",(void*)f_25713},
{"f_25701ChickenBridge.scm",(void*)f_25701},
{"f_25689ChickenBridge.scm",(void*)f_25689},
{"f_25677ChickenBridge.scm",(void*)f_25677},
{"f_25665ChickenBridge.scm",(void*)f_25665},
{"f_25659ChickenBridge.scm",(void*)f_25659},
{"f_25623ChickenBridge.scm",(void*)f_25623},
{"f_25617ChickenBridge.scm",(void*)f_25617},
{"f_25570ChickenBridge.scm",(void*)f_25570},
{"f_25574ChickenBridge.scm",(void*)f_25574},
{"f_25590ChickenBridge.scm",(void*)f_25590},
{"f_25599ChickenBridge.scm",(void*)f_25599},
{"f_25577ChickenBridge.scm",(void*)f_25577},
{"f_25561ChickenBridge.scm",(void*)f_25561},
{"f_25565ChickenBridge.scm",(void*)f_25565},
{"f_25408ChickenBridge.scm",(void*)f_25408},
{"f_25535ChickenBridge.scm",(void*)f_25535},
{"f_25548ChickenBridge.scm",(void*)f_25548},
{"f_25530ChickenBridge.scm",(void*)f_25530},
{"f_25411ChickenBridge.scm",(void*)f_25411},
{"f_25527ChickenBridge.scm",(void*)f_25527},
{"f_25511ChickenBridge.scm",(void*)f_25511},
{"f_25439ChickenBridge.scm",(void*)f_25439},
{"f_25447ChickenBridge.scm",(void*)f_25447},
{"f_25457ChickenBridge.scm",(void*)f_25457},
{"f_25460ChickenBridge.scm",(void*)f_25460},
{"f_25442ChickenBridge.scm",(void*)f_25442},
{"f_25231ChickenBridge.scm",(void*)f_25231},
{"f_25235ChickenBridge.scm",(void*)f_25235},
{"f_25240ChickenBridge.scm",(void*)f_25240},
{"f_25243ChickenBridge.scm",(void*)f_25243},
{"f_23055ChickenBridge.scm",(void*)f_23055},
{"f_23068ChickenBridge.scm",(void*)f_23068},
{"f_23075ChickenBridge.scm",(void*)f_23075},
{"f_23082ChickenBridge.scm",(void*)f_23082},
{"f_23061ChickenBridge.scm",(void*)f_23061},
{"f_25247ChickenBridge.scm",(void*)f_25247},
{"f_25284ChickenBridge.scm",(void*)f_25284},
{"f_25377ChickenBridge.scm",(void*)f_25377},
{"f_25387ChickenBridge.scm",(void*)f_25387},
{"f_25290ChickenBridge.scm",(void*)f_25290},
{"f_25347ChickenBridge.scm",(void*)f_25347},
{"f_25357ChickenBridge.scm",(void*)f_25357},
{"f_25298ChickenBridge.scm",(void*)f_25298},
{"f_25312ChickenBridge.scm",(void*)f_25312},
{"f_25316ChickenBridge.scm",(void*)f_25316},
{"f_25320ChickenBridge.scm",(void*)f_25320},
{"f_25324ChickenBridge.scm",(void*)f_25324},
{"f_25331ChickenBridge.scm",(void*)f_25331},
{"f_25308ChickenBridge.scm",(void*)f_25308},
{"f_25301ChickenBridge.scm",(void*)f_25301},
{"f_25250ChickenBridge.scm",(void*)f_25250},
{"f_24182ChickenBridge.scm",(void*)f_24182},
{"f_24195ChickenBridge.scm",(void*)f_24195},
{"f_24245ChickenBridge.scm",(void*)f_24245},
{"f_24342ChickenBridge.scm",(void*)f_24342},
{"f_24410ChickenBridge.scm",(void*)f_24410},
{"f_24667ChickenBridge.scm",(void*)f_24667},
{"f_24417ChickenBridge.scm",(void*)f_24417},
{"f_24655ChickenBridge.scm",(void*)f_24655},
{"f_24606ChickenBridge.scm",(void*)f_24606},
{"f_24612ChickenBridge.scm",(void*)f_24612},
{"f_24636ChickenBridge.scm",(void*)f_24636},
{"f_24632ChickenBridge.scm",(void*)f_24632},
{"f_24620ChickenBridge.scm",(void*)f_24620},
{"f_24420ChickenBridge.scm",(void*)f_24420},
{"f_24582ChickenBridge.scm",(void*)f_24582},
{"f_24586ChickenBridge.scm",(void*)f_24586},
{"f_24423ChickenBridge.scm",(void*)f_24423},
{"f_24559ChickenBridge.scm",(void*)f_24559},
{"f_24563ChickenBridge.scm",(void*)f_24563},
{"f_24426ChickenBridge.scm",(void*)f_24426},
{"f_24536ChickenBridge.scm",(void*)f_24536},
{"f_24540ChickenBridge.scm",(void*)f_24540},
{"f_24429ChickenBridge.scm",(void*)f_24429},
{"f_24461ChickenBridge.scm",(void*)f_24461},
{"f_24479ChickenBridge.scm",(void*)f_24479},
{"f_24497ChickenBridge.scm",(void*)f_24497},
{"f_24515ChickenBridge.scm",(void*)f_24515},
{"f_24432ChickenBridge.scm",(void*)f_24432},
{"f_24436ChickenBridge.scm",(void*)f_24436},
{"f_24346ChickenBridge.scm",(void*)f_24346},
{"f_24350ChickenBridge.scm",(void*)f_24350},
{"f_24354ChickenBridge.scm",(void*)f_24354},
{"f_24249ChickenBridge.scm",(void*)f_24249},
{"f_24253ChickenBridge.scm",(void*)f_24253},
{"f_24257ChickenBridge.scm",(void*)f_24257},
{"f_24276ChickenBridge.scm",(void*)f_24276},
{"f_24280ChickenBridge.scm",(void*)f_24280},
{"f_24260ChickenBridge.scm",(void*)f_24260},
{"f_24264ChickenBridge.scm",(void*)f_24264},
{"f_24199ChickenBridge.scm",(void*)f_24199},
{"f_24203ChickenBridge.scm",(void*)f_24203},
{"f_24207ChickenBridge.scm",(void*)f_24207},
{"f_24189ChickenBridge.scm",(void*)f_24189},
{"f_24004ChickenBridge.scm",(void*)f_24004},
{"f_24016ChickenBridge.scm",(void*)f_24016},
{"f_24035ChickenBridge.scm",(void*)f_24035},
{"f_24053ChickenBridge.scm",(void*)f_24053},
{"f_24085ChickenBridge.scm",(void*)f_24085},
{"f_24088ChickenBridge.scm",(void*)f_24088},
{"f_24081ChickenBridge.scm",(void*)f_24081},
{"f_24067ChickenBridge.scm",(void*)f_24067},
{"f_24038ChickenBridge.scm",(void*)f_24038},
{"f_23983ChickenBridge.scm",(void*)f_23983},
{"f_23990ChickenBridge.scm",(void*)f_23990},
{"f_23993ChickenBridge.scm",(void*)f_23993},
{"f_23999ChickenBridge.scm",(void*)f_23999},
{"f_23918ChickenBridge.scm",(void*)f_23918},
{"f_23927ChickenBridge.scm",(void*)f_23927},
{"f_23950ChickenBridge.scm",(void*)f_23950},
{"f_23940ChickenBridge.scm",(void*)f_23940},
{"f_23874ChickenBridge.scm",(void*)f_23874},
{"f_23862ChickenBridge.scm",(void*)f_23862},
{"f_23760ChickenBridge.scm",(void*)f_23760},
{"f_23712ChickenBridge.scm",(void*)f_23712},
{"f_23093ChickenBridge.scm",(void*)f_23093},
{"f_23097ChickenBridge.scm",(void*)f_23097},
{"f_23100ChickenBridge.scm",(void*)f_23100},
{"f_23526ChickenBridge.scm",(void*)f_23526},
{"f_23522ChickenBridge.scm",(void*)f_23522},
{"f_23518ChickenBridge.scm",(void*)f_23518},
{"f_23103ChickenBridge.scm",(void*)f_23103},
{"f_23226ChickenBridge.scm",(void*)f_23226},
{"f_22459ChickenBridge.scm",(void*)f_22459},
{"f_23232ChickenBridge.scm",(void*)f_23232},
{"f_22475ChickenBridge.scm",(void*)f_22475},
{"f_23320ChickenBridge.scm",(void*)f_23320},
{"f_23390ChickenBridge.scm",(void*)f_23390},
{"f_22491ChickenBridge.scm",(void*)f_22491},
{"f_23393ChickenBridge.scm",(void*)f_23393},
{"f_22523ChickenBridge.scm",(void*)f_22523},
{"f_23471ChickenBridge.scm",(void*)f_23471},
{"f_23497ChickenBridge.scm",(void*)f_23497},
{"f_23491ChickenBridge.scm",(void*)f_23491},
{"f_23480ChickenBridge.scm",(void*)f_23480},
{"f_23422ChickenBridge.scm",(void*)f_23422},
{"f_23432ChickenBridge.scm",(void*)f_23432},
{"f_23458ChickenBridge.scm",(void*)f_23458},
{"f_23452ChickenBridge.scm",(void*)f_23452},
{"f_23435ChickenBridge.scm",(void*)f_23435},
{"f_23445ChickenBridge.scm",(void*)f_23445},
{"f_23438ChickenBridge.scm",(void*)f_23438},
{"f_23399ChickenBridge.scm",(void*)f_23399},
{"f_23408ChickenBridge.scm",(void*)f_23408},
{"f_23402ChickenBridge.scm",(void*)f_23402},
{"f_23326ChickenBridge.scm",(void*)f_23326},
{"f_23344ChickenBridge.scm",(void*)f_23344},
{"f_23377ChickenBridge.scm",(void*)f_23377},
{"f_23363ChickenBridge.scm",(void*)f_23363},
{"f_23371ChickenBridge.scm",(void*)f_23371},
{"f_23354ChickenBridge.scm",(void*)f_23354},
{"f_23329ChickenBridge.scm",(void*)f_23329},
{"f_23241ChickenBridge.scm",(void*)f_23241},
{"f_23263ChickenBridge.scm",(void*)f_23263},
{"f_23310ChickenBridge.scm",(void*)f_23310},
{"f_23296ChickenBridge.scm",(void*)f_23296},
{"f_23304ChickenBridge.scm",(void*)f_23304},
{"f_23276ChickenBridge.scm",(void*)f_23276},
{"f_23279ChickenBridge.scm",(void*)f_23279},
{"f_23244ChickenBridge.scm",(void*)f_23244},
{"f_23261ChickenBridge.scm",(void*)f_23261},
{"f_23247ChickenBridge.scm",(void*)f_23247},
{"f_23112ChickenBridge.scm",(void*)f_23112},
{"f_23118ChickenBridge.scm",(void*)f_23118},
{"f_23176ChickenBridge.scm",(void*)f_23176},
{"f_23179ChickenBridge.scm",(void*)f_23179},
{"f_23200ChickenBridge.scm",(void*)f_23200},
{"f_23211ChickenBridge.scm",(void*)f_23211},
{"f_23190ChickenBridge.scm",(void*)f_23190},
{"f_23124ChickenBridge.scm",(void*)f_23124},
{"f_23134ChickenBridge.scm",(void*)f_23134},
{"f_23170ChickenBridge.scm",(void*)f_23170},
{"f_23140ChickenBridge.scm",(void*)f_23140},
{"f_23155ChickenBridge.scm",(void*)f_23155},
{"f_23159ChickenBridge.scm",(void*)f_23159},
{"f_23163ChickenBridge.scm",(void*)f_23163},
{"f_23147ChickenBridge.scm",(void*)f_23147},
{"f_22989ChickenBridge.scm",(void*)f_22989},
{"f_22991ChickenBridge.scm",(void*)f_22991},
{"f_23039ChickenBridge.scm",(void*)f_23039},
{"f_22995ChickenBridge.scm",(void*)f_22995},
{"f_22998ChickenBridge.scm",(void*)f_22998},
{"f_23003ChickenBridge.scm",(void*)f_23003},
{"f_23024ChickenBridge.scm",(void*)f_23024},
{"f_22981ChickenBridge.scm",(void*)f_22981},
{"f_22983ChickenBridge.scm",(void*)f_22983},
{"f_22773ChickenBridge.scm",(void*)f_22773},
{"f_22790ChickenBridge.scm",(void*)f_22790},
{"f_22794ChickenBridge.scm",(void*)f_22794},
{"f_22740ChickenBridge.scm",(void*)f_22740},
{"f_22747ChickenBridge.scm",(void*)f_22747},
{"f_22691ChickenBridge.scm",(void*)f_22691},
{"f_22698ChickenBridge.scm",(void*)f_22698},
{"f_22756ChickenBridge.scm",(void*)f_22756},
{"f_22979ChickenBridge.scm",(void*)f_22979},
{"f_22956ChickenBridge.scm",(void*)f_22956},
{"f_22972ChickenBridge.scm",(void*)f_22972},
{"f_22818ChickenBridge.scm",(void*)f_22818},
{"f_22821ChickenBridge.scm",(void*)f_22821},
{"f_22845ChickenBridge.scm",(void*)f_22845},
{"f_22902ChickenBridge.scm",(void*)f_22902},
{"f_22908ChickenBridge.scm",(void*)f_22908},
{"f_22917ChickenBridge.scm",(void*)f_22917},
{"f_22926ChickenBridge.scm",(void*)f_22926},
{"f_22935ChickenBridge.scm",(void*)f_22935},
{"f_22944ChickenBridge.scm",(void*)f_22944},
{"f_22896ChickenBridge.scm",(void*)f_22896},
{"f_22851ChickenBridge.scm",(void*)f_22851},
{"f_22857ChickenBridge.scm",(void*)f_22857},
{"f_22863ChickenBridge.scm",(void*)f_22863},
{"f_22869ChickenBridge.scm",(void*)f_22869},
{"f_22875ChickenBridge.scm",(void*)f_22875},
{"f_22881ChickenBridge.scm",(void*)f_22881},
{"f_22722ChickenBridge.scm",(void*)f_22722},
{"f_22729ChickenBridge.scm",(void*)f_22729},
{"f_22712ChickenBridge.scm",(void*)f_22712},
{"f_22700ChickenBridge.scm",(void*)f_22700},
{"f_22668ChickenBridge.scm",(void*)f_22668},
{"f_22675ChickenBridge.scm",(void*)f_22675},
{"f_22682ChickenBridge.scm",(void*)f_22682},
{"f_22652ChickenBridge.scm",(void*)f_22652},
{"f_22659ChickenBridge.scm",(void*)f_22659},
{"f_22666ChickenBridge.scm",(void*)f_22666},
{"f_22640ChickenBridge.scm",(void*)f_22640},
{"f_22622ChickenBridge.scm",(void*)f_22622},
{"f_22604ChickenBridge.scm",(void*)f_22604},
{"f_22589ChickenBridge.scm",(void*)f_22589},
{"f_22583ChickenBridge.scm",(void*)f_22583},
{"f_22571ChickenBridge.scm",(void*)f_22571},
{"f_22553ChickenBridge.scm",(void*)f_22553},
{"f_22532ChickenBridge.scm",(void*)f_22532},
{"f_22500ChickenBridge.scm",(void*)f_22500},
{"f_22507ChickenBridge.scm",(void*)f_22507},
{"f_22442ChickenBridge.scm",(void*)f_22442},
{"f_22450ChickenBridge.scm",(void*)f_22450},
{"f_22432ChickenBridge.scm",(void*)f_22432},
{"f_22440ChickenBridge.scm",(void*)f_22440},
{"f_22426ChickenBridge.scm",(void*)f_22426},
{"f_22414ChickenBridge.scm",(void*)f_22414},
{"f_22411ChickenBridge.scm",(void*)f_22411},
{"f_22390ChickenBridge.scm",(void*)f_22390},
{"f_22303ChickenBridge.scm",(void*)f_22303},
{"f_22282ChickenBridge.scm",(void*)f_22282},
{"f_22272ChickenBridge.scm",(void*)f_22272},
{"f_22260ChickenBridge.scm",(void*)f_22260},
{"f_22231ChickenBridge.scm",(void*)f_22231},
{"f_22219ChickenBridge.scm",(void*)f_22219},
{"f_22201ChickenBridge.scm",(void*)f_22201},
{"f_22183ChickenBridge.scm",(void*)f_22183},
{"f_22162ChickenBridge.scm",(void*)f_22162},
{"f_21140ChickenBridge.scm",(void*)f_21140},
{"f_22139ChickenBridge.scm",(void*)f_22139},
{"f_22154ChickenBridge.scm",(void*)f_22154},
{"f_22146ChickenBridge.scm",(void*)f_22146},
{"f_22110ChickenBridge.scm",(void*)f_22110},
{"f_22114ChickenBridge.scm",(void*)f_22114},
{"f_22075ChickenBridge.scm",(void*)f_22075},
{"f_22079ChickenBridge.scm",(void*)f_22079},
{"f_21150ChickenBridge.scm",(void*)f_21150},
{"f_22039ChickenBridge.scm",(void*)f_22039},
{"f_22054ChickenBridge.scm",(void*)f_22054},
{"f_22046ChickenBridge.scm",(void*)f_22046},
{"f_22010ChickenBridge.scm",(void*)f_22010},
{"f_22014ChickenBridge.scm",(void*)f_22014},
{"f_21975ChickenBridge.scm",(void*)f_21975},
{"f_21979ChickenBridge.scm",(void*)f_21979},
{"f_21153ChickenBridge.scm",(void*)f_21153},
{"f_21156ChickenBridge.scm",(void*)f_21156},
{"f_21161ChickenBridge.scm",(void*)f_21161},
{"f_21868ChickenBridge.scm",(void*)f_21868},
{"f_21891ChickenBridge.scm",(void*)f_21891},
{"f_21944ChickenBridge.scm",(void*)f_21944},
{"f_21926ChickenBridge.scm",(void*)f_21926},
{"f_21919ChickenBridge.scm",(void*)f_21919},
{"f_21901ChickenBridge.scm",(void*)f_21901},
{"f_21878ChickenBridge.scm",(void*)f_21878},
{"f_21355ChickenBridge.scm",(void*)f_21355},
{"f_21830ChickenBridge.scm",(void*)f_21830},
{"f_21852ChickenBridge.scm",(void*)f_21852},
{"f_21836ChickenBridge.scm",(void*)f_21836},
{"f_21844ChickenBridge.scm",(void*)f_21844},
{"f_21848ChickenBridge.scm",(void*)f_21848},
{"f_21834ChickenBridge.scm",(void*)f_21834},
{"f_21824ChickenBridge.scm",(void*)f_21824},
{"f_21358ChickenBridge.scm",(void*)f_21358},
{"f_21701ChickenBridge.scm",(void*)f_21701},
{"f_21725ChickenBridge.scm",(void*)f_21725},
{"f_21787ChickenBridge.scm",(void*)f_21787},
{"f_21728ChickenBridge.scm",(void*)f_21728},
{"f_21744ChickenBridge.scm",(void*)f_21744},
{"f_21769ChickenBridge.scm",(void*)f_21769},
{"f_21735ChickenBridge.scm",(void*)f_21735},
{"f_21712ChickenBridge.scm",(void*)f_21712},
{"f_21361ChickenBridge.scm",(void*)f_21361},
{"f_21687ChickenBridge.scm",(void*)f_21687},
{"f_21365ChickenBridge.scm",(void*)f_21365},
{"f_21409ChickenBridge.scm",(void*)f_21409},
{"f_21412ChickenBridge.scm",(void*)f_21412},
{"f_21668ChickenBridge.scm",(void*)f_21668},
{"f_21678ChickenBridge.scm",(void*)f_21678},
{"f_21415ChickenBridge.scm",(void*)f_21415},
{"f_21606ChickenBridge.scm",(void*)f_21606},
{"f_21616ChickenBridge.scm",(void*)f_21616},
{"f_21619ChickenBridge.scm",(void*)f_21619},
{"f_21639ChickenBridge.scm",(void*)f_21639},
{"f_21641ChickenBridge.scm",(void*)f_21641},
{"f_21651ChickenBridge.scm",(void*)f_21651},
{"f_21625ChickenBridge.scm",(void*)f_21625},
{"f_21628ChickenBridge.scm",(void*)f_21628},
{"f_21418ChickenBridge.scm",(void*)f_21418},
{"f_21426ChickenBridge.scm",(void*)f_21426},
{"f_21439ChickenBridge.scm",(void*)f_21439},
{"f_21313ChickenBridge.scm",(void*)f_21313},
{"f_21322ChickenBridge.scm",(void*)f_21322},
{"f_21344ChickenBridge.scm",(void*)f_21344},
{"f_21333ChickenBridge.scm",(void*)f_21333},
{"f_21442ChickenBridge.scm",(void*)f_21442},
{"f_21577ChickenBridge.scm",(void*)f_21577},
{"f_21579ChickenBridge.scm",(void*)f_21579},
{"f_21589ChickenBridge.scm",(void*)f_21589},
{"f_21448ChickenBridge.scm",(void*)f_21448},
{"f_21550ChickenBridge.scm",(void*)f_21550},
{"f_21552ChickenBridge.scm",(void*)f_21552},
{"f_21562ChickenBridge.scm",(void*)f_21562},
{"f_21451ChickenBridge.scm",(void*)f_21451},
{"f_21463ChickenBridge.scm",(void*)f_21463},
{"f_21489ChickenBridge.scm",(void*)f_21489},
{"f_21495ChickenBridge.scm",(void*)f_21495},
{"f_21501ChickenBridge.scm",(void*)f_21501},
{"f_21511ChickenBridge.scm",(void*)f_21511},
{"f_21513ChickenBridge.scm",(void*)f_21513},
{"f_21523ChickenBridge.scm",(void*)f_21523},
{"f_21504ChickenBridge.scm",(void*)f_21504},
{"f_21476ChickenBridge.scm",(void*)f_21476},
{"f_21454ChickenBridge.scm",(void*)f_21454},
{"f_21421ChickenBridge.scm",(void*)f_21421},
{"f_21368ChickenBridge.scm",(void*)f_21368},
{"f_21391ChickenBridge.scm",(void*)f_21391},
{"f_21380ChickenBridge.scm",(void*)f_21380},
{"f_21245ChickenBridge.scm",(void*)f_21245},
{"f_21293ChickenBridge.scm",(void*)f_21293},
{"f_21255ChickenBridge.scm",(void*)f_21255},
{"f_21283ChickenBridge.scm",(void*)f_21283},
{"f_21258ChickenBridge.scm",(void*)f_21258},
{"f_21163ChickenBridge.scm",(void*)f_21163},
{"f_21235ChickenBridge.scm",(void*)f_21235},
{"f_21167ChickenBridge.scm",(void*)f_21167},
{"f_21185ChickenBridge.scm",(void*)f_21185},
{"f_21217ChickenBridge.scm",(void*)f_21217},
{"f_21046ChickenBridge.scm",(void*)f_21046},
{"f_21050ChickenBridge.scm",(void*)f_21050},
{"f_21079ChickenBridge.scm",(void*)f_21079},
{"f_21084ChickenBridge.scm",(void*)f_21084},
{"f_21109ChickenBridge.scm",(void*)f_21109},
{"f_21094ChickenBridge.scm",(void*)f_21094},
{"f_20528ChickenBridge.scm",(void*)f_20528},
{"f_20799ChickenBridge.scm",(void*)f_20799},
{"f_20803ChickenBridge.scm",(void*)f_20803},
{"f_20808ChickenBridge.scm",(void*)f_20808},
{"f_21014ChickenBridge.scm",(void*)f_21014},
{"f_21029ChickenBridge.scm",(void*)f_21029},
{"f_21021ChickenBridge.scm",(void*)f_21021},
{"f_20985ChickenBridge.scm",(void*)f_20985},
{"f_20989ChickenBridge.scm",(void*)f_20989},
{"f_20950ChickenBridge.scm",(void*)f_20950},
{"f_20954ChickenBridge.scm",(void*)f_20954},
{"f_20812ChickenBridge.scm",(void*)f_20812},
{"f_20914ChickenBridge.scm",(void*)f_20914},
{"f_20929ChickenBridge.scm",(void*)f_20929},
{"f_20921ChickenBridge.scm",(void*)f_20921},
{"f_20885ChickenBridge.scm",(void*)f_20885},
{"f_20889ChickenBridge.scm",(void*)f_20889},
{"f_20850ChickenBridge.scm",(void*)f_20850},
{"f_20854ChickenBridge.scm",(void*)f_20854},
{"f_20815ChickenBridge.scm",(void*)f_20815},
{"f_20818ChickenBridge.scm",(void*)f_20818},
{"f_20821ChickenBridge.scm",(void*)f_20821},
{"f_20790ChickenBridge.scm",(void*)f_20790},
{"f_20532ChickenBridge.scm",(void*)f_20532},
{"f_20759ChickenBridge.scm",(void*)f_20759},
{"f_20774ChickenBridge.scm",(void*)f_20774},
{"f_20766ChickenBridge.scm",(void*)f_20766},
{"f_20730ChickenBridge.scm",(void*)f_20730},
{"f_20734ChickenBridge.scm",(void*)f_20734},
{"f_20695ChickenBridge.scm",(void*)f_20695},
{"f_20699ChickenBridge.scm",(void*)f_20699},
{"f_20535ChickenBridge.scm",(void*)f_20535},
{"f_20659ChickenBridge.scm",(void*)f_20659},
{"f_20674ChickenBridge.scm",(void*)f_20674},
{"f_20666ChickenBridge.scm",(void*)f_20666},
{"f_20630ChickenBridge.scm",(void*)f_20630},
{"f_20634ChickenBridge.scm",(void*)f_20634},
{"f_20595ChickenBridge.scm",(void*)f_20595},
{"f_20599ChickenBridge.scm",(void*)f_20599},
{"f_20538ChickenBridge.scm",(void*)f_20538},
{"f_20541ChickenBridge.scm",(void*)f_20541},
{"f_20544ChickenBridge.scm",(void*)f_20544},
{"f_20556ChickenBridge.scm",(void*)f_20556},
{"f_20574ChickenBridge.scm",(void*)f_20574},
{"f_20562ChickenBridge.scm",(void*)f_20562},
{"f_20550ChickenBridge.scm",(void*)f_20550},
{"f_20465ChickenBridge.scm",(void*)f_20465},
{"f_20125ChickenBridge.scm",(void*)f_20125},
{"f_20307ChickenBridge.scm",(void*)f_20307},
{"f_20311ChickenBridge.scm",(void*)f_20311},
{"f_20313ChickenBridge.scm",(void*)f_20313},
{"f_20238ChickenBridge.scm",(void*)f_20238},
{"f_20248ChickenBridge.scm",(void*)f_20248},
{"f_20255ChickenBridge.scm",(void*)f_20255},
{"f_20323ChickenBridge.scm",(void*)f_20323},
{"f_20326ChickenBridge.scm",(void*)f_20326},
{"f_20330ChickenBridge.scm",(void*)f_20330},
{"f_20350ChickenBridge.scm",(void*)f_20350},
{"f_20366ChickenBridge.scm",(void*)f_20366},
{"f_20333ChickenBridge.scm",(void*)f_20333},
{"f_20128ChickenBridge.scm",(void*)f_20128},
{"f_20140ChickenBridge.scm",(void*)f_20140},
{"f_20176ChickenBridge.scm",(void*)f_20176},
{"f_20196ChickenBridge.scm",(void*)f_20196},
{"f_20201ChickenBridge.scm",(void*)f_20201},
{"f_19638ChickenBridge.scm",(void*)f_19638},
{"f_19565ChickenBridge.scm",(void*)f_19565},
{"f_19410ChickenBridge.scm",(void*)f_19410},
{"f_19416ChickenBridge.scm",(void*)f_19416},
{"f_19501ChickenBridge.scm",(void*)f_19501},
{"f_19428ChickenBridge.scm",(void*)f_19428},
{"f_19444ChickenBridge.scm",(void*)f_19444},
{"f_19448ChickenBridge.scm",(void*)f_19448},
{"f_19451ChickenBridge.scm",(void*)f_19451},
{"f_19431ChickenBridge.scm",(void*)f_19431},
{"f_19442ChickenBridge.scm",(void*)f_19442},
{"f_19582ChickenBridge.scm",(void*)f_19582},
{"f_20119ChickenBridge.scm",(void*)f_20119},
{"f_19642ChickenBridge.scm",(void*)f_19642},
{"f_20088ChickenBridge.scm",(void*)f_20088},
{"f_20103ChickenBridge.scm",(void*)f_20103},
{"f_20095ChickenBridge.scm",(void*)f_20095},
{"f_20059ChickenBridge.scm",(void*)f_20059},
{"f_20063ChickenBridge.scm",(void*)f_20063},
{"f_20024ChickenBridge.scm",(void*)f_20024},
{"f_20028ChickenBridge.scm",(void*)f_20028},
{"f_19989ChickenBridge.scm",(void*)f_19989},
{"f_19993ChickenBridge.scm",(void*)f_19993},
{"f_19645ChickenBridge.scm",(void*)f_19645},
{"f_19953ChickenBridge.scm",(void*)f_19953},
{"f_19968ChickenBridge.scm",(void*)f_19968},
{"f_19960ChickenBridge.scm",(void*)f_19960},
{"f_19924ChickenBridge.scm",(void*)f_19924},
{"f_19928ChickenBridge.scm",(void*)f_19928},
{"f_19889ChickenBridge.scm",(void*)f_19889},
{"f_19893ChickenBridge.scm",(void*)f_19893},
{"f_19854ChickenBridge.scm",(void*)f_19854},
{"f_19858ChickenBridge.scm",(void*)f_19858},
{"f_19648ChickenBridge.scm",(void*)f_19648},
{"f_19818ChickenBridge.scm",(void*)f_19818},
{"f_19833ChickenBridge.scm",(void*)f_19833},
{"f_19825ChickenBridge.scm",(void*)f_19825},
{"f_19789ChickenBridge.scm",(void*)f_19789},
{"f_19793ChickenBridge.scm",(void*)f_19793},
{"f_19754ChickenBridge.scm",(void*)f_19754},
{"f_19758ChickenBridge.scm",(void*)f_19758},
{"f_19719ChickenBridge.scm",(void*)f_19719},
{"f_19723ChickenBridge.scm",(void*)f_19723},
{"f_19651ChickenBridge.scm",(void*)f_19651},
{"f_19654ChickenBridge.scm",(void*)f_19654},
{"f_19657ChickenBridge.scm",(void*)f_19657},
{"f_19690ChickenBridge.scm",(void*)f_19690},
{"f_19698ChickenBridge.scm",(void*)f_19698},
{"f_19663ChickenBridge.scm",(void*)f_19663},
{"f_19676ChickenBridge.scm",(void*)f_19676},
{"f_19666ChickenBridge.scm",(void*)f_19666},
{"f_19669ChickenBridge.scm",(void*)f_19669},
{"f_19205ChickenBridge.scm",(void*)f_19205},
{"f_19209ChickenBridge.scm",(void*)f_19209},
{"f_19212ChickenBridge.scm",(void*)f_19212},
{"f_19215ChickenBridge.scm",(void*)f_19215},
{"f_19384ChickenBridge.scm",(void*)f_19384},
{"f_19397ChickenBridge.scm",(void*)f_19397},
{"f_19401ChickenBridge.scm",(void*)f_19401},
{"f_19221ChickenBridge.scm",(void*)f_19221},
{"f_19377ChickenBridge.scm",(void*)f_19377},
{"f_19358ChickenBridge.scm",(void*)f_19358},
{"f_19365ChickenBridge.scm",(void*)f_19365},
{"f_19369ChickenBridge.scm",(void*)f_19369},
{"f_19227ChickenBridge.scm",(void*)f_19227},
{"f_19233ChickenBridge.scm",(void*)f_19233},
{"f_19317ChickenBridge.scm",(void*)f_19317},
{"f_19319ChickenBridge.scm",(void*)f_19319},
{"f_19341ChickenBridge.scm",(void*)f_19341},
{"f_19348ChickenBridge.scm",(void*)f_19348},
{"f_19352ChickenBridge.scm",(void*)f_19352},
{"f_19338ChickenBridge.scm",(void*)f_19338},
{"f_19334ChickenBridge.scm",(void*)f_19334},
{"f_19275ChickenBridge.scm",(void*)f_19275},
{"f_19292ChickenBridge.scm",(void*)f_19292},
{"f_19302ChickenBridge.scm",(void*)f_19302},
{"f_19278ChickenBridge.scm",(void*)f_19278},
{"f_19237ChickenBridge.scm",(void*)f_19237},
{"f_19245ChickenBridge.scm",(void*)f_19245},
{"f_19247ChickenBridge.scm",(void*)f_19247},
{"f_19268ChickenBridge.scm",(void*)f_19268},
{"f_19093ChickenBridge.scm",(void*)f_19093},
{"f_19203ChickenBridge.scm",(void*)f_19203},
{"f_19162ChickenBridge.scm",(void*)f_19162},
{"f_19195ChickenBridge.scm",(void*)f_19195},
{"f_19191ChickenBridge.scm",(void*)f_19191},
{"f_19176ChickenBridge.scm",(void*)f_19176},
{"f_19100ChickenBridge.scm",(void*)f_19100},
{"f_19108ChickenBridge.scm",(void*)f_19108},
{"f_19153ChickenBridge.scm",(void*)f_19153},
{"f_19141ChickenBridge.scm",(void*)f_19141},
{"f_19125ChickenBridge.scm",(void*)f_19125},
{"f_18326ChickenBridge.scm",(void*)f_18326},
{"f_18643ChickenBridge.scm",(void*)f_18643},
{"f_18650ChickenBridge.scm",(void*)f_18650},
{"f_19055ChickenBridge.scm",(void*)f_19055},
{"f_19070ChickenBridge.scm",(void*)f_19070},
{"f_19062ChickenBridge.scm",(void*)f_19062},
{"f_19026ChickenBridge.scm",(void*)f_19026},
{"f_19030ChickenBridge.scm",(void*)f_19030},
{"f_18991ChickenBridge.scm",(void*)f_18991},
{"f_18995ChickenBridge.scm",(void*)f_18995},
{"f_18956ChickenBridge.scm",(void*)f_18956},
{"f_18960ChickenBridge.scm",(void*)f_18960},
{"f_18653ChickenBridge.scm",(void*)f_18653},
{"f_18920ChickenBridge.scm",(void*)f_18920},
{"f_18935ChickenBridge.scm",(void*)f_18935},
{"f_18927ChickenBridge.scm",(void*)f_18927},
{"f_18891ChickenBridge.scm",(void*)f_18891},
{"f_18895ChickenBridge.scm",(void*)f_18895},
{"f_18856ChickenBridge.scm",(void*)f_18856},
{"f_18860ChickenBridge.scm",(void*)f_18860},
{"f_18821ChickenBridge.scm",(void*)f_18821},
{"f_18825ChickenBridge.scm",(void*)f_18825},
{"f_18656ChickenBridge.scm",(void*)f_18656},
{"f_18785ChickenBridge.scm",(void*)f_18785},
{"f_18800ChickenBridge.scm",(void*)f_18800},
{"f_18792ChickenBridge.scm",(void*)f_18792},
{"f_18756ChickenBridge.scm",(void*)f_18756},
{"f_18760ChickenBridge.scm",(void*)f_18760},
{"f_18721ChickenBridge.scm",(void*)f_18721},
{"f_18725ChickenBridge.scm",(void*)f_18725},
{"f_18686ChickenBridge.scm",(void*)f_18686},
{"f_18690ChickenBridge.scm",(void*)f_18690},
{"f_18659ChickenBridge.scm",(void*)f_18659},
{"f_18662ChickenBridge.scm",(void*)f_18662},
{"f_18330ChickenBridge.scm",(void*)f_18330},
{"f_18333ChickenBridge.scm",(void*)f_18333},
{"f_18607ChickenBridge.scm",(void*)f_18607},
{"f_18611ChickenBridge.scm",(void*)f_18611},
{"f_18614ChickenBridge.scm",(void*)f_18614},
{"f_18617ChickenBridge.scm",(void*)f_18617},
{"f_18620ChickenBridge.scm",(void*)f_18620},
{"f_18633ChickenBridge.scm",(void*)f_18633},
{"f_18623ChickenBridge.scm",(void*)f_18623},
{"f_18339ChickenBridge.scm",(void*)f_18339},
{"f_18346ChickenBridge.scm",(void*)f_18346},
{"f_18577ChickenBridge.scm",(void*)f_18577},
{"f_18592ChickenBridge.scm",(void*)f_18592},
{"f_18584ChickenBridge.scm",(void*)f_18584},
{"f_18548ChickenBridge.scm",(void*)f_18548},
{"f_18552ChickenBridge.scm",(void*)f_18552},
{"f_18513ChickenBridge.scm",(void*)f_18513},
{"f_18517ChickenBridge.scm",(void*)f_18517},
{"f_18349ChickenBridge.scm",(void*)f_18349},
{"f_18477ChickenBridge.scm",(void*)f_18477},
{"f_18492ChickenBridge.scm",(void*)f_18492},
{"f_18484ChickenBridge.scm",(void*)f_18484},
{"f_18448ChickenBridge.scm",(void*)f_18448},
{"f_18452ChickenBridge.scm",(void*)f_18452},
{"f_18413ChickenBridge.scm",(void*)f_18413},
{"f_18417ChickenBridge.scm",(void*)f_18417},
{"f_18352ChickenBridge.scm",(void*)f_18352},
{"f_18355ChickenBridge.scm",(void*)f_18355},
{"f_18370ChickenBridge.scm",(void*)f_18370},
{"f_18392ChickenBridge.scm",(void*)f_18392},
{"f_18376ChickenBridge.scm",(void*)f_18376},
{"f_18384ChickenBridge.scm",(void*)f_18384},
{"f_18358ChickenBridge.scm",(void*)f_18358},
{"f_18361ChickenBridge.scm",(void*)f_18361},
{"f_18243ChickenBridge.scm",(void*)f_18243},
{"f_18234ChickenBridge.scm",(void*)f_18234},
{"f_18225ChickenBridge.scm",(void*)f_18225},
{"f_18207ChickenBridge.scm",(void*)f_18207},
{"f_18189ChickenBridge.scm",(void*)f_18189},
{"f_18171ChickenBridge.scm",(void*)f_18171},
{"f_18162ChickenBridge.scm",(void*)f_18162},
{"f_18153ChickenBridge.scm",(void*)f_18153},
{"f_17931ChickenBridge.scm",(void*)f_17931},
{"f_17981ChickenBridge.scm",(void*)f_17981},
{"f_18126ChickenBridge.scm",(void*)f_18126},
{"f_18007ChickenBridge.scm",(void*)f_18007},
{"f_18122ChickenBridge.scm",(void*)f_18122},
{"f_18107ChickenBridge.scm",(void*)f_18107},
{"f_18088ChickenBridge.scm",(void*)f_18088},
{"f_18061ChickenBridge.scm",(void*)f_18061},
{"f_18014ChickenBridge.scm",(void*)f_18014},
{"f_17984ChickenBridge.scm",(void*)f_17984},
{"f_17934ChickenBridge.scm",(void*)f_17934},
{"f_17940ChickenBridge.scm",(void*)f_17940},
{"f_17956ChickenBridge.scm",(void*)f_17956},
{"f_17959ChickenBridge.scm",(void*)f_17959},
{"f_17457ChickenBridge.scm",(void*)f_17457},
{"f_17921ChickenBridge.scm",(void*)f_17921},
{"f_17461ChickenBridge.scm",(void*)f_17461},
{"f_17893ChickenBridge.scm",(void*)f_17893},
{"f_17908ChickenBridge.scm",(void*)f_17908},
{"f_17900ChickenBridge.scm",(void*)f_17900},
{"f_17864ChickenBridge.scm",(void*)f_17864},
{"f_17868ChickenBridge.scm",(void*)f_17868},
{"f_17829ChickenBridge.scm",(void*)f_17829},
{"f_17833ChickenBridge.scm",(void*)f_17833},
{"f_17794ChickenBridge.scm",(void*)f_17794},
{"f_17798ChickenBridge.scm",(void*)f_17798},
{"f_17464ChickenBridge.scm",(void*)f_17464},
{"f_17758ChickenBridge.scm",(void*)f_17758},
{"f_17773ChickenBridge.scm",(void*)f_17773},
{"f_17765ChickenBridge.scm",(void*)f_17765},
{"f_17729ChickenBridge.scm",(void*)f_17729},
{"f_17733ChickenBridge.scm",(void*)f_17733},
{"f_17694ChickenBridge.scm",(void*)f_17694},
{"f_17698ChickenBridge.scm",(void*)f_17698},
{"f_17659ChickenBridge.scm",(void*)f_17659},
{"f_17663ChickenBridge.scm",(void*)f_17663},
{"f_17467ChickenBridge.scm",(void*)f_17467},
{"f_17623ChickenBridge.scm",(void*)f_17623},
{"f_17638ChickenBridge.scm",(void*)f_17638},
{"f_17630ChickenBridge.scm",(void*)f_17630},
{"f_17594ChickenBridge.scm",(void*)f_17594},
{"f_17598ChickenBridge.scm",(void*)f_17598},
{"f_17559ChickenBridge.scm",(void*)f_17559},
{"f_17563ChickenBridge.scm",(void*)f_17563},
{"f_17524ChickenBridge.scm",(void*)f_17524},
{"f_17528ChickenBridge.scm",(void*)f_17528},
{"f_17470ChickenBridge.scm",(void*)f_17470},
{"f_17473ChickenBridge.scm",(void*)f_17473},
{"f_17476ChickenBridge.scm",(void*)f_17476},
{"f_17491ChickenBridge.scm",(void*)f_17491},
{"f_17503ChickenBridge.scm",(void*)f_17503},
{"f_17482ChickenBridge.scm",(void*)f_17482},
{"f_17485ChickenBridge.scm",(void*)f_17485},
{"f_17381ChickenBridge.scm",(void*)f_17381},
{"f_17385ChickenBridge.scm",(void*)f_17385},
{"f_17404ChickenBridge.scm",(void*)f_17404},
{"f_17414ChickenBridge.scm",(void*)f_17414},
{"f_17416ChickenBridge.scm",(void*)f_17416},
{"f_17433ChickenBridge.scm",(void*)f_17433},
{"f_17436ChickenBridge.scm",(void*)f_17436},
{"f_17447ChickenBridge.scm",(void*)f_17447},
{"f_17388ChickenBridge.scm",(void*)f_17388},
{"f_17118ChickenBridge.scm",(void*)f_17118},
{"f_17371ChickenBridge.scm",(void*)f_17371},
{"f_17122ChickenBridge.scm",(void*)f_17122},
{"f_17343ChickenBridge.scm",(void*)f_17343},
{"f_17358ChickenBridge.scm",(void*)f_17358},
{"f_17350ChickenBridge.scm",(void*)f_17350},
{"f_17314ChickenBridge.scm",(void*)f_17314},
{"f_17318ChickenBridge.scm",(void*)f_17318},
{"f_17279ChickenBridge.scm",(void*)f_17279},
{"f_17283ChickenBridge.scm",(void*)f_17283},
{"f_17125ChickenBridge.scm",(void*)f_17125},
{"f_17243ChickenBridge.scm",(void*)f_17243},
{"f_17258ChickenBridge.scm",(void*)f_17258},
{"f_17250ChickenBridge.scm",(void*)f_17250},
{"f_17214ChickenBridge.scm",(void*)f_17214},
{"f_17218ChickenBridge.scm",(void*)f_17218},
{"f_17179ChickenBridge.scm",(void*)f_17179},
{"f_17183ChickenBridge.scm",(void*)f_17183},
{"f_17128ChickenBridge.scm",(void*)f_17128},
{"f_17131ChickenBridge.scm",(void*)f_17131},
{"f_17134ChickenBridge.scm",(void*)f_17134},
{"f_17146ChickenBridge.scm",(void*)f_17146},
{"f_17158ChickenBridge.scm",(void*)f_17158},
{"f_17140ChickenBridge.scm",(void*)f_17140},
{"f_17082ChickenBridge.scm",(void*)f_17082},
{"f_17086ChickenBridge.scm",(void*)f_17086},
{"f_17108ChickenBridge.scm",(void*)f_17108},
{"f_17102ChickenBridge.scm",(void*)f_17102},
{"f_17095ChickenBridge.scm",(void*)f_17095},
{"f_16835ChickenBridge.scm",(void*)f_16835},
{"f_16839ChickenBridge.scm",(void*)f_16839},
{"f_17052ChickenBridge.scm",(void*)f_17052},
{"f_17067ChickenBridge.scm",(void*)f_17067},
{"f_17059ChickenBridge.scm",(void*)f_17059},
{"f_17023ChickenBridge.scm",(void*)f_17023},
{"f_17027ChickenBridge.scm",(void*)f_17027},
{"f_16988ChickenBridge.scm",(void*)f_16988},
{"f_16992ChickenBridge.scm",(void*)f_16992},
{"f_16842ChickenBridge.scm",(void*)f_16842},
{"f_16952ChickenBridge.scm",(void*)f_16952},
{"f_16967ChickenBridge.scm",(void*)f_16967},
{"f_16959ChickenBridge.scm",(void*)f_16959},
{"f_16923ChickenBridge.scm",(void*)f_16923},
{"f_16927ChickenBridge.scm",(void*)f_16927},
{"f_16888ChickenBridge.scm",(void*)f_16888},
{"f_16892ChickenBridge.scm",(void*)f_16892},
{"f_16845ChickenBridge.scm",(void*)f_16845},
{"f_16848ChickenBridge.scm",(void*)f_16848},
{"f_16851ChickenBridge.scm",(void*)f_16851},
{"f_16859ChickenBridge.scm",(void*)f_16859},
{"f_16867ChickenBridge.scm",(void*)f_16867},
{"f_16857ChickenBridge.scm",(void*)f_16857},
{"f_16620ChickenBridge.scm",(void*)f_16620},
{"f_16624ChickenBridge.scm",(void*)f_16624},
{"f_16833ChickenBridge.scm",(void*)f_16833},
{"f_16786ChickenBridge.scm",(void*)f_16786},
{"f_16798ChickenBridge.scm",(void*)f_16798},
{"f_16654ChickenBridge.scm",(void*)f_16654},
{"f_16657ChickenBridge.scm",(void*)f_16657},
{"f_16663ChickenBridge.scm",(void*)f_16663},
{"f_16666ChickenBridge.scm",(void*)f_16666},
{"f_16754ChickenBridge.scm",(void*)f_16754},
{"f_16669ChickenBridge.scm",(void*)f_16669},
{"f_16748ChickenBridge.scm",(void*)f_16748},
{"f_16675ChickenBridge.scm",(void*)f_16675},
{"f_16678ChickenBridge.scm",(void*)f_16678},
{"f_16630ChickenBridge.scm",(void*)f_16630},
{"f_16633ChickenBridge.scm",(void*)f_16633},
{"f_16640ChickenBridge.scm",(void*)f_16640},
{"f_16150ChickenBridge.scm",(void*)f_16150},
{"f_16154ChickenBridge.scm",(void*)f_16154},
{"f_16590ChickenBridge.scm",(void*)f_16590},
{"f_16605ChickenBridge.scm",(void*)f_16605},
{"f_16597ChickenBridge.scm",(void*)f_16597},
{"f_16561ChickenBridge.scm",(void*)f_16561},
{"f_16565ChickenBridge.scm",(void*)f_16565},
{"f_16526ChickenBridge.scm",(void*)f_16526},
{"f_16530ChickenBridge.scm",(void*)f_16530},
{"f_16491ChickenBridge.scm",(void*)f_16491},
{"f_16495ChickenBridge.scm",(void*)f_16495},
{"f_16157ChickenBridge.scm",(void*)f_16157},
{"f_16455ChickenBridge.scm",(void*)f_16455},
{"f_16470ChickenBridge.scm",(void*)f_16470},
{"f_16462ChickenBridge.scm",(void*)f_16462},
{"f_16426ChickenBridge.scm",(void*)f_16426},
{"f_16430ChickenBridge.scm",(void*)f_16430},
{"f_16391ChickenBridge.scm",(void*)f_16391},
{"f_16395ChickenBridge.scm",(void*)f_16395},
{"f_16356ChickenBridge.scm",(void*)f_16356},
{"f_16360ChickenBridge.scm",(void*)f_16360},
{"f_16160ChickenBridge.scm",(void*)f_16160},
{"f_16320ChickenBridge.scm",(void*)f_16320},
{"f_16335ChickenBridge.scm",(void*)f_16335},
{"f_16327ChickenBridge.scm",(void*)f_16327},
{"f_16291ChickenBridge.scm",(void*)f_16291},
{"f_16295ChickenBridge.scm",(void*)f_16295},
{"f_16256ChickenBridge.scm",(void*)f_16256},
{"f_16260ChickenBridge.scm",(void*)f_16260},
{"f_16221ChickenBridge.scm",(void*)f_16221},
{"f_16225ChickenBridge.scm",(void*)f_16225},
{"f_16163ChickenBridge.scm",(void*)f_16163},
{"f_16166ChickenBridge.scm",(void*)f_16166},
{"f_16169ChickenBridge.scm",(void*)f_16169},
{"f_16192ChickenBridge.scm",(void*)f_16192},
{"f_16200ChickenBridge.scm",(void*)f_16200},
{"f_16175ChickenBridge.scm",(void*)f_16175},
{"f_16178ChickenBridge.scm",(void*)f_16178},
{"f_16070ChickenBridge.scm",(void*)f_16070},
{"f_16061ChickenBridge.scm",(void*)f_16061},
{"f_15989ChickenBridge.scm",(void*)f_15989},
{"f_15993ChickenBridge.scm",(void*)f_15993},
{"f_15996ChickenBridge.scm",(void*)f_15996},
{"f_15734ChickenBridge.scm",(void*)f_15734},
{"f_15738ChickenBridge.scm",(void*)f_15738},
{"f_15959ChickenBridge.scm",(void*)f_15959},
{"f_15974ChickenBridge.scm",(void*)f_15974},
{"f_15966ChickenBridge.scm",(void*)f_15966},
{"f_15930ChickenBridge.scm",(void*)f_15930},
{"f_15934ChickenBridge.scm",(void*)f_15934},
{"f_15895ChickenBridge.scm",(void*)f_15895},
{"f_15899ChickenBridge.scm",(void*)f_15899},
{"f_15741ChickenBridge.scm",(void*)f_15741},
{"f_15859ChickenBridge.scm",(void*)f_15859},
{"f_15874ChickenBridge.scm",(void*)f_15874},
{"f_15866ChickenBridge.scm",(void*)f_15866},
{"f_15830ChickenBridge.scm",(void*)f_15830},
{"f_15834ChickenBridge.scm",(void*)f_15834},
{"f_15795ChickenBridge.scm",(void*)f_15795},
{"f_15799ChickenBridge.scm",(void*)f_15799},
{"f_15744ChickenBridge.scm",(void*)f_15744},
{"f_15747ChickenBridge.scm",(void*)f_15747},
{"f_15750ChickenBridge.scm",(void*)f_15750},
{"f_15762ChickenBridge.scm",(void*)f_15762},
{"f_15774ChickenBridge.scm",(void*)f_15774},
{"f_15756ChickenBridge.scm",(void*)f_15756},
{"f_15619ChickenBridge.scm",(void*)f_15619},
{"f_15732ChickenBridge.scm",(void*)f_15732},
{"f_15629ChickenBridge.scm",(void*)f_15629},
{"f_15717ChickenBridge.scm",(void*)f_15717},
{"f_15728ChickenBridge.scm",(void*)f_15728},
{"f_15724ChickenBridge.scm",(void*)f_15724},
{"f_15632ChickenBridge.scm",(void*)f_15632},
{"f_15714ChickenBridge.scm",(void*)f_15714},
{"f_15640ChickenBridge.scm",(void*)f_15640},
{"f_15704ChickenBridge.scm",(void*)f_15704},
{"f_15649ChickenBridge.scm",(void*)f_15649},
{"f_15668ChickenBridge.scm",(void*)f_15668},
{"f_15697ChickenBridge.scm",(void*)f_15697},
{"f_15678ChickenBridge.scm",(void*)f_15678},
{"f_15693ChickenBridge.scm",(void*)f_15693},
{"f_15681ChickenBridge.scm",(void*)f_15681},
{"f_15652ChickenBridge.scm",(void*)f_15652},
{"f_15662ChickenBridge.scm",(void*)f_15662},
{"f_15643ChickenBridge.scm",(void*)f_15643},
{"f_15646ChickenBridge.scm",(void*)f_15646},
{"f_15573ChickenBridge.scm",(void*)f_15573},
{"f_15564ChickenBridge.scm",(void*)f_15564},
{"f_15263ChickenBridge.scm",(void*)f_15263},
{"f_15270ChickenBridge.scm",(void*)f_15270},
{"f_15559ChickenBridge.scm",(void*)f_15559},
{"f_15273ChickenBridge.scm",(void*)f_15273},
{"f_15544ChickenBridge.scm",(void*)f_15544},
{"f_15536ChickenBridge.scm",(void*)f_15536},
{"f_15528ChickenBridge.scm",(void*)f_15528},
{"f_15531ChickenBridge.scm",(void*)f_15531},
{"f_15499ChickenBridge.scm",(void*)f_15499},
{"f_15522ChickenBridge.scm",(void*)f_15522},
{"f_15505ChickenBridge.scm",(void*)f_15505},
{"f_15509ChickenBridge.scm",(void*)f_15509},
{"f_15276ChickenBridge.scm",(void*)f_15276},
{"f_15282ChickenBridge.scm",(void*)f_15282},
{"f_15374ChickenBridge.scm",(void*)f_15374},
{"f_15486ChickenBridge.scm",(void*)f_15486},
{"f_15493ChickenBridge.scm",(void*)f_15493},
{"f_15397ChickenBridge.scm",(void*)f_15397},
{"f_15399ChickenBridge.scm",(void*)f_15399},
{"f_15448ChickenBridge.scm",(void*)f_15448},
{"f_15483ChickenBridge.scm",(void*)f_15483},
{"f_15472ChickenBridge.scm",(void*)f_15472},
{"f_15617ChickenBridge.scm",(void*)f_15617},
{"f_15592ChickenBridge.scm",(void*)f_15592},
{"f_15613ChickenBridge.scm",(void*)f_15613},
{"f_15609ChickenBridge.scm",(void*)f_15609},
{"f_15601ChickenBridge.scm",(void*)f_15601},
{"f_15465ChickenBridge.scm",(void*)f_15465},
{"f_15458ChickenBridge.scm",(void*)f_15458},
{"f_15406ChickenBridge.scm",(void*)f_15406},
{"f_15446ChickenBridge.scm",(void*)f_15446},
{"f_15410ChickenBridge.scm",(void*)f_15410},
{"f_15442ChickenBridge.scm",(void*)f_15442},
{"f_15429ChickenBridge.scm",(void*)f_15429},
{"f_15437ChickenBridge.scm",(void*)f_15437},
{"f_15433ChickenBridge.scm",(void*)f_15433},
{"f_15413ChickenBridge.scm",(void*)f_15413},
{"f_15416ChickenBridge.scm",(void*)f_15416},
{"f_15390ChickenBridge.scm",(void*)f_15390},
{"f_15377ChickenBridge.scm",(void*)f_15377},
{"f_15386ChickenBridge.scm",(void*)f_15386},
{"f_15381ChickenBridge.scm",(void*)f_15381},
{"f_15288ChickenBridge.scm",(void*)f_15288},
{"f_15368ChickenBridge.scm",(void*)f_15368},
{"f_15348ChickenBridge.scm",(void*)f_15348},
{"f_15354ChickenBridge.scm",(void*)f_15354},
{"f_15365ChickenBridge.scm",(void*)f_15365},
{"f_15345ChickenBridge.scm",(void*)f_15345},
{"f_15333ChickenBridge.scm",(void*)f_15333},
{"f_15336ChickenBridge.scm",(void*)f_15336},
{"f_15291ChickenBridge.scm",(void*)f_15291},
{"f_15327ChickenBridge.scm",(void*)f_15327},
{"f_15322ChickenBridge.scm",(void*)f_15322},
{"f_15294ChickenBridge.scm",(void*)f_15294},
{"f_15307ChickenBridge.scm",(void*)f_15307},
{"f_15297ChickenBridge.scm",(void*)f_15297},
{"f_15300ChickenBridge.scm",(void*)f_15300},
{"f_15303ChickenBridge.scm",(void*)f_15303},
{"f_15140ChickenBridge.scm",(void*)f_15140},
{"f_15199ChickenBridge.scm",(void*)f_15199},
{"f_15209ChickenBridge.scm",(void*)f_15209},
{"f_15211ChickenBridge.scm",(void*)f_15211},
{"f_15240ChickenBridge.scm",(void*)f_15240},
{"f_15245ChickenBridge.scm",(void*)f_15245},
{"f_15230ChickenBridge.scm",(void*)f_15230},
{"f_15161ChickenBridge.scm",(void*)f_15161},
{"f_15193ChickenBridge.scm",(void*)f_15193},
{"f_15121ChickenBridge.scm",(void*)f_15121},
{"f_15128ChickenBridge.scm",(void*)f_15128},
{"f_15135ChickenBridge.scm",(void*)f_15135},
{"f_15102ChickenBridge.scm",(void*)f_15102},
{"f_15109ChickenBridge.scm",(void*)f_15109},
{"f_15116ChickenBridge.scm",(void*)f_15116},
{"f_14922ChickenBridge.scm",(void*)f_14922},
{"f_14926ChickenBridge.scm",(void*)f_14926},
{"f_14929ChickenBridge.scm",(void*)f_14929},
{"f_14932ChickenBridge.scm",(void*)f_14932},
{"f_14935ChickenBridge.scm",(void*)f_14935},
{"f_15092ChickenBridge.scm",(void*)f_15092},
{"f_15099ChickenBridge.scm",(void*)f_15099},
{"f_14938ChickenBridge.scm",(void*)f_14938},
{"f_14941ChickenBridge.scm",(void*)f_14941},
{"f_14947ChickenBridge.scm",(void*)f_14947},
{"f_14953ChickenBridge.scm",(void*)f_14953},
{"f_15016ChickenBridge.scm",(void*)f_15016},
{"f_15030ChickenBridge.scm",(void*)f_15030},
{"f_14956ChickenBridge.scm",(void*)f_14956},
{"f_14959ChickenBridge.scm",(void*)f_14959},
{"f_14965ChickenBridge.scm",(void*)f_14965},
{"f_14978ChickenBridge.scm",(void*)f_14978},
{"f_14968ChickenBridge.scm",(void*)f_14968},
{"f_14971ChickenBridge.scm",(void*)f_14971},
{"f_14912ChickenBridge.scm",(void*)f_14912},
{"f_14857ChickenBridge.scm",(void*)f_14857},
{"f_14848ChickenBridge.scm",(void*)f_14848},
{"f_14731ChickenBridge.scm",(void*)f_14731},
{"f_14722ChickenBridge.scm",(void*)f_14722},
{"f_14713ChickenBridge.scm",(void*)f_14713},
{"f_14704ChickenBridge.scm",(void*)f_14704},
{"f_14695ChickenBridge.scm",(void*)f_14695},
{"f_14677ChickenBridge.scm",(void*)f_14677},
{"f_14668ChickenBridge.scm",(void*)f_14668},
{"f_14659ChickenBridge.scm",(void*)f_14659},
{"f_14641ChickenBridge.scm",(void*)f_14641},
{"f_14632ChickenBridge.scm",(void*)f_14632},
{"f_14623ChickenBridge.scm",(void*)f_14623},
{"f_14608ChickenBridge.scm",(void*)f_14608},
{"f_14563ChickenBridge.scm",(void*)f_14563},
{"f_14545ChickenBridge.scm",(void*)f_14545},
{"f_14536ChickenBridge.scm",(void*)f_14536},
{"f_14509ChickenBridge.scm",(void*)f_14509},
{"f_14491ChickenBridge.scm",(void*)f_14491},
{"f_14473ChickenBridge.scm",(void*)f_14473},
{"f_14464ChickenBridge.scm",(void*)f_14464},
{"f_14452ChickenBridge.scm",(void*)f_14452},
{"f_14326ChickenBridge.scm",(void*)f_14326},
{"f_14332ChickenBridge.scm",(void*)f_14332},
{"f_14336ChickenBridge.scm",(void*)f_14336},
{"f_14354ChickenBridge.scm",(void*)f_14354},
{"f_14357ChickenBridge.scm",(void*)f_14357},
{"f_14361ChickenBridge.scm",(void*)f_14361},
{"f_14364ChickenBridge.scm",(void*)f_14364},
{"f_14416ChickenBridge.scm",(void*)f_14416},
{"f_14427ChickenBridge.scm",(void*)f_14427},
{"f_14367ChickenBridge.scm",(void*)f_14367},
{"f_14377ChickenBridge.scm",(void*)f_14377},
{"f_14379ChickenBridge.scm",(void*)f_14379},
{"f_14223ChickenBridge.scm",(void*)f_14223},
{"f_14247ChickenBridge.scm",(void*)f_14247},
{"f_14251ChickenBridge.scm",(void*)f_14251},
{"f_14277ChickenBridge.scm",(void*)f_14277},
{"f_14287ChickenBridge.scm",(void*)f_14287},
{"f_14324ChickenBridge.scm",(void*)f_14324},
{"f_14316ChickenBridge.scm",(void*)f_14316},
{"f_14254ChickenBridge.scm",(void*)f_14254},
{"f_14224ChickenBridge.scm",(void*)f_14224},
{"f_14228ChickenBridge.scm",(void*)f_14228},
{"f_14231ChickenBridge.scm",(void*)f_14231},
{"f_14393ChickenBridge.scm",(void*)f_14393},
{"f_14396ChickenBridge.scm",(void*)f_14396},
{"f_14403ChickenBridge.scm",(void*)f_14403},
{"f_14337ChickenBridge.scm",(void*)f_14337},
{"f_14341ChickenBridge.scm",(void*)f_14341},
{"f_14344ChickenBridge.scm",(void*)f_14344},
{"f_13813ChickenBridge.scm",(void*)f_13813},
{"f_14192ChickenBridge.scm",(void*)f_14192},
{"f_14186ChickenBridge.scm",(void*)f_14186},
{"f_13817ChickenBridge.scm",(void*)f_13817},
{"f_14170ChickenBridge.scm",(void*)f_14170},
{"f_13820ChickenBridge.scm",(void*)f_13820},
{"f_14156ChickenBridge.scm",(void*)f_14156},
{"f_14152ChickenBridge.scm",(void*)f_14152},
{"f_13823ChickenBridge.scm",(void*)f_13823},
{"f_14145ChickenBridge.scm",(void*)f_14145},
{"f_14141ChickenBridge.scm",(void*)f_14141},
{"f_13826ChickenBridge.scm",(void*)f_13826},
{"f_13829ChickenBridge.scm",(void*)f_13829},
{"f_14129ChickenBridge.scm",(void*)f_14129},
{"f_14121ChickenBridge.scm",(void*)f_14121},
{"f_14125ChickenBridge.scm",(void*)f_14125},
{"f_14113ChickenBridge.scm",(void*)f_14113},
{"f_14117ChickenBridge.scm",(void*)f_14117},
{"f_13987ChickenBridge.scm",(void*)f_13987},
{"f_14102ChickenBridge.scm",(void*)f_14102},
{"f_14106ChickenBridge.scm",(void*)f_14106},
{"f_14094ChickenBridge.scm",(void*)f_14094},
{"f_14098ChickenBridge.scm",(void*)f_14098},
{"f_13990ChickenBridge.scm",(void*)f_13990},
{"f_13994ChickenBridge.scm",(void*)f_13994},
{"f_13999ChickenBridge.scm",(void*)f_13999},
{"f_14009ChickenBridge.scm",(void*)f_14009},
{"f_14012ChickenBridge.scm",(void*)f_14012},
{"f_13893ChickenBridge.scm",(void*)f_13893},
{"f_13956ChickenBridge.scm",(void*)f_13956},
{"f_13977ChickenBridge.scm",(void*)f_13977},
{"f_13918ChickenBridge.scm",(void*)f_13918},
{"f_13947ChickenBridge.scm",(void*)f_13947},
{"f_13896ChickenBridge.scm",(void*)f_13896},
{"f_13913ChickenBridge.scm",(void*)f_13913},
{"f_13909ChickenBridge.scm",(void*)f_13909},
{"f_13359ChickenBridge.scm",(void*)f_13359},
{"f_13363ChickenBridge.scm",(void*)f_13363},
{"f_13351ChickenBridge.scm",(void*)f_13351},
{"f_13276ChickenBridge.scm",(void*)f_13276},
{"f_13337ChickenBridge.scm",(void*)f_13337},
{"f_13280ChickenBridge.scm",(void*)f_13280},
{"f_13288ChickenBridge.scm",(void*)f_13288},
{"f_13321ChickenBridge.scm",(void*)f_13321},
{"f_13298ChickenBridge.scm",(void*)f_13298},
{"f_13301ChickenBridge.scm",(void*)f_13301},
{"f_13873ChickenBridge.scm",(void*)f_13873},
{"f_13843ChickenBridge.scm",(void*)f_13843},
{"f_13832ChickenBridge.scm",(void*)f_13832},
{"f_13756ChickenBridge.scm",(void*)f_13756},
{"f_13764ChickenBridge.scm",(void*)f_13764},
{"f_13768ChickenBridge.scm",(void*)f_13768},
{"f_13772ChickenBridge.scm",(void*)f_13772},
{"f_13778ChickenBridge.scm",(void*)f_13778},
{"f_13788ChickenBridge.scm",(void*)f_13788},
{"f_13544ChickenBridge.scm",(void*)f_13544},
{"f_13612ChickenBridge.scm",(void*)f_13612},
{"f_13615ChickenBridge.scm",(void*)f_13615},
{"f_13618ChickenBridge.scm",(void*)f_13618},
{"f_13621ChickenBridge.scm",(void*)f_13621},
{"f_13624ChickenBridge.scm",(void*)f_13624},
{"f_13722ChickenBridge.scm",(void*)f_13722},
{"f_13732ChickenBridge.scm",(void*)f_13732},
{"f_13690ChickenBridge.scm",(void*)f_13690},
{"f_13700ChickenBridge.scm",(void*)f_13700},
{"f_13641ChickenBridge.scm",(void*)f_13641},
{"f_13660ChickenBridge.scm",(void*)f_13660},
{"f_13670ChickenBridge.scm",(void*)f_13670},
{"f_13651ChickenBridge.scm",(void*)f_13651},
{"f_13627ChickenBridge.scm",(void*)f_13627},
{"f_13580ChickenBridge.scm",(void*)f_13580},
{"f_13590ChickenBridge.scm",(void*)f_13590},
{"f_13563ChickenBridge.scm",(void*)f_13563},
{"f_13570ChickenBridge.scm",(void*)f_13570},
{"f_13546ChickenBridge.scm",(void*)f_13546},
{"f_13553ChickenBridge.scm",(void*)f_13553},
{"f_13365ChickenBridge.scm",(void*)f_13365},
{"f_13373ChickenBridge.scm",(void*)f_13373},
{"f_13377ChickenBridge.scm",(void*)f_13377},
{"f_13379ChickenBridge.scm",(void*)f_13379},
{"f_13389ChickenBridge.scm",(void*)f_13389},
{"f_13520ChickenBridge.scm",(void*)f_13520},
{"f_13469ChickenBridge.scm",(void*)f_13469},
{"f_13472ChickenBridge.scm",(void*)f_13472},
{"f_13483ChickenBridge.scm",(void*)f_13483},
{"f_13435ChickenBridge.scm",(void*)f_13435},
{"f_13404ChickenBridge.scm",(void*)f_13404},
{"f_13407ChickenBridge.scm",(void*)f_13407},
{"f_13392ChickenBridge.scm",(void*)f_13392},
{"f_12953ChickenBridge.scm",(void*)f_12953},
{"f_13270ChickenBridge.scm",(void*)f_13270},
{"f_13199ChickenBridge.scm",(void*)f_13199},
{"f_13201ChickenBridge.scm",(void*)f_13201},
{"f_7940ChickenBridge.scm",(void*)f_7940},
{"f_13220ChickenBridge.scm",(void*)f_13220},
{"f_13223ChickenBridge.scm",(void*)f_13223},
{"f_12966ChickenBridge.scm",(void*)f_12966},
{"f_13042ChickenBridge.scm",(void*)f_13042},
{"f_13195ChickenBridge.scm",(void*)f_13195},
{"f_13179ChickenBridge.scm",(void*)f_13179},
{"f_13131ChickenBridge.scm",(void*)f_13131},
{"f_13145ChickenBridge.scm",(void*)f_13145},
{"f_13098ChickenBridge.scm",(void*)f_13098},
{"f_13073ChickenBridge.scm",(void*)f_13073},
{"f_12969ChickenBridge.scm",(void*)f_12969},
{"f_12977ChickenBridge.scm",(void*)f_12977},
{"f_13010ChickenBridge.scm",(void*)f_13010},
{"f_11480ChickenBridge.scm",(void*)f_11480},
{"f_12930ChickenBridge.scm",(void*)f_12930},
{"f_12945ChickenBridge.scm",(void*)f_12945},
{"f_12937ChickenBridge.scm",(void*)f_12937},
{"f_12901ChickenBridge.scm",(void*)f_12901},
{"f_12905ChickenBridge.scm",(void*)f_12905},
{"f_12866ChickenBridge.scm",(void*)f_12866},
{"f_12870ChickenBridge.scm",(void*)f_12870},
{"f_12831ChickenBridge.scm",(void*)f_12831},
{"f_12835ChickenBridge.scm",(void*)f_12835},
{"f_12796ChickenBridge.scm",(void*)f_12796},
{"f_12800ChickenBridge.scm",(void*)f_12800},
{"f_12761ChickenBridge.scm",(void*)f_12761},
{"f_12765ChickenBridge.scm",(void*)f_12765},
{"f_12726ChickenBridge.scm",(void*)f_12726},
{"f_12730ChickenBridge.scm",(void*)f_12730},
{"f_11484ChickenBridge.scm",(void*)f_11484},
{"f_12690ChickenBridge.scm",(void*)f_12690},
{"f_12705ChickenBridge.scm",(void*)f_12705},
{"f_12697ChickenBridge.scm",(void*)f_12697},
{"f_12661ChickenBridge.scm",(void*)f_12661},
{"f_12665ChickenBridge.scm",(void*)f_12665},
{"f_12626ChickenBridge.scm",(void*)f_12626},
{"f_12630ChickenBridge.scm",(void*)f_12630},
{"f_12591ChickenBridge.scm",(void*)f_12591},
{"f_12595ChickenBridge.scm",(void*)f_12595},
{"f_12556ChickenBridge.scm",(void*)f_12556},
{"f_12560ChickenBridge.scm",(void*)f_12560},
{"f_12521ChickenBridge.scm",(void*)f_12521},
{"f_12525ChickenBridge.scm",(void*)f_12525},
{"f_12486ChickenBridge.scm",(void*)f_12486},
{"f_12490ChickenBridge.scm",(void*)f_12490},
{"f_11487ChickenBridge.scm",(void*)f_11487},
{"f_12450ChickenBridge.scm",(void*)f_12450},
{"f_12465ChickenBridge.scm",(void*)f_12465},
{"f_12457ChickenBridge.scm",(void*)f_12457},
{"f_12421ChickenBridge.scm",(void*)f_12421},
{"f_12425ChickenBridge.scm",(void*)f_12425},
{"f_12386ChickenBridge.scm",(void*)f_12386},
{"f_12390ChickenBridge.scm",(void*)f_12390},
{"f_12351ChickenBridge.scm",(void*)f_12351},
{"f_12355ChickenBridge.scm",(void*)f_12355},
{"f_12316ChickenBridge.scm",(void*)f_12316},
{"f_12320ChickenBridge.scm",(void*)f_12320},
{"f_12281ChickenBridge.scm",(void*)f_12281},
{"f_12285ChickenBridge.scm",(void*)f_12285},
{"f_12246ChickenBridge.scm",(void*)f_12246},
{"f_12250ChickenBridge.scm",(void*)f_12250},
{"f_11490ChickenBridge.scm",(void*)f_11490},
{"f_12210ChickenBridge.scm",(void*)f_12210},
{"f_12225ChickenBridge.scm",(void*)f_12225},
{"f_12217ChickenBridge.scm",(void*)f_12217},
{"f_12181ChickenBridge.scm",(void*)f_12181},
{"f_12185ChickenBridge.scm",(void*)f_12185},
{"f_12146ChickenBridge.scm",(void*)f_12146},
{"f_12150ChickenBridge.scm",(void*)f_12150},
{"f_12111ChickenBridge.scm",(void*)f_12111},
{"f_12115ChickenBridge.scm",(void*)f_12115},
{"f_12076ChickenBridge.scm",(void*)f_12076},
{"f_12080ChickenBridge.scm",(void*)f_12080},
{"f_12041ChickenBridge.scm",(void*)f_12041},
{"f_12045ChickenBridge.scm",(void*)f_12045},
{"f_12006ChickenBridge.scm",(void*)f_12006},
{"f_12010ChickenBridge.scm",(void*)f_12010},
{"f_11493ChickenBridge.scm",(void*)f_11493},
{"f_11970ChickenBridge.scm",(void*)f_11970},
{"f_11985ChickenBridge.scm",(void*)f_11985},
{"f_11977ChickenBridge.scm",(void*)f_11977},
{"f_11941ChickenBridge.scm",(void*)f_11941},
{"f_11945ChickenBridge.scm",(void*)f_11945},
{"f_11906ChickenBridge.scm",(void*)f_11906},
{"f_11910ChickenBridge.scm",(void*)f_11910},
{"f_11871ChickenBridge.scm",(void*)f_11871},
{"f_11875ChickenBridge.scm",(void*)f_11875},
{"f_11836ChickenBridge.scm",(void*)f_11836},
{"f_11840ChickenBridge.scm",(void*)f_11840},
{"f_11801ChickenBridge.scm",(void*)f_11801},
{"f_11805ChickenBridge.scm",(void*)f_11805},
{"f_11766ChickenBridge.scm",(void*)f_11766},
{"f_11770ChickenBridge.scm",(void*)f_11770},
{"f_11496ChickenBridge.scm",(void*)f_11496},
{"f_11730ChickenBridge.scm",(void*)f_11730},
{"f_11745ChickenBridge.scm",(void*)f_11745},
{"f_11737ChickenBridge.scm",(void*)f_11737},
{"f_11701ChickenBridge.scm",(void*)f_11701},
{"f_11705ChickenBridge.scm",(void*)f_11705},
{"f_11666ChickenBridge.scm",(void*)f_11666},
{"f_11670ChickenBridge.scm",(void*)f_11670},
{"f_11631ChickenBridge.scm",(void*)f_11631},
{"f_11635ChickenBridge.scm",(void*)f_11635},
{"f_11596ChickenBridge.scm",(void*)f_11596},
{"f_11600ChickenBridge.scm",(void*)f_11600},
{"f_11561ChickenBridge.scm",(void*)f_11561},
{"f_11565ChickenBridge.scm",(void*)f_11565},
{"f_11526ChickenBridge.scm",(void*)f_11526},
{"f_11530ChickenBridge.scm",(void*)f_11530},
{"f_11499ChickenBridge.scm",(void*)f_11499},
{"f_11502ChickenBridge.scm",(void*)f_11502},
{"f_11261ChickenBridge.scm",(void*)f_11261},
{"f_11270ChickenBridge.scm",(void*)f_11270},
{"f_11274ChickenBridge.scm",(void*)f_11274},
{"f_11461ChickenBridge.scm",(void*)f_11461},
{"f_11446ChickenBridge.scm",(void*)f_11446},
{"f_11411ChickenBridge.scm",(void*)f_11411},
{"f_11391ChickenBridge.scm",(void*)f_11391},
{"f_11395ChickenBridge.scm",(void*)f_11395},
{"f_11381ChickenBridge.scm",(void*)f_11381},
{"f_11389ChickenBridge.scm",(void*)f_11389},
{"f_11348ChickenBridge.scm",(void*)f_11348},
{"f_11276ChickenBridge.scm",(void*)f_11276},
{"f_11343ChickenBridge.scm",(void*)f_11343},
{"f_11280ChickenBridge.scm",(void*)f_11280},
{"f_11316ChickenBridge.scm",(void*)f_11316},
{"f_11291ChickenBridge.scm",(void*)f_11291},
{"f_11232ChickenBridge.scm",(void*)f_11232},
{"f_11236ChickenBridge.scm",(void*)f_11236},
{"f_11247ChickenBridge.scm",(void*)f_11247},
{"f_11245ChickenBridge.scm",(void*)f_11245},
{"f_11201ChickenBridge.scm",(void*)f_11201},
{"f_11205ChickenBridge.scm",(void*)f_11205},
{"f_11216ChickenBridge.scm",(void*)f_11216},
{"f_11214ChickenBridge.scm",(void*)f_11214},
{"f_11183ChickenBridge.scm",(void*)f_11183},
{"f_11191ChickenBridge.scm",(void*)f_11191},
{"f_11199ChickenBridge.scm",(void*)f_11199},
{"f_11173ChickenBridge.scm",(void*)f_11173},
{"f_11181ChickenBridge.scm",(void*)f_11181},
{"f_11114ChickenBridge.scm",(void*)f_11114},
{"f_11121ChickenBridge.scm",(void*)f_11121},
{"f_11124ChickenBridge.scm",(void*)f_11124},
{"f_11127ChickenBridge.scm",(void*)f_11127},
{"f_11132ChickenBridge.scm",(void*)f_11132},
{"f_11076ChickenBridge.scm",(void*)f_11076},
{"f_11084ChickenBridge.scm",(void*)f_11084},
{"f_11088ChickenBridge.scm",(void*)f_11088},
{"f_11108ChickenBridge.scm",(void*)f_11108},
{"f_11092ChickenBridge.scm",(void*)f_11092},
{"f_11100ChickenBridge.scm",(void*)f_11100},
{"f_11096ChickenBridge.scm",(void*)f_11096},
{"f_11064ChickenBridge.scm",(void*)f_11064},
{"f_11055ChickenBridge.scm",(void*)f_11055},
{"f_11046ChickenBridge.scm",(void*)f_11046},
{"f_11037ChickenBridge.scm",(void*)f_11037},
{"f_11028ChickenBridge.scm",(void*)f_11028},
{"f_11019ChickenBridge.scm",(void*)f_11019},
{"f_11010ChickenBridge.scm",(void*)f_11010},
{"f_10995ChickenBridge.scm",(void*)f_10995},
{"f_10989ChickenBridge.scm",(void*)f_10989},
{"f_10847ChickenBridge.scm",(void*)f_10847},
{"f_10851ChickenBridge.scm",(void*)f_10851},
{"f_10920ChickenBridge.scm",(void*)f_10920},
{"f_10963ChickenBridge.scm",(void*)f_10963},
{"f_10967ChickenBridge.scm",(void*)f_10967},
{"f_10956ChickenBridge.scm",(void*)f_10956},
{"f_10943ChickenBridge.scm",(void*)f_10943},
{"f_10862ChickenBridge.scm",(void*)f_10862},
{"f_10905ChickenBridge.scm",(void*)f_10905},
{"f_10909ChickenBridge.scm",(void*)f_10909},
{"f_10898ChickenBridge.scm",(void*)f_10898},
{"f_10885ChickenBridge.scm",(void*)f_10885},
{"f_10681ChickenBridge.scm",(void*)f_10681},
{"f_10782ChickenBridge.scm",(void*)f_10782},
{"f_10831ChickenBridge.scm",(void*)f_10831},
{"f_10827ChickenBridge.scm",(void*)f_10827},
{"f_10799ChickenBridge.scm",(void*)f_10799},
{"f_10734ChickenBridge.scm",(void*)f_10734},
{"f_10743ChickenBridge.scm",(void*)f_10743},
{"f_10727ChickenBridge.scm",(void*)f_10727},
{"f_10546ChickenBridge.scm",(void*)f_10546},
{"f_10672ChickenBridge.scm",(void*)f_10672},
{"f_10668ChickenBridge.scm",(void*)f_10668},
{"f_10646ChickenBridge.scm",(void*)f_10646},
{"f_10576ChickenBridge.scm",(void*)f_10576},
{"f_10592ChickenBridge.scm",(void*)f_10592},
{"f_10501ChickenBridge.scm",(void*)f_10501},
{"f_10544ChickenBridge.scm",(void*)f_10544},
{"f_10533ChickenBridge.scm",(void*)f_10533},
{"f_10385ChickenBridge.scm",(void*)f_10385},
{"f_10499ChickenBridge.scm",(void*)f_10499},
{"f_10400ChickenBridge.scm",(void*)f_10400},
{"f_10430ChickenBridge.scm",(void*)f_10430},
{"f_10449ChickenBridge.scm",(void*)f_10449},
{"f_10434ChickenBridge.scm",(void*)f_10434},
{"f_10413ChickenBridge.scm",(void*)f_10413},
{"f_10263ChickenBridge.scm",(void*)f_10263},
{"f_10383ChickenBridge.scm",(void*)f_10383},
{"f_10278ChickenBridge.scm",(void*)f_10278},
{"f_10308ChickenBridge.scm",(void*)f_10308},
{"f_10327ChickenBridge.scm",(void*)f_10327},
{"f_10312ChickenBridge.scm",(void*)f_10312},
{"f_10291ChickenBridge.scm",(void*)f_10291},
{"f_10166ChickenBridge.scm",(void*)f_10166},
{"f_10261ChickenBridge.scm",(void*)f_10261},
{"f_10181ChickenBridge.scm",(void*)f_10181},
{"f_10227ChickenBridge.scm",(void*)f_10227},
{"f_10212ChickenBridge.scm",(void*)f_10212},
{"f_10194ChickenBridge.scm",(void*)f_10194},
{"f_10113ChickenBridge.scm",(void*)f_10113},
{"f_10151ChickenBridge.scm",(void*)f_10151},
{"f_10158ChickenBridge.scm",(void*)f_10158},
{"f_10136ChickenBridge.scm",(void*)f_10136},
{"f_10111ChickenBridge.scm",(void*)f_10111},
{"f_10083ChickenBridge.scm",(void*)f_10083},
{"f_10085ChickenBridge.scm",(void*)f_10085},
{"f_10063ChickenBridge.scm",(void*)f_10063},
{"f_10011ChickenBridge.scm",(void*)f_10011},
{"f_10048ChickenBridge.scm",(void*)f_10048},
{"f_10015ChickenBridge.scm",(void*)f_10015},
{"f_10031ChickenBridge.scm",(void*)f_10031},
{"f_10033ChickenBridge.scm",(void*)f_10033},
{"f_9797ChickenBridge.scm",(void*)f_9797},
{"f_9810ChickenBridge.scm",(void*)f_9810},
{"f_9892ChickenBridge.scm",(void*)f_9892},
{"f_9895ChickenBridge.scm",(void*)f_9895},
{"f_9903ChickenBridge.scm",(void*)f_9903},
{"f_9915ChickenBridge.scm",(void*)f_9915},
{"f_9936ChickenBridge.scm",(void*)f_9936},
{"f_9944ChickenBridge.scm",(void*)f_9944},
{"f_9831ChickenBridge.scm",(void*)f_9831},
{"f_9836ChickenBridge.scm",(void*)f_9836},
{"f_9868ChickenBridge.scm",(void*)f_9868},
{"f_9776ChickenBridge.scm",(void*)f_9776},
{"f_9757ChickenBridge.scm",(void*)f_9757},
{"f_9716ChickenBridge.scm",(void*)f_9716},
{"f_9697ChickenBridge.scm",(void*)f_9697},
{"f_9469ChickenBridge.scm",(void*)f_9469},
{"f_9674ChickenBridge.scm",(void*)f_9674},
{"f_9689ChickenBridge.scm",(void*)f_9689},
{"f_9681ChickenBridge.scm",(void*)f_9681},
{"f_9645ChickenBridge.scm",(void*)f_9645},
{"f_9649ChickenBridge.scm",(void*)f_9649},
{"f_9610ChickenBridge.scm",(void*)f_9610},
{"f_9614ChickenBridge.scm",(void*)f_9614},
{"f_9473ChickenBridge.scm",(void*)f_9473},
{"f_9574ChickenBridge.scm",(void*)f_9574},
{"f_9589ChickenBridge.scm",(void*)f_9589},
{"f_9581ChickenBridge.scm",(void*)f_9581},
{"f_9545ChickenBridge.scm",(void*)f_9545},
{"f_9549ChickenBridge.scm",(void*)f_9549},
{"f_9510ChickenBridge.scm",(void*)f_9510},
{"f_9514ChickenBridge.scm",(void*)f_9514},
{"f_9476ChickenBridge.scm",(void*)f_9476},
{"f_9479ChickenBridge.scm",(void*)f_9479},
{"f_9482ChickenBridge.scm",(void*)f_9482},
{"f_9427ChickenBridge.scm",(void*)f_9427},
{"f_9456ChickenBridge.scm",(void*)f_9456},
{"f_9441ChickenBridge.scm",(void*)f_9441},
{"f_9372ChickenBridge.scm",(void*)f_9372},
{"f_9383ChickenBridge.scm",(void*)f_9383},
{"f_9385ChickenBridge.scm",(void*)f_9385},
{"f_9413ChickenBridge.scm",(void*)f_9413},
{"f_9273ChickenBridge.scm",(void*)f_9273},
{"f_9277ChickenBridge.scm",(void*)f_9277},
{"f_9280ChickenBridge.scm",(void*)f_9280},
{"f_9345ChickenBridge.scm",(void*)f_9345},
{"f_9282ChickenBridge.scm",(void*)f_9282},
{"f_9298ChickenBridge.scm",(void*)f_9298},
{"f_9045ChickenBridge.scm",(void*)f_9045},
{"f_9250ChickenBridge.scm",(void*)f_9250},
{"f_9265ChickenBridge.scm",(void*)f_9265},
{"f_9257ChickenBridge.scm",(void*)f_9257},
{"f_9221ChickenBridge.scm",(void*)f_9221},
{"f_9225ChickenBridge.scm",(void*)f_9225},
{"f_9186ChickenBridge.scm",(void*)f_9186},
{"f_9190ChickenBridge.scm",(void*)f_9190},
{"f_9049ChickenBridge.scm",(void*)f_9049},
{"f_9150ChickenBridge.scm",(void*)f_9150},
{"f_9165ChickenBridge.scm",(void*)f_9165},
{"f_9157ChickenBridge.scm",(void*)f_9157},
{"f_9121ChickenBridge.scm",(void*)f_9121},
{"f_9125ChickenBridge.scm",(void*)f_9125},
{"f_9086ChickenBridge.scm",(void*)f_9086},
{"f_9090ChickenBridge.scm",(void*)f_9090},
{"f_9052ChickenBridge.scm",(void*)f_9052},
{"f_9055ChickenBridge.scm",(void*)f_9055},
{"f_9065ChickenBridge.scm",(void*)f_9065},
{"f_9002ChickenBridge.scm",(void*)f_9002},
{"f_9035ChickenBridge.scm",(void*)f_9035},
{"f_9020ChickenBridge.scm",(void*)f_9020},
{"f_8981ChickenBridge.scm",(void*)f_8981},
{"f_8946ChickenBridge.scm",(void*)f_8946},
{"f_8950ChickenBridge.scm",(void*)f_8950},
{"f_8838ChickenBridge.scm",(void*)f_8838},
{"f_8925ChickenBridge.scm",(void*)f_8925},
{"f_8845ChickenBridge.scm",(void*)f_8845},
{"f_8854ChickenBridge.scm",(void*)f_8854},
{"f_8901ChickenBridge.scm",(void*)f_8901},
{"f_8867ChickenBridge.scm",(void*)f_8867},
{"f_8893ChickenBridge.scm",(void*)f_8893},
{"f_8705ChickenBridge.scm",(void*)f_8705},
{"f_8709ChickenBridge.scm",(void*)f_8709},
{"f_8712ChickenBridge.scm",(void*)f_8712},
{"f_8816ChickenBridge.scm",(void*)f_8816},
{"f_8714ChickenBridge.scm",(void*)f_8714},
{"f_8721ChickenBridge.scm",(void*)f_8721},
{"f_8763ChickenBridge.scm",(void*)f_8763},
{"f_8770ChickenBridge.scm",(void*)f_8770},
{"f_8744ChickenBridge.scm",(void*)f_8744},
{"f_8638ChickenBridge.scm",(void*)f_8638},
{"f_8642ChickenBridge.scm",(void*)f_8642},
{"f_8688ChickenBridge.scm",(void*)f_8688},
{"f_8645ChickenBridge.scm",(void*)f_8645},
{"f_8681ChickenBridge.scm",(void*)f_8681},
{"f_8648ChickenBridge.scm",(void*)f_8648},
{"f_8661ChickenBridge.scm",(void*)f_8661},
{"f_8592ChickenBridge.scm",(void*)f_8592},
{"f_8596ChickenBridge.scm",(void*)f_8596},
{"f_8506ChickenBridge.scm",(void*)f_8506},
{"f_8510ChickenBridge.scm",(void*)f_8510},
{"f_8513ChickenBridge.scm",(void*)f_8513},
{"f_8522ChickenBridge.scm",(void*)f_8522},
{"f_8544ChickenBridge.scm",(void*)f_8544},
{"f_8491ChickenBridge.scm",(void*)f_8491},
{"f_8476ChickenBridge.scm",(void*)f_8476},
{"f_8240ChickenBridge.scm",(void*)f_8240},
{"f_8453ChickenBridge.scm",(void*)f_8453},
{"f_8468ChickenBridge.scm",(void*)f_8468},
{"f_8460ChickenBridge.scm",(void*)f_8460},
{"f_8424ChickenBridge.scm",(void*)f_8424},
{"f_8428ChickenBridge.scm",(void*)f_8428},
{"f_8389ChickenBridge.scm",(void*)f_8389},
{"f_8393ChickenBridge.scm",(void*)f_8393},
{"f_8244ChickenBridge.scm",(void*)f_8244},
{"f_8353ChickenBridge.scm",(void*)f_8353},
{"f_8368ChickenBridge.scm",(void*)f_8368},
{"f_8360ChickenBridge.scm",(void*)f_8360},
{"f_8324ChickenBridge.scm",(void*)f_8324},
{"f_8328ChickenBridge.scm",(void*)f_8328},
{"f_8289ChickenBridge.scm",(void*)f_8289},
{"f_8293ChickenBridge.scm",(void*)f_8293},
{"f_8247ChickenBridge.scm",(void*)f_8247},
{"f_8250ChickenBridge.scm",(void*)f_8250},
{"f_8261ChickenBridge.scm",(void*)f_8261},
{"f_8200ChickenBridge.scm",(void*)f_8200},
{"f_8204ChickenBridge.scm",(void*)f_8204},
{"f_8234ChickenBridge.scm",(void*)f_8234},
{"f_8215ChickenBridge.scm",(void*)f_8215},
{"f_8223ChickenBridge.scm",(void*)f_8223},
{"f_8179ChickenBridge.scm",(void*)f_8179},
{"f_8191ChickenBridge.scm",(void*)f_8191},
{"f_8153ChickenBridge.scm",(void*)f_8153},
{"f_8111ChickenBridge.scm",(void*)f_8111},
{"f_8096ChickenBridge.scm",(void*)f_8096},
{"f_7985ChickenBridge.scm",(void*)f_7985},
{"f_8060ChickenBridge.scm",(void*)f_8060},
{"f_7989ChickenBridge.scm",(void*)f_7989},
{"f_8029ChickenBridge.scm",(void*)f_8029},
{"f_8018ChickenBridge.scm",(void*)f_8018},
{"f_8003ChickenBridge.scm",(void*)f_8003},
{"f_8011ChickenBridge.scm",(void*)f_8011},
{"f_7951ChickenBridge.scm",(void*)f_7951},
{"f_7963ChickenBridge.scm",(void*)f_7963},
{"f_7932ChickenBridge.scm",(void*)f_7932},
{"f_7929ChickenBridge.scm",(void*)f_7929},
{"f_7922ChickenBridge.scm",(void*)f_7922},
{"f_7919ChickenBridge.scm",(void*)f_7919},
{"f_7912ChickenBridge.scm",(void*)f_7912},
{"f_7894ChickenBridge.scm",(void*)f_7894},
{"f_7883ChickenBridge.scm",(void*)f_7883},
{"f_7880ChickenBridge.scm",(void*)f_7880},
{"f_7877ChickenBridge.scm",(void*)f_7877},
{"f_7874ChickenBridge.scm",(void*)f_7874},
{"f_7845ChickenBridge.scm",(void*)f_7845},
{"f_7838ChickenBridge.scm",(void*)f_7838},
{"f_7835ChickenBridge.scm",(void*)f_7835},
{"f_7814ChickenBridge.scm",(void*)f_7814},
{"f_7795ChickenBridge.scm",(void*)f_7795},
{"f_7776ChickenBridge.scm",(void*)f_7776},
{"f_7769ChickenBridge.scm",(void*)f_7769},
{"f_7762ChickenBridge.scm",(void*)f_7762},
{"f_7747ChickenBridge.scm",(void*)f_7747},
{"f_7736ChickenBridge.scm",(void*)f_7736},
{"f_7729ChickenBridge.scm",(void*)f_7729},
{"f_7702ChickenBridge.scm",(void*)f_7702},
{"f_7675ChickenBridge.scm",(void*)f_7675},
{"f_7634ChickenBridge.scm",(void*)f_7634},
{"f_7640ChickenBridge.scm",(void*)f_7640},
{"f_7650ChickenBridge.scm",(void*)f_7650},
{"f_7548ChickenBridge.scm",(void*)f_7548},
{"f_7509ChickenBridge.scm",(void*)f_7509},
{"f_7515ChickenBridge.scm",(void*)f_7515},
{"f_7538ChickenBridge.scm",(void*)f_7538},
{"f_7528ChickenBridge.scm",(void*)f_7528},
{"f_7470ChickenBridge.scm",(void*)f_7470},
{"f_7476ChickenBridge.scm",(void*)f_7476},
{"f_7496ChickenBridge.scm",(void*)f_7496},
{"f_7486ChickenBridge.scm",(void*)f_7486},
{"f_7430ChickenBridge.scm",(void*)f_7430},
{"f_7436ChickenBridge.scm",(void*)f_7436},
{"f_7460ChickenBridge.scm",(void*)f_7460},
{"f_7446ChickenBridge.scm",(void*)f_7446},
{"f_7331ChickenBridge.scm",(void*)f_7331},
{"f_7335ChickenBridge.scm",(void*)f_7335},
{"f_7360ChickenBridge.scm",(void*)f_7360},
{"f_7377ChickenBridge.scm",(void*)f_7377},
{"f_7381ChickenBridge.scm",(void*)f_7381},
{"f_7337ChickenBridge.scm",(void*)f_7337},
{"f_7354ChickenBridge.scm",(void*)f_7354},
{"f_7270ChickenBridge.scm",(void*)f_7270},
{"f_7283ChickenBridge.scm",(void*)f_7283},
{"f_7260ChickenBridge.scm",(void*)f_7260},
{"f_7220ChickenBridge.scm",(void*)f_7220},
{"f_7250ChickenBridge.scm",(void*)f_7250},
{"f_7130ChickenBridge.scm",(void*)f_7130},
{"f_7082ChickenBridge.scm",(void*)f_7082},
{"f_7116ChickenBridge.scm",(void*)f_7116},
{"f_7059ChickenBridge.scm",(void*)f_7059},
{"f_7053ChickenBridge.scm",(void*)f_7053},
{"f_7038ChickenBridge.scm",(void*)f_7038},
{"f_7024ChickenBridge.scm",(void*)f_7024},
{"f_7014ChickenBridge.scm",(void*)f_7014},
{"f_7004ChickenBridge.scm",(void*)f_7004},
{"f_6994ChickenBridge.scm",(void*)f_6994},
{"f_6984ChickenBridge.scm",(void*)f_6984},
{"f_6955ChickenBridge.scm",(void*)f_6955},
{"f_6964ChickenBridge.scm",(void*)f_6964},
{"f_6969ChickenBridge.scm",(void*)f_6969},
{"f_6944ChickenBridge.scm",(void*)f_6944},
{"f_6949ChickenBridge.scm",(void*)f_6949},
{"f_6651ChickenBridge.scm",(void*)f_6651},
{"f_6661ChickenBridge.scm",(void*)f_6661},
{"f_6912ChickenBridge.scm",(void*)f_6912},
{"f_6664ChickenBridge.scm",(void*)f_6664},
{"f_6667ChickenBridge.scm",(void*)f_6667},
{"f_6682ChickenBridge.scm",(void*)f_6682},
{"f_6692ChickenBridge.scm",(void*)f_6692},
{"f_6694ChickenBridge.scm",(void*)f_6694},
{"f_6753ChickenBridge.scm",(void*)f_6753},
{"f_6763ChickenBridge.scm",(void*)f_6763},
{"f_6880ChickenBridge.scm",(void*)f_6880},
{"f_6868ChickenBridge.scm",(void*)f_6868},
{"f_6866ChickenBridge.scm",(void*)f_6866},
{"f_6853ChickenBridge.scm",(void*)f_6853},
{"f_6807ChickenBridge.scm",(void*)f_6807},
{"f_6834ChickenBridge.scm",(void*)f_6834},
{"f_6813ChickenBridge.scm",(void*)f_6813},
{"f_6747ChickenBridge.scm",(void*)f_6747},
{"f_6706ChickenBridge.scm",(void*)f_6706},
{"f_6719ChickenBridge.scm",(void*)f_6719},
{"f_6929ChickenBridge.scm",(void*)f_6929},
{"f_6920ChickenBridge.scm",(void*)f_6920},
{"f_6928ChickenBridge.scm",(void*)f_6928},
{"f_6931ChickenBridge.scm",(void*)f_6931},
{"f_6939ChickenBridge.scm",(void*)f_6939},
{"f_6353ChickenBridge.scm",(void*)f_6353},
{"f_6606ChickenBridge.scm",(void*)f_6606},
{"f_6639ChickenBridge.scm",(void*)f_6639},
{"f_6635ChickenBridge.scm",(void*)f_6635},
{"f_6624ChickenBridge.scm",(void*)f_6624},
{"f_6620ChickenBridge.scm",(void*)f_6620},
{"f_6514ChickenBridge.scm",(void*)f_6514},
{"f_6517ChickenBridge.scm",(void*)f_6517},
{"f_6520ChickenBridge.scm",(void*)f_6520},
{"f_6600ChickenBridge.scm",(void*)f_6600},
{"f_6425ChickenBridge.scm",(void*)f_6425},
{"f_6366ChickenBridge.scm",(void*)f_6366},
{"f_6523ChickenBridge.scm",(void*)f_6523},
{"f_6530ChickenBridge.scm",(void*)f_6530},
{"f_6590ChickenBridge.scm",(void*)f_6590},
{"f_6576ChickenBridge.scm",(void*)f_6576},
{"f_6542ChickenBridge.scm",(void*)f_6542},
{"f_6568ChickenBridge.scm",(void*)f_6568},
{"f_6503ChickenBridge.scm",(void*)f_6503},
{"f_6550ChickenBridge.scm",(void*)f_6550},
{"f_6546ChickenBridge.scm",(void*)f_6546},
{NULL,NULL}};
#endif

static C_PTABLE_ENTRY *create_ptable(void){
#ifdef C_ENABLE_PTABLES
return ptable;
#else
return NULL;
#endif
}
/* end of file */
