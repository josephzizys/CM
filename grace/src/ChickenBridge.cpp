/* Generated from ChickenBridge.scm by the CHICKEN compiler
   http://www.call-with-current-continuation.org
   2008-03-27 15:16
   Version 3.0.0 - macosx-unix-gnu-x86	[ manyargs dload ptables applyhook ]
   (c)2000-2008 Felix L. Winkelmann	compiled 2008-02-24 on zippy.local (Darwin)
   command line: ChickenBridge.scm -output-file ChickenBridge.cpp -quiet
   unit: grace
*/

#include "chicken.h"


/*************************************************************************
 * Copyright (C) 2007 Todd Ingalls, Rick Taube.                          *
 * This program is free software; you can redistribute it and/or modify  *
 * it under the terms of the Lisp Lesser Gnu Public License. The text of *
 * this agreement is available at http://www.cliki.net/LLGPL             *
 *************************************************************************/

#include "Grace.h"
#include "Scheme.h"
#include "Syntax.h"
#include "Midi.h"
#include <juce.h>

//
// Console Window code
//

void print_message(char * st) {
  // attempt at buffering: if string ends with #\Return, send string
  // AND trigger update else send string without triggering update
  String s=String(st);
  if ( s.endsWithChar('\n') )
    ((GraceApp *)GraceApp::getInstance())->getConsole()->postConsoleTextMessage(s, ConsoleMessage::TEXT, true);
  else
    ((GraceApp *)GraceApp::getInstance())->getConsole()->postConsoleTextMessage(s, ConsoleMessage::TEXT, false);
}

void print_error(char * st) {
  // attempt at buffering: if string ends with #\Return, send string
  // AND trigger update else send string without triggering update
  String s=String(st);
  if ( s.endsWithChar('\n') )
    ((GraceApp *)GraceApp::getInstance())->getConsole()->postConsoleTextMessage(s, ConsoleMessage::ERROR, true);
  else
    ((GraceApp *)GraceApp::getInstance())->getConsole()->postConsoleTextMessage(s, ConsoleMessage::ERROR, false);
}

//
// Scheduler code
//

void scheduler_sprout( C_word proc, double time, int id)
{
  ((GraceApp *)
   GraceApp::getInstance())->schemeProcess->addNode(0, time, proc, id);
}

bool scheduler_is_paused () {
  ((GraceApp *)GraceApp::getInstance())->schemeProcess->isPaused();
}

void scheduler_pause() {
  ((GraceApp *)GraceApp::getInstance())->schemeProcess->setPaused(true);
}

void scheduler_cont () {
  ((GraceApp *)GraceApp::getInstance())->schemeProcess->setPaused(false);
}

void scheduler_stop (int id) {
  ((GraceApp *)GraceApp::getInstance())->schemeProcess->stop(id);
}

void scheduler_hush () {
  ((GraceApp *)GraceApp::getInstance())->schemeProcess->stop(-1);
  ((GraceApp *)GraceApp::getInstance())->midiOutPort->clear();
}

bool scheduler_is_time_milliseconds () {
  ((GraceApp *)GraceApp::getInstance())->schemeProcess->isTimeMilliseconds();
}
 
void scheduler_set_time_milliseconds (bool b) {
  ((GraceApp *)GraceApp::getInstance())->schemeProcess->setTimeMilliseconds(b);
}

//void print_current_directory() {
//  String s=File::getCurrentWorkingDirectory().getFullPathName().quoted() + T("\n");
//  ((GraceApp *)GraceApp::getInstance())->getConsole()->postConsoleTextMessage(s, ConsoleMessage::TEXT, true);
//}

char *get_current_directory() {
  return (char *)File::getCurrentWorkingDirectory().getFullPathName().toUTF8();
}

void set_current_directory (char *path) {
  File dir=File(String(path));
  if ( dir.isDirectory() ) {
    dir.setAsCurrentWorkingDirectory();
    //print_working_directory();
  }
  else {
    String s=T(">>> Error: ") + dir.getFullPathName().quoted() + T(" is not a directory.\n");
    ((GraceApp *)GraceApp::getInstance())->getConsole()->postConsoleTextMessage(s, ConsoleMessage::ERROR, true);
  }			 
}

void load_sal_file(char *path) {
  SalSyntax::getInstance()->loadFile( String(path) );  
}



#include "Toolbox.h"



void mp_note(double time, double dur, float key, float vel, float chan) {
 ((GraceApp *)GraceApp::getInstance())->midiOutPort->sendNote(time, dur, key, vel, chan); 
}

void mp_data(int type, double time, float chan, float data1, float data2) {
 ((GraceApp *)GraceApp::getInstance())->midiOutPort->sendData(type, time, chan, data1, data2) ;
}

void mp_message(MidiMessage *m) {
 ((GraceApp *)GraceApp::getInstance())->midiOutPort->sendMessage(m) ;
}

/// MidiMessage accessors

MidiMessage *mm_make(int type, double time, int chan, 
		     int data1, int data2 ) {
  MidiMessage *m;
  chan++; // juce channels are 1 based
  switch (type) {
  case MidiNode::MM_OFF :
    m=new MidiMessage(MidiMessage::noteOff(chan, data1));
    break;
  case MidiNode::MM_ON :
    m=new MidiMessage(MidiMessage::noteOn(chan, data1, (juce::uint8)data2));
    break;
  case MidiNode::MM_TOUCH :
    m=new MidiMessage(MidiMessage::aftertouchChange(chan, data1, data2));
    break;
  case MidiNode::MM_CTRL :
    m=new MidiMessage(MidiMessage::controllerEvent(chan, data1, data2));
    break;
  case MidiNode::MM_PROG :
    m=new MidiMessage(MidiMessage::programChange(chan, data1));
    break;
  case MidiNode::MM_PRESS :
    m=new MidiMessage(MidiMessage::channelPressureChange(chan, data1));
    break;
  case MidiNode::MM_BEND :
    m=new MidiMessage(MidiMessage::pitchWheel(chan, data1));
    break;
  default:
    return NULL;
  }
  return m;
}

MidiMessage *mm_copy(MidiMessage *m) {
  return new MidiMessage(*m);
}

void mm_free(MidiMessage *m) {
  delete m;
}

bool mm_is_type(MidiMessage *m, int typ) {
  switch (typ) {
  case MidiNode::MM_OFF :
    return m->isNoteOff();
    break;
  case MidiNode::MM_ON :
    return m->isNoteOn();
    break;
  case MidiNode::MM_TOUCH :
    return m->isAftertouch();
    break;
  case MidiNode::MM_CTRL :
    return m->isController();
    break;
  case MidiNode::MM_PROG :
    return m->isProgramChange();
    break;
  case MidiNode::MM_PRESS :
    return m->isChannelPressure();
    break;
  case MidiNode::MM_BEND :
    return m->isPitchWheel();
    break;
  default:
    return false;
  }
}

double mm_time(MidiMessage *m) {
  return m->getTimeStamp();
}

void mm_set_time(MidiMessage *m, double t) {
  m->setTimeStamp(t);
  return ;		
}

int mm_chan(MidiMessage *m) {
  // juce channels are 1 based
  return m->getChannel()-1;
}

void mm_set_chan(MidiMessage *m, int chan) {
  // juce channels are 1 based
  m->setChannel(chan+1);
}

int mm_data(MidiMessage *m, int n ) {
  juce::uint8 *data=m->getRawData();
  return (int)data[n];
}

void mm_set_data(MidiMessage *m, int n, int v ) {
  juce::uint8 *data=m->getRawData();
  data[n]=(v & 0x7f);
}

//INput Hook Code
void set_input_hook( C_word proc )
{
 // FIX
 ((GraceApp *)GraceApp::getInstance())->schemeProcess->setInputHook( proc);
}



#include "Csound.h"

void cs_send_score_event (int type, int len, C_word lyst) {
  MYFLT buf[len];
  int i=0;
  for ( ; C_SCHEME_END_OF_LIST != lyst; lyst = C_u_i_cdr( lyst ) ) {
    if (i==len) break;
    C_word w = C_u_i_car( lyst );
    if ( C_immediatep(w) ) {
      if ( C_truep(C_fixnump(w)) ) {
	// printf("FIX: buf[%d]=%d\n", i, C_unfix(w) );
	buf[i++] = (MYFLT)C_unfix(w);
      }
      else
        buf[i++] = 0.0;
    }
    else if ( C_truep(C_blockp(w)) && C_truep( C_flonump( w ) )) {
      // printf("FLO: buf[%d]=%f\n", i, (float)C_flonum_magnitude( w ));
      buf[i++] = (MYFLT)C_flonum_magnitude( w );
    }
    else {
      buf[i++] = 0.0;
    }
  }
  ((GraceApp *)GraceApp::getInstance())->getCsoundPort()->sendScoreEvent( ((type==2) ? 'f' : 'i'), len, buf);  
}

void cs_clear_score () {
  ((GraceApp *)GraceApp::getInstance())->getCsoundPort()->clearScore();
}



static C_PTABLE_ENTRY *create_ptable(void);
C_noret_decl(C_library_toplevel)
C_externimport void C_ccall C_library_toplevel(C_word c,C_word d,C_word k) C_noret;
C_noret_decl(C_eval_toplevel)
C_externimport void C_ccall C_eval_toplevel(C_word c,C_word d,C_word k) C_noret;
C_noret_decl(C_extras_toplevel)
C_externimport void C_ccall C_extras_toplevel(C_word c,C_word d,C_word k) C_noret;
C_noret_decl(C_extras_toplevel)
C_externimport void C_ccall C_extras_toplevel(C_word c,C_word d,C_word k) C_noret;

static C_TLS C_word lf[835];
static double C_possibly_force_alignment;
static C_char C_TLS li0[] C_aligned={C_lihdr(0,0,11),40,97,53,53,53,54,32,105,51,50,41,0,0,0};
static C_char C_TLS li1[] C_aligned={C_lihdr(0,0,11),40,97,53,53,55,56,32,105,51,49,41,0,0,0};
static C_char C_TLS li2[] C_aligned={C_lihdr(0,0,11),40,97,53,53,56,56,32,105,51,48,41,0,0,0};
static C_char C_TLS li3[] C_aligned={C_lihdr(0,0,11),40,97,53,53,57,52,32,118,50,54,41,0,0,0};
static C_char C_TLS li4[] C_aligned={C_lihdr(0,0,34),40,101,120,112,97,110,100,45,111,112,116,107,101,121,115,32,117,115,101,114,48,32,115,112,101,99,49,32,98,111,100,121,50,41,0,0};
static C_char C_TLS li5[] C_aligned={C_lihdr(0,0,23),40,102,95,53,57,50,48,32,115,116,114,53,48,32,46,32,97,114,103,115,53,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li6[] C_aligned={C_lihdr(0,0,12),40,102,95,53,57,48,57,32,107,53,52,41,0,0,0,0};
static C_char C_TLS li7[] C_aligned={C_lihdr(0,0,12),40,102,95,53,57,49,56,32,107,53,53,41,0,0,0,0};
static C_char C_TLS li8[] C_aligned={C_lihdr(0,0,13),40,100,111,54,57,32,116,97,105,108,55,49,41,0,0,0,0,0};
static C_char C_TLS li9[] C_aligned={C_lihdr(0,0,11),40,97,53,56,53,54,32,120,55,55,41,0,0,0};
static C_char C_TLS li10[] C_aligned={C_lihdr(0,0,31),40,100,111,54,51,32,97,114,103,115,54,53,32,107,101,121,54,54,32,97,114,103,54,55,32,112,111,115,54,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li11[] C_aligned={C_lihdr(0,0,7),40,97,53,57,48,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li12[] C_aligned={C_lihdr(0,0,34),40,101,120,112,97,110,100,45,115,101,110,100,32,109,101,115,103,52,52,32,100,97,116,97,52,53,32,101,114,114,102,52,54,41,0,0};
static C_char C_TLS li13[] C_aligned={C_lihdr(0,0,8),40,102,95,53,57,51,56,41};
static C_char C_TLS li14[] C_aligned={C_lihdr(0,0,5),40,99,119,100,41,0,0,0,0,0};
static C_char C_TLS li15[] C_aligned={C_lihdr(0,0,14),40,102,95,53,57,53,51,32,97,57,52,57,56,41,0,0,0,0,0,0};
static C_char C_TLS li16[] C_aligned={C_lihdr(0,0,15),40,99,104,100,105,114,32,46,32,100,105,114,57,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li17[] C_aligned={C_lihdr(0,0,12),40,102,105,102,116,104,32,108,49,48,48,41,0,0,0,0};
static C_char C_TLS li18[] C_aligned={C_lihdr(0,0,12),40,115,105,120,116,104,32,108,49,48,49,41,0,0,0,0};
static C_char C_TLS li19[] C_aligned={C_lihdr(0,0,14),40,115,101,118,101,110,116,104,32,108,49,48,50,41,0,0,0,0,0,0};
static C_char C_TLS li20[] C_aligned={C_lihdr(0,0,13),40,101,105,103,104,116,104,32,108,49,48,51,41,0,0,0,0,0};
static C_char C_TLS li21[] C_aligned={C_lihdr(0,0,12),40,110,105,110,116,104,32,108,49,48,52,41,0,0,0,0};
static C_char C_TLS li22[] C_aligned={C_lihdr(0,0,12),40,116,101,110,116,104,32,108,49,48,53,41,0,0,0,0};
static C_char C_TLS li23[] C_aligned={C_lihdr(0,0,11),40,114,101,115,116,32,108,49,48,54,41,0,0,0};
static C_char C_TLS li24[] C_aligned={C_lihdr(0,0,11),40,108,97,115,116,32,108,49,48,55,41,0,0,0};
static C_char C_TLS li25[] C_aligned={C_lihdr(0,0,14),40,98,117,116,108,97,115,116,32,108,49,48,56,41,0,0,0,0,0,0};
static C_char C_TLS li26[] C_aligned={C_lihdr(0,0,17),40,108,105,115,116,42,32,46,32,97,114,103,115,49,49,57,41,0};
static C_char C_TLS li27[] C_aligned={C_lihdr(0,0,32),40,108,105,115,116,45,115,101,116,33,32,108,105,115,49,50,48,32,112,111,115,49,50,49,32,118,97,108,49,50,50,41};
static C_char C_TLS li28[] C_aligned={C_lihdr(0,0,14),40,108,49,32,97,49,50,56,32,98,49,50,57,41,0,0,0,0,0,0};
static C_char C_TLS li29[] C_aligned={C_lihdr(0,0,14),40,108,50,32,97,49,51,48,32,98,49,51,49,41,0,0,0,0,0,0};
static C_char C_TLS li30[] C_aligned={C_lihdr(0,0,25),40,109,97,107,101,45,108,105,115,116,32,110,49,50,52,32,46,32,111,98,106,49,50,53,41,0};
static C_char C_TLS li31[] C_aligned={C_lihdr(0,0,35),40,108,105,115,116,45,112,114,111,112,32,108,105,115,49,51,53,32,112,114,111,112,49,51,54,32,46,32,100,101,102,49,51,55,41,0,0,0};
static C_char C_TLS li32[] C_aligned={C_lihdr(0,0,12),40,100,111,49,52,51,32,102,49,52,53,41,0,0,0,0};
static C_char C_TLS li33[] C_aligned={C_lihdr(0,0,24),40,98,105,116,119,105,115,101,45,116,101,115,116,32,97,49,52,49,32,98,49,52,50,41};
static C_char C_TLS li34[] C_aligned={C_lihdr(0,0,60),40,116,98,58,114,101,115,99,97,108,101,32,97,49,55,51,49,55,54,32,97,49,55,50,49,55,55,32,97,49,55,49,49,55,56,32,97,49,55,48,49,55,57,32,97,49,54,57,49,56,48,32,97,49,54,56,49,56,49,41,0,0,0,0};
static C_char C_TLS li35[] C_aligned={C_lihdr(0,0,61),40,116,98,58,100,105,115,99,114,101,116,101,32,97,49,56,56,49,57,49,32,97,49,56,55,49,57,50,32,97,49,56,54,49,57,51,32,97,49,56,53,49,57,52,32,97,49,56,52,49,57,53,32,97,49,56,51,49,57,54,41,0,0,0,0,0};
static C_char C_TLS li36[] C_aligned={C_lihdr(0,0,16),40,116,98,58,105,110,116,32,97,49,57,55,50,48,48,41};
static C_char C_TLS li37[] C_aligned={C_lihdr(0,0,29),40,116,98,58,100,101,99,105,109,97,108,115,32,97,50,48,50,50,48,53,32,97,50,48,49,50,48,54,41,0,0,0,0,0};
static C_char C_TLS li38[] C_aligned={C_lihdr(0,0,29),40,116,98,58,113,117,97,110,116,105,122,101,32,97,50,48,57,50,49,50,32,97,50,48,56,50,49,51,41,0,0,0,0,0};
static C_char C_TLS li39[] C_aligned={C_lihdr(0,0,44),40,116,98,58,114,104,121,116,104,109,45,62,115,101,99,111,110,100,115,32,97,50,49,55,50,50,48,32,97,50,49,54,50,50,49,32,97,50,49,53,50,50,50,41,0,0,0,0};
static C_char C_TLS li40[] C_aligned={C_lihdr(0,0,26),40,116,98,58,99,101,110,116,115,45,62,115,99,97,108,101,114,32,97,50,50,52,50,50,55,41,0,0};
static C_char C_TLS li41[] C_aligned={C_lihdr(0,0,26),40,116,98,58,115,99,97,108,101,114,45,62,99,101,110,116,115,32,97,50,50,57,50,51,50,41,0,0};
static C_char C_TLS li42[] C_aligned={C_lihdr(0,0,26),40,116,98,58,107,101,121,110,117,109,45,62,104,101,114,116,122,32,97,50,51,51,50,51,54,41,0,0};
static C_char C_TLS li43[] C_aligned={C_lihdr(0,0,21),40,116,98,58,114,97,110,45,115,101,116,33,32,97,50,52,55,50,53,48,41,0,0,0,0,0};
static C_char C_TLS li44[] C_aligned={C_lihdr(0,0,17),40,116,98,58,114,97,110,105,32,97,50,53,49,50,53,52,41,0};
static C_char C_TLS li45[] C_aligned={C_lihdr(0,0,17),40,116,98,58,114,97,110,102,32,97,50,53,53,50,53,56,41,0};
static C_char C_TLS li46[] C_aligned={C_lihdr(0,0,11),40,116,98,58,114,97,110,108,111,119,41,0,0,0};
static C_char C_TLS li47[] C_aligned={C_lihdr(0,0,12),40,116,98,58,114,97,110,104,105,103,104,41,0,0,0,0};
static C_char C_TLS li48[] C_aligned={C_lihdr(0,0,14),40,116,98,58,114,97,110,109,105,100,100,108,101,41,0,0,0,0,0,0};
static C_char C_TLS li49[] C_aligned={C_lihdr(0,0,29),40,116,98,58,114,97,110,103,97,117,115,115,32,97,50,56,51,50,56,54,32,97,50,56,50,50,56,55,41,0,0,0,0,0};
static C_char C_TLS li50[] C_aligned={C_lihdr(0,0,19),40,116,98,58,114,97,110,101,120,112,32,97,50,56,57,50,57,50,41,0,0,0};
static C_char C_TLS li51[] C_aligned={C_lihdr(0,0,21),40,116,98,58,114,97,110,103,97,109,109,97,32,97,51,48,49,51,48,52,41,0,0,0,0,0};
static C_char C_TLS li52[] C_aligned={C_lihdr(0,0,14),40,116,98,58,114,97,110,99,97,117,99,104,121,41,0,0,0,0,0,0};
static C_char C_TLS li53[] C_aligned={C_lihdr(0,0,23),40,116,98,58,114,97,110,112,111,105,115,115,111,110,32,97,51,48,57,51,49,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li54[] C_aligned={C_lihdr(0,0,12),40,116,98,58,114,97,110,112,105,110,107,41,0,0,0,0};
static C_char C_TLS li55[] C_aligned={C_lihdr(0,0,13),40,116,98,58,114,97,110,98,114,111,119,110,41,0,0,0,0,0};
static C_char C_TLS li56[] C_aligned={C_lihdr(0,0,12),40,97,54,55,50,53,32,122,51,50,53,41,0,0,0,0};
static C_char C_TLS li57[] C_aligned={C_lihdr(0,0,45),40,114,101,115,99,97,108,101,32,120,51,49,57,32,120,49,51,50,48,32,120,50,51,50,49,32,121,49,51,50,50,32,121,50,51,50,51,32,46,32,98,51,50,52,41,0,0,0,0,0};
static C_char C_TLS li58[] C_aligned={C_lihdr(0,0,43),40,100,105,115,99,114,101,116,101,32,120,51,50,54,32,120,49,51,50,55,32,120,50,51,50,56,32,105,49,51,50,57,32,46,32,97,114,103,115,51,51,48,41,0,0,0};
static C_char C_TLS li59[] C_aligned={C_lihdr(0,0,10),40,105,110,116,32,102,51,51,49,41,0,0};
static C_char C_TLS li60[] C_aligned={C_lihdr(0,0,16),40,112,108,117,115,32,46,32,97,114,103,115,51,51,50,41};
static C_char C_TLS li61[] C_aligned={C_lihdr(0,0,24),40,109,105,110,117,115,32,97,114,103,51,51,51,32,46,32,97,114,103,115,51,51,52,41};
static C_char C_TLS li62[] C_aligned={C_lihdr(0,0,12),40,97,54,57,50,52,32,110,51,51,55,41,0,0,0,0};
static C_char C_TLS li63[] C_aligned={C_lihdr(0,0,26),40,113,117,97,110,116,105,122,101,32,110,117,109,51,51,53,32,115,116,101,112,115,51,51,54,41,0,0};
static C_char C_TLS li64[] C_aligned={C_lihdr(0,0,29),40,100,101,99,105,109,97,108,115,32,110,117,109,51,51,56,32,46,32,100,105,103,105,116,115,51,51,57,41,0,0,0,0,0};
static C_char C_TLS li65[] C_aligned={C_lihdr(0,0,12),40,97,54,57,55,51,32,120,51,56,48,41,0,0,0,0};
static C_char C_TLS li66[] C_aligned={C_lihdr(0,0,36),40,114,104,121,116,104,109,45,62,115,101,99,111,110,100,115,32,98,101,97,116,115,51,52,48,32,46,32,97,114,103,115,51,52,49,41,0,0,0,0};
static C_char C_TLS li67[] C_aligned={C_lihdr(0,0,24),40,99,101,110,116,115,45,62,115,99,97,108,101,114,32,99,101,110,116,115,51,56,52,41};
static C_char C_TLS li68[] C_aligned={C_lihdr(0,0,22),40,115,99,97,108,101,114,45,62,99,101,110,116,115,32,110,117,109,51,56,53,41,0,0,0,0,0,0};
static C_char C_TLS li69[] C_aligned={C_lihdr(0,0,15),40,100,111,51,57,52,32,116,97,105,108,51,57,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li70[] C_aligned={C_lihdr(0,0,34),40,105,110,116,101,114,112,108,32,120,51,56,54,32,99,111,111,114,100,115,51,56,55,32,46,32,98,97,115,101,51,56,56,41,0,0};
static C_char C_TLS li71[] C_aligned={C_lihdr(0,0,23),40,105,110,116,101,114,112,32,120,52,48,52,32,46,32,97,114,103,115,52,48,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li72[] C_aligned={C_lihdr(0,0,27),40,100,111,52,49,48,32,105,52,49,50,32,107,52,49,51,32,108,52,49,52,32,116,52,49,53,41,0,0,0};
static C_char C_TLS li73[] C_aligned={C_lihdr(0,0,34),40,115,99,97,108,101,32,108,101,110,52,48,54,32,107,101,121,110,117,109,52,48,55,32,46,32,97,114,103,115,52,48,56,41,0,0};
static C_char C_TLS li74[] C_aligned={C_lihdr(0,0,14),40,114,97,110,32,46,32,110,117,109,52,50,49,41,0,0,0,0,0,0};
static C_char C_TLS li75[] C_aligned={C_lihdr(0,0,19),40,98,101,116,119,101,101,110,32,97,52,50,51,32,98,52,50,52,41,0,0,0};
static C_char C_TLS li76[] C_aligned={C_lihdr(0,0,16),40,112,105,99,107,32,46,32,97,114,103,115,52,50,53,41};
static C_char C_TLS li77[] C_aligned={C_lihdr(0,0,21),40,111,100,100,115,32,110,52,50,54,32,46,32,97,114,103,115,52,50,55,41,0,0,0,0,0};
static C_char C_TLS li78[] C_aligned={C_lihdr(0,0,19),40,114,97,110,98,101,116,97,32,46,32,97,114,103,115,52,54,57,41,0,0,0};
static C_char C_TLS li79[] C_aligned={C_lihdr(0,0,18),40,114,97,110,101,120,112,32,46,32,97,114,103,115,53,49,50,41,0,0};
static C_char C_TLS li80[] C_aligned={C_lihdr(0,0,20),40,114,97,110,103,97,117,115,115,32,46,32,97,114,103,115,53,49,51,41,0,0,0,0};
static C_char C_TLS li81[] C_aligned={C_lihdr(0,0,22),40,114,97,110,112,111,105,115,115,111,110,32,46,32,97,114,103,115,53,49,52,41,0,0,0,0,0,0};
static C_char C_TLS li82[] C_aligned={C_lihdr(0,0,20),40,114,97,110,103,97,109,109,97,32,46,32,97,114,103,115,53,49,53,41,0,0,0,0};
static C_char C_TLS li83[] C_aligned={C_lihdr(0,0,7),40,97,56,48,57,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li84[] C_aligned={C_lihdr(0,0,7),40,97,56,49,49,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li85[] C_aligned={C_lihdr(0,0,41),40,115,116,114,105,110,103,45,62,110,111,116,101,45,101,110,116,114,121,32,115,116,114,53,53,55,32,111,99,116,53,53,56,32,101,114,114,53,53,57,41,0};
static C_char C_TLS li86[] C_aligned={C_lihdr(0,0,7),40,97,56,49,50,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li87[] C_aligned={C_lihdr(0,0,7),40,97,56,49,52,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li88[] C_aligned={C_lihdr(0,0,34),40,110,111,116,101,45,97,117,120,32,102,114,101,113,53,54,53,32,100,111,99,116,53,54,54,32,101,114,114,63,53,54,55,41,0,0};
static C_char C_TLS li89[] C_aligned={C_lihdr(0,0,39),40,100,111,53,55,48,32,116,97,105,108,53,55,50,32,100,101,102,111,53,55,51,32,116,104,105,115,53,55,52,32,114,101,115,108,53,55,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li90[] C_aligned={C_lihdr(0,0,14),40,110,111,116,101,32,102,114,101,113,53,54,56,41,0,0,0,0,0,0};
static C_char C_TLS li91[] C_aligned={C_lihdr(0,0,39),40,100,111,53,56,52,32,116,97,105,108,53,56,54,32,100,101,102,111,53,56,55,32,116,104,105,115,53,56,56,32,114,101,115,108,53,56,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li92[] C_aligned={C_lihdr(0,0,13),40,107,101,121,32,102,114,101,113,53,56,50,41,0,0,0,0,0};
static C_char C_TLS li93[] C_aligned={C_lihdr(0,0,39),40,100,111,54,48,48,32,116,97,105,108,54,48,50,32,100,101,102,111,54,48,51,32,116,104,105,115,54,48,52,32,114,101,115,108,54,48,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li94[] C_aligned={C_lihdr(0,0,12),40,104,122,32,102,114,101,113,53,57,56,41,0,0,0,0};
static C_char C_TLS li95[] C_aligned={C_lihdr(0,0,9),40,112,99,32,120,54,49,52,41,0};
static C_char C_TLS li96[] C_aligned={C_lihdr(0,0,23),40,100,111,54,50,48,32,116,97,105,108,54,50,50,32,108,97,115,116,54,50,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li97[] C_aligned={C_lihdr(0,0,17),40,105,110,118,107,101,121,115,32,107,101,121,115,54,49,55,41,0};
static C_char C_TLS li98[] C_aligned={C_lihdr(0,0,12),40,97,56,55,49,48,32,122,54,50,55,41,0,0,0,0};
static C_char C_TLS li99[] C_aligned={C_lihdr(0,0,13),40,105,110,118,101,114,116,32,120,54,49,53,41,0,0,0,0,0};
static C_char C_TLS li100[] C_aligned={C_lihdr(0,0,23),40,100,111,54,51,53,32,116,97,105,108,54,51,55,32,108,97,115,116,54,51,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li101[] C_aligned={C_lihdr(0,0,28),40,116,114,97,110,115,112,107,101,121,115,32,107,101,121,115,54,51,50,32,111,114,105,103,54,51,51,41,0,0,0,0};
static C_char C_TLS li102[] C_aligned={C_lihdr(0,0,12),40,97,56,56,54,51,32,122,54,52,50,41,0,0,0,0};
static C_char C_TLS li103[] C_aligned={C_lihdr(0,0,21),40,116,114,97,110,115,112,111,115,101,32,120,54,50,56,32,121,54,50,57,41,0,0,0,0,0};
static C_char C_TLS li104[] C_aligned={C_lihdr(0,0,69),40,109,97,107,101,45,112,101,114,105,111,100,32,99,111,117,110,116,55,50,48,32,108,101,110,103,116,104,55,50,49,32,115,116,114,101,97,109,55,50,50,32,100,101,102,97,117,108,116,55,50,51,32,111,109,105,116,55,50,52,32,114,101,112,115,55,50,53,41,0,0,0,0,0};
static C_char C_TLS li105[] C_aligned={C_lihdr(0,0,31),40,112,101,114,105,111,100,45,99,111,117,110,116,45,115,101,116,33,32,120,55,50,55,32,118,97,108,55,50,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li106[] C_aligned={C_lihdr(0,0,19),40,112,101,114,105,111,100,45,99,111,117,110,116,32,120,55,51,48,41,0,0,0};
static C_char C_TLS li107[] C_aligned={C_lihdr(0,0,20),40,112,101,114,105,111,100,45,108,101,110,103,116,104,32,120,55,51,54,41,0,0,0,0};
static C_char C_TLS li108[] C_aligned={C_lihdr(0,0,20),40,112,101,114,105,111,100,45,115,116,114,101,97,109,32,120,55,52,50,41,0,0,0,0};
static C_char C_TLS li109[] C_aligned={C_lihdr(0,0,30),40,112,101,114,105,111,100,45,111,109,105,116,45,115,101,116,33,32,120,55,53,49,32,118,97,108,55,53,50,41,0,0,0,0,0,0};
static C_char C_TLS li110[] C_aligned={C_lihdr(0,0,18),40,112,101,114,105,111,100,45,111,109,105,116,32,120,55,53,52,41,0,0};
static C_char C_TLS li111[] C_aligned={C_lihdr(0,0,18),40,112,101,114,105,111,100,45,114,101,112,115,32,120,55,54,48,41,0,0};
static C_char C_TLS li112[] C_aligned={C_lihdr(0,0,15),40,112,97,116,116,101,114,110,63,32,120,55,56,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li113[] C_aligned={C_lihdr(0,0,20),40,112,97,116,116,101,114,110,45,102,108,97,103,115,32,120,55,57,48,41,0,0,0,0};
static C_char C_TLS li114[] C_aligned={C_lihdr(0,0,31),40,112,97,116,116,101,114,110,45,100,97,116,97,45,115,101,116,33,32,120,55,57,51,32,118,97,108,55,57,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li115[] C_aligned={C_lihdr(0,0,19),40,112,97,116,116,101,114,110,45,100,97,116,97,32,120,55,57,54,41,0,0,0};
static C_char C_TLS li116[] C_aligned={C_lihdr(0,0,21),40,112,97,116,116,101,114,110,45,108,101,110,103,116,104,32,120,56,48,50,41,0,0,0,0,0};
static C_char C_TLS li117[] C_aligned={C_lihdr(0,0,32),40,112,97,116,116,101,114,110,45,100,97,116,117,109,45,115,101,116,33,32,120,56,48,53,32,118,97,108,56,48,54,41};
static C_char C_TLS li118[] C_aligned={C_lihdr(0,0,20),40,112,97,116,116,101,114,110,45,100,97,116,117,109,32,120,56,48,56,41,0,0,0,0};
static C_char C_TLS li119[] C_aligned={C_lihdr(0,0,21),40,112,97,116,116,101,114,110,45,112,101,114,105,111,100,32,120,56,49,52,41,0,0,0,0,0};
static C_char C_TLS li120[] C_aligned={C_lihdr(0,0,32),40,112,97,116,116,101,114,110,45,118,97,108,117,101,45,115,101,116,33,32,120,56,49,55,32,118,97,108,56,49,56,41};
static C_char C_TLS li121[] C_aligned={C_lihdr(0,0,13),40,102,95,57,51,49,53,32,120,56,50,48,41,0,0,0,0,0};
static C_char C_TLS li122[] C_aligned={C_lihdr(0,0,32),40,112,97,116,116,101,114,110,45,115,116,97,116,101,45,115,101,116,33,32,120,56,50,51,32,118,97,108,56,50,52,41};
static C_char C_TLS li123[] C_aligned={C_lihdr(0,0,20),40,112,97,116,116,101,114,110,45,115,116,97,116,101,32,120,56,50,54,41,0,0,0,0};
static C_char C_TLS li124[] C_aligned={C_lihdr(0,0,32),40,112,97,116,116,101,114,110,45,99,97,99,104,101,45,115,101,116,33,32,120,56,54,53,32,118,97,108,56,54,54,41};
static C_char C_TLS li125[] C_aligned={C_lihdr(0,0,20),40,112,97,116,116,101,114,110,45,99,97,99,104,101,32,120,56,54,56,41,0,0,0,0};
static C_char C_TLS li126[] C_aligned={C_lihdr(0,0,16),40,37,97,108,108,111,99,45,112,97,116,116,101,114,110,41};
static C_char C_TLS li127[] C_aligned={C_lihdr(0,0,12),40,97,57,54,57,51,32,120,56,57,56,41,0,0,0,0};
static C_char C_TLS li128[] C_aligned={C_lihdr(0,0,89),40,105,110,105,116,105,97,108,105,122,101,45,112,97,116,116,101,114,110,32,111,98,106,56,56,56,32,100,97,116,97,56,56,57,32,102,111,114,56,57,48,32,114,101,112,56,57,49,32,102,108,97,103,115,56,57,50,32,108,101,110,56,57,51,32,100,112,101,114,56,57,52,32,103,101,116,114,56,57,53,32,109,97,112,114,56,57,54,41,0};
static C_char C_TLS li129[] C_aligned={C_lihdr(0,0,11),40,101,111,112,63,32,120,57,50,51,41,0,0,0};
static C_char C_TLS li130[] C_aligned={C_lihdr(0,0,11),40,101,111,100,63,32,120,57,50,52,41,0,0,0};
static C_char C_TLS li131[] C_aligned={C_lihdr(0,0,17),40,100,111,57,50,57,32,105,57,51,49,32,101,57,51,50,41,0};
static C_char C_TLS li132[] C_aligned={C_lihdr(0,0,22),40,100,111,57,51,54,32,110,57,51,56,32,101,57,51,57,32,102,57,52,48,41,0,0,0,0,0,0};
static C_char C_TLS li133[] C_aligned={C_lihdr(0,0,23),40,110,101,120,116,32,111,98,106,57,50,53,32,46,32,97,114,103,115,57,50,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li134[] C_aligned={C_lihdr(0,0,7),40,100,111,57,54,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li135[] C_aligned={C_lihdr(0,0,23),40,100,111,57,54,48,32,100,121,110,63,57,54,50,32,115,116,111,112,57,54,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li136[] C_aligned={C_lihdr(0,0,15),40,110,101,120,116,45,49,32,111,98,106,57,52,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li137[] C_aligned={C_lihdr(0,0,24),40,110,101,120,116,45,105,110,45,112,97,116,116,101,114,110,32,111,98,106,57,56,52,41};
static C_char C_TLS li138[] C_aligned={C_lihdr(0,0,31),40,109,97,112,45,112,97,116,116,101,114,110,45,100,97,116,97,32,102,110,57,56,53,32,111,98,106,57,56,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li139[] C_aligned={C_lihdr(0,0,13),40,97,49,48,50,54,57,32,120,57,57,53,41,0,0,0,0,0};
static C_char C_TLS li140[] C_aligned={C_lihdr(0,0,21),40,114,101,115,101,116,45,112,101,114,105,111,100,32,111,98,106,57,57,48,41,0,0,0,0,0};
static C_char C_TLS li141[] C_aligned={C_lihdr(0,0,23),40,97,49,48,51,54,51,32,102,110,49,48,52,55,32,111,98,106,49,48,52,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li142[] C_aligned={C_lihdr(0,0,32),40,109,97,107,101,45,99,121,99,108,101,32,100,97,116,97,49,48,48,52,32,46,32,97,114,103,115,49,48,48,53,41};
static C_char C_TLS li143[] C_aligned={C_lihdr(0,0,23),40,110,101,120,116,45,105,110,45,99,121,99,108,101,32,111,98,106,49,48,53,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li144[] C_aligned={C_lihdr(0,0,17),40,112,97,108,105,110,45,108,101,110,32,120,49,48,55,52,41,0};
static C_char C_TLS li145[] C_aligned={C_lihdr(0,0,30),40,112,97,108,105,110,45,105,110,99,45,115,101,116,33,32,120,49,48,55,55,32,118,97,108,49,48,55,56,41,0,0,0,0,0,0};
static C_char C_TLS li146[] C_aligned={C_lihdr(0,0,23),40,97,49,48,55,57,51,32,102,110,49,49,55,53,32,111,98,106,49,49,55,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li147[] C_aligned={C_lihdr(0,0,37),40,109,97,107,101,45,112,97,108,105,110,100,114,111,109,101,32,100,97,116,97,49,49,48,51,32,46,32,97,114,103,115,49,49,48,52,41,0,0,0,0,0};
static C_char C_TLS li148[] C_aligned={C_lihdr(0,0,28),40,110,101,120,116,45,105,110,45,112,97,108,105,110,100,114,111,109,101,32,111,98,106,49,49,56,52,41,0,0,0,0};
static C_char C_TLS li149[] C_aligned={C_lihdr(0,0,23),40,97,49,49,52,54,48,32,102,110,49,50,52,54,32,111,98,106,49,50,52,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li150[] C_aligned={C_lihdr(0,0,31),40,109,97,107,101,45,108,105,110,101,32,100,97,116,97,49,50,48,51,32,46,32,97,114,103,115,49,50,48,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li151[] C_aligned={C_lihdr(0,0,22),40,110,101,120,116,45,105,110,45,108,105,110,101,32,111,98,106,49,50,53,51,41,0,0,0,0,0,0};
static C_char C_TLS li152[] C_aligned={C_lihdr(0,0,23),40,97,49,49,55,52,55,32,102,110,49,51,48,49,32,111,98,106,49,51,48,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li153[] C_aligned={C_lihdr(0,0,31),40,109,97,107,101,45,104,101,97,112,32,100,97,116,97,49,50,53,56,32,46,32,97,114,103,115,49,50,53,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li154[] C_aligned={C_lihdr(0,0,26),40,100,111,49,51,49,50,32,105,49,51,49,52,32,106,49,51,49,53,32,118,49,51,49,54,41,0,0};
static C_char C_TLS li155[] C_aligned={C_lihdr(0,0,22),40,110,101,120,116,45,105,110,45,104,101,97,112,32,111,98,106,49,51,48,56,41,0,0,0,0,0,0};
static C_char C_TLS li156[] C_aligned={C_lihdr(0,0,23),40,97,49,50,48,57,50,32,102,110,49,51,57,54,32,111,98,106,49,51,57,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li157[] C_aligned={C_lihdr(0,0,35),40,109,97,107,101,45,114,111,116,97,116,105,111,110,32,100,97,116,97,49,51,50,52,32,46,32,97,114,103,115,49,51,50,53,41,0,0,0};
static C_char C_TLS li158[] C_aligned={C_lihdr(0,0,14),40,100,111,49,52,49,50,32,105,49,52,49,52,41,0,0,0,0,0,0};
static C_char C_TLS li159[] C_aligned={C_lihdr(0,0,61),40,114,111,116,97,116,101,45,105,116,101,109,115,32,105,116,101,109,115,49,52,48,55,32,115,116,97,114,116,49,52,48,56,32,115,116,101,112,49,52,48,57,32,119,105,100,116,104,49,52,49,48,32,101,110,100,49,52,49,49,41,0,0,0,0,0};
static C_char C_TLS li160[] C_aligned={C_lihdr(0,0,26),40,110,101,120,116,45,105,110,45,114,111,116,97,116,105,111,110,32,111,98,106,49,52,48,53,41,0,0};
static C_char C_TLS li161[] C_aligned={C_lihdr(0,0,25),40,114,97,110,100,111,109,45,105,116,101,109,45,100,97,116,117,109,32,120,49,52,51,57,41,0};
static C_char C_TLS li162[] C_aligned={C_lihdr(0,0,38),40,114,97,110,100,111,109,45,105,116,101,109,45,105,110,100,101,120,45,115,101,116,33,32,120,49,52,52,50,32,118,97,108,49,52,52,51,41,0,0,0,0,0,0};
static C_char C_TLS li163[] C_aligned={C_lihdr(0,0,25),40,114,97,110,100,111,109,45,105,116,101,109,45,105,110,100,101,120,32,120,49,52,52,53,41,0};
static C_char C_TLS li164[] C_aligned={C_lihdr(0,0,26),40,114,97,110,100,111,109,45,105,116,101,109,45,119,101,105,103,104,116,32,120,49,52,53,49,41,0,0};
static C_char C_TLS li165[] C_aligned={C_lihdr(0,0,23),40,114,97,110,100,111,109,45,105,116,101,109,45,109,105,110,32,120,49,52,53,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li166[] C_aligned={C_lihdr(0,0,23),40,114,97,110,100,111,109,45,105,116,101,109,45,109,97,120,32,120,49,52,54,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li167[] C_aligned={C_lihdr(0,0,38),40,114,97,110,100,111,109,45,105,116,101,109,45,99,111,117,110,116,45,115,101,116,33,32,120,49,52,54,54,32,118,97,108,49,52,54,55,41,0,0,0,0,0,0};
static C_char C_TLS li168[] C_aligned={C_lihdr(0,0,25),40,114,97,110,100,111,109,45,105,116,101,109,45,99,111,117,110,116,32,120,49,52,54,57,41,0};
static C_char C_TLS li169[] C_aligned={C_lihdr(0,0,14),40,97,49,50,57,55,55,32,105,49,53,53,50,41,0,0,0,0,0,0};
static C_char C_TLS li170[] C_aligned={C_lihdr(0,0,23),40,97,49,50,57,55,49,32,102,110,49,53,53,48,32,111,98,106,49,53,53,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li171[] C_aligned={C_lihdr(0,0,17),40,97,49,51,50,48,56,32,105,116,101,109,49,53,48,53,41,0};
static C_char C_TLS li172[] C_aligned={C_lihdr(0,0,25),40,37,109,97,107,101,45,114,97,110,100,111,109,45,105,116,101,109,32,119,49,53,54,51,41,0};
static C_char C_TLS li173[] C_aligned={C_lihdr(0,0,36),40,109,97,107,101,45,119,101,105,103,104,116,105,110,103,32,100,97,116,97,49,52,57,53,32,46,32,97,114,103,115,49,52,57,54,41,0,0,0,0};
static C_char C_TLS li174[] C_aligned={C_lihdr(0,0,37),40,100,111,49,54,53,48,32,116,97,105,108,49,54,53,50,32,105,110,100,101,120,49,54,53,51,32,116,111,116,97,108,49,54,53,52,41,0,0,0,0,0};
static C_char C_TLS li175[] C_aligned={C_lihdr(0,0,17),40,100,111,49,54,52,52,32,116,97,105,108,49,54,52,54,41,0};
static C_char C_TLS li176[] C_aligned={C_lihdr(0,0,36),40,114,101,99,97,108,99,45,119,101,105,103,104,116,105,110,103,115,32,111,98,106,49,54,52,48,32,102,105,120,63,49,54,52,49,41,0,0,0,0};
static C_char C_TLS li177[] C_aligned={C_lihdr(0,0,27),40,100,111,49,54,55,50,32,116,97,105,108,49,54,55,52,32,105,110,100,101,120,49,54,55,53,41,0,0,0};
static C_char C_TLS li178[] C_aligned={C_lihdr(0,0,18),40,112,105,99,107,32,99,49,54,55,48,32,114,49,54,55,49,41,0,0};
static C_char C_TLS li179[] C_aligned={C_lihdr(0,0,17),40,100,111,49,54,56,49,32,116,97,105,108,49,54,56,51,41,0};
static C_char C_TLS li180[] C_aligned={C_lihdr(0,0,17),40,100,111,49,54,55,55,32,105,116,101,109,49,54,55,57,41,0};
static C_char C_TLS li181[] C_aligned={C_lihdr(0,0,27),40,110,101,120,116,45,105,110,45,119,101,105,103,104,116,105,110,103,32,111,98,106,49,54,54,48,41,0,0,0};
static C_char C_TLS li182[] C_aligned={C_lihdr(0,0,23),40,97,49,52,50,57,49,32,102,110,49,56,48,57,32,111,98,106,49,56,49,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li183[] C_aligned={C_lihdr(0,0,14),40,97,49,52,48,52,53,32,115,49,55,49,48,41,0,0,0,0,0,0};
static C_char C_TLS li184[] C_aligned={C_lihdr(0,0,8),40,100,111,49,55,48,51,41};
static C_char C_TLS li185[] C_aligned={C_lihdr(0,0,41),40,100,111,49,55,50,53,32,116,97,105,108,49,55,50,55,32,111,114,100,101,114,49,55,50,56,32,108,105,115,49,55,50,57,32,112,49,55,51,48,41,0};
static C_char C_TLS li186[] C_aligned={C_lihdr(0,0,33),40,109,97,107,101,45,109,97,114,107,111,118,32,100,97,116,97,49,55,51,55,32,46,32,97,114,103,115,49,55,51,56,41,0};
static C_char C_TLS li187[] C_aligned={C_lihdr(0,0,17),40,100,111,49,56,51,52,32,116,97,105,108,49,56,51,54,41,0};
static C_char C_TLS li188[] C_aligned={C_lihdr(0,0,33),40,100,111,49,56,50,52,32,116,97,105,108,49,56,50,54,32,111,117,116,49,56,50,55,32,115,117,109,49,56,50,56,41,0};
static C_char C_TLS li189[] C_aligned={C_lihdr(0,0,37),40,115,101,108,101,99,116,45,111,117,116,112,117,116,32,114,97,110,103,101,49,56,50,50,32,111,117,116,112,117,116,115,49,56,50,51,41,0,0,0,0,0};
static C_char C_TLS li190[] C_aligned={C_lihdr(0,0,17),40,100,111,49,56,54,52,32,108,97,115,116,49,56,54,54,41,0};
static C_char C_TLS li191[] C_aligned={C_lihdr(0,0,26),40,100,111,49,56,52,48,32,105,49,56,52,50,32,106,49,56,52,51,32,102,49,56,52,52,41,0,0};
static C_char C_TLS li192[] C_aligned={C_lihdr(0,0,35),40,100,111,49,56,53,53,32,116,97,105,108,49,56,53,55,32,112,97,115,116,49,56,53,56,32,105,116,101,109,49,56,53,57,41,0,0,0};
static C_char C_TLS li193[] C_aligned={C_lihdr(0,0,24),40,110,101,120,116,45,105,110,45,109,97,114,107,111,118,32,111,98,106,49,56,49,57,41};
static C_char C_TLS li194[] C_aligned={C_lihdr(0,0,24),40,103,114,97,112,104,45,110,111,100,101,45,100,97,116,117,109,32,120,49,56,56,52,41};
static C_char C_TLS li195[] C_aligned={C_lihdr(0,0,14),40,97,49,53,49,54,51,32,110,49,57,53,48,41,0,0,0,0,0,0};
static C_char C_TLS li196[] C_aligned={C_lihdr(0,0,23),40,97,49,53,49,53,55,32,102,110,49,57,52,56,32,111,98,106,49,57,52,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li197[] C_aligned={C_lihdr(0,0,28),40,97,49,53,52,48,57,32,105,116,101,109,49,57,54,48,32,46,32,97,114,103,115,49,57,54,49,41,0,0,0,0};
static C_char C_TLS li198[] C_aligned={C_lihdr(0,0,29),40,112,97,114,115,101,45,103,114,97,112,104,45,105,116,101,109,32,101,120,116,101,114,110,49,57,53,57,41,0,0,0,0,0};
static C_char C_TLS li199[] C_aligned={C_lihdr(0,0,32),40,109,97,107,101,45,103,114,97,112,104,32,100,97,116,97,49,57,48,53,32,46,32,97,114,103,115,49,57,48,54,41};
static C_char C_TLS li200[] C_aligned={C_lihdr(0,0,17),40,100,111,50,48,49,52,32,116,97,105,108,50,48,49,54,41,0};
static C_char C_TLS li201[] C_aligned={C_lihdr(0,0,23),40,110,101,120,116,45,105,110,45,103,114,97,112,104,32,111,98,106,50,48,48,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li202[] C_aligned={C_lihdr(0,0,45),40,109,97,107,101,45,116,111,107,101,110,32,116,121,112,101,50,48,54,49,32,115,116,114,105,110,103,50,48,54,50,32,112,111,115,105,116,105,111,110,50,48,54,51,41,0,0,0,0,0};
static C_char C_TLS li203[] C_aligned={C_lihdr(0,0,18),40,116,111,107,101,110,45,116,121,112,101,32,120,50,48,54,56,41,0,0};
static C_char C_TLS li204[] C_aligned={C_lihdr(0,0,20),40,116,111,107,101,110,45,115,116,114,105,110,103,32,120,50,48,55,52,41,0,0,0,0};
static C_char C_TLS li205[] C_aligned={C_lihdr(0,0,22),40,116,111,107,101,110,45,112,111,115,105,116,105,111,110,32,120,50,48,56,48,41,0,0,0,0,0,0};
static C_char C_TLS li206[] C_aligned={C_lihdr(0,0,19),40,108,105,115,116,45,62,116,111,107,101,110,32,108,50,48,56,57,41,0,0,0};
static C_char C_TLS li207[] C_aligned={C_lihdr(0,0,22),40,102,105,114,115,116,45,116,111,107,101,110,32,116,111,107,115,50,48,57,49,41,0,0,0,0,0,0};
static C_char C_TLS li208[] C_aligned={C_lihdr(0,0,23),40,110,117,108,108,45,116,111,107,101,110,115,63,32,116,111,107,115,50,48,57,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li209[] C_aligned={C_lihdr(0,0,63),40,109,97,107,101,45,114,117,108,101,32,110,97,109,101,50,48,57,52,32,116,121,112,101,50,48,57,53,32,112,97,116,116,101,114,110,50,48,57,54,32,112,97,114,115,101,114,50,48,57,55,32,101,109,105,116,101,114,50,48,57,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li210[] C_aligned={C_lihdr(0,0,17),40,114,117,108,101,45,110,97,109,101,32,120,50,49,48,51,41,0};
static C_char C_TLS li211[] C_aligned={C_lihdr(0,0,26),40,103,101,116,45,114,117,108,101,32,116,121,112,50,49,52,55,32,100,101,102,50,49,52,56,41,0,0};
static C_char C_TLS li212[] C_aligned={C_lihdr(0,0,21),40,112,97,116,116,101,114,110,45,118,97,108,117,101,32,120,50,49,53,48,41,0,0,0,0,0};
static C_char C_TLS li213[] C_aligned={C_lihdr(0,0,23),40,112,97,116,116,101,114,110,45,99,108,97,117,115,101,63,32,120,50,49,53,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li214[] C_aligned={C_lihdr(0,0,20),40,112,97,116,116,101,114,110,45,115,117,98,115,32,120,50,49,53,51,41,0,0,0,0};
static C_char C_TLS li215[] C_aligned={C_lihdr(0,0,21),40,112,97,116,116,101,114,110,45,110,115,117,98,115,32,120,50,49,53,52,41,0,0,0,0,0};
static C_char C_TLS li216[] C_aligned={C_lihdr(0,0,25),40,112,97,116,116,101,114,110,45,115,117,98,32,120,50,49,53,53,32,105,50,49,53,54,41,0};
static C_char C_TLS li217[] C_aligned={C_lihdr(0,0,29),40,112,97,116,116,101,114,110,45,122,101,114,111,45,111,114,45,109,111,114,101,63,32,120,50,49,54,48,41,0,0,0,0,0};
static C_char C_TLS li218[] C_aligned={C_lihdr(0,0,42),40,109,97,107,101,45,112,97,114,115,101,45,101,114,114,111,114,32,115,116,114,105,110,103,50,49,54,50,32,112,111,115,105,116,105,111,110,50,49,54,51,41,0,0};
static C_char C_TLS li219[] C_aligned={C_lihdr(0,0,26),40,112,97,114,115,101,45,101,114,114,111,114,45,115,116,114,105,110,103,32,120,50,49,54,56,41,0,0};
static C_char C_TLS li220[] C_aligned={C_lihdr(0,0,28),40,112,97,114,115,101,45,101,114,114,111,114,45,112,111,115,105,116,105,111,110,32,120,50,49,55,52,41,0,0,0,0};
static C_char C_TLS li221[] C_aligned={C_lihdr(0,0,50),40,109,97,107,101,45,112,97,114,115,101,45,117,110,105,116,32,116,121,112,101,50,49,56,50,32,112,97,114,115,101,100,50,49,56,51,32,112,111,115,105,116,105,111,110,50,49,56,52,41,0,0};
static C_char C_TLS li222[] C_aligned={C_lihdr(0,0,19),40,112,97,114,115,101,45,117,110,105,116,63,32,120,50,49,56,53,41,0,0,0};
static C_char C_TLS li223[] C_aligned={C_lihdr(0,0,23),40,112,97,114,115,101,45,117,110,105,116,45,116,121,112,101,32,120,50,49,56,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li224[] C_aligned={C_lihdr(0,0,25),40,112,97,114,115,101,45,117,110,105,116,45,112,97,114,115,101,100,32,120,50,49,57,53,41,0};
static C_char C_TLS li225[] C_aligned={C_lihdr(0,0,27),40,112,97,114,115,101,45,117,110,105,116,45,112,111,115,105,116,105,111,110,32,120,50,50,48,49,41,0,0,0};
static C_char C_TLS li226[] C_aligned={C_lihdr(0,0,19),40,116,111,107,101,110,45,117,110,105,116,63,32,120,50,50,49,49,41,0,0,0};
static C_char C_TLS li227[] C_aligned={C_lihdr(0,0,33),40,116,111,107,101,110,45,117,110,105,116,45,116,121,112,101,61,63,32,120,50,50,49,50,32,116,121,112,50,50,49,51,41,0};
static C_char C_TLS li228[] C_aligned={C_lihdr(0,0,33),40,103,101,116,45,101,109,105,116,45,105,110,102,111,32,110,97,109,101,50,50,49,53,32,105,110,102,111,50,50,49,54,41,0};
static C_char C_TLS li229[] C_aligned={C_lihdr(0,0,42),40,97,100,100,45,101,109,105,116,45,105,110,102,111,32,110,97,109,101,50,50,49,56,32,100,97,116,97,50,50,49,57,32,105,110,102,111,50,50,50,48,41,0,0};
static C_char C_TLS li230[] C_aligned={C_lihdr(0,0,43),40,115,101,116,45,101,109,105,116,45,105,110,102,111,33,32,110,97,109,101,50,50,50,49,32,100,97,116,97,50,50,50,50,32,105,110,102,111,50,50,50,51,41,0,0,0};
static C_char C_TLS li231[] C_aligned={C_lihdr(0,0,30),40,101,109,105,116,32,120,50,50,50,54,32,105,110,102,111,50,50,50,55,32,101,114,114,102,50,50,50,56,41,0,0,0,0,0,0};
static C_char C_TLS li232[] C_aligned={C_lihdr(0,0,37),40,101,109,105,116,45,108,105,115,116,32,108,105,115,50,50,50,57,32,105,110,102,111,50,50,51,48,32,101,114,114,102,50,50,51,49,41,0,0,0,0,0};
static C_char C_TLS li233[] C_aligned={C_lihdr(0,0,27),40,102,95,49,54,53,54,51,32,97,114,103,115,50,50,52,52,32,101,114,114,102,50,50,52,53,41,0,0,0};
static C_char C_TLS li234[] C_aligned={C_lihdr(0,0,29),40,115,105,109,112,108,101,45,117,110,105,116,45,112,97,114,115,101,114,32,116,121,112,101,50,50,52,51,41,0,0,0,0,0};
static C_char C_TLS li235[] C_aligned={C_lihdr(0,0,17),40,100,111,50,50,53,51,32,116,97,105,108,50,50,53,53,41,0};
static C_char C_TLS li236[] C_aligned={C_lihdr(0,0,36),40,102,95,49,54,53,55,49,32,117,110,105,116,50,50,52,55,32,105,110,102,111,50,50,52,56,32,101,114,114,102,50,50,52,57,41,0,0,0,0};
static C_char C_TLS li237[] C_aligned={C_lihdr(0,0,30),40,115,105,109,112,108,101,45,117,110,105,116,45,101,109,105,116,116,101,114,32,102,117,110,99,50,50,52,54,41,0,0,0,0,0,0};
static C_char C_TLS li238[] C_aligned={C_lihdr(0,0,8),40,97,49,54,55,54,57,41};
static C_char C_TLS li239[] C_aligned={C_lihdr(0,0,26),40,97,49,54,55,55,57,32,97,50,50,56,53,32,98,50,50,56,54,32,99,50,50,56,55,41,0,0};
static C_char C_TLS li240[] C_aligned={C_lihdr(0,0,8),40,97,49,54,56,55,53,41};
static C_char C_TLS li241[] C_aligned={C_lihdr(0,0,26),40,97,49,54,56,56,57,32,97,50,51,48,49,32,98,50,51,48,50,32,99,50,51,48,51,41,0,0};
static C_char C_TLS li242[] C_aligned={C_lihdr(0,0,14),40,100,111,50,50,57,54,32,105,50,50,57,56,41,0,0,0,0,0,0};
static C_char C_TLS li243[] C_aligned={C_lihdr(0,0,8),40,97,49,54,57,52,50,41};
static C_char C_TLS li244[] C_aligned={C_lihdr(0,0,26),40,97,49,54,57,53,54,32,97,50,51,50,51,32,98,50,51,50,52,32,99,50,51,50,53,41,0,0};
static C_char C_TLS li245[] C_aligned={C_lihdr(0,0,14),40,100,111,50,51,49,56,32,105,50,51,50,48,41,0,0,0,0,0,0};
static C_char C_TLS li246[] C_aligned={C_lihdr(0,0,8),40,97,49,55,48,51,49,41};
static C_char C_TLS li247[] C_aligned={C_lihdr(0,0,26),40,97,49,55,48,51,55,32,97,50,51,52,50,32,98,50,51,52,51,32,99,50,51,52,52,41,0,0};
static C_char C_TLS li248[] C_aligned={C_lihdr(0,0,8),40,100,111,50,51,51,56,41};
static C_char C_TLS li249[] C_aligned={C_lihdr(0,0,8),40,97,49,55,48,55,48,41};
static C_char C_TLS li250[] C_aligned={C_lihdr(0,0,26),40,97,49,55,48,55,54,32,97,50,51,54,48,32,98,50,51,54,49,32,99,50,51,54,50,41,0,0};
static C_char C_TLS li251[] C_aligned={C_lihdr(0,0,70),40,112,97,114,115,101,114,32,112,97,116,50,50,55,50,32,116,111,107,101,110,115,50,50,55,51,32,102,111,114,99,101,45,97,110,100,50,50,55,52,32,108,101,118,101,108,50,50,55,53,32,116,114,97,99,101,50,50,55,54,32,101,114,114,102,50,50,55,55,41,0,0,0,0,0,0};
static C_char C_TLS li252[] C_aligned={C_lihdr(0,0,21),40,83,97,108,84,111,107,101,110,84,121,112,101,63,32,105,50,53,51,55,41,0,0,0,0,0};
static C_char C_TLS li253[] C_aligned={C_lihdr(0,0,18),40,83,97,108,79,112,84,121,112,101,63,32,105,50,53,52,49,41,0,0};
static C_char C_TLS li254[] C_aligned={C_lihdr(0,0,20),40,83,97,108,82,117,108,101,84,121,112,101,63,32,105,50,53,53,48,41,0,0,0,0};
static C_char C_TLS li255[] C_aligned={C_lihdr(0,0,29),40,83,97,108,84,121,112,101,61,63,32,116,121,112,49,50,53,53,49,32,116,121,112,50,50,53,53,50,41,0,0,0,0,0};
static C_char C_TLS li256[] C_aligned={C_lihdr(0,0,17),40,100,111,50,54,48,49,32,116,111,107,115,50,54,48,51,41,0};
static C_char C_TLS li257[] C_aligned={C_lihdr(0,0,36),40,114,101,109,111,118,101,45,116,111,107,101,110,45,116,121,112,101,32,116,111,107,115,50,53,57,55,32,116,121,112,50,53,57,56,41,0,0,0,0};
static C_char C_TLS li258[] C_aligned={C_lihdr(0,0,14),40,105,115,45,111,112,63,32,120,50,54,50,56,41,0,0,0,0,0,0};
static C_char C_TLS li259[] C_aligned={C_lihdr(0,0,29),40,100,111,50,54,51,55,32,119,50,50,54,51,57,32,111,107,50,54,52,48,32,108,105,50,54,52,49,41,0,0,0,0,0};
static C_char C_TLS li260[] C_aligned={C_lihdr(0,0,8),40,100,111,50,54,51,53,41};
static C_char C_TLS li261[] C_aligned={C_lihdr(0,0,18),40,105,110,102,45,62,112,114,101,32,105,110,102,50,54,51,48,41,0,0};
static C_char C_TLS li262[] C_aligned={C_lihdr(0,0,38),40,115,97,108,45,112,97,114,115,101,45,115,116,101,112,112,105,110,103,32,97,114,103,115,50,55,57,54,32,101,114,114,102,50,55,57,55,41,0,0,0,0,0,0};
static C_char C_TLS li263[] C_aligned={C_lihdr(0,0,14),40,100,111,51,48,48,53,32,102,51,48,48,55,41,0,0,0,0,0,0};
static C_char C_TLS li264[] C_aligned={C_lihdr(0,0,14),40,100,111,50,57,57,56,32,102,51,48,48,48,41,0,0,0,0,0,0};
static C_char C_TLS li265[] C_aligned={C_lihdr(0,0,8),40,97,49,54,54,52,48,41};
static C_char C_TLS li266[] C_aligned={C_lihdr(0,0,44),40,97,49,54,54,52,55,32,115,117,99,99,101,115,115,50,50,54,55,32,114,101,115,117,108,116,115,50,50,54,56,32,114,101,109,97,105,110,115,50,50,54,57,41,0,0,0,0};
static C_char C_TLS li267[] C_aligned={C_lihdr(0,0,17),40,97,49,54,54,51,52,32,101,114,114,102,50,50,54,53,41,0};
static C_char C_TLS li268[] C_aligned={C_lihdr(0,0,47),40,115,97,108,32,115,116,114,105,110,103,50,57,56,51,32,114,117,108,101,50,57,56,52,32,116,111,107,101,110,115,50,57,56,53,32,116,114,97,99,101,63,50,57,56,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li269[] C_aligned={C_lihdr(0,0,17),40,100,111,51,48,50,53,32,116,97,105,108,51,48,50,55,41,0};
static C_char C_TLS li270[] C_aligned={C_lihdr(0,0,27),40,112,114,105,110,116,101,114,32,116,104,105,110,103,51,48,50,51,32,108,101,118,51,48,50,52,41,0,0,0};
static C_char C_TLS li271[] C_aligned={C_lihdr(0,0,17),40,100,111,51,48,51,51,32,116,97,105,108,51,48,51,53,41,0};
static C_char C_TLS li272[] C_aligned={C_lihdr(0,0,22),40,115,97,108,58,112,114,105,110,116,32,46,32,97,114,103,115,51,48,50,49,41,0,0,0,0,0,0};
static C_char C_TLS li273[] C_aligned={C_lihdr(0,0,20),40,115,97,108,58,99,104,100,105,114,32,112,97,116,104,51,48,52,48,41,0,0,0,0};
static C_char C_TLS li274[] C_aligned={C_lihdr(0,0,19),40,115,97,108,58,108,111,97,100,32,102,105,108,101,51,48,52,50,41,0,0,0};
static C_char C_TLS li275[] C_aligned={C_lihdr(0,0,21),40,115,97,108,58,111,112,101,110,32,46,32,97,114,103,115,51,48,52,54,41,0,0,0,0,0};
static C_char C_TLS li276[] C_aligned={C_lihdr(0,0,23),40,115,97,108,58,111,117,116,112,117,116,32,46,32,97,114,103,115,51,48,52,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li277[] C_aligned={C_lihdr(0,0,32),40,108,111,111,112,45,111,112,101,114,97,116,111,114,45,115,101,116,33,32,99,51,49,55,55,32,120,51,49,55,56,41};
static C_char C_TLS li278[] C_aligned={C_lihdr(0,0,21),40,108,111,111,112,45,98,105,110,100,105,110,103,115,32,99,51,49,55,57,41,0,0,0,0,0};
static C_char C_TLS li279[] C_aligned={C_lihdr(0,0,23),40,108,111,111,112,45,99,111,108,108,101,99,116,111,114,115,32,99,51,49,56,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li280[] C_aligned={C_lihdr(0,0,22),40,108,111,111,112,45,105,110,105,116,105,97,108,108,121,32,99,51,49,56,53,41,0,0,0,0,0,0};
static C_char C_TLS li281[] C_aligned={C_lihdr(0,0,22),40,108,111,111,112,45,101,110,100,45,116,101,115,116,115,32,99,51,49,56,56,41,0,0,0,0,0,0};
static C_char C_TLS li282[] C_aligned={C_lihdr(0,0,20),40,108,111,111,112,45,108,111,111,112,105,110,103,32,99,51,49,57,49,41,0,0,0,0};
static C_char C_TLS li283[] C_aligned={C_lihdr(0,0,31),40,108,111,111,112,45,108,111,111,112,105,110,103,45,115,101,116,33,32,99,51,49,57,50,32,120,51,49,57,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li284[] C_aligned={C_lihdr(0,0,21),40,108,111,111,112,45,115,116,101,112,112,105,110,103,32,99,51,49,57,52,41,0,0,0,0,0};
static C_char C_TLS li285[] C_aligned={C_lihdr(0,0,20),40,108,111,111,112,45,102,105,110,97,108,108,121,32,99,51,49,57,55,41,0,0,0,0};
static C_char C_TLS li286[] C_aligned={C_lihdr(0,0,22),40,108,111,111,112,45,114,101,116,117,114,110,105,110,103,32,99,51,50,48,48,41,0,0,0,0,0,0};
static C_char C_TLS li287[] C_aligned={C_lihdr(0,0,14),40,100,111,51,50,48,53,32,97,51,50,48,55,41,0,0,0,0,0,0};
static C_char C_TLS li288[] C_aligned={C_lihdr(0,0,27),40,109,97,107,101,45,108,111,111,112,45,99,108,97,117,115,101,32,97,114,103,115,51,50,48,51,41,0,0,0};
static C_char C_TLS li289[] C_aligned={C_lihdr(0,0,14),40,100,111,51,50,49,55,32,108,51,50,49,57,41,0,0,0,0,0,0};
static C_char C_TLS li290[] C_aligned={C_lihdr(0,0,40),40,103,97,116,104,101,114,45,99,108,97,117,115,101,32,99,108,97,117,115,101,115,51,50,49,53,32,97,99,99,101,115,115,111,114,51,50,49,54,41};
static C_char C_TLS li291[] C_aligned={C_lihdr(0,0,39),40,103,97,116,104,101,114,45,99,108,97,117,115,101,115,32,99,97,108,108,101,114,51,50,49,50,32,99,108,97,117,115,101,115,51,50,49,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li292[] C_aligned={C_lihdr(0,0,24),40,108,111,111,112,45,111,112,63,32,120,51,50,50,51,32,111,112,115,51,50,50,52,41};
static C_char C_TLS li293[] C_aligned={C_lihdr(0,0,22),40,108,111,111,112,45,118,97,114,105,97,98,108,101,63,32,120,51,50,50,53,41,0,0,0,0,0,0};
static C_char C_TLS li294[] C_aligned={C_lihdr(0,0,30),40,109,97,107,101,45,98,105,110,100,105,110,103,32,118,97,114,51,50,50,54,32,118,97,108,51,50,50,55,41,0,0,0,0,0,0};
static C_char C_TLS li295[] C_aligned={C_lihdr(0,0,17),40,100,111,51,50,52,57,32,116,97,105,108,51,50,53,49,41,0};
static C_char C_TLS li296[] C_aligned={C_lihdr(0,0,17),40,100,111,51,50,52,52,32,116,97,105,108,51,50,52,54,41,0};
static C_char C_TLS li297[] C_aligned={C_lihdr(0,0,20),40,100,111,51,50,51,52,32,104,51,50,51,54,32,108,51,50,51,55,41,0,0,0,0};
static C_char C_TLS li298[] C_aligned={C_lihdr(0,0,39),40,108,111,111,112,45,101,114,114,111,114,32,111,112,115,51,50,50,56,32,102,111,114,109,115,51,50,50,57,32,97,114,103,115,51,50,51,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li299[] C_aligned={C_lihdr(0,0,41),40,112,97,114,115,101,45,102,111,114,32,102,111,114,109,115,51,50,54,51,32,99,108,97,117,115,101,115,51,50,54,52,32,111,112,115,51,50,54,53,41,0};
static C_char C_TLS li300[] C_aligned={C_lihdr(0,0,17),40,100,111,51,50,56,51,32,110,101,120,116,51,50,56,53,41,0};
static C_char C_TLS li301[] C_aligned={C_lihdr(0,0,51),40,112,97,114,115,101,45,110,117,109,101,114,105,99,97,108,45,102,111,114,32,102,111,114,109,115,51,50,54,57,32,99,108,97,117,115,101,115,51,50,55,48,32,111,112,115,51,50,55,49,41,0,0,0};
static C_char C_TLS li302[] C_aligned={C_lihdr(0,0,8),40,97,50,48,50,50,56,41};
static C_char C_TLS li303[] C_aligned={C_lihdr(0,0,30),40,97,50,48,50,52,54,32,99,108,97,117,115,101,51,51,54,52,32,105,103,110,111,114,101,51,51,54,53,41,0,0,0,0,0,0};
static C_char C_TLS li304[] C_aligned={C_lihdr(0,0,44),40,112,97,114,115,101,45,114,101,112,101,97,116,32,102,111,114,109,115,51,51,54,49,32,99,108,97,117,115,101,115,51,51,54,50,32,111,112,115,51,51,54,51,41,0,0,0,0};
static C_char C_TLS li305[] C_aligned={C_lihdr(0,0,17),40,100,111,51,51,56,50,32,110,101,120,116,51,51,56,52,41,0};
static C_char C_TLS li306[] C_aligned={C_lihdr(0,0,56),40,112,97,114,115,101,45,115,101,113,117,101,110,99,101,45,105,116,101,114,97,116,105,111,110,32,102,111,114,109,115,51,51,54,55,32,99,108,97,117,115,101,115,51,51,54,56,32,111,112,115,51,51,54,57,41};
static C_char C_TLS li307[] C_aligned={C_lihdr(0,0,17),40,100,111,51,52,52,57,32,110,101,120,116,51,52,53,49,41,0};
static C_char C_TLS li308[] C_aligned={C_lihdr(0,0,55),40,112,97,114,115,101,45,103,101,110,101,114,97,108,45,105,116,101,114,97,116,105,111,110,32,102,111,114,109,115,51,52,51,57,32,99,108,97,117,115,101,115,51,52,52,48,32,111,112,115,51,52,52,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li309[] C_aligned={C_lihdr(0,0,26),40,100,111,51,52,56,55,32,110,101,101,100,51,52,56,57,32,110,101,120,116,51,52,57,48,41,0,0};
static C_char C_TLS li310[] C_aligned={C_lihdr(0,0,42),40,112,97,114,115,101,45,119,105,116,104,32,102,111,114,109,115,51,52,55,55,32,99,108,97,117,115,101,115,51,52,55,56,32,111,112,115,51,52,55,57,41,0,0};
static C_char C_TLS li311[] C_aligned={C_lihdr(0,0,8),40,100,111,51,53,51,49,41};
static C_char C_TLS li312[] C_aligned={C_lihdr(0,0,40),40,112,97,114,115,101,45,100,111,32,102,111,114,109,115,51,53,50,50,32,99,108,97,117,115,101,115,51,53,50,51,32,111,112,115,51,53,50,52,41};
static C_char C_TLS li313[] C_aligned={C_lihdr(0,0,45),40,112,97,114,115,101,45,102,105,110,97,108,108,121,32,102,111,114,109,115,51,53,52,49,32,99,108,97,117,115,101,115,51,53,52,50,32,111,112,115,51,53,52,51,41,0,0,0,0,0};
static C_char C_TLS li314[] C_aligned={C_lihdr(0,0,47),40,112,97,114,115,101,45,105,110,105,116,105,97,108,108,121,32,102,111,114,109,115,51,53,53,53,32,99,108,97,117,115,101,115,51,53,53,54,32,111,112,115,51,53,53,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li315[] C_aligned={C_lihdr(0,0,50),40,109,97,107,101,45,99,111,108,108,101,99,116,111,114,32,118,97,114,51,54,50,50,32,116,121,112,101,51,54,50,51,32,97,99,99,51,54,50,52,32,104,101,97,100,51,54,50,53,41,0,0};
static C_char C_TLS li316[] C_aligned={C_lihdr(0,0,24),40,99,111,108,108,101,99,116,111,114,45,116,121,112,101,32,99,111,108,51,54,50,54,41};
static C_char C_TLS li317[] C_aligned={C_lihdr(0,0,23),40,99,111,108,108,101,99,116,111,114,45,97,99,99,32,99,111,108,51,54,50,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li318[] C_aligned={C_lihdr(0,0,14),40,100,111,51,53,55,52,32,97,51,53,55,54,41,0,0,0,0,0,0};
static C_char C_TLS li319[] C_aligned={C_lihdr(0,0,14),40,100,111,51,53,56,50,32,99,51,53,56,52,41,0,0,0,0,0,0};
static C_char C_TLS li320[] C_aligned={C_lihdr(0,0,50),40,112,97,114,115,101,45,97,99,99,117,109,117,108,97,116,105,111,110,32,102,111,114,109,115,51,54,48,49,32,99,108,97,117,115,101,115,51,54,48,50,32,111,112,115,51,54,48,51,41,0,0};
static C_char C_TLS li321[] C_aligned={C_lihdr(0,0,22),40,108,111,111,112,45,114,101,116,117,114,110,32,101,120,112,114,51,55,48,50,41,0,0,0,0,0,0};
static C_char C_TLS li322[] C_aligned={C_lihdr(0,0,49),40,112,97,114,115,101,45,119,104,105,108,101,45,117,110,116,105,108,32,102,111,114,109,115,51,55,48,51,32,99,108,97,117,115,101,115,51,55,48,52,32,111,112,115,51,55,48,53,41,0};
static C_char C_TLS li323[] C_aligned={C_lihdr(0,0,45),40,112,97,114,115,101,45,116,104,101,114,101,105,115,32,102,111,114,109,115,51,55,50,52,32,99,108,97,117,115,101,115,51,55,50,53,32,111,112,115,51,55,50,54,41,0,0,0,0,0};
static C_char C_TLS li324[] C_aligned={C_lihdr(0,0,44),40,112,97,114,115,101,45,114,101,116,117,114,110,32,102,111,114,109,115,51,55,52,48,32,99,108,97,117,115,101,115,51,55,52,49,32,111,112,115,51,55,52,50,41,0,0,0,0};
static C_char C_TLS li325[] C_aligned={C_lihdr(0,0,8),40,97,50,50,49,49,57,41};
static C_char C_TLS li326[] C_aligned={C_lihdr(0,0,20),40,97,50,50,49,51,50,32,97,51,55,54,55,32,98,51,55,54,56,41,0,0,0,0};
static C_char C_TLS li327[] C_aligned={C_lihdr(0,0,38),40,100,111,51,55,54,48,32,111,112,51,55,54,50,32,99,108,97,117,115,101,51,55,54,51,32,114,101,109,97,105,110,115,51,55,54,52,41,0,0,0,0,0,0};
static C_char C_TLS li328[] C_aligned={C_lihdr(0,0,58),40,112,97,114,115,101,45,116,104,101,110,45,101,108,115,101,45,100,101,112,101,110,100,101,110,116,115,32,102,111,114,109,115,51,55,53,52,32,99,108,97,117,115,101,115,51,55,53,53,32,111,112,115,51,55,53,54,41,0,0};
static C_char C_TLS li329[] C_aligned={C_lihdr(0,0,8),40,97,50,50,50,56,51,41};
static C_char C_TLS li330[] C_aligned={C_lihdr(0,0,20),40,97,50,50,50,57,55,32,97,51,55,57,54,32,98,51,55,57,55,41,0,0,0,0};
static C_char C_TLS li331[] C_aligned={C_lihdr(0,0,8),40,97,50,50,51,54,49,41};
static C_char C_TLS li332[] C_aligned={C_lihdr(0,0,20),40,97,50,50,51,54,55,32,97,51,55,57,51,32,98,51,55,57,52,41,0,0,0,0};
static C_char C_TLS li333[] C_aligned={C_lihdr(0,0,49),40,112,97,114,115,101,45,99,111,110,100,105,116,105,111,110,97,108,32,102,111,114,109,115,51,55,56,48,32,99,108,97,117,115,101,115,51,55,56,49,32,111,112,115,51,55,56,50,41,0};
static C_char C_TLS li334[] C_aligned={C_lihdr(0,0,26),40,111,112,45,116,121,112,101,63,32,111,112,51,56,50,51,32,116,121,112,101,51,56,50,52,41,0,0};
static C_char C_TLS li335[] C_aligned={C_lihdr(0,0,8),40,97,50,50,53,48,57,41};
static C_char C_TLS li336[] C_aligned={C_lihdr(0,0,20),40,97,50,50,53,49,56,32,97,51,56,51,54,32,98,51,56,51,55,41,0,0,0,0};
static C_char C_TLS li337[] C_aligned={C_lihdr(0,0,47),40,100,111,51,56,50,55,32,111,112,51,56,50,57,32,99,108,97,117,115,101,51,56,51,48,32,114,101,109,97,105,110,115,51,56,51,49,32,98,111,100,121,51,56,51,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li338[] C_aligned={C_lihdr(0,0,46),40,112,97,114,115,101,45,105,116,101,114,97,116,105,111,110,32,99,97,108,108,101,114,51,56,52,57,32,102,111,114,109,115,51,56,53,48,32,111,112,115,51,56,53,49,41,0,0,0,0,0,0};
static C_char C_TLS li339[] C_aligned={C_lihdr(0,0,59),40,102,95,50,50,57,50,52,32,97,52,48,50,56,52,48,51,49,32,97,52,48,50,55,52,48,51,50,32,97,52,48,50,54,52,48,51,51,32,97,52,48,50,53,52,48,51,52,32,97,52,48,50,52,52,48,51,53,41,0,0,0};
static C_char C_TLS li340[] C_aligned={C_lihdr(0,0,23),40,109,109,58,109,97,107,101,45,111,110,32,46,32,97,114,103,115,51,57,49,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li341[] C_aligned={C_lihdr(0,0,29),40,102,95,50,51,54,51,56,32,97,52,48,52,52,52,48,52,56,32,97,52,48,52,51,52,48,52,57,41,0,0,0,0,0};
static C_char C_TLS li342[] C_aligned={C_lihdr(0,0,14),40,109,109,58,111,110,63,32,109,52,48,52,50,41,0,0,0,0,0,0};
static C_char C_TLS li343[] C_aligned={C_lihdr(0,0,59),40,102,95,50,51,54,54,57,32,97,52,49,50,51,52,49,50,54,32,97,52,49,50,50,52,49,50,55,32,97,52,49,50,49,52,49,50,56,32,97,52,49,50,48,52,49,50,57,32,97,52,49,49,57,52,49,51,48,41,0,0,0};
static C_char C_TLS li344[] C_aligned={C_lihdr(0,0,24),40,109,109,58,109,97,107,101,45,111,102,102,32,46,32,97,114,103,115,52,48,53,49,41};
static C_char C_TLS li345[] C_aligned={C_lihdr(0,0,29),40,102,95,50,52,49,48,56,32,97,52,49,51,56,52,49,52,50,32,97,52,49,51,55,52,49,52,51,41,0,0,0,0,0};
static C_char C_TLS li346[] C_aligned={C_lihdr(0,0,15),40,109,109,58,111,102,102,63,32,109,52,49,51,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li347[] C_aligned={C_lihdr(0,0,59),40,102,95,50,52,49,52,50,32,97,52,50,53,52,52,50,53,55,32,97,52,50,53,51,52,50,53,56,32,97,52,50,53,50,52,50,53,57,32,97,52,50,53,49,52,50,54,48,32,97,52,50,53,48,52,50,54,49,41,0,0,0};
static C_char C_TLS li348[] C_aligned={C_lihdr(0,0,26),40,109,109,58,109,97,107,101,45,116,111,117,99,104,32,46,32,97,114,103,115,52,49,52,53,41,0,0};
static C_char C_TLS li349[] C_aligned={C_lihdr(0,0,29),40,102,95,50,52,56,53,54,32,97,52,50,55,48,52,50,55,52,32,97,52,50,54,57,52,50,55,53,41,0,0,0,0,0};
static C_char C_TLS li350[] C_aligned={C_lihdr(0,0,17),40,109,109,58,116,111,117,99,104,63,32,109,52,50,54,56,41,0};
static C_char C_TLS li351[] C_aligned={C_lihdr(0,0,59),40,102,95,50,52,56,57,48,32,97,52,51,56,54,52,51,56,57,32,97,52,51,56,53,52,51,57,48,32,97,52,51,56,52,52,51,57,49,32,97,52,51,56,51,52,51,57,50,32,97,52,51,56,50,52,51,57,51,41,0,0,0};
static C_char C_TLS li352[] C_aligned={C_lihdr(0,0,25),40,109,109,58,109,97,107,101,45,99,116,114,108,32,46,32,97,114,103,115,52,50,55,55,41,0};
static C_char C_TLS li353[] C_aligned={C_lihdr(0,0,29),40,102,95,50,53,54,48,52,32,97,52,52,48,50,52,52,48,54,32,97,52,52,48,49,52,52,48,55,41,0,0,0,0,0};
static C_char C_TLS li354[] C_aligned={C_lihdr(0,0,16),40,109,109,58,99,116,114,108,63,32,109,52,52,48,48,41};
static C_char C_TLS li355[] C_aligned={C_lihdr(0,0,59),40,102,95,50,53,54,51,53,32,97,52,52,56,49,52,52,56,52,32,97,52,52,56,48,52,52,56,53,32,97,52,52,55,57,52,52,56,54,32,97,52,52,55,56,52,52,56,55,32,97,52,52,55,55,52,52,56,56,41,0,0,0};
static C_char C_TLS li356[] C_aligned={C_lihdr(0,0,25),40,109,109,58,109,97,107,101,45,112,114,111,103,32,46,32,97,114,103,115,52,52,48,57,41,0};
static C_char C_TLS li357[] C_aligned={C_lihdr(0,0,29),40,102,95,50,54,48,55,52,32,97,52,52,57,54,52,53,48,48,32,97,52,52,57,53,52,53,48,49,41,0,0,0,0,0};
static C_char C_TLS li358[] C_aligned={C_lihdr(0,0,16),40,109,109,58,112,114,111,103,63,32,109,52,52,57,52,41};
static C_char C_TLS li359[] C_aligned={C_lihdr(0,0,59),40,102,95,50,54,49,48,53,32,97,52,53,55,53,52,53,55,56,32,97,52,53,55,52,52,53,55,57,32,97,52,53,55,51,52,53,56,48,32,97,52,53,55,50,52,53,56,49,32,97,52,53,55,49,52,53,56,50,41,0,0,0};
static C_char C_TLS li360[] C_aligned={C_lihdr(0,0,26),40,109,109,58,109,97,107,101,45,112,114,101,115,115,32,46,32,97,114,103,115,52,53,48,51,41,0,0};
static C_char C_TLS li361[] C_aligned={C_lihdr(0,0,29),40,102,95,50,54,53,52,52,32,97,52,53,57,48,52,53,57,52,32,97,52,53,56,57,52,53,57,53,41,0,0,0,0,0};
static C_char C_TLS li362[] C_aligned={C_lihdr(0,0,17),40,109,109,58,112,114,101,115,115,63,32,109,52,53,56,56,41,0};
static C_char C_TLS li363[] C_aligned={C_lihdr(0,0,59),40,102,95,50,54,53,55,53,32,97,52,54,54,57,52,54,55,50,32,97,52,54,54,56,52,54,55,51,32,97,52,54,54,55,52,54,55,52,32,97,52,54,54,54,52,54,55,53,32,97,52,54,54,53,52,54,55,54,41,0,0,0};
static C_char C_TLS li364[] C_aligned={C_lihdr(0,0,25),40,109,109,58,109,97,107,101,45,98,101,110,100,32,46,32,97,114,103,115,52,53,57,55,41,0};
static C_char C_TLS li365[] C_aligned={C_lihdr(0,0,19),40,102,95,50,55,48,51,54,32,97,52,54,57,50,52,54,57,54,41,0,0,0};
static C_char C_TLS li366[] C_aligned={C_lihdr(0,0,15),40,109,109,58,102,114,101,101,32,109,52,54,57,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li367[] C_aligned={C_lihdr(0,0,19),40,102,95,50,55,48,53,49,32,97,52,55,48,48,52,55,48,52,41,0,0,0};
static C_char C_TLS li368[] C_aligned={C_lihdr(0,0,15),40,109,109,58,99,111,112,121,32,109,52,54,57,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li369[] C_aligned={C_lihdr(0,0,19),40,102,95,50,55,48,54,54,32,97,52,55,48,56,52,55,49,50,41,0,0,0};
static C_char C_TLS li370[] C_aligned={C_lihdr(0,0,15),40,109,109,58,116,105,109,101,32,109,52,55,48,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li371[] C_aligned={C_lihdr(0,0,29),40,102,95,50,55,48,56,49,32,97,52,55,49,56,52,55,50,50,32,97,52,55,49,55,52,55,50,51,41,0,0,0,0,0};
static C_char C_TLS li372[] C_aligned={C_lihdr(0,0,26),40,109,109,58,116,105,109,101,45,115,101,116,33,32,109,52,55,49,53,32,116,52,55,49,54,41,0,0};
static C_char C_TLS li373[] C_aligned={C_lihdr(0,0,19),40,102,95,50,55,49,48,48,32,97,52,55,50,55,52,55,51,49,41,0,0,0};
static C_char C_TLS li374[] C_aligned={C_lihdr(0,0,15),40,109,109,58,99,104,97,110,32,109,52,55,50,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li375[] C_aligned={C_lihdr(0,0,29),40,102,95,50,55,49,49,53,32,97,52,55,51,54,52,55,52,48,32,97,52,55,51,53,52,55,52,49,41,0,0,0,0,0};
static C_char C_TLS li376[] C_aligned={C_lihdr(0,0,26),40,109,109,58,99,104,97,110,45,115,101,116,33,32,109,52,55,51,51,32,99,52,55,51,52,41,0,0};
static C_char C_TLS li377[] C_aligned={C_lihdr(0,0,29),40,102,95,50,55,49,51,52,32,97,52,55,52,54,52,55,53,48,32,97,52,55,52,53,52,55,53,49,41,0,0,0,0,0};
static C_char C_TLS li378[] C_aligned={C_lihdr(0,0,14),40,109,109,58,107,101,121,32,109,52,55,52,52,41,0,0,0,0,0,0};
static C_char C_TLS li379[] C_aligned={C_lihdr(0,0,39),40,102,95,50,55,49,53,51,32,97,52,55,53,55,52,55,54,49,32,97,52,55,53,54,52,55,54,50,32,97,52,55,53,53,52,55,54,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li380[] C_aligned={C_lihdr(0,0,25),40,109,109,58,107,101,121,45,115,101,116,33,32,109,52,55,53,51,32,107,52,55,53,52,41,0};
static C_char C_TLS li381[] C_aligned={C_lihdr(0,0,29),40,102,95,50,55,49,55,54,32,97,52,55,54,56,52,55,55,50,32,97,52,55,54,55,52,55,55,51,41,0,0,0,0,0};
static C_char C_TLS li382[] C_aligned={C_lihdr(0,0,14),40,109,109,58,118,101,108,32,109,52,55,54,54,41,0,0,0,0,0,0};
static C_char C_TLS li383[] C_aligned={C_lihdr(0,0,39),40,102,95,50,55,49,57,53,32,97,52,55,55,57,52,55,56,51,32,97,52,55,55,56,52,55,56,52,32,97,52,55,55,55,52,55,56,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li384[] C_aligned={C_lihdr(0,0,25),40,109,109,58,118,101,108,45,115,101,116,33,32,109,52,55,55,53,32,118,52,55,55,54,41,0};
static C_char C_TLS li385[] C_aligned={C_lihdr(0,0,29),40,102,95,50,55,50,50,55,32,97,52,55,57,50,52,55,57,54,32,97,52,55,57,49,52,55,57,55,41,0,0,0,0,0};
static C_char C_TLS li386[] C_aligned={C_lihdr(0,0,29),40,102,95,50,55,50,52,51,32,97,52,56,48,48,52,56,48,52,32,97,52,55,57,57,52,56,48,53,41,0,0,0,0,0};
static C_char C_TLS li387[] C_aligned={C_lihdr(0,0,14),40,109,109,58,118,97,108,32,109,52,55,56,56,41,0,0,0,0,0,0};
static C_char C_TLS li388[] C_aligned={C_lihdr(0,0,39),40,102,95,50,55,50,55,52,32,97,52,56,49,51,52,56,49,55,32,97,52,56,49,50,52,56,49,56,32,97,52,56,49,49,52,56,49,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li389[] C_aligned={C_lihdr(0,0,39),40,102,95,50,55,50,57,52,32,97,52,56,50,51,52,56,50,55,32,97,52,56,50,50,52,56,50,56,32,97,52,56,50,49,52,56,50,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li390[] C_aligned={C_lihdr(0,0,25),40,109,109,58,118,97,108,45,115,101,116,33,32,109,52,56,48,55,32,118,52,56,48,56,41,0};
static C_char C_TLS li391[] C_aligned={C_lihdr(0,0,29),40,102,95,50,55,51,50,48,32,97,52,56,51,52,52,56,51,56,32,97,52,56,51,51,52,56,51,57,41,0,0,0,0,0};
static C_char C_TLS li392[] C_aligned={C_lihdr(0,0,14),40,109,109,58,110,117,109,32,109,52,56,51,50,41,0,0,0,0,0,0};
static C_char C_TLS li393[] C_aligned={C_lihdr(0,0,39),40,102,95,50,55,51,51,57,32,97,52,56,52,53,52,56,52,57,32,97,52,56,52,52,52,56,53,48,32,97,52,56,52,51,52,56,53,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li394[] C_aligned={C_lihdr(0,0,25),40,109,109,58,110,117,109,45,115,101,116,33,32,109,52,56,52,49,32,118,52,56,52,50,41,0};
static C_char C_TLS li395[] C_aligned={C_lihdr(0,0,59),40,102,95,50,55,51,54,50,32,97,52,56,54,51,52,56,54,54,32,97,52,56,54,50,52,56,54,55,32,97,52,56,54,49,52,56,54,56,32,97,52,56,54,48,52,56,54,57,32,97,52,56,53,57,52,56,55,48,41,0,0,0};
static C_char C_TLS li396[] C_aligned={C_lihdr(0,0,51),40,109,112,58,110,111,116,101,32,116,105,109,101,52,56,53,52,32,100,117,114,52,56,53,53,32,107,101,121,52,56,53,54,32,97,109,112,52,56,53,55,32,99,104,97,110,52,56,53,56,41,0,0,0};
static C_char C_TLS li397[] C_aligned={C_lihdr(0,0,59),40,102,95,50,55,51,57,48,32,97,52,56,56,48,52,56,56,51,32,97,52,56,55,57,52,56,56,52,32,97,52,56,55,56,52,56,56,53,32,97,52,56,55,55,52,56,56,54,32,97,52,56,55,54,52,56,56,55,41,0,0,0};
static C_char C_TLS li398[] C_aligned={C_lihdr(0,0,51),40,109,112,58,109,105,100,105,32,116,105,109,101,52,56,55,49,32,100,117,114,52,56,55,50,32,107,101,121,52,56,55,51,32,97,109,112,52,56,55,52,32,99,104,97,110,52,56,55,53,41,0,0,0};
static C_char C_TLS li399[] C_aligned={C_lihdr(0,0,59),40,102,95,50,55,52,49,56,32,97,52,56,57,53,52,56,57,56,32,97,52,56,57,52,52,56,57,57,32,97,52,56,57,51,52,57,48,48,32,97,52,56,57,50,52,57,48,49,32,97,52,56,57,49,52,57,48,50,41,0,0,0};
static C_char C_TLS li400[] C_aligned={C_lihdr(0,0,34),40,109,112,58,111,102,102,32,116,105,109,101,52,56,56,56,32,107,101,121,52,56,56,57,32,99,104,97,110,52,56,57,48,41,0,0};
static C_char C_TLS li401[] C_aligned={C_lihdr(0,0,59),40,102,95,50,55,52,52,54,32,97,52,57,49,49,52,57,49,52,32,97,52,57,49,48,52,57,49,53,32,97,52,57,48,57,52,57,49,54,32,97,52,57,48,56,52,57,49,55,32,97,52,57,48,55,52,57,49,56,41,0,0,0};
static C_char C_TLS li402[] C_aligned={C_lihdr(0,0,41),40,109,112,58,111,110,32,116,105,109,101,52,57,48,51,32,107,101,121,52,57,48,52,32,118,101,108,52,57,48,53,32,99,104,97,110,52,57,48,54,41,0};
static C_char C_TLS li403[] C_aligned={C_lihdr(0,0,59),40,102,95,50,55,52,55,52,32,97,52,57,50,55,52,57,51,48,32,97,52,57,50,54,52,57,51,49,32,97,52,57,50,53,52,57,51,50,32,97,52,57,50,52,52,57,51,51,32,97,52,57,50,51,52,57,51,52,41,0,0,0};
static C_char C_TLS li404[] C_aligned={C_lihdr(0,0,44),40,109,112,58,116,111,117,99,104,32,116,105,109,101,52,57,49,57,32,107,101,121,52,57,50,48,32,118,97,108,52,57,50,49,32,99,104,97,110,52,57,50,50,41,0,0,0,0};
static C_char C_TLS li405[] C_aligned={C_lihdr(0,0,59),40,102,95,50,55,53,48,50,32,97,52,57,52,51,52,57,52,54,32,97,52,57,52,50,52,57,52,55,32,97,52,57,52,49,52,57,52,56,32,97,52,57,52,48,52,57,52,57,32,97,52,57,51,57,52,57,53,48,41,0,0,0};
static C_char C_TLS li406[] C_aligned={C_lihdr(0,0,43),40,109,112,58,99,116,114,108,32,116,105,109,101,52,57,51,53,32,110,117,109,52,57,51,54,32,118,97,108,52,57,51,55,32,99,104,97,110,52,57,51,56,41,0,0,0};
static C_char C_TLS li407[] C_aligned={C_lihdr(0,0,59),40,102,95,50,55,53,51,48,32,97,52,57,53,56,52,57,54,49,32,97,52,57,53,55,52,57,54,50,32,97,52,57,53,54,52,57,54,51,32,97,52,57,53,53,52,57,54,52,32,97,52,57,53,52,52,57,54,53,41,0,0,0};
static C_char C_TLS li408[] C_aligned={C_lihdr(0,0,35),40,109,112,58,112,114,111,103,32,116,105,109,101,52,57,53,49,32,118,97,108,52,57,53,50,32,99,104,97,110,52,57,53,51,41,0,0,0};
static C_char C_TLS li409[] C_aligned={C_lihdr(0,0,59),40,102,95,50,55,53,53,56,32,97,52,57,55,51,52,57,55,54,32,97,52,57,55,50,52,57,55,55,32,97,52,57,55,49,52,57,55,56,32,97,52,57,55,48,52,57,55,57,32,97,52,57,54,57,52,57,56,48,41,0,0,0};
static C_char C_TLS li410[] C_aligned={C_lihdr(0,0,36),40,109,112,58,112,114,101,115,115,32,116,105,109,101,52,57,54,54,32,118,97,108,52,57,54,55,32,99,104,97,110,52,57,54,56,41,0,0,0,0};
static C_char C_TLS li411[] C_aligned={C_lihdr(0,0,59),40,102,95,50,55,53,56,54,32,97,52,57,56,56,52,57,57,49,32,97,52,57,56,55,52,57,57,50,32,97,52,57,56,54,52,57,57,51,32,97,52,57,56,53,52,57,57,52,32,97,52,57,56,52,52,57,57,53,41,0,0,0};
static C_char C_TLS li412[] C_aligned={C_lihdr(0,0,35),40,109,112,58,98,101,110,100,32,116,105,109,101,52,57,56,49,32,118,97,108,52,57,56,50,32,99,104,97,110,52,57,56,51,41,0,0,0};
static C_char C_TLS li413[] C_aligned={C_lihdr(0,0,19),40,102,95,50,55,54,49,52,32,97,52,57,57,55,53,48,48,49,41,0,0,0};
static C_char C_TLS li414[] C_aligned={C_lihdr(0,0,15),40,109,112,58,109,109,32,112,116,114,52,57,57,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li415[] C_aligned={C_lihdr(0,0,17),40,97,50,55,54,52,55,32,37,101,114,114,53,48,49,48,41,0};
static C_char C_TLS li416[] C_aligned={C_lihdr(0,0,8),40,97,50,55,54,54,55,41};
static C_char C_TLS li417[] C_aligned={C_lihdr(0,0,18),40,97,50,55,54,52,49,32,37,99,111,110,116,53,48,48,57,41,0,0};
static C_char C_TLS li418[] C_aligned={C_lihdr(0,0,17),40,97,50,55,54,51,53,32,37,109,115,103,53,48,48,56,41,0};
static C_char C_TLS li419[] C_aligned={C_lihdr(0,0,19),40,102,95,50,55,54,55,51,32,97,53,48,48,52,53,48,48,55,41,0,0,0};
static C_char C_TLS li420[] C_aligned={C_lihdr(0,0,19),40,102,95,50,55,54,55,56,32,97,53,48,49,51,53,48,49,54,41,0,0,0};
static C_char C_TLS li421[] C_aligned={C_lihdr(0,0,21),40,109,112,58,105,110,104,111,111,107,32,37,104,111,111,107,53,48,48,51,41,0,0,0,0,0};
static C_char C_TLS li422[] C_aligned={C_lihdr(0,0,39),40,102,95,50,55,55,51,53,32,97,53,48,54,57,53,48,55,50,32,97,53,48,54,56,53,48,55,51,32,97,53,48,54,55,53,48,55,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li423[] C_aligned={C_lihdr(0,0,17),40,99,115,58,105,32,46,32,97,114,103,115,53,48,54,54,41,0};
static C_char C_TLS li424[] C_aligned={C_lihdr(0,0,39),40,102,95,50,55,55,57,50,32,97,53,48,56,48,53,48,56,51,32,97,53,48,55,57,53,48,56,52,32,97,53,48,55,56,53,48,56,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li425[] C_aligned={C_lihdr(0,0,17),40,99,115,58,102,32,46,32,97,114,103,115,53,48,55,55,41,0};
static C_char C_TLS li426[] C_aligned={C_lihdr(0,0,9),40,102,95,50,55,56,51,51,41,0};
static C_char C_TLS li427[] C_aligned={C_lihdr(0,0,10),40,99,115,58,99,108,101,97,114,41,0,0};
static C_char C_TLS li428[] C_aligned={C_lihdr(0,0,14),40,100,111,53,49,49,48,32,120,53,49,49,50,41,0,0,0,0,0,0};
static C_char C_TLS li429[] C_aligned={C_lihdr(0,0,26),40,100,111,53,48,57,54,32,101,53,49,48,55,32,118,53,49,48,56,32,121,53,49,48,57,41,0,0};
static C_char C_TLS li430[] C_aligned={C_lihdr(0,0,18),40,99,109,45,108,111,103,111,32,118,101,114,115,53,48,57,53,41,0,0};
static C_char C_TLS li431[] C_aligned={C_lihdr(0,0,25),40,112,114,105,110,116,45,109,101,115,115,97,103,101,32,97,53,49,50,49,53,49,50,53,41,0};
static C_char C_TLS li432[] C_aligned={C_lihdr(0,0,23),40,112,114,105,110,116,45,101,114,114,111,114,32,97,53,49,50,55,53,49,51,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li433[] C_aligned={C_lihdr(0,0,27),40,99,117,114,114,101,110,116,45,116,105,109,101,45,109,105,108,108,105,115,101,99,111,110,100,115,41,0,0,0};
static C_char C_TLS li434[] C_aligned={C_lihdr(0,0,22),40,99,117,114,114,101,110,116,45,116,105,109,101,45,115,101,99,111,110,100,115,41,0,0,0,0,0,0};
static C_char C_TLS li435[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li436[] C_aligned={C_lihdr(0,0,43),40,115,99,104,101,100,117,108,101,114,45,115,101,116,45,116,105,109,101,45,109,105,108,108,105,115,101,99,111,110,100,115,32,97,53,49,52,51,53,49,52,54,41,0,0,0};
static C_char C_TLS li437[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li438[] C_aligned={C_lihdr(0,0,48),40,115,99,104,101,100,117,108,101,114,45,115,112,114,111,117,116,32,97,53,49,53,49,53,49,53,52,32,97,53,49,53,48,53,49,53,53,32,97,53,49,52,57,53,49,53,54,41};
static C_char C_TLS li439[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li440[] C_aligned={C_lihdr(0,0,26),40,115,99,104,101,100,117,108,101,114,45,115,116,111,112,32,97,53,49,55,49,53,49,55,52,41,0,0};
static C_char C_TLS li441[] C_aligned={C_lihdr(0,0,19),40,102,95,50,56,49,53,56,32,97,53,49,56,50,53,49,56,54,41,0,0,0};
static C_char C_TLS li442[] C_aligned={C_lihdr(0,0,24),40,108,111,97,100,45,115,97,108,45,102,105,108,101,32,102,105,108,101,53,49,56,49,41};
static C_char C_TLS li443[] C_aligned={C_lihdr(0,0,11),40,110,101,120,116,115,116,97,114,116,41,0,0,0};
static C_char C_TLS li444[] C_aligned={C_lihdr(0,0,8),40,110,101,120,116,105,100,41};
static C_char C_TLS li445[] C_aligned={C_lihdr(0,0,14),40,100,111,53,50,48,54,32,112,53,50,48,56,41,0,0,0,0,0,0};
static C_char C_TLS li446[] C_aligned={C_lihdr(0,0,27),40,98,111,100,121,53,49,57,50,32,115,116,97,114,116,53,49,57,56,32,105,100,53,49,57,57,41,0,0,0};
static C_char C_TLS li447[] C_aligned={C_lihdr(0,0,27),40,100,101,102,45,105,100,53,49,57,53,32,37,115,116,97,114,116,53,49,57,48,53,50,49,52,41,0,0,0};
static C_char C_TLS li448[] C_aligned={C_lihdr(0,0,15),40,100,101,102,45,115,116,97,114,116,53,49,57,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li449[] C_aligned={C_lihdr(0,0,28),40,115,112,114,111,117,116,32,112,114,111,99,53,49,56,56,32,46,32,97,114,103,115,53,49,56,57,41,0,0,0,0};
static C_char C_TLS li450[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li451[] C_aligned={C_lihdr(0,0,23),40,116,105,109,101,45,102,111,114,109,97,116,32,46,32,97,114,103,53,50,50,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li452[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li453[] C_aligned={C_lihdr(0,0,7),40,112,97,117,115,101,41,0,0,0,0,0,0,0};
static C_char C_TLS li454[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li455[] C_aligned={C_lihdr(0,0,9),40,112,97,117,115,101,100,63,41,0};
static C_char C_TLS li456[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li457[] C_aligned={C_lihdr(0,0,6),40,99,111,110,116,41,0,0,0,0,0,0};
static C_char C_TLS li458[] C_aligned={C_lihdr(0,0,17),40,100,111,53,50,51,53,32,116,97,105,108,53,50,51,55,41,0};
static C_char C_TLS li459[] C_aligned={C_lihdr(0,0,19),40,115,116,111,112,32,46,32,112,114,111,99,105,100,53,50,51,52,41,0,0,0};
static C_char C_TLS li460[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li461[] C_aligned={C_lihdr(0,0,6),40,104,117,115,104,41,0,0,0,0,0,0};
static C_char C_TLS li462[] C_aligned={C_lihdr(0,0,17),40,100,111,53,50,54,55,32,100,101,99,108,53,50,54,57,41,0};
static C_char C_TLS li463[] C_aligned={C_lihdr(0,0,17),40,100,111,53,50,53,49,32,116,97,105,108,53,50,53,51,41,0};
static C_char C_TLS li464[] C_aligned={C_lihdr(0,0,46),40,97,50,56,57,53,53,32,98,105,110,100,105,110,103,115,53,50,52,50,32,116,101,114,109,105,110,97,116,101,53,50,52,51,32,46,32,98,111,100,121,53,50,52,52,41,0,0,0,0,0,0};
static C_char C_TLS li465[] C_aligned={C_lihdr(0,0,17),40,97,50,56,57,54,49,32,97,114,103,115,51,56,54,50,41,0};
static C_char C_TLS li466[] C_aligned={C_lihdr(0,0,16),40,97,50,57,49,48,51,32,115,121,109,51,49,55,53,41};
static C_char C_TLS li467[] C_aligned={C_lihdr(0,0,16),40,97,50,57,49,48,54,32,115,121,109,51,49,55,51,41};
static C_char C_TLS li468[] C_aligned={C_lihdr(0,0,24),40,97,50,57,49,51,53,32,118,97,108,51,49,55,49,32,115,121,109,51,49,55,50,41};
static C_char C_TLS li469[] C_aligned={C_lihdr(0,0,17),40,97,50,57,49,52,57,32,97,114,103,115,51,49,55,48,41,0};
static C_char C_TLS li470[] C_aligned={C_lihdr(0,0,26),40,97,50,57,49,54,51,32,97,114,103,115,50,57,55,56,32,101,114,114,102,50,57,55,57,41,0,0};
static C_char C_TLS li471[] C_aligned={C_lihdr(0,0,35),40,97,50,57,49,55,55,32,117,110,105,116,50,57,56,48,32,105,110,102,111,50,57,56,49,32,101,114,114,102,50,57,56,50,41,0,0,0};
static C_char C_TLS li472[] C_aligned={C_lihdr(0,0,26),40,97,50,57,50,56,51,32,97,114,103,115,50,57,50,55,32,101,114,114,102,50,57,50,56,41,0,0};
static C_char C_TLS li473[] C_aligned={C_lihdr(0,0,17),40,100,111,50,57,51,57,32,114,101,115,116,50,57,52,49,41,0};
static C_char C_TLS li474[] C_aligned={C_lihdr(0,0,26),40,100,111,50,57,54,53,32,97,114,103,115,50,57,54,55,32,116,97,105,108,50,57,54,56,41,0,0};
static C_char C_TLS li475[] C_aligned={C_lihdr(0,0,35),40,97,50,57,51,50,50,32,117,110,105,116,50,57,51,50,32,105,110,102,111,50,57,51,51,32,101,114,114,102,50,57,51,52,41,0,0,0};
static C_char C_TLS li476[] C_aligned={C_lihdr(0,0,26),40,97,50,57,55,52,48,32,97,114,103,115,50,57,50,48,32,101,114,114,102,50,57,50,49,41,0,0};
static C_char C_TLS li477[] C_aligned={C_lihdr(0,0,26),40,97,50,57,56,56,53,32,97,114,103,115,50,57,48,54,32,101,114,114,102,50,57,48,55,41,0,0};
static C_char C_TLS li478[] C_aligned={C_lihdr(0,0,17),40,100,111,50,56,56,51,32,116,97,105,108,50,56,56,53,41,0};
static C_char C_TLS li479[] C_aligned={C_lihdr(0,0,17),40,100,111,50,56,55,56,32,116,97,105,108,50,56,56,48,41,0};
static C_char C_TLS li480[] C_aligned={C_lihdr(0,0,20),40,100,111,50,56,54,55,32,99,108,97,117,115,101,115,50,56,54,57,41,0,0,0,0};
static C_char C_TLS li481[] C_aligned={C_lihdr(0,0,17),40,100,111,50,56,54,52,32,116,97,105,108,50,56,54,54,41,0};
static C_char C_TLS li482[] C_aligned={C_lihdr(0,0,35),40,97,50,57,57,51,49,32,117,110,105,116,50,57,49,54,32,105,110,102,111,50,57,49,55,32,101,114,114,102,50,57,49,56,41,0,0,0};
static C_char C_TLS li483[] C_aligned={C_lihdr(0,0,26),40,97,51,48,51,56,53,32,97,114,103,115,50,55,56,48,32,101,114,114,102,50,55,56,49,41,0,0};
static C_char C_TLS li484[] C_aligned={C_lihdr(0,0,35),40,97,51,48,52,53,51,32,117,110,105,116,50,55,57,50,32,105,110,102,111,50,55,57,51,32,101,114,114,102,50,55,57,52,41,0,0,0};
static C_char C_TLS li485[] C_aligned={C_lihdr(0,0,26),40,97,51,48,53,56,50,32,97,114,103,115,50,55,54,56,32,101,114,114,102,50,55,54,57,41,0,0};
static C_char C_TLS li486[] C_aligned={C_lihdr(0,0,35),40,97,51,48,54,48,56,32,117,110,105,116,50,55,55,51,32,105,110,102,111,50,55,55,52,32,101,114,114,102,50,55,55,53,41,0,0,0};
static C_char C_TLS li487[] C_aligned={C_lihdr(0,0,26),40,97,51,48,54,57,54,32,97,114,103,115,50,55,52,54,32,101,114,114,102,50,55,52,55,41,0,0};
static C_char C_TLS li488[] C_aligned={C_lihdr(0,0,17),40,100,111,50,55,53,52,32,105,116,101,114,50,55,53,54,41,0};
static C_char C_TLS li489[] C_aligned={C_lihdr(0,0,35),40,97,51,48,55,51,57,32,117,110,105,116,50,55,52,56,32,105,110,102,111,50,55,52,57,32,101,114,114,102,50,55,53,48,41,0,0,0};
static C_char C_TLS li490[] C_aligned={C_lihdr(0,0,26),40,97,51,48,57,55,54,32,97,114,103,115,50,55,52,51,32,101,114,114,102,50,55,52,52,41,0,0};
static C_char C_TLS li491[] C_aligned={C_lihdr(0,0,26),40,97,51,49,48,54,50,32,97,114,103,115,50,55,51,53,32,101,114,114,102,50,55,51,54,41,0,0};
static C_char C_TLS li492[] C_aligned={C_lihdr(0,0,14),40,97,51,49,49,49,52,32,101,50,55,52,49,41,0,0,0,0,0,0};
static C_char C_TLS li493[] C_aligned={C_lihdr(0,0,35),40,97,51,49,49,48,53,32,117,110,105,116,50,55,51,55,32,105,110,102,111,50,55,51,56,32,101,114,114,102,50,55,51,57,41,0,0,0};
static C_char C_TLS li494[] C_aligned={C_lihdr(0,0,26),40,97,51,49,49,54,52,32,97,114,103,115,50,55,50,56,32,101,114,114,102,50,55,50,57,41,0,0};
static C_char C_TLS li495[] C_aligned={C_lihdr(0,0,14),40,97,51,49,50,48,53,32,101,50,55,51,51,41,0,0,0,0,0,0};
static C_char C_TLS li496[] C_aligned={C_lihdr(0,0,35),40,97,51,49,49,57,57,32,117,110,105,116,50,55,51,48,32,105,110,102,111,50,55,51,49,32,101,114,114,102,50,55,51,50,41,0,0,0};
static C_char C_TLS li497[] C_aligned={C_lihdr(0,0,35),40,97,51,49,50,53,57,32,117,110,105,116,50,55,50,49,32,105,110,102,111,50,55,50,50,32,101,114,114,102,50,55,50,51,41,0,0,0};
static C_char C_TLS li498[] C_aligned={C_lihdr(0,0,35),40,97,51,49,51,50,48,32,117,110,105,116,50,55,49,53,32,105,110,102,111,50,55,49,54,32,101,114,114,102,50,55,49,55,41,0,0,0};
static C_char C_TLS li499[] C_aligned={C_lihdr(0,0,26),40,97,51,49,51,55,52,32,97,114,103,115,50,55,48,57,32,101,114,114,102,50,55,49,48,41,0,0};
static C_char C_TLS li500[] C_aligned={C_lihdr(0,0,35),40,97,51,49,52,48,52,32,117,110,105,116,50,55,49,49,32,105,110,102,111,50,55,49,50,32,101,114,114,102,50,55,49,51,41,0,0,0};
static C_char C_TLS li501[] C_aligned={C_lihdr(0,0,26),40,97,51,49,54,50,51,32,97,114,103,115,50,55,48,50,32,101,114,114,102,50,55,48,51,41,0,0};
static C_char C_TLS li502[] C_aligned={C_lihdr(0,0,26),40,97,51,49,54,52,57,32,97,114,103,115,50,54,56,57,32,101,114,114,102,50,54,57,48,41,0,0};
static C_char C_TLS li503[] C_aligned={C_lihdr(0,0,27),40,97,51,49,55,51,48,32,115,116,114,50,54,57,57,32,46,32,97,114,103,115,50,55,48,48,41,0,0,0};
static C_char C_TLS li504[] C_aligned={C_lihdr(0,0,35),40,97,51,49,55,49,48,32,117,110,105,116,50,54,57,52,32,105,110,102,111,50,54,57,53,32,101,114,114,102,50,54,57,54,41,0,0,0};
static C_char C_TLS li505[] C_aligned={C_lihdr(0,0,26),40,97,51,49,56,52,56,32,97,114,103,115,50,54,56,50,32,101,114,114,102,50,54,56,51,41,0,0};
static C_char C_TLS li506[] C_aligned={C_lihdr(0,0,35),40,97,51,49,56,55,48,32,117,110,105,116,50,54,56,52,32,105,110,102,111,50,54,56,53,32,101,114,114,102,50,54,56,54,41,0,0,0};
static C_char C_TLS li507[] C_aligned={C_lihdr(0,0,26),40,97,51,49,57,50,51,32,97,114,103,115,50,54,54,56,32,101,114,114,102,50,54,54,57,41,0,0};
static C_char C_TLS li508[] C_aligned={C_lihdr(0,0,17),40,100,111,50,54,55,53,32,97,114,103,115,50,54,55,55,41,0};
static C_char C_TLS li509[] C_aligned={C_lihdr(0,0,35),40,97,51,49,57,52,53,32,117,110,105,116,50,54,55,48,32,105,110,102,111,50,54,55,49,32,101,114,114,102,50,54,55,50,41,0,0,0};
static C_char C_TLS li510[] C_aligned={C_lihdr(0,0,26),40,97,51,50,48,55,55,32,97,114,103,115,50,54,54,49,32,101,114,114,102,50,54,54,50,41,0,0};
static C_char C_TLS li511[] C_aligned={C_lihdr(0,0,35),40,97,51,50,49,48,51,32,117,110,105,116,50,54,54,51,32,105,110,102,111,50,54,54,52,32,101,114,114,102,50,54,54,53,41,0,0,0};
static C_char C_TLS li512[] C_aligned={C_lihdr(0,0,26),40,97,51,50,50,49,51,32,97,114,103,115,50,54,53,55,32,101,114,114,102,50,54,53,56,41,0,0};
static C_char C_TLS li513[] C_aligned={C_lihdr(0,0,26),40,97,51,50,51,54,57,32,97,114,103,115,50,54,50,48,32,101,114,114,102,50,54,50,49,41,0,0};
static C_char C_TLS li514[] C_aligned={C_lihdr(0,0,35),40,97,51,50,51,56,55,32,117,110,105,116,50,54,50,50,32,105,110,102,111,50,54,50,51,32,101,114,114,102,50,54,50,52,41,0,0,0};
static C_char C_TLS li515[] C_aligned={C_lihdr(0,0,26),40,97,51,50,52,52,48,32,97,114,103,115,50,54,49,52,32,101,114,114,102,50,54,49,53,41,0,0};
static C_char C_TLS li516[] C_aligned={C_lihdr(0,0,26),40,97,51,50,53,57,50,32,97,114,103,115,50,54,49,49,32,101,114,114,102,50,54,49,50,41,0,0};
static C_char C_TLS li517[] C_aligned={C_lihdr(0,0,26),40,97,51,50,55,51,49,32,97,114,103,115,50,54,48,56,32,101,114,114,102,50,54,48,57,41,0,0};
static C_char C_TLS li518[] C_aligned={C_lihdr(0,0,26),40,97,51,50,56,53,49,32,97,114,103,115,50,53,56,55,32,101,114,114,102,50,53,56,56,41,0,0};
static C_char C_TLS li519[] C_aligned={C_lihdr(0,0,35),40,97,51,50,56,56,50,32,117,110,105,116,50,53,57,48,32,105,110,102,111,50,53,57,49,32,101,114,114,102,50,53,57,50,41,0,0,0};
static C_char C_TLS li520[] C_aligned={C_lihdr(0,0,26),40,97,51,50,57,55,52,32,97,114,103,115,50,53,56,49,32,101,114,114,102,50,53,56,50,41,0,0};
static C_char C_TLS li521[] C_aligned={C_lihdr(0,0,35),40,97,51,50,57,57,50,32,117,110,105,116,50,53,56,51,32,105,110,102,111,50,53,56,52,32,101,114,114,102,50,53,56,53,41,0,0,0};
static C_char C_TLS li522[] C_aligned={C_lihdr(0,0,35),40,97,51,51,48,54,54,32,117,110,105,116,50,53,55,48,32,105,110,102,111,50,53,55,49,32,101,114,114,102,50,53,55,50,41,0,0,0};
static C_char C_TLS li523[] C_aligned={C_lihdr(0,0,26),40,97,51,51,49,54,50,32,97,114,103,115,50,53,53,56,32,101,114,114,102,50,53,53,57,41,0,0};
static C_char C_TLS li524[] C_aligned={C_lihdr(0,0,35),40,97,51,51,49,55,50,32,117,110,105,116,50,53,54,48,32,105,110,102,111,50,53,54,49,32,101,114,114,102,50,53,54,50,41,0,0,0};
static C_char C_TLS li525[] C_aligned={C_lihdr(0,0,20),40,97,51,51,51,52,56,32,117,50,50,48,56,32,112,50,50,48,57,41,0,0,0,0};
static C_char C_TLS li526[] C_aligned={C_lihdr(0,0,20),40,97,51,51,51,55,52,32,101,50,49,56,48,32,112,50,49,56,49,41,0,0,0,0};
static C_char C_TLS li527[] C_aligned={C_lihdr(0,0,12),40,112,112,97,116,32,112,50,49,52,51,41,0,0,0,0};
static C_char C_TLS li528[] C_aligned={C_lihdr(0,0,35),40,97,51,51,51,56,56,32,116,121,112,50,49,51,57,32,112,97,116,50,49,52,48,32,46,32,97,114,103,115,50,49,52,49,41,0,0,0};
static C_char C_TLS li529[] C_aligned={C_lihdr(0,0,20),40,97,51,51,52,57,49,32,114,50,49,51,54,32,112,50,49,51,55,41,0,0,0,0};
static C_char C_TLS li530[] C_aligned={C_lihdr(0,0,20),40,97,51,51,53,48,49,32,116,50,48,56,55,32,112,50,48,56,56,41,0,0,0,0};
static C_char C_TLS li531[] C_aligned={C_lihdr(0,0,71),40,100,111,53,50,53,32,100,53,50,55,32,107,53,50,56,32,112,53,50,57,32,107,60,53,51,48,32,107,62,53,51,49,32,102,53,51,50,32,102,62,53,51,51,32,102,60,53,51,52,32,111,53,51,53,32,120,53,51,54,32,110,53,51,55,32,101,53,51,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li532[] C_aligned={C_lihdr(0,0,14),40,100,111,53,49,57,32,107,101,121,53,50,49,41,0,0,0,0,0,0};
static C_char C_TLS li533[] C_aligned={C_lihdr(0,0,24),40,97,51,51,55,51,49,32,109,101,115,115,56,56,32,46,32,100,97,116,97,56,57,41};
static C_char C_TLS li534[] C_aligned={C_lihdr(0,0,22),40,97,51,51,55,51,55,32,102,117,110,99,51,56,32,105,110,102,111,51,57,41,0,0,0,0,0,0};
static C_char C_TLS li535[] C_aligned={C_lihdr(0,0,24),40,97,51,51,55,56,57,32,115,112,101,99,51,54,32,46,32,98,111,100,121,51,55,41};
static C_char C_TLS li536[] C_aligned={C_lihdr(0,0,10),40,116,111,112,108,101,118,101,108,41,0,0};


/* from k28161 */
static C_word C_fcall stub5183(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub5183(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
load_sal_file(t0);
return C_r;}

/* from k28146 in hush in k27841 in k27838 in k27835 in k27710 in k27707 in k27704 in k27701 in k27698 in k27695 in k27692 in k27689 in k27686 in k27683 in k27680 in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
C_noret_decl(stub5177)
static void C_ccall stub5177(C_word C_c,C_word C_self,C_word C_k,C_word C_buf) C_noret;
static void C_ccall stub5177(C_word C_c,C_word C_self,C_word C_k,C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int C_level=C_save_callback_continuation(&C_a,C_k);
scheduler_hush();
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from k28140 */
C_noret_decl(stub5172)
static void C_ccall stub5172(C_word C_c,C_word C_self,C_word C_k,C_word C_buf,C_word C_a0) C_noret;
static void C_ccall stub5172(C_word C_c,C_word C_self,C_word C_k,C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
int C_level=C_save_callback_continuation(&C_a,C_k);
scheduler_stop(t0);
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from k28124 in cont in k27841 in k27838 in k27835 in k27710 in k27707 in k27704 in k27701 in k27698 in k27695 in k27692 in k27689 in k27686 in k27683 in k27680 in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
C_noret_decl(stub5167)
static void C_ccall stub5167(C_word C_c,C_word C_self,C_word C_k,C_word C_buf) C_noret;
static void C_ccall stub5167(C_word C_c,C_word C_self,C_word C_k,C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int C_level=C_save_callback_continuation(&C_a,C_k);
scheduler_cont();
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from k28115 in pause in k27841 in k27838 in k27835 in k27710 in k27707 in k27704 in k27701 in k27698 in k27695 in k27692 in k27689 in k27686 in k27683 in k27680 in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
C_noret_decl(stub5163)
static void C_ccall stub5163(C_word C_c,C_word C_self,C_word C_k,C_word C_buf) C_noret;
static void C_ccall stub5163(C_word C_c,C_word C_self,C_word C_k,C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int C_level=C_save_callback_continuation(&C_a,C_k);
scheduler_pause();
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from k28106 in paused? in k27841 in k27838 in k27835 in k27710 in k27707 in k27704 in k27701 in k27698 in k27695 in k27692 in k27689 in k27686 in k27683 in k27680 in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
C_noret_decl(stub5159)
static void C_ccall stub5159(C_word C_c,C_word C_self,C_word C_k,C_word C_buf) C_noret;
static void C_ccall stub5159(C_word C_c,C_word C_self,C_word C_k,C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int C_level=C_save_callback_continuation(&C_a,C_k);
C_r=C_mk_bool(scheduler_is_paused());
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from k28100 */
C_noret_decl(stub5152)
static void C_ccall stub5152(C_word C_c,C_word C_self,C_word C_k,C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_noret;
static void C_ccall stub5152(C_word C_c,C_word C_self,C_word C_k,C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_word t0=(C_word )(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int C_level=C_save_callback_continuation(&C_a,C_k);
scheduler_sprout(t0,t1,t2);
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from k28080 in scheduler-set-time-milliseconds in k27841 in k27838 in k27835 in k27710 in k27707 in k27704 in k27701 in k27698 in k27695 in k27692 in k27689 in k27686 in k27683 in k27680 in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
C_noret_decl(stub5144)
static void C_ccall stub5144(C_word C_c,C_word C_self,C_word C_k,C_word C_buf,C_word C_a0) C_noret;
static void C_ccall stub5144(C_word C_c,C_word C_self,C_word C_k,C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_truep(C_a0);
int C_level=C_save_callback_continuation(&C_a,C_k);
scheduler_set_time_milliseconds(t0);
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from k28071 in time-format in k27841 in k27838 in k27835 in k27710 in k27707 in k27704 in k27701 in k27698 in k27695 in k27692 in k27689 in k27686 in k27683 in k27680 in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
C_noret_decl(stub5139)
static void C_ccall stub5139(C_word C_c,C_word C_self,C_word C_k,C_word C_buf) C_noret;
static void C_ccall stub5139(C_word C_c,C_word C_self,C_word C_k,C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int C_level=C_save_callback_continuation(&C_a,C_k);
C_r=C_mk_bool(scheduler_is_time_milliseconds());
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from current-time-seconds in k27841 in k27838 in k27835 in k27710 in k27707 in k27704 in k27701 in k27698 in k27695 in k27692 in k27689 in k27686 in k27683 in k27680 in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
#define return(x) C_cblock C_r = (C_flonum(&C_a,(x))); goto C_ret; C_cblockend
static C_word C_fcall stub5136(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub5136(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
 C_return( (Time::getMillisecondCounterHiRes() / 1000.0) );
C_ret:
#undef return

return C_r;}

/* from current-time-milliseconds in k27841 in k27838 in k27835 in k27710 in k27707 in k27704 in k27701 in k27698 in k27695 in k27692 in k27689 in k27686 in k27683 in k27680 in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
#define return(x) C_cblock C_r = (C_flonum(&C_a,(x))); goto C_ret; C_cblockend
static C_word C_fcall stub5133(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub5133(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
 C_return( Time::getMillisecondCounterHiRes());
C_ret:
#undef return

return C_r;}

/* from k28052 in print-error in k27841 in k27838 in k27835 in k27710 in k27707 in k27704 in k27701 in k27698 in k27695 in k27692 in k27689 in k27686 in k27683 in k27680 in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static C_word C_fcall stub5128(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub5128(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
print_error(t0);
return C_r;}

/* from k28038 in print-message in k27841 in k27838 in k27835 in k27710 in k27707 in k27704 in k27701 in k27698 in k27695 in k27692 in k27689 in k27686 in k27683 in k27680 in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static C_word C_fcall stub5122(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub5122(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
print_message(t0);
return C_r;}

/* from f_27833 in cs:clear in k27710 in k27707 in k27704 in k27701 in k27698 in k27695 in k27692 in k27689 in k27686 in k27683 in k27680 in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static C_word C_fcall stub5088(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub5088(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
cs_clear_score();
return C_r;}

/* from k27799 */
static C_word C_fcall stub5081(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub5081(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
int t1=(int )C_unfix(C_a1);
C_word t2=(C_word )(C_a2);
cs_send_score_event(t0,t1,t2);
return C_r;}

/* from k27742 */
static C_word C_fcall stub5070(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub5070(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
int t1=(int )C_unfix(C_a1);
C_word t2=(C_word )(C_a2);
cs_send_score_event(t0,t1,t2);
return C_r;}

/* from f_27678 in mp:inhook in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static C_word C_fcall stub5014(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub5014(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_word t0=(C_word )(C_a0);
set_input_hook(t0);
return C_r;}

/* from f_27673 in mp:inhook in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static C_word C_fcall stub5005(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub5005(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_word t0=(C_word )(C_a0);
set_input_hook(t0);
return C_r;}

/* from k27617 */
static C_word C_fcall stub4998(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub4998(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
mp_message(t0);
return C_r;}

/* from k27605 */
static C_word C_fcall stub4989(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub4989(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_data(t0,t1,t2,t3,t4);
return C_r;}

/* from k27577 */
static C_word C_fcall stub4974(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub4974(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_data(t0,t1,t2,t3,t4);
return C_r;}

/* from k27549 */
static C_word C_fcall stub4959(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub4959(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_data(t0,t1,t2,t3,t4);
return C_r;}

/* from k27521 */
static C_word C_fcall stub4944(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub4944(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_data(t0,t1,t2,t3,t4);
return C_r;}

/* from k27493 */
static C_word C_fcall stub4928(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub4928(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_data(t0,t1,t2,t3,t4);
return C_r;}

/* from k27465 */
static C_word C_fcall stub4912(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub4912(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_data(t0,t1,t2,t3,t4);
return C_r;}

/* from k27437 */
static C_word C_fcall stub4896(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub4896(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_data(t0,t1,t2,t3,t4);
return C_r;}

/* from k27409 */
static C_word C_fcall stub4881(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub4881(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
double t0=(double )C_c_double(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_note(t0,t1,t2,t3,t4);
return C_r;}

/* from k27381 */
static C_word C_fcall stub4864(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub4864(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
double t0=(double )C_c_double(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_note(t0,t1,t2,t3,t4);
return C_r;}

/* from k27350 */
static C_word C_fcall stub4846(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub4846(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
int t2=(int )C_unfix(C_a2);
mm_set_data(t0,t1,t2);
return C_r;}

/* from k27327 */
static C_word C_fcall stub4835(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub4835(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_fix((C_word)mm_data(t0,t1));
return C_r;}

/* from k27305 */
static C_word C_fcall stub4824(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub4824(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
int t2=(int )C_unfix(C_a2);
mm_set_data(t0,t1,t2);
return C_r;}

/* from k27285 */
static C_word C_fcall stub4814(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub4814(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
int t2=(int )C_unfix(C_a2);
mm_set_data(t0,t1,t2);
return C_r;}

/* from k27250 */
static C_word C_fcall stub4801(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub4801(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_fix((C_word)mm_data(t0,t1));
return C_r;}

/* from k27234 */
static C_word C_fcall stub4793(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub4793(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_fix((C_word)mm_data(t0,t1));
return C_r;}

/* from k27206 */
static C_word C_fcall stub4780(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub4780(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
int t2=(int )C_unfix(C_a2);
mm_set_data(t0,t1,t2);
return C_r;}

/* from k27183 */
static C_word C_fcall stub4769(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub4769(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_fix((C_word)mm_data(t0,t1));
return C_r;}

/* from k27164 */
static C_word C_fcall stub4758(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub4758(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
int t2=(int )C_unfix(C_a2);
mm_set_data(t0,t1,t2);
return C_r;}

/* from k27141 */
static C_word C_fcall stub4747(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub4747(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_fix((C_word)mm_data(t0,t1));
return C_r;}

/* from k27122 */
static C_word C_fcall stub4737(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub4737(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
mm_set_chan(t0,t1);
return C_r;}

/* from k27103 */
static C_word C_fcall stub4728(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub4728(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
C_r=C_fix((C_word)mm_chan(t0));
return C_r;}

/* from k27088 */
static C_word C_fcall stub4719(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub4719(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
double t1=(double )C_c_double(C_a1);
mm_set_time(t0,t1);
return C_r;}

/* from k27069 */
static C_word C_fcall stub4709(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub4709(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
C_r=C_flonum(&C_a,mm_time(t0));
return C_r;}

/* from k27054 */
static C_word C_fcall stub4701(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub4701(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
C_r=C_mpointer_or_false(&C_a,(void*)mm_copy(t0));
return C_r;}

/* from k27039 */
static C_word C_fcall stub4693(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub4693(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
mm_free(t0);
return C_r;}

/* from k27021 */
static C_word C_fcall stub4685(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub4685(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_mk_bool(mm_is_type(t0,t1));
return C_r;}

/* from k26594 */
static C_word C_fcall stub4670(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub4670(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
C_r=C_mpointer_or_false(&C_a,(void*)mm_make(t0,t1,t2,t3,t4));
return C_r;}

/* from k26551 */
static C_word C_fcall stub4591(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub4591(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_mk_bool(mm_is_type(t0,t1));
return C_r;}

/* from k26124 */
static C_word C_fcall stub4576(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub4576(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
C_r=C_mpointer_or_false(&C_a,(void*)mm_make(t0,t1,t2,t3,t4));
return C_r;}

/* from k26081 */
static C_word C_fcall stub4497(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub4497(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_mk_bool(mm_is_type(t0,t1));
return C_r;}

/* from k25654 */
static C_word C_fcall stub4482(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub4482(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
C_r=C_mpointer_or_false(&C_a,(void*)mm_make(t0,t1,t2,t3,t4));
return C_r;}

/* from k25611 */
static C_word C_fcall stub4403(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub4403(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_mk_bool(mm_is_type(t0,t1));
return C_r;}

/* from k24909 */
static C_word C_fcall stub4387(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub4387(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
C_r=C_mpointer_or_false(&C_a,(void*)mm_make(t0,t1,t2,t3,t4));
return C_r;}

/* from k24863 */
static C_word C_fcall stub4271(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub4271(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_mk_bool(mm_is_type(t0,t1));
return C_r;}

/* from k24161 */
static C_word C_fcall stub4255(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub4255(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
C_r=C_mpointer_or_false(&C_a,(void*)mm_make(t0,t1,t2,t3,t4));
return C_r;}

/* from k24115 */
static C_word C_fcall stub4139(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub4139(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_mk_bool(mm_is_type(t0,t1));
return C_r;}

/* from k23688 */
static C_word C_fcall stub4124(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub4124(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
C_r=C_mpointer_or_false(&C_a,(void*)mm_make(t0,t1,t2,t3,t4));
return C_r;}

/* from k23645 */
static C_word C_fcall stub4045(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub4045(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_mk_bool(mm_is_type(t0,t1));
return C_r;}

/* from k22943 */
static C_word C_fcall stub4029(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub4029(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
C_r=C_mpointer_or_false(&C_a,(void*)mm_make(t0,t1,t2,t3,t4));
return C_r;}

/* from tb:ranbrown in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static C_word C_fcall stub316(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub316(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,Toolbox::ranbrown());
return C_r;}

/* from tb:ranpink in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static C_word C_fcall stub313(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub313(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,Toolbox::ranpink());
return C_r;}

/* from k6704 */
static C_word C_fcall stub310(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub310(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_fix((C_word)Toolbox::ranpoisson(t0));
return C_r;}

/* from tb:rancauchy in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static C_word C_fcall stub306(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub306(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,Toolbox::rancauchy());
return C_r;}

/* from k6694 */
static C_word C_fcall stub302(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub302(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_flonum(&C_a,Toolbox::rangamma(t0));
return C_r;}

/* from k6687 */
static C_word C_fcall stub296(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub296(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
C_r=C_flonum(&C_a,Toolbox::ranbeta(t0,t1));
return C_r;}

/* from k6676 */
static C_word C_fcall stub290(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub290(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_flonum(&C_a,Toolbox::ranexp(t0));
return C_r;}

/* from k6669 */
static C_word C_fcall stub284(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub284(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
C_r=C_flonum(&C_a,Toolbox::rangauss(t0,t1));
return C_r;}

/* from tb:ranmiddle in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static C_word C_fcall stub279(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub279(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,Toolbox::ranmiddle());
return C_r;}

/* from tb:ranhigh in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static C_word C_fcall stub276(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub276(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,Toolbox::ranhigh());
return C_r;}

/* from tb:ranlow in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static C_word C_fcall stub273(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub273(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,Toolbox::ranlow());
return C_r;}

/* from k6649 */
static C_word C_fcall stub268(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub268(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
C_r=C_flonum(&C_a,Toolbox::ran(t0,t1));
return C_r;}

/* from k6638 */
static C_word C_fcall stub262(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub262(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_fix((C_word)Toolbox::ran(t0,t1));
return C_r;}

/* from k6627 */
static C_word C_fcall stub256(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub256(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_flonum(&C_a,Toolbox::ran(t0));
return C_r;}

/* from k6620 */
static C_word C_fcall stub252(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub252(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
C_r=C_fix((C_word)Toolbox::ran(t0));
return C_r;}

/* from tb:ran-set! in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static C_word C_fcall stub248(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub248(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_s64 t0=(C_s64 )C_num_to_int64(C_a0);
Toolbox::ranstate_set(t0);
return C_r;}

/* from k6610 */
static C_word C_fcall stub243(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub243(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_flonum(&C_a,Toolbox::hertz_to_keynum(t0));
return C_r;}

/* from k6603 */
static C_word C_fcall stub239(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub239(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_fix((C_word)Toolbox::keynum_to_pc(t0));
return C_r;}

/* from k6596 */
static C_word C_fcall stub234(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub234(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_flonum(&C_a,Toolbox::keynum_to_hertz(t0));
return C_r;}

/* from k6589 */
static C_word C_fcall stub230(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub230(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_fix((C_word)Toolbox::scaler_to_cents(t0));
return C_r;}

/* from k6582 */
static C_word C_fcall stub225(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub225(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
C_r=C_flonum(&C_a,Toolbox::cents_to_scaler(t0));
return C_r;}

/* from k6575 */
static C_word C_fcall stub218(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub218(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
C_r=C_flonum(&C_a,Toolbox::rhythm_to_seconds(t0,t1,t2));
return C_r;}

/* from k6560 */
static C_word C_fcall stub210(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub210(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
C_r=C_flonum(&C_a,Toolbox::quantize(t0,t1));
return C_r;}

/* from k6549 */
static C_word C_fcall stub203(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub203(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_flonum(&C_a,Toolbox::decimals(t0,t1));
return C_r;}

/* from k6538 */
static C_word C_fcall stub198(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub198(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_fix((C_word)Toolbox::float_to_fixnum(t0));
return C_r;}

/* from k6531 */
static C_word C_fcall stub189(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4,C_word C_a5) C_regparm;
C_regparm static C_word C_fcall stub189(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4,C_word C_a5){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
float t5=(float )C_c_double(C_a5);
C_r=C_fix((C_word)Toolbox::discrete(t0,t1,t2,t3,t4,t5));
return C_r;}

/* from k6504 */
static C_word C_fcall stub174(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4,C_word C_a5) C_regparm;
C_regparm static C_word C_fcall stub174(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4,C_word C_a5){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
float t5=(float )C_c_double(C_a5);
C_r=C_flonum(&C_a,Toolbox::rescale(t0,t1,t2,t3,t4,t5));
return C_r;}

/* from k5956 */
static C_word C_fcall stub95(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub95(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
set_current_directory(t0);
return C_r;}

/* from f_5938 in cwd in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static C_word C_fcall stub90(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub90(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_mpointer(&C_a,(void*)get_current_directory());
return C_r;}

C_noret_decl(C_grace_toplevel)
C_externexport void C_ccall C_grace_toplevel(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5331)
static void C_ccall f_5331(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5334)
static void C_ccall f_5334(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5337)
static void C_ccall f_5337(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5340)
static void C_ccall f_5340(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33790)
static void C_ccall f_33790(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_33790)
static void C_ccall f_33790r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_5631)
static void C_ccall f_5631(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5635)
static void C_ccall f_5635(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33738)
static void C_ccall f_33738(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_33785)
static void C_ccall f_33785(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33775)
static void C_ccall f_33775(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33742)
static void C_ccall f_33742(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5638)
static void C_ccall f_5638(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33732)
static void C_ccall f_33732(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_33732)
static void C_ccall f_33732r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_5931)
static void C_ccall f_5931(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8071)
static void C_ccall f_8071(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33516)
static void C_fcall f_33516(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_33730)
static void C_ccall f_33730(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33550)
static void C_ccall f_33550(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33562)
static void C_ccall f_33562(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33566)
static void C_ccall f_33566(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33570)
static void C_ccall f_33570(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33714)
static void C_ccall f_33714(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33576)
static void C_fcall f_33576(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7,C_word t8,C_word t9,C_word t10,C_word t11,C_word t12,C_word t13) C_noret;
C_noret_decl(f_33596)
static void C_fcall f_33596(C_word t0,C_word t1) C_noret;
C_noret_decl(f_33599)
static void C_fcall f_33599(C_word t0,C_word t1) C_noret;
C_noret_decl(f_33607)
static void C_ccall f_33607(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33614)
static void C_ccall f_33614(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33617)
static void C_ccall f_33617(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33621)
static void C_ccall f_33621(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33628)
static void C_ccall f_33628(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33631)
static void C_ccall f_33631(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33635)
static void C_ccall f_33635(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33642)
static void C_ccall f_33642(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33586)
static void C_ccall f_33586(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33539)
static void C_ccall f_33539(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33529)
static void C_ccall f_33529(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33532)
static void C_ccall f_33532(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8074)
static void C_ccall f_8074(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33502)
static void C_ccall f_33502(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_33510)
static void C_ccall f_33510(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33514)
static void C_ccall f_33514(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15809)
static void C_ccall f_15809(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15860)
static void C_ccall f_15860(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33492)
static void C_ccall f_33492(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_33500)
static void C_ccall f_33500(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15965)
static void C_ccall f_15965(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33389)
static void C_ccall f_33389(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...) C_noret;
C_noret_decl(f_33389)
static void C_ccall f_33389r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t5) C_noret;
C_noret_decl(f_33452)
static void C_ccall f_33452(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33456)
static void C_ccall f_33456(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33470)
static void C_fcall f_33470(C_word t0,C_word t1) C_noret;
C_noret_decl(f_33392)
static void C_fcall f_33392(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_33412)
static void C_ccall f_33412(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33416)
static void C_ccall f_33416(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15968)
static void C_ccall f_15968(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33375)
static void C_ccall f_33375(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_33383)
static void C_ccall f_33383(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33387)
static void C_ccall f_33387(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16161)
static void C_ccall f_16161(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33349)
static void C_ccall f_33349(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_33353)
static void C_ccall f_33353(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33359)
static void C_ccall f_33359(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33370)
static void C_ccall f_33370(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33366)
static void C_ccall f_33366(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16230)
static void C_ccall f_16230(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33327)
static void C_ccall f_33327(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17475)
static void C_ccall f_17475(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33307)
static void C_ccall f_33307(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17478)
static void C_ccall f_17478(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33267)
static void C_ccall f_33267(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17481)
static void C_ccall f_17481(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33173)
static void C_ccall f_33173(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_33177)
static void C_ccall f_33177(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33180)
static void C_ccall f_33180(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33198)
static void C_ccall f_33198(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33201)
static void C_ccall f_33201(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33232)
static void C_ccall f_33232(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33204)
static void C_fcall f_33204(C_word t0,C_word t1) C_noret;
C_noret_decl(f_33210)
static void C_ccall f_33210(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33163)
static void C_ccall f_33163(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_33157)
static void C_ccall f_33157(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17484)
static void C_ccall f_17484(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33065)
static void C_ccall f_33065(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33067)
static void C_ccall f_33067(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_33071)
static void C_ccall f_33071(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33074)
static void C_ccall f_33074(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33077)
static void C_ccall f_33077(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33117)
static void C_ccall f_33117(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33109)
static void C_ccall f_33109(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33080)
static void C_ccall f_33080(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33083)
static void C_ccall f_33083(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33086)
static void C_ccall f_33086(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33057)
static void C_ccall f_33057(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17487)
static void C_ccall f_17487(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33029)
static void C_ccall f_33029(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17490)
static void C_ccall f_17490(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32993)
static void C_ccall f_32993(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_33005)
static void C_ccall f_33005(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33001)
static void C_ccall f_33001(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32975)
static void C_ccall f_32975(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_32969)
static void C_ccall f_32969(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17493)
static void C_ccall f_17493(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32883)
static void C_ccall f_32883(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_32887)
static void C_ccall f_32887(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32890)
static void C_ccall f_32890(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32893)
static void C_ccall f_32893(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32906)
static void C_ccall f_32906(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32852)
static void C_ccall f_32852(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_32856)
static void C_ccall f_32856(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32871)
static void C_ccall f_32871(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32846)
static void C_ccall f_32846(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17496)
static void C_ccall f_17496(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32732)
static void C_ccall f_32732(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_32748)
static void C_ccall f_32748(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32759)
static void C_ccall f_32759(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32726)
static void C_ccall f_32726(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17552)
static void C_ccall f_17552(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32593)
static void C_ccall f_32593(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_32616)
static void C_ccall f_32616(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32613)
static void C_ccall f_32613(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32587)
static void C_ccall f_32587(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17555)
static void C_ccall f_17555(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32441)
static void C_ccall f_32441(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_32459)
static void C_ccall f_32459(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32468)
static void C_ccall f_32468(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32435)
static void C_ccall f_32435(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17558)
static void C_ccall f_17558(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32388)
static void C_ccall f_32388(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_32392)
static void C_ccall f_32392(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32395)
static void C_ccall f_32395(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32411)
static void C_ccall f_32411(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32370)
static void C_ccall f_32370(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_32364)
static void C_ccall f_32364(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17561)
static void C_ccall f_17561(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32288)
static void C_ccall f_32288(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17700)
static void C_ccall f_17700(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32214)
static void C_ccall f_32214(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_32221)
static void C_ccall f_32221(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32208)
static void C_ccall f_32208(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17703)
static void C_ccall f_17703(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32104)
static void C_ccall f_32104(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_32112)
static void C_ccall f_32112(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32078)
static void C_ccall f_32078(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_32095)
static void C_ccall f_32095(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32086)
static void C_fcall f_32086(C_word t0,C_word t1) C_noret;
C_noret_decl(f_32072)
static void C_ccall f_32072(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17706)
static void C_ccall f_17706(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32028)
static void C_ccall f_32028(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17709)
static void C_ccall f_17709(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31946)
static void C_ccall f_31946(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_31957)
static void C_ccall f_31957(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31959)
static void C_fcall f_31959(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_31988)
static void C_ccall f_31988(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31924)
static void C_ccall f_31924(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_31940)
static void C_ccall f_31940(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31918)
static void C_ccall f_31918(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17712)
static void C_ccall f_17712(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31871)
static void C_ccall f_31871(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_31875)
static void C_ccall f_31875(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31882)
static void C_ccall f_31882(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31849)
static void C_ccall f_31849(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_31865)
static void C_ccall f_31865(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31843)
static void C_ccall f_31843(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17715)
static void C_ccall f_17715(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31711)
static void C_ccall f_31711(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_31751)
static void C_ccall f_31751(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31715)
static void C_ccall f_31715(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31731)
static void C_ccall f_31731(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_31731)
static void C_ccall f_31731r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_31743)
static void C_ccall f_31743(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31747)
static void C_ccall f_31747(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31739)
static void C_ccall f_31739(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31650)
static void C_ccall f_31650(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_31697)
static void C_ccall f_31697(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31657)
static void C_fcall f_31657(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31668)
static void C_ccall f_31668(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31644)
static void C_ccall f_31644(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17718)
static void C_ccall f_17718(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31624)
static void C_ccall f_31624(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_31618)
static void C_ccall f_31618(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17721)
static void C_ccall f_17721(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31598)
static void C_ccall f_31598(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31602)
static void C_ccall f_31602(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31590)
static void C_ccall f_31590(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17724)
static void C_ccall f_17724(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31570)
static void C_ccall f_31570(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31574)
static void C_ccall f_31574(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31562)
static void C_ccall f_31562(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17727)
static void C_ccall f_17727(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31542)
static void C_ccall f_31542(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31546)
static void C_ccall f_31546(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31534)
static void C_ccall f_31534(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17730)
static void C_ccall f_17730(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31514)
static void C_ccall f_31514(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31518)
static void C_ccall f_31518(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31506)
static void C_ccall f_31506(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17733)
static void C_ccall f_17733(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31405)
static void C_ccall f_31405(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_31375)
static void C_ccall f_31375(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_31399)
static void C_ccall f_31399(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31369)
static void C_ccall f_31369(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17736)
static void C_ccall f_17736(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31319)
static void C_ccall f_31319(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31321)
static void C_ccall f_31321(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_31325)
static void C_ccall f_31325(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31353)
static void C_ccall f_31353(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31345)
static void C_ccall f_31345(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31341)
static void C_ccall f_31341(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31328)
static void C_ccall f_31328(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31311)
static void C_ccall f_31311(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17739)
static void C_ccall f_17739(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31258)
static void C_ccall f_31258(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31260)
static void C_ccall f_31260(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_31264)
static void C_ccall f_31264(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31295)
static void C_ccall f_31295(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31287)
static void C_ccall f_31287(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31283)
static void C_ccall f_31283(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31267)
static void C_ccall f_31267(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31270)
static void C_ccall f_31270(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31250)
static void C_ccall f_31250(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17742)
static void C_ccall f_17742(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31200)
static void C_ccall f_31200(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_31214)
static void C_ccall f_31214(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31206)
static void C_ccall f_31206(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_31165)
static void C_ccall f_31165(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_31198)
static void C_ccall f_31198(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31159)
static void C_ccall f_31159(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17745)
static void C_ccall f_17745(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31106)
static void C_ccall f_31106(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_31110)
static void C_ccall f_31110(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31123)
static void C_ccall f_31123(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31115)
static void C_ccall f_31115(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_31063)
static void C_ccall f_31063(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_31096)
static void C_ccall f_31096(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31057)
static void C_ccall f_31057(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17748)
static void C_ccall f_17748(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30977)
static void C_ccall f_30977(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_30971)
static void C_ccall f_30971(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17751)
static void C_ccall f_17751(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30740)
static void C_ccall f_30740(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_30744)
static void C_ccall f_30744(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30752)
static void C_fcall f_30752(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_30775)
static void C_ccall f_30775(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30778)
static void C_ccall f_30778(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30781)
static void C_ccall f_30781(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30784)
static void C_ccall f_30784(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30844)
static void C_ccall f_30844(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30851)
static void C_ccall f_30851(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30861)
static void C_ccall f_30861(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30871)
static void C_ccall f_30871(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30885)
static void C_ccall f_30885(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30895)
static void C_ccall f_30895(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30905)
static void C_ccall f_30905(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30915)
static void C_ccall f_30915(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30787)
static void C_fcall f_30787(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30811)
static void C_fcall f_30811(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30790)
static void C_fcall f_30790(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30697)
static void C_ccall f_30697(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_30730)
static void C_ccall f_30730(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30691)
static void C_ccall f_30691(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17754)
static void C_ccall f_17754(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30609)
static void C_ccall f_30609(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_30613)
static void C_ccall f_30613(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30619)
static void C_ccall f_30619(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30639)
static void C_ccall f_30639(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30583)
static void C_ccall f_30583(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_30593)
static void C_fcall f_30593(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30577)
static void C_ccall f_30577(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17757)
static void C_ccall f_17757(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30454)
static void C_ccall f_30454(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_30458)
static void C_ccall f_30458(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30386)
static void C_ccall f_30386(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_30405)
static void C_ccall f_30405(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30440)
static void C_ccall f_30440(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30411)
static void C_fcall f_30411(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30415)
static void C_ccall f_30415(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30429)
static void C_ccall f_30429(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30418)
static void C_fcall f_30418(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30399)
static void C_fcall f_30399(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30380)
static void C_ccall f_30380(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17760)
static void C_ccall f_17760(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30108)
static void C_ccall f_30108(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18283)
static void C_ccall f_18283(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30060)
static void C_ccall f_30060(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30052)
static void C_ccall f_30052(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18286)
static void C_ccall f_18286(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29932)
static void C_ccall f_29932(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_18292)
static void C_ccall f_18292(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18767)
static void C_ccall f_18767(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18801)
static void C_ccall f_18801(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18793)
static void C_ccall f_18793(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18789)
static void C_ccall f_18789(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18774)
static void C_ccall f_18774(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18778)
static void C_ccall f_18778(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18771)
static void C_ccall f_18771(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18310)
static void C_fcall f_18310(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18760)
static void C_ccall f_18760(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18756)
static void C_ccall f_18756(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18317)
static void C_fcall f_18317(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18631)
static void C_fcall f_18631(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18652)
static void C_ccall f_18652(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18654)
static void C_fcall f_18654(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18668)
static void C_ccall f_18668(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18721)
static void C_ccall f_18721(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18671)
static void C_fcall f_18671(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18706)
static void C_ccall f_18706(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18674)
static void C_fcall f_18674(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18687)
static void C_ccall f_18687(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18699)
static void C_ccall f_18699(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18691)
static void C_ccall f_18691(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18677)
static void C_fcall f_18677(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18641)
static void C_ccall f_18641(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18320)
static void C_ccall f_18320(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18595)
static void C_fcall f_18595(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18621)
static void C_ccall f_18621(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18606)
static void C_ccall f_18606(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18323)
static void C_ccall f_18323(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18327)
static void C_ccall f_18327(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18539)
static void C_fcall f_18539(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18549)
static void C_ccall f_18549(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18552)
static void C_ccall f_18552(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18573)
static void C_ccall f_18573(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18555)
static void C_fcall f_18555(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18559)
static void C_ccall f_18559(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18330)
static void C_ccall f_18330(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18333)
static void C_fcall f_18333(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18502)
static void C_ccall f_18502(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18510)
static void C_ccall f_18510(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18506)
static void C_ccall f_18506(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18336)
static void C_fcall f_18336(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18364)
static void C_ccall f_18364(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18367)
static void C_ccall f_18367(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18370)
static void C_ccall f_18370(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18373)
static void C_ccall f_18373(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18376)
static void C_ccall f_18376(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18435)
static void C_ccall f_18435(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29886)
static void C_ccall f_29886(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_29902)
static void C_ccall f_29902(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29905)
static void C_ccall f_29905(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29908)
static void C_fcall f_29908(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29911)
static void C_fcall f_29911(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29922)
static void C_ccall f_29922(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29880)
static void C_ccall f_29880(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18808)
static void C_ccall f_18808(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29741)
static void C_ccall f_29741(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_29780)
static void C_ccall f_29780(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29754)
static void C_fcall f_29754(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29735)
static void C_ccall f_29735(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18811)
static void C_ccall f_18811(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29323)
static void C_ccall f_29323(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_29327)
static void C_ccall f_29327(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29339)
static void C_ccall f_29339(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29397)
static void C_ccall f_29397(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29400)
static void C_ccall f_29400(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29403)
static void C_ccall f_29403(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29615)
static void C_ccall f_29615(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29553)
static void C_ccall f_29553(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29587)
static void C_ccall f_29587(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29562)
static void C_fcall f_29562(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29573)
static void C_ccall f_29573(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29569)
static void C_ccall f_29569(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29412)
static void C_fcall f_29412(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29490)
static void C_ccall f_29490(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29531)
static void C_ccall f_29531(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29535)
static void C_ccall f_29535(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29539)
static void C_ccall f_29539(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29494)
static void C_ccall f_29494(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29498)
static void C_ccall f_29498(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29525)
static void C_ccall f_29525(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29501)
static void C_fcall f_29501(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29415)
static void C_fcall f_29415(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29487)
static void C_ccall f_29487(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29429)
static void C_ccall f_29429(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29431)
static void C_fcall f_29431(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_29479)
static void C_ccall f_29479(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29450)
static void C_ccall f_29450(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29467)
static void C_ccall f_29467(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29453)
static void C_fcall f_29453(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29446)
static void C_ccall f_29446(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29418)
static void C_ccall f_29418(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29348)
static void C_fcall f_29348(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_29358)
static void C_ccall f_29358(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29364)
static void C_ccall f_29364(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29336)
static void C_ccall f_29336(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29284)
static void C_ccall f_29284(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_29301)
static void C_ccall f_29301(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29317)
static void C_ccall f_29317(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29295)
static void C_fcall f_29295(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29278)
static void C_ccall f_29278(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18814)
static void C_ccall f_18814(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29202)
static void C_ccall f_29202(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18817)
static void C_ccall f_18817(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29178)
static void C_ccall f_29178(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_29190)
static void C_ccall f_29190(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29186)
static void C_ccall f_29186(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29164)
static void C_ccall f_29164(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_29172)
static void C_ccall f_29172(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29158)
static void C_ccall f_29158(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18820)
static void C_ccall f_18820(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29150)
static void C_ccall f_29150(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_22584)
static void C_ccall f_22584(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22587)
static void C_ccall f_22587(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22753)
static void C_ccall f_22753(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22749)
static void C_ccall f_22749(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22739)
static void C_fcall f_22739(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22594)
static void C_ccall f_22594(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22598)
static void C_ccall f_22598(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22601)
static void C_fcall f_22601(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22612)
static void C_ccall f_22612(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22620)
static void C_ccall f_22620(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22692)
static void C_ccall f_22692(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22700)
static void C_ccall f_22700(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22696)
static void C_ccall f_22696(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22688)
static void C_ccall f_22688(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22684)
static void C_ccall f_22684(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22656)
static void C_ccall f_22656(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22652)
static void C_ccall f_22652(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22616)
static void C_ccall f_22616(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19231)
static void C_ccall f_19231(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29136)
static void C_ccall f_29136(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_19234)
static void C_ccall f_19234(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29107)
static void C_ccall f_29107(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_29111)
static void C_ccall f_29111(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19237)
static void C_ccall f_19237(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29104)
static void C_ccall f_29104(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19240)
static void C_ccall f_19240(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28962)
static void C_ccall f_28962(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_22766)
static void C_ccall f_22766(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22898)
static void C_ccall f_22898(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22769)
static void C_ccall f_22769(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22780)
static void C_ccall f_22780(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22788)
static void C_ccall f_22788(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22812)
static void C_ccall f_22812(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22815)
static void C_fcall f_22815(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22823)
static void C_ccall f_22823(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22831)
static void C_ccall f_22831(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22851)
static void C_ccall f_22851(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22847)
static void C_ccall f_22847(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22827)
static void C_ccall f_22827(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22819)
static void C_ccall f_22819(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22808)
static void C_ccall f_22808(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22784)
static void C_ccall f_22784(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22760)
static void C_ccall f_22760(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27682)
static void C_ccall f_27682(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27685)
static void C_ccall f_27685(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27688)
static void C_ccall f_27688(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27691)
static void C_ccall f_27691(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27694)
static void C_ccall f_27694(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27697)
static void C_ccall f_27697(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27700)
static void C_ccall f_27700(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27703)
static void C_ccall f_27703(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27706)
static void C_ccall f_27706(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27709)
static void C_ccall f_27709(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27712)
static void C_ccall f_27712(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27837)
static void C_ccall f_27837(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27840)
static void C_ccall f_27840(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27843)
static void C_ccall f_27843(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28956)
static void C_ccall f_28956(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...) C_noret;
C_noret_decl(f_28956)
static void C_ccall f_28956r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t5) C_noret;
C_noret_decl(f_28510)
static void C_ccall f_28510(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28513)
static void C_ccall f_28513(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28791)
static void C_fcall f_28791(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_28899)
static void C_ccall f_28899(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28811)
static void C_fcall f_28811(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28820)
static void C_fcall f_28820(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28824)
static void C_ccall f_28824(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28828)
static void C_ccall f_28828(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28836)
static void C_fcall f_28836(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28832)
static void C_ccall f_28832(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28801)
static void C_ccall f_28801(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28516)
static void C_ccall f_28516(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28519)
static void C_ccall f_28519(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28522)
static void C_ccall f_28522(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28525)
static void C_ccall f_28525(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28528)
static void C_ccall f_28528(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28785)
static void C_ccall f_28785(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28684)
static void C_fcall f_28684(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28691)
static void C_ccall f_28691(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28693)
static void C_fcall f_28693(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_28765)
static void C_ccall f_28765(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28717)
static void C_fcall f_28717(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28720)
static void C_ccall f_28720(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28741)
static void C_ccall f_28741(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28707)
static void C_ccall f_28707(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28531)
static void C_ccall f_28531(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28673)
static void C_ccall f_28673(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28661)
static void C_ccall f_28661(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28657)
static void C_ccall f_28657(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28538)
static void C_fcall f_28538(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28495)
static void C_ccall f_28495(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28954)
static void C_ccall f_28954(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28485)
static void C_ccall f_28485(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28148)
static void C_ccall f_28148(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28489)
static void C_ccall f_28489(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28427)
static void C_ccall f_28427(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_28427)
static void C_ccall f_28427r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_28445)
static void C_fcall f_28445(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_28455)
static void C_ccall f_28455(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28431)
static void C_ccall f_28431(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28418)
static void C_ccall f_28418(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28126)
static void C_ccall f_28126(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28422)
static void C_ccall f_28422(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28412)
static void C_ccall f_28412(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28108)
static void C_ccall f_28108(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28403)
static void C_ccall f_28403(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28117)
static void C_ccall f_28117(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28407)
static void C_ccall f_28407(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28340)
static void C_ccall f_28340(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_28340)
static void C_ccall f_28340r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_28365)
static void C_fcall f_28365(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28073)
static void C_ccall f_28073(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28353)
static void C_ccall f_28353(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28172)
static void C_ccall f_28172(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_28172)
static void C_ccall f_28172r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_28291)
static void C_fcall f_28291(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28286)
static void C_fcall f_28286(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_28174)
static void C_fcall f_28174(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_28281)
static void C_ccall f_28281(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28285)
static void C_ccall f_28285(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28277)
static void C_ccall f_28277(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28245)
static void C_fcall f_28245(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_28270)
static void C_ccall f_28270(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28274)
static void C_ccall f_28274(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28255)
static void C_ccall f_28255(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28234)
static void C_ccall f_28234(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28204)
static void C_fcall f_28204(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28176)
static void C_fcall f_28176(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28153)
static void C_ccall f_28153(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_28158)
static void C_ccall f_28158(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_28163)
static void C_ccall f_28163(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28131)
static void C_fcall f_28131(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28135)
static void C_ccall f_28135(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28087)
static void C_fcall f_28087(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_28091)
static void C_ccall f_28091(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28078)
static void C_fcall f_28078(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28082)
static void C_ccall f_28082(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28066)
static void C_ccall f_28066(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28063)
static void C_ccall f_28063(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28049)
static void C_ccall f_28049(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_28054)
static void C_ccall f_28054(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28035)
static void C_ccall f_28035(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_28040)
static void C_ccall f_28040(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27845)
static void C_ccall f_27845(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27906)
static void C_ccall f_27906(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27908)
static void C_fcall f_27908(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_27918)
static void C_ccall f_27918(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27937)
static void C_fcall f_27937(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27977)
static void C_ccall f_27977(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28019)
static void C_ccall f_28019(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27989)
static void C_ccall f_27989(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27974)
static void C_fcall f_27974(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27892)
static void C_ccall f_27892(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27857)
static void C_ccall f_27857(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27884)
static void C_ccall f_27884(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27865)
static void C_ccall f_27865(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27872)
static void C_ccall f_27872(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27876)
static void C_ccall f_27876(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27880)
static void C_ccall f_27880(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27957)
static void C_ccall f_27957(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27935)
static void C_ccall f_27935(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27921)
static void C_ccall f_27921(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27924)
static void C_ccall f_27924(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27899)
static void C_ccall f_27899(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27828)
static void C_ccall f_27828(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27833)
static void C_ccall f_27833(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27771)
static void C_ccall f_27771(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_27771)
static void C_ccall f_27771r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_27804)
static void C_fcall f_27804(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27784)
static void C_fcall f_27784(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27792)
static void C_ccall f_27792(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_27775)
static void C_ccall f_27775(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27714)
static void C_ccall f_27714(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_27714)
static void C_ccall f_27714r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_27747)
static void C_fcall f_27747(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27727)
static void C_fcall f_27727(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27735)
static void C_ccall f_27735(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_27718)
static void C_ccall f_27718(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27624)
static void C_ccall f_27624(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27678)
static void C_ccall f_27678(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27673)
static void C_ccall f_27673(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27636)
static void C_ccall f_27636(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27642)
static void C_ccall f_27642(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27668)
static void C_ccall f_27668(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27672)
static void C_ccall f_27672(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27648)
static void C_ccall f_27648(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27666)
static void C_ccall f_27666(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27663)
static void C_ccall f_27663(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27659)
static void C_ccall f_27659(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27652)
static void C_ccall f_27652(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27609)
static void C_ccall f_27609(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27614)
static void C_ccall f_27614(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27581)
static void C_ccall f_27581(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_27586)
static void C_ccall f_27586(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_27553)
static void C_ccall f_27553(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_27558)
static void C_ccall f_27558(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_27525)
static void C_ccall f_27525(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_27530)
static void C_ccall f_27530(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_27497)
static void C_ccall f_27497(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_27502)
static void C_ccall f_27502(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_27469)
static void C_ccall f_27469(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_27474)
static void C_ccall f_27474(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_27441)
static void C_ccall f_27441(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_27446)
static void C_ccall f_27446(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_27413)
static void C_ccall f_27413(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_27418)
static void C_ccall f_27418(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_27385)
static void C_ccall f_27385(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_27390)
static void C_ccall f_27390(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_27357)
static void C_ccall f_27357(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_27362)
static void C_ccall f_27362(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_27334)
static void C_ccall f_27334(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_27339)
static void C_ccall f_27339(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_27338)
static void C_ccall f_27338(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27315)
static void C_ccall f_27315(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27320)
static void C_ccall f_27320(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_27260)
static void C_ccall f_27260(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_27267)
static void C_ccall f_27267(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27270)
static void C_ccall f_27270(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27294)
static void C_ccall f_27294(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_27274)
static void C_ccall f_27274(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_27264)
static void C_ccall f_27264(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27213)
static void C_ccall f_27213(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27220)
static void C_ccall f_27220(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27223)
static void C_ccall f_27223(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27243)
static void C_ccall f_27243(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_27227)
static void C_ccall f_27227(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_27190)
static void C_ccall f_27190(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_27195)
static void C_ccall f_27195(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_27194)
static void C_ccall f_27194(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27171)
static void C_ccall f_27171(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27176)
static void C_ccall f_27176(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_27148)
static void C_ccall f_27148(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_27153)
static void C_ccall f_27153(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_27152)
static void C_ccall f_27152(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27129)
static void C_ccall f_27129(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27134)
static void C_ccall f_27134(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_27110)
static void C_ccall f_27110(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_27115)
static void C_ccall f_27115(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_27114)
static void C_ccall f_27114(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27095)
static void C_ccall f_27095(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27100)
static void C_ccall f_27100(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27076)
static void C_ccall f_27076(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_27081)
static void C_ccall f_27081(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_27080)
static void C_ccall f_27080(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27061)
static void C_ccall f_27061(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27066)
static void C_ccall f_27066(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27046)
static void C_ccall f_27046(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27051)
static void C_ccall f_27051(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27028)
static void C_ccall f_27028(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27036)
static void C_ccall f_27036(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27032)
static void C_ccall f_27032(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26558)
static void C_ccall f_26558(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_26558)
static void C_ccall f_26558r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_26986)
static void C_ccall f_26986(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27001)
static void C_ccall f_27001(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26993)
static void C_ccall f_26993(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26957)
static void C_ccall f_26957(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26961)
static void C_ccall f_26961(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26922)
static void C_ccall f_26922(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26926)
static void C_ccall f_26926(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26887)
static void C_ccall f_26887(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26891)
static void C_ccall f_26891(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26562)
static void C_fcall f_26562(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26851)
static void C_ccall f_26851(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26866)
static void C_ccall f_26866(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26858)
static void C_ccall f_26858(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26822)
static void C_ccall f_26822(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26826)
static void C_ccall f_26826(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26787)
static void C_ccall f_26787(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26791)
static void C_ccall f_26791(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26752)
static void C_ccall f_26752(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26756)
static void C_ccall f_26756(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26565)
static void C_fcall f_26565(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26716)
static void C_ccall f_26716(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26731)
static void C_ccall f_26731(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26723)
static void C_ccall f_26723(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26687)
static void C_ccall f_26687(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26691)
static void C_ccall f_26691(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26652)
static void C_ccall f_26652(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26656)
static void C_ccall f_26656(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26617)
static void C_ccall f_26617(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26621)
static void C_ccall f_26621(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26568)
static void C_fcall f_26568(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26571)
static void C_ccall f_26571(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26575)
static void C_ccall f_26575(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_26539)
static void C_ccall f_26539(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26544)
static void C_ccall f_26544(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_26088)
static void C_ccall f_26088(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_26088)
static void C_ccall f_26088r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_26516)
static void C_ccall f_26516(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26531)
static void C_ccall f_26531(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26523)
static void C_ccall f_26523(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26487)
static void C_ccall f_26487(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26491)
static void C_ccall f_26491(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26452)
static void C_ccall f_26452(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26456)
static void C_ccall f_26456(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26417)
static void C_ccall f_26417(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26421)
static void C_ccall f_26421(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26092)
static void C_fcall f_26092(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26381)
static void C_ccall f_26381(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26396)
static void C_ccall f_26396(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26388)
static void C_ccall f_26388(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26352)
static void C_ccall f_26352(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26356)
static void C_ccall f_26356(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26317)
static void C_ccall f_26317(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26321)
static void C_ccall f_26321(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26282)
static void C_ccall f_26282(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26286)
static void C_ccall f_26286(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26095)
static void C_fcall f_26095(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26246)
static void C_ccall f_26246(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26261)
static void C_ccall f_26261(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26253)
static void C_ccall f_26253(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26217)
static void C_ccall f_26217(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26221)
static void C_ccall f_26221(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26182)
static void C_ccall f_26182(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26186)
static void C_ccall f_26186(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26147)
static void C_ccall f_26147(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26151)
static void C_ccall f_26151(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26098)
static void C_fcall f_26098(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26101)
static void C_ccall f_26101(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26105)
static void C_ccall f_26105(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_26069)
static void C_ccall f_26069(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26074)
static void C_ccall f_26074(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_25618)
static void C_ccall f_25618(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_25618)
static void C_ccall f_25618r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_26046)
static void C_ccall f_26046(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26061)
static void C_ccall f_26061(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26053)
static void C_ccall f_26053(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26017)
static void C_ccall f_26017(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26021)
static void C_ccall f_26021(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25982)
static void C_ccall f_25982(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25986)
static void C_ccall f_25986(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25947)
static void C_ccall f_25947(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25951)
static void C_ccall f_25951(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25622)
static void C_fcall f_25622(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25911)
static void C_ccall f_25911(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25926)
static void C_ccall f_25926(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25918)
static void C_ccall f_25918(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25882)
static void C_ccall f_25882(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25886)
static void C_ccall f_25886(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25847)
static void C_ccall f_25847(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25851)
static void C_ccall f_25851(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25812)
static void C_ccall f_25812(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25816)
static void C_ccall f_25816(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25625)
static void C_fcall f_25625(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25776)
static void C_ccall f_25776(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25791)
static void C_ccall f_25791(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25783)
static void C_ccall f_25783(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25747)
static void C_ccall f_25747(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25751)
static void C_ccall f_25751(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25712)
static void C_ccall f_25712(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25716)
static void C_ccall f_25716(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25677)
static void C_ccall f_25677(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25681)
static void C_ccall f_25681(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25628)
static void C_fcall f_25628(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25631)
static void C_ccall f_25631(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25635)
static void C_ccall f_25635(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_25599)
static void C_ccall f_25599(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25604)
static void C_ccall f_25604(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_24870)
static void C_ccall f_24870(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_24870)
static void C_ccall f_24870r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_25576)
static void C_ccall f_25576(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25591)
static void C_ccall f_25591(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25583)
static void C_ccall f_25583(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25547)
static void C_ccall f_25547(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25551)
static void C_ccall f_25551(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25512)
static void C_ccall f_25512(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25516)
static void C_ccall f_25516(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25477)
static void C_ccall f_25477(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25481)
static void C_ccall f_25481(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25442)
static void C_ccall f_25442(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25446)
static void C_ccall f_25446(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24874)
static void C_fcall f_24874(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25406)
static void C_ccall f_25406(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25421)
static void C_ccall f_25421(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25413)
static void C_ccall f_25413(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25377)
static void C_ccall f_25377(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25381)
static void C_ccall f_25381(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25342)
static void C_ccall f_25342(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25346)
static void C_ccall f_25346(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25307)
static void C_ccall f_25307(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25311)
static void C_ccall f_25311(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25272)
static void C_ccall f_25272(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25276)
static void C_ccall f_25276(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24877)
static void C_fcall f_24877(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25236)
static void C_ccall f_25236(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25251)
static void C_ccall f_25251(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25243)
static void C_ccall f_25243(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25207)
static void C_ccall f_25207(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25211)
static void C_ccall f_25211(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25172)
static void C_ccall f_25172(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25176)
static void C_ccall f_25176(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25137)
static void C_ccall f_25137(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25141)
static void C_ccall f_25141(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25102)
static void C_ccall f_25102(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25106)
static void C_ccall f_25106(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24880)
static void C_fcall f_24880(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25066)
static void C_ccall f_25066(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25081)
static void C_ccall f_25081(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25073)
static void C_ccall f_25073(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25037)
static void C_ccall f_25037(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25041)
static void C_ccall f_25041(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25002)
static void C_ccall f_25002(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25006)
static void C_ccall f_25006(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24967)
static void C_ccall f_24967(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24971)
static void C_ccall f_24971(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24932)
static void C_ccall f_24932(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24936)
static void C_ccall f_24936(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24883)
static void C_fcall f_24883(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24886)
static void C_ccall f_24886(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24890)
static void C_ccall f_24890(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_24851)
static void C_ccall f_24851(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_24856)
static void C_ccall f_24856(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_24122)
static void C_ccall f_24122(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_24122)
static void C_ccall f_24122r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_24828)
static void C_ccall f_24828(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24843)
static void C_ccall f_24843(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24835)
static void C_ccall f_24835(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24799)
static void C_ccall f_24799(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24803)
static void C_ccall f_24803(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24764)
static void C_ccall f_24764(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24768)
static void C_ccall f_24768(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24729)
static void C_ccall f_24729(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24733)
static void C_ccall f_24733(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24694)
static void C_ccall f_24694(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24698)
static void C_ccall f_24698(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24126)
static void C_fcall f_24126(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24658)
static void C_ccall f_24658(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24673)
static void C_ccall f_24673(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24665)
static void C_ccall f_24665(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24629)
static void C_ccall f_24629(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24633)
static void C_ccall f_24633(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24594)
static void C_ccall f_24594(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24598)
static void C_ccall f_24598(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24559)
static void C_ccall f_24559(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24563)
static void C_ccall f_24563(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24524)
static void C_ccall f_24524(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24528)
static void C_ccall f_24528(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24129)
static void C_fcall f_24129(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24488)
static void C_ccall f_24488(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24503)
static void C_ccall f_24503(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24495)
static void C_ccall f_24495(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24459)
static void C_ccall f_24459(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24463)
static void C_ccall f_24463(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24424)
static void C_ccall f_24424(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24428)
static void C_ccall f_24428(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24389)
static void C_ccall f_24389(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24393)
static void C_ccall f_24393(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24354)
static void C_ccall f_24354(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24358)
static void C_ccall f_24358(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24132)
static void C_fcall f_24132(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24318)
static void C_ccall f_24318(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24333)
static void C_ccall f_24333(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24325)
static void C_ccall f_24325(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24289)
static void C_ccall f_24289(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24293)
static void C_ccall f_24293(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24254)
static void C_ccall f_24254(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24258)
static void C_ccall f_24258(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24219)
static void C_ccall f_24219(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24223)
static void C_ccall f_24223(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24184)
static void C_ccall f_24184(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24188)
static void C_ccall f_24188(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24135)
static void C_fcall f_24135(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24138)
static void C_ccall f_24138(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24142)
static void C_ccall f_24142(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_24103)
static void C_ccall f_24103(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_24108)
static void C_ccall f_24108(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_23652)
static void C_ccall f_23652(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_23652)
static void C_ccall f_23652r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_24080)
static void C_ccall f_24080(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24095)
static void C_ccall f_24095(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24087)
static void C_ccall f_24087(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24051)
static void C_ccall f_24051(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24055)
static void C_ccall f_24055(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24016)
static void C_ccall f_24016(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24020)
static void C_ccall f_24020(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23981)
static void C_ccall f_23981(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23985)
static void C_ccall f_23985(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23656)
static void C_fcall f_23656(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23945)
static void C_ccall f_23945(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23960)
static void C_ccall f_23960(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23952)
static void C_ccall f_23952(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23916)
static void C_ccall f_23916(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23920)
static void C_ccall f_23920(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23881)
static void C_ccall f_23881(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23885)
static void C_ccall f_23885(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23846)
static void C_ccall f_23846(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23850)
static void C_ccall f_23850(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23659)
static void C_fcall f_23659(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23810)
static void C_ccall f_23810(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23825)
static void C_ccall f_23825(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23817)
static void C_ccall f_23817(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23781)
static void C_ccall f_23781(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23785)
static void C_ccall f_23785(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23746)
static void C_ccall f_23746(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23750)
static void C_ccall f_23750(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23711)
static void C_ccall f_23711(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23715)
static void C_ccall f_23715(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23662)
static void C_fcall f_23662(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23665)
static void C_ccall f_23665(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23669)
static void C_ccall f_23669(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_23633)
static void C_ccall f_23633(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23638)
static void C_ccall f_23638(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_22904)
static void C_ccall f_22904(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_22904)
static void C_ccall f_22904r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_23610)
static void C_ccall f_23610(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23625)
static void C_ccall f_23625(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23617)
static void C_ccall f_23617(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23581)
static void C_ccall f_23581(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23585)
static void C_ccall f_23585(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23546)
static void C_ccall f_23546(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23550)
static void C_ccall f_23550(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23511)
static void C_ccall f_23511(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23515)
static void C_ccall f_23515(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23476)
static void C_ccall f_23476(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23480)
static void C_ccall f_23480(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22908)
static void C_fcall f_22908(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23440)
static void C_ccall f_23440(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23455)
static void C_ccall f_23455(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23447)
static void C_ccall f_23447(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23411)
static void C_ccall f_23411(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23415)
static void C_ccall f_23415(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23376)
static void C_ccall f_23376(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23380)
static void C_ccall f_23380(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23341)
static void C_ccall f_23341(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23345)
static void C_ccall f_23345(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23306)
static void C_ccall f_23306(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23310)
static void C_ccall f_23310(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22911)
static void C_fcall f_22911(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23270)
static void C_ccall f_23270(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23285)
static void C_ccall f_23285(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23277)
static void C_ccall f_23277(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23241)
static void C_ccall f_23241(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23245)
static void C_ccall f_23245(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23206)
static void C_ccall f_23206(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23210)
static void C_ccall f_23210(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23171)
static void C_ccall f_23171(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23175)
static void C_ccall f_23175(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23136)
static void C_ccall f_23136(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23140)
static void C_ccall f_23140(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22914)
static void C_fcall f_22914(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23100)
static void C_ccall f_23100(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23115)
static void C_ccall f_23115(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23107)
static void C_ccall f_23107(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23071)
static void C_ccall f_23071(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23075)
static void C_ccall f_23075(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23036)
static void C_ccall f_23036(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23040)
static void C_ccall f_23040(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23001)
static void C_ccall f_23001(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23005)
static void C_ccall f_23005(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22966)
static void C_ccall f_22966(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22970)
static void C_ccall f_22970(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22917)
static void C_fcall f_22917(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22920)
static void C_ccall f_22920(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22924)
static void C_ccall f_22924(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_22566)
static void C_fcall f_22566(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_22406)
static void C_fcall f_22406(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22441)
static void C_fcall f_22441(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_22451)
static void C_fcall f_22451(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22455)
static void C_ccall f_22455(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22458)
static void C_ccall f_22458(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22519)
static void C_ccall f_22519(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_22510)
static void C_ccall f_22510(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22461)
static void C_ccall f_22461(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22480)
static void C_ccall f_22480(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22487)
static void C_ccall f_22487(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22464)
static void C_ccall f_22464(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22470)
static void C_ccall f_22470(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22439)
static void C_ccall f_22439(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22414)
static void C_fcall f_22414(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_22413)
static void C_ccall f_22413(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22574)
static void C_fcall f_22574(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22152)
static void C_ccall f_22152(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_22174)
static void C_ccall f_22174(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22189)
static void C_ccall f_22189(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22192)
static void C_fcall f_22192(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22368)
static void C_ccall f_22368(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_22362)
static void C_ccall f_22362(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22195)
static void C_ccall f_22195(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22344)
static void C_ccall f_22344(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22198)
static void C_fcall f_22198(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22201)
static void C_ccall f_22201(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22337)
static void C_ccall f_22337(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22325)
static void C_ccall f_22325(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22221)
static void C_fcall f_22221(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22228)
static void C_ccall f_22228(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22298)
static void C_ccall f_22298(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_22284)
static void C_ccall f_22284(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22292)
static void C_ccall f_22292(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22231)
static void C_ccall f_22231(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22270)
static void C_ccall f_22270(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22234)
static void C_fcall f_22234(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22263)
static void C_ccall f_22263(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22240)
static void C_ccall f_22240(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22243)
static void C_ccall f_22243(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22247)
static void C_ccall f_22247(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22208)
static void C_fcall f_22208(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22211)
static void C_ccall f_22211(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22021)
static void C_fcall f_22021(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_22030)
static void C_fcall f_22030(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_21978)
static void C_ccall f_21978(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21984)
static void C_fcall f_21984(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22047)
static void C_ccall f_22047(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22133)
static void C_ccall f_22133(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_22120)
static void C_ccall f_22120(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22128)
static void C_ccall f_22128(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22050)
static void C_ccall f_22050(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22054)
static void C_ccall f_22054(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22097)
static void C_ccall f_22097(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22059)
static void C_ccall f_22059(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22025)
static void C_ccall f_22025(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21920)
static void C_ccall f_21920(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_21927)
static void C_ccall f_21927(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21958)
static void C_ccall f_21958(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21954)
static void C_ccall f_21954(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21946)
static void C_ccall f_21946(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21829)
static void C_ccall f_21829(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_21836)
static void C_ccall f_21836(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21904)
static void C_ccall f_21904(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21847)
static void C_fcall f_21847(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21874)
static void C_ccall f_21874(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21858)
static void C_ccall f_21858(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21763)
static void C_ccall f_21763(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_21774)
static void C_ccall f_21774(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21777)
static void C_fcall f_21777(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21784)
static void C_ccall f_21784(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21757)
static void C_ccall f_21757(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21211)
static void C_ccall f_21211(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_21242)
static void C_ccall f_21242(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21706)
static void C_ccall f_21706(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21712)
static void C_ccall f_21712(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21253)
static void C_ccall f_21253(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21138)
static void C_fcall f_21138(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21163)
static void C_ccall f_21163(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21098)
static void C_fcall f_21098(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21111)
static void C_fcall f_21111(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21152)
static void C_ccall f_21152(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21257)
static void C_ccall f_21257(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21694)
static void C_ccall f_21694(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21690)
static void C_fcall f_21690(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21686)
static void C_ccall f_21686(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21260)
static void C_ccall f_21260(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21480)
static void C_fcall f_21480(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21589)
static void C_ccall f_21589(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21654)
static void C_ccall f_21654(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21596)
static void C_fcall f_21596(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21600)
static void C_ccall f_21600(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21604)
static void C_ccall f_21604(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21646)
static void C_ccall f_21646(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21642)
static void C_ccall f_21642(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21620)
static void C_ccall f_21620(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21483)
static void C_fcall f_21483(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21486)
static void C_fcall f_21486(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21385)
static void C_ccall f_21385(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21468)
static void C_ccall f_21468(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21435)
static void C_ccall f_21435(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21461)
static void C_ccall f_21461(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21443)
static void C_ccall f_21443(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21391)
static void C_fcall f_21391(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21431)
static void C_ccall f_21431(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21373)
static void C_ccall f_21373(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21344)
static void C_ccall f_21344(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21366)
static void C_ccall f_21366(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21352)
static void C_ccall f_21352(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21306)
static void C_fcall f_21306(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21263)
static void C_fcall f_21263(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21274)
static void C_ccall f_21274(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21278)
static void C_ccall f_21278(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21282)
static void C_ccall f_21282(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21286)
static void C_ccall f_21286(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21270)
static void C_ccall f_21270(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21230)
static void C_fcall f_21230(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21225)
static void C_fcall f_21225(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21220)
static void C_fcall f_21220(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_21052)
static void C_ccall f_21052(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_21063)
static void C_ccall f_21063(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21078)
static void C_ccall f_21078(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21014)
static void C_ccall f_21014(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_21025)
static void C_ccall f_21025(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21040)
static void C_ccall f_21040(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20947)
static void C_ccall f_20947(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_20967)
static void C_fcall f_20967(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20977)
static void C_ccall f_20977(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20990)
static void C_ccall f_20990(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20958)
static void C_ccall f_20958(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20965)
static void C_ccall f_20965(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20754)
static void C_ccall f_20754(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_20814)
static void C_fcall f_20814(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_20824)
static void C_ccall f_20824(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20938)
static void C_ccall f_20938(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20903)
static void C_ccall f_20903(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20895)
static void C_ccall f_20895(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20866)
static void C_ccall f_20866(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20844)
static void C_ccall f_20844(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20847)
static void C_ccall f_20847(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20835)
static void C_ccall f_20835(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20761)
static void C_ccall f_20761(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20812)
static void C_ccall f_20812(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20804)
static void C_ccall f_20804(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20764)
static void C_ccall f_20764(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20775)
static void C_ccall f_20775(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20779)
static void C_ccall f_20779(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20771)
static void C_ccall f_20771(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20612)
static void C_ccall f_20612(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_20660)
static void C_fcall f_20660(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20670)
static void C_ccall f_20670(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20681)
static void C_ccall f_20681(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20718)
static void C_ccall f_20718(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20693)
static void C_ccall f_20693(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20684)
static void C_ccall f_20684(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20622)
static void C_ccall f_20622(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20658)
static void C_ccall f_20658(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20629)
static void C_ccall f_20629(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20261)
static void C_ccall f_20261(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_20268)
static void C_ccall f_20268(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20502)
static void C_fcall f_20502(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20512)
static void C_ccall f_20512(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20523)
static void C_ccall f_20523(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20535)
static void C_fcall f_20535(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20538)
static void C_ccall f_20538(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20526)
static void C_ccall f_20526(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20274)
static void C_ccall f_20274(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20500)
static void C_ccall f_20500(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20496)
static void C_ccall f_20496(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20442)
static void C_fcall f_20442(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20407)
static void C_fcall f_20407(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20423)
static void C_fcall f_20423(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20378)
static void C_fcall f_20378(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20302)
static void C_ccall f_20302(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20305)
static void C_ccall f_20305(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20369)
static void C_ccall f_20369(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20365)
static void C_ccall f_20365(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20285)
static void C_fcall f_20285(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20296)
static void C_ccall f_20296(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20292)
static void C_ccall f_20292(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20214)
static void C_ccall f_20214(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_20247)
static void C_ccall f_20247(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_20229)
static void C_ccall f_20229(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20241)
static void C_ccall f_20241(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19832)
static void C_ccall f_19832(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_20041)
static void C_fcall f_20041(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20051)
static void C_ccall f_20051(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20062)
static void C_ccall f_20062(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20182)
static void C_ccall f_20182(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20161)
static void C_ccall f_20161(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20140)
static void C_ccall f_20140(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20119)
static void C_ccall f_20119(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20098)
static void C_ccall f_20098(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20077)
static void C_ccall f_20077(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20065)
static void C_ccall f_20065(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19842)
static void C_ccall f_19842(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19845)
static void C_fcall f_19845(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20008)
static void C_fcall f_20008(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19848)
static void C_fcall f_19848(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19999)
static void C_ccall f_19999(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19979)
static void C_ccall f_19979(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19851)
static void C_fcall f_19851(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19944)
static void C_ccall f_19944(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19961)
static void C_ccall f_19961(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19854)
static void C_fcall f_19854(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19893)
static void C_ccall f_19893(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19927)
static void C_ccall f_19927(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19911)
static void C_ccall f_19911(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19896)
static void C_fcall f_19896(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19861)
static void C_fcall f_19861(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19872)
static void C_ccall f_19872(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19876)
static void C_ccall f_19876(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19868)
static void C_ccall f_19868(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19750)
static void C_ccall f_19750(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_19754)
static void C_ccall f_19754(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19772)
static void C_ccall f_19772(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19590)
static void C_fcall f_19590(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_19598)
static void C_fcall f_19598(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_19608)
static void C_ccall f_19608(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19646)
static void C_ccall f_19646(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19649)
static void C_ccall f_19649(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19652)
static void C_ccall f_19652(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19727)
static void C_fcall f_19727(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19737)
static void C_ccall f_19737(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19655)
static void C_ccall f_19655(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19658)
static void C_ccall f_19658(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19661)
static void C_ccall f_19661(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19681)
static void C_fcall f_19681(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19691)
static void C_ccall f_19691(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19694)
static void C_ccall f_19694(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19697)
static void C_ccall f_19697(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19664)
static void C_ccall f_19664(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19667)
static void C_ccall f_19667(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19584)
static void C_fcall f_19584(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19578)
static void C_fcall f_19578(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19572)
static void C_fcall f_19572(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19501)
static void C_fcall f_19501(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19542)
static void C_ccall f_19542(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19546)
static void C_ccall f_19546(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19550)
static void C_ccall f_19550(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19554)
static void C_ccall f_19554(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19558)
static void C_ccall f_19558(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19562)
static void C_ccall f_19562(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19566)
static void C_ccall f_19566(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19570)
static void C_ccall f_19570(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19503)
static void C_fcall f_19503(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19509)
static void C_fcall f_19509(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19531)
static void C_ccall f_19531(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19520)
static void C_ccall f_19520(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19350)
static void C_fcall f_19350(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19365)
static void C_fcall f_19365(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19378)
static void C_ccall f_19378(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19338)
static void C_ccall f_19338(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19326)
static void C_ccall f_19326(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19314)
static void C_ccall f_19314(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19308)
static void C_fcall f_19308(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19302)
static void C_ccall f_19302(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19290)
static void C_ccall f_19290(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19278)
static void C_ccall f_19278(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19266)
static void C_ccall f_19266(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19254)
static void C_ccall f_19254(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19248)
static void C_fcall f_19248(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19212)
static void C_ccall f_19212(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_19206)
static void C_ccall f_19206(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_19159)
static void C_ccall f_19159(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19163)
static void C_ccall f_19163(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19179)
static void C_ccall f_19179(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19188)
static void C_ccall f_19188(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19166)
static void C_ccall f_19166(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19150)
static void C_ccall f_19150(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19154)
static void C_ccall f_19154(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18997)
static void C_ccall f_18997(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_18997)
static void C_ccall f_18997r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_19124)
static void C_fcall f_19124(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19137)
static void C_ccall f_19137(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19119)
static void C_ccall f_19119(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19000)
static void C_fcall f_19000(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_19116)
static void C_ccall f_19116(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19100)
static void C_ccall f_19100(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19028)
static void C_ccall f_19028(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19036)
static void C_fcall f_19036(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19046)
static void C_ccall f_19046(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19049)
static void C_ccall f_19049(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19031)
static void C_ccall f_19031(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18826)
static void C_ccall f_18826(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_18832)
static void C_ccall f_18832(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18835)
static void C_fcall f_18835(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16635)
static void C_ccall f_16635(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_16648)
static void C_ccall f_16648(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_16655)
static void C_fcall f_16655(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16662)
static void C_ccall f_16662(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16641)
static void C_ccall f_16641(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18839)
static void C_ccall f_18839(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18873)
static void C_ccall f_18873(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18966)
static void C_fcall f_18966(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18976)
static void C_fcall f_18976(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18879)
static void C_ccall f_18879(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18936)
static void C_fcall f_18936(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18946)
static void C_fcall f_18946(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18887)
static void C_ccall f_18887(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18901)
static void C_ccall f_18901(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18905)
static void C_ccall f_18905(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18909)
static void C_ccall f_18909(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18913)
static void C_ccall f_18913(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18920)
static void C_ccall f_18920(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18897)
static void C_ccall f_18897(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18890)
static void C_ccall f_18890(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18842)
static void C_ccall f_18842(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17762)
static void C_ccall f_17762(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_17775)
static void C_ccall f_17775(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17825)
static void C_ccall f_17825(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17922)
static void C_ccall f_17922(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17990)
static void C_ccall f_17990(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18247)
static void C_ccall f_18247(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17997)
static void C_fcall f_17997(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18235)
static void C_ccall f_18235(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18186)
static void C_ccall f_18186(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18192)
static void C_ccall f_18192(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18216)
static void C_ccall f_18216(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18212)
static void C_ccall f_18212(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18200)
static void C_ccall f_18200(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18000)
static void C_fcall f_18000(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18162)
static void C_ccall f_18162(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18166)
static void C_ccall f_18166(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18003)
static void C_fcall f_18003(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18139)
static void C_ccall f_18139(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18143)
static void C_ccall f_18143(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18006)
static void C_fcall f_18006(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18116)
static void C_ccall f_18116(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18120)
static void C_ccall f_18120(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18009)
static void C_fcall f_18009(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18041)
static void C_ccall f_18041(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18059)
static void C_ccall f_18059(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18077)
static void C_ccall f_18077(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18095)
static void C_ccall f_18095(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18012)
static void C_fcall f_18012(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18016)
static void C_ccall f_18016(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17926)
static void C_ccall f_17926(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17930)
static void C_ccall f_17930(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17934)
static void C_ccall f_17934(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17829)
static void C_ccall f_17829(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17833)
static void C_ccall f_17833(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17837)
static void C_ccall f_17837(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17856)
static void C_ccall f_17856(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17860)
static void C_ccall f_17860(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17840)
static void C_fcall f_17840(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17844)
static void C_ccall f_17844(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17779)
static void C_ccall f_17779(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17783)
static void C_ccall f_17783(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17787)
static void C_ccall f_17787(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17769)
static void C_fcall f_17769(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17584)
static void C_fcall f_17584(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17596)
static void C_fcall f_17596(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17615)
static void C_ccall f_17615(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17633)
static void C_fcall f_17633(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_17665)
static void C_ccall f_17665(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17668)
static void C_fcall f_17668(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17661)
static void C_ccall f_17661(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17647)
static void C_ccall f_17647(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17618)
static void C_ccall f_17618(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17563)
static void C_fcall f_17563(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17570)
static void C_ccall f_17570(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17573)
static void C_ccall f_17573(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17579)
static void C_ccall f_17579(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17498)
static void C_fcall f_17498(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_17507)
static void C_fcall f_17507(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_17530)
static void C_ccall f_17530(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17520)
static void C_fcall f_17520(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17454)
static void C_fcall f_17454(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_17442)
static void C_fcall f_17442(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17340)
static void C_fcall f_17340(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17292)
static void C_fcall f_17292(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16673)
static void C_fcall f_16673(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_16677)
static void C_ccall f_16677(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16680)
static void C_ccall f_16680(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17106)
static void C_ccall f_17106(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17102)
static void C_ccall f_17102(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17098)
static void C_ccall f_17098(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16683)
static void C_fcall f_16683(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16806)
static void C_ccall f_16806(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16039)
static void C_ccall f_16039(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16812)
static void C_fcall f_16812(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16055)
static void C_ccall f_16055(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16900)
static void C_fcall f_16900(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16970)
static void C_ccall f_16970(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16071)
static void C_ccall f_16071(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16973)
static void C_fcall f_16973(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16103)
static void C_ccall f_16103(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17051)
static void C_fcall f_17051(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17077)
static void C_ccall f_17077(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_17071)
static void C_ccall f_17071(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17060)
static void C_ccall f_17060(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17002)
static void C_fcall f_17002(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17012)
static void C_ccall f_17012(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17038)
static void C_ccall f_17038(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_17032)
static void C_ccall f_17032(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17015)
static void C_ccall f_17015(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17025)
static void C_ccall f_17025(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17018)
static void C_fcall f_17018(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16979)
static void C_ccall f_16979(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16988)
static void C_ccall f_16988(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16982)
static void C_fcall f_16982(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16906)
static void C_ccall f_16906(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16924)
static void C_fcall f_16924(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_16957)
static void C_ccall f_16957(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_16943)
static void C_ccall f_16943(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16951)
static void C_ccall f_16951(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16934)
static void C_ccall f_16934(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16909)
static void C_ccall f_16909(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16821)
static void C_ccall f_16821(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16843)
static void C_fcall f_16843(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_16890)
static void C_ccall f_16890(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_16876)
static void C_ccall f_16876(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16884)
static void C_ccall f_16884(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16856)
static void C_ccall f_16856(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16859)
static void C_fcall f_16859(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16824)
static void C_ccall f_16824(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16841)
static void C_ccall f_16841(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16827)
static void C_fcall f_16827(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16692)
static void C_ccall f_16692(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16698)
static void C_ccall f_16698(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16756)
static void C_ccall f_16756(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16759)
static void C_ccall f_16759(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16780)
static void C_ccall f_16780(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_16791)
static void C_ccall f_16791(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16770)
static void C_ccall f_16770(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16704)
static void C_ccall f_16704(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16714)
static void C_ccall f_16714(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16750)
static void C_ccall f_16750(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16720)
static void C_ccall f_16720(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16735)
static void C_ccall f_16735(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16739)
static void C_ccall f_16739(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16743)
static void C_ccall f_16743(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16727)
static void C_ccall f_16727(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16569)
static void C_fcall f_16569(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16571)
static void C_ccall f_16571(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_16619)
static void C_ccall f_16619(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16575)
static void C_ccall f_16575(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16578)
static void C_fcall f_16578(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16583)
static void C_fcall f_16583(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_16604)
static void C_ccall f_16604(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16561)
static void C_fcall f_16561(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16563)
static void C_ccall f_16563(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_16353)
static void C_fcall f_16353(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_16370)
static void C_ccall f_16370(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16374)
static void C_ccall f_16374(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16320)
static void C_fcall f_16320(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_16327)
static void C_ccall f_16327(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16271)
static void C_ccall f_16271(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16278)
static void C_ccall f_16278(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16336)
static void C_ccall f_16336(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16559)
static void C_ccall f_16559(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16536)
static void C_ccall f_16536(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16552)
static void C_ccall f_16552(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16398)
static void C_ccall f_16398(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16401)
static void C_ccall f_16401(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16425)
static void C_ccall f_16425(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16482)
static void C_ccall f_16482(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16488)
static void C_ccall f_16488(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16497)
static void C_ccall f_16497(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16506)
static void C_ccall f_16506(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16515)
static void C_ccall f_16515(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16524)
static void C_ccall f_16524(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16476)
static void C_ccall f_16476(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16431)
static void C_ccall f_16431(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16437)
static void C_ccall f_16437(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16443)
static void C_ccall f_16443(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16449)
static void C_ccall f_16449(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16455)
static void C_ccall f_16455(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16461)
static void C_ccall f_16461(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16302)
static void C_fcall f_16302(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_16309)
static void C_ccall f_16309(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16292)
static void C_fcall f_16292(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_16280)
static void C_fcall f_16280(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_16248)
static void C_fcall f_16248(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_16255)
static void C_ccall f_16255(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16262)
static void C_ccall f_16262(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16232)
static void C_fcall f_16232(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16239)
static void C_ccall f_16239(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16246)
static void C_ccall f_16246(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16220)
static void C_fcall f_16220(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16202)
static void C_fcall f_16202(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16184)
static void C_fcall f_16184(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16169)
static void C_fcall f_16169(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16163)
static void C_fcall f_16163(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_16151)
static void C_fcall f_16151(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16133)
static void C_fcall f_16133(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16112)
static void C_fcall f_16112(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_16080)
static void C_fcall f_16080(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16087)
static void C_ccall f_16087(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16022)
static void C_fcall f_16022(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_16030)
static void C_ccall f_16030(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16012)
static void C_fcall f_16012(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16020)
static void C_ccall f_16020(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16006)
static void C_fcall f_16006(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15994)
static void C_fcall f_15994(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15991)
static void C_ccall f_15991(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15970)
static void C_fcall f_15970(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15883)
static void C_fcall f_15883(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15862)
static void C_fcall f_15862(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_15852)
static void C_fcall f_15852(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15840)
static void C_fcall f_15840(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15811)
static void C_ccall f_15811(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15799)
static void C_fcall f_15799(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15781)
static void C_fcall f_15781(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15763)
static void C_fcall f_15763(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15742)
static void C_ccall f_15742(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_15648)
static void C_ccall f_15648(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15652)
static void C_ccall f_15652(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15681)
static void C_ccall f_15681(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15686)
static void C_fcall f_15686(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15711)
static void C_fcall f_15711(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15696)
static void C_ccall f_15696(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15130)
static void C_ccall f_15130(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_15130)
static void C_ccall f_15130r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_15401)
static void C_ccall f_15401(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15405)
static void C_ccall f_15405(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15410)
static void C_ccall f_15410(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_15410)
static void C_ccall f_15410r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_15616)
static void C_ccall f_15616(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15631)
static void C_ccall f_15631(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15623)
static void C_ccall f_15623(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15587)
static void C_ccall f_15587(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15591)
static void C_ccall f_15591(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15552)
static void C_ccall f_15552(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15556)
static void C_ccall f_15556(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15414)
static void C_fcall f_15414(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15516)
static void C_ccall f_15516(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15531)
static void C_ccall f_15531(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15523)
static void C_ccall f_15523(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15487)
static void C_ccall f_15487(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15491)
static void C_ccall f_15491(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15452)
static void C_ccall f_15452(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15456)
static void C_ccall f_15456(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15417)
static void C_fcall f_15417(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15420)
static void C_ccall f_15420(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15423)
static void C_fcall f_15423(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15392)
static void C_ccall f_15392(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15134)
static void C_ccall f_15134(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15361)
static void C_ccall f_15361(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15376)
static void C_ccall f_15376(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15368)
static void C_ccall f_15368(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15332)
static void C_ccall f_15332(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15336)
static void C_ccall f_15336(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15297)
static void C_ccall f_15297(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15301)
static void C_ccall f_15301(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15137)
static void C_fcall f_15137(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15261)
static void C_ccall f_15261(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15276)
static void C_ccall f_15276(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15268)
static void C_ccall f_15268(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15232)
static void C_ccall f_15232(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15236)
static void C_ccall f_15236(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15197)
static void C_ccall f_15197(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15201)
static void C_ccall f_15201(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15140)
static void C_fcall f_15140(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15143)
static void C_ccall f_15143(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15146)
static void C_ccall f_15146(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15158)
static void C_ccall f_15158(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_15176)
static void C_ccall f_15176(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15164)
static void C_ccall f_15164(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15152)
static void C_ccall f_15152(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15067)
static void C_fcall f_15067(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14727)
static void C_ccall f_14727(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14909)
static void C_ccall f_14909(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14913)
static void C_ccall f_14913(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14915)
static void C_fcall f_14915(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_14840)
static void C_fcall f_14840(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_14850)
static void C_fcall f_14850(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14857)
static void C_fcall f_14857(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14925)
static void C_ccall f_14925(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14928)
static void C_ccall f_14928(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14932)
static void C_ccall f_14932(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14952)
static void C_fcall f_14952(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14968)
static void C_ccall f_14968(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14935)
static void C_ccall f_14935(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14730)
static void C_fcall f_14730(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_14742)
static void C_fcall f_14742(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_14778)
static void C_ccall f_14778(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14798)
static void C_ccall f_14798(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14803)
static void C_fcall f_14803(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14240)
static void C_ccall f_14240(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_14240)
static void C_ccall f_14240r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_14167)
static void C_fcall f_14167(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_14012)
static void C_ccall f_14012(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14018)
static void C_ccall f_14018(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14103)
static void C_fcall f_14103(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14030)
static void C_ccall f_14030(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14046)
static void C_ccall f_14046(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14050)
static void C_fcall f_14050(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14053)
static void C_fcall f_14053(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14033)
static void C_ccall f_14033(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14044)
static void C_ccall f_14044(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14184)
static void C_ccall f_14184(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14721)
static void C_ccall f_14721(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14244)
static void C_ccall f_14244(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14690)
static void C_ccall f_14690(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14705)
static void C_ccall f_14705(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14697)
static void C_ccall f_14697(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14661)
static void C_ccall f_14661(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14665)
static void C_ccall f_14665(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14626)
static void C_ccall f_14626(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14630)
static void C_ccall f_14630(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14591)
static void C_ccall f_14591(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14595)
static void C_ccall f_14595(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14247)
static void C_fcall f_14247(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14555)
static void C_ccall f_14555(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14570)
static void C_ccall f_14570(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14562)
static void C_ccall f_14562(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14526)
static void C_ccall f_14526(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14530)
static void C_ccall f_14530(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14491)
static void C_ccall f_14491(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14495)
static void C_ccall f_14495(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14456)
static void C_ccall f_14456(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14460)
static void C_ccall f_14460(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14250)
static void C_fcall f_14250(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14420)
static void C_ccall f_14420(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14435)
static void C_ccall f_14435(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14427)
static void C_ccall f_14427(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14391)
static void C_ccall f_14391(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14395)
static void C_ccall f_14395(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14356)
static void C_ccall f_14356(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14360)
static void C_ccall f_14360(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14321)
static void C_ccall f_14321(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14325)
static void C_ccall f_14325(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14253)
static void C_fcall f_14253(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14256)
static void C_ccall f_14256(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14259)
static void C_ccall f_14259(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14292)
static void C_ccall f_14292(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_14300)
static void C_ccall f_14300(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14265)
static void C_ccall f_14265(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14278)
static void C_ccall f_14278(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14268)
static void C_fcall f_14268(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14271)
static void C_ccall f_14271(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13807)
static void C_ccall f_13807(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_13811)
static void C_ccall f_13811(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13814)
static void C_ccall f_13814(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13817)
static void C_ccall f_13817(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13986)
static void C_ccall f_13986(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13999)
static void C_ccall f_13999(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14003)
static void C_ccall f_14003(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13823)
static void C_ccall f_13823(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13979)
static void C_ccall f_13979(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13960)
static void C_ccall f_13960(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13967)
static void C_ccall f_13967(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13971)
static void C_ccall f_13971(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13829)
static void C_fcall f_13829(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13835)
static void C_ccall f_13835(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13919)
static void C_ccall f_13919(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13921)
static void C_fcall f_13921(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_13943)
static void C_ccall f_13943(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13950)
static void C_ccall f_13950(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13954)
static void C_ccall f_13954(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13940)
static void C_fcall f_13940(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13936)
static void C_ccall f_13936(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13877)
static void C_ccall f_13877(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13894)
static void C_fcall f_13894(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_13904)
static void C_ccall f_13904(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13880)
static void C_ccall f_13880(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13839)
static void C_fcall f_13839(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_13847)
static void C_ccall f_13847(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13849)
static void C_fcall f_13849(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_13870)
static void C_ccall f_13870(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13695)
static void C_fcall f_13695(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_13805)
static void C_ccall f_13805(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13764)
static void C_fcall f_13764(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_13797)
static void C_ccall f_13797(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13793)
static void C_ccall f_13793(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13778)
static void C_ccall f_13778(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13702)
static void C_ccall f_13702(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13710)
static void C_fcall f_13710(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_13755)
static void C_ccall f_13755(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13743)
static void C_ccall f_13743(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13727)
static void C_ccall f_13727(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12928)
static void C_ccall f_12928(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_12928)
static void C_ccall f_12928r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_13245)
static void C_ccall f_13245(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_13252)
static void C_fcall f_13252(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13657)
static void C_ccall f_13657(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13672)
static void C_ccall f_13672(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13664)
static void C_ccall f_13664(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13628)
static void C_ccall f_13628(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13632)
static void C_ccall f_13632(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13593)
static void C_ccall f_13593(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13597)
static void C_ccall f_13597(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13558)
static void C_ccall f_13558(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13562)
static void C_ccall f_13562(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13255)
static void C_fcall f_13255(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13522)
static void C_ccall f_13522(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13537)
static void C_ccall f_13537(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13529)
static void C_ccall f_13529(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13493)
static void C_ccall f_13493(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13497)
static void C_ccall f_13497(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13458)
static void C_ccall f_13458(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13462)
static void C_ccall f_13462(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13423)
static void C_ccall f_13423(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13427)
static void C_ccall f_13427(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13258)
static void C_fcall f_13258(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13387)
static void C_ccall f_13387(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13402)
static void C_ccall f_13402(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13394)
static void C_ccall f_13394(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13358)
static void C_ccall f_13358(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13362)
static void C_ccall f_13362(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13323)
static void C_ccall f_13323(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13327)
static void C_ccall f_13327(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13288)
static void C_ccall f_13288(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13292)
static void C_ccall f_13292(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13261)
static void C_fcall f_13261(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13264)
static void C_ccall f_13264(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12932)
static void C_ccall f_12932(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12935)
static void C_ccall f_12935(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13209)
static void C_ccall f_13209(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_13213)
static void C_ccall f_13213(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13216)
static void C_ccall f_13216(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13219)
static void C_ccall f_13219(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13222)
static void C_ccall f_13222(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13235)
static void C_ccall f_13235(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13225)
static void C_fcall f_13225(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12941)
static void C_ccall f_12941(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12948)
static void C_fcall f_12948(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13179)
static void C_ccall f_13179(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13194)
static void C_ccall f_13194(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13186)
static void C_ccall f_13186(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13150)
static void C_ccall f_13150(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13154)
static void C_ccall f_13154(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13115)
static void C_ccall f_13115(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13119)
static void C_ccall f_13119(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12951)
static void C_fcall f_12951(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13079)
static void C_ccall f_13079(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13094)
static void C_ccall f_13094(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13086)
static void C_ccall f_13086(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13050)
static void C_ccall f_13050(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13054)
static void C_ccall f_13054(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13015)
static void C_ccall f_13015(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13019)
static void C_ccall f_13019(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12954)
static void C_fcall f_12954(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12957)
static void C_ccall f_12957(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12972)
static void C_ccall f_12972(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_12994)
static void C_ccall f_12994(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12978)
static void C_ccall f_12978(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12986)
static void C_ccall f_12986(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12960)
static void C_ccall f_12960(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12963)
static void C_ccall f_12963(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12845)
static void C_fcall f_12845(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12836)
static void C_fcall f_12836(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12827)
static void C_fcall f_12827(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12809)
static void C_fcall f_12809(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12791)
static void C_fcall f_12791(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12773)
static void C_fcall f_12773(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12764)
static void C_fcall f_12764(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12755)
static void C_fcall f_12755(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12533)
static void C_ccall f_12533(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12583)
static void C_ccall f_12583(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12728)
static void C_ccall f_12728(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12609)
static void C_ccall f_12609(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12724)
static void C_ccall f_12724(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12709)
static void C_ccall f_12709(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12690)
static void C_ccall f_12690(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12663)
static void C_ccall f_12663(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12616)
static void C_ccall f_12616(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12586)
static void C_fcall f_12586(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12536)
static void C_ccall f_12536(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_12542)
static void C_fcall f_12542(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12558)
static void C_ccall f_12558(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12561)
static void C_ccall f_12561(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12059)
static void C_ccall f_12059(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_12059)
static void C_ccall f_12059r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_12523)
static void C_ccall f_12523(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12063)
static void C_fcall f_12063(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12495)
static void C_ccall f_12495(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12510)
static void C_ccall f_12510(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12502)
static void C_ccall f_12502(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12466)
static void C_ccall f_12466(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12470)
static void C_ccall f_12470(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12431)
static void C_ccall f_12431(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12435)
static void C_ccall f_12435(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12396)
static void C_ccall f_12396(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12400)
static void C_ccall f_12400(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12066)
static void C_fcall f_12066(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12360)
static void C_ccall f_12360(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12375)
static void C_ccall f_12375(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12367)
static void C_ccall f_12367(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12331)
static void C_ccall f_12331(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12335)
static void C_ccall f_12335(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12296)
static void C_ccall f_12296(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12300)
static void C_ccall f_12300(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12261)
static void C_ccall f_12261(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12265)
static void C_ccall f_12265(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12069)
static void C_fcall f_12069(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12225)
static void C_ccall f_12225(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12240)
static void C_ccall f_12240(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12232)
static void C_ccall f_12232(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12196)
static void C_ccall f_12196(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12200)
static void C_ccall f_12200(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12161)
static void C_ccall f_12161(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12165)
static void C_ccall f_12165(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12126)
static void C_ccall f_12126(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12130)
static void C_ccall f_12130(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12072)
static void C_fcall f_12072(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12075)
static void C_ccall f_12075(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12078)
static void C_ccall f_12078(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12093)
static void C_ccall f_12093(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_12105)
static void C_ccall f_12105(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12084)
static void C_ccall f_12084(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12087)
static void C_ccall f_12087(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11983)
static void C_ccall f_11983(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11987)
static void C_ccall f_11987(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12006)
static void C_ccall f_12006(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12016)
static void C_ccall f_12016(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12018)
static void C_fcall f_12018(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_12035)
static void C_ccall f_12035(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12038)
static void C_ccall f_12038(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12049)
static void C_ccall f_12049(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11990)
static void C_ccall f_11990(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11720)
static void C_ccall f_11720(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_11720)
static void C_ccall f_11720r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_11973)
static void C_ccall f_11973(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11724)
static void C_fcall f_11724(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11945)
static void C_ccall f_11945(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11960)
static void C_ccall f_11960(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11952)
static void C_ccall f_11952(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11916)
static void C_ccall f_11916(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11920)
static void C_ccall f_11920(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11881)
static void C_ccall f_11881(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11885)
static void C_ccall f_11885(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11727)
static void C_fcall f_11727(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11845)
static void C_ccall f_11845(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11860)
static void C_ccall f_11860(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11852)
static void C_ccall f_11852(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11816)
static void C_ccall f_11816(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11820)
static void C_ccall f_11820(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11781)
static void C_ccall f_11781(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11785)
static void C_ccall f_11785(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11730)
static void C_fcall f_11730(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11733)
static void C_ccall f_11733(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11736)
static void C_ccall f_11736(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11748)
static void C_ccall f_11748(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_11760)
static void C_ccall f_11760(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11742)
static void C_ccall f_11742(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11684)
static void C_ccall f_11684(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11688)
static void C_ccall f_11688(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11710)
static void C_ccall f_11710(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11704)
static void C_ccall f_11704(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11697)
static void C_ccall f_11697(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11437)
static void C_ccall f_11437(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_11437)
static void C_ccall f_11437r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_11441)
static void C_fcall f_11441(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11654)
static void C_ccall f_11654(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11669)
static void C_ccall f_11669(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11661)
static void C_ccall f_11661(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11625)
static void C_ccall f_11625(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11629)
static void C_ccall f_11629(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11590)
static void C_ccall f_11590(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11594)
static void C_ccall f_11594(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11444)
static void C_fcall f_11444(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11554)
static void C_ccall f_11554(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11569)
static void C_ccall f_11569(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11561)
static void C_ccall f_11561(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11525)
static void C_ccall f_11525(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11529)
static void C_ccall f_11529(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11490)
static void C_ccall f_11490(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11494)
static void C_ccall f_11494(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11447)
static void C_fcall f_11447(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11450)
static void C_ccall f_11450(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11453)
static void C_ccall f_11453(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11461)
static void C_ccall f_11461(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_11469)
static void C_ccall f_11469(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11459)
static void C_ccall f_11459(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11222)
static void C_ccall f_11222(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11226)
static void C_ccall f_11226(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11435)
static void C_ccall f_11435(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11388)
static void C_ccall f_11388(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11400)
static void C_fcall f_11400(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11256)
static void C_ccall f_11256(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11259)
static void C_ccall f_11259(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11265)
static void C_ccall f_11265(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11268)
static void C_ccall f_11268(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11356)
static void C_fcall f_11356(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11271)
static void C_fcall f_11271(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11350)
static void C_ccall f_11350(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11277)
static void C_ccall f_11277(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11280)
static void C_ccall f_11280(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11232)
static void C_ccall f_11232(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11235)
static void C_ccall f_11235(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11242)
static void C_ccall f_11242(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10752)
static void C_ccall f_10752(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_10752)
static void C_ccall f_10752r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_10756)
static void C_fcall f_10756(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11192)
static void C_ccall f_11192(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11207)
static void C_ccall f_11207(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11199)
static void C_ccall f_11199(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11163)
static void C_ccall f_11163(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11167)
static void C_ccall f_11167(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11128)
static void C_ccall f_11128(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11132)
static void C_ccall f_11132(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11093)
static void C_ccall f_11093(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11097)
static void C_ccall f_11097(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10759)
static void C_fcall f_10759(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11057)
static void C_ccall f_11057(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11072)
static void C_ccall f_11072(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11064)
static void C_ccall f_11064(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11028)
static void C_ccall f_11028(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11032)
static void C_ccall f_11032(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10993)
static void C_ccall f_10993(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10997)
static void C_ccall f_10997(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10958)
static void C_ccall f_10958(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10962)
static void C_ccall f_10962(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10762)
static void C_fcall f_10762(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10922)
static void C_ccall f_10922(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10937)
static void C_ccall f_10937(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10929)
static void C_ccall f_10929(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10893)
static void C_ccall f_10893(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10897)
static void C_ccall f_10897(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10858)
static void C_ccall f_10858(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10862)
static void C_ccall f_10862(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10823)
static void C_ccall f_10823(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10827)
static void C_ccall f_10827(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10765)
static void C_fcall f_10765(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10768)
static void C_ccall f_10768(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10771)
static void C_ccall f_10771(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10794)
static void C_ccall f_10794(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_10802)
static void C_ccall f_10802(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10777)
static void C_ccall f_10777(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10780)
static void C_ccall f_10780(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10672)
static void C_fcall f_10672(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10663)
static void C_fcall f_10663(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10591)
static void C_ccall f_10591(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10595)
static void C_ccall f_10595(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10598)
static void C_fcall f_10598(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10336)
static void C_ccall f_10336(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_10336)
static void C_ccall f_10336r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_10340)
static void C_fcall f_10340(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10561)
static void C_ccall f_10561(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10576)
static void C_ccall f_10576(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10568)
static void C_ccall f_10568(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10532)
static void C_ccall f_10532(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10536)
static void C_ccall f_10536(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10497)
static void C_ccall f_10497(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10501)
static void C_ccall f_10501(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10343)
static void C_fcall f_10343(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10461)
static void C_ccall f_10461(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10476)
static void C_ccall f_10476(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10468)
static void C_ccall f_10468(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10432)
static void C_ccall f_10432(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10436)
static void C_ccall f_10436(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10397)
static void C_ccall f_10397(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10401)
static void C_ccall f_10401(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10346)
static void C_fcall f_10346(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10349)
static void C_ccall f_10349(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10352)
static void C_ccall f_10352(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10364)
static void C_ccall f_10364(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_10376)
static void C_ccall f_10376(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10358)
static void C_ccall f_10358(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10221)
static void C_fcall f_10221(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10334)
static void C_ccall f_10334(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10231)
static void C_ccall f_10231(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10319)
static void C_ccall f_10319(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10330)
static void C_ccall f_10330(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10326)
static void C_ccall f_10326(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10234)
static void C_ccall f_10234(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10316)
static void C_ccall f_10316(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10242)
static void C_ccall f_10242(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10306)
static void C_ccall f_10306(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10251)
static void C_ccall f_10251(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10270)
static void C_ccall f_10270(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10299)
static void C_ccall f_10299(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10280)
static void C_ccall f_10280(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10295)
static void C_ccall f_10295(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10283)
static void C_ccall f_10283(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10254)
static void C_ccall f_10254(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10264)
static void C_ccall f_10264(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10245)
static void C_fcall f_10245(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10248)
static void C_ccall f_10248(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10175)
static void C_fcall f_10175(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10166)
static void C_fcall f_10166(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9865)
static void C_fcall f_9865(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9872)
static void C_ccall f_9872(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10161)
static void C_ccall f_10161(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9875)
static void C_ccall f_9875(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10146)
static void C_ccall f_10146(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10138)
static void C_ccall f_10138(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10130)
static void C_ccall f_10130(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10133)
static void C_ccall f_10133(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10101)
static void C_fcall f_10101(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10124)
static void C_ccall f_10124(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10107)
static void C_fcall f_10107(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10111)
static void C_ccall f_10111(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9878)
static void C_ccall f_9878(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9884)
static void C_ccall f_9884(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9976)
static void C_ccall f_9976(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10088)
static void C_ccall f_10088(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10095)
static void C_ccall f_10095(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9999)
static void C_fcall f_9999(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10001)
static void C_fcall f_10001(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_10050)
static void C_fcall f_10050(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10085)
static void C_ccall f_10085(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10074)
static void C_ccall f_10074(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10219)
static void C_ccall f_10219(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10194)
static void C_ccall f_10194(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10215)
static void C_ccall f_10215(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10211)
static void C_ccall f_10211(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10203)
static void C_ccall f_10203(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10067)
static void C_ccall f_10067(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10060)
static void C_ccall f_10060(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10008)
static void C_ccall f_10008(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10048)
static void C_ccall f_10048(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10012)
static void C_ccall f_10012(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10044)
static void C_ccall f_10044(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10031)
static void C_ccall f_10031(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10039)
static void C_ccall f_10039(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10035)
static void C_ccall f_10035(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10015)
static void C_fcall f_10015(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10018)
static void C_ccall f_10018(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9992)
static void C_ccall f_9992(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9979)
static void C_ccall f_9979(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9988)
static void C_ccall f_9988(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9983)
static void C_ccall f_9983(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9890)
static void C_ccall f_9890(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9970)
static void C_ccall f_9970(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9950)
static void C_ccall f_9950(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9956)
static void C_ccall f_9956(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9967)
static void C_ccall f_9967(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9947)
static void C_ccall f_9947(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9935)
static void C_ccall f_9935(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9938)
static void C_ccall f_9938(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9893)
static void C_ccall f_9893(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9929)
static void C_ccall f_9929(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9924)
static void C_ccall f_9924(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9896)
static void C_ccall f_9896(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9909)
static void C_ccall f_9909(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9899)
static void C_fcall f_9899(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9902)
static void C_ccall f_9902(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9905)
static void C_ccall f_9905(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9742)
static void C_ccall f_9742(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_9742)
static void C_ccall f_9742r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_9801)
static void C_ccall f_9801(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9811)
static void C_ccall f_9811(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9813)
static void C_fcall f_9813(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_9842)
static void C_ccall f_9842(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9847)
static void C_ccall f_9847(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9832)
static void C_fcall f_9832(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9763)
static void C_fcall f_9763(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_9795)
static void C_ccall f_9795(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9723)
static void C_ccall f_9723(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9730)
static void C_ccall f_9730(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9737)
static void C_ccall f_9737(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9704)
static void C_ccall f_9704(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9711)
static void C_ccall f_9711(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9718)
static void C_ccall f_9718(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9524)
static void C_fcall f_9524(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7,C_word t8,C_word t9) C_noret;
C_noret_decl(f_9528)
static void C_ccall f_9528(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9531)
static void C_ccall f_9531(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9534)
static void C_ccall f_9534(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9537)
static void C_ccall f_9537(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9694)
static void C_ccall f_9694(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9701)
static void C_ccall f_9701(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9540)
static void C_ccall f_9540(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9543)
static void C_fcall f_9543(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9549)
static void C_ccall f_9549(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9555)
static void C_ccall f_9555(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9618)
static void C_ccall f_9618(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9632)
static void C_ccall f_9632(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9558)
static void C_fcall f_9558(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9561)
static void C_ccall f_9561(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9567)
static void C_fcall f_9567(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9580)
static void C_ccall f_9580(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9570)
static void C_ccall f_9570(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9573)
static void C_ccall f_9573(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9514)
static void C_fcall f_9514(C_word t0) C_noret;
C_noret_decl(f_9459)
static void C_fcall f_9459(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9450)
static void C_fcall f_9450(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9333)
static void C_fcall f_9333(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9324)
static void C_fcall f_9324(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9315)
static void C_ccall f_9315(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9306)
static void C_fcall f_9306(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9297)
static void C_fcall f_9297(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9279)
static void C_fcall f_9279(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9270)
static void C_fcall f_9270(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9261)
static void C_fcall f_9261(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9243)
static void C_fcall f_9243(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9234)
static void C_fcall f_9234(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9225)
static void C_fcall f_9225(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9210)
static void C_fcall f_9210(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9165)
static void C_fcall f_9165(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9147)
static void C_fcall f_9147(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9138)
static void C_fcall f_9138(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9111)
static void C_fcall f_9111(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9093)
static void C_fcall f_9093(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9075)
static void C_fcall f_9075(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9066)
static void C_fcall f_9066(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9054)
static void C_fcall f_9054(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_8746)
static void C_ccall f_8746(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_8847)
static void C_ccall f_8847(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8896)
static void C_ccall f_8896(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8892)
static void C_ccall f_8892(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8864)
static void C_ccall f_8864(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8799)
static void C_fcall f_8799(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8808)
static void C_fcall f_8808(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_8792)
static void C_ccall f_8792(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8611)
static void C_ccall f_8611(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8737)
static void C_ccall f_8737(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8733)
static void C_ccall f_8733(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8711)
static void C_ccall f_8711(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8641)
static void C_fcall f_8641(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8657)
static void C_fcall f_8657(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_8566)
static void C_ccall f_8566(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8609)
static void C_ccall f_8609(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8598)
static void C_ccall f_8598(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8450)
static void C_ccall f_8450(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8564)
static void C_ccall f_8564(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8465)
static void C_fcall f_8465(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_8495)
static void C_fcall f_8495(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8514)
static void C_ccall f_8514(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8499)
static void C_ccall f_8499(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8478)
static void C_fcall f_8478(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8328)
static void C_ccall f_8328(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8448)
static void C_ccall f_8448(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8343)
static void C_fcall f_8343(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_8373)
static void C_fcall f_8373(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8392)
static void C_ccall f_8392(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8377)
static void C_ccall f_8377(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8356)
static void C_fcall f_8356(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8231)
static void C_ccall f_8231(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8326)
static void C_ccall f_8326(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8246)
static void C_fcall f_8246(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_8292)
static void C_ccall f_8292(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8277)
static void C_ccall f_8277(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8259)
static void C_fcall f_8259(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8178)
static void C_fcall f_8178(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_8216)
static void C_ccall f_8216(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8223)
static void C_ccall f_8223(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8201)
static void C_ccall f_8201(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8176)
static void C_ccall f_8176(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8148)
static void C_fcall f_8148(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8150)
static void C_ccall f_8150(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8128)
static void C_ccall f_8128(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8076)
static void C_fcall f_8076(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_8113)
static void C_ccall f_8113(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8080)
static void C_ccall f_8080(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8096)
static void C_ccall f_8096(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8098)
static void C_ccall f_8098(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8048)
static void C_ccall f_8048(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_8048)
static void C_ccall f_8048r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_8029)
static void C_ccall f_8029(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_8029)
static void C_ccall f_8029r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_7988)
static void C_ccall f_7988(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_7988)
static void C_ccall f_7988r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_7969)
static void C_ccall f_7969(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_7969)
static void C_ccall f_7969r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_7741)
static void C_ccall f_7741(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_7741)
static void C_ccall f_7741r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_7946)
static void C_ccall f_7946(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7961)
static void C_ccall f_7961(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7953)
static void C_ccall f_7953(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7917)
static void C_ccall f_7917(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7921)
static void C_ccall f_7921(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7882)
static void C_ccall f_7882(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7886)
static void C_ccall f_7886(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7745)
static void C_fcall f_7745(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7846)
static void C_ccall f_7846(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7861)
static void C_ccall f_7861(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7853)
static void C_ccall f_7853(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7817)
static void C_ccall f_7817(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7821)
static void C_ccall f_7821(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7782)
static void C_ccall f_7782(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7786)
static void C_ccall f_7786(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7748)
static void C_fcall f_7748(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7751)
static void C_ccall f_7751(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7754)
static void C_fcall f_7754(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7510)
static void C_ccall f_7510(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_7510)
static void C_ccall f_7510r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_7715)
static void C_ccall f_7715(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7730)
static void C_ccall f_7730(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7722)
static void C_ccall f_7722(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7686)
static void C_ccall f_7686(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7690)
static void C_ccall f_7690(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7651)
static void C_ccall f_7651(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7655)
static void C_ccall f_7655(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7514)
static void C_fcall f_7514(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7615)
static void C_ccall f_7615(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7630)
static void C_ccall f_7630(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7622)
static void C_ccall f_7622(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7586)
static void C_ccall f_7586(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7590)
static void C_ccall f_7590(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7551)
static void C_ccall f_7551(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7555)
static void C_ccall f_7555(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7517)
static void C_fcall f_7517(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7520)
static void C_ccall f_7520(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7530)
static void C_ccall f_7530(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7467)
static void C_ccall f_7467(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_7467)
static void C_ccall f_7467r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_7500)
static void C_ccall f_7500(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7485)
static void C_ccall f_7485(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7446)
static void C_ccall f_7446(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_7415)
static void C_ccall f_7415(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_7415)
static void C_ccall f_7415r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_7419)
static void C_fcall f_7419(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7341)
static void C_ccall f_7341(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...) C_noret;
C_noret_decl(f_7341)
static void C_ccall f_7341r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t5) C_noret;
C_noret_decl(f_7348)
static void C_fcall f_7348(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7357)
static void C_fcall f_7357(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_7393)
static void C_ccall f_7393(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7314)
static void C_ccall f_7314(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_7314)
static void C_ccall f_7314r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_7219)
static void C_ccall f_7219(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...) C_noret;
C_noret_decl(f_7219)
static void C_ccall f_7219r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t5) C_noret;
C_noret_decl(f_7223)
static void C_ccall f_7223(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7226)
static void C_ccall f_7226(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7238)
static void C_fcall f_7238(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7260)
static void C_ccall f_7260(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7204)
static void C_ccall f_7204(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7189)
static void C_ccall f_7189(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6953)
static void C_ccall f_6953(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_6953)
static void C_ccall f_6953r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_7166)
static void C_ccall f_7166(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7181)
static void C_ccall f_7181(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7173)
static void C_ccall f_7173(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7137)
static void C_ccall f_7137(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7141)
static void C_ccall f_7141(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7102)
static void C_ccall f_7102(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7106)
static void C_ccall f_7106(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6957)
static void C_fcall f_6957(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7066)
static void C_ccall f_7066(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7081)
static void C_ccall f_7081(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7073)
static void C_ccall f_7073(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7037)
static void C_ccall f_7037(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7041)
static void C_ccall f_7041(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7002)
static void C_ccall f_7002(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7006)
static void C_ccall f_7006(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6960)
static void C_fcall f_6960(C_word t0,C_word t1) C_noret;
C_noret_decl(f_6963)
static void C_ccall f_6963(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6974)
static void C_ccall f_6974(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6934)
static void C_ccall f_6934(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_6934)
static void C_ccall f_6934r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_6913)
static void C_ccall f_6913(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_6925)
static void C_ccall f_6925(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6887)
static void C_ccall f_6887(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_6887)
static void C_ccall f_6887r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_6845)
static void C_ccall f_6845(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_6845)
static void C_ccall f_6845r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_6830)
static void C_ccall f_6830(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6748)
static void C_ccall f_6748(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,...) C_noret;
C_noret_decl(f_6748)
static void C_ccall f_6748r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t7) C_noret;
C_noret_decl(f_6762)
static void C_ccall f_6762(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6714)
static void C_ccall f_6714(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,...) C_noret;
C_noret_decl(f_6714)
static void C_ccall f_6714r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t8) C_noret;
C_noret_decl(f_6726)
static void C_ccall f_6726(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6711)
static void C_ccall f_6711(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6708)
static void C_ccall f_6708(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6701)
static void C_fcall f_6701(C_word t0,C_word t1) C_noret;
C_noret_decl(f_6698)
static void C_ccall f_6698(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6691)
static void C_fcall f_6691(C_word t0,C_word t1) C_noret;
C_noret_decl(f_6673)
static void C_fcall f_6673(C_word t0,C_word t1) C_noret;
C_noret_decl(f_6662)
static void C_fcall f_6662(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6659)
static void C_ccall f_6659(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6656)
static void C_ccall f_6656(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6653)
static void C_ccall f_6653(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6624)
static void C_fcall f_6624(C_word t0,C_word t1) C_noret;
C_noret_decl(f_6617)
static void C_fcall f_6617(C_word t0,C_word t1) C_noret;
C_noret_decl(f_6614)
static void C_ccall f_6614(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6593)
static void C_fcall f_6593(C_word t0,C_word t1) C_noret;
C_noret_decl(f_6586)
static void C_ccall f_6586(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6579)
static void C_ccall f_6579(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6564)
static void C_fcall f_6564(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_6553)
static void C_fcall f_6553(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6542)
static void C_fcall f_6542(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6535)
static void C_ccall f_6535(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6508)
static void C_fcall f_6508(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_6481)
static void C_fcall f_6481(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_6440)
static void C_fcall f_6440(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6446)
static void C_fcall f_6446(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6456)
static void C_fcall f_6456(C_word t0,C_word t1) C_noret;
C_noret_decl(f_6354)
static void C_ccall f_6354(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...) C_noret;
C_noret_decl(f_6354)
static void C_ccall f_6354r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t5) C_noret;
C_noret_decl(f_6259)
static void C_ccall f_6259(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_6259)
static void C_ccall f_6259r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_6263)
static void C_ccall f_6263(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6288)
static void C_fcall f_6288(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_6305)
static void C_ccall f_6305(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6309)
static void C_ccall f_6309(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6265)
static void C_fcall f_6265(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_6282)
static void C_ccall f_6282(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6249)
static void C_ccall f_6249(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_6209)
static void C_ccall f_6209(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_6209)
static void C_ccall f_6209r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_6239)
static void C_ccall f_6239(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6071)
static void C_ccall f_6071(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6105)
static void C_ccall f_6105(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6048)
static void C_ccall f_6048(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6042)
static void C_ccall f_6042(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6027)
static void C_ccall f_6027(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6013)
static void C_ccall f_6013(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6003)
static void C_ccall f_6003(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_5993)
static void C_ccall f_5993(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_5983)
static void C_ccall f_5983(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_5973)
static void C_ccall f_5973(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_5944)
static void C_ccall f_5944(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_5944)
static void C_ccall f_5944r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_5953)
static void C_ccall f_5953(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_5958)
static void C_ccall f_5958(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5933)
static void C_ccall f_5933(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5938)
static void C_ccall f_5938(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5640)
static void C_ccall f_5640(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_5650)
static void C_ccall f_5650(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5901)
static void C_ccall f_5901(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5653)
static void C_ccall f_5653(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5656)
static void C_ccall f_5656(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5671)
static void C_fcall f_5671(C_word t0,C_word t1) C_noret;
C_noret_decl(f_5681)
static void C_ccall f_5681(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5683)
static void C_fcall f_5683(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_5742)
static void C_ccall f_5742(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5752)
static void C_ccall f_5752(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5869)
static void C_ccall f_5869(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5857)
static void C_ccall f_5857(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_5855)
static void C_ccall f_5855(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5842)
static void C_ccall f_5842(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5796)
static void C_ccall f_5796(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5823)
static void C_ccall f_5823(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5802)
static void C_ccall f_5802(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5736)
static void C_fcall f_5736(C_word t0,C_word t1) C_noret;
C_noret_decl(f_5695)
static void C_fcall f_5695(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_5708)
static void C_fcall f_5708(C_word t0,C_word t1) C_noret;
C_noret_decl(f_5918)
static void C_ccall f_5918(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_5909)
static void C_ccall f_5909(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_5917)
static void C_ccall f_5917(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5920)
static void C_ccall f_5920(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_5920)
static void C_ccall f_5920r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_5928)
static void C_ccall f_5928(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5342)
static void C_ccall f_5342(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_5595)
static void C_ccall f_5595(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_5628)
static void C_ccall f_5628(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5624)
static void C_ccall f_5624(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5613)
static void C_ccall f_5613(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5609)
static void C_ccall f_5609(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5503)
static void C_ccall f_5503(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5506)
static void C_ccall f_5506(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5509)
static void C_ccall f_5509(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5589)
static void C_ccall f_5589(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_5414)
static void C_ccall f_5414(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5355)
static void C_ccall f_5355(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5512)
static void C_ccall f_5512(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5519)
static void C_ccall f_5519(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5579)
static void C_ccall f_5579(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_5565)
static void C_ccall f_5565(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5531)
static void C_ccall f_5531(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5557)
static void C_ccall f_5557(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_5492)
static void C_ccall f_5492(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5539)
static void C_ccall f_5539(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5535)
static void C_ccall f_5535(C_word c,C_word t0,C_word t1) C_noret;

C_noret_decl(trf_33516)
static void C_fcall trf_33516(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_33516(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_33516(t0,t1,t2);}

C_noret_decl(trf_33576)
static void C_fcall trf_33576(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_33576(void *dummy){
C_word t13=C_pick(0);
C_word t12=C_pick(1);
C_word t11=C_pick(2);
C_word t10=C_pick(3);
C_word t9=C_pick(4);
C_word t8=C_pick(5);
C_word t7=C_pick(6);
C_word t6=C_pick(7);
C_word t5=C_pick(8);
C_word t4=C_pick(9);
C_word t3=C_pick(10);
C_word t2=C_pick(11);
C_word t1=C_pick(12);
C_word t0=C_pick(13);
C_adjust_stack(-14);
f_33576(t0,t1,t2,t3,t4,t5,t6,t7,t8,t9,t10,t11,t12,t13);}

C_noret_decl(trf_33596)
static void C_fcall trf_33596(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_33596(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_33596(t0,t1);}

C_noret_decl(trf_33599)
static void C_fcall trf_33599(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_33599(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_33599(t0,t1);}

C_noret_decl(trf_33470)
static void C_fcall trf_33470(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_33470(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_33470(t0,t1);}

C_noret_decl(trf_33392)
static void C_fcall trf_33392(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_33392(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_33392(t0,t1,t2);}

C_noret_decl(trf_33204)
static void C_fcall trf_33204(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_33204(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_33204(t0,t1);}

C_noret_decl(trf_32086)
static void C_fcall trf_32086(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32086(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_32086(t0,t1);}

C_noret_decl(trf_31959)
static void C_fcall trf_31959(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31959(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_31959(t0,t1,t2);}

C_noret_decl(trf_31657)
static void C_fcall trf_31657(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31657(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31657(t0,t1);}

C_noret_decl(trf_30752)
static void C_fcall trf_30752(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30752(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_30752(t0,t1,t2);}

C_noret_decl(trf_30787)
static void C_fcall trf_30787(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30787(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30787(t0,t1);}

C_noret_decl(trf_30811)
static void C_fcall trf_30811(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30811(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30811(t0,t1);}

C_noret_decl(trf_30790)
static void C_fcall trf_30790(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30790(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30790(t0,t1);}

C_noret_decl(trf_30593)
static void C_fcall trf_30593(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30593(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30593(t0,t1);}

C_noret_decl(trf_30411)
static void C_fcall trf_30411(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30411(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30411(t0,t1);}

C_noret_decl(trf_30418)
static void C_fcall trf_30418(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30418(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30418(t0,t1);}

C_noret_decl(trf_30399)
static void C_fcall trf_30399(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30399(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30399(t0,t1);}

C_noret_decl(trf_18310)
static void C_fcall trf_18310(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18310(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18310(t0,t1);}

C_noret_decl(trf_18317)
static void C_fcall trf_18317(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18317(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18317(t0,t1);}

C_noret_decl(trf_18631)
static void C_fcall trf_18631(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18631(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_18631(t0,t1,t2);}

C_noret_decl(trf_18654)
static void C_fcall trf_18654(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18654(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_18654(t0,t1,t2);}

C_noret_decl(trf_18671)
static void C_fcall trf_18671(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18671(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18671(t0,t1);}

C_noret_decl(trf_18674)
static void C_fcall trf_18674(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18674(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18674(t0,t1);}

C_noret_decl(trf_18677)
static void C_fcall trf_18677(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18677(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18677(t0,t1);}

C_noret_decl(trf_18595)
static void C_fcall trf_18595(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18595(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_18595(t0,t1,t2);}

C_noret_decl(trf_18539)
static void C_fcall trf_18539(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18539(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_18539(t0,t1,t2);}

C_noret_decl(trf_18555)
static void C_fcall trf_18555(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18555(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18555(t0,t1);}

C_noret_decl(trf_18333)
static void C_fcall trf_18333(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18333(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18333(t0,t1);}

C_noret_decl(trf_18336)
static void C_fcall trf_18336(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18336(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18336(t0,t1);}

C_noret_decl(trf_29908)
static void C_fcall trf_29908(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29908(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29908(t0,t1);}

C_noret_decl(trf_29911)
static void C_fcall trf_29911(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29911(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29911(t0,t1);}

C_noret_decl(trf_29754)
static void C_fcall trf_29754(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29754(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29754(t0,t1);}

C_noret_decl(trf_29562)
static void C_fcall trf_29562(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29562(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29562(t0,t1);}

C_noret_decl(trf_29412)
static void C_fcall trf_29412(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29412(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29412(t0,t1);}

C_noret_decl(trf_29501)
static void C_fcall trf_29501(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29501(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29501(t0,t1);}

C_noret_decl(trf_29415)
static void C_fcall trf_29415(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29415(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29415(t0,t1);}

C_noret_decl(trf_29431)
static void C_fcall trf_29431(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29431(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_29431(t0,t1,t2,t3);}

C_noret_decl(trf_29453)
static void C_fcall trf_29453(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29453(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29453(t0,t1);}

C_noret_decl(trf_29348)
static void C_fcall trf_29348(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29348(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_29348(t0,t1,t2);}

C_noret_decl(trf_29295)
static void C_fcall trf_29295(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29295(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29295(t0,t1);}

C_noret_decl(trf_22739)
static void C_fcall trf_22739(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22739(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22739(t0,t1);}

C_noret_decl(trf_22601)
static void C_fcall trf_22601(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22601(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22601(t0,t1);}

C_noret_decl(trf_22815)
static void C_fcall trf_22815(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22815(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22815(t0,t1);}

C_noret_decl(trf_28791)
static void C_fcall trf_28791(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28791(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_28791(t0,t1,t2);}

C_noret_decl(trf_28811)
static void C_fcall trf_28811(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28811(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28811(t0,t1);}

C_noret_decl(trf_28820)
static void C_fcall trf_28820(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28820(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28820(t0,t1);}

C_noret_decl(trf_28836)
static void C_fcall trf_28836(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28836(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28836(t0,t1);}

C_noret_decl(trf_28684)
static void C_fcall trf_28684(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28684(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28684(t0,t1);}

C_noret_decl(trf_28693)
static void C_fcall trf_28693(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28693(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_28693(t0,t1,t2);}

C_noret_decl(trf_28717)
static void C_fcall trf_28717(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28717(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28717(t0,t1);}

C_noret_decl(trf_28538)
static void C_fcall trf_28538(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28538(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28538(t0,t1);}

C_noret_decl(trf_28445)
static void C_fcall trf_28445(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28445(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_28445(t0,t1,t2);}

C_noret_decl(trf_28365)
static void C_fcall trf_28365(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28365(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28365(t0,t1);}

C_noret_decl(trf_28291)
static void C_fcall trf_28291(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28291(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28291(t0,t1);}

C_noret_decl(trf_28286)
static void C_fcall trf_28286(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28286(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_28286(t0,t1,t2);}

C_noret_decl(trf_28174)
static void C_fcall trf_28174(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28174(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_28174(t0,t1,t2,t3);}

C_noret_decl(trf_28245)
static void C_fcall trf_28245(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28245(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_28245(t0,t1,t2);}

C_noret_decl(trf_28204)
static void C_fcall trf_28204(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28204(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28204(t0,t1);}

C_noret_decl(trf_28176)
static void C_fcall trf_28176(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28176(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28176(t0,t1);}

C_noret_decl(trf_28131)
static void C_fcall trf_28131(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28131(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28131(t0,t1);}

C_noret_decl(trf_28087)
static void C_fcall trf_28087(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28087(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_28087(t0,t1,t2,t3);}

C_noret_decl(trf_28078)
static void C_fcall trf_28078(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28078(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28078(t0,t1);}

C_noret_decl(trf_27908)
static void C_fcall trf_27908(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27908(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_27908(t0,t1,t2,t3,t4);}

C_noret_decl(trf_27937)
static void C_fcall trf_27937(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27937(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_27937(t0,t1,t2);}

C_noret_decl(trf_27974)
static void C_fcall trf_27974(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27974(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27974(t0,t1);}

C_noret_decl(trf_27804)
static void C_fcall trf_27804(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27804(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27804(t0,t1);}

C_noret_decl(trf_27784)
static void C_fcall trf_27784(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27784(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27784(t0,t1);}

C_noret_decl(trf_27747)
static void C_fcall trf_27747(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27747(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27747(t0,t1);}

C_noret_decl(trf_27727)
static void C_fcall trf_27727(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27727(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27727(t0,t1);}

C_noret_decl(trf_26562)
static void C_fcall trf_26562(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26562(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26562(t0,t1);}

C_noret_decl(trf_26565)
static void C_fcall trf_26565(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26565(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26565(t0,t1);}

C_noret_decl(trf_26568)
static void C_fcall trf_26568(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26568(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26568(t0,t1);}

C_noret_decl(trf_26092)
static void C_fcall trf_26092(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26092(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26092(t0,t1);}

C_noret_decl(trf_26095)
static void C_fcall trf_26095(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26095(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26095(t0,t1);}

C_noret_decl(trf_26098)
static void C_fcall trf_26098(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26098(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26098(t0,t1);}

C_noret_decl(trf_25622)
static void C_fcall trf_25622(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25622(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25622(t0,t1);}

C_noret_decl(trf_25625)
static void C_fcall trf_25625(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25625(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25625(t0,t1);}

C_noret_decl(trf_25628)
static void C_fcall trf_25628(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25628(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25628(t0,t1);}

C_noret_decl(trf_24874)
static void C_fcall trf_24874(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24874(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24874(t0,t1);}

C_noret_decl(trf_24877)
static void C_fcall trf_24877(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24877(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24877(t0,t1);}

C_noret_decl(trf_24880)
static void C_fcall trf_24880(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24880(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24880(t0,t1);}

C_noret_decl(trf_24883)
static void C_fcall trf_24883(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24883(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24883(t0,t1);}

C_noret_decl(trf_24126)
static void C_fcall trf_24126(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24126(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24126(t0,t1);}

C_noret_decl(trf_24129)
static void C_fcall trf_24129(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24129(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24129(t0,t1);}

C_noret_decl(trf_24132)
static void C_fcall trf_24132(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24132(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24132(t0,t1);}

C_noret_decl(trf_24135)
static void C_fcall trf_24135(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24135(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24135(t0,t1);}

C_noret_decl(trf_23656)
static void C_fcall trf_23656(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23656(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23656(t0,t1);}

C_noret_decl(trf_23659)
static void C_fcall trf_23659(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23659(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23659(t0,t1);}

C_noret_decl(trf_23662)
static void C_fcall trf_23662(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23662(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23662(t0,t1);}

C_noret_decl(trf_22908)
static void C_fcall trf_22908(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22908(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22908(t0,t1);}

C_noret_decl(trf_22911)
static void C_fcall trf_22911(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22911(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22911(t0,t1);}

C_noret_decl(trf_22914)
static void C_fcall trf_22914(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22914(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22914(t0,t1);}

C_noret_decl(trf_22917)
static void C_fcall trf_22917(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22917(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22917(t0,t1);}

C_noret_decl(trf_22566)
static void C_fcall trf_22566(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22566(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_22566(t0,t1,t2,t3);}

C_noret_decl(trf_22406)
static void C_fcall trf_22406(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22406(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22406(t0,t1);}

C_noret_decl(trf_22441)
static void C_fcall trf_22441(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22441(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_22441(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_22451)
static void C_fcall trf_22451(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22451(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22451(t0,t1);}

C_noret_decl(trf_22414)
static void C_fcall trf_22414(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22414(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_22414(t0,t1,t2);}

C_noret_decl(trf_22574)
static void C_fcall trf_22574(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22574(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22574(t0,t1);}

C_noret_decl(trf_22192)
static void C_fcall trf_22192(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22192(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22192(t0,t1);}

C_noret_decl(trf_22198)
static void C_fcall trf_22198(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22198(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22198(t0,t1);}

C_noret_decl(trf_22221)
static void C_fcall trf_22221(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22221(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22221(t0,t1);}

C_noret_decl(trf_22234)
static void C_fcall trf_22234(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22234(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22234(t0,t1);}

C_noret_decl(trf_22208)
static void C_fcall trf_22208(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22208(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22208(t0,t1);}

C_noret_decl(trf_22021)
static void C_fcall trf_22021(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22021(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_22021(t0,t1,t2,t3);}

C_noret_decl(trf_22030)
static void C_fcall trf_22030(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22030(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_22030(t0,t1,t2,t3,t4);}

C_noret_decl(trf_21984)
static void C_fcall trf_21984(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21984(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21984(t0,t1);}

C_noret_decl(trf_21847)
static void C_fcall trf_21847(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21847(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21847(t0,t1);}

C_noret_decl(trf_21777)
static void C_fcall trf_21777(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21777(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21777(t0,t1);}

C_noret_decl(trf_21138)
static void C_fcall trf_21138(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21138(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_21138(t0,t1,t2);}

C_noret_decl(trf_21098)
static void C_fcall trf_21098(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21098(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_21098(t0,t1,t2);}

C_noret_decl(trf_21111)
static void C_fcall trf_21111(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21111(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21111(t0,t1);}

C_noret_decl(trf_21690)
static void C_fcall trf_21690(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21690(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21690(t0,t1);}

C_noret_decl(trf_21480)
static void C_fcall trf_21480(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21480(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21480(t0,t1);}

C_noret_decl(trf_21596)
static void C_fcall trf_21596(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21596(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21596(t0,t1);}

C_noret_decl(trf_21483)
static void C_fcall trf_21483(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21483(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21483(t0,t1);}

C_noret_decl(trf_21486)
static void C_fcall trf_21486(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21486(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21486(t0,t1);}

C_noret_decl(trf_21391)
static void C_fcall trf_21391(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21391(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21391(t0,t1);}

C_noret_decl(trf_21306)
static void C_fcall trf_21306(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21306(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21306(t0,t1);}

C_noret_decl(trf_21263)
static void C_fcall trf_21263(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21263(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21263(t0,t1);}

C_noret_decl(trf_21230)
static void C_fcall trf_21230(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21230(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21230(t0,t1);}

C_noret_decl(trf_21225)
static void C_fcall trf_21225(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21225(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21225(t0,t1);}

C_noret_decl(trf_21220)
static void C_fcall trf_21220(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21220(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_21220(t0,t1,t2,t3,t4);}

C_noret_decl(trf_20967)
static void C_fcall trf_20967(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20967(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20967(t0,t1);}

C_noret_decl(trf_20814)
static void C_fcall trf_20814(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20814(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_20814(t0,t1,t2,t3);}

C_noret_decl(trf_20660)
static void C_fcall trf_20660(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20660(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_20660(t0,t1,t2);}

C_noret_decl(trf_20502)
static void C_fcall trf_20502(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20502(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_20502(t0,t1,t2);}

C_noret_decl(trf_20535)
static void C_fcall trf_20535(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20535(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20535(t0,t1);}

C_noret_decl(trf_20442)
static void C_fcall trf_20442(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20442(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20442(t0,t1);}

C_noret_decl(trf_20407)
static void C_fcall trf_20407(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20407(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20407(t0,t1);}

C_noret_decl(trf_20423)
static void C_fcall trf_20423(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20423(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20423(t0,t1);}

C_noret_decl(trf_20378)
static void C_fcall trf_20378(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20378(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20378(t0,t1);}

C_noret_decl(trf_20285)
static void C_fcall trf_20285(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20285(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20285(t0,t1);}

C_noret_decl(trf_20041)
static void C_fcall trf_20041(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20041(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_20041(t0,t1,t2);}

C_noret_decl(trf_19845)
static void C_fcall trf_19845(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19845(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19845(t0,t1);}

C_noret_decl(trf_20008)
static void C_fcall trf_20008(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20008(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20008(t0,t1);}

C_noret_decl(trf_19848)
static void C_fcall trf_19848(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19848(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19848(t0,t1);}

C_noret_decl(trf_19851)
static void C_fcall trf_19851(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19851(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19851(t0,t1);}

C_noret_decl(trf_19854)
static void C_fcall trf_19854(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19854(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19854(t0,t1);}

C_noret_decl(trf_19896)
static void C_fcall trf_19896(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19896(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19896(t0,t1);}

C_noret_decl(trf_19861)
static void C_fcall trf_19861(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19861(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19861(t0,t1);}

C_noret_decl(trf_19590)
static void C_fcall trf_19590(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19590(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_19590(t0,t1,t2,t3);}

C_noret_decl(trf_19598)
static void C_fcall trf_19598(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19598(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_19598(t0,t1,t2,t3);}

C_noret_decl(trf_19727)
static void C_fcall trf_19727(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19727(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_19727(t0,t1,t2);}

C_noret_decl(trf_19681)
static void C_fcall trf_19681(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19681(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_19681(t0,t1,t2);}

C_noret_decl(trf_19584)
static void C_fcall trf_19584(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19584(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_19584(t0,t1,t2);}

C_noret_decl(trf_19578)
static void C_fcall trf_19578(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19578(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19578(t0,t1);}

C_noret_decl(trf_19572)
static void C_fcall trf_19572(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19572(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_19572(t0,t1,t2);}

C_noret_decl(trf_19501)
static void C_fcall trf_19501(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19501(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_19501(t0,t1,t2);}

C_noret_decl(trf_19503)
static void C_fcall trf_19503(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19503(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_19503(t0,t1,t2);}

C_noret_decl(trf_19509)
static void C_fcall trf_19509(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19509(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_19509(t0,t1,t2);}

C_noret_decl(trf_19350)
static void C_fcall trf_19350(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19350(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19350(t0,t1);}

C_noret_decl(trf_19365)
static void C_fcall trf_19365(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19365(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_19365(t0,t1,t2);}

C_noret_decl(trf_19308)
static void C_fcall trf_19308(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19308(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_19308(t0,t1,t2);}

C_noret_decl(trf_19248)
static void C_fcall trf_19248(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19248(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_19248(t0,t1,t2);}

C_noret_decl(trf_19124)
static void C_fcall trf_19124(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19124(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_19124(t0,t1,t2);}

C_noret_decl(trf_19000)
static void C_fcall trf_19000(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19000(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_19000(t0,t1,t2,t3);}

C_noret_decl(trf_19036)
static void C_fcall trf_19036(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19036(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_19036(t0,t1,t2);}

C_noret_decl(trf_18835)
static void C_fcall trf_18835(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18835(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18835(t0,t1);}

C_noret_decl(trf_16655)
static void C_fcall trf_16655(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16655(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16655(t0,t1);}

C_noret_decl(trf_18966)
static void C_fcall trf_18966(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18966(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_18966(t0,t1,t2);}

C_noret_decl(trf_18976)
static void C_fcall trf_18976(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18976(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18976(t0,t1);}

C_noret_decl(trf_18936)
static void C_fcall trf_18936(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18936(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_18936(t0,t1,t2);}

C_noret_decl(trf_18946)
static void C_fcall trf_18946(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18946(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18946(t0,t1);}

C_noret_decl(trf_17997)
static void C_fcall trf_17997(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17997(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17997(t0,t1);}

C_noret_decl(trf_18000)
static void C_fcall trf_18000(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18000(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18000(t0,t1);}

C_noret_decl(trf_18003)
static void C_fcall trf_18003(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18003(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18003(t0,t1);}

C_noret_decl(trf_18006)
static void C_fcall trf_18006(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18006(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18006(t0,t1);}

C_noret_decl(trf_18009)
static void C_fcall trf_18009(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18009(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18009(t0,t1);}

C_noret_decl(trf_18012)
static void C_fcall trf_18012(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18012(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18012(t0,t1);}

C_noret_decl(trf_17840)
static void C_fcall trf_17840(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17840(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17840(t0,t1);}

C_noret_decl(trf_17769)
static void C_fcall trf_17769(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17769(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17769(t0,t1);}

C_noret_decl(trf_17584)
static void C_fcall trf_17584(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17584(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17584(t0,t1);}

C_noret_decl(trf_17596)
static void C_fcall trf_17596(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17596(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17596(t0,t1);}

C_noret_decl(trf_17633)
static void C_fcall trf_17633(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17633(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_17633(t0,t1,t2,t3,t4);}

C_noret_decl(trf_17668)
static void C_fcall trf_17668(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17668(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17668(t0,t1);}

C_noret_decl(trf_17563)
static void C_fcall trf_17563(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17563(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17563(t0,t1);}

C_noret_decl(trf_17498)
static void C_fcall trf_17498(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17498(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_17498(t0,t1,t2);}

C_noret_decl(trf_17507)
static void C_fcall trf_17507(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17507(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_17507(t0,t1,t2);}

C_noret_decl(trf_17520)
static void C_fcall trf_17520(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17520(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17520(t0,t1);}

C_noret_decl(trf_17454)
static void C_fcall trf_17454(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17454(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_17454(t0,t1,t2);}

C_noret_decl(trf_17442)
static void C_fcall trf_17442(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17442(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17442(t0,t1);}

C_noret_decl(trf_17340)
static void C_fcall trf_17340(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17340(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17340(t0,t1);}

C_noret_decl(trf_17292)
static void C_fcall trf_17292(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17292(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17292(t0,t1);}

C_noret_decl(trf_16673)
static void C_fcall trf_16673(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16673(void *dummy){
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
f_16673(t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(trf_16683)
static void C_fcall trf_16683(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16683(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16683(t0,t1);}

C_noret_decl(trf_16812)
static void C_fcall trf_16812(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16812(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16812(t0,t1);}

C_noret_decl(trf_16900)
static void C_fcall trf_16900(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16900(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16900(t0,t1);}

C_noret_decl(trf_16973)
static void C_fcall trf_16973(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16973(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16973(t0,t1);}

C_noret_decl(trf_17051)
static void C_fcall trf_17051(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17051(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17051(t0,t1);}

C_noret_decl(trf_17002)
static void C_fcall trf_17002(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17002(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17002(t0,t1);}

C_noret_decl(trf_17018)
static void C_fcall trf_17018(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17018(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17018(t0,t1);}

C_noret_decl(trf_16982)
static void C_fcall trf_16982(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16982(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16982(t0,t1);}

C_noret_decl(trf_16924)
static void C_fcall trf_16924(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16924(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_16924(t0,t1,t2);}

C_noret_decl(trf_16843)
static void C_fcall trf_16843(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16843(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_16843(t0,t1,t2);}

C_noret_decl(trf_16859)
static void C_fcall trf_16859(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16859(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16859(t0,t1);}

C_noret_decl(trf_16827)
static void C_fcall trf_16827(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16827(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16827(t0,t1);}

C_noret_decl(trf_16569)
static void C_fcall trf_16569(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16569(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16569(t0,t1);}

C_noret_decl(trf_16578)
static void C_fcall trf_16578(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16578(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16578(t0,t1);}

C_noret_decl(trf_16583)
static void C_fcall trf_16583(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16583(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_16583(t0,t1,t2);}

C_noret_decl(trf_16561)
static void C_fcall trf_16561(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16561(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16561(t0,t1);}

C_noret_decl(trf_16353)
static void C_fcall trf_16353(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16353(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_16353(t0,t1,t2,t3);}

C_noret_decl(trf_16320)
static void C_fcall trf_16320(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16320(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_16320(t0,t1,t2,t3);}

C_noret_decl(trf_16302)
static void C_fcall trf_16302(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16302(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_16302(t0,t1,t2,t3);}

C_noret_decl(trf_16292)
static void C_fcall trf_16292(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16292(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_16292(t0,t1,t2,t3);}

C_noret_decl(trf_16280)
static void C_fcall trf_16280(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16280(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_16280(t0,t1,t2);}

C_noret_decl(trf_16248)
static void C_fcall trf_16248(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16248(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_16248(t0,t1,t2);}

C_noret_decl(trf_16232)
static void C_fcall trf_16232(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16232(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16232(t0,t1);}

C_noret_decl(trf_16220)
static void C_fcall trf_16220(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16220(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16220(t0,t1);}

C_noret_decl(trf_16202)
static void C_fcall trf_16202(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16202(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16202(t0,t1);}

C_noret_decl(trf_16184)
static void C_fcall trf_16184(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16184(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16184(t0,t1);}

C_noret_decl(trf_16169)
static void C_fcall trf_16169(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16169(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16169(t0,t1);}

C_noret_decl(trf_16163)
static void C_fcall trf_16163(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16163(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_16163(t0,t1,t2,t3);}

C_noret_decl(trf_16151)
static void C_fcall trf_16151(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16151(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16151(t0,t1);}

C_noret_decl(trf_16133)
static void C_fcall trf_16133(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16133(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16133(t0,t1);}

C_noret_decl(trf_16112)
static void C_fcall trf_16112(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16112(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_16112(t0,t1,t2);}

C_noret_decl(trf_16080)
static void C_fcall trf_16080(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16080(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16080(t0,t1);}

C_noret_decl(trf_16022)
static void C_fcall trf_16022(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16022(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_16022(t0,t1,t2);}

C_noret_decl(trf_16012)
static void C_fcall trf_16012(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16012(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16012(t0,t1);}

C_noret_decl(trf_16006)
static void C_fcall trf_16006(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16006(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16006(t0,t1);}

C_noret_decl(trf_15994)
static void C_fcall trf_15994(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15994(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15994(t0,t1);}

C_noret_decl(trf_15970)
static void C_fcall trf_15970(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15970(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_15970(t0,t1,t2);}

C_noret_decl(trf_15883)
static void C_fcall trf_15883(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15883(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15883(t0,t1);}

C_noret_decl(trf_15862)
static void C_fcall trf_15862(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15862(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_15862(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_15852)
static void C_fcall trf_15852(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15852(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15852(t0,t1);}

C_noret_decl(trf_15840)
static void C_fcall trf_15840(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15840(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15840(t0,t1);}

C_noret_decl(trf_15799)
static void C_fcall trf_15799(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15799(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15799(t0,t1);}

C_noret_decl(trf_15781)
static void C_fcall trf_15781(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15781(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15781(t0,t1);}

C_noret_decl(trf_15763)
static void C_fcall trf_15763(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15763(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15763(t0,t1);}

C_noret_decl(trf_15686)
static void C_fcall trf_15686(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15686(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_15686(t0,t1,t2);}

C_noret_decl(trf_15711)
static void C_fcall trf_15711(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15711(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15711(t0,t1);}

C_noret_decl(trf_15414)
static void C_fcall trf_15414(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15414(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15414(t0,t1);}

C_noret_decl(trf_15417)
static void C_fcall trf_15417(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15417(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15417(t0,t1);}

C_noret_decl(trf_15423)
static void C_fcall trf_15423(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15423(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15423(t0,t1);}

C_noret_decl(trf_15137)
static void C_fcall trf_15137(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15137(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15137(t0,t1);}

C_noret_decl(trf_15140)
static void C_fcall trf_15140(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15140(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15140(t0,t1);}

C_noret_decl(trf_15067)
static void C_fcall trf_15067(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15067(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15067(t0,t1);}

C_noret_decl(trf_14915)
static void C_fcall trf_14915(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14915(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_14915(t0,t1,t2,t3,t4);}

C_noret_decl(trf_14840)
static void C_fcall trf_14840(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14840(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_14840(t0,t1,t2,t3,t4);}

C_noret_decl(trf_14850)
static void C_fcall trf_14850(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14850(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14850(t0,t1);}

C_noret_decl(trf_14857)
static void C_fcall trf_14857(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14857(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14857(t0,t1);}

C_noret_decl(trf_14952)
static void C_fcall trf_14952(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14952(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_14952(t0,t1,t2);}

C_noret_decl(trf_14730)
static void C_fcall trf_14730(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14730(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_14730(t0,t1,t2,t3);}

C_noret_decl(trf_14742)
static void C_fcall trf_14742(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14742(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_14742(t0,t1,t2,t3,t4);}

C_noret_decl(trf_14803)
static void C_fcall trf_14803(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14803(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_14803(t0,t1,t2);}

C_noret_decl(trf_14167)
static void C_fcall trf_14167(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14167(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_14167(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_14103)
static void C_fcall trf_14103(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14103(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14103(t0,t1);}

C_noret_decl(trf_14050)
static void C_fcall trf_14050(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14050(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14050(t0,t1);}

C_noret_decl(trf_14053)
static void C_fcall trf_14053(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14053(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14053(t0,t1);}

C_noret_decl(trf_14247)
static void C_fcall trf_14247(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14247(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14247(t0,t1);}

C_noret_decl(trf_14250)
static void C_fcall trf_14250(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14250(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14250(t0,t1);}

C_noret_decl(trf_14253)
static void C_fcall trf_14253(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14253(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14253(t0,t1);}

C_noret_decl(trf_14268)
static void C_fcall trf_14268(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14268(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14268(t0,t1);}

C_noret_decl(trf_13829)
static void C_fcall trf_13829(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13829(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13829(t0,t1);}

C_noret_decl(trf_13921)
static void C_fcall trf_13921(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13921(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_13921(t0,t1,t2);}

C_noret_decl(trf_13940)
static void C_fcall trf_13940(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13940(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13940(t0,t1);}

C_noret_decl(trf_13894)
static void C_fcall trf_13894(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13894(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_13894(t0,t1,t2);}

C_noret_decl(trf_13839)
static void C_fcall trf_13839(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13839(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_13839(t0,t1,t2);}

C_noret_decl(trf_13849)
static void C_fcall trf_13849(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13849(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_13849(t0,t1,t2,t3);}

C_noret_decl(trf_13695)
static void C_fcall trf_13695(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13695(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_13695(t0,t1,t2);}

C_noret_decl(trf_13764)
static void C_fcall trf_13764(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13764(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_13764(t0,t1,t2);}

C_noret_decl(trf_13710)
static void C_fcall trf_13710(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13710(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_13710(t0,t1,t2,t3,t4);}

C_noret_decl(trf_13252)
static void C_fcall trf_13252(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13252(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13252(t0,t1);}

C_noret_decl(trf_13255)
static void C_fcall trf_13255(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13255(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13255(t0,t1);}

C_noret_decl(trf_13258)
static void C_fcall trf_13258(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13258(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13258(t0,t1);}

C_noret_decl(trf_13261)
static void C_fcall trf_13261(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13261(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13261(t0,t1);}

C_noret_decl(trf_13225)
static void C_fcall trf_13225(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13225(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13225(t0,t1);}

C_noret_decl(trf_12948)
static void C_fcall trf_12948(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12948(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12948(t0,t1);}

C_noret_decl(trf_12951)
static void C_fcall trf_12951(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12951(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12951(t0,t1);}

C_noret_decl(trf_12954)
static void C_fcall trf_12954(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12954(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12954(t0,t1);}

C_noret_decl(trf_12845)
static void C_fcall trf_12845(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12845(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12845(t0,t1);}

C_noret_decl(trf_12836)
static void C_fcall trf_12836(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12836(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_12836(t0,t1,t2);}

C_noret_decl(trf_12827)
static void C_fcall trf_12827(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12827(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12827(t0,t1);}

C_noret_decl(trf_12809)
static void C_fcall trf_12809(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12809(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12809(t0,t1);}

C_noret_decl(trf_12791)
static void C_fcall trf_12791(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12791(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12791(t0,t1);}

C_noret_decl(trf_12773)
static void C_fcall trf_12773(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12773(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12773(t0,t1);}

C_noret_decl(trf_12764)
static void C_fcall trf_12764(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12764(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_12764(t0,t1,t2);}

C_noret_decl(trf_12755)
static void C_fcall trf_12755(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12755(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12755(t0,t1);}

C_noret_decl(trf_12586)
static void C_fcall trf_12586(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12586(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12586(t0,t1);}

C_noret_decl(trf_12542)
static void C_fcall trf_12542(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12542(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_12542(t0,t1,t2);}

C_noret_decl(trf_12063)
static void C_fcall trf_12063(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12063(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12063(t0,t1);}

C_noret_decl(trf_12066)
static void C_fcall trf_12066(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12066(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12066(t0,t1);}

C_noret_decl(trf_12069)
static void C_fcall trf_12069(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12069(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12069(t0,t1);}

C_noret_decl(trf_12072)
static void C_fcall trf_12072(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12072(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12072(t0,t1);}

C_noret_decl(trf_12018)
static void C_fcall trf_12018(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12018(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_12018(t0,t1,t2,t3,t4);}

C_noret_decl(trf_11724)
static void C_fcall trf_11724(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11724(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11724(t0,t1);}

C_noret_decl(trf_11727)
static void C_fcall trf_11727(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11727(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11727(t0,t1);}

C_noret_decl(trf_11730)
static void C_fcall trf_11730(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11730(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11730(t0,t1);}

C_noret_decl(trf_11441)
static void C_fcall trf_11441(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11441(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11441(t0,t1);}

C_noret_decl(trf_11444)
static void C_fcall trf_11444(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11444(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11444(t0,t1);}

C_noret_decl(trf_11447)
static void C_fcall trf_11447(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11447(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11447(t0,t1);}

C_noret_decl(trf_11400)
static void C_fcall trf_11400(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11400(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11400(t0,t1);}

C_noret_decl(trf_11356)
static void C_fcall trf_11356(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11356(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11356(t0,t1);}

C_noret_decl(trf_11271)
static void C_fcall trf_11271(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11271(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11271(t0,t1);}

C_noret_decl(trf_10756)
static void C_fcall trf_10756(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10756(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10756(t0,t1);}

C_noret_decl(trf_10759)
static void C_fcall trf_10759(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10759(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10759(t0,t1);}

C_noret_decl(trf_10762)
static void C_fcall trf_10762(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10762(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10762(t0,t1);}

C_noret_decl(trf_10765)
static void C_fcall trf_10765(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10765(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10765(t0,t1);}

C_noret_decl(trf_10672)
static void C_fcall trf_10672(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10672(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_10672(t0,t1,t2);}

C_noret_decl(trf_10663)
static void C_fcall trf_10663(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10663(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10663(t0,t1);}

C_noret_decl(trf_10598)
static void C_fcall trf_10598(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10598(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10598(t0,t1);}

C_noret_decl(trf_10340)
static void C_fcall trf_10340(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10340(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10340(t0,t1);}

C_noret_decl(trf_10343)
static void C_fcall trf_10343(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10343(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10343(t0,t1);}

C_noret_decl(trf_10346)
static void C_fcall trf_10346(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10346(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10346(t0,t1);}

C_noret_decl(trf_10221)
static void C_fcall trf_10221(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10221(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10221(t0,t1);}

C_noret_decl(trf_10245)
static void C_fcall trf_10245(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10245(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10245(t0,t1);}

C_noret_decl(trf_10175)
static void C_fcall trf_10175(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10175(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_10175(t0,t1,t2);}

C_noret_decl(trf_10166)
static void C_fcall trf_10166(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10166(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10166(t0,t1);}

C_noret_decl(trf_9865)
static void C_fcall trf_9865(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9865(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9865(t0,t1);}

C_noret_decl(trf_10101)
static void C_fcall trf_10101(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10101(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10101(t0,t1);}

C_noret_decl(trf_10107)
static void C_fcall trf_10107(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10107(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10107(t0,t1);}

C_noret_decl(trf_9999)
static void C_fcall trf_9999(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9999(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9999(t0,t1);}

C_noret_decl(trf_10001)
static void C_fcall trf_10001(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10001(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_10001(t0,t1,t2,t3);}

C_noret_decl(trf_10050)
static void C_fcall trf_10050(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10050(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10050(t0,t1);}

C_noret_decl(trf_10015)
static void C_fcall trf_10015(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10015(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10015(t0,t1);}

C_noret_decl(trf_9899)
static void C_fcall trf_9899(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9899(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9899(t0,t1);}

C_noret_decl(trf_9813)
static void C_fcall trf_9813(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9813(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_9813(t0,t1,t2,t3,t4);}

C_noret_decl(trf_9832)
static void C_fcall trf_9832(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9832(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9832(t0,t1);}

C_noret_decl(trf_9763)
static void C_fcall trf_9763(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9763(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_9763(t0,t1,t2,t3);}

C_noret_decl(trf_9524)
static void C_fcall trf_9524(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9524(void *dummy){
C_word t9=C_pick(0);
C_word t8=C_pick(1);
C_word t7=C_pick(2);
C_word t6=C_pick(3);
C_word t5=C_pick(4);
C_word t4=C_pick(5);
C_word t3=C_pick(6);
C_word t2=C_pick(7);
C_word t1=C_pick(8);
C_word t0=C_pick(9);
C_adjust_stack(-10);
f_9524(t0,t1,t2,t3,t4,t5,t6,t7,t8,t9);}

C_noret_decl(trf_9543)
static void C_fcall trf_9543(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9543(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9543(t0,t1);}

C_noret_decl(trf_9558)
static void C_fcall trf_9558(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9558(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9558(t0,t1);}

C_noret_decl(trf_9567)
static void C_fcall trf_9567(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9567(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9567(t0,t1);}

C_noret_decl(trf_9514)
static void C_fcall trf_9514(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9514(void *dummy){
C_word t0=C_pick(0);
C_adjust_stack(-1);
f_9514(t0);}

C_noret_decl(trf_9459)
static void C_fcall trf_9459(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9459(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9459(t0,t1);}

C_noret_decl(trf_9450)
static void C_fcall trf_9450(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9450(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_9450(t0,t1,t2);}

C_noret_decl(trf_9333)
static void C_fcall trf_9333(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9333(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9333(t0,t1);}

C_noret_decl(trf_9324)
static void C_fcall trf_9324(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9324(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_9324(t0,t1,t2);}

C_noret_decl(trf_9306)
static void C_fcall trf_9306(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9306(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_9306(t0,t1,t2);}

C_noret_decl(trf_9297)
static void C_fcall trf_9297(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9297(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9297(t0,t1);}

C_noret_decl(trf_9279)
static void C_fcall trf_9279(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9279(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9279(t0,t1);}

C_noret_decl(trf_9270)
static void C_fcall trf_9270(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9270(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_9270(t0,t1,t2);}

C_noret_decl(trf_9261)
static void C_fcall trf_9261(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9261(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9261(t0,t1);}

C_noret_decl(trf_9243)
static void C_fcall trf_9243(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9243(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9243(t0,t1);}

C_noret_decl(trf_9234)
static void C_fcall trf_9234(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9234(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_9234(t0,t1,t2);}

C_noret_decl(trf_9225)
static void C_fcall trf_9225(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9225(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9225(t0,t1);}

C_noret_decl(trf_9210)
static void C_fcall trf_9210(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9210(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9210(t0,t1);}

C_noret_decl(trf_9165)
static void C_fcall trf_9165(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9165(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9165(t0,t1);}

C_noret_decl(trf_9147)
static void C_fcall trf_9147(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9147(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9147(t0,t1);}

C_noret_decl(trf_9138)
static void C_fcall trf_9138(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9138(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_9138(t0,t1,t2);}

C_noret_decl(trf_9111)
static void C_fcall trf_9111(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9111(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9111(t0,t1);}

C_noret_decl(trf_9093)
static void C_fcall trf_9093(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9093(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9093(t0,t1);}

C_noret_decl(trf_9075)
static void C_fcall trf_9075(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9075(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9075(t0,t1);}

C_noret_decl(trf_9066)
static void C_fcall trf_9066(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9066(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_9066(t0,t1,t2);}

C_noret_decl(trf_9054)
static void C_fcall trf_9054(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9054(void *dummy){
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
f_9054(t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(trf_8799)
static void C_fcall trf_8799(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8799(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_8799(t0,t1,t2);}

C_noret_decl(trf_8808)
static void C_fcall trf_8808(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8808(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_8808(t0,t1,t2,t3);}

C_noret_decl(trf_8641)
static void C_fcall trf_8641(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8641(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8641(t0,t1);}

C_noret_decl(trf_8657)
static void C_fcall trf_8657(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8657(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_8657(t0,t1,t2,t3);}

C_noret_decl(trf_8465)
static void C_fcall trf_8465(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8465(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_8465(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_8495)
static void C_fcall trf_8495(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8495(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8495(t0,t1);}

C_noret_decl(trf_8478)
static void C_fcall trf_8478(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8478(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8478(t0,t1);}

C_noret_decl(trf_8343)
static void C_fcall trf_8343(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8343(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_8343(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_8373)
static void C_fcall trf_8373(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8373(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8373(t0,t1);}

C_noret_decl(trf_8356)
static void C_fcall trf_8356(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8356(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8356(t0,t1);}

C_noret_decl(trf_8246)
static void C_fcall trf_8246(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8246(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_8246(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_8259)
static void C_fcall trf_8259(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8259(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8259(t0,t1);}

C_noret_decl(trf_8178)
static void C_fcall trf_8178(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8178(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_8178(t0,t1,t2,t3);}

C_noret_decl(trf_8148)
static void C_fcall trf_8148(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8148(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8148(t0,t1);}

C_noret_decl(trf_8076)
static void C_fcall trf_8076(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8076(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_8076(t0,t1,t2,t3);}

C_noret_decl(trf_7745)
static void C_fcall trf_7745(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7745(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7745(t0,t1);}

C_noret_decl(trf_7748)
static void C_fcall trf_7748(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7748(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7748(t0,t1);}

C_noret_decl(trf_7754)
static void C_fcall trf_7754(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7754(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7754(t0,t1);}

C_noret_decl(trf_7514)
static void C_fcall trf_7514(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7514(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7514(t0,t1);}

C_noret_decl(trf_7517)
static void C_fcall trf_7517(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7517(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7517(t0,t1);}

C_noret_decl(trf_7419)
static void C_fcall trf_7419(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7419(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7419(t0,t1);}

C_noret_decl(trf_7348)
static void C_fcall trf_7348(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7348(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7348(t0,t1);}

C_noret_decl(trf_7357)
static void C_fcall trf_7357(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7357(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_7357(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_7238)
static void C_fcall trf_7238(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7238(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_7238(t0,t1,t2);}

C_noret_decl(trf_6957)
static void C_fcall trf_6957(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6957(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_6957(t0,t1);}

C_noret_decl(trf_6960)
static void C_fcall trf_6960(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6960(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_6960(t0,t1);}

C_noret_decl(trf_6701)
static void C_fcall trf_6701(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6701(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_6701(t0,t1);}

C_noret_decl(trf_6691)
static void C_fcall trf_6691(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6691(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_6691(t0,t1);}

C_noret_decl(trf_6673)
static void C_fcall trf_6673(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6673(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_6673(t0,t1);}

C_noret_decl(trf_6662)
static void C_fcall trf_6662(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6662(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_6662(t0,t1,t2);}

C_noret_decl(trf_6624)
static void C_fcall trf_6624(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6624(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_6624(t0,t1);}

C_noret_decl(trf_6617)
static void C_fcall trf_6617(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6617(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_6617(t0,t1);}

C_noret_decl(trf_6593)
static void C_fcall trf_6593(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6593(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_6593(t0,t1);}

C_noret_decl(trf_6564)
static void C_fcall trf_6564(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6564(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_6564(t0,t1,t2,t3);}

C_noret_decl(trf_6553)
static void C_fcall trf_6553(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6553(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_6553(t0,t1,t2);}

C_noret_decl(trf_6542)
static void C_fcall trf_6542(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6542(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_6542(t0,t1,t2);}

C_noret_decl(trf_6508)
static void C_fcall trf_6508(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6508(void *dummy){
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
f_6508(t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(trf_6481)
static void C_fcall trf_6481(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6481(void *dummy){
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
f_6481(t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(trf_6440)
static void C_fcall trf_6440(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6440(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_6440(t0,t1,t2);}

C_noret_decl(trf_6446)
static void C_fcall trf_6446(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6446(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_6446(t0,t1,t2);}

C_noret_decl(trf_6456)
static void C_fcall trf_6456(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6456(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_6456(t0,t1);}

C_noret_decl(trf_6288)
static void C_fcall trf_6288(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6288(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_6288(t0,t1,t2,t3);}

C_noret_decl(trf_6265)
static void C_fcall trf_6265(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6265(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_6265(t0,t1,t2,t3);}

C_noret_decl(trf_5671)
static void C_fcall trf_5671(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_5671(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_5671(t0,t1);}

C_noret_decl(trf_5683)
static void C_fcall trf_5683(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_5683(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_5683(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_5736)
static void C_fcall trf_5736(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_5736(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_5736(t0,t1);}

C_noret_decl(trf_5695)
static void C_fcall trf_5695(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_5695(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_5695(t0,t1,t2);}

C_noret_decl(trf_5708)
static void C_fcall trf_5708(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_5708(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_5708(t0,t1);}

C_noret_decl(tr6)
static void C_fcall tr6(C_proc6 k) C_regparm C_noret;
C_regparm static void C_fcall tr6(C_proc6 k){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
(k)(6,t0,t1,t2,t3,t4,t5);}

C_noret_decl(tr7)
static void C_fcall tr7(C_proc7 k) C_regparm C_noret;
C_regparm static void C_fcall tr7(C_proc7 k){
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
(k)(7,t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(tr3)
static void C_fcall tr3(C_proc3 k) C_regparm C_noret;
C_regparm static void C_fcall tr3(C_proc3 k){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
(k)(3,t0,t1,t2);}

C_noret_decl(tr5)
static void C_fcall tr5(C_proc5 k) C_regparm C_noret;
C_regparm static void C_fcall tr5(C_proc5 k){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
(k)(5,t0,t1,t2,t3,t4);}

C_noret_decl(tr4)
static void C_fcall tr4(C_proc4 k) C_regparm C_noret;
C_regparm static void C_fcall tr4(C_proc4 k){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
(k)(4,t0,t1,t2,t3);}

C_noret_decl(tr2)
static void C_fcall tr2(C_proc2 k) C_regparm C_noret;
C_regparm static void C_fcall tr2(C_proc2 k){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
(k)(2,t0,t1);}

C_noret_decl(tr7r)
static void C_fcall tr7r(C_proc7 k) C_regparm C_noret;
C_regparm static void C_fcall tr7r(C_proc7 k){
int n;
C_word *a,t7;
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
n=C_rest_count(0);
a=C_alloc(n*3);
t7=C_restore_rest(a,n);
(k)(t0,t1,t2,t3,t4,t5,t6,t7);}

C_noret_decl(tr6r)
static void C_fcall tr6r(C_proc6 k) C_regparm C_noret;
C_regparm static void C_fcall tr6r(C_proc6 k){
int n;
C_word *a,t6;
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
n=C_rest_count(0);
a=C_alloc(n*3);
t6=C_restore_rest(a,n);
(k)(t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(tr2r)
static void C_fcall tr2r(C_proc2 k) C_regparm C_noret;
C_regparm static void C_fcall tr2r(C_proc2 k){
int n;
C_word *a,t2;
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
n=C_rest_count(0);
a=C_alloc(n*3);
t2=C_restore_rest(a,n);
(k)(t0,t1,t2);}

C_noret_decl(tr4r)
static void C_fcall tr4r(C_proc4 k) C_regparm C_noret;
C_regparm static void C_fcall tr4r(C_proc4 k){
int n;
C_word *a,t4;
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
n=C_rest_count(0);
a=C_alloc(n*3);
t4=C_restore_rest(a,n);
(k)(t0,t1,t2,t3,t4);}

C_noret_decl(tr3r)
static void C_fcall tr3r(C_proc3 k) C_regparm C_noret;
C_regparm static void C_fcall tr3r(C_proc3 k){
int n;
C_word *a,t3;
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
n=C_rest_count(0);
a=C_alloc(n*3);
t3=C_restore_rest(a,n);
(k)(t0,t1,t2,t3);}

C_noret_decl(tr4rv)
static void C_fcall tr4rv(C_proc4 k) C_regparm C_noret;
C_regparm static void C_fcall tr4rv(C_proc4 k){
int n;
C_word *a,t4;
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
n=C_rest_count(0);
a=C_alloc(n+1);
t4=C_restore_rest_vector(a,n);
(k)(t0,t1,t2,t3,t4);}

C_noret_decl(tr3rv)
static void C_fcall tr3rv(C_proc3 k) C_regparm C_noret;
C_regparm static void C_fcall tr3rv(C_proc3 k){
int n;
C_word *a,t3;
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
n=C_rest_count(0);
a=C_alloc(n+1);
t3=C_restore_rest_vector(a,n);
(k)(t0,t1,t2,t3);}

C_noret_decl(tr2rv)
static void C_fcall tr2rv(C_proc2 k) C_regparm C_noret;
C_regparm static void C_fcall tr2rv(C_proc2 k){
int n;
C_word *a,t2;
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
n=C_rest_count(0);
a=C_alloc(n+1);
t2=C_restore_rest_vector(a,n);
(k)(t0,t1,t2);}

/* toplevel */
static C_TLS int toplevel_initialized=0;
C_noret_decl(toplevel_trampoline)
static void C_fcall toplevel_trampoline(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall toplevel_trampoline(void *dummy){
C_grace_toplevel(2,C_SCHEME_UNDEFINED,C_restore);}

void C_ccall C_grace_toplevel(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(toplevel_initialized) C_kontinue(t1,C_SCHEME_UNDEFINED);
else C_toplevel_entry(C_text("grace_toplevel"));
C_check_nursery_minimum(3);
if(!C_demand(3)){
C_save(t1);
C_reclaim((void*)toplevel_trampoline,NULL);}
toplevel_initialized=1;
if(!C_demand_2(4918)){
C_save(t1);
C_rereclaim2(4918*sizeof(C_word), 1);
t1=C_restore;}
a=C_alloc(3);
C_initialize_lf(lf,835);
lf[0]=C_h_intern(&lf[0],14,"expand-optkeys");
lf[1]=C_h_intern(&lf[1],3,"let");
lf[2]=C_h_intern(&lf[2],4,"let*");
lf[3]=C_h_intern(&lf[3],5,"null\077");
lf[4]=C_h_intern(&lf[4],5,"error");
lf[5]=C_decode_literal(C_heaptop,"\376B\000\000\022Too many arguments");
lf[6]=C_h_intern(&lf[6],6,"unless");
lf[7]=C_h_intern(&lf[7],10,"\003sysappend");
lf[8]=C_h_intern(&lf[8],3,"car");
lf[9]=C_h_intern(&lf[9],4,"case");
lf[10]=C_decode_literal(C_heaptop,"\376B\000\000\031Positional after keywords");
lf[11]=C_h_intern(&lf[11],4,"when");
lf[12]=C_h_intern(&lf[12],4,"set!");
lf[13]=C_h_intern(&lf[13],8,"keyword\077");
lf[14]=C_decode_literal(C_heaptop,"\376B\000\000\017Unknown keyword");
lf[15]=C_h_intern(&lf[15],3,"cdr");
lf[16]=C_h_intern(&lf[16],4,"else");
lf[17]=C_h_intern(&lf[17],7,"\003sysmap");
lf[18]=C_h_intern(&lf[18],6,"append");
lf[19]=C_decode_literal(C_heaptop,"\376B\000\000\021Redundant keyword");
lf[20]=C_h_intern(&lf[20],2,"if");
lf[21]=C_decode_literal(C_heaptop,"\376B\000\000\030Missing keyword value in");
lf[22]=C_h_intern(&lf[22],4,"cadr");
lf[23]=C_h_intern(&lf[23],4,"cddr");
lf[24]=C_h_intern(&lf[24],15,"string->keyword");
lf[25]=C_h_intern(&lf[25],14,"symbol->string");
lf[26]=C_h_intern(&lf[26],6,"gensym");
lf[27]=C_decode_literal(C_heaptop,"\376B\000\000\004keyp");
lf[28]=C_decode_literal(C_heaptop,"\376B\000\000\004args");
lf[29]=C_h_intern(&lf[29],10,"*messages*");
lf[30]=C_h_intern(&lf[30],11,"expand-send");
lf[31]=C_h_intern(&lf[31],7,"sprintf");
lf[32]=C_decode_literal(C_heaptop,"\376B\000\000\003~A:");
lf[33]=C_h_intern(&lf[33],15,"keyword->string");
lf[34]=C_decode_literal(C_heaptop,"\376B\000\000\031~S duplicate keyword \047~S\047");
lf[35]=C_decode_literal(C_heaptop,"\376B\000\000!~S missing value for keyword \047~A\047");
lf[36]=C_decode_literal(C_heaptop,"\376B\000\000/~S invalid keyword \047~A\047~%Available keywords: ~A");
lf[37]=C_decode_literal(C_heaptop,"\376B\000\000 ~S expected keyword but got \047~S\047");
lf[38]=C_decode_literal(C_heaptop,"\376B\000\000#~S expected ~A arguments but got ~A");
lf[39]=C_h_intern(&lf[39],5,"&rest");
lf[40]=C_decode_literal(C_heaptop,"\376B\000\000\030~S is an invalid message");
lf[41]=C_h_intern(&lf[41],14,"hash-table-ref");
lf[42]=C_h_intern(&lf[42],3,"cwd");
lf[43]=C_h_intern(&lf[43],17,"\003syspeek-c-string");
lf[44]=C_h_intern(&lf[44],5,"chdir");
lf[45]=C_decode_literal(C_heaptop,"\376B\000\000\002~/");
lf[46]=C_h_intern(&lf[46],17,"\003sysmake-c-string");
lf[47]=C_h_intern(&lf[47],5,"fifth");
lf[48]=C_h_intern(&lf[48],5,"sixth");
lf[49]=C_h_intern(&lf[49],7,"seventh");
lf[50]=C_h_intern(&lf[50],6,"eighth");
lf[51]=C_h_intern(&lf[51],5,"ninth");
lf[52]=C_h_intern(&lf[52],5,"tenth");
lf[53]=C_h_intern(&lf[53],3,"nth");
lf[54]=C_h_intern(&lf[54],8,"list-ref");
lf[55]=C_h_intern(&lf[55],4,"rest");
lf[56]=C_h_intern(&lf[56],4,"last");
lf[57]=C_h_intern(&lf[57],7,"butlast");
lf[58]=C_h_intern(&lf[58],5,"list*");
lf[59]=C_decode_literal(C_heaptop,"\376B\000\000&>>> Error: too few arguments to list*.");
lf[60]=C_h_intern(&lf[60],9,"list-set!");
lf[61]=C_h_intern(&lf[61],9,"make-list");
lf[62]=C_decode_literal(C_heaptop,"\376B\000\000\034Negative length to make-list");
lf[87]=C_h_intern(&lf[87],7,"rescale");
lf[88]=C_h_intern(&lf[88],8,"discrete");
lf[89]=C_h_intern(&lf[89],3,"int");
lf[90]=C_h_intern(&lf[90],4,"plus");
lf[91]=C_h_intern(&lf[91],1,"+");
lf[92]=C_h_intern(&lf[92],5,"minus");
lf[93]=C_h_intern(&lf[93],1,"-");
lf[94]=C_h_intern(&lf[94],5,"times");
lf[95]=C_h_intern(&lf[95],1,"*");
lf[96]=C_h_intern(&lf[96],6,"divide");
lf[97]=C_h_intern(&lf[97],1,"/");
lf[98]=C_h_intern(&lf[98],8,"quantize");
lf[99]=C_h_intern(&lf[99],8,"decimals");
lf[100]=C_h_intern(&lf[100],15,"rhythm->seconds");
lf[101]=C_decode_literal(C_heaptop,"\376U60.0\000");
lf[102]=C_decode_literal(C_heaptop,"\376U0.25\000");
lf[103]=C_h_intern(&lf[103],6,"\000tempo");
lf[104]=C_h_intern(&lf[104],5,"\000beat");
lf[105]=C_h_intern(&lf[105],13,"cents->scaler");
lf[106]=C_h_intern(&lf[106],13,"scaler->cents");
lf[107]=C_h_intern(&lf[107],7,"interpl");
lf[108]=C_decode_literal(C_heaptop,"\376B\000\000\033not an x y coordinate list:");
lf[109]=C_h_intern(&lf[109],3,"err");
lf[110]=C_decode_literal(C_heaptop,"\376B\000\000\033not an x y coordinate list:");
lf[111]=C_decode_literal(C_heaptop,"\376B\000\000\033not an x y coordinate list:");
lf[112]=C_h_intern(&lf[112],6,"interp");
lf[113]=C_h_intern(&lf[113],5,"scale");
lf[114]=C_h_intern(&lf[114],6,"modulo");
lf[115]=C_h_intern(&lf[115],8,"ran-set!");
lf[116]=C_h_intern(&lf[116],3,"ran");
lf[117]=C_h_intern(&lf[117],7,"between");
lf[118]=C_h_intern(&lf[118],4,"pick");
lf[119]=C_h_intern(&lf[119],4,"odds");
lf[120]=C_decode_literal(C_heaptop,"\376U1.0\000");
lf[121]=C_h_intern(&lf[121],5,"\000true");
lf[122]=C_h_intern(&lf[122],6,"\000false");
lf[123]=C_h_intern(&lf[123],6,"ranlow");
lf[124]=C_h_intern(&lf[124],7,"ranhigh");
lf[125]=C_h_intern(&lf[125],9,"ranmiddle");
lf[126]=C_h_intern(&lf[126],7,"ranbeta");
lf[127]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[128]=C_h_intern(&lf[128],2,"\000a");
lf[129]=C_h_intern(&lf[129],2,"\000b");
lf[130]=C_h_intern(&lf[130],6,"ranexp");
lf[131]=C_h_intern(&lf[131],8,"rangauss");
lf[132]=C_h_intern(&lf[132],9,"rancauchy");
lf[133]=C_h_intern(&lf[133],10,"ranpoisson");
lf[134]=C_h_intern(&lf[134],3,"arg");
lf[135]=C_h_intern(&lf[135],8,"rangamma");
lf[136]=C_h_intern(&lf[136],8,"ranbrown");
lf[137]=C_h_intern(&lf[137],7,"ranpink");
lf[140]=C_decode_literal(C_heaptop,"\376B\000\000\021Not a note or key");
lf[141]=C_h_intern(&lf[141],13,"string-append");
lf[142]=C_decode_literal(C_heaptop,"\376B\000\000\021Not a note or key");
lf[144]=C_decode_literal(C_heaptop,"\376B\000\000\021Not a note or key");
lf[145]=C_decode_literal(C_heaptop,"\376B\000\000\021Not a note or key");
lf[146]=C_decode_literal(C_heaptop,"\376U0.333333333333333\000");
lf[147]=C_decode_literal(C_heaptop,"\376U0.666666666666667\000");
lf[148]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[149]=C_h_intern(&lf[149],5,"floor");
lf[150]=C_decode_literal(C_heaptop,"\376B\000\000\021Not a note or key");
lf[151]=C_h_intern(&lf[151],4,"note");
lf[152]=C_decode_literal(C_heaptop,"\376B\000\000\0014");
lf[153]=C_h_intern(&lf[153],3,"key");
lf[154]=C_decode_literal(C_heaptop,"\376B\000\000\0014");
lf[155]=C_h_intern(&lf[155],2,"hz");
lf[156]=C_decode_literal(C_heaptop,"\376B\000\000\0014");
lf[157]=C_h_intern(&lf[157],2,"pc");
lf[158]=C_h_intern(&lf[158],6,"invert");
lf[159]=C_decode_literal(C_heaptop,"\376B\000\000\020No inversion for");
lf[160]=C_decode_literal(C_heaptop,"\376B\000\000\020No inversion for");
lf[161]=C_h_intern(&lf[161],9,"transpose");
lf[162]=C_decode_literal(C_heaptop,"\376B\000\000\022No transposion for");
lf[163]=C_h_intern(&lf[163],10,"retrograde");
lf[164]=C_h_intern(&lf[164],7,"reverse");
lf[166]=C_h_intern(&lf[166],6,"period");
lf[168]=C_h_intern(&lf[168],14,"\003sysblock-set!");
lf[176]=C_h_intern(&lf[176],7,"pattern");
lf[191]=C_h_intern(&lf[191],4,"\000nad");
lf[192]=C_h_intern(&lf[192],8,"\000periods");
lf[193]=C_h_intern(&lf[193],12,"\000depth-first");
lf[195]=C_decode_literal(C_heaptop,"\376U4294967287.0\000");
lf[196]=C_decode_literal(C_heaptop,"\376U4294967287.0\000");
lf[197]=C_h_intern(&lf[197],14,"\000breadth-first");
lf[198]=C_decode_literal(C_heaptop,"\376B\000\000\026Illegal for traversing");
lf[199]=C_h_intern(&lf[199],7,"\000values");
lf[200]=C_decode_literal(C_heaptop,"\376B\000\000\024Illegal for counting");
lf[202]=C_h_intern(&lf[202],4,"eop\077");
lf[203]=C_h_intern(&lf[203],4,"\000eop");
lf[204]=C_h_intern(&lf[204],4,"eod\077");
lf[205]=C_h_intern(&lf[205],4,"\000eod");
lf[206]=C_h_intern(&lf[206],4,"next");
lf[210]=C_h_intern(&lf[210],5,"force");
lf[211]=C_h_intern(&lf[211],8,"promise\077");
lf[212]=C_h_intern(&lf[212],3,"max");
lf[213]=C_h_intern(&lf[213],10,"make-cycle");
lf[214]=C_h_intern(&lf[214],12,"\003sysfor-each");
lf[216]=C_h_intern(&lf[216],4,"\000for");
lf[217]=C_h_intern(&lf[217],7,"\000repeat");
lf[219]=C_h_intern(&lf[219],5,"palin");
lf[221]=C_h_intern(&lf[221],15,"make-palindrome");
lf[223]=C_h_intern(&lf[223],6,"\000elide");
lf[224]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\377\006\000\376\003\000\000\002\376\377\006\001\376\377\016");
lf[225]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\377\006\001\376\003\000\000\002\376\377\006\000\376\377\016");
lf[226]=C_h_intern(&lf[226],9,"make-line");
lf[228]=C_h_intern(&lf[228],9,"make-heap");
lf[230]=C_h_intern(&lf[230],13,"make-rotation");
lf[232]=C_h_intern(&lf[232],7,"\000rotate");
lf[234]=C_h_intern(&lf[234],11,"random-item");
lf[242]=C_h_intern(&lf[242],14,"make-weighting");
lf[245]=C_h_intern(&lf[245],7,"\000weight");
lf[246]=C_h_intern(&lf[246],4,"\000min");
lf[247]=C_h_intern(&lf[247],4,"\000max");
lf[248]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[249]=C_h_intern(&lf[249],11,"make-markov");
lf[251]=C_h_intern(&lf[251],5,"\000past");
lf[252]=C_h_intern(&lf[252],2,"->");
lf[253]=C_decode_literal(C_heaptop,"\376B\000\000.Left hand sides have different number of items");
lf[254]=C_h_intern(&lf[254],3,"\000->");
lf[255]=C_decode_literal(C_heaptop,"\376B\000\000\042Transition missing right hand side");
lf[256]=C_decode_literal(C_heaptop,"\376B\000\000\030Transition is not a list");
lf[257]=C_decode_literal(C_heaptop,"\376B\000\000 Not a list of Markov transitions");
lf[258]=C_decode_literal(C_heaptop,"\376B\000\000\032No transition matches past");
lf[260]=C_h_intern(&lf[260],10,"graph-node");
lf[261]=C_h_intern(&lf[261],10,"make-graph");
lf[263]=C_h_intern(&lf[263],3,"\000to");
lf[264]=C_h_intern(&lf[264],3,"\000id");
lf[265]=C_decode_literal(C_heaptop,"\376B\000\000\025Graph node not a list");
lf[266]=C_decode_literal(C_heaptop,"\376B\000\000\016Not graph data");
lf[267]=C_decode_literal(C_heaptop,"\376B\000\000\024No graph node for id");
lf[269]=C_h_intern(&lf[269],5,"token");
lf[274]=C_h_intern(&lf[274],1,"t");
lf[279]=C_h_intern(&lf[279],4,"rule");
lf[282]=C_h_intern(&lf[282],22,"hash-table-ref/default");
lf[289]=C_h_intern(&lf[289],11,"parse-error");
lf[293]=C_h_intern(&lf[293],10,"parse-unit");
lf[305]=C_decode_literal(C_heaptop,"\376B\000\000\014no info for ");
lf[307]=C_h_intern(&lf[307],14,"string->symbol");
lf[308]=C_h_intern(&lf[308],4,"expt");
lf[309]=C_h_intern(&lf[309],5,"equal");
lf[310]=C_h_intern(&lf[310],3,"and");
lf[311]=C_h_intern(&lf[311],2,"or");
lf[312]=C_h_intern(&lf[312],3,"not");
lf[313]=C_decode_literal(C_heaptop,"\376B\000\0005emit-token-unit: dont know how to emit slotref token ");
lf[314]=C_decode_literal(C_heaptop,"\376B\000\000\047emit-token-unit: dont know how to emit ");
lf[317]=C_decode_literal(C_heaptop,"\376B\000\000\033emit: dont know how to emit");
lf[323]=C_decode_literal(C_heaptop,"\376B\000\000\035Not a token type or rule type");
lf[324]=C_decode_literal(C_heaptop,"\376B\000\000\047Pattern opr not one of and, or, *, +, @");
lf[325]=C_h_intern(&lf[325],1,"@");
lf[326]=C_decode_literal(C_heaptop,"\376B\000\000\047Not a pattern value or pattern operator");
lf[327]=C_h_intern(&lf[327],6,"printf");
lf[328]=C_decode_literal(C_heaptop,"\376B\000\000!~%parse[~A]: pattern=~S tokens=~S");
lf[333]=C_h_intern(&lf[333],2,">=");
lf[334]=C_decode_literal(C_heaptop,"\376B\000\000\004stop");
lf[335]=C_decode_literal(C_heaptop,"\376B\000\000\004temp");
lf[336]=C_h_intern(&lf[336],5,"begin");
lf[337]=C_decode_literal(C_heaptop,"\376B\000\000\004bool");
lf[338]=C_decode_literal(C_heaptop,"\376B\000\000\004tail");
lf[339]=C_h_intern(&lf[339],1,">");
lf[340]=C_h_intern(&lf[340],2,"<=");
lf[341]=C_h_intern(&lf[341],1,"<");
lf[342]=C_decode_literal(C_heaptop,"\376B\000\000\004goal");
lf[343]=C_decode_literal(C_heaptop,"\376B\000\000\004from");
lf[344]=C_decode_literal(C_heaptop,"\376B\000\000\004step");
lf[348]=C_h_intern(&lf[348],3,"sal");
lf[349]=C_h_intern(&lf[349],11,"print-error");
lf[350]=C_decode_literal(C_heaptop,"\376B\000\000\013>>> Error: ");
lf[351]=C_h_intern(&lf[351],11,"make-string");
lf[352]=C_h_intern(&lf[352],9,"substring");
lf[353]=C_h_intern(&lf[353],2,"pp");
lf[354]=C_h_intern(&lf[354],4,"eval");
lf[355]=C_h_intern(&lf[355],7,"\000syntax");
lf[356]=C_h_intern(&lf[356],7,"\000scheme");
lf[357]=C_decode_literal(C_heaptop,"\376B\000\000\023Illegal statement: ");
lf[358]=C_h_intern(&lf[358],7,"call/cc");
lf[359]=C_h_intern(&lf[359],9,"sal:print");
lf[360]=C_h_intern(&lf[360],13,"print-message");
lf[361]=C_decode_literal(C_heaptop,"\376B\000\000\002{}");
lf[362]=C_decode_literal(C_heaptop,"\376B\000\000\001}");
lf[363]=C_decode_literal(C_heaptop,"\376B\000\000\001 ");
lf[364]=C_decode_literal(C_heaptop,"\376B\000\000\001{");
lf[365]=C_decode_literal(C_heaptop,"\376B\000\000\002#t");
lf[366]=C_decode_literal(C_heaptop,"\376B\000\000\002~S");
lf[367]=C_decode_literal(C_heaptop,"\376B\000\000\002#f");
lf[368]=C_decode_literal(C_heaptop,"\376B\000\000\001\012");
lf[369]=C_h_intern(&lf[369],9,"sal:chdir");
lf[370]=C_h_intern(&lf[370],8,"sal:load");
lf[371]=C_h_intern(&lf[371],13,"load-sal-file");
lf[372]=C_h_intern(&lf[372],4,"load");
lf[373]=C_h_intern(&lf[373],15,"\003syssubstring=\077");
lf[374]=C_decode_literal(C_heaptop,"\376B\000\000\004.sal");
lf[375]=C_decode_literal(C_heaptop,"\376B\000\000\021>>> Error: file \042");
lf[376]=C_decode_literal(C_heaptop,"\376B\000\000\020\042does not exist\012");
lf[377]=C_h_intern(&lf[377],12,"file-exists\077");
lf[378]=C_h_intern(&lf[378],8,"sal:open");
lf[379]=C_decode_literal(C_heaptop,"\376B\000\000)>>> Error: open command not implemented.\012");
lf[380]=C_h_intern(&lf[380],10,"sal:output");
lf[381]=C_decode_literal(C_heaptop,"\376B\000\000+>>> Error: output command not implemented.\012");
lf[393]=C_h_intern(&lf[393],8,"operator");
lf[394]=C_h_intern(&lf[394],8,"bindings");
lf[395]=C_h_intern(&lf[395],10,"collectors");
lf[396]=C_h_intern(&lf[396],9,"initially");
lf[397]=C_h_intern(&lf[397],9,"end-tests");
lf[398]=C_h_intern(&lf[398],7,"looping");
lf[399]=C_h_intern(&lf[399],8,"stepping");
lf[400]=C_h_intern(&lf[400],7,"finally");
lf[401]=C_h_intern(&lf[401],9,"returning");
lf[407]=C_decode_literal(C_heaptop,"\376B\000\000\023illegal loop syntax");
lf[408]=C_h_intern(&lf[408],7,"newline");
lf[409]=C_h_intern(&lf[409],7,"display");
lf[410]=C_decode_literal(C_heaptop,"\376B\000\000\002()");
lf[411]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[412]=C_decode_literal(C_heaptop,"\376B\000\000\001 ");
lf[413]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[414]=C_decode_literal(C_heaptop,"\376B\000\000\020clause context: ");
lf[415]=C_decode_literal(C_heaptop,"\376B\000\000\014LOOP ERROR: ");
lf[417]=C_decode_literal(C_heaptop,"\376B\000\000*Variable expected but source code ran out.");
lf[418]=C_decode_literal(C_heaptop,"\376B\000\000.\047for\047 clause expected but source code ran out.");
lf[419]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[420]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[421]=C_decode_literal(C_heaptop,"\376B\000\000\031 is not valid with \047for\047.");
lf[422]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[423]=C_decode_literal(C_heaptop,"\376B\000\000\034\047 where a variable expected.");
lf[425]=C_h_intern(&lf[425],3,"for");
lf[426]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[427]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[428]=C_h_intern(&lf[428],8,"downfrom");
lf[429]=C_h_intern(&lf[429],5,"above");
lf[430]=C_h_intern(&lf[430],5,"below");
lf[431]=C_h_intern(&lf[431],6,"downto");
lf[432]=C_h_intern(&lf[432],4,"from");
lf[433]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[434]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[435]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[436]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[437]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[438]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[439]=C_h_intern(&lf[439],2,"to");
lf[440]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[441]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[442]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[443]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[444]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[445]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[446]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[447]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[448]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[449]=C_h_intern(&lf[449],2,"by");
lf[450]=C_decode_literal(C_heaptop,"\376B\000\000\025Found duplicate \047by\047.");
lf[451]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[452]=C_decode_literal(C_heaptop,"\376B\000\000\032\047 is not valid with \047for\047.");
lf[453]=C_decode_literal(C_heaptop,"\376B\000\000,Expected expression but source code ran out.");
lf[455]=C_decode_literal(C_heaptop,"\376B\000\0001\047repeat\047 clause expected but source code ran out.");
lf[456]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[458]=C_h_intern(&lf[458],6,"across");
lf[459]=C_h_intern(&lf[459],13,"vector-length");
lf[460]=C_h_intern(&lf[460],10,"vector-ref");
lf[461]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[462]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[463]=C_h_intern(&lf[463],4,"over");
lf[464]=C_h_intern(&lf[464],2,"in");
lf[465]=C_h_intern(&lf[465],5,"quote");
lf[466]=C_decode_literal(C_heaptop,"\376B\000\000\014Extraneous \047");
lf[467]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[468]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[469]=C_decode_literal(C_heaptop,"\376B\000\000\017Duplicate \047by\047.");
lf[470]=C_decode_literal(C_heaptop,"\376B\000\000\036\047by\047 is invalid with \047across\047.");
lf[471]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[472]=C_decode_literal(C_heaptop,"\376B\000\000\032\047 is not valid with \047for\047.");
lf[473]=C_h_intern(&lf[473],2,"on");
lf[474]=C_decode_literal(C_heaptop,"\376B\000\000,Expression expected but source code ran out.");
lf[475]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[477]=C_h_intern(&lf[477],1,"=");
lf[478]=C_decode_literal(C_heaptop,"\376B\000\000\016Duplicate \047=\047.");
lf[479]=C_h_intern(&lf[479],4,"then");
lf[480]=C_decode_literal(C_heaptop,"\376B\000\000\021Duplicate \047then\047.");
lf[481]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[482]=C_decode_literal(C_heaptop,"\376B\000\000\032\047 is not valid with \047for\047.");
lf[483]=C_decode_literal(C_heaptop,"\376B\000\000,Expression expected but source code ran out.");
lf[485]=C_h_intern(&lf[485],4,"with");
lf[486]=C_decode_literal(C_heaptop,"\376B\000\000\021Extraneous \047and\047.");
lf[487]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[488]=C_decode_literal(C_heaptop,"\376B\000\000\027\047 where \047and\047 expected.");
lf[489]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[490]=C_decode_literal(C_heaptop,"\376B\000\000\027\047 where \047and\047 expected.");
lf[491]=C_decode_literal(C_heaptop,"\376B\000\000\020Duplicate \047and\047.");
lf[492]=C_decode_literal(C_heaptop,"\376B\000\000\021Extraneous \047and\047.");
lf[493]=C_decode_literal(C_heaptop,"\376B\000\000\037Found \047=\047 where \047and\047 expected.");
lf[494]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[495]=C_decode_literal(C_heaptop,"\376B\000\000\032\047 where variable expected.");
lf[496]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[497]=C_decode_literal(C_heaptop,"\376B\000\000\036\047 where \047=\047 or \047and\047 expected.");
lf[499]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[500]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[502]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[503]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[505]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[506]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[508]=C_h_intern(&lf[508],3,"sum");
lf[509]=C_h_intern(&lf[509],5,"count");
lf[510]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[511]=C_h_intern(&lf[511],8,"minimize");
lf[512]=C_h_intern(&lf[512],8,"maximize");
lf[513]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[514]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[515]=C_h_intern(&lf[515],4,"list");
lf[516]=C_h_intern(&lf[516],8,"set-cdr!");
lf[517]=C_h_intern(&lf[517],9,"last-pair");
lf[518]=C_h_intern(&lf[518],7,"collect");
lf[519]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\004list\376\003\000\000\002\376\377\006\000\376\377\016");
lf[520]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[521]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[522]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\004list\376\377\016");
lf[523]=C_h_intern(&lf[523],5,"nconc");
lf[524]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[525]=C_decode_literal(C_heaptop,"\376B\000\000\007\047 and \047");
lf[526]=C_decode_literal(C_heaptop,"\376B\000\000 \047 are incompatible accumulators.");
lf[527]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007collect\376\003\000\000\002\376\001\000\000\006append\376\003\000\000\002\376\001\000\000\005nconc\376\377\016");
lf[528]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\005never\376\003\000\000\002\376\001\000\000\006always\376\377\016");
lf[529]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\010minimize\376\003\000\000\002\376\001\000\000\010maximize\376\377\016");
lf[530]=C_h_intern(&lf[530],4,"into");
lf[531]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[532]=C_decode_literal(C_heaptop,"\376B\000\000!\047 where \047into\047 variable expected.");
lf[533]=C_decode_literal(C_heaptop,"\376B\000\000\030Missing \047into\047 variable.");
lf[534]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[535]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[537]=C_h_intern(&lf[537],6,"return");
lf[539]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\002go\376\003\000\000\002\376\377\006\001\376\377\016");
lf[540]=C_h_intern(&lf[540],5,"until");
lf[541]=C_h_intern(&lf[541],5,"while");
lf[542]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[543]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[545]=C_h_intern(&lf[545],7,"thereis");
lf[546]=C_h_intern(&lf[546],6,"always");
lf[547]=C_h_intern(&lf[547],5,"never");
lf[548]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[549]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[551]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[552]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[554]=C_decode_literal(C_heaptop,"\376B\000\000\025Missing \047and\047 clause.");
lf[555]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[556]=C_decode_literal(C_heaptop,"\376B\000\000\036\047 is not conditional operator.");
lf[557]=C_h_intern(&lf[557],4,"task");
lf[558]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007thereis\376\003\000\000\002\376\001\000\000\005never\376\003\000\000\002\376\001\000\000\006always\376\377\016");
lf[560]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\004else\376\377\016");
lf[561]=C_decode_literal(C_heaptop,"\376B\000\000\026Missing \047else\047 clause.");
lf[562]=C_decode_literal(C_heaptop,"\376B\000\000\033Missing conditional clause.");
lf[563]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[564]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[566]=C_h_intern(&lf[566],2,"do");
lf[567]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[568]=C_decode_literal(C_heaptop,"\376B\000\000\030\047 clause cannot follow \047");
lf[569]=C_decode_literal(C_heaptop,"\376B\000\000\002\047.");
lf[570]=C_h_intern(&lf[570],4,"iter");
lf[571]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[572]=C_decode_literal(C_heaptop,"\376B\000\000\032\047 where operator expected.");
lf[573]=C_h_intern(&lf[573],6,"repeat");
lf[574]=C_h_intern(&lf[574],2,"as");
lf[576]=C_h_intern(&lf[576],10,"mm:make-on");
lf[577]=C_h_intern(&lf[577],5,"\000time");
lf[578]=C_h_intern(&lf[578],4,"\000key");
lf[579]=C_h_intern(&lf[579],4,"\000vel");
lf[580]=C_h_intern(&lf[580],5,"\000chan");
lf[581]=C_h_intern(&lf[581],6,"mm:on\077");
lf[582]=C_h_intern(&lf[582],11,"mm:make-off");
lf[583]=C_h_intern(&lf[583],7,"mm:off\077");
lf[584]=C_h_intern(&lf[584],13,"mm:make-touch");
lf[585]=C_h_intern(&lf[585],4,"\000val");
lf[586]=C_h_intern(&lf[586],9,"mm:touch\077");
lf[587]=C_h_intern(&lf[587],12,"mm:make-ctrl");
lf[588]=C_h_intern(&lf[588],4,"\000num");
lf[589]=C_h_intern(&lf[589],8,"mm:ctrl\077");
lf[590]=C_h_intern(&lf[590],12,"mm:make-prog");
lf[591]=C_h_intern(&lf[591],8,"mm:prog\077");
lf[592]=C_h_intern(&lf[592],13,"mm:make-press");
lf[593]=C_h_intern(&lf[593],9,"mm:press\077");
lf[594]=C_h_intern(&lf[594],12,"mm:make-bend");
lf[595]=C_h_intern(&lf[595],7,"mm:free");
lf[596]=C_h_intern(&lf[596],7,"mm:copy");
lf[597]=C_h_intern(&lf[597],7,"mm:time");
lf[598]=C_h_intern(&lf[598],12,"mm:time-set!");
lf[599]=C_h_intern(&lf[599],7,"mm:chan");
lf[600]=C_h_intern(&lf[600],12,"mm:chan-set!");
lf[601]=C_h_intern(&lf[601],6,"mm:key");
lf[602]=C_h_intern(&lf[602],11,"mm:key-set!");
lf[603]=C_h_intern(&lf[603],6,"mm:vel");
lf[604]=C_h_intern(&lf[604],11,"mm:vel-set!");
lf[605]=C_h_intern(&lf[605],6,"mm:val");
lf[606]=C_h_intern(&lf[606],8,"mm:type\077");
lf[607]=C_h_intern(&lf[607],11,"mm:val-set!");
lf[608]=C_h_intern(&lf[608],1,"k");
lf[609]=C_h_intern(&lf[609],6,"mm:num");
lf[610]=C_h_intern(&lf[610],11,"mm:num-set!");
lf[611]=C_h_intern(&lf[611],7,"mp:note");
lf[612]=C_h_intern(&lf[612],7,"mp:midi");
lf[613]=C_h_intern(&lf[613],6,"mp:off");
lf[614]=C_h_intern(&lf[614],5,"mp:on");
lf[615]=C_h_intern(&lf[615],8,"mp:touch");
lf[616]=C_h_intern(&lf[616],7,"mp:ctrl");
lf[617]=C_h_intern(&lf[617],7,"mp:prog");
lf[618]=C_h_intern(&lf[618],8,"mp:press");
lf[619]=C_h_intern(&lf[619],7,"mp:bend");
lf[620]=C_h_intern(&lf[620],5,"mp:mm");
lf[621]=C_h_intern(&lf[621],9,"mp:inhook");
lf[622]=C_decode_literal(C_heaptop,"\376B\000\000*>>> Error: ~A~%    Aborting MIDI inhook.~%");
lf[623]=C_h_intern(&lf[623],27,"condition-property-accessor");
lf[624]=C_h_intern(&lf[624],3,"exn");
lf[625]=C_h_intern(&lf[625],7,"message");
lf[626]=C_h_intern(&lf[626],22,"with-exception-handler");
lf[627]=C_h_intern(&lf[627],30,"call-with-current-continuation");
lf[628]=C_h_intern(&lf[628],4,"cs:i");
lf[629]=C_h_intern(&lf[629],4,"cs:f");
lf[630]=C_h_intern(&lf[630],8,"cs:clear");
lf[631]=C_h_intern(&lf[631],7,"cm-logo");
lf[632]=C_decode_literal(C_heaptop,"\376B\000\000\001 ");
lf[633]=C_decode_literal(C_heaptop,"\376B\000\000\000");
lf[634]=C_decode_literal(C_heaptop,"\376B\000\000\015Common Music ");
lf[635]=C_decode_literal(C_heaptop,"\376B\000\000\001.");
lf[636]=C_decode_literal(C_heaptop,"\376B\000\000\001.");
lf[637]=C_decode_literal(C_heaptop,"\376B\000\000\000");
lf[638]=C_decode_literal(C_heaptop,"\376B\000\000\002~%");
lf[639]=C_h_intern(&lf[639],25,"current-time-milliseconds");
lf[640]=C_h_intern(&lf[640],20,"current-time-seconds");
lf[642]=C_h_intern(&lf[642],6,"\003sysgc");
lf[645]=C_h_intern(&lf[645],6,"sprout");
lf[646]=C_h_intern(&lf[646],9,"\003syserror");
lf[647]=C_decode_literal(C_heaptop,"\376B\000\000\033too many optional arguments");
lf[648]=C_h_intern(&lf[648],3,"now");
lf[649]=C_h_intern(&lf[649],11,"time-format");
lf[650]=C_decode_literal(C_heaptop,"\376U1.0\000");
lf[651]=C_decode_literal(C_heaptop,"\376U1.0\000");
lf[652]=C_h_intern(&lf[652],1,"m");
lf[653]=C_decode_literal(C_heaptop,"\376B\000\000\021not a time-format");
lf[654]=C_h_intern(&lf[654],1,"s");
lf[655]=C_h_intern(&lf[655],5,"pause");
lf[656]=C_h_intern(&lf[656],7,"paused\077");
lf[657]=C_h_intern(&lf[657],4,"cont");
lf[658]=C_h_intern(&lf[658],4,"stop");
lf[659]=C_decode_literal(C_heaptop,"\376B\000\000\021Not an integer id");
lf[660]=C_h_intern(&lf[660],4,"hush");
lf[661]=C_h_intern(&lf[661],14,"return-to-host");
lf[662]=C_h_intern(&lf[662],4,"cond");
lf[663]=C_h_intern(&lf[663],6,"lambda");
lf[664]=C_h_intern(&lf[664],7,"elapsed");
lf[665]=C_h_intern(&lf[665],1,"x");
lf[666]=C_h_intern(&lf[666],4,"wait");
lf[667]=C_decode_literal(C_heaptop,"\376B\000\0000>>> Error: ~A~%    Aborting process at time ~S~%");
lf[668]=C_h_intern(&lf[668],6,"safety");
lf[669]=C_h_intern(&lf[669],4,"cdar");
lf[670]=C_decode_literal(C_heaptop,"\376B\000\000\023unknown declaration");
lf[671]=C_h_intern(&lf[671],4,"caar");
lf[672]=C_decode_literal(C_heaptop,"\376B\000\000\037declaration not list (decl val)");
lf[673]=C_h_intern(&lf[673],7,"declare");
lf[674]=C_h_intern(&lf[674],5,"\000null");
lf[675]=C_decode_literal(C_heaptop,"\376B\000\000)binding clause not list (var init [step])");
lf[676]=C_decode_literal(C_heaptop,"\376B\000\000$go stopping clause missing test form");
lf[677]=C_decode_literal(C_heaptop,"\376B\000\000\035go stopping clause not a list");
lf[678]=C_decode_literal(C_heaptop,"\376B\000\000\026go bindings not a list");
lf[679]=C_h_intern(&lf[679],18,"\003sysregister-macro");
lf[680]=C_h_intern(&lf[680],2,"go");
lf[681]=C_h_intern(&lf[681],15,"hash-table-set!");
lf[682]=C_decode_literal(C_heaptop,"\376B\000\000\010cs:clear");
lf[683]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\010cs:clear\376\377\016");
lf[684]=C_decode_literal(C_heaptop,"\376B\000\000\004cs:f");
lf[685]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\004cs:f\376\003\000\000\002\376\001\000\000\005&rest\376\377\016");
lf[686]=C_decode_literal(C_heaptop,"\376B\000\000\004cs:i");
lf[687]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\004cs:i\376\003\000\000\002\376\001\000\000\005&rest\376\377\016");
lf[688]=C_decode_literal(C_heaptop,"\376B\000\000\011mp:inhook");
lf[689]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\011mp:inhook\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000func\376\003\000\000\002\376\377\006\000\376\377\016\376\377\016");
lf[690]=C_decode_literal(C_heaptop,"\376B\000\000\005mp:mm");
lf[691]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\005mp:mm\376\003\000\000\002\376\003\000\000\002\376\001\000\000\003\000mm\376\003\000\000\002\376\377\006\000\376\377\016\376\377\016");
lf[692]=C_decode_literal(C_heaptop,"\376B\000\000\007mp:bend");
lf[693]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007mp:bend\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000val\376\003\000\000\002\376\377\001\000"
"\000 \000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[694]=C_decode_literal(C_heaptop,"\376B\000\000\010mp:press");
lf[695]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\010mp:press\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000val\376\003\000\000\002\376\377\001"
"\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[696]=C_decode_literal(C_heaptop,"\376B\000\000\007mp:prog");
lf[697]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007mp:prog\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000val\376\003\000\000\002\376\377\001\000"
"\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[698]=C_decode_literal(C_heaptop,"\376B\000\000\007mp:ctrl");
lf[699]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007mp:ctrl\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000num\376\003\000\000\002\376\377\001\000"
"\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000val\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[700]=C_decode_literal(C_heaptop,"\376B\000\000\010mp:touch");
lf[701]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\010mp:touch\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000key\376\003\000\000\002\376\377\001"
"\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000val\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[702]=C_decode_literal(C_heaptop,"\376B\000\000\005mp:on");
lf[703]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\005mp:on\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000key\376\003\000\000\002\376\377\001\000\000\000"
"<\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000vel\376\003\000\000\002\376\377\001\000\000\000@\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[704]=C_decode_literal(C_heaptop,"\376B\000\000\006mp:off");
lf[705]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\006mp:off\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000key\376\003\000\000\002\376\377\001\000\000"
"\000<\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[706]=C_decode_literal(C_heaptop,"\376B\000\000\007mp:midi");
lf[707]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007mp:midi\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000dur\376\003\000\000\002\376U0."
"5\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000key\376\003\000\000\002\376\377\001\000\000\000<\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000amp\376\003\000\000\002\376U0.5\000\376\377\016\376\003\000\000\002\376\003\000"
"\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[708]=C_decode_literal(C_heaptop,"\376B\000\000\007mp:note");
lf[709]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007mp:note\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000dur\376\003\000\000\002\376U0."
"5\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000key\376\003\000\000\002\376\377\001\000\000\000<\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000amp\376\003\000\000\002\376U0.5\000\376\377\016\376\003\000\000\002\376\003\000"
"\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[710]=C_h_intern(&lf[710],5,":loop");
lf[711]=C_h_intern(&lf[711],7,"tagbody");
lf[712]=C_h_intern(&lf[712],5,"block");
lf[713]=C_h_intern(&lf[713],3,"nil");
lf[714]=C_h_intern(&lf[714],20,"\003sysregister-macro-2");
lf[715]=C_h_intern(&lf[715],8,"function");
lf[716]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[717]=C_h_intern(&lf[717],3,"pop");
lf[718]=C_h_intern(&lf[718],4,"cons");
lf[719]=C_h_intern(&lf[719],4,"push");
lf[720]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\002go\376\003\000\000\002\376\377\006\001\376\377\016");
lf[721]=C_h_intern(&lf[721],4,"loop");
lf[722]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[723]=C_decode_literal(C_heaptop,"\376B\000\000\030SalStatementSequenceRule");
lf[724]=C_decode_literal(C_heaptop,"\376B\000\000\020SalStatementRule");
lf[725]=C_h_intern(&lf[725],6,"define");
lf[726]=C_decode_literal(C_heaptop,"\376B\000\000\017Variable: ~A = ");
lf[727]=C_decode_literal(C_heaptop,"\376B\000\000\002)\012");
lf[728]=C_decode_literal(C_heaptop,"\376B\000\000\002, ");
lf[729]=C_decode_literal(C_heaptop,"\376B\000\000\002 (");
lf[730]=C_decode_literal(C_heaptop,"\376B\000\000\012Function: ");
lf[731]=C_h_intern(&lf[731],7,"\000return");
lf[732]=C_h_intern(&lf[732],9,"\000function");
lf[733]=C_decode_literal(C_heaptop,"\376B\000\000\011Process: ");
lf[734]=C_h_intern(&lf[734],8,"\000process");
lf[735]=C_decode_literal(C_heaptop,"\376B\000\000\003...");
lf[736]=C_decode_literal(C_heaptop,"\376B\000\000\026SalDefineStatementRule");
lf[737]=C_decode_literal(C_heaptop,"\376B\000\000\016SalFunDeclRule");
lf[738]=C_decode_literal(C_heaptop,"\376B\000\000/>>> Error: ~A~%    process aborted at time ~S~%");
lf[739]=C_decode_literal(C_heaptop,"\376B\000\000\005abort");
lf[740]=C_decode_literal(C_heaptop,"\376B\000\000\005error");
lf[741]=C_decode_literal(C_heaptop,"\376B\000\000\004wait");
lf[742]=C_decode_literal(C_heaptop,"\376B\000\000\004wait");
lf[743]=C_decode_literal(C_heaptop,"\376B\000\000\004time");
lf[744]=C_h_intern(&lf[744],5,"\000loop");
lf[745]=C_h_intern(&lf[745],4,"\000run");
lf[746]=C_decode_literal(C_heaptop,"\376B\000\000\035run statement outside process");
lf[747]=C_decode_literal(C_heaptop,"\376B\000\000\024SalLoopStatementRule");
lf[748]=C_decode_literal(C_heaptop,"\376B\000\000\022SalTerminationRule");
lf[749]=C_decode_literal(C_heaptop,"\376B\000\000\017SalSteppingRule");
lf[750]=C_decode_literal(C_heaptop,"\376B\000\000\002#f");
lf[751]=C_decode_literal(C_heaptop,"\376B\000\000\002#f");
lf[752]=C_decode_literal(C_heaptop,"\376B\000\000\022SalConditionalRule");
lf[753]=C_decode_literal(C_heaptop,"\376B\000\000\014SalBlockRule");
lf[754]=C_h_intern(&lf[754],9,"list-tail");
lf[755]=C_h_intern(&lf[755],8,"set-car!");
lf[756]=C_h_intern(&lf[756],3,"min");
lf[757]=C_decode_literal(C_heaptop,"\376B\000\000\021SalAssignmentRule");
lf[758]=C_decode_literal(C_heaptop,"\376B\000\000\015SalAssignRule");
lf[759]=C_h_intern(&lf[759],9,"\000bindings");
lf[760]=C_decode_literal(C_heaptop,"\376B\000\000\017SalBindingsRule");
lf[761]=C_decode_literal(C_heaptop,"\376B\000\000\002#f");
lf[762]=C_decode_literal(C_heaptop,"\376B\000\000\013SalBindRule");
lf[763]=C_decode_literal(C_heaptop,"\376B\000\000!return statement outside function");
lf[764]=C_decode_literal(C_heaptop,"\376B\000\000\025SalFunctionReturnRule");
lf[765]=C_decode_literal(C_heaptop,"\376B\000\000 wait statement outside run block");
lf[766]=C_decode_literal(C_heaptop,"\376B\000\000\022SalProcessWaitRule");
lf[767]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\006fix-me\376\003\000\000\002\376\001\000\000\004plot\376\377\016");
lf[768]=C_decode_literal(C_heaptop,"\376B\000\000\024SalPlotStatementRule");
lf[769]=C_decode_literal(C_heaptop,"\376B\000\000\026SalOutputStatementRule");
lf[770]=C_decode_literal(C_heaptop,"\376B\000\000\026SalSystemStatementRule");
lf[771]=C_h_intern(&lf[771],10,"sal:system");
lf[772]=C_decode_literal(C_heaptop,"\376B\000\000\025SalChdirStatementRule");
lf[773]=C_decode_literal(C_heaptop,"\376B\000\000\024SalLoadStatementRule");
lf[774]=C_decode_literal(C_heaptop,"\376B\000\000\024SalExecStatementRule");
lf[775]=C_decode_literal(C_heaptop,"\376B\000\000\024SalSendStatementRule");
lf[776]=C_decode_literal(C_heaptop,"\376B\000\000\026SalSproutStatementRule");
lf[777]=C_decode_literal(C_heaptop,"\376B\000\000\025SalPrintStatementRule");
lf[778]=C_decode_literal(C_heaptop,"\376B\000\000\014SalSexprRule");
lf[779]=C_decode_literal(C_heaptop,"\376B\000\000\013SalTermRule");
lf[780]=C_decode_literal(C_heaptop,"\376B\000\000\014SalMexprRule");
lf[781]=C_decode_literal(C_heaptop,"\376B\000\000\011SalOpRule");
lf[782]=C_decode_literal(C_heaptop,"\376B\000\000\016SalFuncallRule");
lf[783]=C_decode_literal(C_heaptop,"\376B\000\000\016SalFunargsRule");
lf[784]=C_decode_literal(C_heaptop,"\376B\000\000\014SalKargsRule");
lf[785]=C_decode_literal(C_heaptop,"\376B\000\000\014SalPargsRule");
lf[786]=C_decode_literal(C_heaptop,"\376B\000\000\015SalIfExprRule");
lf[787]=C_decode_literal(C_heaptop,"\376B\000\000\013SalArefRule");
lf[788]=C_decode_literal(C_heaptop,"\376B\000\000\012SalEltRule");
lf[789]=C_h_intern(&lf[789],7,"unquote");
lf[790]=C_h_intern(&lf[790],16,"unquote-splicing");
lf[791]=C_h_intern(&lf[791],5,"\000list");
lf[792]=C_h_intern(&lf[792],8,"\000unquote");
lf[793]=C_decode_literal(C_heaptop,"\376B\000\000\023#$ outside of list.");
lf[794]=C_decode_literal(C_heaptop,"\376B\000\000\023#^ outside of list.");
lf[795]=C_decode_literal(C_heaptop,"\376B\000\000\016SalUnquoteRule");
lf[796]=C_h_intern(&lf[796],10,"quasiquote");
lf[797]=C_decode_literal(C_heaptop,"\376B\000\000\013SalListRule");
lf[798]=C_decode_literal(C_heaptop,"\376B\000\000\013SalAtomRule");
lf[799]=C_decode_literal(C_heaptop,"\376B\000\000\013SalBoolRule");
lf[800]=C_decode_literal(C_heaptop,"\376B\000\000\015SalNumberRule");
lf[801]=C_h_intern(&lf[801],7,"fprintf");
lf[802]=C_decode_literal(C_heaptop,"\376B\000\000\007#<u ~A>");
lf[803]=C_decode_literal(C_heaptop,"\376B\000\000\010#<u x~X>");
lf[804]=C_h_intern(&lf[804],27,"\003sysregister-record-printer");
lf[805]=C_decode_literal(C_heaptop,"\376B\000\000\030#<parse-error ~S (@ ~S)>");
lf[806]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\004list\376\377\016");
lf[807]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\001+\376\003\000\000\002\376\001\000\000\001*\376\003\000\000\002\376\001\000\000\001@\376\003\000\000\002\376\001\000\000\003and\376\003\000\000\002\376\001\000\000\002or\376\377\016");
lf[808]=C_h_intern(&lf[808],6,"ruleid");
lf[809]=C_h_intern(&lf[809],9,"make-rule");
lf[810]=C_h_intern(&lf[810],7,"*rules*");
lf[811]=C_h_intern(&lf[811],7,"defrule");
lf[812]=C_decode_literal(C_heaptop,"\376B\000\000\007#<r ~A>");
lf[813]=C_h_intern(&lf[813],15,"make-hash-table");
lf[814]=C_h_intern(&lf[814],3,"eq\077");
lf[815]=C_decode_literal(C_heaptop,"\376B\000\000\013#<t x~X ~S>");
lf[816]=C_decode_literal(C_heaptop,"\376B\000\000\001r");
lf[817]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[818]=C_decode_literal(C_heaptop,"\376B\000\000\001r");
lf[819]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\003\000\000\002\376B\000\000\001c\376\003\000\000\002\376B\000\000\002bs\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\002df\376\003\000\000\002\376B\000\000\002cs\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\001d\376"
"\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\002ef\376\003\000\000\002\376B\000\000\002ds\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\001e\376\003\000\000\002\376B\000\000\002ff\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\001"
"f\376\003\000\000\002\376B\000\000\002es\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\002fs\376\003\000\000\002\376B\000\000\002gf\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\001g\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000"
"\000\002af\376\003\000\000\002\376B\000\000\002gs\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\001a\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\002bf\376\003\000\000\002\376B\000\000\002as\376\377\016\376\003\000\000\002\376\003\000\000\002"
"\376B\000\000\001b\376\003\000\000\002\376B\000\000\002cf\376\377\016\376\377\016");
lf[820]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[821]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[822]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376B\000\000\00200\376\003\000\000\002\376B\000\000\0010\376\003\000\000\002\376B\000\000\0011\376\003\000\000\002\376B\000\000\0012\376\003\000\000\002\376B\000\000\0013\376\003\000\000\002\376B\000\000\0014\376\003\000\000\002\376B\000\000\0015\376\003"
"\000\000\002\376B\000\000\0016\376\003\000\000\002\376B\000\000\0017\376\003\000\000\002\376B\000\000\0018\376\003\000\000\002\376B\000\000\0019\376\377\016");
lf[823]=C_decode_literal(C_heaptop,"\376B\000\000\001>");
lf[824]=C_decode_literal(C_heaptop,"\376B\000\000\001<");
lf[825]=C_decode_literal(C_heaptop,"\376B\000\000\002bs");
lf[826]=C_decode_literal(C_heaptop,"\376B\000\000\002cf");
lf[827]=C_decode_literal(C_heaptop,"\376B\000\000\002bs");
lf[828]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[829]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[830]=C_h_intern(&lf[830],6,"equal\077");
lf[831]=C_h_intern(&lf[831],4,"send");
lf[832]=C_decode_literal(C_heaptop,"\376B\000\0003message function not string, symbol or list of both");
lf[833]=C_h_intern(&lf[833],19,"define-send-message");
lf[834]=C_h_intern(&lf[834],12,"with-optkeys");
C_register_lf2(lf,835,create_ptable());
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5331,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_library_toplevel(2,C_SCHEME_UNDEFINED,t2);}

/* k5329 */
static void C_ccall f_5331(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5331,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5334,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_eval_toplevel(2,C_SCHEME_UNDEFINED,t2);}

/* k5332 in k5329 */
static void C_ccall f_5334(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5334,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5337,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_extras_toplevel(2,C_SCHEME_UNDEFINED,t2);}

/* k5335 in k5332 in k5329 */
static void C_ccall f_5337(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5337,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5340,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_extras_toplevel(2,C_SCHEME_UNDEFINED,t2);}

/* k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_5340(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5340,2,t0,t1);}
t2=C_mutate((C_word*)lf[0]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5342,a[2]=((C_word)li4),tmp=(C_word)a,a+=3,tmp));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5631,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33790,a[2]=((C_word)li535),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 240  ##sys#register-macro");
t5=C_retrieve(lf[679]);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,lf[834],t4);}

/* a33789 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_33790(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr3r,(void*)f_33790r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_33790r(t0,t1,t2,t3);}}

static void C_ccall f_33790r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cdr(t2);
C_trace("ChickenBridge.scm: 241  expand-optkeys");
t6=*((C_word*)lf[0]+1);
((C_proc5)C_retrieve_proc(t6))(5,t6,t1,t4,t5,t3);}

/* k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_5631(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5631,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5635,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 247  make-hash-table");
t3=C_retrieve(lf[813]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,*((C_word*)lf[830]+1));}

/* k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_5635(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5635,2,t0,t1);}
t2=C_mutate((C_word*)lf[29]+1,t1);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5638,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33738,a[2]=((C_word)li534),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 249  ##sys#register-macro");
t5=C_retrieve(lf[679]);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,lf[833],t4);}

/* a33737 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_33738(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[18],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_33738,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_33742,a[2]=t6,a[3]=t1,a[4]=t3,a[5]=t4,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t8=(C_word)C_i_car(((C_word*)t4)[1]);
t9=C_set_block_item(t6,0,t8);
t10=(C_word)C_i_cadr(((C_word*)t4)[1]);
t11=C_set_block_item(t4,0,t10);
t12=t7;
f_33742(2,t12,t11);}
else{
if(C_truep((C_word)C_i_stringp(((C_word*)t4)[1]))){
t8=C_set_block_item(t6,0,((C_word*)t4)[1]);
t9=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33775,a[2]=t7,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 256  string->symbol");
t10=*((C_word*)lf[307]+1);
((C_proc3)C_retrieve_proc(t10))(3,t10,t9,((C_word*)t4)[1]);}
else{
if(C_truep((C_word)C_i_symbolp(((C_word*)t4)[1]))){
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33785,a[2]=t7,a[3]=t6,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 258  symbol->string");
t9=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t9))(3,t9,t8,((C_word*)t4)[1]);}
else{
C_trace("ChickenBridge.scm: 260  error");
t8=*((C_word*)lf[4]+1);
((C_proc3)C_retrieve_proc(t8))(3,t8,t7,lf[832]);}}}}

/* k33783 in a33737 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_33785(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_33742(2,t3,t2);}

/* k33773 in a33737 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_33775(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_33742(2,t3,t2);}

/* k33740 in a33737 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_33742(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33742,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[4]);
t3=(C_word)C_a_i_list(&a,2,lf[465],t2);
t4=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_list(&a,4,lf[681],lf[29],((C_word*)((C_word*)t0)[2])[1],t3));}

/* k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_5638(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5638,2,t0,t1);}
t2=C_mutate((C_word*)lf[30]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5640,a[2]=((C_word)li12),tmp=(C_word)a,a+=3,tmp));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5931,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33732,a[2]=((C_word)li533),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 345  ##sys#register-macro");
t5=C_retrieve(lf[679]);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,lf[831],t4);}

/* a33731 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_33732(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr3r,(void*)f_33732r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_33732r(t0,t1,t2,t3);}}

static void C_ccall f_33732r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_trace("ChickenBridge.scm: 346  expand-send");
t4=C_retrieve(lf[30]);
((C_proc5)C_retrieve_proc(t4))(5,t4,t1,t2,t3,C_SCHEME_FALSE);}

/* k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_5931(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word t36;
C_word t37;
C_word t38;
C_word t39;
C_word t40;
C_word t41;
C_word t42;
C_word t43;
C_word t44;
C_word t45;
C_word t46;
C_word t47;
C_word t48;
C_word t49;
C_word t50;
C_word t51;
C_word t52;
C_word t53;
C_word t54;
C_word t55;
C_word t56;
C_word t57;
C_word t58;
C_word t59;
C_word t60;
C_word t61;
C_word t62;
C_word t63;
C_word t64;
C_word t65;
C_word t66;
C_word t67;
C_word t68;
C_word t69;
C_word t70;
C_word t71;
C_word t72;
C_word t73;
C_word ab[183],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5931,2,t0,t1);}
t2=C_mutate((C_word*)lf[42]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5933,a[2]=((C_word)li14),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate((C_word*)lf[44]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5944,a[2]=((C_word)li16),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate((C_word*)lf[47]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5973,a[2]=((C_word)li17),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate((C_word*)lf[48]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5983,a[2]=((C_word)li18),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate((C_word*)lf[49]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5993,a[2]=((C_word)li19),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate((C_word*)lf[50]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6003,a[2]=((C_word)li20),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate((C_word*)lf[51]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6013,a[2]=((C_word)li21),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate((C_word*)lf[52]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6027,a[2]=((C_word)li22),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate((C_word*)lf[53]+1,*((C_word*)lf[54]+1));
t11=C_mutate((C_word*)lf[55]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6042,a[2]=((C_word)li23),tmp=(C_word)a,a+=3,tmp));
t12=C_mutate((C_word*)lf[56]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6048,a[2]=((C_word)li24),tmp=(C_word)a,a+=3,tmp));
t13=C_mutate((C_word*)lf[57]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6071,a[2]=((C_word)li25),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate((C_word*)lf[58]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6209,a[2]=((C_word)li26),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate((C_word*)lf[60]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6249,a[2]=((C_word)li27),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate((C_word*)lf[61]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6259,a[2]=((C_word)li30),tmp=(C_word)a,a+=3,tmp));
t17=C_mutate(&lf[63],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6354,a[2]=((C_word)li31),tmp=(C_word)a,a+=3,tmp));
t18=C_mutate(&lf[64],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6440,a[2]=((C_word)li33),tmp=(C_word)a,a+=3,tmp));
t19=C_mutate(&lf[65],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6481,a[2]=((C_word)li34),tmp=(C_word)a,a+=3,tmp));
t20=C_mutate(&lf[66],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6508,a[2]=((C_word)li35),tmp=(C_word)a,a+=3,tmp));
t21=C_mutate(&lf[67],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6535,a[2]=((C_word)li36),tmp=(C_word)a,a+=3,tmp));
t22=C_mutate(&lf[68],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6542,a[2]=((C_word)li37),tmp=(C_word)a,a+=3,tmp));
t23=C_mutate(&lf[69],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6553,a[2]=((C_word)li38),tmp=(C_word)a,a+=3,tmp));
t24=C_mutate(&lf[70],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6564,a[2]=((C_word)li39),tmp=(C_word)a,a+=3,tmp));
t25=C_mutate(&lf[71],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6579,a[2]=((C_word)li40),tmp=(C_word)a,a+=3,tmp));
t26=C_mutate(&lf[72],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6586,a[2]=((C_word)li41),tmp=(C_word)a,a+=3,tmp));
t27=C_mutate(&lf[73],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6593,a[2]=((C_word)li42),tmp=(C_word)a,a+=3,tmp));
t28=C_mutate(&lf[74],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6614,a[2]=((C_word)li43),tmp=(C_word)a,a+=3,tmp));
t29=C_mutate(&lf[75],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6617,a[2]=((C_word)li44),tmp=(C_word)a,a+=3,tmp));
t30=C_mutate(&lf[76],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6624,a[2]=((C_word)li45),tmp=(C_word)a,a+=3,tmp));
t31=C_mutate(&lf[77],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6653,a[2]=((C_word)li46),tmp=(C_word)a,a+=3,tmp));
t32=C_mutate(&lf[78],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6656,a[2]=((C_word)li47),tmp=(C_word)a,a+=3,tmp));
t33=C_mutate(&lf[79],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6659,a[2]=((C_word)li48),tmp=(C_word)a,a+=3,tmp));
t34=C_mutate(&lf[80],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6662,a[2]=((C_word)li49),tmp=(C_word)a,a+=3,tmp));
t35=C_mutate(&lf[81],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6673,a[2]=((C_word)li50),tmp=(C_word)a,a+=3,tmp));
t36=C_mutate(&lf[82],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6691,a[2]=((C_word)li51),tmp=(C_word)a,a+=3,tmp));
t37=C_mutate(&lf[83],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6698,a[2]=((C_word)li52),tmp=(C_word)a,a+=3,tmp));
t38=C_mutate(&lf[84],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6701,a[2]=((C_word)li53),tmp=(C_word)a,a+=3,tmp));
t39=C_mutate(&lf[85],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6708,a[2]=((C_word)li54),tmp=(C_word)a,a+=3,tmp));
t40=C_mutate(&lf[86],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6711,a[2]=((C_word)li55),tmp=(C_word)a,a+=3,tmp));
t41=C_mutate((C_word*)lf[87]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6714,a[2]=((C_word)li57),tmp=(C_word)a,a+=3,tmp));
t42=C_mutate((C_word*)lf[88]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6748,a[2]=((C_word)li58),tmp=(C_word)a,a+=3,tmp));
t43=C_mutate((C_word*)lf[89]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6830,a[2]=((C_word)li59),tmp=(C_word)a,a+=3,tmp));
t44=C_mutate((C_word*)lf[90]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6845,a[2]=((C_word)li60),tmp=(C_word)a,a+=3,tmp));
t45=C_mutate((C_word*)lf[92]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6887,a[2]=((C_word)li61),tmp=(C_word)a,a+=3,tmp));
t46=C_mutate((C_word*)lf[94]+1,*((C_word*)lf[95]+1));
t47=C_mutate((C_word*)lf[96]+1,*((C_word*)lf[97]+1));
t48=C_mutate((C_word*)lf[98]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6913,a[2]=((C_word)li63),tmp=(C_word)a,a+=3,tmp));
t49=C_mutate((C_word*)lf[99]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6934,a[2]=((C_word)li64),tmp=(C_word)a,a+=3,tmp));
t50=C_mutate((C_word*)lf[100]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6953,a[2]=((C_word)li66),tmp=(C_word)a,a+=3,tmp));
t51=C_mutate((C_word*)lf[105]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7189,a[2]=((C_word)li67),tmp=(C_word)a,a+=3,tmp));
t52=C_mutate((C_word*)lf[106]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7204,a[2]=((C_word)li68),tmp=(C_word)a,a+=3,tmp));
t53=C_mutate((C_word*)lf[107]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7219,a[2]=((C_word)li70),tmp=(C_word)a,a+=3,tmp));
t54=C_mutate((C_word*)lf[112]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7314,a[2]=((C_word)li71),tmp=(C_word)a,a+=3,tmp));
t55=C_mutate((C_word*)lf[113]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7341,a[2]=((C_word)li73),tmp=(C_word)a,a+=3,tmp));
t56=C_mutate((C_word*)lf[115]+1,C_retrieve2(lf[74],"tb:ran-set!"));
t57=C_mutate((C_word*)lf[116]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7415,a[2]=((C_word)li74),tmp=(C_word)a,a+=3,tmp));
t58=C_mutate((C_word*)lf[117]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7446,a[2]=((C_word)li75),tmp=(C_word)a,a+=3,tmp));
t59=C_mutate((C_word*)lf[118]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7467,a[2]=((C_word)li76),tmp=(C_word)a,a+=3,tmp));
t60=C_mutate((C_word*)lf[119]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7510,a[2]=((C_word)li77),tmp=(C_word)a,a+=3,tmp));
t61=C_mutate((C_word*)lf[123]+1,C_retrieve2(lf[77],"tb:ranlow"));
t62=C_mutate((C_word*)lf[124]+1,C_retrieve2(lf[78],"tb:ranhigh"));
t63=C_mutate((C_word*)lf[125]+1,C_retrieve2(lf[79],"tb:ranmiddle"));
t64=C_mutate((C_word*)lf[126]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7741,a[2]=((C_word)li78),tmp=(C_word)a,a+=3,tmp));
t65=C_mutate((C_word*)lf[130]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7969,a[2]=((C_word)li79),tmp=(C_word)a,a+=3,tmp));
t66=C_mutate((C_word*)lf[131]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7988,a[2]=((C_word)li80),tmp=(C_word)a,a+=3,tmp));
t67=C_mutate((C_word*)lf[132]+1,C_retrieve2(lf[83],"tb:rancauchy"));
t68=C_mutate((C_word*)lf[133]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8029,a[2]=((C_word)li81),tmp=(C_word)a,a+=3,tmp));
t69=C_mutate((C_word*)lf[135]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8048,a[2]=((C_word)li82),tmp=(C_word)a,a+=3,tmp));
t70=C_mutate((C_word*)lf[136]+1,C_retrieve2(lf[86],"tb:ranbrown"));
t71=C_mutate((C_word*)lf[137]+1,C_retrieve2(lf[85],"tb:ranpink"));
t72=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8071,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 367  make-hash-table");
t73=C_retrieve(lf[813]);
((C_proc3)C_retrieve_proc(t73))(3,t73,t72,*((C_word*)lf[830]+1));}

/* k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_8071(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8071,2,t0,t1);}
t2=C_mutate(&lf[138],t1);
t3=C_SCHEME_END_OF_LIST;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8074,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33516,a[2]=t7,a[3]=t4,a[4]=((C_word)li532),tmp=(C_word)a,a+=5,tmp));
t9=((C_word*)t7)[1];
f_33516(t9,t5,C_fix(0));}

/* do519 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_33516(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_33516,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nequalp(t2,C_fix(128)))){
t3=(C_word)C_a_i_list(&a,5,lf[816],C_fix(-1),lf[817],C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33529,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 367  hash-table-set!");
t5=C_retrieve(lf[681]);
((C_proc5)C_retrieve_proc(t5))(5,t5,t4,C_retrieve2(lf[138],"*notes*"),lf[818],t3);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_33730,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 367  modulo");
t4=*((C_word*)lf[114]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,t2,C_fix(12));}}

/* k33728 in do519 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_33730(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33730,2,t0,t1);}
t2=(C_word)C_i_list_ref(lf[819],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33539,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33550,a[2]=t4,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 367  modulo");
t6=*((C_word*)lf[114]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,((C_word*)t0)[4],C_fix(12));}

/* k33548 in k33728 in do519 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_33550(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33550,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[4],lf[820]);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],lf[821]);
t4=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33562,a[2]=t3,a[3]=t2,a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[3],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 367  tb:keynum->hertz");
f_6593(t4,((C_word*)t0)[4]);}

/* k33560 in k33548 in k33728 in do519 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_33562(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33562,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_33566,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],lf[829]);
C_trace("ChickenBridge.scm: 367  tb:keynum->hertz");
f_6593(t2,t3);}

/* k33564 in k33560 in k33548 in k33728 in do519 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_33566(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33566,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_33570,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
t3=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[6],lf[828]);
C_trace("ChickenBridge.scm: 367  tb:keynum->hertz");
f_6593(t2,t3);}

/* k33568 in k33564 in k33560 in k33548 in k33728 in do519 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_33570(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33570,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_33714,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_a_i_divide(&a,2,((C_word*)t0)[7],C_fix(12));
C_trace("ChickenBridge.scm: 367  floor");
t4=*((C_word*)lf[149]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,t3);}

/* k33712 in k33568 in k33564 in k33560 in k33548 in k33728 in do519 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_33714(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33714,2,t0,t1);}
t2=(C_word)C_i_inexact_to_exact(t1);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33576,a[2]=((C_word*)t0)[10],a[3]=t4,a[4]=((C_word)li531),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_33576(t6,((C_word*)t0)[9],((C_word*)((C_word*)t0)[10])[1],((C_word*)t0)[8],((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t2,C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* do525 in k33712 in k33568 in k33564 in k33560 in k33548 in k33728 in do519 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_33576(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7,C_word t8,C_word t9,C_word t10,C_word t11,C_word t12,C_word t13){
C_word tmp;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[40],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_33576,NULL,14,t0,t1,t2,t3,t4,t5,t6,t7,t8,t9,t10,t11,t12,t13);}
t14=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t15=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t16=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t17=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t18=t1;
((C_proc2)(void*)(*((C_word*)t18+1)))(2,t18,C_SCHEME_FALSE);}
else{
t18=(*a=C_CLOSURE_TYPE|15,a[1]=(C_word)f_33586,a[2]=t17,a[3]=t16,a[4]=t15,a[5]=t14,a[6]=t9,a[7]=t8,a[8]=t7,a[9]=t6,a[10]=t5,a[11]=t4,a[12]=t3,a[13]=t1,a[14]=((C_word*)t0)[3],a[15]=t2,tmp=(C_word)a,a+=16,tmp);
t19=(*a=C_CLOSURE_TYPE|15,a[1]=(C_word)f_33596,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=t8,a[5]=t6,a[6]=t9,a[7]=t5,a[8]=t17,a[9]=t4,a[10]=t7,a[11]=t3,a[12]=t16,a[13]=t15,a[14]=t14,a[15]=t18,tmp=(C_word)a,a+=16,tmp);
if(C_truep((C_word)C_i_nequalp(t3,C_fix(0)))){
t20=(C_word)C_i_car(t2);
t21=t19;
f_33596(t21,(C_word)C_i_string_equal_p(t20,lf[827]));}
else{
t20=t19;
f_33596(t20,C_SCHEME_FALSE);}}}

/* k33594 in do525 in k33712 in k33568 in k33564 in k33560 in k33548 in k33728 in do519 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_33596(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_33596,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[15];
f_33586(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|15,a[1]=(C_word)f_33599,a[2]=((C_word*)t0)[15],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],a[12]=((C_word*)t0)[11],a[13]=((C_word*)t0)[12],a[14]=((C_word*)t0)[13],a[15]=((C_word*)t0)[14],tmp=(C_word)a,a+=16,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[3]);
if(C_truep((C_word)C_i_string_equal_p(t3,lf[825]))){
t4=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[14])[1],C_fix(1));
t5=C_mutate(((C_word *)((C_word*)t0)[14])+1,t4);
t6=t2;
f_33599(t6,t5);}
else{
t4=(C_word)C_i_car(((C_word*)t0)[3]);
if(C_truep((C_word)C_i_string_equal_p(t4,lf[826]))){
t5=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[14])[1],C_fix(1));
t6=C_mutate(((C_word *)((C_word*)t0)[14])+1,t5);
t7=t2;
f_33599(t7,t6);}
else{
t5=t2;
f_33599(t5,C_SCHEME_UNDEFINED);}}}}

/* k33597 in k33594 in do525 in k33712 in k33568 in k33564 in k33560 in k33548 in k33728 in do519 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_33599(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_33599,NULL,2,t0,t1);}
t2=(C_word)C_i_list_ref(lf[822],((C_word*)((C_word*)t0)[15])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[14])+1,t2);
t4=(*a=C_CLOSURE_TYPE|14,a[1]=(C_word)f_33607,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[14],a[11]=((C_word*)t0)[10],a[12]=((C_word*)t0)[11],a[13]=((C_word*)t0)[12],a[14]=((C_word*)t0)[13],tmp=(C_word)a,a+=15,tmp);
t5=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 367  string-append");
t6=*((C_word*)lf[141]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,t5,((C_word*)((C_word*)t0)[14])[1]);}

/* k33605 in k33597 in k33594 in do525 in k33712 in k33568 in k33564 in k33560 in k33548 in k33728 in do519 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_33607(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33607,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[14])+1,t1);
t3=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[14])[1],((C_word*)t0)[13],((C_word*)t0)[12],((C_word*)t0)[11],((C_word*)((C_word*)t0)[10])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[9])+1,t3);
t5=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_33614,a[2]=((C_word*)t0)[13],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[7],a[11]=((C_word*)t0)[8],a[12]=((C_word*)t0)[14],tmp=(C_word)a,a+=13,tmp);
C_trace("ChickenBridge.scm: 367  hash-table-set!");
t6=C_retrieve(lf[681]);
((C_proc5)C_retrieve_proc(t6))(5,t6,t5,C_retrieve2(lf[138],"*notes*"),((C_word*)((C_word*)t0)[14])[1],((C_word*)((C_word*)t0)[9])[1]);}

/* k33612 in k33605 in k33597 in k33594 in do525 in k33712 in k33568 in k33564 in k33560 in k33548 in k33728 in do519 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_33614(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33614,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_33617,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[12],tmp=(C_word)a,a+=12,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
if(C_truep(t3)){
C_trace("ChickenBridge.scm: 367  hash-table-set!");
t4=C_retrieve(lf[681]);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,C_retrieve2(lf[138],"*notes*"),((C_word*)t0)[2],((C_word*)((C_word*)t0)[8])[1]);}
else{
t4=t2;
f_33617(2,t4,C_SCHEME_UNDEFINED);}}

/* k33615 in k33612 in k33605 in k33597 in k33594 in do525 in k33712 in k33568 in k33564 in k33560 in k33548 in k33728 in do519 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_33617(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33617,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_33621,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 367  string-append");
t4=*((C_word*)lf[141]+1);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,t3,lf[824],((C_word*)((C_word*)t0)[8])[1]);}

/* k33619 in k33615 in k33612 in k33605 in k33597 in k33594 in do525 in k33712 in k33568 in k33564 in k33560 in k33548 in k33728 in do519 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_33621(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33621,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[11])+1,t1);
t3=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[11])[1],((C_word*)t0)[10],((C_word*)t0)[9],C_SCHEME_FALSE,((C_word*)((C_word*)t0)[8])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[7])+1,t3);
t5=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_33628,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[5],a[9]=((C_word*)t0)[6],a[10]=((C_word*)t0)[11],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 367  hash-table-set!");
t6=C_retrieve(lf[681]);
((C_proc5)C_retrieve_proc(t6))(5,t6,t5,C_retrieve2(lf[138],"*notes*"),((C_word*)((C_word*)t0)[11])[1],((C_word*)((C_word*)t0)[7])[1]);}

/* k33626 in k33619 in k33615 in k33612 in k33605 in k33597 in k33594 in do525 in k33712 in k33568 in k33564 in k33560 in k33548 in k33728 in do519 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_33628(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33628,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_33631,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],tmp=(C_word)a,a+=10,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
if(C_truep(t3)){
C_trace("ChickenBridge.scm: 367  hash-table-set!");
t4=C_retrieve(lf[681]);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,C_retrieve2(lf[138],"*notes*"),((C_word*)t0)[2],((C_word*)((C_word*)t0)[6])[1]);}
else{
t4=t2;
f_33631(2,t4,C_SCHEME_UNDEFINED);}}

/* k33629 in k33626 in k33619 in k33615 in k33612 in k33605 in k33597 in k33594 in do525 in k33712 in k33568 in k33564 in k33560 in k33548 in k33728 in do519 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_33631(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33631,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_33635,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 367  string-append");
t4=*((C_word*)lf[141]+1);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,t3,lf[823],((C_word*)((C_word*)t0)[6])[1]);}

/* k33633 in k33629 in k33626 in k33619 in k33615 in k33612 in k33605 in k33597 in k33594 in do525 in k33712 in k33568 in k33564 in k33560 in k33548 in k33728 in do519 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_33635(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33635,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,t1);
t3=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[9])[1],((C_word*)t0)[8],((C_word*)t0)[7],C_SCHEME_FALSE,((C_word*)((C_word*)t0)[6])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[5])+1,t3);
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33642,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 367  hash-table-set!");
t6=C_retrieve(lf[681]);
((C_proc5)C_retrieve_proc(t6))(5,t6,t5,C_retrieve2(lf[138],"*notes*"),((C_word*)((C_word*)t0)[9])[1],((C_word*)((C_word*)t0)[5])[1]);}

/* k33640 in k33633 in k33629 in k33626 in k33619 in k33615 in k33612 in k33605 in k33597 in k33594 in do525 in k33712 in k33568 in k33564 in k33560 in k33548 in k33728 in do519 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_33642(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_eqp(((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1]);
if(C_truep(t2)){
C_trace("ChickenBridge.scm: 367  hash-table-set!");
t3=C_retrieve(lf[681]);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[4],C_retrieve2(lf[138],"*notes*"),((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}
else{
t3=((C_word*)t0)[4];
f_33586(2,t3,C_SCHEME_UNDEFINED);}}

/* k33584 in do525 in k33712 in k33568 in k33564 in k33560 in k33548 in k33728 in do519 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_33586(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[15]);
t3=((C_word*)((C_word*)t0)[14])[1];
f_33576(t3,((C_word*)t0)[13],t2,((C_word*)t0)[12],((C_word*)t0)[11],((C_word*)t0)[10],((C_word*)t0)[9],((C_word*)t0)[8],((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k33537 in k33728 in do519 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_33539(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33539,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t3=((C_word*)((C_word*)t0)[3])[1];
f_33516(t3,((C_word*)t0)[2],t2);}

/* k33527 in do519 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_33529(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33529,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33532,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 367  hash-table-set!");
t3=C_retrieve(lf[681]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve2(lf[138],"*notes*"),C_fix(-1),((C_word*)t0)[2]);}

/* k33530 in k33527 in do519 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_33532(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_TRUE);}

/* k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_8074(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word t36;
C_word t37;
C_word t38;
C_word t39;
C_word t40;
C_word t41;
C_word t42;
C_word t43;
C_word t44;
C_word t45;
C_word t46;
C_word t47;
C_word t48;
C_word t49;
C_word t50;
C_word t51;
C_word t52;
C_word t53;
C_word t54;
C_word t55;
C_word t56;
C_word t57;
C_word t58;
C_word t59;
C_word t60;
C_word t61;
C_word t62;
C_word t63;
C_word t64;
C_word t65;
C_word t66;
C_word t67;
C_word t68;
C_word t69;
C_word t70;
C_word t71;
C_word t72;
C_word t73;
C_word t74;
C_word t75;
C_word t76;
C_word ab[219],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8074,2,t0,t1);}
t2=C_mutate(&lf[139],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8076,a[2]=((C_word)li85),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[143],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8178,a[2]=((C_word)li88),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate((C_word*)lf[151]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8231,a[2]=((C_word)li90),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate((C_word*)lf[153]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8328,a[2]=((C_word)li92),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate((C_word*)lf[155]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8450,a[2]=((C_word)li94),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate((C_word*)lf[157]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8566,a[2]=((C_word)li95),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate((C_word*)lf[158]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8611,a[2]=((C_word)li99),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate((C_word*)lf[161]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8746,a[2]=((C_word)li103),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate((C_word*)lf[163]+1,*((C_word*)lf[164]+1));
t11=C_mutate(&lf[165],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9054,a[2]=((C_word)li104),tmp=(C_word)a,a+=3,tmp));
t12=C_mutate(&lf[167],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9066,a[2]=((C_word)li105),tmp=(C_word)a,a+=3,tmp));
t13=C_mutate(&lf[169],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9075,a[2]=((C_word)li106),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate(&lf[170],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9093,a[2]=((C_word)li107),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate(&lf[171],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9111,a[2]=((C_word)li108),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate(&lf[172],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9138,a[2]=((C_word)li109),tmp=(C_word)a,a+=3,tmp));
t17=C_mutate(&lf[173],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9147,a[2]=((C_word)li110),tmp=(C_word)a,a+=3,tmp));
t18=C_mutate(&lf[174],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9165,a[2]=((C_word)li111),tmp=(C_word)a,a+=3,tmp));
t19=C_mutate(&lf[175],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9210,a[2]=((C_word)li112),tmp=(C_word)a,a+=3,tmp));
t20=C_mutate(&lf[177],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9225,a[2]=((C_word)li113),tmp=(C_word)a,a+=3,tmp));
t21=C_mutate(&lf[178],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9234,a[2]=((C_word)li114),tmp=(C_word)a,a+=3,tmp));
t22=C_mutate(&lf[179],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9243,a[2]=((C_word)li115),tmp=(C_word)a,a+=3,tmp));
t23=C_mutate(&lf[180],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9261,a[2]=((C_word)li116),tmp=(C_word)a,a+=3,tmp));
t24=C_mutate(&lf[181],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9270,a[2]=((C_word)li117),tmp=(C_word)a,a+=3,tmp));
t25=C_mutate(&lf[182],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9279,a[2]=((C_word)li118),tmp=(C_word)a,a+=3,tmp));
t26=C_mutate(&lf[183],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9297,a[2]=((C_word)li119),tmp=(C_word)a,a+=3,tmp));
t27=C_mutate(&lf[184],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9306,a[2]=((C_word)li120),tmp=(C_word)a,a+=3,tmp));
t28=C_mutate(&lf[185],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9315,a[2]=((C_word)li121),tmp=(C_word)a,a+=3,tmp));
t29=C_mutate(&lf[186],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9324,a[2]=((C_word)li122),tmp=(C_word)a,a+=3,tmp));
t30=C_mutate(&lf[187],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9333,a[2]=((C_word)li123),tmp=(C_word)a,a+=3,tmp));
t31=C_mutate(&lf[188],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9450,a[2]=((C_word)li124),tmp=(C_word)a,a+=3,tmp));
t32=C_mutate(&lf[189],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9459,a[2]=((C_word)li125),tmp=(C_word)a,a+=3,tmp));
t33=C_mutate(&lf[190],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9514,a[2]=((C_word)li126),tmp=(C_word)a,a+=3,tmp));
t34=C_mutate(&lf[194],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9524,a[2]=((C_word)li128),tmp=(C_word)a,a+=3,tmp));
t35=C_mutate((C_word*)lf[202]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9704,a[2]=((C_word)li129),tmp=(C_word)a,a+=3,tmp));
t36=C_mutate((C_word*)lf[204]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9723,a[2]=((C_word)li130),tmp=(C_word)a,a+=3,tmp));
t37=C_mutate((C_word*)lf[206]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9742,a[2]=((C_word)li133),tmp=(C_word)a,a+=3,tmp));
t38=C_mutate(&lf[207],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9865,a[2]=((C_word)li136),tmp=(C_word)a,a+=3,tmp));
t39=C_mutate(&lf[208],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10166,a[2]=((C_word)li137),tmp=(C_word)a,a+=3,tmp));
t40=C_mutate(&lf[201],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10175,a[2]=((C_word)li138),tmp=(C_word)a,a+=3,tmp));
t41=C_mutate(&lf[209],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10221,a[2]=((C_word)li140),tmp=(C_word)a,a+=3,tmp));
t42=C_mutate((C_word*)lf[213]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10336,a[2]=((C_word)li142),tmp=(C_word)a,a+=3,tmp));
t43=C_mutate(&lf[215],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10591,a[2]=((C_word)li143),tmp=(C_word)a,a+=3,tmp));
t44=C_mutate(&lf[218],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10663,a[2]=((C_word)li144),tmp=(C_word)a,a+=3,tmp));
t45=C_mutate(&lf[220],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10672,a[2]=((C_word)li145),tmp=(C_word)a,a+=3,tmp));
t46=C_mutate((C_word*)lf[221]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10752,a[2]=((C_word)li147),tmp=(C_word)a,a+=3,tmp));
t47=C_mutate(&lf[222],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11222,a[2]=((C_word)li148),tmp=(C_word)a,a+=3,tmp));
t48=C_mutate((C_word*)lf[226]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11437,a[2]=((C_word)li150),tmp=(C_word)a,a+=3,tmp));
t49=C_mutate(&lf[227],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11684,a[2]=((C_word)li151),tmp=(C_word)a,a+=3,tmp));
t50=C_mutate((C_word*)lf[228]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11720,a[2]=((C_word)li153),tmp=(C_word)a,a+=3,tmp));
t51=C_mutate(&lf[229],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11983,a[2]=((C_word)li155),tmp=(C_word)a,a+=3,tmp));
t52=C_mutate((C_word*)lf[230]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12059,a[2]=((C_word)li157),tmp=(C_word)a,a+=3,tmp));
t53=C_mutate(&lf[231],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12533,a[2]=((C_word)li160),tmp=(C_word)a,a+=3,tmp));
t54=C_mutate(&lf[233],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12755,a[2]=((C_word)li161),tmp=(C_word)a,a+=3,tmp));
t55=C_mutate(&lf[235],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12764,a[2]=((C_word)li162),tmp=(C_word)a,a+=3,tmp));
t56=C_mutate(&lf[236],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12773,a[2]=((C_word)li163),tmp=(C_word)a,a+=3,tmp));
t57=C_mutate(&lf[237],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12791,a[2]=((C_word)li164),tmp=(C_word)a,a+=3,tmp));
t58=C_mutate(&lf[238],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12809,a[2]=((C_word)li165),tmp=(C_word)a,a+=3,tmp));
t59=C_mutate(&lf[239],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12827,a[2]=((C_word)li166),tmp=(C_word)a,a+=3,tmp));
t60=C_mutate(&lf[240],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12836,a[2]=((C_word)li167),tmp=(C_word)a,a+=3,tmp));
t61=C_mutate(&lf[241],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12845,a[2]=((C_word)li168),tmp=(C_word)a,a+=3,tmp));
t62=C_mutate((C_word*)lf[242]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12928,a[2]=((C_word)li173),tmp=(C_word)a,a+=3,tmp));
t63=C_mutate(&lf[243],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13695,a[2]=((C_word)li176),tmp=(C_word)a,a+=3,tmp));
t64=C_mutate(&lf[244],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13807,a[2]=((C_word)li181),tmp=(C_word)a,a+=3,tmp));
t65=C_mutate((C_word*)lf[249]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14240,a[2]=((C_word)li186),tmp=(C_word)a,a+=3,tmp));
t66=C_mutate(&lf[250],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14727,a[2]=((C_word)li193),tmp=(C_word)a,a+=3,tmp));
t67=C_mutate(&lf[259],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15067,a[2]=((C_word)li194),tmp=(C_word)a,a+=3,tmp));
t68=C_mutate((C_word*)lf[261]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15130,a[2]=((C_word)li199),tmp=(C_word)a,a+=3,tmp));
t69=C_mutate(&lf[262],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15648,a[2]=((C_word)li201),tmp=(C_word)a,a+=3,tmp));
t70=C_mutate(&lf[268],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15742,a[2]=((C_word)li202),tmp=(C_word)a,a+=3,tmp));
t71=C_mutate(&lf[270],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15763,a[2]=((C_word)li203),tmp=(C_word)a,a+=3,tmp));
t72=C_mutate(&lf[271],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15781,a[2]=((C_word)li204),tmp=(C_word)a,a+=3,tmp));
t73=C_mutate(&lf[272],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15799,a[2]=((C_word)li205),tmp=(C_word)a,a+=3,tmp));
t74=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15809,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t75=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33502,a[2]=((C_word)li530),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  ##sys#register-record-printer");
t76=C_retrieve(lf[804]);
((C_proc4)C_retrieve_proc(t76))(4,t76,t74,lf[269],t75);}

/* a33501 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_33502(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_33502,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33510,a[2]=t2,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  token-type");
f_15763(t4,t2);}

/* k33508 in a33501 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_33510(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33510,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33514,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  token-string");
f_15781(t2,((C_word*)t0)[2]);}

/* k33512 in k33508 in a33501 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_33514(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  fprintf");
t2=C_retrieve(lf[801]);
((C_proc6)C_retrieve_proc(t2))(6,t2,((C_word*)t0)[4],((C_word*)t0)[3],lf[815],((C_word*)t0)[2],t1);}

/* k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_15809(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15809,2,t0,t1);}
t2=C_mutate(&lf[273],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15811,a[2]=((C_word)li206),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[275],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15840,a[2]=((C_word)li207),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate(&lf[276],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15852,a[2]=((C_word)li208),tmp=(C_word)a,a+=3,tmp));
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15860,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  make-hash-table");
t6=C_retrieve(lf[813]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,*((C_word*)lf[814]+1));}

/* k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_15860(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15860,2,t0,t1);}
t2=C_mutate(&lf[277],t1);
t3=C_mutate(&lf[278],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15862,a[2]=((C_word)li209),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate(&lf[280],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15883,a[2]=((C_word)li210),tmp=(C_word)a,a+=3,tmp));
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15965,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33492,a[2]=((C_word)li529),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  ##sys#register-record-printer");
t7=C_retrieve(lf[804]);
((C_proc4)C_retrieve_proc(t7))(4,t7,t5,lf[279],t6);}

/* a33491 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_33492(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_33492,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33500,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  rule-name");
f_15883(t4,t2);}

/* k33498 in a33491 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_33500(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  fprintf");
t2=C_retrieve(lf[801]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[3],((C_word*)t0)[2],lf[812],t1);}

/* k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_15965(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15965,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15968,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33389,a[2]=((C_word)li528),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  ##sys#register-macro");
t4=C_retrieve(lf[679]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[811],t3);}

/* a33388 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_33389(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...){
C_word tmp;
C_word t4;
va_list v;
C_word *a,c2=c;
C_save_rest(t3,c2,4);
if(c<4) C_bad_min_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+22)){
C_save_and_reclaim((void*)tr4r,(void*)f_33389r,4,t0,t1,t2,t3);}
else{
a=C_alloc((c-4)*3);
t4=C_restore_rest(a,C_rest_count(0));
f_33389r(t0,t1,t2,t3,t4);}}

static void C_ccall f_33389r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a=C_alloc(22);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33392,a[2]=t6,a[3]=((C_word)li527),tmp=(C_word)a,a+=4,tmp));
t8=(C_word)C_a_i_list(&a,2,lf[808],t2);
t9=(C_word)C_a_i_list(&a,1,t8);
t10=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33452,a[2]=t3,a[3]=t6,a[4]=t9,a[5]=t1,a[6]=t4,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 369  symbol->string");
t11=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t11))(3,t11,t10,t2);}

/* k33450 in a33388 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_33452(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33452,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_33456,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t1,a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 369  ppat");
t3=((C_word*)((C_word*)t0)[3])[1];
f_33392(t3,t2,((C_word*)t0)[2]);}

/* k33454 in k33450 in a33388 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_33456(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33456,2,t0,t1);}
t2=(C_word)C_i_nullp(((C_word*)t0)[5]);
t3=(C_truep(t2)?C_SCHEME_FALSE:(C_word)C_i_car(((C_word*)t0)[5]));
t4=(C_word)C_i_nullp(((C_word*)t0)[5]);
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33470,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t3,a[5]=t1,a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],tmp=(C_word)a,a+=8,tmp);
if(C_truep(t4)){
t6=t5;
f_33470(t6,t4);}
else{
t6=(C_word)C_i_cdr(((C_word*)t0)[5]);
t7=t5;
f_33470(t7,(C_word)C_i_nullp(t6));}}

/* k33468 in k33454 in k33450 in a33388 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_33470(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_33470,NULL,2,t0,t1);}
t2=(C_truep(t1)?C_SCHEME_FALSE:(C_word)C_i_cadr(((C_word*)t0)[7]));
t3=(C_word)C_a_i_list(&a,6,lf[809],((C_word*)t0)[6],lf[808],((C_word*)t0)[5],((C_word*)t0)[4],t2);
t4=(C_word)C_a_i_list(&a,4,lf[681],lf[810],lf[808],t3);
t5=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_a_i_list(&a,3,lf[1],((C_word*)t0)[2],t4));}

/* ppat in a33388 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_33392(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
loop:
a=C_alloc(11);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_33392,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,lf[806]);}
else{
if(C_truep((C_word)C_i_pairp(t2))){
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33412,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 369  ppat");
t7=t3;
t8=t4;
t1=t7;
t2=t8;
goto loop;}
else{
t3=(C_word)C_i_member(t2,lf[807]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_truep(t3)?(C_word)C_a_i_list(&a,2,lf[465],t2):t2));}}}

/* k33410 in ppat in a33388 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_33412(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33412,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33416,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 369  ppat");
t4=((C_word*)((C_word*)t0)[2])[1];
f_33392(t4,t2,t3);}

/* k33414 in k33410 in ppat in a33388 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_33416(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33416,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_list(&a,3,lf[718],((C_word*)t0)[2],t1));}

/* k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_15968(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[36],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15968,2,t0,t1);}
t2=C_mutate(&lf[281],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15970,a[2]=((C_word)li211),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[185],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15991,a[2]=((C_word)li212),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate(&lf[283],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15994,a[2]=((C_word)li213),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate(&lf[284],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16006,a[2]=((C_word)li214),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate(&lf[285],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16012,a[2]=((C_word)li215),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate(&lf[286],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16022,a[2]=((C_word)li216),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate(&lf[287],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16080,a[2]=((C_word)li217),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate(&lf[288],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16112,a[2]=((C_word)li218),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate(&lf[290],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16133,a[2]=((C_word)li219),tmp=(C_word)a,a+=3,tmp));
t11=C_mutate(&lf[291],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16151,a[2]=((C_word)li220),tmp=(C_word)a,a+=3,tmp));
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16161,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t13=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33375,a[2]=((C_word)li526),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  ##sys#register-record-printer");
t14=C_retrieve(lf[804]);
((C_proc4)C_retrieve_proc(t14))(4,t14,t12,lf[289],t13);}

/* a33374 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_33375(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_33375,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33383,a[2]=t2,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  parse-error-string");
f_16133(t4,t2);}

/* k33381 in a33374 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_33383(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33383,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33387,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  parse-error-position");
f_16151(t2,((C_word*)t0)[2]);}

/* k33385 in k33381 in a33374 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_33387(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  fprintf");
t2=C_retrieve(lf[801]);
((C_proc6)C_retrieve_proc(t2))(6,t2,((C_word*)t0)[4],((C_word*)t0)[3],lf[805],((C_word*)t0)[2],t1);}

/* k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_16161(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16161,2,t0,t1);}
t2=C_mutate(&lf[292],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16163,a[2]=((C_word)li221),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[294],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16169,a[2]=((C_word)li222),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate(&lf[295],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16184,a[2]=((C_word)li223),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate(&lf[296],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16202,a[2]=((C_word)li224),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate(&lf[297],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16220,a[2]=((C_word)li225),tmp=(C_word)a,a+=3,tmp));
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16230,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t8=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33349,a[2]=((C_word)li525),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  ##sys#register-record-printer");
t9=C_retrieve(lf[804]);
((C_proc4)C_retrieve_proc(t9))(4,t9,t7,lf[293],t8);}

/* a33348 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_33349(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_33349,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33353,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  parse-unit-type");
f_16184(t4,t2);}

/* k33351 in a33348 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_33353(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33353,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33359,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  SalRuleType?");
f_17442(t2,t1);}

/* k33357 in k33351 in a33348 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_33359(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33359,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33366,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33370,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  get-rule");
f_15970(t3,((C_word*)t0)[2],C_SCHEME_END_OF_LIST);}
else{
C_trace("ChickenBridge.scm: 369  fprintf");
t2=C_retrieve(lf[801]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[4],((C_word*)t0)[3],lf[803],((C_word*)t0)[2]);}}

/* k33368 in k33357 in k33351 in a33348 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_33370(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  rule-name");
f_15883(((C_word*)t0)[2],t1);}

/* k33364 in k33357 in k33351 in a33348 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_33366(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  fprintf");
t2=C_retrieve(lf[801]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[3],((C_word*)t0)[2],lf[802],t1);}

/* k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_16230(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word ab[60],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16230,2,t0,t1);}
t2=C_mutate(&lf[298],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16232,a[2]=((C_word)li226),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[300],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16248,a[2]=((C_word)li227),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate(&lf[302],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16280,a[2]=((C_word)li228),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate(&lf[303],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16292,a[2]=((C_word)li229),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate(&lf[304],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16302,a[2]=((C_word)li230),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate(&lf[306],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16320,a[2]=((C_word)li231),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate(&lf[316],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16353,a[2]=((C_word)li232),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate(&lf[319],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16561,a[2]=((C_word)li234),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate(&lf[320],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16569,a[2]=((C_word)li237),tmp=(C_word)a,a+=3,tmp));
t11=lf[321]=C_SCHEME_FALSE;;
t12=C_mutate(&lf[322],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16673,a[2]=((C_word)li251),tmp=(C_word)a,a+=3,tmp));
t13=C_mutate(&lf[299],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17292,a[2]=((C_word)li252),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate(&lf[315],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17340,a[2]=((C_word)li253),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate(&lf[318],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17442,a[2]=((C_word)li254),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate(&lf[301],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17454,a[2]=((C_word)li255),tmp=(C_word)a,a+=3,tmp));
t17=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17475,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t18=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33327,a[2]=t17,tmp=(C_word)a,a+=3,tmp);
t19=(C_word)C_a_i_cons(&a,2,C_fix(3072),C_SCHEME_END_OF_LIST);
t20=(C_word)C_a_i_cons(&a,2,C_fix(3328),t19);
t21=(C_word)C_a_i_cons(&a,2,C_fix(2816),t20);
t22=(C_word)C_a_i_cons(&a,2,lf[311],t21);
C_trace("ChickenBridge.scm: 369  make-rule");
f_15862(t18,lf[800],C_fix(25856),t22,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k33325 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_33327(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  hash-table-set!");
t2=C_retrieve(lf[681]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[277],"*rules*"),C_fix(25856),t1);}

/* k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_17475(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17475,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17478,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33307,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(4608),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(4352),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[311],t5);
C_trace("ChickenBridge.scm: 369  make-rule");
f_15862(t3,lf[799],C_fix(26112),t6,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k33305 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_33307(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  hash-table-set!");
t2=C_retrieve(lf[681]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[277],"*rules*"),C_fix(26112),t1);}

/* k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_17478(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17478,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17481,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33267,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(4608),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(4352),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(25088),t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(3840),t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(3072),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(3328),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(2816),t9);
t11=(C_word)C_a_i_cons(&a,2,lf[311],t10);
C_trace("ChickenBridge.scm: 369  make-rule");
f_15862(t3,lf[798],C_fix(26368),t11,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k33265 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_33267(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  hash-table-set!");
t2=C_retrieve(lf[681]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[277],"*rules*"),C_fix(26368),t1);}

/* k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_17481(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17481,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17484,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33157,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(26880),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,lf[95],t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(1280),C_SCHEME_END_OF_LIST);
t7=(C_word)C_a_i_cons(&a,2,t5,t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(1024),t7);
t9=(C_word)C_a_i_cons(&a,2,lf[310],t8);
t10=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33163,a[2]=((C_word)li523),tmp=(C_word)a,a+=3,tmp);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33173,a[2]=((C_word)li524),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  make-rule");
f_15862(t3,lf[797],C_fix(26624),t9,t10,t11);}

/* a33172 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_33173(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_33173,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_33177,a[2]=t2,a[3]=t4,a[4]=t3,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 369  get-emit-info");
f_16280(t5,lf[791],t3);}

/* k33175 in a33172 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_33177(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33177,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_33180,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 369  parse-unit-parsed");
f_16202(t2,((C_word*)t0)[2]);}

/* k33178 in k33175 in a33172 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_33180(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33180,2,t0,t1);}
t2=((C_word*)t0)[5];
if(C_truep(t2)){
C_trace("ChickenBridge.scm: 369  emit");
f_16320(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
if(C_truep((C_word)C_i_nullp(t1))){
t3=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_list(&a,1,lf[515]));}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_33198,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 369  add-emit-info");
f_16292(t3,lf[791],C_SCHEME_TRUE,((C_word*)t0)[3]);}}}

/* k33196 in k33178 in k33175 in a33172 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_33198(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33198,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33201,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  emit");
f_16320(t2,((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* k33199 in k33196 in k33178 in k33175 in a33172 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_33201(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33201,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33204,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33232,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  get-emit-info");
f_16280(t5,lf[791],((C_word*)t0)[2]);}

/* k33230 in k33199 in k33196 in k33178 in k33175 in a33172 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_33232(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33232,2,t0,t1);}
t2=(C_word)C_eqp(t1,lf[792]);
if(C_truep(t2)){
t3=(C_word)C_a_i_list(&a,2,lf[796],((C_word*)t0)[4]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_33204(t5,t4);}
else{
t3=(C_word)C_a_i_list(&a,2,lf[465],((C_word*)t0)[4]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_33204(t5,t4);}}

/* k33202 in k33199 in k33196 in k33178 in k33175 in a33172 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_33204(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_33204,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33210,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  get-emit-info");
f_16280(t2,lf[759],((C_word*)t0)[2]);}

/* k33208 in k33202 in k33199 in k33196 in k33178 in k33175 in a33172 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_33210(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33210,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,1,lf[515]);
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_list(&a,3,lf[18],((C_word*)((C_word*)t0)[2])[1],t2));}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}}

/* a33162 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_33163(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_33163,4,t0,t1,t2,t3);}
t4=(C_word)C_i_cadr(t2);
C_trace("ChickenBridge.scm: 369  make-parse-unit");
f_16163(t1,C_fix(26624),t4,C_SCHEME_FALSE);}

/* k33155 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_33157(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  hash-table-set!");
t2=C_retrieve(lf[681]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[277],"*rules*"),C_fix(26624),t1);}

/* k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_17484(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17484,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17487,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33057,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(5632),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(5376),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[311],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,t6,t7);
t9=(C_word)C_a_i_cons(&a,2,lf[310],t8);
t10=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33065,a[2]=t9,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  simple-unit-parser");
f_16561(t10,C_fix(27648));}

/* k33063 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_33065(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33065,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33067,a[2]=((C_word)li522),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  make-rule");
f_15862(((C_word*)t0)[3],lf[795],C_fix(27648),((C_word*)t0)[2],t1,t2);}

/* a33066 in k33063 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_33067(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_33067,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33071,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  parse-unit-parsed");
f_16202(t5,t2);}

/* k33069 in a33066 in k33063 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_33071(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33071,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_33074,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(t1);
C_trace("ChickenBridge.scm: 369  token-unit-type=?");
f_16248(t2,t3,C_fix(5376));}

/* k33072 in k33069 in a33066 in k33063 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_33074(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33074,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33077,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 369  get-emit-info");
f_16280(t2,lf[791],((C_word*)t0)[4]);}

/* k33075 in k33072 in k33069 in a33066 in k33063 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_33077(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33077,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33080,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
if(C_truep(t1)){
t3=t2;
f_33080(2,t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33109,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t4=(C_truep(((C_word*)t0)[5])?lf[793]:lf[794]);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33117,a[2]=t4,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_car(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 369  parse-unit-position");
f_16220(t5,t6);}}

/* k33115 in k33075 in k33072 in k33069 in a33066 in k33063 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_33117(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  make-parse-error");
f_16112(((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k33107 in k33075 in k33072 in k33069 in a33066 in k33063 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_33109(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  errf");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k33078 in k33075 in k33072 in k33069 in a33066 in k33063 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_33080(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33080,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33083,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 369  emit");
f_16320(t2,t3,((C_word*)t0)[4],((C_word*)t0)[2]);}

/* k33081 in k33078 in k33075 in k33072 in k33069 in a33066 in k33063 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_33083(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33083,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33086,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  set-emit-info!");
f_16302(t2,lf[791],lf[792],((C_word*)t0)[2]);}

/* k33084 in k33081 in k33078 in k33075 in k33072 in k33069 in a33066 in k33063 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_33086(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33086,2,t0,t1);}
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_truep(((C_word*)t0)[3])?(C_word)C_a_i_list(&a,2,lf[789],((C_word*)t0)[2]):(C_word)C_a_i_list(&a,2,lf[790],((C_word*)t0)[2])));}

/* k33055 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_33057(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  hash-table-set!");
t2=C_retrieve(lf[681]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[277],"*rules*"),C_fix(27648),t1);}

/* k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_17487(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17487,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17490,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33029,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(27648),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(2304),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(26624),t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(26368),t6);
t8=(C_word)C_a_i_cons(&a,2,lf[311],t7);
C_trace("ChickenBridge.scm: 369  make-rule");
f_15862(t3,lf[788],C_fix(26880),t8,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k33027 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_33029(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  hash-table-set!");
t2=C_retrieve(lf[681]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[277],"*rules*"),C_fix(26880),t1);}

/* k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_17490(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17490,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17493,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32969,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(1792),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(29696),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(1536),t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(25088),t6);
t8=(C_word)C_a_i_cons(&a,2,lf[310],t7);
t9=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32975,a[2]=((C_word)li520),tmp=(C_word)a,a+=3,tmp);
t10=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32993,a[2]=((C_word)li521),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  make-rule");
f_15862(t3,lf[787],C_fix(27136),t8,t9,t10);}

/* a32992 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_32993(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_32993,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33001,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33005,a[2]=t4,a[3]=t3,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  parse-unit-parsed");
f_16202(t6,t2);}

/* k33003 in a32992 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_33005(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  emit");
f_16320(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k32999 in a32992 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_33001(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33001,2,t0,t1);}
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,lf[54],t1));}

/* a32974 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_32975(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_32975,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_caddr(t2);
t6=(C_word)C_a_i_list(&a,2,t4,t5);
C_trace("ChickenBridge.scm: 369  make-parse-unit");
f_16163(t1,C_fix(27136),t6,C_SCHEME_FALSE);}

/* k32967 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_32969(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  hash-table-set!");
t2=C_retrieve(lf[681]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[277],"*rules*"),C_fix(27136),t1);}

/* k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_17493(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17493,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17496,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32846,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[325],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,t6,t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(29696),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(256),t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(29696),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(512),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(5120),t12);
t14=(C_word)C_a_i_cons(&a,2,lf[310],t13);
t15=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32852,a[2]=((C_word)li518),tmp=(C_word)a,a+=3,tmp);
t16=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32883,a[2]=((C_word)li519),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  make-rule");
f_15862(t3,lf[786],C_fix(27392),t14,t15,t16);}

/* a32882 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_32883(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_32883,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32887,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  parse-unit-parsed");
f_16202(t5,t2);}

/* k32885 in a32882 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_32887(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32887,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_32890,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(t1);
C_trace("ChickenBridge.scm: 369  emit");
f_16320(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k32888 in k32885 in a32882 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_32890(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32890,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32893,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[5]);
C_trace("ChickenBridge.scm: 369  emit");
f_16320(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k32891 in k32888 in k32885 in a32882 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_32893(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32893,2,t0,t1);}
t2=(C_word)C_i_caddr(((C_word*)t0)[6]);
if(C_truep(t2)){
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32906,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  emit");
f_16320(t3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
t3=((C_word*)t0)[5];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_list(&a,4,lf[20],((C_word*)t0)[4],t1,C_SCHEME_FALSE));}}

/* k32904 in k32891 in k32888 in k32885 in a32882 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_32906(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32906,2,t0,t1);}
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_list(&a,4,lf[20],((C_word*)t0)[3],((C_word*)t0)[2],t1));}

/* a32851 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_32852(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_32852,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32856,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  sixth");
t5=C_retrieve(lf[48]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}

/* k32854 in a32851 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_32856(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32856,2,t0,t1);}
t2=(C_word)C_i_caddr(((C_word*)t0)[3]);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32871,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  fifth");
t4=C_retrieve(lf[47]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[3]);}

/* k32869 in k32854 in a32851 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_32871(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32871,2,t0,t1);}
t2=(C_word)C_i_pairp(((C_word*)t0)[4]);
t3=(C_truep(t2)?(C_word)C_i_cadr(((C_word*)t0)[4]):C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,3,((C_word*)t0)[3],t1,t3);
C_trace("ChickenBridge.scm: 369  make-parse-unit");
f_16163(((C_word*)t0)[2],C_fix(27392),t4,C_SCHEME_FALSE);}

/* k32844 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_32846(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  hash-table-set!");
t2=C_retrieve(lf[681]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[277],"*rules*"),C_fix(27392),t1);}

/* k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_17496(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17496,2,t0,t1);}
t2=C_mutate(&lf[329],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17498,a[2]=((C_word)li257),tmp=(C_word)a,a+=3,tmp));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17552,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32726,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t6=(C_word)C_a_i_cons(&a,2,C_fix(256),t5);
t7=(C_word)C_a_i_cons(&a,2,lf[91],t6);
t8=(C_word)C_a_i_cons(&a,2,t7,C_SCHEME_END_OF_LIST);
t9=(C_word)C_a_i_cons(&a,2,C_fix(29696),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[310],t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,t10,t11);
t13=(C_word)C_a_i_cons(&a,2,lf[311],t12);
t14=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32732,a[2]=((C_word)li517),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  make-rule");
f_15862(t4,lf[785],C_fix(28416),t13,t14,C_SCHEME_FALSE);}

/* a32731 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_32732(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_32732,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_pairp(t2))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32748,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_pairp(t5))){
t6=(C_word)C_i_cadr(t2);
if(C_truep((C_word)C_i_pairp(t6))){
t7=(C_word)C_i_cadr(t2);
t8=(C_word)C_i_car(t7);
C_trace("ChickenBridge.scm: 369  token-unit-type=?");
f_16248(t4,t8,C_fix(256));}
else{
t7=t4;
f_32748(2,t7,C_SCHEME_FALSE);}}
else{
t6=t4;
f_32748(2,t6,C_SCHEME_FALSE);}}
else{
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_list(&a,1,t2));}}

/* k32746 in a32731 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_32748(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32748,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32759,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_i_cadr(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 369  remove-token-type");
f_17498(t3,t4,C_fix(256));}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_list(&a,1,((C_word*)t0)[3]));}}

/* k32757 in k32746 in a32731 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_32759(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32759,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* k32724 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_32726(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  hash-table-set!");
t2=C_retrieve(lf[681]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[277],"*rules*"),C_fix(28416),t1);}

/* k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_17552(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word ab[51],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17552,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17555,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32587,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(6144),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(256),t5);
t7=(C_word)C_a_i_cons(&a,2,lf[91],t6);
t8=(C_word)C_a_i_cons(&a,2,t7,C_SCHEME_END_OF_LIST);
t9=(C_word)C_a_i_cons(&a,2,C_fix(29696),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(6144),t9);
t11=(C_word)C_a_i_cons(&a,2,lf[310],t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t13=(C_word)C_a_i_cons(&a,2,C_fix(6144),t12);
t14=(C_word)C_a_i_cons(&a,2,lf[310],t13);
t15=(C_word)C_a_i_cons(&a,2,t14,C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,t11,t15);
t17=(C_word)C_a_i_cons(&a,2,lf[311],t16);
t18=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32593,a[2]=((C_word)li516),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  make-rule");
f_15862(t3,lf[784],C_fix(28672),t17,t18,C_SCHEME_FALSE);}

/* a32592 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_32593(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[9],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_32593,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32613,a[2]=t4,a[3]=t1,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32616,a[2]=t6,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t8=(C_word)C_i_cddr(t2);
if(C_truep((C_word)C_i_pairp(t8))){
t9=(C_word)C_i_caddr(t2);
if(C_truep((C_word)C_i_pairp(t9))){
t10=(C_word)C_i_caddr(t2);
t11=(C_word)C_i_car(t10);
C_trace("ChickenBridge.scm: 369  token-unit-type=?");
f_16248(t7,t11,C_fix(256));}
else{
t10=t7;
f_32616(2,t10,C_SCHEME_FALSE);}}
else{
t9=t7;
f_32616(2,t9,C_SCHEME_FALSE);}}

/* k32614 in a32592 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_32616(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_caddr(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 369  remove-token-type");
f_17498(((C_word*)t0)[2],t2,C_fix(256));}
else{
t2=((C_word*)t0)[2];
f_32613(2,t2,C_SCHEME_END_OF_LIST);}}

/* k32611 in a32592 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_32613(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32613,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t1);
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t2));}

/* k32585 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_32587(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  hash-table-set!");
t2=C_retrieve(lf[681]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[277],"*rules*"),C_fix(28672),t1);}

/* k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_17555(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word ab[75],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17555,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17558,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32435,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(512),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[310],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(28416),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(512),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[310],t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,C_fix(28672),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(512),t12);
t14=(C_word)C_a_i_cons(&a,2,lf[310],t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,C_fix(28672),t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(256),t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(28416),t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(512),t18);
t20=(C_word)C_a_i_cons(&a,2,lf[310],t19);
t21=(C_word)C_a_i_cons(&a,2,t20,C_SCHEME_END_OF_LIST);
t22=(C_word)C_a_i_cons(&a,2,t14,t21);
t23=(C_word)C_a_i_cons(&a,2,t10,t22);
t24=(C_word)C_a_i_cons(&a,2,t6,t23);
t25=(C_word)C_a_i_cons(&a,2,lf[311],t24);
t26=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32441,a[2]=((C_word)li515),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  make-rule");
f_15862(t3,lf[783],C_fix(28160),t25,t26,C_SCHEME_FALSE);}

/* a32440 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_32441(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_32441,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(C_word)C_i_cdr(((C_word*)t4)[1]);
t6=C_set_block_item(t4,0,t5);
t7=(C_word)C_i_car(((C_word*)t4)[1]);
t8=(C_word)C_i_cdr(((C_word*)t4)[1]);
t9=C_set_block_item(t4,0,t8);
t10=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32459,a[2]=t7,a[3]=t4,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  token-unit-type=?");
f_16248(t10,t7,C_fix(768));}

/* k32457 in a32440 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_32459(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32459,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_END_OF_LIST);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32468,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 369  token-unit-type=?");
f_16248(t2,t3,C_fix(256));}}

/* k32466 in k32457 in a32440 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_32468(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 369  append");
t3=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}}

/* k32433 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_32435(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  hash-table-set!");
t2=C_retrieve(lf[681]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[277],"*rules*"),C_fix(28160),t1);}

/* k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_17558(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17558,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17561,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32364,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(28160),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(25088),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[310],t5);
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32370,a[2]=((C_word)li513),tmp=(C_word)a,a+=3,tmp);
t8=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32388,a[2]=((C_word)li514),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  make-rule");
f_15862(t3,lf[782],C_fix(27904),t6,t7,t8);}

/* a32387 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_32388(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_32388,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32392,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  parse-unit-parsed");
f_16202(t5,t2);}

/* k32390 in a32387 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_32392(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32392,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_32395,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(t1);
C_trace("ChickenBridge.scm: 369  emit");
f_16320(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k32393 in k32390 in a32387 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_32395(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32395,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32411,a[2]=t1,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 369  emit");
f_16320(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k32409 in k32393 in k32390 in a32387 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_32411(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32411,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* a32369 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_32370(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_32370,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=(C_word)C_a_i_cons(&a,2,t4,t5);
C_trace("ChickenBridge.scm: 369  make-parse-unit");
f_16163(t1,C_fix(27904),t6,C_SCHEME_FALSE);}

/* k32362 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_32364(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  hash-table-set!");
t2=C_retrieve(lf[681]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[277],"*rules*"),C_fix(27904),t1);}

/* k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_17561(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word ab[63],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17561,2,t0,t1);}
t2=C_mutate(&lf[330],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17563,a[2]=((C_word)li258),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[331],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17584,a[2]=((C_word)li261),tmp=(C_word)a,a+=3,tmp));
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17700,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32288,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
t6=(C_word)C_a_i_cons(&a,2,C_fix(8705),C_SCHEME_END_OF_LIST);
t7=(C_word)C_a_i_cons(&a,2,C_fix(8450),t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(8963),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(10244),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(11268),t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(11012),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(9732),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(9476),t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(9988),t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(10756),t14);
t16=(C_word)C_a_i_cons(&a,2,C_fix(8199),t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(7941),t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(7686),t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(7430),t18);
t20=(C_word)C_a_i_cons(&a,2,C_fix(7173),t19);
t21=(C_word)C_a_i_cons(&a,2,C_fix(6917),t20);
t22=(C_word)C_a_i_cons(&a,2,lf[311],t21);
C_trace("ChickenBridge.scm: 369  make-rule");
f_15862(t5,lf[781],C_fix(28928),t22,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k32286 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_32288(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  hash-table-set!");
t2=C_retrieve(lf[681]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[277],"*rules*"),C_fix(28928),t1);}

/* k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_17700(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17700,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17703,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32208,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29440),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(28928),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[95],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(29440),t7);
t9=(C_word)C_a_i_cons(&a,2,lf[310],t8);
t10=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32214,a[2]=((C_word)li512),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  make-rule");
f_15862(t3,lf[780],C_fix(29184),t9,t10,C_SCHEME_FALSE);}

/* a32213 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_32214(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_32214,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32221,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_cadr(t2);
if(C_truep((C_word)C_i_pairp(t5))){
t6=(C_word)C_i_cadr(t2);
t7=(C_word)C_i_car(t6);
C_trace("ChickenBridge.scm: 369  is-op?");
f_17563(t4,t7);}
else{
t6=t4;
f_32221(2,t6,C_SCHEME_FALSE);}}

/* k32219 in a32213 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_32221(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32221,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=(C_word)C_i_cadr(((C_word*)t0)[3]);
t4=(C_word)C_a_i_cons(&a,2,t2,t3);
C_trace("ChickenBridge.scm: 369  inf->pre");
f_17584(((C_word*)t0)[2],t4);}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_car(((C_word*)t0)[3]));}}

/* k32206 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_32208(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  hash-table-set!");
t2=C_retrieve(lf[681]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[277],"*rules*"),C_fix(29184),t1);}

/* k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_17703(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word ab[72],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17703,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17706,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32072,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29440),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(7173),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[310],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(29440),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(8963),t7);
t9=(C_word)C_a_i_cons(&a,2,lf[310],t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t11=(C_word)C_a_i_cons(&a,2,C_fix(29184),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(512),t11);
t13=(C_word)C_a_i_cons(&a,2,lf[310],t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(2304),C_SCHEME_END_OF_LIST);
t15=(C_word)C_a_i_cons(&a,2,C_fix(26624),t14);
t16=(C_word)C_a_i_cons(&a,2,C_fix(26368),t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(27136),t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(27904),t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(27392),t18);
t20=(C_word)C_a_i_cons(&a,2,t13,t19);
t21=(C_word)C_a_i_cons(&a,2,t9,t20);
t22=(C_word)C_a_i_cons(&a,2,t6,t21);
t23=(C_word)C_a_i_cons(&a,2,lf[311],t22);
t24=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32078,a[2]=((C_word)li510),tmp=(C_word)a,a+=3,tmp);
t25=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32104,a[2]=((C_word)li511),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  make-rule");
f_15862(t3,lf[779],C_fix(29440),t23,t24,t25);}

/* a32103 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_32104(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_32104,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32112,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  parse-unit-parsed");
f_16202(t5,t2);}

/* k32110 in a32103 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_32112(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  emit");
f_16320(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* a32077 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_32078(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_32078,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32086,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_pairp(t2))){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32095,a[2]=t2,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 369  token-unit-type=?");
f_16248(t5,t6,C_fix(512));}
else{
t5=t4;
f_32086(t5,t2);}}

/* k32093 in a32077 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_32095(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_32086(t2,(C_truep(t1)?(C_word)C_i_cadr(((C_word*)t0)[2]):((C_word*)t0)[2]));}

/* k32084 in a32077 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_32086(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  make-parse-unit");
f_16163(((C_word*)t0)[2],C_fix(29440),t1,C_SCHEME_FALSE);}

/* k32070 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_32072(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  hash-table-set!");
t2=C_retrieve(lf[681]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[277],"*rules*"),C_fix(29440),t1);}

/* k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_17706(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17706,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17709,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32028,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(26368),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(6400),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(2304),t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(26624),t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(27136),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(27904),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(27392),t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(29184),t10);
t12=(C_word)C_a_i_cons(&a,2,lf[311],t11);
C_trace("ChickenBridge.scm: 369  make-rule");
f_15862(t3,lf[778],C_fix(29696),t12,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k32026 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_32028(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  hash-table-set!");
t2=C_retrieve(lf[681]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[277],"*rules*"),C_fix(29696),t1);}

/* k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_17709(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17709,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17712,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31918,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[95],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(29696),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(15872),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[310],t9);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31924,a[2]=((C_word)li507),tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31946,a[2]=((C_word)li509),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  make-rule");
f_15862(t3,lf[777],C_fix(33536),t10,t11,t12);}

/* a31945 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_31946(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_31946,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_a_i_list(&a,1,lf[359]);
t6=t5;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31957,a[2]=t1,a[3]=t4,a[4]=t3,a[5]=t7,a[6]=t5,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 369  parse-unit-parsed");
f_16202(t8,t2);}

/* k31955 in a31945 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_31957(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31957,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31959,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t3,a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word)li508),tmp=(C_word)a,a+=8,tmp));
t5=((C_word*)t3)[1];
f_31959(t5,((C_word*)t0)[2],t1);}

/* do2675 in k31955 in a31945 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_31959(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31959,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)t0)[6]);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_31988,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 369  emit");
f_16320(t3,t4,((C_word*)t0)[3],((C_word*)t0)[2]);}}

/* k31986 in do2675 in k31955 in a31945 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_31988(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31988,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
t3=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[5])[1],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t4);
t6=(C_word)C_i_cdr(((C_word*)t0)[4]);
t7=((C_word*)((C_word*)t0)[3])[1];
f_31959(t7,((C_word*)t0)[2],t6);}

/* a31923 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_31924(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_31924,4,t0,t1,t2,t3);}
t4=(C_word)C_i_cadr(t2);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31940,a[2]=t1,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_caddr(t2);
C_trace("ChickenBridge.scm: 369  remove-token-type");
f_17498(t5,t6,C_fix(256));}

/* k31938 in a31923 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_31940(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31940,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 369  make-parse-unit");
f_16163(((C_word*)t0)[2],C_fix(33536),t2,C_SCHEME_FALSE);}

/* k31916 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_31918(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  hash-table-set!");
t2=C_retrieve(lf[681]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[277],"*rules*"),C_fix(33536),t1);}

/* k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_17712(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17712,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17715,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31843,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[95],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(29696),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(16896),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[310],t9);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31849,a[2]=((C_word)li505),tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31871,a[2]=((C_word)li506),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  make-rule");
f_15862(t3,lf[776],C_fix(34560),t10,t11,t12);}

/* a31870 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_31871(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_31871,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31875,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  parse-unit-parsed");
f_16202(t5,t2);}

/* k31873 in a31870 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_31875(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31875,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31882,a[2]=((C_word*)t0)[4],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  emit");
f_16320(t2,t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k31880 in k31873 in a31870 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_31882(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31882,2,t0,t1);}
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,lf[645],t1));}

/* a31848 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_31849(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_31849,4,t0,t1,t2,t3);}
t4=(C_word)C_i_cadr(t2);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31865,a[2]=t1,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_caddr(t2);
C_trace("ChickenBridge.scm: 369  remove-token-type");
f_17498(t5,t6,C_fix(256));}

/* k31863 in a31848 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_31865(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31865,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 369  make-parse-unit");
f_16163(((C_word*)t0)[2],C_fix(34560),t2,C_SCHEME_FALSE);}

/* k31841 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_31843(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  hash-table-set!");
t2=C_retrieve(lf[681]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[277],"*rules*"),C_fix(34560),t1);}

/* k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_17715(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word ab[66],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17715,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17718,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31644,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(25088),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(2304),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[311],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(28672),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(256),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(28416),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[310],t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(28672),C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,C_fix(28416),t11);
t13=(C_word)C_a_i_cons(&a,2,t10,t12);
t14=(C_word)C_a_i_cons(&a,2,lf[311],t13);
t15=(C_word)C_a_i_cons(&a,2,t14,C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,C_fix(256),t15);
t17=(C_word)C_a_i_cons(&a,2,lf[325],t16);
t18=(C_word)C_a_i_cons(&a,2,t17,C_SCHEME_END_OF_LIST);
t19=(C_word)C_a_i_cons(&a,2,t6,t18);
t20=(C_word)C_a_i_cons(&a,2,C_fix(16384),t19);
t21=(C_word)C_a_i_cons(&a,2,lf[310],t20);
t22=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31650,a[2]=((C_word)li502),tmp=(C_word)a,a+=3,tmp);
t23=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31711,a[2]=((C_word)li504),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  make-rule");
f_15862(t3,lf[775],C_fix(34304),t21,t22,t23);}

/* a31710 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_31711(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_31711,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31715,a[2]=t1,a[3]=t2,a[4]=t4,tmp=(C_word)a,a+=5,tmp);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31751,a[2]=t4,a[3]=t3,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  parse-unit-parsed");
f_16202(t6,t2);}

/* k31749 in a31710 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_31751(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  emit");
f_16320(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k31713 in a31710 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_31715(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31715,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=(C_word)C_i_car(t1);
t4=(C_word)C_i_cdr(t1);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31731,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word)li503),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  expand-send");
t6=C_retrieve(lf[30]);
((C_proc5)C_retrieve_proc(t6))(5,t6,((C_word*)t0)[2],t3,t4,t5);}

/* a31730 in k31713 in a31710 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_31731(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+8)){
C_save_and_reclaim((void*)tr3r,(void*)f_31731r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_31731r(t0,t1,t2,t3);}}

static void C_ccall f_31731r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a=C_alloc(8);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31739,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31743,a[2]=((C_word*)t0)[2],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_apply(5,0,t5,C_retrieve(lf[31]),t2,t3);}

/* k31741 in a31730 in k31713 in a31710 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_31743(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31743,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31747,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  parse-unit-position");
f_16220(t2,((C_word*)t0)[2]);}

/* k31745 in k31741 in a31730 in k31713 in a31710 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_31747(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  make-parse-error");
f_16112(((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k31737 in a31730 in k31713 in a31710 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_31739(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  errf");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* a31649 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_31650(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[11],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_31650,4,t0,t1,t2,t3);}
t4=(C_word)C_i_caddr(t2);
t5=t4;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31657,a[2]=t1,a[3]=t6,a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t8=((C_word*)t6)[1];
if(C_truep(t8)){
t9=(C_word)C_i_cadr(((C_word*)t6)[1]);
t10=C_set_block_item(t6,0,t9);
t11=(C_word)C_i_car(((C_word*)t6)[1]);
if(C_truep((C_word)C_i_pairp(t11))){
t12=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31697,a[2]=t7,a[3]=t6,tmp=(C_word)a,a+=4,tmp);
t13=(C_word)C_i_car(((C_word*)t6)[1]);
t14=(C_word)C_i_caddr(((C_word*)t6)[1]);
C_trace("ChickenBridge.scm: 369  append");
t15=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t15))(4,t15,t12,t13,t14);}
else{
t12=t7;
f_31657(t12,C_SCHEME_UNDEFINED);}}
else{
t9=C_set_block_item(t6,0,C_SCHEME_END_OF_LIST);
t10=t7;
f_31657(t10,t9);}}

/* k31695 in a31649 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_31697(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_31657(t3,t2);}

/* k31655 in a31649 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_31657(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31657,NULL,2,t0,t1);}
t2=(C_word)C_i_cadr(((C_word*)t0)[4]);
t3=(C_word)C_a_i_cons(&a,2,t2,((C_word*)((C_word*)t0)[3])[1]);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31668,a[2]=t3,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 369  parse-unit-position");
f_16220(t4,t5);}

/* k31666 in k31655 in a31649 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_31668(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  make-parse-unit");
f_16163(((C_word*)t0)[3],C_fix(34304),((C_word*)t0)[2],t1);}

/* k31642 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_31644(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  hash-table-set!");
t2=C_retrieve(lf[681]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[277],"*rules*"),C_fix(34304),t1);}

/* k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_17718(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17718,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17721,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31618,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(14080),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[310],t5);
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31624,a[2]=((C_word)li501),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  make-rule");
f_15862(t3,lf[774],C_fix(33792),t6,t7,C_SCHEME_FALSE);}

/* a31623 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_31624(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_31624,4,t0,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_cadr(t2));}

/* k31616 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_31618(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  hash-table-set!");
t2=C_retrieve(lf[681]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[277],"*rules*"),C_fix(33792),t1);}

/* k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_17721(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17721,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17724,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31590,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(14592),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[310],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31598,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  simple-unit-parser");
f_16561(t7,C_fix(35072));}

/* k31596 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_31598(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31598,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31602,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  simple-unit-emitter");
f_16569(t2,lf[370]);}

/* k31600 in k31596 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_31602(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  make-rule");
f_15862(((C_word*)t0)[4],lf[773],C_fix(35072),((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k31588 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_31590(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  hash-table-set!");
t2=C_retrieve(lf[681]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[277],"*rules*"),C_fix(35072),t1);}

/* k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_17724(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17724,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17727,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31562,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(13568),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[310],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31570,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  simple-unit-parser");
f_16561(t7,C_fix(35584));}

/* k31568 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_31570(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31570,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31574,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  simple-unit-emitter");
f_16569(t2,lf[369]);}

/* k31572 in k31568 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_31574(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  make-rule");
f_15862(((C_word*)t0)[4],lf[772],C_fix(35584),((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k31560 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_31562(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  hash-table-set!");
t2=C_retrieve(lf[681]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[277],"*rules*"),C_fix(35584),t1);}

/* k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_17727(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17727,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17730,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31534,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(17152),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[310],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31542,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  simple-unit-parser");
f_16561(t7,C_fix(35328));}

/* k31540 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_31542(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31542,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31546,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  simple-unit-emitter");
f_16569(t2,lf[771]);}

/* k31544 in k31540 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_31546(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  make-rule");
f_15862(((C_word*)t0)[4],lf[770],C_fix(35328),((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k31532 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_31534(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  hash-table-set!");
t2=C_retrieve(lf[681]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[277],"*rules*"),C_fix(35328),t1);}

/* k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_17730(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17730,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17733,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31506,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(18432),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[310],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31514,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  simple-unit-parser");
f_16561(t7,C_fix(34816));}

/* k31512 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_31514(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31514,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31518,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  simple-unit-emitter");
f_16569(t2,lf[380]);}

/* k31516 in k31512 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_31518(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  make-rule");
f_15862(((C_word*)t0)[4],lf[769],C_fix(34816),((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k31504 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_31506(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  hash-table-set!");
t2=C_retrieve(lf[681]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[277],"*rules*"),C_fix(34816),t1);}

/* k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_17733(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word ab[69],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17733,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17736,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31369,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(6144),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[310],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,t6,t7);
t9=(C_word)C_a_i_cons(&a,2,lf[311],t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t11=(C_word)C_a_i_cons(&a,2,C_fix(6144),t10);
t12=(C_word)C_a_i_cons(&a,2,lf[310],t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t14=(C_word)C_a_i_cons(&a,2,t12,t13);
t15=(C_word)C_a_i_cons(&a,2,lf[311],t14);
t16=(C_word)C_a_i_cons(&a,2,t15,C_SCHEME_END_OF_LIST);
t17=(C_word)C_a_i_cons(&a,2,C_fix(256),t16);
t18=(C_word)C_a_i_cons(&a,2,lf[95],t17);
t19=(C_word)C_a_i_cons(&a,2,t18,C_SCHEME_END_OF_LIST);
t20=(C_word)C_a_i_cons(&a,2,t9,t19);
t21=(C_word)C_a_i_cons(&a,2,C_fix(15616),t20);
t22=(C_word)C_a_i_cons(&a,2,lf[310],t21);
t23=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31375,a[2]=((C_word)li499),tmp=(C_word)a,a+=3,tmp);
t24=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31405,a[2]=((C_word)li500),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  make-rule");
f_15862(t3,lf[768],C_fix(36096),t22,t23,t24);}

/* a31404 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_31405(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_31405,5,t0,t1,t2,t3,t4);}
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,lf[767]);}

/* a31374 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_31375(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[5],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_31375,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31399,a[2]=t1,a[3]=t4,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
t7=(C_word)C_i_caddr(t2);
C_trace("ChickenBridge.scm: 369  remove-token-type");
f_17498(t6,t7,C_fix(256));}

/* k31397 in a31374 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_31399(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31399,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t1);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t2);
C_trace("ChickenBridge.scm: 369  make-parse-unit");
f_16163(((C_word*)t0)[2],C_fix(36096),t3,C_SCHEME_FALSE);}

/* k31367 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_31369(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  hash-table-set!");
t2=C_retrieve(lf[681]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[277],"*rules*"),C_fix(36096),t1);}

/* k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_17736(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17736,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17739,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31311,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(19712),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[310],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31319,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  simple-unit-parser");
f_16561(t7,C_fix(31744));}

/* k31317 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_31319(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31319,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31321,a[2]=((C_word)li498),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  make-rule");
f_15862(((C_word*)t0)[3],lf[766],C_fix(31744),((C_word*)t0)[2],t1,t2);}

/* a31320 in k31317 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_31321(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_31321,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31325,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  parse-unit-parsed");
f_16202(t5,t2);}

/* k31323 in a31320 in k31317 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_31325(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31325,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_31328,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31353,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  get-emit-info");
f_16280(t3,lf[745],((C_word*)t0)[3]);}

/* k31351 in k31323 in a31320 in k31317 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_31353(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31353,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_31328(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31341,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31345,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_i_car(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 369  parse-unit-position");
f_16220(t3,t4);}}

/* k31343 in k31351 in k31323 in a31320 in k31317 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_31345(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  make-parse-error");
f_16112(((C_word*)t0)[2],lf[765],t1);}

/* k31339 in k31351 in k31323 in a31320 in k31317 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_31341(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  errf");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k31326 in k31323 in a31320 in k31317 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_31328(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  emit");
f_16320(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k31309 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_31311(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  hash-table-set!");
t2=C_retrieve(lf[681]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[277],"*rules*"),C_fix(31744),t1);}

/* k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_17739(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17739,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17742,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31250,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(18688),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[310],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31258,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  simple-unit-parser");
f_16561(t7,C_fix(31488));}

/* k31256 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_31258(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31258,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31260,a[2]=((C_word)li497),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  make-rule");
f_15862(((C_word*)t0)[3],lf[764],C_fix(31488),((C_word*)t0)[2],t1,t2);}

/* a31259 in k31256 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_31260(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_31260,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31264,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  parse-unit-parsed");
f_16202(t5,t2);}

/* k31262 in a31259 in k31256 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_31264(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31264,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_31267,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31295,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  get-emit-info");
f_16280(t3,lf[732],((C_word*)t0)[3]);}

/* k31293 in k31262 in a31259 in k31256 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_31295(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31295,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_31267(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31283,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31287,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_i_car(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 369  parse-unit-position");
f_16220(t3,t4);}}

/* k31285 in k31293 in k31262 in a31259 in k31256 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_31287(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  make-parse-error");
f_16112(((C_word*)t0)[2],lf[763],t1);}

/* k31281 in k31293 in k31262 in a31259 in k31256 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_31283(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  errf");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k31265 in k31262 in a31259 in k31256 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_31267(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31267,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_31270,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 369  set-emit-info!");
f_16302(t2,lf[732],lf[731],((C_word*)t0)[3]);}

/* k31268 in k31265 in k31262 in a31259 in k31256 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_31270(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  emit");
f_16320(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k31248 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_31250(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  hash-table-set!");
t2=C_retrieve(lf[681]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[277],"*rules*"),C_fix(31488),t1);}

/* k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_17742(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17742,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17745,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31159,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(10756),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(25088),t5);
t7=(C_word)C_a_i_cons(&a,2,lf[310],t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(25088),C_SCHEME_END_OF_LIST);
t9=(C_word)C_a_i_cons(&a,2,t7,t8);
t10=(C_word)C_a_i_cons(&a,2,lf[311],t9);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31165,a[2]=((C_word)li494),tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31200,a[2]=((C_word)li496),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  make-rule");
f_15862(t3,lf[762],C_fix(30208),t10,t11,t12);}

/* a31199 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_31200(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_31200,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31206,a[2]=t4,a[3]=t3,a[4]=((C_word)li495),tmp=(C_word)a,a+=5,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31214,a[2]=t5,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  parse-unit-parsed");
f_16202(t6,t2);}

/* k31212 in a31199 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_31214(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("map");
t2=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* a31205 in a31199 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_31206(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_31206,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 369  emit");
f_16320(t1,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* a31164 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_31165(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[10],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_31165,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_pairp(t2))){
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_caddr(t2);
t6=(C_word)C_a_i_list(&a,2,t4,t5);
C_trace("ChickenBridge.scm: 369  make-parse-unit");
f_16163(t1,C_fix(30208),t6,C_SCHEME_FALSE);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31198,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  make-parse-unit");
f_16163(t4,C_fix(4608),lf[761],C_SCHEME_FALSE);}}

/* k31196 in a31164 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_31198(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31198,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 369  make-parse-unit");
f_16163(((C_word*)t0)[2],C_fix(30208),t2,C_SCHEME_FALSE);}

/* k31157 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_31159(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  hash-table-set!");
t2=C_retrieve(lf[681]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[277],"*rules*"),C_fix(30208),t1);}

/* k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_17745(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17745,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17748,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31057,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(30208),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[95],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(30208),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(20480),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[310],t9);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31063,a[2]=((C_word)li491),tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31106,a[2]=((C_word)li493),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  make-rule");
f_15862(t3,lf[760],C_fix(29952),t10,t11,t12);}

/* a31105 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_31106(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_31106,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31110,a[2]=t2,a[3]=t1,a[4]=t4,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  add-emit-info");
f_16292(t5,lf[759],C_SCHEME_TRUE,t3);}

/* k31108 in a31105 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_31110(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31110,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31115,a[2]=((C_word*)t0)[4],a[3]=t1,a[4]=((C_word)li492),tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31123,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  parse-unit-parsed");
f_16202(t3,((C_word*)t0)[2]);}

/* k31121 in k31108 in a31105 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_31123(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("map");
t2=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* a31114 in k31108 in a31105 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_31115(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_31115,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 369  emit");
f_16320(t1,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* a31062 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_31063(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_31063,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_caddr(t2))){
t4=(C_word)C_i_cadr(t2);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31096,a[2]=t1,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_caddr(t2);
C_trace("ChickenBridge.scm: 369  remove-token-type");
f_17498(t5,t6,C_fix(256));}
else{
t4=(C_word)C_i_cadr(t2);
t5=(C_word)C_a_i_list(&a,1,t4);
C_trace("ChickenBridge.scm: 369  make-parse-unit");
f_16163(t1,C_fix(29952),t5,C_SCHEME_FALSE);}}

/* k31094 in a31062 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_31096(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31096,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 369  make-parse-unit");
f_16163(((C_word*)t0)[2],C_fix(29952),t2,C_SCHEME_FALSE);}

/* k31055 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_31057(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  hash-table-set!");
t2=C_retrieve(lf[681]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[277],"*rules*"),C_fix(29952),t1);}

/* k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_17748(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[57],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17748,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17751,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30971,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(25088),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(27136),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[311],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(12800),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(12544),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(12288),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(12032),t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(11776),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(11268),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(11012),t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(10756),t13);
t15=(C_word)C_a_i_cons(&a,2,lf[311],t14);
t16=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t17=(C_word)C_a_i_cons(&a,2,t15,t16);
t18=(C_word)C_a_i_cons(&a,2,t6,t17);
t19=(C_word)C_a_i_cons(&a,2,lf[310],t18);
t20=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30977,a[2]=((C_word)li490),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  make-rule");
f_15862(t3,lf[758],C_fix(30720),t19,t20,C_SCHEME_FALSE);}

/* a30976 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_30977(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_30977,4,t0,t1,t2,t3);}
C_trace("ChickenBridge.scm: 369  make-parse-unit");
f_16163(t1,C_fix(30720),t2,C_SCHEME_FALSE);}

/* k30969 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_30971(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  hash-table-set!");
t2=C_retrieve(lf[681]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[277],"*rules*"),C_fix(30720),t1);}

/* k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_17751(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17751,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17754,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30691,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(30720),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[95],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(30720),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(16640),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[310],t9);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30697,a[2]=((C_word)li487),tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30740,a[2]=((C_word)li489),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  make-rule");
f_15862(t3,lf[757],C_fix(30464),t10,t11,t12);}

/* a30739 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_30740(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_30740,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30744,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  parse-unit-parsed");
f_16202(t5,t2);}

/* k30742 in a30739 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_30744(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30744,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,lf[336]);
t3=t2;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30752,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t6,a[5]=t4,a[6]=t2,a[7]=((C_word)li488),tmp=(C_word)a,a+=8,tmp));
t8=((C_word*)t6)[1];
f_30752(t8,((C_word*)t0)[2],t1);}

/* do2754 in k30742 in a30739 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_30752(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30752,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=(C_word)C_i_cddr(((C_word*)t0)[6]);
t4=(C_word)C_i_nullp(t3);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_truep(t4)?(C_word)C_i_cadr(((C_word*)t0)[6]):((C_word*)t0)[6]));}
else{
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30775,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=t2,a[7]=((C_word*)t0)[5],tmp=(C_word)a,a+=8,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 369  parse-unit-parsed");
f_16202(t3,t4);}}

/* k30773 in do2754 in k30742 in a30739 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_30775(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30775,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_30778,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
t3=(C_word)C_i_car(t1);
C_trace("ChickenBridge.scm: 369  emit");
f_16320(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k30776 in k30773 in do2754 in k30742 in a30739 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_30778(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30778,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_30781,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 369  parse-unit-type");
f_16184(t2,t3);}

/* k30779 in k30776 in k30773 in do2754 in k30742 in a30739 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_30781(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30781,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30784,a[2]=t1,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
t3=(C_word)C_i_caddr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 369  emit");
f_16320(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k30782 in k30779 in k30776 in k30773 in do2754 in k30742 in a30739 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_30784(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30784,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30787,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=t3,tmp=(C_word)a,a+=8,tmp);
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30844,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t4,a[5]=t1,a[6]=t3,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 369  SalType=?");
f_17454(t5,((C_word*)t0)[2],C_fix(10756));}

/* k30842 in k30782 in k30779 in k30776 in k30773 in do2754 in k30742 in a30739 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_30844(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30844,2,t0,t1);}
if(C_truep(t1)){
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,((C_word*)t0)[5]);
t3=((C_word*)t0)[4];
f_30787(t3,t2);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30851,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 369  SalType=?");
f_17454(t2,((C_word*)t0)[2],C_fix(11776));}}

/* k30849 in k30842 in k30782 in k30779 in k30776 in k30773 in do2754 in k30742 in a30739 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_30851(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30851,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[91],((C_word*)t0)[6],((C_word*)t0)[5]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=((C_word*)t0)[3];
f_30787(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30861,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 369  SalType=?");
f_17454(t2,((C_word*)t0)[2],C_fix(12032));}}

/* k30859 in k30849 in k30842 in k30782 in k30779 in k30776 in k30773 in do2754 in k30742 in a30739 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_30861(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30861,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[95],((C_word*)t0)[6],((C_word*)t0)[5]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=((C_word*)t0)[3];
f_30787(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30871,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 369  SalType=?");
f_17454(t2,((C_word*)t0)[2],C_fix(12288));}}

/* k30869 in k30859 in k30849 in k30842 in k30782 in k30779 in k30776 in k30773 in do2754 in k30742 in a30739 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_30871(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30871,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,2,lf[515],((C_word*)t0)[6]);
t3=(C_word)C_a_i_list(&a,3,lf[18],((C_word*)t0)[5],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=((C_word*)t0)[3];
f_30787(t5,t4);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30885,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 369  SalType=?");
f_17454(t2,((C_word*)t0)[2],C_fix(12544));}}

/* k30883 in k30869 in k30859 in k30849 in k30842 in k30782 in k30779 in k30776 in k30773 in do2754 in k30742 in a30739 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_30885(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30885,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[718],((C_word*)t0)[6],((C_word*)t0)[5]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=((C_word*)t0)[3];
f_30787(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30895,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 369  SalType=?");
f_17454(t2,((C_word*)t0)[2],C_fix(12800));}}

/* k30893 in k30883 in k30869 in k30859 in k30849 in k30842 in k30782 in k30779 in k30776 in k30773 in do2754 in k30742 in a30739 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_30895(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30895,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[18],((C_word*)t0)[6],((C_word*)t0)[5]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=((C_word*)t0)[3];
f_30787(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30905,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 369  SalType=?");
f_17454(t2,((C_word*)t0)[2],C_fix(11012));}}

/* k30903 in k30893 in k30883 in k30869 in k30859 in k30849 in k30842 in k30782 in k30779 in k30776 in k30773 in do2754 in k30742 in a30739 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_30905(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30905,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[756],((C_word*)t0)[6],((C_word*)t0)[5]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=((C_word*)t0)[3];
f_30787(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_30915,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 369  SalType=?");
f_17454(t2,((C_word*)t0)[2],C_fix(11268));}}

/* k30913 in k30903 in k30893 in k30883 in k30869 in k30859 in k30849 in k30842 in k30782 in k30779 in k30776 in k30773 in do2754 in k30742 in a30739 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_30915(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30915,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[212],((C_word*)t0)[5],((C_word*)t0)[4]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_30787(t4,t3);}
else{
t2=((C_word*)t0)[2];
f_30787(t2,C_SCHEME_UNDEFINED);}}

/* k30785 in k30782 in k30779 in k30776 in k30773 in do2754 in k30742 in a30739 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_30787(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30787,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30790,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30811,a[2]=t2,a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t0)[2]))){
t4=(C_word)C_i_car(((C_word*)t0)[2]);
t5=t3;
f_30811(t5,(C_word)C_eqp(t4,lf[54]));}
else{
t4=t3;
f_30811(t4,C_SCHEME_FALSE);}}

/* k30809 in k30785 in k30782 in k30779 in k30776 in k30773 in do2754 in k30742 in a30739 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_30811(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30811,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cadr(((C_word*)t0)[4]);
t3=(C_word)C_i_caddr(((C_word*)t0)[4]);
t4=(C_word)C_a_i_list(&a,3,lf[754],t2,t3);
t5=(C_word)C_a_i_list(&a,3,lf[755],t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30790(t7,t6);}
else{
t2=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_30790(t4,t3);}}

/* k30788 in k30785 in k30782 in k30779 in k30776 in k30773 in do2754 in k30742 in a30739 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_30790(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30790,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[6])[1]);
t3=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[5])[1],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t4);
t6=(C_word)C_i_cdr(((C_word*)t0)[4]);
t7=((C_word*)((C_word*)t0)[3])[1];
f_30752(t7,((C_word*)t0)[2],t6);}

/* a30696 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_30697(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_30697,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_caddr(t2))){
t4=(C_word)C_i_cadr(t2);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30730,a[2]=t1,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_caddr(t2);
C_trace("ChickenBridge.scm: 369  remove-token-type");
f_17498(t5,t6,C_fix(256));}
else{
t4=(C_word)C_i_cadr(t2);
t5=(C_word)C_a_i_list(&a,1,t4);
C_trace("ChickenBridge.scm: 369  make-parse-unit");
f_16163(t1,C_fix(30464),t5,C_SCHEME_FALSE);}}

/* k30728 in a30696 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_30730(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30730,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 369  make-parse-unit");
f_16163(((C_word*)t0)[2],C_fix(30464),t2,C_SCHEME_FALSE);}

/* k30689 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_30691(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  hash-table-set!");
t2=C_retrieve(lf[681]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[277],"*rules*"),C_fix(30464),t1);}

/* k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_17754(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17754,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17757,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30577,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29952),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,lf[325],t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t7=(C_word)C_a_i_cons(&a,2,lf[95],t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(18193),C_SCHEME_END_OF_LIST);
t9=(C_word)C_a_i_cons(&a,2,t7,t8);
t10=(C_word)C_a_i_cons(&a,2,t5,t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(13328),t10);
t12=(C_word)C_a_i_cons(&a,2,lf[310],t11);
t13=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30583,a[2]=((C_word)li485),tmp=(C_word)a,a+=3,tmp);
t14=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30609,a[2]=((C_word)li486),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  make-rule");
f_15862(t3,lf[753],C_fix(32000),t12,t13,t14);}

/* a30608 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_30609(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_30609,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30613,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  parse-unit-parsed");
f_16202(t5,t2);}

/* k30611 in a30608 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_30613(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30613,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_30619,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_i_cdr(t1);
C_trace("ChickenBridge.scm: 369  emit");
f_16320(t3,t4,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k30617 in k30611 in a30608 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_30619(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30619,2,t0,t1);}
if(C_truep(((C_word*)t0)[5])){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30639,a[2]=((C_word*)t0)[4],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  emit");
f_16320(t2,((C_word*)t0)[5],((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,lf[336],t1));}}

/* k30637 in k30617 in k30611 in a30608 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_30639(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30639,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,lf[2],t2));}

/* a30582 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_30583(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_30583,4,t0,t1,t2,t3);}
t4=(C_word)C_i_cadr(t2);
t5=t4;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(C_word)C_i_caddr(t2);
t8=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30593,a[2]=t1,a[3]=t7,a[4]=t6,tmp=(C_word)a,a+=5,tmp);
t9=((C_word*)t6)[1];
if(C_truep(t9)){
t10=(C_word)C_i_car(((C_word*)t6)[1]);
t11=C_set_block_item(t6,0,t10);
t12=t8;
f_30593(t12,t11);}
else{
t10=t8;
f_30593(t10,C_SCHEME_FALSE);}}

/* k30591 in a30582 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_30593(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30593,NULL,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 369  make-parse-unit");
f_16163(((C_word*)t0)[2],C_fix(32000),t2,C_SCHEME_FALSE);}

/* k30575 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_30577(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  hash-table-set!");
t2=C_retrieve(lf[681]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[277],"*rules*"),C_fix(32000),t1);}

/* k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_17757(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word ab[81],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17757,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17760,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30380,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,lf[325],t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t7=(C_word)C_a_i_cons(&a,2,C_fix(17920),t6);
t8=(C_word)C_a_i_cons(&a,2,lf[325],t7);
t9=(C_word)C_a_i_cons(&a,2,t8,C_SCHEME_END_OF_LIST);
t10=(C_word)C_a_i_cons(&a,2,t5,t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(18944),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(29696),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(14336),t12);
t14=(C_word)C_a_i_cons(&a,2,lf[310],t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,C_fix(29696),t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(19968),t16);
t18=(C_word)C_a_i_cons(&a,2,lf[310],t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t20=(C_word)C_a_i_cons(&a,2,C_fix(29696),t19);
t21=(C_word)C_a_i_cons(&a,2,C_fix(19200),t20);
t22=(C_word)C_a_i_cons(&a,2,lf[310],t21);
t23=(C_word)C_a_i_cons(&a,2,t22,C_SCHEME_END_OF_LIST);
t24=(C_word)C_a_i_cons(&a,2,t18,t23);
t25=(C_word)C_a_i_cons(&a,2,t14,t24);
t26=(C_word)C_a_i_cons(&a,2,lf[311],t25);
t27=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30386,a[2]=((C_word)li483),tmp=(C_word)a,a+=3,tmp);
t28=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30454,a[2]=((C_word)li484),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  make-rule");
f_15862(t3,lf[752],C_fix(32256),t26,t27,t28);}

/* a30453 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_30454(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_30454,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30458,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  parse-unit-parsed");
f_16202(t5,t2);}

/* k30456 in a30453 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_30458(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  emit");
f_16320(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* a30385 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_30386(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[13],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_30386,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=C_SCHEME_END_OF_LIST;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30399,a[2]=t7,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t9=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30405,a[2]=t8,a[3]=t7,a[4]=t5,a[5]=t4,a[6]=t2,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 369  token-unit-type=?");
f_16248(t9,t4,C_fix(14336));}

/* k30403 in a30385 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_30405(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[29],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30405,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cadddr(((C_word*)t0)[6]);
t3=t2;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_30411,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t8,a[6]=t6,a[7]=((C_word*)t0)[4],a[8]=((C_word*)t0)[5],a[9]=t4,tmp=(C_word)a,a+=10,tmp);
t10=((C_word*)t4)[1];
if(C_truep(t10)){
t11=(C_word)C_i_car(((C_word*)t4)[1]);
t12=C_set_block_item(t6,0,t11);
t13=t9;
f_30411(t13,t12);}
else{
t11=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30440,a[2]=t9,a[3]=t6,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  make-parse-unit");
f_16163(t11,C_fix(4608),lf[751],C_SCHEME_FALSE);}}
else{
t2=(C_word)C_i_caddr(((C_word*)t0)[6]);
t3=(C_word)C_a_i_list(&a,3,((C_word*)t0)[5],((C_word*)t0)[4],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_30399(t5,t4);}}

/* k30438 in k30403 in a30385 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_30440(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_30411(t3,t2);}

/* k30409 in k30403 in a30385 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_30411(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30411,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_30415,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 369  fifth");
t3=C_retrieve(lf[47]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k30413 in k30409 in k30403 in a30385 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_30415(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30415,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30418,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t4=((C_word*)((C_word*)t0)[8])[1];
if(C_truep(t4)){
t5=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[8])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=t3;
f_30418(t7,t6);}
else{
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30429,a[2]=t3,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  make-parse-unit");
f_16163(t5,C_fix(4608),lf[750],C_SCHEME_FALSE);}}

/* k30427 in k30413 in k30409 in k30403 in a30385 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_30429(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_30418(t3,t2);}

/* k30416 in k30413 in k30409 in k30403 in a30385 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_30418(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30418,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,4,((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_30399(t4,t3);}

/* k30397 in a30385 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_30399(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  make-parse-unit");
f_16163(((C_word*)t0)[3],C_fix(32256),((C_word*)((C_word*)t0)[2])[1],C_SCHEME_FALSE);}

/* k30378 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_30380(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  hash-table-set!");
t2=C_retrieve(lf[681]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[277],"*rules*"),C_fix(32256),t1);}

/* k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_17760(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word t36;
C_word t37;
C_word t38;
C_word t39;
C_word t40;
C_word t41;
C_word t42;
C_word t43;
C_word t44;
C_word t45;
C_word t46;
C_word t47;
C_word t48;
C_word t49;
C_word t50;
C_word t51;
C_word t52;
C_word t53;
C_word t54;
C_word t55;
C_word t56;
C_word t57;
C_word t58;
C_word t59;
C_word t60;
C_word ab[174],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17760,2,t0,t1);}
t2=C_mutate(&lf[332],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17762,a[2]=((C_word)li262),tmp=(C_word)a,a+=3,tmp));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18283,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30108,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t6=(C_word)C_a_i_cons(&a,2,C_fix(23296),t5);
t7=(C_word)C_a_i_cons(&a,2,lf[310],t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t9=(C_word)C_a_i_cons(&a,2,C_fix(18944),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[325],t9);
t11=(C_word)C_a_i_cons(&a,2,t10,C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,C_fix(29696),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(10756),t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(25088),t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(22272),t14);
t16=(C_word)C_a_i_cons(&a,2,lf[310],t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t18=(C_word)C_a_i_cons(&a,2,C_fix(22784),t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(25088),t18);
t20=(C_word)C_a_i_cons(&a,2,C_fix(22272),t19);
t21=(C_word)C_a_i_cons(&a,2,lf[310],t20);
t22=(C_word)C_a_i_cons(&a,2,C_fix(21760),C_SCHEME_END_OF_LIST);
t23=(C_word)C_a_i_cons(&a,2,C_fix(20992),t22);
t24=(C_word)C_a_i_cons(&a,2,C_fix(23552),t23);
t25=(C_word)C_a_i_cons(&a,2,C_fix(21248),t24);
t26=(C_word)C_a_i_cons(&a,2,lf[311],t25);
t27=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t28=(C_word)C_a_i_cons(&a,2,t26,t27);
t29=(C_word)C_a_i_cons(&a,2,lf[325],t28);
t30=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t31=(C_word)C_a_i_cons(&a,2,C_fix(21504),t30);
t32=(C_word)C_a_i_cons(&a,2,lf[325],t31);
t33=(C_word)C_a_i_cons(&a,2,t32,C_SCHEME_END_OF_LIST);
t34=(C_word)C_a_i_cons(&a,2,t29,t33);
t35=(C_word)C_a_i_cons(&a,2,C_fix(29696),t34);
t36=(C_word)C_a_i_cons(&a,2,C_fix(22528),t35);
t37=(C_word)C_a_i_cons(&a,2,C_fix(25088),t36);
t38=(C_word)C_a_i_cons(&a,2,C_fix(22272),t37);
t39=(C_word)C_a_i_cons(&a,2,lf[310],t38);
t40=(C_word)C_a_i_cons(&a,2,C_fix(21760),C_SCHEME_END_OF_LIST);
t41=(C_word)C_a_i_cons(&a,2,C_fix(20992),t40);
t42=(C_word)C_a_i_cons(&a,2,C_fix(23552),t41);
t43=(C_word)C_a_i_cons(&a,2,C_fix(21248),t42);
t44=(C_word)C_a_i_cons(&a,2,lf[311],t43);
t45=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t46=(C_word)C_a_i_cons(&a,2,C_fix(21504),t45);
t47=(C_word)C_a_i_cons(&a,2,lf[325],t46);
t48=(C_word)C_a_i_cons(&a,2,t47,C_SCHEME_END_OF_LIST);
t49=(C_word)C_a_i_cons(&a,2,C_fix(29696),t48);
t50=(C_word)C_a_i_cons(&a,2,t44,t49);
t51=(C_word)C_a_i_cons(&a,2,C_fix(25088),t50);
t52=(C_word)C_a_i_cons(&a,2,C_fix(22272),t51);
t53=(C_word)C_a_i_cons(&a,2,lf[310],t52);
t54=(C_word)C_a_i_cons(&a,2,t53,C_SCHEME_END_OF_LIST);
t55=(C_word)C_a_i_cons(&a,2,t39,t54);
t56=(C_word)C_a_i_cons(&a,2,t21,t55);
t57=(C_word)C_a_i_cons(&a,2,t16,t56);
t58=(C_word)C_a_i_cons(&a,2,t7,t57);
t59=(C_word)C_a_i_cons(&a,2,lf[311],t58);
C_trace("ChickenBridge.scm: 369  make-rule");
f_15862(t4,lf[749],C_fix(33024),t59,C_retrieve2(lf[332],"sal-parse-stepping"),C_SCHEME_FALSE);}

/* k30106 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_30108(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  hash-table-set!");
t2=C_retrieve(lf[681]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[277],"*rules*"),C_fix(33024),t1);}

/* k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_18283(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[37],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18283,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18286,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30052,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(20224),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[310],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(19456),t7);
t9=(C_word)C_a_i_cons(&a,2,lf[310],t8);
t10=(C_word)C_a_i_cons(&a,2,t9,C_SCHEME_END_OF_LIST);
t11=(C_word)C_a_i_cons(&a,2,t6,t10);
t12=(C_word)C_a_i_cons(&a,2,lf[311],t11);
t13=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30060,a[2]=t12,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  simple-unit-parser");
f_16561(t13,C_fix(33280));}

/* k30058 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_30060(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  make-rule");
f_15862(((C_word*)t0)[3],lf[748],C_fix(33280),((C_word*)t0)[2],t1,C_SCHEME_FALSE);}

/* k30050 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_30052(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  hash-table-set!");
t2=C_retrieve(lf[681]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[277],"*rules*"),C_fix(33280),t1);}

/* k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_18286(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word ab[78],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18286,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18808,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29880,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(16144),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(14864),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[311],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(29952),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,lf[325],t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(33024),C_SCHEME_END_OF_LIST);
t10=(C_word)C_a_i_cons(&a,2,lf[95],t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(33280),C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,lf[95],t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t14=(C_word)C_a_i_cons(&a,2,lf[91],t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,C_fix(22016),t15);
t17=(C_word)C_a_i_cons(&a,2,lf[325],t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(18193),C_SCHEME_END_OF_LIST);
t19=(C_word)C_a_i_cons(&a,2,t17,t18);
t20=(C_word)C_a_i_cons(&a,2,t14,t19);
t21=(C_word)C_a_i_cons(&a,2,t12,t20);
t22=(C_word)C_a_i_cons(&a,2,t10,t21);
t23=(C_word)C_a_i_cons(&a,2,t8,t22);
t24=(C_word)C_a_i_cons(&a,2,t6,t23);
t25=(C_word)C_a_i_cons(&a,2,lf[310],t24);
t26=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29886,a[2]=((C_word)li477),tmp=(C_word)a,a+=3,tmp);
t27=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29932,a[2]=((C_word)li482),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  make-rule");
f_15862(t3,lf[747],C_fix(32512),t25,t26,t27);}

/* a29931 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_29932(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[7],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_29932,5,t0,t1,t2,t3,t4);}
t5=t3;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18292,a[2]=t4,a[3]=t6,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  parse-unit-parsed");
f_16202(t7,t2);}

/* k18290 in a29931 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_18292(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18292,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_END_OF_LIST;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_END_OF_LIST;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_END_OF_LIST;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_END_OF_LIST;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_END_OF_LIST;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_18310,a[2]=t11,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t7,a[6]=((C_word*)t0)[4],a[7]=t15,a[8]=t13,a[9]=t5,a[10]=t9,a[11]=t3,tmp=(C_word)a,a+=12,tmp);
t17=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18767,a[2]=t3,a[3]=((C_word*)t0)[2],a[4]=t5,a[5]=t16,a[6]=((C_word*)t0)[3],tmp=(C_word)a,a+=7,tmp);
t18=(C_word)C_i_car(((C_word*)t3)[1]);
C_trace("ChickenBridge.scm: 369  token-unit-type=?");
f_16248(t17,t18,C_fix(14864));}

/* k18765 in k18290 in a29931 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_18767(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18767,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18771,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  add-emit-info");
f_16292(t2,lf[744],C_SCHEME_TRUE,((C_word*)((C_word*)t0)[6])[1]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18774,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18801,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  get-emit-info");
f_16280(t3,lf[734],((C_word*)((C_word*)t0)[6])[1]);}}

/* k18799 in k18765 in k18290 in a29931 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_18801(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18801,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_18774(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18789,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18793,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
C_trace("ChickenBridge.scm: 369  parse-unit-position");
f_16220(t3,t4);}}

/* k18791 in k18799 in k18765 in k18290 in a29931 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_18793(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  make-parse-error");
f_16112(((C_word*)t0)[2],lf[746],t1);}

/* k18787 in k18799 in k18765 in k18290 in a29931 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_18789(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  errf");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k18772 in k18765 in k18290 in a29931 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_18774(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18774,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18778,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  add-emit-info");
f_16292(t2,lf[745],C_SCHEME_TRUE,((C_word*)((C_word*)t0)[4])[1]);}

/* k18776 in k18772 in k18765 in k18290 in a29931 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_18778(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_TRUE);
t4=((C_word*)t0)[2];
f_18310(t4,t3);}

/* k18769 in k18765 in k18290 in a29931 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_18771(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_18310(t3,t2);}

/* k18308 in k18290 in a29931 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_18310(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18310,NULL,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[11])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t4=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_18317,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[11],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_car(((C_word*)((C_word*)t0)[11])[1]))){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18756,a[2]=t4,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18760,a[2]=((C_word*)t0)[5],a[3]=t5,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_car(((C_word*)((C_word*)t0)[11])[1]);
C_trace("ChickenBridge.scm: 369  emit");
f_16320(t6,t7,((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]);}
else{
t5=t4;
f_18317(t5,C_SCHEME_UNDEFINED);}}

/* k18758 in k18308 in k18290 in a29931 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_18760(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  append");
t2=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k18754 in k18308 in k18290 in a29931 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_18756(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_18317(t3,t2);}

/* k18315 in k18308 in k18290 in a29931 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_18317(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18317,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_18320,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
t3=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18631,a[2]=((C_word*)t0)[11],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[6],a[6]=t5,a[7]=((C_word)li481),tmp=(C_word)a,a+=8,tmp));
t7=((C_word*)t5)[1];
f_18631(t7,t2,t3);}

/* do2864 in k18315 in k18308 in k18290 in a29931 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_18631(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18631,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18641,a[2]=t1,a[3]=((C_word*)t0)[6],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18652,a[2]=t3,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 369  parse-unit-parsed");
f_16202(t4,t5);}}

/* k18650 in do2864 in k18315 in k18308 in k18290 in a29931 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_18652(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18652,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18654,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t3,a[6]=((C_word*)t0)[6],a[7]=((C_word)li480),tmp=(C_word)a,a+=8,tmp));
t5=((C_word*)t3)[1];
f_18654(t5,((C_word*)t0)[2],t1);}

/* do2867 in k18650 in do2864 in k18315 in k18308 in k18290 in a29931 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_18654(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18654,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(C_word)C_i_car(t2);
t4=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_18668,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t3,a[5]=((C_word*)t0)[4],a[6]=t1,a[7]=((C_word*)t0)[5],a[8]=t2,a[9]=((C_word*)t0)[6],tmp=(C_word)a,a+=10,tmp);
t5=(C_word)C_i_car(t3);
t6=(C_word)C_i_cadr(t3);
t7=(C_word)C_a_i_list(&a,2,t5,t6);
t8=(C_word)C_a_i_list(&a,1,t7);
C_trace("ChickenBridge.scm: 369  append");
t9=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t4,((C_word*)((C_word*)t0)[6])[1],t8);}}

/* k18666 in do2867 in k18650 in do2864 in k18315 in k18308 in k18290 in a29931 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_18668(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18668,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,t1);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18671,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_caddr(((C_word*)t0)[4]))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18721,a[2]=t3,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_caddr(((C_word*)t0)[4]);
t6=(C_word)C_a_i_list(&a,1,t5);
C_trace("ChickenBridge.scm: 369  append");
t7=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t4,((C_word*)((C_word*)t0)[2])[1],t6);}
else{
t4=t3;
f_18671(t4,C_SCHEME_UNDEFINED);}}

/* k18719 in k18666 in do2867 in k18650 in do2864 in k18315 in k18308 in k18290 in a29931 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_18721(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_18671(t3,t2);}

/* k18669 in k18666 in do2867 in k18650 in do2864 in k18315 in k18308 in k18290 in a29931 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_18671(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18671,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18674,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_cadddr(((C_word*)t0)[3]))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18706,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_i_cadddr(((C_word*)t0)[3]);
t5=(C_word)C_a_i_list(&a,1,t4);
C_trace("ChickenBridge.scm: 369  append");
t6=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t3,((C_word*)((C_word*)t0)[2])[1],t5);}
else{
t3=t2;
f_18674(t3,C_SCHEME_UNDEFINED);}}

/* k18704 in k18669 in k18666 in do2867 in k18650 in do2864 in k18315 in k18308 in k18290 in a29931 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_18706(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_18674(t3,t2);}

/* k18672 in k18669 in k18666 in do2867 in k18650 in do2864 in k18315 in k18308 in k18290 in a29931 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_18674(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18674,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18677,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18687,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  fifth");
t4=C_retrieve(lf[47]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k18685 in k18672 in k18669 in k18666 in do2867 in k18650 in do2864 in k18315 in k18308 in k18290 in a29931 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_18687(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18687,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18691,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18699,a[2]=((C_word*)t0)[4],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  fifth");
t4=C_retrieve(lf[47]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_18677(t2,C_SCHEME_UNDEFINED);}}

/* k18697 in k18685 in k18672 in k18669 in k18666 in do2867 in k18650 in do2864 in k18315 in k18308 in k18290 in a29931 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_18699(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18699,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
C_trace("ChickenBridge.scm: 369  append");
t3=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t2);}

/* k18689 in k18685 in k18672 in k18669 in k18666 in do2867 in k18650 in do2864 in k18315 in k18308 in k18290 in a29931 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_18691(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_18677(t3,t2);}

/* k18675 in k18672 in k18669 in k18666 in do2867 in k18650 in do2864 in k18315 in k18308 in k18290 in a29931 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_18677(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_18654(t3,((C_word*)t0)[2],t2);}

/* k18639 in do2864 in k18315 in k18308 in k18290 in a29931 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_18641(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_18631(t3,((C_word*)t0)[2],t2);}

/* k18318 in k18315 in k18308 in k18290 in a29931 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_18320(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18320,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_18323,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
t3=(C_word)C_i_cadddr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18595,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t5,a[5]=((C_word*)t0)[11],a[6]=((C_word)li479),tmp=(C_word)a,a+=7,tmp));
t7=((C_word*)t5)[1];
f_18595(t7,t2,t3);}

/* do2878 in k18318 in k18315 in k18308 in k18290 in a29931 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_18595(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18595,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18606,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18621,a[2]=((C_word*)t0)[5],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 369  emit");
f_16320(t4,t5,((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2]);}}

/* k18619 in do2878 in k18318 in k18315 in k18308 in k18290 in a29931 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_18621(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18621,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
C_trace("ChickenBridge.scm: 369  append");
t3=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t2);}

/* k18604 in do2878 in k18318 in k18315 in k18308 in k18290 in a29931 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_18606(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_18595(t4,((C_word*)t0)[2],t3);}

/* k18321 in k18318 in k18315 in k18308 in k18290 in a29931 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_18323(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18323,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_18327,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 369  append");
t3=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)((C_word*)t0)[11])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k18325 in k18321 in k18318 in k18315 in k18308 in k18290 in a29931 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_18327(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18327,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[10])+1,t1);
t3=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_18330,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
t4=(C_word)C_i_caddr(((C_word*)((C_word*)t0)[2])[1]);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18539,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t6,a[5]=((C_word*)t0)[8],a[6]=((C_word)li478),tmp=(C_word)a,a+=7,tmp));
t8=((C_word*)t6)[1];
f_18539(t8,t3,t4);}

/* do2883 in k18325 in k18321 in k18318 in k18315 in k18308 in k18290 in a29931 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_18539(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18539,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18549,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=t2,a[7]=((C_word*)t0)[5],tmp=(C_word)a,a+=8,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 369  parse-unit-parsed");
f_16202(t3,t4);}}

/* k18547 in do2883 in k18325 in k18321 in k18318 in k18315 in k18308 in k18290 in a29931 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_18549(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18549,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18552,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cadr(t1);
C_trace("ChickenBridge.scm: 369  emit");
f_16320(t2,t3,((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2]);}

/* k18550 in k18547 in do2883 in k18325 in k18321 in k18318 in k18315 in k18308 in k18290 in a29931 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_18552(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18552,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18555,a[2]=t3,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18573,a[2]=t4,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_car(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 369  token-unit-type=?");
f_16248(t5,t6,C_fix(20224));}

/* k18571 in k18550 in k18547 in do2883 in k18325 in k18321 in k18318 in k18315 in k18308 in k18290 in a29931 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_18573(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18573,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,2,lf[312],((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_18555(t4,t3);}
else{
t2=((C_word*)t0)[2];
f_18555(t2,C_SCHEME_UNDEFINED);}}

/* k18553 in k18550 in k18547 in do2883 in k18325 in k18321 in k18318 in k18315 in k18308 in k18290 in a29931 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_18555(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18555,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18559,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[2])[1]);
C_trace("ChickenBridge.scm: 369  append");
t4=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,((C_word*)((C_word*)t0)[6])[1],t3);}

/* k18557 in k18553 in k18550 in k18547 in do2883 in k18325 in k18321 in k18318 in k18315 in k18308 in k18290 in a29931 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_18559(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_18539(t4,((C_word*)t0)[2],t3);}

/* k18328 in k18325 in k18321 in k18318 in k18315 in k18308 in k18290 in a29931 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_18330(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18330,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_18333,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[9])[1]))){
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[9])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[9])+1,t4);
t6=t2;
f_18333(t6,t5);}
else{
t4=(C_word)C_a_i_cons(&a,2,lf[311],((C_word*)((C_word*)t0)[9])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[9])+1,t4);
t6=t2;
f_18333(t6,t5);}}
else{
t3=C_set_block_item(((C_word*)t0)[9],0,C_SCHEME_FALSE);
t4=t2;
f_18333(t4,t3);}}

/* k18331 in k18328 in k18325 in k18321 in k18318 in k18315 in k18308 in k18290 in a29931 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_18333(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18333,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18336,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18502,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t2,a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 369  fifth");
t4=C_retrieve(lf[47]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k18500 in k18331 in k18328 in k18325 in k18321 in k18318 in k18315 in k18308 in k18290 in a29931 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_18502(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18502,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18506,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18510,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  fifth");
t4=C_retrieve(lf[47]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_FALSE);
t3=((C_word*)t0)[5];
f_18336(t3,t2);}}

/* k18508 in k18500 in k18331 in k18328 in k18325 in k18321 in k18318 in k18315 in k18308 in k18290 in a29931 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_18510(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  emit");
f_16320(((C_word*)t0)[4],t1,((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2]);}

/* k18504 in k18500 in k18331 in k18328 in k18325 in k18321 in k18318 in k18315 in k18308 in k18290 in a29931 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_18506(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_18336(t3,t2);}

/* k18334 in k18331 in k18328 in k18325 in k18321 in k18318 in k18315 in k18308 in k18290 in a29931 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_18336(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[31],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18336,NULL,2,t0,t1);}
t2=((C_word*)((C_word*)t0)[7])[1];
if(C_truep(t2)){
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18364,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 369  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[743]);}
else{
t3=(C_word)C_a_i_list(&a,2,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1]);
t4=(C_word)C_a_i_cons(&a,2,t3,((C_word*)((C_word*)t0)[2])[1]);
t5=(C_word)C_a_i_cons(&a,2,C_SCHEME_END_OF_LIST,t4);
t6=(C_word)C_a_i_cons(&a,2,lf[566],t5);
t7=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_a_i_list(&a,3,lf[2],((C_word*)((C_word*)t0)[3])[1],t6));}}

/* k18362 in k18334 in k18331 in k18328 in k18325 in k18321 in k18318 in k18315 in k18308 in k18290 in a29931 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_18364(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18364,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18367,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 369  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[742]);}

/* k18365 in k18362 in k18334 in k18331 in k18328 in k18325 in k18321 in k18318 in k18315 in k18308 in k18290 in a29931 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_18367(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18367,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_18370,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 369  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[741]);}

/* k18368 in k18365 in k18362 in k18334 in k18331 in k18328 in k18325 in k18321 in k18318 in k18315 in k18308 in k18290 in a29931 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_18370(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18370,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_18373,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 369  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[740]);}

/* k18371 in k18368 in k18365 in k18362 in k18334 in k18331 in k18328 in k18325 in k18321 in k18318 in k18315 in k18308 in k18290 in a29931 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_18373(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18373,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_18376,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 369  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[739]);}

/* k18374 in k18371 in k18368 in k18365 in k18362 in k18334 in k18331 in k18328 in k18325 in k18321 in k18318 in k18315 in k18308 in k18290 in a29931 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_18376(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word ab[150],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18376,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)t0)[10]);
t3=(C_word)C_a_i_list(&a,2,((C_word*)t0)[9],C_fix(0));
t4=(C_word)C_a_i_list(&a,3,lf[663],C_SCHEME_END_OF_LIST,((C_word*)t0)[10]);
t5=(C_word)C_a_i_list(&a,2,lf[664],t4);
t6=(C_word)C_a_i_list(&a,1,((C_word*)t0)[8]);
t7=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[9],((C_word*)t0)[8]);
t8=(C_word)C_a_i_list(&a,3,lf[663],t6,t7);
t9=(C_word)C_a_i_list(&a,2,lf[666],t8);
t10=(C_word)C_a_i_list(&a,3,t3,t5,t9);
t11=(C_word)C_a_i_list(&a,1,t1);
t12=(C_word)C_a_i_list(&a,1,((C_word*)t0)[7]);
t13=(C_word)C_a_i_list(&a,2,lf[465],lf[624]);
t14=(C_word)C_a_i_list(&a,2,lf[465],lf[625]);
t15=(C_word)C_a_i_list(&a,3,lf[623],t13,t14);
t16=(C_word)C_a_i_list(&a,2,t15,((C_word*)t0)[7]);
t17=(C_word)C_a_i_list(&a,4,lf[31],lf[738],t16,((C_word*)t0)[10]);
t18=(C_word)C_a_i_list(&a,2,lf[349],t17);
t19=(C_word)C_a_i_list(&a,2,t1,C_fix(-2));
t20=(C_word)C_a_i_list(&a,4,lf[663],t12,t18,t19);
t21=(C_word)C_a_i_list(&a,3,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1],C_fix(-1));
t22=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_18435,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t2,a[5]=t10,a[6]=t11,a[7]=t20,a[8]=t21,tmp=(C_word)a,a+=9,tmp);
t23=(C_word)C_a_i_list(&a,1,((C_word*)t0)[9]);
C_trace("##sys#append");
t24=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t24+1)))(4,t24,t22,((C_word*)((C_word*)t0)[2])[1],t23);}

/* k18433 in k18374 in k18371 in k18368 in k18365 in k18362 in k18334 in k18331 in k18328 in k18325 in k18321 in k18318 in k18315 in k18308 in k18290 in a29931 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_18435(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[72],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18435,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[16],t1);
t3=(C_word)C_a_i_list(&a,3,lf[662],((C_word*)t0)[8],t2);
t4=(C_word)C_a_i_list(&a,3,lf[663],C_SCHEME_END_OF_LIST,t3);
t5=(C_word)C_a_i_list(&a,3,lf[626],((C_word*)t0)[7],t4);
t6=(C_word)C_a_i_list(&a,3,lf[663],((C_word*)t0)[6],t5);
t7=(C_word)C_a_i_list(&a,2,lf[627],t6);
t8=(C_word)C_a_i_list(&a,3,lf[2],((C_word*)t0)[5],t7);
t9=(C_word)C_a_i_list(&a,3,lf[663],((C_word*)t0)[4],t8);
t10=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t10+1)))(2,t10,(C_word)C_a_i_list(&a,3,lf[2],((C_word*)((C_word*)t0)[2])[1],t9));}

/* a29885 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_29886(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[10],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_29886,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=t5;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_caddr(t2);
t9=(C_word)C_i_cadddr(t2);
t10=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29902,a[2]=t2,a[3]=t1,a[4]=t9,a[5]=t8,a[6]=t7,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 369  fifth");
t11=C_retrieve(lf[47]);
((C_proc3)C_retrieve_proc(t11))(3,t11,t10,t2);}

/* k29900 in a29885 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_29902(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29902,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29905,a[2]=((C_word*)t0)[3],a[3]=t1,a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 369  sixth");
t3=C_retrieve(lf[48]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k29903 in k29900 in a29885 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_29905(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29905,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_29908,a[2]=((C_word*)t0)[2],a[3]=t3,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[6])+1,t5);
t7=t4;
f_29908(t7,t6);}
else{
t5=t4;
f_29908(t5,C_SCHEME_UNDEFINED);}}

/* k29906 in k29903 in k29900 in a29885 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_29908(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29908,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_29911,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
t3=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=t2;
f_29911(t5,t4);}
else{
t3=t2;
f_29911(t3,C_SCHEME_UNDEFINED);}}

/* k29909 in k29906 in k29903 in k29900 in a29885 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_29911(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29911,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,6,((C_word*)t0)[8],((C_word*)((C_word*)t0)[7])[1],((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29922,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  parse-unit-position");
f_16220(t3,((C_word*)t0)[8]);}

/* k29920 in k29909 in k29906 in k29903 in k29900 in a29885 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_29922(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  make-parse-unit");
f_16163(((C_word*)t0)[3],C_fix(32512),((C_word*)t0)[2],t1);}

/* k29878 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_29880(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  hash-table-set!");
t2=C_retrieve(lf[681]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[277],"*rules*"),C_fix(32512),t1);}

/* k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_18808(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word ab[63],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18808,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18811,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29735,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(512),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[310],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(25088),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(256),t7);
t9=(C_word)C_a_i_cons(&a,2,lf[95],t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t11=(C_word)C_a_i_cons(&a,2,t9,t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(25088),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(512),t12);
t14=(C_word)C_a_i_cons(&a,2,lf[310],t13);
t15=(C_word)C_a_i_cons(&a,2,t14,C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,t6,t15);
t17=(C_word)C_a_i_cons(&a,2,lf[311],t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t19=(C_word)C_a_i_cons(&a,2,t17,t18);
t20=(C_word)C_a_i_cons(&a,2,C_fix(25088),t19);
t21=(C_word)C_a_i_cons(&a,2,lf[310],t20);
t22=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29741,a[2]=((C_word)li476),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  make-rule");
f_15862(t3,lf[737],C_fix(37632),t21,t22,C_SCHEME_FALSE);}

/* a29740 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_29741(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[13],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_29741,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=t5;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_caddr(t2);
t9=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29754,a[2]=t1,a[3]=t8,a[4]=t7,a[5]=t4,tmp=(C_word)a,a+=6,tmp);
t10=(C_word)C_i_length(((C_word*)t7)[1]);
if(C_truep((C_word)C_i_nequalp(t10,C_fix(2)))){
t11=C_set_block_item(t7,0,C_SCHEME_END_OF_LIST);
t12=t9;
f_29754(t12,t11);}
else{
t11=(C_word)C_i_cadr(((C_word*)t7)[1]);
t12=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29780,a[2]=t9,a[3]=t7,a[4]=t11,tmp=(C_word)a,a+=5,tmp);
t13=(C_word)C_i_caddr(((C_word*)t7)[1]);
C_trace("ChickenBridge.scm: 369  remove-token-type");
f_17498(t12,t13,C_fix(256));}}

/* k29778 in a29740 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_29780(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29780,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_29754(t4,t3);}

/* k29752 in a29740 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_29754(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29754,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 369  make-parse-unit");
f_16163(((C_word*)t0)[2],C_fix(37632),t2,C_SCHEME_FALSE);}

/* k29733 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_29735(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  hash-table-set!");
t2=C_retrieve(lf[681]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[277],"*rules*"),C_fix(37632),t1);}

/* k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_18811(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word ab[72],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18811,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18814,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29278,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(30208),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[95],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(30208),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(24576),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[310],t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(37632),C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,C_fix(24064),t11);
t13=(C_word)C_a_i_cons(&a,2,lf[310],t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(37632),C_SCHEME_END_OF_LIST);
t15=(C_word)C_a_i_cons(&a,2,C_fix(24320),t14);
t16=(C_word)C_a_i_cons(&a,2,lf[310],t15);
t17=(C_word)C_a_i_cons(&a,2,t16,C_SCHEME_END_OF_LIST);
t18=(C_word)C_a_i_cons(&a,2,t13,t17);
t19=(C_word)C_a_i_cons(&a,2,t10,t18);
t20=(C_word)C_a_i_cons(&a,2,lf[311],t19);
t21=(C_word)C_a_i_cons(&a,2,t20,C_SCHEME_END_OF_LIST);
t22=(C_word)C_a_i_cons(&a,2,C_fix(13824),t21);
t23=(C_word)C_a_i_cons(&a,2,lf[310],t22);
t24=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29284,a[2]=((C_word)li472),tmp=(C_word)a,a+=3,tmp);
t25=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29323,a[2]=((C_word)li475),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  make-rule");
f_15862(t3,lf[736],C_fix(36352),t23,t24,t25);}

/* a29322 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_29323(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_29323,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29327,a[2]=t4,a[3]=t5,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  parse-unit-parsed");
f_16202(t6,t2);}

/* k29325 in a29322 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_29327(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29327,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=(C_word)C_a_i_list(&a,1,lf[336]);
t4=t3;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29336,a[2]=t3,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t7=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_29339,a[2]=t2,a[3]=t3,a[4]=t6,a[5]=((C_word*)t0)[2],a[6]=((C_word*)t0)[3],a[7]=t5,a[8]=t1,tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 369  token-unit-type=?");
f_16248(t7,t2,C_fix(24576));}

/* k29337 in k29325 in a29322 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_29339(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29339,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cdr(((C_word*)t0)[8]);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29348,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=t4,a[5]=((C_word*)t0)[7],a[6]=((C_word)li473),tmp=(C_word)a,a+=7,tmp));
t6=((C_word*)t4)[1];
f_29348(t6,((C_word*)t0)[4],t2);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29397,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[8]);
C_trace("ChickenBridge.scm: 369  parse-unit-parsed");
f_16202(t2,t3);}}

/* k29395 in k29337 in k29325 in a29322 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_29397(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29397,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29400,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,tmp=(C_word)a,a+=8,tmp);
t3=(C_word)C_i_car(t1);
C_trace("ChickenBridge.scm: 369  emit");
f_16320(t2,t3,((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]);}

/* k29398 in k29395 in k29337 in k29325 in a29322 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_29400(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29400,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_29403,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=t1,tmp=(C_word)a,a+=9,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[7]);
C_trace("ChickenBridge.scm: 369  emit");
f_16320(t2,t3,((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]);}

/* k29401 in k29398 in k29395 in k29337 in k29325 in a29322 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_29403(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29403,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_29615,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 369  append");
t3=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,t1,C_SCHEME_END_OF_LIST);}

/* k29613 in k29401 in k29398 in k29395 in k29337 in k29325 in a29322 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_29615(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29615,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[9],t1);
t3=(C_word)C_i_caddr(((C_word*)t0)[8]);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_29412,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t3,a[5]=t2,a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[5],a[9]=((C_word*)t0)[6],a[10]=((C_word*)t0)[7],a[11]=t7,a[12]=t5,tmp=(C_word)a,a+=13,tmp);
t9=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t9))){
t10=t8;
f_29412(t10,C_SCHEME_UNDEFINED);}
else{
t10=(C_word)C_i_length(t2);
t11=(C_word)C_a_i_minus(&a,2,t10,C_fix(2));
t12=(C_word)C_i_list_tail(t2,t11);
t13=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29553,a[2]=t12,a[3]=t8,tmp=(C_word)a,a+=4,tmp);
t14=(C_word)C_i_cadr(t12);
C_trace("ChickenBridge.scm: 369  symbol->string");
t15=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t15))(3,t15,t13,t14);}}

/* k29551 in k29613 in k29401 in k29398 in k29395 in k29337 in k29325 in a29322 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_29553(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29553,2,t0,t1);}
t2=(C_word)C_i_string_length(t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29562,a[2]=t1,a[3]=t2,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_greaterp(t2,C_fix(3)))){
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29587,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_a_i_minus(&a,2,t2,C_fix(3));
C_trace("ChickenBridge.scm: 369  substring");
t6=*((C_word*)lf[352]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,t1,t5);}
else{
t4=t3;
f_29562(t4,C_SCHEME_FALSE);}}

/* k29585 in k29551 in k29613 in k29401 in k29398 in k29395 in k29337 in k29325 in a29322 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_29587(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_29562(t2,(C_word)C_i_string_equal_p(t1,lf[735]));}

/* k29560 in k29551 in k29613 in k29401 in k29398 in k29395 in k29337 in k29325 in a29322 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_29562(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29562,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29569,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29573,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[3],C_fix(3));
C_trace("ChickenBridge.scm: 369  substring");
t5=*((C_word*)lf[352]+1);
((C_proc5)C_retrieve_proc(t5))(5,t5,t3,((C_word*)t0)[2],C_fix(0),t4);}
else{
t2=((C_word*)t0)[5];
f_29412(t2,C_SCHEME_UNDEFINED);}}

/* k29571 in k29560 in k29551 in k29613 in k29401 in k29398 in k29395 in k29337 in k29325 in a29322 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_29573(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  string->symbol");
t2=*((C_word*)lf[307]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k29567 in k29560 in k29551 in k29613 in k29401 in k29398 in k29395 in k29337 in k29325 in a29322 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_29569(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_29412(t2,(C_word)C_i_set_cdr(((C_word*)t0)[2],t1));}

/* k29410 in k29613 in k29401 in k29398 in k29395 in k29337 in k29325 in a29322 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_29412(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29412,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29415,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[11],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_29490,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t2,a[6]=((C_word*)t0)[12],a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[6],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 369  token-unit-type=?");
f_16248(t3,((C_word*)t0)[2],C_fix(24064));}

/* k29488 in k29410 in k29613 in k29401 in k29398 in k29395 in k29337 in k29325 in a29322 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_29490(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29490,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_29494,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 369  add-emit-info");
f_16292(t2,lf[732],C_SCHEME_TRUE,((C_word*)((C_word*)t0)[9])[1]);}
else{
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_29531,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 369  token-unit-type=?");
f_16248(t2,((C_word*)t0)[2],C_fix(24320));}}

/* k29529 in k29488 in k29410 in k29613 in k29401 in k29398 in k29395 in k29337 in k29325 in a29322 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_29531(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29531,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_29535,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 369  add-emit-info");
f_16292(t2,lf[734],C_SCHEME_TRUE,((C_word*)((C_word*)t0)[8])[1]);}
else{
t2=((C_word*)t0)[4];
f_29415(t2,C_SCHEME_UNDEFINED);}}

/* k29533 in k29529 in k29488 in k29410 in k29613 in k29401 in k29398 in k29395 in k29337 in k29325 in a29322 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_29535(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29535,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29539,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 369  emit");
f_16320(t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[8])[1],((C_word*)t0)[2]);}

/* k29537 in k29533 in k29529 in k29488 in k29410 in k29613 in k29401 in k29398 in k29395 in k29337 in k29325 in a29322 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_29539(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29539,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_a_i_list(&a,3,lf[725],((C_word*)t0)[4],((C_word*)((C_word*)t0)[5])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[5])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[733]);
t6=((C_word*)t0)[2];
f_29415(t6,t5);}

/* k29492 in k29488 in k29410 in k29613 in k29401 in k29398 in k29395 in k29337 in k29325 in a29322 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_29494(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29494,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29498,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 369  emit");
f_16320(t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[8])[1],((C_word*)t0)[2]);}

/* k29496 in k29492 in k29488 in k29410 in k29613 in k29401 in k29398 in k29395 in k29337 in k29325 in a29322 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_29498(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29498,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29501,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29525,a[2]=t3,a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  get-emit-info");
f_16280(t4,lf[732],((C_word*)((C_word*)t0)[2])[1]);}

/* k29523 in k29496 in k29492 in k29488 in k29410 in k29613 in k29401 in k29398 in k29395 in k29337 in k29325 in a29322 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_29525(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29525,2,t0,t1);}
t2=(C_word)C_eqp(lf[731],t1);
if(C_truep(t2)){
t3=(C_word)C_a_i_list(&a,1,lf[537]);
t4=(C_word)C_a_i_list(&a,3,lf[663],t3,((C_word*)((C_word*)t0)[3])[1]);
t5=(C_word)C_a_i_list(&a,2,lf[627],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_29501(t7,t6);}
else{
t3=((C_word*)t0)[2];
f_29501(t3,C_SCHEME_UNDEFINED);}}

/* k29499 in k29496 in k29492 in k29488 in k29410 in k29613 in k29401 in k29398 in k29395 in k29337 in k29325 in a29322 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_29501(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29501,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,lf[725],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[730]);
t5=((C_word*)t0)[2];
f_29415(t5,t4);}

/* k29413 in k29410 in k29613 in k29401 in k29398 in k29395 in k29337 in k29325 in a29322 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_29415(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29415,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29418,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29429,a[2]=((C_word*)t0)[3],a[3]=t2,a[4]=((C_word*)t0)[7],tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29487,a[2]=((C_word*)t0)[7],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  symbol->string");
t5=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,((C_word*)t0)[2]);}

/* k29485 in k29413 in k29410 in k29613 in k29401 in k29398 in k29395 in k29337 in k29325 in a29322 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_29487(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  string-append");
t2=*((C_word*)lf[141]+1);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1,lf[729]);}

/* k29427 in k29413 in k29410 in k29613 in k29401 in k29398 in k29395 in k29337 in k29325 in a29322 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_29429(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29429,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29431,a[2]=t3,a[3]=((C_word*)t0)[4],a[4]=((C_word)li474),tmp=(C_word)a,a+=5,tmp));
t5=((C_word*)t3)[1];
f_29431(t5,((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* do2965 in k29427 in k29413 in k29410 in k29613 in k29401 in k29398 in k29395 in k29337 in k29325 in a29322 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_29431(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29431,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t3))){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29446,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  string-append");
t6=*((C_word*)lf[141]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,((C_word*)t4)[1],lf[727]);}
else{
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29450,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t3,a[5]=t4,tmp=(C_word)a,a+=6,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29479,a[2]=t4,a[3]=t5,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_car(t3);
C_trace("ChickenBridge.scm: 369  symbol->string");
t8=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t8))(3,t8,t6,t7);}}

/* k29477 in do2965 in k29427 in k29413 in k29410 in k29613 in k29401 in k29398 in k29395 in k29337 in k29325 in a29322 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_29479(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  string-append");
t2=*((C_word*)lf[141]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k29448 in do2965 in k29427 in k29413 in k29410 in k29613 in k29401 in k29398 in k29395 in k29337 in k29325 in a29322 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_29450(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29450,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29453,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_i_cdr(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_nullp(t4))){
t5=t3;
f_29453(t5,C_SCHEME_UNDEFINED);}
else{
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29467,a[2]=t3,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  string-append");
t6=*((C_word*)lf[141]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,((C_word*)((C_word*)t0)[5])[1],lf[728]);}}

/* k29465 in k29448 in do2965 in k29427 in k29413 in k29410 in k29613 in k29401 in k29398 in k29395 in k29337 in k29325 in a29322 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_29467(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_29453(t3,t2);}

/* k29451 in k29448 in do2965 in k29427 in k29413 in k29410 in k29613 in k29401 in k29398 in k29395 in k29337 in k29325 in a29322 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_29453(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
t3=((C_word*)((C_word*)t0)[4])[1];
f_29431(t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t2);}

/* k29444 in do2965 in k29427 in k29413 in k29410 in k29613 in k29401 in k29398 in k29395 in k29337 in k29325 in a29322 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_29446(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29446,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,lf[360],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t3);}

/* k29416 in k29413 in k29410 in k29613 in k29401 in k29398 in k29395 in k29337 in k29325 in a29322 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_29418(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29418,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t3=((C_word*)t0)[3];
f_29336(2,t3,(C_word)C_i_set_cdr(((C_word*)t0)[2],t2));}

/* do2939 in k29337 in k29325 in a29322 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_29348(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29348,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29358,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 369  emit");
f_16320(t3,t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2]);}}

/* k29356 in do2939 in k29337 in k29325 in a29322 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_29358(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29358,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29364,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t2,a[7]=t1,tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 369  sprintf");
t4=C_retrieve(lf[31]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,lf[726],t2);}

/* k29362 in k29356 in do2939 in k29337 in k29325 in a29322 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_29364(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29364,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[725],((C_word*)t0)[7]);
t3=(C_word)C_a_i_list(&a,3,lf[359],t1,((C_word*)t0)[6]);
t4=(C_word)C_a_i_list(&a,2,t2,t3);
t5=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[5])[1],t4);
t6=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[5])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[5])+1,t6);
t8=(C_word)C_i_cdr(((C_word*)t0)[4]);
t9=((C_word*)((C_word*)t0)[3])[1];
f_29348(t9,((C_word*)t0)[2],t8);}

/* k29334 in k29325 in a29322 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_29336(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* a29283 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_29284(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[11],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_29284,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(C_word)C_i_cadr(((C_word*)t4)[1]);
t6=C_set_block_item(t4,0,t5);
t7=(C_word)C_i_car(((C_word*)t4)[1]);
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29295,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29301,a[2]=t8,a[3]=t7,a[4]=t4,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  token-unit-type=?");
f_16248(t9,t7,C_fix(24576));}

/* k29299 in a29283 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_29301(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29301,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29317,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_i_caddr(((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 369  remove-token-type");
f_17498(t3,t4,C_fix(256));}
else{
t2=((C_word*)t0)[2];
f_29295(t2,C_SCHEME_UNDEFINED);}}

/* k29315 in k29299 in a29283 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_29317(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29317,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[5],t1);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_29295(t5,t4);}

/* k29293 in a29283 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_29295(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  make-parse-unit");
f_16163(((C_word*)t0)[3],C_fix(36352),((C_word*)((C_word*)t0)[2])[1],C_SCHEME_FALSE);}

/* k29276 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_29278(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  hash-table-set!");
t2=C_retrieve(lf[681]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[277],"*rules*"),C_fix(36352),t1);}

/* k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_18814(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[57],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18814,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18817,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29202,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(33792),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(35584),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(35072),t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(36096),t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(34816),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(35328),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(31488),t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(31744),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(32512),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(32256),t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(30464),t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(34304),t14);
t16=(C_word)C_a_i_cons(&a,2,C_fix(34560),t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(33536),t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(32000),t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(36352),t18);
t20=(C_word)C_a_i_cons(&a,2,lf[311],t19);
C_trace("ChickenBridge.scm: 369  make-rule");
f_15862(t3,lf[724],C_fix(36608),t20,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k29200 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_29202(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  hash-table-set!");
t2=C_retrieve(lf[681]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[277],"*rules*"),C_fix(36608),t1);}

/* k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_18817(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18817,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18820,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29158,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,lf[91],t4);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29164,a[2]=((C_word)li470),tmp=(C_word)a,a+=3,tmp);
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29178,a[2]=((C_word)li471),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  make-rule");
f_15862(t3,lf[723],C_fix(36864),t5,t6,t7);}

/* a29177 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_29178(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_29178,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29186,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29190,a[2]=t4,a[3]=t3,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  parse-unit-parsed");
f_16202(t6,t2);}

/* k29188 in a29177 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_29190(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  emit");
f_16320(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k29184 in a29177 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_29186(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29186,2,t0,t1);}
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,lf[336],t1));}

/* a29163 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_29164(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_29164,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29172,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 369  parse-unit-position");
f_16220(t4,t5);}

/* k29170 in a29163 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_29172(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  make-parse-unit");
f_16163(((C_word*)t0)[3],C_fix(36864),((C_word*)t0)[2],t1);}

/* k29156 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_29158(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  hash-table-set!");
t2=C_retrieve(lf[681]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[277],"*rules*"),C_fix(36864),t1);}

/* k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_18820(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18820,2,t0,t1);}
t2=lf[345]=C_SCHEME_FALSE;;
t3=lf[346]=C_SCHEME_FALSE;;
t4=lf[347]=C_SCHEME_FALSE;;
t5=C_mutate((C_word*)lf[348]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18826,a[2]=((C_word)li268),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate((C_word*)lf[359]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18997,a[2]=((C_word)li272),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate((C_word*)lf[369]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19150,a[2]=((C_word)li273),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate((C_word*)lf[370]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19159,a[2]=((C_word)li274),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate((C_word*)lf[378]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19206,a[2]=((C_word)li275),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate((C_word*)lf[380]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19212,a[2]=((C_word)li276),tmp=(C_word)a,a+=3,tmp));
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19231,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29150,a[2]=((C_word)li469),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 370  ##sys#register-macro-2");
t13=C_retrieve(lf[714]);
((C_proc4)C_retrieve_proc(t13))(4,t13,t11,lf[721],t12);}

/* a29149 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_29150(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_29150,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22584,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 370  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[722]);}

/* k22582 in a29149 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_22584(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22584,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22587,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 370  parse-iteration");
f_22566(t2,lf[721],((C_word*)t0)[2],C_retrieve2(lf[575],"*loop-operators*"));}

/* k22585 in k22582 in a29149 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_22587(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22587,2,t0,t1);}
t2=C_SCHEME_END_OF_LIST;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_assoc(lf[537],C_retrieve2(lf[575],"*loop-operators*"));
t7=(C_word)C_i_cadddr(t6);
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22594,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t3,a[6]=t5,tmp=(C_word)a,a+=7,tmp);
t9=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22739,a[2]=t8,a[3]=t7,tmp=(C_word)a,a+=4,tmp);
t10=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22753,a[2]=t1,a[3]=t9,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 370  loop-returning");
t11=C_retrieve2(lf[391],"loop-returning");
f_19338(3,t11,t10,t1);}

/* k22751 in k22585 in k22582 in a29149 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_22753(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22753,2,t0,t1);}
if(C_truep((C_word)C_i_nullp(t1))){
t2=((C_word*)t0)[3];
f_22739(t2,C_SCHEME_FALSE);}
else{
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22749,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 370  loop-returning");
t3=C_retrieve2(lf[391],"loop-returning");
f_19338(3,t3,t2,((C_word*)t0)[2]);}}

/* k22747 in k22751 in k22585 in k22582 in a29149 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_22749(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_22739(t2,(C_word)C_i_car(t1));}

/* k22737 in k22585 in k22582 in a29149 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_22739(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 370  returnfn");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k22592 in k22585 in k22582 in a29149 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_22594(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22594,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22598,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 370  loop-end-tests");
t4=C_retrieve2(lf[386],"loop-end-tests");
f_19290(3,t4,t3,((C_word*)t0)[2]);}

/* k22596 in k22592 in k22585 in k22582 in a29149 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_22598(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22598,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22601,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(t1))){
t3=t2;
f_22601(t3,C_SCHEME_END_OF_LIST);}
else{
t3=(C_word)C_i_cdr(t1);
t4=(C_word)C_i_nullp(t3);
t5=(C_truep(t4)?(C_word)C_i_car(t1):(C_word)C_a_i_cons(&a,2,lf[311],t1));
t6=(C_word)C_a_i_list(&a,4,lf[20],t5,lf[720],C_SCHEME_FALSE);
t7=t2;
f_22601(t7,(C_word)C_a_i_list(&a,1,t6));}}

/* k22599 in k22596 in k22592 in k22585 in k22582 in a29149 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_22601(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22601,NULL,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22612,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 370  loop-bindings");
t4=C_retrieve2(lf[383],"loop-bindings");
f_19254(3,t4,t3,((C_word*)t0)[2]);}

/* k22610 in k22599 in k22596 in k22592 in k22585 in k22582 in a29149 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_22612(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22612,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22616,a[2]=((C_word*)t0)[6],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22620,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t2,a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 370  loop-initially");
t4=C_retrieve2(lf[385],"loop-initially");
f_19278(3,t4,t3,((C_word*)t0)[3]);}

/* k22618 in k22610 in k22599 in k22596 in k22592 in k22585 in k22582 in a29149 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_22620(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22620,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,lf[537]);
t3=(C_word)C_a_i_list(&a,1,lf[680]);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_22684,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t1,a[5]=((C_word*)t0)[5],a[6]=t2,a[7]=t3,a[8]=((C_word*)t0)[6],tmp=(C_word)a,a+=9,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22688,a[2]=((C_word*)t0)[2],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22692,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[6],a[4]=t5,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 370  loop-looping");
t7=C_retrieve2(lf[387],"loop-looping");
f_19302(3,t7,t6,((C_word*)t0)[3]);}

/* k22690 in k22618 in k22610 in k22599 in k22596 in k22592 in k22585 in k22582 in a29149 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_22692(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22692,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22696,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22700,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 370  loop-stepping");
t4=C_retrieve2(lf[389],"loop-stepping");
f_19314(3,t4,t3,((C_word*)t0)[2]);}

/* k22698 in k22690 in k22618 in k22610 in k22599 in k22596 in k22592 in k22585 in k22582 in a29149 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_22700(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22700,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)t0)[3]);
t3=(C_word)C_a_i_list(&a,1,t2);
C_trace("ChickenBridge.scm: 370  ##sys#append");
t4=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,((C_word*)t0)[2],t1,t3);}

/* k22694 in k22690 in k22618 in k22610 in k22599 in k22596 in k22592 in k22585 in k22582 in a29149 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_22696(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 370  ##sys#append");
t2=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k22686 in k22618 in k22610 in k22599 in k22596 in k22592 in k22585 in k22582 in a29149 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_22688(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 370  ##sys#append");
t2=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k22682 in k22618 in k22610 in k22599 in k22596 in k22592 in k22585 in k22582 in a29149 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_22684(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[34],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22684,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,C_SCHEME_END_OF_LIST,t1);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[8],t2);
t4=(C_word)C_a_i_cons(&a,2,lf[1],t3);
t5=(C_word)C_a_i_list(&a,3,lf[663],((C_word*)t0)[7],t4);
t6=(C_word)C_a_i_list(&a,2,lf[627],t5);
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22652,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=t6,tmp=(C_word)a,a+=6,tmp);
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22656,a[2]=t7,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 370  loop-finally");
t9=C_retrieve2(lf[390],"loop-finally");
f_19326(3,t9,t8,((C_word*)t0)[2]);}

/* k22654 in k22682 in k22618 in k22610 in k22599 in k22596 in k22592 in k22585 in k22582 in a29149 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_22656(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22656,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 370  ##sys#append");
t3=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[2],t1,t2);}

/* k22650 in k22682 in k22618 in k22610 in k22599 in k22596 in k22592 in k22585 in k22582 in a29149 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_22652(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22652,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[5],t1);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t2);
t4=(C_word)C_a_i_cons(&a,2,lf[663],t3);
t5=(C_word)C_a_i_list(&a,2,lf[627],t4);
t6=(C_word)C_a_i_list(&a,1,t5);
C_trace("ChickenBridge.scm: 370  ##sys#append");
t7=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t7+1)))(4,t7,((C_word*)t0)[3],((C_word*)t0)[2],t6);}

/* k22614 in k22610 in k22599 in k22596 in k22592 in k22585 in k22582 in a29149 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_22616(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22616,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,lf[1],t2));}

/* k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_19231(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19231,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19234,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29136,a[2]=((C_word)li468),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 370  ##sys#register-macro");
t4=C_retrieve(lf[679]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[719],t3);}

/* a29135 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_29136(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[27],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_29136,4,t0,t1,t2,t3);}
t4=(C_word)C_a_i_list(&a,3,lf[718],t2,t3);
t5=(C_word)C_a_i_list(&a,3,lf[12],t3,t4);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_a_i_list(&a,3,lf[336],t5,t3));}

/* k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_19234(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19234,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19237,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29107,a[2]=((C_word)li467),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 370  ##sys#register-macro");
t4=C_retrieve(lf[679]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[717],t3);}

/* a29106 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_29107(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_29107,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29111,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 370  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[716]);}

/* k29109 in a29106 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_29111(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[42],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29111,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,lf[8],((C_word*)t0)[3]);
t3=(C_word)C_a_i_list(&a,2,t1,t2);
t4=(C_word)C_a_i_list(&a,1,t3);
t5=(C_word)C_a_i_list(&a,2,lf[15],((C_word*)t0)[3]);
t6=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[3],t5);
t7=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_a_i_list(&a,4,lf[1],t4,t6,t1));}

/* k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_19237(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19237,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19240,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29104,a[2]=((C_word)li466),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 370  ##sys#register-macro");
t4=C_retrieve(lf[679]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[715],t3);}

/* a29103 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_29104(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_29104,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}

/* k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_19240(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word t36;
C_word t37;
C_word t38;
C_word t39;
C_word t40;
C_word t41;
C_word t42;
C_word t43;
C_word t44;
C_word t45;
C_word t46;
C_word t47;
C_word t48;
C_word t49;
C_word t50;
C_word t51;
C_word t52;
C_word t53;
C_word t54;
C_word t55;
C_word t56;
C_word t57;
C_word t58;
C_word t59;
C_word t60;
C_word t61;
C_word t62;
C_word t63;
C_word t64;
C_word t65;
C_word t66;
C_word t67;
C_word t68;
C_word t69;
C_word t70;
C_word t71;
C_word t72;
C_word t73;
C_word ab[492],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19240,2,t0,t1);}
t2=C_mutate(&lf[382],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19248,a[2]=((C_word)li277),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[383],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19254,a[2]=((C_word)li278),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate(&lf[384],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19266,a[2]=((C_word)li279),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate(&lf[385],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19278,a[2]=((C_word)li280),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate(&lf[386],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19290,a[2]=((C_word)li281),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate(&lf[387],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19302,a[2]=((C_word)li282),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate(&lf[388],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19308,a[2]=((C_word)li283),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate(&lf[389],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19314,a[2]=((C_word)li284),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate(&lf[390],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19326,a[2]=((C_word)li285),tmp=(C_word)a,a+=3,tmp));
t11=C_mutate(&lf[391],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19338,a[2]=((C_word)li286),tmp=(C_word)a,a+=3,tmp));
t12=C_mutate(&lf[392],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19350,a[2]=((C_word)li288),tmp=(C_word)a,a+=3,tmp));
t13=C_mutate(&lf[402],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19501,a[2]=((C_word)li291),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate(&lf[403],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19572,a[2]=((C_word)li292),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate(&lf[404],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19578,a[2]=((C_word)li293),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate(&lf[405],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19584,a[2]=((C_word)li294),tmp=(C_word)a,a+=3,tmp));
t17=C_mutate(&lf[406],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19590,a[2]=((C_word)li298),tmp=(C_word)a,a+=3,tmp));
t18=C_mutate(&lf[416],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19750,a[2]=((C_word)li299),tmp=(C_word)a,a+=3,tmp));
t19=C_mutate(&lf[424],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19832,a[2]=((C_word)li301),tmp=(C_word)a,a+=3,tmp));
t20=C_mutate(&lf[454],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20214,a[2]=((C_word)li304),tmp=(C_word)a,a+=3,tmp));
t21=C_mutate(&lf[457],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20261,a[2]=((C_word)li306),tmp=(C_word)a,a+=3,tmp));
t22=C_mutate(&lf[476],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20612,a[2]=((C_word)li308),tmp=(C_word)a,a+=3,tmp));
t23=C_mutate(&lf[484],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20754,a[2]=((C_word)li310),tmp=(C_word)a,a+=3,tmp));
t24=C_mutate(&lf[498],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20947,a[2]=((C_word)li312),tmp=(C_word)a,a+=3,tmp));
t25=C_mutate(&lf[501],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21014,a[2]=((C_word)li313),tmp=(C_word)a,a+=3,tmp));
t26=C_mutate(&lf[504],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21052,a[2]=((C_word)li314),tmp=(C_word)a,a+=3,tmp));
t27=C_mutate(&lf[507],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21211,a[2]=((C_word)li320),tmp=(C_word)a,a+=3,tmp));
t28=C_mutate(&lf[536],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21757,a[2]=((C_word)li321),tmp=(C_word)a,a+=3,tmp));
t29=C_mutate(&lf[538],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21763,a[2]=((C_word)li322),tmp=(C_word)a,a+=3,tmp));
t30=C_mutate(&lf[544],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21829,a[2]=((C_word)li323),tmp=(C_word)a,a+=3,tmp));
t31=C_mutate(&lf[550],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21920,a[2]=((C_word)li324),tmp=(C_word)a,a+=3,tmp));
t32=C_mutate(&lf[553],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22021,a[2]=((C_word)li328),tmp=(C_word)a,a+=3,tmp));
t33=C_mutate(&lf[559],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22152,a[2]=((C_word)li333),tmp=(C_word)a,a+=3,tmp));
t34=C_mutate(&lf[565],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22566,a[2]=((C_word)li338),tmp=(C_word)a,a+=3,tmp));
t35=(C_word)C_a_i_list(&a,3,lf[485],C_retrieve2(lf[484],"parse-with"),C_SCHEME_FALSE);
t36=(C_word)C_a_i_list(&a,3,lf[396],C_retrieve2(lf[504],"parse-initially"),C_SCHEME_FALSE);
t37=(C_word)C_a_i_list(&a,3,lf[573],C_retrieve2(lf[454],"parse-repeat"),lf[570]);
t38=(C_word)C_a_i_list(&a,2,lf[432],C_retrieve2(lf[424],"parse-numerical-for"));
t39=(C_word)C_a_i_list(&a,2,lf[428],C_retrieve2(lf[424],"parse-numerical-for"));
t40=(C_word)C_a_i_list(&a,2,lf[430],C_retrieve2(lf[424],"parse-numerical-for"));
t41=(C_word)C_a_i_list(&a,2,lf[439],C_retrieve2(lf[424],"parse-numerical-for"));
t42=(C_word)C_a_i_list(&a,2,lf[429],C_retrieve2(lf[424],"parse-numerical-for"));
t43=(C_word)C_a_i_list(&a,2,lf[431],C_retrieve2(lf[424],"parse-numerical-for"));
t44=(C_word)C_a_i_list(&a,2,lf[464],C_retrieve2(lf[457],"parse-sequence-iteration"));
t45=(C_word)C_a_i_list(&a,2,lf[473],C_retrieve2(lf[457],"parse-sequence-iteration"));
t46=(C_word)C_a_i_list(&a,2,lf[458],C_retrieve2(lf[457],"parse-sequence-iteration"));
t47=(C_word)C_a_i_list(&a,2,lf[477],C_retrieve2(lf[476],"parse-general-iteration"));
t48=(C_word)C_a_i_list(&a,2,lf[463],C_retrieve2(lf[457],"parse-sequence-iteration"));
t49=(C_word)C_a_i_list(&a,14,lf[425],C_retrieve2(lf[416],"parse-for"),lf[570],t38,t39,t40,t41,t42,t43,t44,t45,t46,t47,t48);
t50=(C_word)C_a_i_list(&a,3,lf[574],C_retrieve2(lf[416],"parse-for"),lf[570]);
t51=(C_word)C_a_i_list(&a,3,lf[566],C_retrieve2(lf[498],"parse-do"),lf[557]);
t52=(C_word)C_a_i_list(&a,3,lf[518],C_retrieve2(lf[507],"parse-accumulation"),lf[557]);
t53=(C_word)C_a_i_list(&a,3,lf[18],C_retrieve2(lf[507],"parse-accumulation"),lf[557]);
t54=(C_word)C_a_i_list(&a,3,lf[523],C_retrieve2(lf[507],"parse-accumulation"),lf[557]);
t55=(C_word)C_a_i_list(&a,3,lf[508],C_retrieve2(lf[507],"parse-accumulation"),lf[557]);
t56=(C_word)C_a_i_list(&a,3,lf[509],C_retrieve2(lf[507],"parse-accumulation"),lf[557]);
t57=(C_word)C_a_i_list(&a,3,lf[511],C_retrieve2(lf[507],"parse-accumulation"),lf[557]);
t58=(C_word)C_a_i_list(&a,3,lf[512],C_retrieve2(lf[507],"parse-accumulation"),lf[557]);
t59=(C_word)C_a_i_list(&a,4,lf[545],C_retrieve2(lf[544],"parse-thereis"),lf[557],C_retrieve2(lf[536],"loop-return"));
t60=(C_word)C_a_i_list(&a,4,lf[546],C_retrieve2(lf[544],"parse-thereis"),lf[557],C_retrieve2(lf[536],"loop-return"));
t61=(C_word)C_a_i_list(&a,4,lf[547],C_retrieve2(lf[544],"parse-thereis"),lf[557],C_retrieve2(lf[536],"loop-return"));
t62=(C_word)C_a_i_list(&a,4,lf[537],C_retrieve2(lf[550],"parse-return"),lf[557],C_retrieve2(lf[536],"loop-return"));
t63=(C_word)C_a_i_list(&a,3,lf[541],C_retrieve2(lf[538],"parse-while-until"),C_SCHEME_FALSE);
t64=(C_word)C_a_i_list(&a,3,lf[540],C_retrieve2(lf[538],"parse-while-until"),C_SCHEME_FALSE);
t65=(C_word)C_a_i_list(&a,3,lf[11],C_retrieve2(lf[559],"parse-conditional"),lf[557]);
t66=(C_word)C_a_i_list(&a,3,lf[6],C_retrieve2(lf[559],"parse-conditional"),lf[557]);
t67=(C_word)C_a_i_list(&a,3,lf[20],C_retrieve2(lf[559],"parse-conditional"),lf[557]);
t68=(C_word)C_a_i_list(&a,3,lf[400],C_retrieve2(lf[501],"parse-finally"),C_SCHEME_FALSE);
t69=(C_word)C_a_i_list(&a,23,t35,t36,t37,t49,t50,t51,t52,t53,t54,t55,t56,t57,t58,t59,t60,t61,t62,t63,t64,t65,t66,t67,t68);
t70=C_mutate(&lf[575],t69);
t71=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22760,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t72=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28962,a[2]=((C_word)li465),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 370  ##sys#register-macro-2");
t73=C_retrieve(lf[714]);
((C_proc4)C_retrieve_proc(t73))(4,t73,t71,lf[570],t72);}

/* a28961 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_28962(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_28962,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22766,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 370  parse-iteration");
f_22566(t3,lf[570],t2,C_retrieve2(lf[575],"*loop-operators*"));}

/* k22764 in a28961 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_22766(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22766,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22769,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_assoc(lf[537],C_retrieve2(lf[575],"*loop-operators*"));
t4=(C_word)C_i_cadddr(t3);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22898,a[2]=t4,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 370  loop-returning");
t6=C_retrieve2(lf[391],"loop-returning");
f_19338(3,t6,t5,t1);}

/* k22896 in k22764 in a28961 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_22898(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22898,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=(C_word)C_a_i_list(&a,1,t2);
C_apply(4,0,((C_word*)t0)[3],((C_word*)t0)[2],t3);}

/* k22767 in k22764 in a28961 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_22769(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22769,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22780,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 370  loop-bindings");
t3=C_retrieve2(lf[383],"loop-bindings");
f_19254(3,t3,t2,((C_word*)t0)[2]);}

/* k22778 in k22767 in k22764 in a28961 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_22780(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22780,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22784,a[2]=((C_word*)t0)[4],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22788,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 370  loop-initially");
t4=C_retrieve2(lf[385],"loop-initially");
f_19278(3,t4,t3,((C_word*)t0)[2]);}

/* k22786 in k22778 in k22767 in k22764 in a28961 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_22788(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22788,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22808,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22812,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 370  loop-end-tests");
t4=C_retrieve2(lf[386],"loop-end-tests");
f_19290(3,t4,t3,((C_word*)t0)[2]);}

/* k22810 in k22786 in k22778 in k22767 in k22764 in a28961 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_22812(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22812,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22815,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
if(C_truep(t1)){
t3=(C_word)C_i_cdr(t1);
t4=(C_truep(t3)?(C_word)C_a_i_cons(&a,2,lf[311],t1):(C_word)C_i_car(t1));
t5=(C_word)C_a_i_list(&a,2,lf[680],lf[274]);
t6=(C_word)C_a_i_list(&a,3,lf[20],t4,t5);
t7=t2;
f_22815(t7,(C_word)C_a_i_list(&a,1,t6));}
else{
t3=t2;
f_22815(t3,C_SCHEME_END_OF_LIST);}}

/* k22813 in k22810 in k22786 in k22778 in k22767 in k22764 in a28961 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_22815(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22815,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22819,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22823,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 370  loop-looping");
t4=C_retrieve2(lf[387],"loop-looping");
f_19302(3,t4,t3,((C_word*)t0)[2]);}

/* k22821 in k22813 in k22810 in k22786 in k22778 in k22767 in k22764 in a28961 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_22823(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22823,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22827,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22831,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 370  loop-stepping");
t4=C_retrieve2(lf[389],"loop-stepping");
f_19314(3,t4,t3,((C_word*)t0)[2]);}

/* k22829 in k22821 in k22813 in k22810 in k22786 in k22778 in k22767 in k22764 in a28961 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_22831(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22831,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,lf[680],lf[710]);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22847,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22851,a[2]=t3,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 370  loop-finally");
t5=C_retrieve2(lf[390],"loop-finally");
f_19326(3,t5,t4,((C_word*)t0)[2]);}

/* k22849 in k22829 in k22821 in k22813 in k22810 in k22786 in k22778 in k22767 in k22764 in a28961 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_22851(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22851,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)t0)[3]);
C_trace("##sys#append");
t3=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[2],t1,t2);}

/* k22845 in k22829 in k22821 in k22813 in k22810 in k22786 in k22778 in k22767 in k22764 in a28961 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_22847(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22847,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[274],t1);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t2);
C_trace("##sys#append");
t4=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,((C_word*)t0)[3],((C_word*)t0)[2],t3);}

/* k22825 in k22821 in k22813 in k22810 in k22786 in k22778 in k22767 in k22764 in a28961 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_22827(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("##sys#append");
t2=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k22817 in k22813 in k22810 in k22786 in k22778 in k22767 in k22764 in a28961 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_22819(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("##sys#append");
t2=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k22806 in k22786 in k22778 in k22767 in k22764 in a28961 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_22808(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22808,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[710],t1);
t3=(C_word)C_a_i_cons(&a,2,lf[711],t2);
t4=(C_word)C_a_i_list(&a,3,lf[712],lf[713],t3);
t5=(C_word)C_a_i_list(&a,1,t4);
C_trace("##sys#append");
t6=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t6+1)))(4,t6,((C_word*)t0)[3],((C_word*)t0)[2],t5);}

/* k22782 in k22778 in k22767 in k22764 in a28961 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_22784(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22784,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,lf[1],t2));}

/* k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_22760(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word t36;
C_word t37;
C_word t38;
C_word t39;
C_word t40;
C_word t41;
C_word ab[117],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22760,2,t0,t1);}
t2=C_mutate((C_word*)lf[576]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22904,a[2]=((C_word)li340),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate((C_word*)lf[581]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23633,a[2]=((C_word)li342),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate((C_word*)lf[582]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23652,a[2]=((C_word)li344),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate((C_word*)lf[583]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24103,a[2]=((C_word)li346),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate((C_word*)lf[584]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24122,a[2]=((C_word)li348),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate((C_word*)lf[586]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24851,a[2]=((C_word)li350),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate((C_word*)lf[587]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24870,a[2]=((C_word)li352),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate((C_word*)lf[589]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25599,a[2]=((C_word)li354),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate((C_word*)lf[590]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25618,a[2]=((C_word)li356),tmp=(C_word)a,a+=3,tmp));
t11=C_mutate((C_word*)lf[591]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26069,a[2]=((C_word)li358),tmp=(C_word)a,a+=3,tmp));
t12=C_mutate((C_word*)lf[592]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26088,a[2]=((C_word)li360),tmp=(C_word)a,a+=3,tmp));
t13=C_mutate((C_word*)lf[593]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26539,a[2]=((C_word)li362),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate((C_word*)lf[594]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26558,a[2]=((C_word)li364),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate((C_word*)lf[595]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27028,a[2]=((C_word)li366),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate((C_word*)lf[596]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27046,a[2]=((C_word)li368),tmp=(C_word)a,a+=3,tmp));
t17=C_mutate((C_word*)lf[597]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27061,a[2]=((C_word)li370),tmp=(C_word)a,a+=3,tmp));
t18=C_mutate((C_word*)lf[598]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27076,a[2]=((C_word)li372),tmp=(C_word)a,a+=3,tmp));
t19=C_mutate((C_word*)lf[599]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27095,a[2]=((C_word)li374),tmp=(C_word)a,a+=3,tmp));
t20=C_mutate((C_word*)lf[600]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27110,a[2]=((C_word)li376),tmp=(C_word)a,a+=3,tmp));
t21=C_mutate((C_word*)lf[601]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27129,a[2]=((C_word)li378),tmp=(C_word)a,a+=3,tmp));
t22=C_mutate((C_word*)lf[602]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27148,a[2]=((C_word)li380),tmp=(C_word)a,a+=3,tmp));
t23=C_mutate((C_word*)lf[603]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27171,a[2]=((C_word)li382),tmp=(C_word)a,a+=3,tmp));
t24=C_mutate((C_word*)lf[604]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27190,a[2]=((C_word)li384),tmp=(C_word)a,a+=3,tmp));
t25=C_mutate((C_word*)lf[605]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27213,a[2]=((C_word)li387),tmp=(C_word)a,a+=3,tmp));
t26=C_mutate((C_word*)lf[607]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27260,a[2]=((C_word)li390),tmp=(C_word)a,a+=3,tmp));
t27=C_mutate((C_word*)lf[609]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27315,a[2]=((C_word)li392),tmp=(C_word)a,a+=3,tmp));
t28=C_mutate((C_word*)lf[610]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27334,a[2]=((C_word)li394),tmp=(C_word)a,a+=3,tmp));
t29=C_mutate((C_word*)lf[611]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27357,a[2]=((C_word)li396),tmp=(C_word)a,a+=3,tmp));
t30=C_mutate((C_word*)lf[612]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27385,a[2]=((C_word)li398),tmp=(C_word)a,a+=3,tmp));
t31=C_mutate((C_word*)lf[613]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27413,a[2]=((C_word)li400),tmp=(C_word)a,a+=3,tmp));
t32=C_mutate((C_word*)lf[614]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27441,a[2]=((C_word)li402),tmp=(C_word)a,a+=3,tmp));
t33=C_mutate((C_word*)lf[615]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27469,a[2]=((C_word)li404),tmp=(C_word)a,a+=3,tmp));
t34=C_mutate((C_word*)lf[616]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27497,a[2]=((C_word)li406),tmp=(C_word)a,a+=3,tmp));
t35=C_mutate((C_word*)lf[617]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27525,a[2]=((C_word)li408),tmp=(C_word)a,a+=3,tmp));
t36=C_mutate((C_word*)lf[618]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27553,a[2]=((C_word)li410),tmp=(C_word)a,a+=3,tmp));
t37=C_mutate((C_word*)lf[619]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27581,a[2]=((C_word)li412),tmp=(C_word)a,a+=3,tmp));
t38=C_mutate((C_word*)lf[620]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27609,a[2]=((C_word)li414),tmp=(C_word)a,a+=3,tmp));
t39=C_mutate((C_word*)lf[621]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27624,a[2]=((C_word)li421),tmp=(C_word)a,a+=3,tmp));
t40=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27682,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 371  hash-table-set!");
t41=C_retrieve(lf[681]);
((C_proc5)C_retrieve_proc(t41))(5,t41,t40,C_retrieve(lf[29]),lf[708],lf[709]);}

/* k27680 in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_27682(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27682,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27685,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 371  hash-table-set!");
t3=C_retrieve(lf[681]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[706],lf[707]);}

/* k27683 in k27680 in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_27685(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27685,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27688,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 371  hash-table-set!");
t3=C_retrieve(lf[681]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[704],lf[705]);}

/* k27686 in k27683 in k27680 in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_27688(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27688,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27691,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 371  hash-table-set!");
t3=C_retrieve(lf[681]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[702],lf[703]);}

/* k27689 in k27686 in k27683 in k27680 in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_27691(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27691,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27694,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 371  hash-table-set!");
t3=C_retrieve(lf[681]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[700],lf[701]);}

/* k27692 in k27689 in k27686 in k27683 in k27680 in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_27694(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27694,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27697,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 371  hash-table-set!");
t3=C_retrieve(lf[681]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[698],lf[699]);}

/* k27695 in k27692 in k27689 in k27686 in k27683 in k27680 in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_27697(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27697,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27700,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 371  hash-table-set!");
t3=C_retrieve(lf[681]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[696],lf[697]);}

/* k27698 in k27695 in k27692 in k27689 in k27686 in k27683 in k27680 in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_27700(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27700,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27703,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 371  hash-table-set!");
t3=C_retrieve(lf[681]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[694],lf[695]);}

/* k27701 in k27698 in k27695 in k27692 in k27689 in k27686 in k27683 in k27680 in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_27703(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27703,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27706,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 371  hash-table-set!");
t3=C_retrieve(lf[681]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[692],lf[693]);}

/* k27704 in k27701 in k27698 in k27695 in k27692 in k27689 in k27686 in k27683 in k27680 in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_27706(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27706,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27709,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 371  hash-table-set!");
t3=C_retrieve(lf[681]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[690],lf[691]);}

/* k27707 in k27704 in k27701 in k27698 in k27695 in k27692 in k27689 in k27686 in k27683 in k27680 in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_27709(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27709,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27712,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 371  hash-table-set!");
t3=C_retrieve(lf[681]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[688],lf[689]);}

/* k27710 in k27707 in k27704 in k27701 in k27698 in k27695 in k27692 in k27689 in k27686 in k27683 in k27680 in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_27712(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27712,2,t0,t1);}
t2=C_mutate((C_word*)lf[628]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27714,a[2]=((C_word)li423),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate((C_word*)lf[629]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27771,a[2]=((C_word)li425),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate((C_word*)lf[630]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27828,a[2]=((C_word)li427),tmp=(C_word)a,a+=3,tmp));
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27837,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 372  hash-table-set!");
t6=C_retrieve(lf[681]);
((C_proc5)C_retrieve_proc(t6))(5,t6,t5,C_retrieve(lf[29]),lf[686],lf[687]);}

/* k27835 in k27710 in k27707 in k27704 in k27701 in k27698 in k27695 in k27692 in k27689 in k27686 in k27683 in k27680 in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_27837(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27837,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27840,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 372  hash-table-set!");
t3=C_retrieve(lf[681]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[684],lf[685]);}

/* k27838 in k27835 in k27710 in k27707 in k27704 in k27701 in k27698 in k27695 in k27692 in k27689 in k27686 in k27683 in k27680 in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_27840(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27840,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27843,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 372  hash-table-set!");
t3=C_retrieve(lf[681]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[682],lf[683]);}

/* k27841 in k27838 in k27835 in k27710 in k27707 in k27704 in k27701 in k27698 in k27695 in k27692 in k27689 in k27686 in k27683 in k27680 in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_27843(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[54],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27843,2,t0,t1);}
t2=C_mutate((C_word*)lf[631]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27845,a[2]=((C_word)li430),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate((C_word*)lf[360]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28035,a[2]=((C_word)li431),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate((C_word*)lf[349]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28049,a[2]=((C_word)li432),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate((C_word*)lf[639]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28063,a[2]=((C_word)li433),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate((C_word*)lf[640]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28066,a[2]=((C_word)li434),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate(&lf[641],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28078,a[2]=((C_word)li436),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate(&lf[643],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28087,a[2]=((C_word)li438),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate(&lf[644],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28131,a[2]=((C_word)li440),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate((C_word*)lf[371]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28153,a[2]=((C_word)li442),tmp=(C_word)a,a+=3,tmp));
t11=C_mutate((C_word*)lf[645]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28172,a[2]=((C_word)li449),tmp=(C_word)a,a+=3,tmp));
t12=C_mutate((C_word*)lf[648]+1,C_retrieve(lf[640]));
t13=C_mutate((C_word*)lf[649]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28340,a[2]=((C_word)li451),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate((C_word*)lf[655]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28403,a[2]=((C_word)li453),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate((C_word*)lf[656]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28412,a[2]=((C_word)li455),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate((C_word*)lf[657]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28418,a[2]=((C_word)li457),tmp=(C_word)a,a+=3,tmp));
t17=C_mutate((C_word*)lf[658]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28427,a[2]=((C_word)li459),tmp=(C_word)a,a+=3,tmp));
t18=C_mutate((C_word*)lf[660]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28485,a[2]=((C_word)li461),tmp=(C_word)a,a+=3,tmp));
t19=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28495,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t20=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28956,a[2]=((C_word)li464),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 547  ##sys#register-macro");
t21=C_retrieve(lf[679]);
((C_proc4)C_retrieve_proc(t21))(4,t21,t19,lf[680],t20);}

/* a28955 in k27841 in k27838 in k27835 in k27710 in k27707 in k27704 in k27701 in k27698 in k27695 in k27692 in k27689 in k27686 in k27683 in k27680 in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_28956(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...){
C_word tmp;
C_word t4;
va_list v;
C_word *a,c2=c;
C_save_rest(t3,c2,4);
if(c<4) C_bad_min_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+17)){
C_save_and_reclaim((void*)tr4r,(void*)f_28956r,4,t0,t1,t2,t3);}
else{
a=C_alloc((c-4)*3);
t4=C_restore_rest(a,C_rest_count(0));
f_28956r(t0,t1,t2,t3,t4);}}

static void C_ccall f_28956r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word *a=C_alloc(17);
t5=t4;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_END_OF_LIST;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_END_OF_LIST;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_END_OF_LIST;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_28510,a[2]=t2,a[3]=t12,a[4]=t6,a[5]=t10,a[6]=t1,a[7]=t8,a[8]=t3,tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_listp(t2))){
t14=t13;
f_28510(2,t14,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 556  error");
t14=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t14))(4,t14,t13,lf[678],t2);}}

/* k28508 in a28955 in k27841 in k27838 in k27835 in k27710 in k27707 in k27704 in k27701 in k27698 in k27695 in k27692 in k27689 in k27686 in k27683 in k27680 in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_28510(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28510,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_28513,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_listp(((C_word*)t0)[8]))){
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[8]))){
C_trace("ChickenBridge.scm: 560  error");
t3=*((C_word*)lf[4]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[676]);}
else{
t3=t2;
f_28513(2,t3,C_SCHEME_UNDEFINED);}}
else{
C_trace("ChickenBridge.scm: 558  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[677],((C_word*)t0)[8]);}}

/* k28511 in k28508 in a28955 in k27841 in k27838 in k27835 in k27710 in k27707 in k27704 in k27701 in k27698 in k27695 in k27692 in k27689 in k27686 in k27683 in k27680 in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_28513(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28513,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28516,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28791,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[7],a[5]=t4,a[6]=((C_word)li463),tmp=(C_word)a,a+=7,tmp));
t6=((C_word*)t4)[1];
f_28791(t6,t2,((C_word*)t0)[2]);}

/* do5251 in k28511 in k28508 in a28955 in k27841 in k27838 in k27835 in k27710 in k27707 in k27704 in k27701 in k27698 in k27695 in k27692 in k27689 in k27686 in k27683 in k27680 in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_28791(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28791,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28801,a[2]=t1,a[3]=((C_word*)t0)[5],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28811,a[2]=t3,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=t2,tmp=(C_word)a,a+=7,tmp);
t5=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_pairp(t5))){
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28899,a[2]=t4,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_car(t2);
t8=(C_word)C_i_length(t7);
C_trace("ChickenBridge.scm: 564  <");
C_lessp(5,0,t6,C_fix(0),t8,C_fix(4));}
else{
t6=t4;
f_28811(t6,C_SCHEME_FALSE);}}}

/* k28897 in do5251 in k28511 in k28508 in a28955 in k27841 in k27838 in k27835 in k27710 in k27707 in k27704 in k27701 in k27698 in k27695 in k27692 in k27689 in k27686 in k27683 in k27680 in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_28899(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=(C_word)C_i_car(t2);
t4=((C_word*)t0)[2];
f_28811(t4,(C_word)C_i_symbolp(t3));}
else{
t2=((C_word*)t0)[2];
f_28811(t2,C_SCHEME_FALSE);}}

/* k28809 in do5251 in k28511 in k28508 in a28955 in k27841 in k27838 in k27835 in k27710 in k27707 in k27704 in k27701 in k27698 in k27695 in k27692 in k27689 in k27686 in k27683 in k27680 in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_28811(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28811,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[6]);
t3=(C_word)C_i_car(t2);
t4=(C_word)C_i_car(((C_word*)t0)[6]);
t5=(C_word)C_i_cadr(t4);
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28820,a[2]=t5,a[3]=t3,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],tmp=(C_word)a,a+=8,tmp);
t7=(C_word)C_i_car(((C_word*)t0)[6]);
t8=(C_word)C_i_cddr(t7);
if(C_truep((C_word)C_i_nullp(t8))){
t9=t6;
f_28820(t9,lf[674]);}
else{
t9=(C_word)C_i_car(((C_word*)t0)[6]);
t10=t6;
f_28820(t10,(C_word)C_i_caddr(t9));}}
else{
t2=(C_word)C_i_car(((C_word*)t0)[6]);
C_trace("ChickenBridge.scm: 577  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[2],lf[675],t2);}}

/* k28818 in k28809 in do5251 in k28511 in k28508 in a28955 in k27841 in k27838 in k27835 in k27710 in k27707 in k27704 in k27701 in k27698 in k27695 in k27692 in k27689 in k27686 in k27683 in k27680 in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_28820(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28820,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_28824,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
t3=(C_word)C_a_i_list(&a,1,((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 572  append");
t4=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,((C_word*)((C_word*)t0)[7])[1],t3);}

/* k28822 in k28818 in k28809 in do5251 in k28511 in k28508 in a28955 in k27841 in k27838 in k27835 in k27710 in k27707 in k27704 in k27701 in k27698 in k27695 in k27692 in k27689 in k27686 in k27683 in k27680 in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_28824(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28824,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28828,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t4=(C_word)C_a_i_list(&a,1,((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 573  append");
t5=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,((C_word*)((C_word*)t0)[7])[1],t4);}

/* k28826 in k28822 in k28818 in k28809 in do5251 in k28511 in k28508 in a28955 in k27841 in k27838 in k27835 in k27710 in k27707 in k27704 in k27701 in k27698 in k27695 in k27692 in k27689 in k27686 in k27683 in k27680 in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_28828(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28828,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28832,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28836,a[2]=((C_word*)t0)[5],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_eqp(((C_word*)t0)[3],lf[674]);
if(C_truep(t5)){
t6=t4;
f_28836(t6,C_SCHEME_END_OF_LIST);}
else{
t6=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[2],((C_word*)t0)[3]);
t7=t4;
f_28836(t7,(C_word)C_a_i_list(&a,1,t6));}}

/* k28834 in k28826 in k28822 in k28818 in k28809 in do5251 in k28511 in k28508 in a28955 in k27841 in k27838 in k27835 in k27710 in k27707 in k27704 in k27701 in k27698 in k27695 in k27692 in k27689 in k27686 in k27683 in k27680 in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_28836(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 574  append");
t2=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k28830 in k28826 in k28822 in k28818 in k28809 in do5251 in k28511 in k28508 in a28955 in k27841 in k27838 in k27835 in k27710 in k27707 in k27704 in k27701 in k27698 in k27695 in k27692 in k27689 in k27686 in k27683 in k27680 in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_28832(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_28801(2,t3,t2);}

/* k28799 in do5251 in k28511 in k28508 in a28955 in k27841 in k27838 in k27835 in k27710 in k27707 in k27704 in k27701 in k27698 in k27695 in k27692 in k27689 in k27686 in k27683 in k27680 in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_28801(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_28791(t3,((C_word*)t0)[2],t2);}

/* k28514 in k28511 in k28508 in a28955 in k27841 in k27838 in k27835 in k27710 in k27707 in k27704 in k27701 in k27698 in k27695 in k27692 in k27689 in k27686 in k27683 in k27680 in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_28516(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28516,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28519,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 579  gensym");
t3=C_retrieve(lf[26]);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k28517 in k28514 in k28511 in k28508 in a28955 in k27841 in k27838 in k27835 in k27710 in k27707 in k27704 in k27701 in k27698 in k27695 in k27692 in k27689 in k27686 in k27683 in k27680 in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_28519(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28519,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_28522,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 580  gensym");
t3=C_retrieve(lf[26]);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k28520 in k28517 in k28514 in k28511 in k28508 in a28955 in k27841 in k27838 in k27835 in k27710 in k27707 in k27704 in k27701 in k27698 in k27695 in k27692 in k27689 in k27686 in k27683 in k27680 in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_28522(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28522,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_28525,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 581  gensym");
t3=C_retrieve(lf[26]);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k28523 in k28520 in k28517 in k28514 in k28511 in k28508 in a28955 in k27841 in k27838 in k27835 in k27710 in k27707 in k27704 in k27701 in k27698 in k27695 in k27692 in k27689 in k27686 in k27683 in k27680 in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_28525(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28525,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_28528,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 582  gensym");
t3=C_retrieve(lf[26]);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k28526 in k28523 in k28520 in k28517 in k28514 in k28511 in k28508 in a28955 in k27841 in k27838 in k27835 in k27710 in k27707 in k27704 in k27701 in k27698 in k27695 in k27692 in k27689 in k27686 in k27683 in k27680 in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_28528(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28528,2,t0,t1);}
t2=C_SCHEME_TRUE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_END_OF_LIST;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_28531,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=t3,a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[7],a[10]=((C_word*)t0)[8],a[11]=((C_word*)t0)[9],a[12]=t5,a[13]=((C_word*)t0)[10],tmp=(C_word)a,a+=14,tmp);
t7=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28684,a[2]=t6,a[3]=t3,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[3])[1]))){
t8=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
if(C_truep((C_word)C_i_pairp(t8))){
t9=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28785,a[2]=t7,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 588  caar");
t10=*((C_word*)lf[671]+1);
((C_proc3)C_retrieve_proc(t10))(3,t10,t9,((C_word*)((C_word*)t0)[3])[1]);}
else{
t9=t7;
f_28684(t9,C_SCHEME_FALSE);}}
else{
t8=t7;
f_28684(t8,C_SCHEME_FALSE);}}

/* k28783 in k28526 in k28523 in k28520 in k28517 in k28514 in k28511 in k28508 in a28955 in k27841 in k27838 in k27835 in k27710 in k27707 in k27704 in k27701 in k27698 in k27695 in k27692 in k27689 in k27686 in k27683 in k27680 in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_28785(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_28684(t2,(C_word)C_eqp(t1,lf[673]));}

/* k28682 in k28526 in k28523 in k28520 in k28517 in k28514 in k28511 in k28508 in a28955 in k27841 in k27838 in k27835 in k27710 in k27707 in k27704 in k27701 in k27698 in k27695 in k27692 in k27689 in k27686 in k27683 in k27680 in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_28684(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28684,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28691,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 589  cdar");
t3=*((C_word*)lf[669]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[4])[1]);}
else{
t2=((C_word*)t0)[2];
f_28531(2,t2,C_SCHEME_UNDEFINED);}}

/* k28689 in k28682 in k28526 in k28523 in k28520 in k28517 in k28514 in k28511 in k28508 in a28955 in k27841 in k27838 in k27835 in k27710 in k27707 in k27704 in k27701 in k27698 in k27695 in k27692 in k27689 in k27686 in k27683 in k27680 in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_28691(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28691,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28693,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word*)t0)[4],a[5]=((C_word)li462),tmp=(C_word)a,a+=6,tmp));
t5=((C_word*)t3)[1];
f_28693(t5,((C_word*)t0)[2],t1);}

/* do5267 in k28689 in k28682 in k28526 in k28523 in k28520 in k28517 in k28514 in k28511 in k28508 in a28955 in k27841 in k27838 in k27835 in k27710 in k27707 in k27704 in k27701 in k27698 in k27695 in k27692 in k27689 in k27686 in k27683 in k27680 in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_28693(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28693,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,t4);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28707,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28717,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=t3,tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_pairp(t5))){
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28765,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 593  cdar");
t7=*((C_word*)lf[669]+1);
((C_proc3)C_retrieve_proc(t7))(3,t7,t6,t2);}
else{
t6=t4;
f_28717(t6,C_SCHEME_FALSE);}}}

/* k28763 in do5267 in k28689 in k28682 in k28526 in k28523 in k28520 in k28517 in k28514 in k28511 in k28508 in a28955 in k27841 in k27838 in k27835 in k27710 in k27707 in k27704 in k27701 in k27698 in k27695 in k27692 in k27689 in k27686 in k27683 in k27680 in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_28765(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_28717(t2,(C_word)C_i_pairp(t1));}

/* k28715 in do5267 in k28689 in k28682 in k28526 in k28523 in k28520 in k28517 in k28514 in k28511 in k28508 in a28955 in k27841 in k27838 in k27835 in k27710 in k27707 in k27704 in k27701 in k27698 in k27695 in k27692 in k27689 in k27686 in k27683 in k27680 in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_28717(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28717,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28720,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 594  caar");
t3=*((C_word*)lf[671]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}
else{
t2=(C_word)C_i_car(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 600  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[4],lf[672],t2);}}

/* k28718 in k28715 in do5267 in k28689 in k28682 in k28526 in k28523 in k28520 in k28517 in k28514 in k28511 in k28508 in a28955 in k27841 in k27838 in k27835 in k27710 in k27707 in k27704 in k27701 in k27698 in k27695 in k27692 in k27689 in k27686 in k27683 in k27680 in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_28720(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28720,2,t0,t1);}
t2=(C_word)C_eqp(t1,lf[668]);
if(C_truep(t2)){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28741,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 596  cdar");
t4=*((C_word*)lf[669]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}
else{
t3=(C_word)C_i_car(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 599  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,((C_word*)t0)[4],lf[670],t3);}}

/* k28739 in k28718 in k28715 in do5267 in k28689 in k28682 in k28526 in k28523 in k28520 in k28517 in k28514 in k28511 in k28508 in a28955 in k27841 in k27838 in k27835 in k27710 in k27707 in k27704 in k27701 in k27698 in k27695 in k27692 in k27689 in k27686 in k27683 in k27680 in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_28741(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep((C_word)C_i_car(t1))){
t2=((C_word*)t0)[3];
f_28707(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=C_set_block_item(((C_word*)t0)[2],0,C_SCHEME_FALSE);
t3=((C_word*)t0)[3];
f_28707(2,t3,t2);}}

/* k28705 in do5267 in k28689 in k28682 in k28526 in k28523 in k28520 in k28517 in k28514 in k28511 in k28508 in a28955 in k27841 in k27838 in k27835 in k27710 in k27707 in k27704 in k27701 in k27698 in k27695 in k27692 in k27689 in k27686 in k27683 in k27680 in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_28707(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_28693(t3,((C_word*)t0)[2],t2);}

/* k28529 in k28526 in k28523 in k28520 in k28517 in k28514 in k28511 in k28508 in a28955 in k27841 in k27838 in k27835 in k27710 in k27707 in k27704 in k27701 in k27698 in k27695 in k27692 in k27689 in k27686 in k27683 in k27680 in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_28531(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28531,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)t0)[13]);
t3=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_28673,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=t2,tmp=(C_word)a,a+=14,tmp);
t4=(C_word)C_i_cdr(((C_word*)t0)[13]);
t5=(C_word)C_a_i_list(&a,1,C_fix(-1));
C_trace("ChickenBridge.scm: 551  ##sys#append");
t6=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t6+1)))(4,t6,t3,t4,t5);}

/* k28671 in k28529 in k28526 in k28523 in k28520 in k28517 in k28514 in k28511 in k28508 in a28955 in k27841 in k27838 in k27835 in k27710 in k27707 in k27704 in k27701 in k27698 in k27695 in k27692 in k27689 in k27686 in k27683 in k27680 in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_28673(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28673,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[13],t1);
t3=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_28657,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[12],a[11]=t2,tmp=(C_word)a,a+=12,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28661,a[2]=((C_word*)t0)[3],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_a_i_list(&a,1,((C_word*)t0)[10]);
C_trace("ChickenBridge.scm: 551  ##sys#append");
t6=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t6+1)))(4,t6,t4,((C_word*)((C_word*)t0)[2])[1],t5);}

/* k28659 in k28671 in k28529 in k28526 in k28523 in k28520 in k28517 in k28514 in k28511 in k28508 in a28955 in k27841 in k27838 in k27835 in k27710 in k27707 in k27704 in k27701 in k27698 in k27695 in k27692 in k27689 in k27686 in k27683 in k27680 in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_28661(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 551  ##sys#append");
t2=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k28655 in k28671 in k28529 in k28526 in k28523 in k28520 in k28517 in k28514 in k28511 in k28508 in a28955 in k27841 in k27838 in k27835 in k27710 in k27707 in k27704 in k27701 in k27698 in k27695 in k27692 in k27689 in k27686 in k27683 in k27680 in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_28657(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[122],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28657,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[16],t1);
t3=(C_word)C_a_i_list(&a,3,lf[662],((C_word*)t0)[11],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[10])+1,t3);
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28538,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
t6=(C_word)C_a_i_list(&a,1,((C_word*)t0)[3]);
t7=(C_word)C_a_i_list(&a,1,((C_word*)t0)[2]);
t8=(C_word)C_a_i_list(&a,2,lf[465],lf[624]);
t9=(C_word)C_a_i_list(&a,2,lf[465],lf[625]);
t10=(C_word)C_a_i_list(&a,3,lf[623],t8,t9);
t11=(C_word)C_a_i_list(&a,2,t10,((C_word*)t0)[2]);
t12=(C_word)C_a_i_list(&a,4,lf[31],lf[667],t11,((C_word*)t0)[9]);
t13=(C_word)C_a_i_list(&a,2,lf[349],t12);
t14=(C_word)C_a_i_list(&a,2,((C_word*)t0)[3],C_fix(-2));
t15=(C_word)C_a_i_list(&a,4,lf[663],t7,t13,t14);
t16=(C_word)C_a_i_list(&a,3,lf[663],C_SCHEME_END_OF_LIST,((C_word*)((C_word*)t0)[10])[1]);
t17=(C_word)C_a_i_list(&a,3,lf[626],t15,t16);
t18=(C_word)C_a_i_list(&a,3,lf[663],t6,t17);
t19=(C_word)C_a_i_list(&a,2,lf[627],t18);
t20=C_mutate(((C_word *)((C_word*)t0)[10])+1,t19);
t21=t5;
f_28538(t21,t20);}
else{
t6=t5;
f_28538(t6,C_SCHEME_UNDEFINED);}}

/* k28536 in k28655 in k28671 in k28529 in k28526 in k28523 in k28520 in k28517 in k28514 in k28511 in k28508 in a28955 in k27841 in k27838 in k27835 in k27710 in k27707 in k27704 in k27701 in k27698 in k27695 in k27692 in k27689 in k27686 in k27683 in k27680 in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_28538(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[90],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28538,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)t0)[7]);
t3=(C_word)C_a_i_list(&a,2,((C_word*)t0)[6],C_fix(0));
t4=(C_word)C_a_i_list(&a,3,lf[663],C_SCHEME_END_OF_LIST,((C_word*)t0)[7]);
t5=(C_word)C_a_i_list(&a,2,lf[664],t4);
t6=(C_word)C_a_i_list(&a,1,lf[665]);
t7=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[6],lf[665]);
t8=(C_word)C_a_i_list(&a,3,lf[663],t6,t7);
t9=(C_word)C_a_i_list(&a,2,lf[666],t8);
t10=(C_word)C_a_i_list(&a,3,t3,t5,t9);
t11=(C_word)C_a_i_list(&a,3,lf[2],t10,((C_word*)((C_word*)t0)[5])[1]);
t12=(C_word)C_a_i_list(&a,3,lf[663],t2,t11);
t13=(C_word)C_a_i_list(&a,3,lf[663],((C_word*)((C_word*)t0)[4])[1],t12);
t14=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t14+1)))(2,t14,(C_word)C_a_i_cons(&a,2,t13,((C_word*)((C_word*)t0)[2])[1]));}

/* k28493 in k27841 in k27838 in k27835 in k27710 in k27707 in k27704 in k27701 in k27698 in k27695 in k27692 in k27689 in k27686 in k27683 in k27680 in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_28495(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28495,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28954,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 645  return-to-host");
t3=C_retrieve(lf[661]);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k28952 in k28493 in k27841 in k27838 in k27835 in k27710 in k27707 in k27704 in k27701 in k27698 in k27695 in k27692 in k27689 in k27686 in k27683 in k27680 in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_28954(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}

/* hush in k27841 in k27838 in k27835 in k27710 in k27707 in k27704 in k27701 in k27698 in k27695 in k27692 in k27689 in k27686 in k27683 in k27680 in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_28485(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28485,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28489,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28148,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("##sys#gc");
t4=C_retrieve(lf[642]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,C_SCHEME_FALSE);}

/* k28146 in hush in k27841 in k27838 in k27835 in k27710 in k27707 in k27704 in k27701 in k27698 in k27695 in k27692 in k27689 in k27686 in k27683 in k27680 in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_28148(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28148,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub5177,a[2]=((C_word)li460),tmp=(C_word)a,a+=3,tmp);
((C_proc3)C_retrieve_proc(t3))(3,t3,((C_word*)t0)[2],t2);}

/* k28487 in hush in k27841 in k27838 in k27835 in k27710 in k27707 in k27704 in k27701 in k27698 in k27695 in k27692 in k27689 in k27686 in k27683 in k27680 in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_28489(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 541  values");
C_values(2,0,((C_word*)t0)[2]);}

/* stop in k27841 in k27838 in k27835 in k27710 in k27707 in k27704 in k27701 in k27698 in k27695 in k27692 in k27689 in k27686 in k27683 in k27680 in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_28427(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+9)){
C_save_and_reclaim((void*)tr2r,(void*)f_28427r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_28427r(t0,t1,t2);}}

static void C_ccall f_28427r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a=C_alloc(9);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28431,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 531  scheduler-stop");
f_28131(t3,C_fix(-1));}
else{
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28445,a[2]=t5,a[3]=((C_word)li458),tmp=(C_word)a,a+=4,tmp));
t7=((C_word*)t5)[1];
f_28445(t7,t3,t2);}}

/* do5235 in stop in k27841 in k27838 in k27835 in k27710 in k27707 in k27704 in k27701 in k27698 in k27695 in k27692 in k27689 in k27686 in k27683 in k27680 in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_28445(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28445,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28455,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
if(C_truep((C_word)C_fixnump(t4))){
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 535  scheduler-stop");
f_28131(t3,t5);}
else{
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 536  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t3,lf[659],t5);}}}

/* k28453 in do5235 in stop in k27841 in k27838 in k27835 in k27710 in k27707 in k27704 in k27701 in k27698 in k27695 in k27692 in k27689 in k27686 in k27683 in k27680 in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_28455(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_28445(t3,((C_word*)t0)[2],t2);}

/* k28429 in stop in k27841 in k27838 in k27835 in k27710 in k27707 in k27704 in k27701 in k27698 in k27695 in k27692 in k27689 in k27686 in k27683 in k27680 in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_28431(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 537  values");
C_values(2,0,((C_word*)t0)[2]);}

/* cont in k27841 in k27838 in k27835 in k27710 in k27707 in k27704 in k27701 in k27698 in k27695 in k27692 in k27689 in k27686 in k27683 in k27680 in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_28418(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28418,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28422,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28126,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("##sys#gc");
t4=C_retrieve(lf[642]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,C_SCHEME_FALSE);}

/* k28124 in cont in k27841 in k27838 in k27835 in k27710 in k27707 in k27704 in k27701 in k27698 in k27695 in k27692 in k27689 in k27686 in k27683 in k27680 in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_28126(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28126,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub5167,a[2]=((C_word)li456),tmp=(C_word)a,a+=3,tmp);
((C_proc3)C_retrieve_proc(t3))(3,t3,((C_word*)t0)[2],t2);}

/* k28420 in cont in k27841 in k27838 in k27835 in k27710 in k27707 in k27704 in k27701 in k27698 in k27695 in k27692 in k27689 in k27686 in k27683 in k27680 in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_28422(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 527  values");
C_values(2,0,((C_word*)t0)[2]);}

/* paused? in k27841 in k27838 in k27835 in k27710 in k27707 in k27704 in k27701 in k27698 in k27695 in k27692 in k27689 in k27686 in k27683 in k27680 in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_28412(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28412,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28108,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("##sys#gc");
t3=C_retrieve(lf[642]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,C_SCHEME_FALSE);}

/* k28106 in paused? in k27841 in k27838 in k27835 in k27710 in k27707 in k27704 in k27701 in k27698 in k27695 in k27692 in k27689 in k27686 in k27683 in k27680 in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_28108(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28108,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub5159,a[2]=((C_word)li454),tmp=(C_word)a,a+=3,tmp);
((C_proc3)C_retrieve_proc(t3))(3,t3,((C_word*)t0)[2],t2);}

/* pause in k27841 in k27838 in k27835 in k27710 in k27707 in k27704 in k27701 in k27698 in k27695 in k27692 in k27689 in k27686 in k27683 in k27680 in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_28403(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28403,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28407,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28117,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("##sys#gc");
t4=C_retrieve(lf[642]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,C_SCHEME_FALSE);}

/* k28115 in pause in k27841 in k27838 in k27835 in k27710 in k27707 in k27704 in k27701 in k27698 in k27695 in k27692 in k27689 in k27686 in k27683 in k27680 in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_28117(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28117,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub5163,a[2]=((C_word)li452),tmp=(C_word)a,a+=3,tmp);
((C_proc3)C_retrieve_proc(t3))(3,t3,((C_word*)t0)[2],t2);}

/* k28405 in pause in k27841 in k27838 in k27835 in k27710 in k27707 in k27704 in k27701 in k27698 in k27695 in k27692 in k27689 in k27686 in k27683 in k27680 in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_28407(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 520  values");
C_values(2,0,((C_word*)t0)[2]);}

/* time-format in k27841 in k27838 in k27835 in k27710 in k27707 in k27704 in k27701 in k27698 in k27695 in k27692 in k27689 in k27686 in k27683 in k27680 in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_28340(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+11)){
C_save_and_reclaim((void*)tr2rv,(void*)f_28340r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest_vector(a,C_rest_count(0));
f_28340r(t0,t1,t2);}}

static void C_ccall f_28340r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(11);
if(C_truep((C_word)C_vemptyp(t2))){
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28353,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28073,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
C_trace("##sys#gc");
t5=C_retrieve(lf[642]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,C_SCHEME_FALSE);}
else{
t3=(C_word)C_i_vector_ref(t2,C_fix(0));
t4=(C_word)C_i_eqvp(t3,lf[651]);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28365,a[2]=t2,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
if(C_truep(t4)){
t6=t5;
f_28365(t6,t4);}
else{
t6=(C_word)C_eqp(t3,C_fix(1));
t7=t5;
f_28365(t7,(C_truep(t6)?t6:(C_word)C_eqp(t3,lf[654])));}}}

/* k28363 in time-format in k27841 in k27838 in k27835 in k27710 in k27707 in k27704 in k27701 in k27698 in k27695 in k27692 in k27689 in k27686 in k27683 in k27680 in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_28365(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
if(C_truep(t1)){
t2=C_mutate((C_word*)lf[648]+1,C_retrieve(lf[640]));
C_trace("ChickenBridge.scm: 509  scheduler-set-time-milliseconds");
f_28078(((C_word*)t0)[4],C_SCHEME_FALSE);}
else{
t2=(C_word)C_eqp(((C_word*)t0)[3],C_fix(1000));
t3=(C_truep(t2)?t2:(C_word)C_eqp(((C_word*)t0)[3],lf[652]));
if(C_truep(t3)){
t4=C_mutate((C_word*)lf[648]+1,C_retrieve(lf[639]));
C_trace("ChickenBridge.scm: 513  scheduler-set-time-milliseconds");
f_28078(((C_word*)t0)[4],C_SCHEME_TRUE);}
else{
t4=(C_word)C_i_vector_ref(((C_word*)t0)[2],C_fix(0));
C_trace("ChickenBridge.scm: 516  error");
t5=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,((C_word*)t0)[4],lf[653],t4);}}}

/* k28071 in time-format in k27841 in k27838 in k27835 in k27710 in k27707 in k27704 in k27701 in k27698 in k27695 in k27692 in k27689 in k27686 in k27683 in k27680 in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_28073(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28073,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub5139,a[2]=((C_word)li450),tmp=(C_word)a,a+=3,tmp);
((C_proc3)C_retrieve_proc(t3))(3,t3,((C_word*)t0)[2],t2);}

/* k28351 in time-format in k27841 in k27838 in k27835 in k27710 in k27707 in k27704 in k27701 in k27698 in k27695 in k27692 in k27689 in k27686 in k27683 in k27680 in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_28353(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_truep(t1)?C_fix(1000):lf[650]));}

/* sprout in k27841 in k27838 in k27835 in k27710 in k27707 in k27704 in k27701 in k27698 in k27695 in k27692 in k27689 in k27686 in k27683 in k27680 in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_28172(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+12)){
C_save_and_reclaim((void*)tr3r,(void*)f_28172r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_28172r(t0,t1,t2,t3);}}

static void C_ccall f_28172r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a=C_alloc(12);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28174,a[2]=t2,a[3]=((C_word)li446),tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28286,a[2]=t4,a[3]=((C_word)li447),tmp=(C_word)a,a+=4,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28291,a[2]=t5,a[3]=((C_word)li448),tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("def-start51945215");
t7=t6;
f_28291(t7,t1);}
else{
t7=(C_word)C_i_car(t3);
t8=(C_word)C_i_cdr(t3);
if(C_truep((C_word)C_i_nullp(t8))){
C_trace("def-id51955213");
t9=t5;
f_28286(t9,t1,t7);}
else{
t9=(C_word)C_i_car(t8);
t10=(C_word)C_i_cdr(t8);
if(C_truep((C_word)C_i_nullp(t10))){
C_trace("body51925197");
t11=t4;
f_28174(t11,t1,t7,t9);}
else{
C_trace("##sys#error");
t11=*((C_word*)lf[646]+1);
((C_proc4)(void*)(*((C_word*)t11+1)))(4,t11,t1,lf[647],t10);}}}}

/* def-start5194 in sprout in k27841 in k27838 in k27835 in k27710 in k27707 in k27704 in k27701 in k27698 in k27695 in k27692 in k27689 in k27686 in k27683 in k27680 in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_28291(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28291,NULL,2,t0,t1);}
C_trace("def-id51955213");
t2=((C_word*)t0)[2];
f_28286(t2,t1,C_fix(0));}

/* def-id5195 in sprout in k27841 in k27838 in k27835 in k27710 in k27707 in k27704 in k27701 in k27698 in k27695 in k27692 in k27689 in k27686 in k27683 in k27680 in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_28286(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28286,NULL,3,t0,t1,t2);}
C_trace("body51925197");
t3=((C_word*)t0)[2];
f_28174(t3,t1,t2,C_fix(-1));}

/* body5192 in sprout in k27841 in k27838 in k27835 in k27710 in k27707 in k27704 in k27701 in k27698 in k27695 in k27692 in k27689 in k27686 in k27683 in k27680 in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_28174(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28174,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28176,a[2]=t4,a[3]=((C_word)li443),tmp=(C_word)a,a+=4,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28204,a[2]=t5,a[3]=((C_word)li444),tmp=(C_word)a,a+=4,tmp);
t8=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28234,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t0)[2]))){
t9=C_SCHEME_UNDEFINED;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_set_block_item(t10,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28245,a[2]=t6,a[3]=t7,a[4]=t10,a[5]=((C_word*)t0)[2],a[6]=((C_word)li445),tmp=(C_word)a,a+=7,tmp));
t12=((C_word*)t10)[1];
f_28245(t12,t8,((C_word*)t0)[2]);}
else{
t9=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28277,a[2]=((C_word*)t0)[2],a[3]=t8,tmp=(C_word)a,a+=4,tmp);
t10=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28281,a[2]=t7,a[3]=((C_word*)t0)[2],a[4]=t9,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 493  nextstart");
t11=t6;
f_28176(t11,t10);}}

/* k28279 in body5192 in sprout in k27841 in k27838 in k27835 in k27710 in k27707 in k27704 in k27701 in k27698 in k27695 in k27692 in k27689 in k27686 in k27683 in k27680 in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_28281(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28281,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28285,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 493  nextid");
t3=((C_word*)t0)[2];
f_28204(t3,t2);}

/* k28283 in k28279 in body5192 in sprout in k27841 in k27838 in k27835 in k27710 in k27707 in k27704 in k27701 in k27698 in k27695 in k27692 in k27689 in k27686 in k27683 in k27680 in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_28285(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 493  scheduler-sprout");
f_28087(((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k28275 in body5192 in sprout in k27841 in k27838 in k27835 in k27710 in k27707 in k27704 in k27701 in k27698 in k27695 in k27692 in k27689 in k27686 in k27683 in k27680 in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_28277(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_28234(2,t2,((C_word*)t0)[2]);}

/* do5206 in body5192 in sprout in k27841 in k27838 in k27835 in k27710 in k27707 in k27704 in k27701 in k27698 in k27695 in k27692 in k27689 in k27686 in k27683 in k27680 in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_28245(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28245,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)t0)[5]);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28255,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28270,a[2]=((C_word*)t0)[3],a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 491  nextstart");
t6=((C_word*)t0)[2];
f_28176(t6,t5);}}

/* k28268 in do5206 in body5192 in sprout in k27841 in k27838 in k27835 in k27710 in k27707 in k27704 in k27701 in k27698 in k27695 in k27692 in k27689 in k27686 in k27683 in k27680 in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_28270(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28270,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28274,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 491  nextid");
t3=((C_word*)t0)[2];
f_28204(t3,t2);}

/* k28272 in k28268 in do5206 in body5192 in sprout in k27841 in k27838 in k27835 in k27710 in k27707 in k27704 in k27701 in k27698 in k27695 in k27692 in k27689 in k27686 in k27683 in k27680 in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_28274(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 491  scheduler-sprout");
f_28087(((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k28253 in do5206 in body5192 in sprout in k27841 in k27838 in k27835 in k27710 in k27707 in k27704 in k27701 in k27698 in k27695 in k27692 in k27689 in k27686 in k27683 in k27680 in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_28255(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_28245(t3,((C_word*)t0)[2],t2);}

/* k28232 in body5192 in sprout in k27841 in k27838 in k27835 in k27710 in k27707 in k27704 in k27701 in k27698 in k27695 in k27692 in k27689 in k27686 in k27683 in k27680 in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_28234(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 497  values");
C_values(2,0,((C_word*)t0)[2]);}

/* nextid in body5192 in sprout in k27841 in k27838 in k27835 in k27710 in k27707 in k27704 in k27701 in k27698 in k27695 in k27692 in k27689 in k27686 in k27683 in k27680 in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_28204(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28204,NULL,2,t0,t1);}
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[2])[1]))){
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t4=(C_word)C_i_nullp(t3);
t5=(C_truep(t4)?(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]):(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]));
t6=C_mutate(((C_word *)((C_word*)t0)[2])+1,t5);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,t2);}
else{
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}}

/* nextstart in body5192 in sprout in k27841 in k27838 in k27835 in k27710 in k27707 in k27704 in k27701 in k27698 in k27695 in k27692 in k27689 in k27686 in k27683 in k27680 in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_28176(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28176,NULL,2,t0,t1);}
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[2])[1]))){
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t4=(C_word)C_i_nullp(t3);
t5=(C_truep(t4)?(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]):(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]));
t6=C_mutate(((C_word *)((C_word*)t0)[2])+1,t5);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,t2);}
else{
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}}

/* load-sal-file in k27841 in k27838 in k27835 in k27710 in k27707 in k27704 in k27701 in k27698 in k27695 in k27692 in k27689 in k27686 in k27683 in k27680 in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_28153(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_28153,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28158,a[2]=((C_word)li441),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t3+1)))(3,t3,t1,t2);}

/* f_28158 in load-sal-file in k27841 in k27838 in k27835 in k27710 in k27707 in k27704 in k27701 in k27698 in k27695 in k27692 in k27689 in k27686 in k27683 in k27680 in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_28158(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_28158,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28163,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep(t2)){
t4=(C_word)C_i_foreign_string_argumentp(t2);
C_trace("##sys#make-c-string");
t5=C_retrieve(lf[46]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}
else{
t4=t3;
f_28163(2,t4,C_SCHEME_FALSE);}}

/* k28161 */
static void C_ccall f_28163(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub5183(C_SCHEME_UNDEFINED,t1));}

/* scheduler-stop in k27841 in k27838 in k27835 in k27710 in k27707 in k27704 in k27701 in k27698 in k27695 in k27692 in k27689 in k27686 in k27683 in k27680 in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_28131(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28131,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28135,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("##sys#gc");
t4=C_retrieve(lf[642]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,C_SCHEME_FALSE);}

/* k28133 in scheduler-stop in k27841 in k27838 in k27835 in k27710 in k27707 in k27704 in k27701 in k27698 in k27695 in k27692 in k27689 in k27686 in k27683 in k27680 in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_28135(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28135,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(C_word)C_i_foreign_fixnum_argumentp(((C_word*)t0)[3]);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub5172,a[2]=((C_word)li439),tmp=(C_word)a,a+=3,tmp);
((C_proc4)C_retrieve_proc(t4))(4,t4,((C_word*)t0)[2],t2,t3);}

/* scheduler-sprout in k27841 in k27838 in k27835 in k27710 in k27707 in k27704 in k27701 in k27698 in k27695 in k27692 in k27689 in k27686 in k27683 in k27680 in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_28087(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28087,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28091,a[2]=t2,a[3]=t1,a[4]=t4,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
C_trace("##sys#gc");
t6=C_retrieve(lf[642]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,C_SCHEME_FALSE);}

/* k28089 in scheduler-sprout in k27841 in k27838 in k27835 in k27710 in k27707 in k27704 in k27701 in k27698 in k27695 in k27692 in k27689 in k27686 in k27683 in k27680 in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_28091(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28091,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(C_word)C_i_foreign_flonum_argumentp(((C_word*)t0)[5]);
t4=(C_word)C_i_foreign_fixnum_argumentp(((C_word*)t0)[4]);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub5152,a[2]=((C_word)li437),tmp=(C_word)a,a+=3,tmp);
((C_proc6)C_retrieve_proc(t5))(6,t5,((C_word*)t0)[3],t2,((C_word*)t0)[2],t3,t4);}

/* scheduler-set-time-milliseconds in k27841 in k27838 in k27835 in k27710 in k27707 in k27704 in k27701 in k27698 in k27695 in k27692 in k27689 in k27686 in k27683 in k27680 in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_28078(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28078,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28082,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("##sys#gc");
t4=C_retrieve(lf[642]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,C_SCHEME_FALSE);}

/* k28080 in scheduler-set-time-milliseconds in k27841 in k27838 in k27835 in k27710 in k27707 in k27704 in k27701 in k27698 in k27695 in k27692 in k27689 in k27686 in k27683 in k27680 in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_28082(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28082,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub5144,a[2]=((C_word)li435),tmp=(C_word)a,a+=3,tmp);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],t2,((C_word*)t0)[2]);}

/* current-time-seconds in k27841 in k27838 in k27835 in k27710 in k27707 in k27704 in k27701 in k27698 in k27695 in k27692 in k27689 in k27686 in k27683 in k27680 in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_28066(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28066,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub5136(t2));}

/* current-time-milliseconds in k27841 in k27838 in k27835 in k27710 in k27707 in k27704 in k27701 in k27698 in k27695 in k27692 in k27689 in k27686 in k27683 in k27680 in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_28063(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28063,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub5133(t2));}

/* print-error in k27841 in k27838 in k27835 in k27710 in k27707 in k27704 in k27701 in k27698 in k27695 in k27692 in k27689 in k27686 in k27683 in k27680 in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_28049(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_28049,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28054,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep(t2)){
t4=(C_word)C_i_foreign_string_argumentp(t2);
C_trace("##sys#make-c-string");
t5=C_retrieve(lf[46]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}
else{
t4=t3;
f_28054(2,t4,C_SCHEME_FALSE);}}

/* k28052 in print-error in k27841 in k27838 in k27835 in k27710 in k27707 in k27704 in k27701 in k27698 in k27695 in k27692 in k27689 in k27686 in k27683 in k27680 in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_28054(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub5128(C_SCHEME_UNDEFINED,t1));}

/* print-message in k27841 in k27838 in k27835 in k27710 in k27707 in k27704 in k27701 in k27698 in k27695 in k27692 in k27689 in k27686 in k27683 in k27680 in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_28035(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_28035,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28040,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep(t2)){
t4=(C_word)C_i_foreign_string_argumentp(t2);
C_trace("##sys#make-c-string");
t5=C_retrieve(lf[46]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}
else{
t4=t3;
f_28040(2,t4,C_SCHEME_FALSE);}}

/* k28038 in print-message in k27841 in k27838 in k27835 in k27710 in k27707 in k27704 in k27701 in k27698 in k27695 in k27692 in k27689 in k27686 in k27683 in k27680 in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_28040(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub5122(C_SCHEME_UNDEFINED,t1));}

/* cm-logo in k27841 in k27838 in k27835 in k27710 in k27707 in k27704 in k27701 in k27698 in k27695 in k27692 in k27689 in k27686 in k27683 in k27680 in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_27845(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_27845,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27899,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27906,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 388  make-string");
t5=*((C_word*)lf[351]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,C_fix(15));}

/* k27904 in cm-logo in k27841 in k27838 in k27835 in k27710 in k27707 in k27704 in k27701 in k27698 in k27695 in k27692 in k27689 in k27686 in k27683 in k27680 in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_27906(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27906,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27908,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word)li429),tmp=(C_word)a,a+=5,tmp));
t5=((C_word*)t3)[1];
f_27908(t5,((C_word*)t0)[2],lf[638],t1,C_fix(0));}

/* do5096 in k27904 in cm-logo in k27841 in k27838 in k27835 in k27710 in k27707 in k27704 in k27701 in k27698 in k27695 in k27692 in k27689 in k27686 in k27683 in k27680 in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_27908(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27908,NULL,5,t0,t1,t2,t3,t4);}
if(C_truep((C_word)C_i_nequalp(t4,C_fix(7)))){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_FALSE);}
else{
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27918,a[2]=((C_word*)t0)[2],a[3]=t3,a[4]=t2,a[5]=t1,a[6]=((C_word*)t0)[3],a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nequalp(t4,C_fix(0)))){
C_trace("ChickenBridge.scm: 391  printf");
t6=C_retrieve(lf[327]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,t2);}
else{
t6=t5;
f_27918(2,t6,C_SCHEME_UNDEFINED);}}}

/* k27916 in do5096 in k27904 in cm-logo in k27841 in k27838 in k27835 in k27710 in k27707 in k27704 in k27701 in k27698 in k27695 in k27692 in k27689 in k27686 in k27683 in k27680 in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_27918(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27918,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27921,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27935,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27937,a[2]=t5,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[7],a[6]=((C_word)li428),tmp=(C_word)a,a+=7,tmp));
t7=((C_word*)t5)[1];
f_27937(t7,t3,C_fix(0));}

/* do5110 in k27916 in do5096 in k27904 in cm-logo in k27841 in k27838 in k27835 in k27710 in k27707 in k27704 in k27701 in k27698 in k27695 in k27692 in k27689 in k27686 in k27683 in k27680 in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_27937(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27937,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nequalp(t2,C_fix(15)))){
if(C_truep((C_word)C_i_nequalp(((C_word*)t0)[5],C_fix(3)))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27957,a[2]=((C_word*)t0)[4],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t4=((C_word*)t0)[3];
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_fix(0);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_fix(0);
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_fix(0);
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27892,a[2]=t3,a[3]=t11,a[4]=t9,a[5]=t5,a[6]=t7,tmp=(C_word)a,a+=7,tmp);
t13=(C_word)C_a_i_divide(&a,2,((C_word*)t5)[1],C_fix(10000));
C_trace("ChickenBridge.scm: 380  floor");
t14=*((C_word*)lf[149]+1);
((C_proc3)C_retrieve_proc(t14))(3,t14,t12,t13);}
else{
C_trace("ChickenBridge.scm: 396  string-append");
t3=*((C_word*)lf[141]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t1,((C_word*)t0)[4],lf[637]);}}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27974,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27977,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_a_i_minus(&a,2,t2,((C_word*)t0)[5]);
C_trace("ChickenBridge.scm: 398  <=");
C_less_or_equal_p(5,0,t4,C_fix(2),t5,C_fix(4));}}

/* k27975 in do5110 in k27916 in do5096 in k27904 in cm-logo in k27841 in k27838 in k27835 in k27710 in k27707 in k27704 in k27701 in k27698 in k27695 in k27692 in k27689 in k27686 in k27683 in k27680 in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_27977(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27977,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_27974(t2,C_make_character(92));}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28019,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_a_i_plus(&a,2,C_fix(13),((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 399  modulo");
t4=*((C_word*)lf[114]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,t3,C_fix(15));}}

/* k28017 in k27975 in do5110 in k27916 in do5096 in k27904 in cm-logo in k27841 in k27838 in k27835 in k27710 in k27707 in k27704 in k27701 in k27698 in k27695 in k27692 in k27689 in k27686 in k27683 in k27680 in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_28019(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28019,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,C_fix(4),t1);
t3=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[4],t2);
if(C_truep((C_word)C_i_nequalp(t3,C_fix(1)))){
t4=((C_word*)t0)[3];
f_27974(t4,C_make_character(47));}
else{
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27989,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 401  <=");
C_less_or_equal_p(5,0,t4,C_fix(1),((C_word*)t0)[2],C_fix(5));}}

/* k27987 in k28017 in k27975 in do5110 in k27916 in do5096 in k27904 in cm-logo in k27841 in k27838 in k27835 in k27710 in k27707 in k27704 in k27701 in k27698 in k27695 in k27692 in k27689 in k27686 in k27683 in k27680 in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_27989(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27989,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_27974(t2,C_make_character(45));}
else{
t2=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[3],C_fix(6));
t3=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[2],C_fix(3));
t4=(C_word)C_a_i_times(&a,2,t2,t3);
t5=(C_word)C_i_nequalp(t4,C_fix(15));
t6=((C_word*)t0)[4];
f_27974(t6,(C_truep(t5)?C_make_character(47):C_make_character(32)));}}

/* k27972 in do5110 in k27916 in do5096 in k27904 in cm-logo in k27841 in k27838 in k27835 in k27710 in k27707 in k27704 in k27701 in k27698 in k27695 in k27692 in k27689 in k27686 in k27683 in k27680 in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_27974(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27974,NULL,2,t0,t1);}
t2=(C_word)C_i_string_set(((C_word*)t0)[5],((C_word*)t0)[4],t1);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t4=((C_word*)((C_word*)t0)[3])[1];
f_27937(t4,((C_word*)t0)[2],t3);}

/* k27890 in do5110 in k27916 in do5096 in k27904 in cm-logo in k27841 in k27838 in k27835 in k27710 in k27707 in k27704 in k27701 in k27698 in k27695 in k27692 in k27689 in k27686 in k27683 in k27680 in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_27892(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27892,2,t0,t1);}
t2=(C_word)C_i_inexact_to_exact(t1);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27857,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 381  modulo");
t5=*((C_word*)lf[114]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,((C_word*)((C_word*)t0)[5])[1],C_fix(10000));}

/* k27855 in k27890 in do5110 in k27916 in do5096 in k27904 in cm-logo in k27841 in k27838 in k27835 in k27710 in k27707 in k27704 in k27701 in k27698 in k27695 in k27692 in k27689 in k27686 in k27683 in k27680 in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_27857(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27857,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27884,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
t4=(C_word)C_a_i_divide(&a,2,((C_word*)((C_word*)t0)[6])[1],C_fix(100));
C_trace("ChickenBridge.scm: 382  floor");
t5=*((C_word*)lf[149]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}

/* k27882 in k27855 in k27890 in do5110 in k27916 in do5096 in k27904 in cm-logo in k27841 in k27838 in k27835 in k27710 in k27707 in k27704 in k27701 in k27698 in k27695 in k27692 in k27689 in k27686 in k27683 in k27680 in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_27884(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27884,2,t0,t1);}
t2=(C_word)C_i_inexact_to_exact(t1);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27865,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 383  modulo");
t5=*((C_word*)lf[114]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,((C_word*)((C_word*)t0)[2])[1],C_fix(100));}

/* k27863 in k27882 in k27855 in k27890 in do5110 in k27916 in do5096 in k27904 in cm-logo in k27841 in k27838 in k27835 in k27710 in k27707 in k27704 in k27701 in k27698 in k27695 in k27692 in k27689 in k27686 in k27683 in k27680 in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_27865(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27865,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27872,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 384  number->string");
C_number_to_string(3,0,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k27870 in k27863 in k27882 in k27855 in k27890 in do5110 in k27916 in do5096 in k27904 in cm-logo in k27841 in k27838 in k27835 in k27710 in k27707 in k27704 in k27701 in k27698 in k27695 in k27692 in k27689 in k27686 in k27683 in k27680 in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_27872(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27872,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27876,a[2]=((C_word*)t0)[3],a[3]=t1,a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 385  number->string");
C_number_to_string(3,0,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k27874 in k27870 in k27863 in k27882 in k27855 in k27890 in do5110 in k27916 in do5096 in k27904 in cm-logo in k27841 in k27838 in k27835 in k27710 in k27707 in k27704 in k27701 in k27698 in k27695 in k27692 in k27689 in k27686 in k27683 in k27680 in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_27876(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27876,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27880,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 386  number->string");
C_number_to_string(3,0,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k27878 in k27874 in k27870 in k27863 in k27882 in k27855 in k27890 in do5110 in k27916 in do5096 in k27904 in cm-logo in k27841 in k27838 in k27835 in k27710 in k27707 in k27704 in k27701 in k27698 in k27695 in k27692 in k27689 in k27686 in k27683 in k27680 in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_27880(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 384  string-append");
t2=*((C_word*)lf[141]+1);
((C_proc8)C_retrieve_proc(t2))(8,t2,((C_word*)t0)[4],lf[634],((C_word*)t0)[3],lf[635],((C_word*)t0)[2],lf[636],t1);}

/* k27955 in do5110 in k27916 in do5096 in k27904 in cm-logo in k27841 in k27838 in k27835 in k27710 in k27707 in k27704 in k27701 in k27698 in k27695 in k27692 in k27689 in k27686 in k27683 in k27680 in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_27957(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 395  string-append");
t2=*((C_word*)lf[141]+1);
((C_proc6)C_retrieve_proc(t2))(6,t2,((C_word*)t0)[3],((C_word*)t0)[2],lf[632],t1,lf[633]);}

/* k27933 in k27916 in do5096 in k27904 in cm-logo in k27841 in k27838 in k27835 in k27710 in k27707 in k27704 in k27701 in k27698 in k27695 in k27692 in k27689 in k27686 in k27683 in k27680 in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_27935(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 392  printf");
t2=C_retrieve(lf[327]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k27919 in k27916 in do5096 in k27904 in cm-logo in k27841 in k27838 in k27835 in k27710 in k27707 in k27704 in k27701 in k27698 in k27695 in k27692 in k27689 in k27686 in k27683 in k27680 in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_27921(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27921,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27924,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 404  printf");
t3=C_retrieve(lf[327]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[3]);}

/* k27922 in k27919 in k27916 in do5096 in k27904 in cm-logo in k27841 in k27838 in k27835 in k27710 in k27707 in k27704 in k27701 in k27698 in k27695 in k27692 in k27689 in k27686 in k27683 in k27680 in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_27924(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27924,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
t3=((C_word*)((C_word*)t0)[5])[1];
f_27908(t3,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k27897 in cm-logo in k27841 in k27838 in k27835 in k27710 in k27707 in k27704 in k27701 in k27698 in k27695 in k27692 in k27689 in k27686 in k27683 in k27680 in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_27899(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 405  values");
C_values(2,0,((C_word*)t0)[2]);}

/* cs:clear in k27710 in k27707 in k27704 in k27701 in k27698 in k27695 in k27692 in k27689 in k27686 in k27683 in k27680 in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_27828(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27828,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27833,a[2]=((C_word)li426),tmp=(C_word)a,a+=3,tmp);
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,t1);}

/* f_27833 in cs:clear in k27710 in k27707 in k27704 in k27701 in k27698 in k27695 in k27692 in k27689 in k27686 in k27683 in k27680 in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_27833(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27833,2,t0,t1);}
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub5088(C_SCHEME_UNDEFINED));}

/* cs:f in k27710 in k27707 in k27704 in k27701 in k27698 in k27695 in k27692 in k27689 in k27686 in k27683 in k27680 in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_27771(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+13)){
C_save_and_reclaim((void*)tr2r,(void*)f_27771r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_27771r(t0,t1,t2);}}

static void C_ccall f_27771r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(13);
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27775,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t3)[1]))){
t5=t4;
f_27775(2,t5,C_SCHEME_UNDEFINED);}
else{
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27784,a[2]=t4,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27804,a[2]=t5,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_cdr(((C_word*)t3)[1]);
if(C_truep((C_word)C_i_nullp(t7))){
t8=(C_word)C_i_car(((C_word*)t3)[1]);
t9=t6;
f_27804(t9,(C_word)C_i_pairp(t8));}
else{
t8=t6;
f_27804(t8,C_SCHEME_FALSE);}}}

/* k27802 in cs:f in k27710 in k27707 in k27704 in k27701 in k27698 in k27695 in k27692 in k27689 in k27686 in k27683 in k27680 in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_27804(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_27784(t4,t3);}
else{
t2=((C_word*)t0)[2];
f_27784(t2,C_SCHEME_UNDEFINED);}}

/* k27782 in cs:f in k27710 in k27707 in k27704 in k27701 in k27698 in k27695 in k27692 in k27689 in k27686 in k27683 in k27680 in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_27784(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27784,NULL,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[3])[1]);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27792,a[2]=((C_word)li424),tmp=(C_word)a,a+=3,tmp);
((C_proc5)(void*)(*((C_word*)t3+1)))(5,t3,((C_word*)t0)[2],C_fix(2),t2,((C_word*)((C_word*)t0)[3])[1]);}

/* f_27792 in k27782 in cs:f in k27710 in k27707 in k27704 in k27701 in k27698 in k27695 in k27692 in k27689 in k27686 in k27683 in k27680 in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_27792(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_27792,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_i_foreign_fixnum_argumentp(t2);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)stub5081(C_SCHEME_UNDEFINED,t5,t6,t4));}

/* k27773 in cs:f in k27710 in k27707 in k27704 in k27701 in k27698 in k27695 in k27692 in k27689 in k27686 in k27683 in k27680 in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_27775(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 372  values");
C_values(2,0,((C_word*)t0)[2]);}

/* cs:i in k27710 in k27707 in k27704 in k27701 in k27698 in k27695 in k27692 in k27689 in k27686 in k27683 in k27680 in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_27714(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+13)){
C_save_and_reclaim((void*)tr2r,(void*)f_27714r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_27714r(t0,t1,t2);}}

static void C_ccall f_27714r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(13);
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27718,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t3)[1]))){
t5=t4;
f_27718(2,t5,C_SCHEME_UNDEFINED);}
else{
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27727,a[2]=t4,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27747,a[2]=t5,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_cdr(((C_word*)t3)[1]);
if(C_truep((C_word)C_i_nullp(t7))){
t8=(C_word)C_i_car(((C_word*)t3)[1]);
t9=t6;
f_27747(t9,(C_word)C_i_pairp(t8));}
else{
t8=t6;
f_27747(t8,C_SCHEME_FALSE);}}}

/* k27745 in cs:i in k27710 in k27707 in k27704 in k27701 in k27698 in k27695 in k27692 in k27689 in k27686 in k27683 in k27680 in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_27747(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_27727(t4,t3);}
else{
t2=((C_word*)t0)[2];
f_27727(t2,C_SCHEME_UNDEFINED);}}

/* k27725 in cs:i in k27710 in k27707 in k27704 in k27701 in k27698 in k27695 in k27692 in k27689 in k27686 in k27683 in k27680 in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_27727(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27727,NULL,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[3])[1]);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27735,a[2]=((C_word)li422),tmp=(C_word)a,a+=3,tmp);
((C_proc5)(void*)(*((C_word*)t3+1)))(5,t3,((C_word*)t0)[2],C_fix(1),t2,((C_word*)((C_word*)t0)[3])[1]);}

/* f_27735 in k27725 in cs:i in k27710 in k27707 in k27704 in k27701 in k27698 in k27695 in k27692 in k27689 in k27686 in k27683 in k27680 in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_27735(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_27735,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_i_foreign_fixnum_argumentp(t2);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)stub5070(C_SCHEME_UNDEFINED,t5,t6,t4));}

/* k27716 in cs:i in k27710 in k27707 in k27704 in k27701 in k27698 in k27695 in k27692 in k27689 in k27686 in k27683 in k27680 in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_27718(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 372  values");
C_values(2,0,((C_word*)t0)[2]);}

/* mp:inhook in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_27624(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_27624,3,t0,t1,t2);}
if(C_truep((C_word)C_i_closurep(t2))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27636,a[2]=t2,a[3]=((C_word)li418),tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27673,a[2]=((C_word)li419),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t4+1)))(3,t4,t1,t3);}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27678,a[2]=((C_word)li420),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t3+1)))(3,t3,t1,C_SCHEME_FALSE);}}

/* f_27678 in mp:inhook in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_27678(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_27678,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub5014(C_SCHEME_UNDEFINED,t2));}

/* f_27673 in mp:inhook in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_27673(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_27673,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub5005(C_SCHEME_UNDEFINED,t2));}

/* a27635 in mp:inhook in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_27636(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_27636,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27642,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word)li417),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 371  call-with-current-continuation");
t4=*((C_word*)lf[627]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t1,t3);}

/* a27641 in a27635 in mp:inhook in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_27642(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_27642,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27648,a[2]=t2,a[3]=((C_word)li415),tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27668,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word)li416),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 371  with-exception-handler");
t5=C_retrieve(lf[626]);
((C_proc4)C_retrieve_proc(t5))(4,t5,t1,t3,t4);}

/* a27667 in a27641 in a27635 in mp:inhook in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_27668(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27668,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27672,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 371  %hook");
t3=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k27670 in a27667 in a27641 in a27635 in mp:inhook in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_27672(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_fix(0));}

/* a27647 in a27641 in a27635 in mp:inhook in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_27648(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[14],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_27648,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27652,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27659,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27663,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27666,a[2]=t2,a[3]=t5,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 371  condition-property-accessor");
t7=C_retrieve(lf[623]);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[624],lf[625]);}

/* k27664 in a27647 in a27641 in a27635 in mp:inhook in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_27666(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=t1;
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k27661 in a27647 in a27641 in a27635 in mp:inhook in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_27663(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 371  sprintf");
t2=C_retrieve(lf[31]);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],lf[622],t1);}

/* k27657 in a27647 in a27641 in a27635 in mp:inhook in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_27659(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 371  print-error");
t2=C_retrieve(lf[349]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k27650 in a27647 in a27641 in a27635 in mp:inhook in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_27652(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 371  %cont");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],C_fix(-1));}

/* mp:mm in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_27609(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_27609,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27614,a[2]=((C_word)li413),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t3+1)))(3,t3,t1,t2);}

/* f_27614 in mp:mm in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_27614(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_27614,3,t0,t1,t2);}
t3=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub4998(C_SCHEME_UNDEFINED,t3));}

/* mp:bend in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_27581(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word ab[3],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_27581,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27586,a[2]=((C_word)li411),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t5+1)))(7,t5,t1,C_fix(14),t2,t4,t3,C_fix(0));}

/* f_27586 in mp:bend in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_27586(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_27586,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub4989(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:press in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_27553(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word ab[3],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_27553,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27558,a[2]=((C_word)li409),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t5+1)))(7,t5,t1,C_fix(13),t2,t4,t3,C_fix(0));}

/* f_27558 in mp:press in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_27558(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_27558,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub4974(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:prog in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_27525(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word ab[3],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_27525,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27530,a[2]=((C_word)li407),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t5+1)))(7,t5,t1,C_fix(12),t2,t4,t3,C_fix(0));}

/* f_27530 in mp:prog in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_27530(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_27530,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub4959(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:ctrl in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_27497(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word ab[3],*a=ab;
if(c!=6) C_bad_argc_2(c,6,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr6,(void*)f_27497,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27502,a[2]=((C_word)li405),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t6+1)))(7,t6,t1,C_fix(11),t2,t5,t3,t4);}

/* f_27502 in mp:ctrl in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_27502(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_27502,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub4944(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:touch in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_27469(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word ab[3],*a=ab;
if(c!=6) C_bad_argc_2(c,6,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr6,(void*)f_27469,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27474,a[2]=((C_word)li403),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t6+1)))(7,t6,t1,C_fix(10),t2,t5,t3,t4);}

/* f_27474 in mp:touch in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_27474(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_27474,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub4928(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:on in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_27441(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word ab[3],*a=ab;
if(c!=6) C_bad_argc_2(c,6,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr6,(void*)f_27441,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27446,a[2]=((C_word)li401),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t6+1)))(7,t6,t1,C_fix(9),t2,t5,t3,t4);}

/* f_27446 in mp:on in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_27446(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_27446,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub4912(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:off in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_27413(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word ab[3],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_27413,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27418,a[2]=((C_word)li399),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t5+1)))(7,t5,t1,C_fix(8),t2,t4,t3,C_fix(0));}

/* f_27418 in mp:off in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_27418(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_27418,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub4896(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:midi in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_27385(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word ab[3],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_27385,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27390,a[2]=((C_word)li397),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t7+1)))(7,t7,t1,t2,t3,t4,t5,t6);}

/* f_27390 in mp:midi in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_27390(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_27390,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_flonum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub4881(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:note in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_27357(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word ab[3],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_27357,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27362,a[2]=((C_word)li395),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t7+1)))(7,t7,t1,t2,t3,t4,t5,t6);}

/* f_27362 in mp:note in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_27362(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_27362,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_flonum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub4864(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mm:num-set! in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_27334(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_27334,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27338,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27339,a[2]=((C_word)li393),tmp=(C_word)a,a+=3,tmp);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t4,t2,C_fix(1),t3);}

/* f_27339 in mm:num-set! in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_27339(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_27339,5,t0,t1,t2,t3,t4);}
t5=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=(C_word)C_i_foreign_fixnum_argumentp(t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)stub4846(C_SCHEME_UNDEFINED,t5,t6,t7));}

/* k27336 in mm:num-set! in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_27338(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* mm:num in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_27315(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_27315,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27320,a[2]=((C_word)li391),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(1));}

/* f_27320 in mm:num in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_27320(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_27320,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub4835(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:val-set! in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_27260(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_27260,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27264,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27267,a[2]=t3,a[3]=t2,a[4]=t4,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 371  mm:type?");
t6=C_retrieve(lf[606]);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,t2,C_fix(11));}

/* k27265 in mm:val-set! in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_27267(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27267,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27270,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
if(C_truep(t1)){
t3=t2;
f_27270(2,t3,t1);}
else{
C_trace("ChickenBridge.scm: 371  mm:type?");
t3=C_retrieve(lf[606]);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)t0)[3],C_fix(10));}}

/* k27268 in k27265 in mm:val-set! in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_27270(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27270,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27274,a[2]=((C_word)li388),tmp=(C_word)a,a+=3,tmp);
((C_proc5)(void*)(*((C_word*)t2+1)))(5,t2,((C_word*)t0)[4],((C_word*)t0)[3],C_fix(2),((C_word*)t0)[2]);}
else{
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27294,a[2]=((C_word)li389),tmp=(C_word)a,a+=3,tmp);
((C_proc5)(void*)(*((C_word*)t2+1)))(5,t2,((C_word*)t0)[4],((C_word*)t0)[3],C_fix(1),C_retrieve(lf[608]));}}

/* f_27294 in k27268 in k27265 in mm:val-set! in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_27294(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_27294,5,t0,t1,t2,t3,t4);}
t5=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=(C_word)C_i_foreign_fixnum_argumentp(t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)stub4824(C_SCHEME_UNDEFINED,t5,t6,t7));}

/* f_27274 in k27268 in k27265 in mm:val-set! in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_27274(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_27274,5,t0,t1,t2,t3,t4);}
t5=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=(C_word)C_i_foreign_fixnum_argumentp(t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)stub4814(C_SCHEME_UNDEFINED,t5,t6,t7));}

/* k27262 in mm:val-set! in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_27264(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* mm:val in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_27213(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_27213,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27220,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 371  mm:type?");
t4=C_retrieve(lf[606]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,t2,C_fix(11));}

/* k27218 in mm:val in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_27220(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27220,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27223,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
if(C_truep(t1)){
t3=t2;
f_27223(2,t3,t1);}
else{
C_trace("ChickenBridge.scm: 371  mm:type?");
t3=C_retrieve(lf[606]);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)t0)[2],C_fix(10));}}

/* k27221 in k27218 in mm:val in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_27223(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27223,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27227,a[2]=((C_word)li385),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],C_fix(2));}
else{
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27243,a[2]=((C_word)li386),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],C_fix(1));}}

/* f_27243 in k27221 in k27218 in mm:val in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_27243(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_27243,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub4801(C_SCHEME_UNDEFINED,t4,t5));}

/* f_27227 in k27221 in k27218 in mm:val in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_27227(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_27227,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub4793(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:vel-set! in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_27190(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_27190,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27194,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27195,a[2]=((C_word)li383),tmp=(C_word)a,a+=3,tmp);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t4,t2,C_fix(2),t3);}

/* f_27195 in mm:vel-set! in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_27195(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_27195,5,t0,t1,t2,t3,t4);}
t5=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=(C_word)C_i_foreign_fixnum_argumentp(t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)stub4780(C_SCHEME_UNDEFINED,t5,t6,t7));}

/* k27192 in mm:vel-set! in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_27194(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* mm:vel in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_27171(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_27171,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27176,a[2]=((C_word)li381),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(2));}

/* f_27176 in mm:vel in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_27176(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_27176,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub4769(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:key-set! in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_27148(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_27148,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27152,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27153,a[2]=((C_word)li379),tmp=(C_word)a,a+=3,tmp);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t4,t2,C_fix(1),t3);}

/* f_27153 in mm:key-set! in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_27153(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_27153,5,t0,t1,t2,t3,t4);}
t5=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=(C_word)C_i_foreign_fixnum_argumentp(t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)stub4758(C_SCHEME_UNDEFINED,t5,t6,t7));}

/* k27150 in mm:key-set! in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_27152(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* mm:key in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_27129(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_27129,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27134,a[2]=((C_word)li377),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(1));}

/* f_27134 in mm:key in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_27134(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_27134,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub4747(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:chan-set! in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_27110(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_27110,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27114,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27115,a[2]=((C_word)li375),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t4,t2,t3);}

/* f_27115 in mm:chan-set! in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_27115(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_27115,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub4737(C_SCHEME_UNDEFINED,t4,t5));}

/* k27112 in mm:chan-set! in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_27114(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* mm:chan in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_27095(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_27095,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27100,a[2]=((C_word)li373),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t3+1)))(3,t3,t1,t2);}

/* f_27100 in mm:chan in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_27100(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_27100,3,t0,t1,t2);}
t3=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub4728(C_SCHEME_UNDEFINED,t3));}

/* mm:time-set! in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_27076(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_27076,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27080,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27081,a[2]=((C_word)li371),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t4,t2,t3);}

/* f_27081 in mm:time-set! in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_27081(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_27081,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_flonum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub4719(C_SCHEME_UNDEFINED,t4,t5));}

/* k27078 in mm:time-set! in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_27080(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* mm:time in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_27061(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_27061,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27066,a[2]=((C_word)li369),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t3+1)))(3,t3,t1,t2);}

/* f_27066 in mm:time in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_27066(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_27066,3,t0,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub4709(t3,t4));}

/* mm:copy in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_27046(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_27046,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27051,a[2]=((C_word)li367),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t3+1)))(3,t3,t1,t2);}

/* f_27051 in mm:copy in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_27051(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_27051,3,t0,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub4701(t3,t4));}

/* mm:free in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_27028(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_27028,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27032,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27036,a[2]=((C_word)li365),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t4+1)))(3,t4,t3,t2);}

/* f_27036 in mm:free in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_27036(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_27036,3,t0,t1,t2);}
t3=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub4693(C_SCHEME_UNDEFINED,t3));}

/* k27030 in mm:free in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_27032(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 371  values");
C_values(2,0,((C_word*)t0)[2]);}

/* mm:make-bend in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_26558(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+58)){
C_save_and_reclaim((void*)tr2r,(void*)f_26558r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_26558r(t0,t1,t2);}}

static void C_ccall f_26558r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word *a=C_alloc(58);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(8192);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=t2;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_26562,a[2]=t14,a[3]=t12,a[4]=t18,a[5]=t10,a[6]=t2,a[7]=t16,a[8]=t6,a[9]=t8,a[10]=t4,a[11]=t1,tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t16)[1]))){
t20=t19;
f_26562(t20,C_SCHEME_UNDEFINED);}
else{
t20=(C_word)C_i_car(((C_word*)t16)[1]);
t21=(C_word)C_eqp(t20,lf[577]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26887,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t10,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t10)[1])){
C_trace("error");
t23=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[19],lf[577]);}
else{
t23=t22;
f_26887(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t20,lf[585]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26922,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t12,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[19],lf[585]);}
else{
t24=t23;
f_26922(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(C_word)C_eqp(t20,lf[580]);
if(C_truep(t23)){
t24=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26957,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t14,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t25=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[19],lf[580]);}
else{
t25=t24;
f_26957(2,t25,C_SCHEME_UNDEFINED);}}
else{
t24=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26986,a[2]=t19,a[3]=t10,a[4]=t4,a[5]=t16,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t25=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[10],t2);}
else{
t25=t24;
f_26986(2,t25,C_SCHEME_UNDEFINED);}}}}}}

/* k26984 in mm:make-bend in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_26986(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26986,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26993,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27001,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k26999 in k26984 in mm:make-bend in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_27001(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_26993(2,t2,C_SCHEME_UNDEFINED);}}

/* k26991 in k26984 in mm:make-bend in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_26993(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_26562(t5,t4);}

/* k26955 in mm:make-bend in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_26957(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26957,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26961,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_26961(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26959 in k26955 in mm:make-bend in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_26961(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_26562(t7,t6);}

/* k26920 in mm:make-bend in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_26922(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26922,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26926,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_26926(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26924 in k26920 in mm:make-bend in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_26926(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_26562(t7,t6);}

/* k26885 in mm:make-bend in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_26887(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26887,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26891,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_26891(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26889 in k26885 in mm:make-bend in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_26891(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_26562(t7,t6);}

/* k26560 in mm:make-bend in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_26562(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[42],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26562,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_26565,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_26565(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[577]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26752,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[577]);}
else{
t6=t5;
f_26752(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[585]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26787,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[585]);}
else{
t7=t6;
f_26787(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[580]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26822,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[580]);}
else{
t8=t7;
f_26822(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26851,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_26851(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k26849 in k26560 in mm:make-bend in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_26851(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26851,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26858,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26866,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k26864 in k26849 in k26560 in mm:make-bend in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_26866(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_26858(2,t2,C_SCHEME_UNDEFINED);}}

/* k26856 in k26849 in k26560 in mm:make-bend in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_26858(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_26565(t5,t4);}

/* k26820 in k26560 in mm:make-bend in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_26822(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26822,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26826,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_26826(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26824 in k26820 in k26560 in mm:make-bend in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_26826(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_26565(t7,t6);}

/* k26785 in k26560 in mm:make-bend in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_26787(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26787,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26791,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_26791(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26789 in k26785 in k26560 in mm:make-bend in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_26791(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_26565(t7,t6);}

/* k26750 in k26560 in mm:make-bend in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_26752(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26752,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26756,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_26756(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26754 in k26750 in k26560 in mm:make-bend in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_26756(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_26565(t7,t6);}

/* k26563 in k26560 in mm:make-bend in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_26565(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26565,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26568,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_26568(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[577]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26617,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[577]);}
else{
t6=t5;
f_26617(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[585]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26652,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[585]);}
else{
t7=t6;
f_26652(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[580]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26687,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[580]);}
else{
t8=t7;
f_26687(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26716,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_26716(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k26714 in k26563 in k26560 in mm:make-bend in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_26716(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26716,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26723,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26731,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k26729 in k26714 in k26563 in k26560 in mm:make-bend in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_26731(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_26723(2,t2,C_SCHEME_UNDEFINED);}}

/* k26721 in k26714 in k26563 in k26560 in mm:make-bend in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_26723(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_26568(t5,t4);}

/* k26685 in k26563 in k26560 in mm:make-bend in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_26687(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26687,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26691,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_26691(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26689 in k26685 in k26563 in k26560 in mm:make-bend in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_26691(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_26568(t7,t6);}

/* k26650 in k26563 in k26560 in mm:make-bend in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_26652(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26652,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26656,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_26656(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26654 in k26650 in k26563 in k26560 in mm:make-bend in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_26656(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_26568(t7,t6);}

/* k26615 in k26563 in k26560 in mm:make-bend in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_26617(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26617,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26621,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_26621(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26619 in k26615 in k26563 in k26560 in mm:make-bend in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_26621(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_26568(t7,t6);}

/* k26566 in k26563 in k26560 in mm:make-bend in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_26568(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26568,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26571,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_26571(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k26569 in k26566 in k26563 in k26560 in mm:make-bend in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_26571(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26571,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26575,a[2]=((C_word)li363),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t2+1)))(7,t2,((C_word*)t0)[5],C_fix(14),((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0));}

/* f_26575 in k26569 in k26566 in k26563 in k26560 in mm:make-bend in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_26575(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_26575,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t8=(C_word)C_i_foreign_fixnum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_fixnum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=t1;
((C_proc2)(void*)(*((C_word*)t13+1)))(2,t13,(C_word)stub4670(t7,t8,t9,t10,t11,t12));}

/* mm:press? in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_26539(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_26539,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26544,a[2]=((C_word)li361),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(13));}

/* f_26544 in mm:press? in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_26544(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_26544,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub4591(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:make-press in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_26088(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+58)){
C_save_and_reclaim((void*)tr2r,(void*)f_26088r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_26088r(t0,t1,t2);}}

static void C_ccall f_26088r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word *a=C_alloc(58);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(0);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=t2;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_26092,a[2]=t14,a[3]=t12,a[4]=t18,a[5]=t10,a[6]=t2,a[7]=t16,a[8]=t6,a[9]=t8,a[10]=t4,a[11]=t1,tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t16)[1]))){
t20=t19;
f_26092(t20,C_SCHEME_UNDEFINED);}
else{
t20=(C_word)C_i_car(((C_word*)t16)[1]);
t21=(C_word)C_eqp(t20,lf[577]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26417,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t10,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t10)[1])){
C_trace("error");
t23=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[19],lf[577]);}
else{
t23=t22;
f_26417(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t20,lf[585]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26452,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t12,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[19],lf[585]);}
else{
t24=t23;
f_26452(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(C_word)C_eqp(t20,lf[580]);
if(C_truep(t23)){
t24=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26487,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t14,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t25=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[19],lf[580]);}
else{
t25=t24;
f_26487(2,t25,C_SCHEME_UNDEFINED);}}
else{
t24=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26516,a[2]=t19,a[3]=t10,a[4]=t4,a[5]=t16,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t25=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[10],t2);}
else{
t25=t24;
f_26516(2,t25,C_SCHEME_UNDEFINED);}}}}}}

/* k26514 in mm:make-press in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_26516(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26516,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26523,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26531,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k26529 in k26514 in mm:make-press in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_26531(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_26523(2,t2,C_SCHEME_UNDEFINED);}}

/* k26521 in k26514 in mm:make-press in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_26523(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_26092(t5,t4);}

/* k26485 in mm:make-press in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_26487(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26487,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26491,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_26491(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26489 in k26485 in mm:make-press in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_26491(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_26092(t7,t6);}

/* k26450 in mm:make-press in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_26452(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26452,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26456,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_26456(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26454 in k26450 in mm:make-press in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_26456(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_26092(t7,t6);}

/* k26415 in mm:make-press in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_26417(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26417,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26421,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_26421(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26419 in k26415 in mm:make-press in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_26421(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_26092(t7,t6);}

/* k26090 in mm:make-press in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_26092(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[42],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26092,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_26095,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_26095(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[577]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26282,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[577]);}
else{
t6=t5;
f_26282(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[585]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26317,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[585]);}
else{
t7=t6;
f_26317(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[580]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26352,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[580]);}
else{
t8=t7;
f_26352(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26381,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_26381(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k26379 in k26090 in mm:make-press in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_26381(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26381,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26388,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26396,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k26394 in k26379 in k26090 in mm:make-press in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_26396(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_26388(2,t2,C_SCHEME_UNDEFINED);}}

/* k26386 in k26379 in k26090 in mm:make-press in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_26388(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_26095(t5,t4);}

/* k26350 in k26090 in mm:make-press in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_26352(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26352,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26356,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_26356(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26354 in k26350 in k26090 in mm:make-press in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_26356(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_26095(t7,t6);}

/* k26315 in k26090 in mm:make-press in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_26317(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26317,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26321,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_26321(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26319 in k26315 in k26090 in mm:make-press in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_26321(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_26095(t7,t6);}

/* k26280 in k26090 in mm:make-press in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_26282(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26282,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26286,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_26286(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26284 in k26280 in k26090 in mm:make-press in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_26286(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_26095(t7,t6);}

/* k26093 in k26090 in mm:make-press in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_26095(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26095,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26098,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_26098(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[577]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26147,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[577]);}
else{
t6=t5;
f_26147(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[585]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26182,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[585]);}
else{
t7=t6;
f_26182(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[580]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26217,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[580]);}
else{
t8=t7;
f_26217(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26246,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_26246(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k26244 in k26093 in k26090 in mm:make-press in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_26246(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26246,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26253,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26261,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k26259 in k26244 in k26093 in k26090 in mm:make-press in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_26261(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_26253(2,t2,C_SCHEME_UNDEFINED);}}

/* k26251 in k26244 in k26093 in k26090 in mm:make-press in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_26253(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_26098(t5,t4);}

/* k26215 in k26093 in k26090 in mm:make-press in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_26217(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26217,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26221,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_26221(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26219 in k26215 in k26093 in k26090 in mm:make-press in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_26221(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_26098(t7,t6);}

/* k26180 in k26093 in k26090 in mm:make-press in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_26182(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26182,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26186,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_26186(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26184 in k26180 in k26093 in k26090 in mm:make-press in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_26186(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_26098(t7,t6);}

/* k26145 in k26093 in k26090 in mm:make-press in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_26147(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26147,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26151,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_26151(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26149 in k26145 in k26093 in k26090 in mm:make-press in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_26151(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_26098(t7,t6);}

/* k26096 in k26093 in k26090 in mm:make-press in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_26098(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26098,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26101,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_26101(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k26099 in k26096 in k26093 in k26090 in mm:make-press in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_26101(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26101,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26105,a[2]=((C_word)li359),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t2+1)))(7,t2,((C_word*)t0)[5],C_fix(13),((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0));}

/* f_26105 in k26099 in k26096 in k26093 in k26090 in mm:make-press in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_26105(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_26105,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t8=(C_word)C_i_foreign_fixnum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_fixnum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=t1;
((C_proc2)(void*)(*((C_word*)t13+1)))(2,t13,(C_word)stub4576(t7,t8,t9,t10,t11,t12));}

/* mm:prog? in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_26069(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_26069,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26074,a[2]=((C_word)li357),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(12));}

/* f_26074 in mm:prog? in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_26074(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_26074,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub4497(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:make-prog in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_25618(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+58)){
C_save_and_reclaim((void*)tr2r,(void*)f_25618r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_25618r(t0,t1,t2);}}

static void C_ccall f_25618r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word *a=C_alloc(58);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(0);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=t2;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_25622,a[2]=t14,a[3]=t12,a[4]=t18,a[5]=t10,a[6]=t2,a[7]=t16,a[8]=t6,a[9]=t8,a[10]=t4,a[11]=t1,tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t16)[1]))){
t20=t19;
f_25622(t20,C_SCHEME_UNDEFINED);}
else{
t20=(C_word)C_i_car(((C_word*)t16)[1]);
t21=(C_word)C_eqp(t20,lf[577]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25947,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t10,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t10)[1])){
C_trace("error");
t23=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[19],lf[577]);}
else{
t23=t22;
f_25947(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t20,lf[585]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25982,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t12,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[19],lf[585]);}
else{
t24=t23;
f_25982(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(C_word)C_eqp(t20,lf[580]);
if(C_truep(t23)){
t24=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26017,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t14,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t25=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[19],lf[580]);}
else{
t25=t24;
f_26017(2,t25,C_SCHEME_UNDEFINED);}}
else{
t24=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26046,a[2]=t19,a[3]=t10,a[4]=t4,a[5]=t16,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t25=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[10],t2);}
else{
t25=t24;
f_26046(2,t25,C_SCHEME_UNDEFINED);}}}}}}

/* k26044 in mm:make-prog in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_26046(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26046,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26053,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26061,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k26059 in k26044 in mm:make-prog in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_26061(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_26053(2,t2,C_SCHEME_UNDEFINED);}}

/* k26051 in k26044 in mm:make-prog in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_26053(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_25622(t5,t4);}

/* k26015 in mm:make-prog in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_26017(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26017,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26021,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_26021(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26019 in k26015 in mm:make-prog in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_26021(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25622(t7,t6);}

/* k25980 in mm:make-prog in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_25982(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25982,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25986,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_25986(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25984 in k25980 in mm:make-prog in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_25986(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25622(t7,t6);}

/* k25945 in mm:make-prog in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_25947(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25947,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25951,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_25951(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25949 in k25945 in mm:make-prog in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_25951(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25622(t7,t6);}

/* k25620 in mm:make-prog in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_25622(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[42],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25622,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_25625,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_25625(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[577]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25812,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[577]);}
else{
t6=t5;
f_25812(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[585]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25847,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[585]);}
else{
t7=t6;
f_25847(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[580]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25882,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[580]);}
else{
t8=t7;
f_25882(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25911,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_25911(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k25909 in k25620 in mm:make-prog in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_25911(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25911,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25918,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25926,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k25924 in k25909 in k25620 in mm:make-prog in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_25926(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_25918(2,t2,C_SCHEME_UNDEFINED);}}

/* k25916 in k25909 in k25620 in mm:make-prog in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_25918(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_25625(t5,t4);}

/* k25880 in k25620 in mm:make-prog in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_25882(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25882,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25886,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_25886(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25884 in k25880 in k25620 in mm:make-prog in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_25886(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25625(t7,t6);}

/* k25845 in k25620 in mm:make-prog in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_25847(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25847,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25851,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_25851(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25849 in k25845 in k25620 in mm:make-prog in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_25851(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25625(t7,t6);}

/* k25810 in k25620 in mm:make-prog in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_25812(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25812,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25816,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_25816(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25814 in k25810 in k25620 in mm:make-prog in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_25816(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25625(t7,t6);}

/* k25623 in k25620 in mm:make-prog in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_25625(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25625,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25628,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_25628(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[577]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25677,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[577]);}
else{
t6=t5;
f_25677(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[585]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25712,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[585]);}
else{
t7=t6;
f_25712(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[580]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25747,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[580]);}
else{
t8=t7;
f_25747(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25776,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_25776(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k25774 in k25623 in k25620 in mm:make-prog in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_25776(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25776,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25783,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25791,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k25789 in k25774 in k25623 in k25620 in mm:make-prog in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_25791(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_25783(2,t2,C_SCHEME_UNDEFINED);}}

/* k25781 in k25774 in k25623 in k25620 in mm:make-prog in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_25783(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_25628(t5,t4);}

/* k25745 in k25623 in k25620 in mm:make-prog in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_25747(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25747,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25751,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_25751(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25749 in k25745 in k25623 in k25620 in mm:make-prog in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_25751(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25628(t7,t6);}

/* k25710 in k25623 in k25620 in mm:make-prog in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_25712(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25712,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25716,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_25716(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25714 in k25710 in k25623 in k25620 in mm:make-prog in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_25716(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25628(t7,t6);}

/* k25675 in k25623 in k25620 in mm:make-prog in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_25677(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25677,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25681,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_25681(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25679 in k25675 in k25623 in k25620 in mm:make-prog in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_25681(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25628(t7,t6);}

/* k25626 in k25623 in k25620 in mm:make-prog in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_25628(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25628,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25631,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_25631(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k25629 in k25626 in k25623 in k25620 in mm:make-prog in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_25631(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25631,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25635,a[2]=((C_word)li355),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t2+1)))(7,t2,((C_word*)t0)[5],C_fix(12),((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0));}

/* f_25635 in k25629 in k25626 in k25623 in k25620 in mm:make-prog in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_25635(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_25635,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t8=(C_word)C_i_foreign_fixnum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_fixnum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=t1;
((C_proc2)(void*)(*((C_word*)t13+1)))(2,t13,(C_word)stub4482(t7,t8,t9,t10,t11,t12));}

/* mm:ctrl? in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_25599(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_25599,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25604,a[2]=((C_word)li353),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(11));}

/* f_25604 in mm:ctrl? in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_25604(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_25604,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub4403(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:make-ctrl in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_24870(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+72)){
C_save_and_reclaim((void*)tr2r,(void*)f_24870r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_24870r(t0,t1,t2);}}

static void C_ccall f_24870r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word *a=C_alloc(72);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(0);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_fix(0);
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_FALSE;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=t2;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_SCHEME_FALSE;
t22=(*a=C_VECTOR_TYPE|1,a[1]=t21,tmp=(C_word)a,a+=2,tmp);
t23=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_24874,a[2]=t18,a[3]=t16,a[4]=t14,a[5]=t22,a[6]=t12,a[7]=t2,a[8]=t20,a[9]=t8,a[10]=t6,a[11]=t10,a[12]=t4,a[13]=t1,tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t20)[1]))){
t24=t23;
f_24874(t24,C_SCHEME_UNDEFINED);}
else{
t24=(C_word)C_i_car(((C_word*)t20)[1]);
t25=(C_word)C_eqp(t24,lf[577]);
if(C_truep(t25)){
t26=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25442,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t12,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t27=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t27))(4,t27,t26,lf[19],lf[577]);}
else{
t27=t26;
f_25442(2,t27,C_SCHEME_UNDEFINED);}}
else{
t26=(C_word)C_eqp(t24,lf[588]);
if(C_truep(t26)){
t27=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25477,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t14,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t28=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t28))(4,t28,t27,lf[19],lf[588]);}
else{
t28=t27;
f_25477(2,t28,C_SCHEME_UNDEFINED);}}
else{
t27=(C_word)C_eqp(t24,lf[585]);
if(C_truep(t27)){
t28=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25512,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t16,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t16)[1])){
C_trace("error");
t29=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t29))(4,t29,t28,lf[19],lf[585]);}
else{
t29=t28;
f_25512(2,t29,C_SCHEME_UNDEFINED);}}
else{
t28=(C_word)C_eqp(t24,lf[580]);
if(C_truep(t28)){
t29=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25547,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t18,a[7]=t10,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t30=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t30))(4,t30,t29,lf[19],lf[580]);}
else{
t30=t29;
f_25547(2,t30,C_SCHEME_UNDEFINED);}}
else{
t29=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25576,a[2]=t23,a[3]=t12,a[4]=t4,a[5]=t20,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t22)[1])){
C_trace("error");
t30=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t30))(4,t30,t29,lf[10],t2);}
else{
t30=t29;
f_25576(2,t30,C_SCHEME_UNDEFINED);}}}}}}}

/* k25574 in mm:make-ctrl in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_25576(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25576,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25583,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25591,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k25589 in k25574 in mm:make-ctrl in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_25591(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_25583(2,t2,C_SCHEME_UNDEFINED);}}

/* k25581 in k25574 in mm:make-ctrl in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_25583(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_24874(t5,t4);}

/* k25545 in mm:make-ctrl in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_25547(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25547,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25551,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_25551(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25549 in k25545 in mm:make-ctrl in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_25551(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24874(t7,t6);}

/* k25510 in mm:make-ctrl in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_25512(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25512,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25516,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_25516(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25514 in k25510 in mm:make-ctrl in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_25516(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24874(t7,t6);}

/* k25475 in mm:make-ctrl in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_25477(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25477,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25481,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_25481(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25479 in k25475 in mm:make-ctrl in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_25481(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24874(t7,t6);}

/* k25440 in mm:make-ctrl in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_25442(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25442,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25446,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_25446(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25444 in k25440 in mm:make-ctrl in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_25446(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24874(t7,t6);}

/* k24872 in mm:make-ctrl in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_24874(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[52],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24874,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_24877,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_24877(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[577]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25272,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[577]);}
else{
t6=t5;
f_25272(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[588]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25307,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[588]);}
else{
t7=t6;
f_25307(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[585]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25342,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[585]);}
else{
t8=t7;
f_25342(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[580]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25377,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[580]);}
else{
t9=t8;
f_25377(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25406,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[10],((C_word*)t0)[7]);}
else{
t9=t8;
f_25406(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k25404 in k24872 in mm:make-ctrl in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_25406(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25406,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25413,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25421,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k25419 in k25404 in k24872 in mm:make-ctrl in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_25421(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_25413(2,t2,C_SCHEME_UNDEFINED);}}

/* k25411 in k25404 in k24872 in mm:make-ctrl in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_25413(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_24877(t5,t4);}

/* k25375 in k24872 in mm:make-ctrl in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_25377(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25377,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25381,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_25381(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25379 in k25375 in k24872 in mm:make-ctrl in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_25381(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24877(t7,t6);}

/* k25340 in k24872 in mm:make-ctrl in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_25342(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25342,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25346,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_25346(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25344 in k25340 in k24872 in mm:make-ctrl in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_25346(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24877(t7,t6);}

/* k25305 in k24872 in mm:make-ctrl in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_25307(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25307,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25311,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_25311(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25309 in k25305 in k24872 in mm:make-ctrl in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_25311(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24877(t7,t6);}

/* k25270 in k24872 in mm:make-ctrl in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_25272(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25272,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25276,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_25276(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25274 in k25270 in k24872 in mm:make-ctrl in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_25276(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24877(t7,t6);}

/* k24875 in k24872 in mm:make-ctrl in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_24877(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[52],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24877,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_24880,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_24880(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[577]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25102,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[577]);}
else{
t6=t5;
f_25102(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[588]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25137,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[588]);}
else{
t7=t6;
f_25137(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[585]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25172,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[585]);}
else{
t8=t7;
f_25172(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[580]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25207,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[580]);}
else{
t9=t8;
f_25207(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25236,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[10],((C_word*)t0)[7]);}
else{
t9=t8;
f_25236(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k25234 in k24875 in k24872 in mm:make-ctrl in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_25236(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25236,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25243,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25251,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k25249 in k25234 in k24875 in k24872 in mm:make-ctrl in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_25251(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_25243(2,t2,C_SCHEME_UNDEFINED);}}

/* k25241 in k25234 in k24875 in k24872 in mm:make-ctrl in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_25243(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_24880(t5,t4);}

/* k25205 in k24875 in k24872 in mm:make-ctrl in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_25207(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25207,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25211,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_25211(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25209 in k25205 in k24875 in k24872 in mm:make-ctrl in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_25211(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24880(t7,t6);}

/* k25170 in k24875 in k24872 in mm:make-ctrl in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_25172(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25172,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25176,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_25176(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25174 in k25170 in k24875 in k24872 in mm:make-ctrl in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_25176(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24880(t7,t6);}

/* k25135 in k24875 in k24872 in mm:make-ctrl in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_25137(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25137,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25141,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_25141(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25139 in k25135 in k24875 in k24872 in mm:make-ctrl in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_25141(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24880(t7,t6);}

/* k25100 in k24875 in k24872 in mm:make-ctrl in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_25102(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25102,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25106,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_25106(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25104 in k25100 in k24875 in k24872 in mm:make-ctrl in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_25106(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24880(t7,t6);}

/* k24878 in k24875 in k24872 in mm:make-ctrl in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_24880(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[47],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24880,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_24883,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[11],a[7]=((C_word*)t0)[12],a[8]=((C_word*)t0)[13],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_24883(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[577]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24932,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[577]);}
else{
t6=t5;
f_24932(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[588]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24967,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[588]);}
else{
t7=t6;
f_24967(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[585]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25002,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[585]);}
else{
t8=t7;
f_25002(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[580]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25037,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[580]);}
else{
t9=t8;
f_25037(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25066,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[10],((C_word*)t0)[7]);}
else{
t9=t8;
f_25066(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k25064 in k24878 in k24875 in k24872 in mm:make-ctrl in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_25066(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25066,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25073,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25081,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k25079 in k25064 in k24878 in k24875 in k24872 in mm:make-ctrl in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_25081(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_25073(2,t2,C_SCHEME_UNDEFINED);}}

/* k25071 in k25064 in k24878 in k24875 in k24872 in mm:make-ctrl in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_25073(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_24883(t5,t4);}

/* k25035 in k24878 in k24875 in k24872 in mm:make-ctrl in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_25037(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25037,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25041,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_25041(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25039 in k25035 in k24878 in k24875 in k24872 in mm:make-ctrl in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_25041(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24883(t7,t6);}

/* k25000 in k24878 in k24875 in k24872 in mm:make-ctrl in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_25002(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25002,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25006,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_25006(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k25004 in k25000 in k24878 in k24875 in k24872 in mm:make-ctrl in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_25006(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24883(t7,t6);}

/* k24965 in k24878 in k24875 in k24872 in mm:make-ctrl in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_24967(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24967,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24971,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_24971(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24969 in k24965 in k24878 in k24875 in k24872 in mm:make-ctrl in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_24971(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24883(t7,t6);}

/* k24930 in k24878 in k24875 in k24872 in mm:make-ctrl in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_24932(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24932,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24936,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_24936(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24934 in k24930 in k24878 in k24875 in k24872 in mm:make-ctrl in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_24936(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24883(t7,t6);}

/* k24881 in k24878 in k24875 in k24872 in mm:make-ctrl in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_24883(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24883,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24886,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_24886(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k24884 in k24881 in k24878 in k24875 in k24872 in mm:make-ctrl in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_24886(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24886,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24890,a[2]=((C_word)li351),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t2+1)))(7,t2,((C_word*)t0)[6],C_fix(11),((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* f_24890 in k24884 in k24881 in k24878 in k24875 in k24872 in mm:make-ctrl in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_24890(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_24890,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t8=(C_word)C_i_foreign_fixnum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_fixnum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=t1;
((C_proc2)(void*)(*((C_word*)t13+1)))(2,t13,(C_word)stub4387(t7,t8,t9,t10,t11,t12));}

/* mm:touch? in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_24851(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_24851,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24856,a[2]=((C_word)li349),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(10));}

/* f_24856 in mm:touch? in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_24856(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_24856,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub4271(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:make-touch in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_24122(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+72)){
C_save_and_reclaim((void*)tr2r,(void*)f_24122r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_24122r(t0,t1,t2);}}

static void C_ccall f_24122r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word *a=C_alloc(72);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(0);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_fix(0);
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_FALSE;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=t2;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_SCHEME_FALSE;
t22=(*a=C_VECTOR_TYPE|1,a[1]=t21,tmp=(C_word)a,a+=2,tmp);
t23=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_24126,a[2]=t18,a[3]=t16,a[4]=t14,a[5]=t22,a[6]=t12,a[7]=t2,a[8]=t20,a[9]=t8,a[10]=t6,a[11]=t10,a[12]=t4,a[13]=t1,tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t20)[1]))){
t24=t23;
f_24126(t24,C_SCHEME_UNDEFINED);}
else{
t24=(C_word)C_i_car(((C_word*)t20)[1]);
t25=(C_word)C_eqp(t24,lf[577]);
if(C_truep(t25)){
t26=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24694,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t12,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t27=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t27))(4,t27,t26,lf[19],lf[577]);}
else{
t27=t26;
f_24694(2,t27,C_SCHEME_UNDEFINED);}}
else{
t26=(C_word)C_eqp(t24,lf[578]);
if(C_truep(t26)){
t27=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24729,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t14,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t28=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t28))(4,t28,t27,lf[19],lf[578]);}
else{
t28=t27;
f_24729(2,t28,C_SCHEME_UNDEFINED);}}
else{
t27=(C_word)C_eqp(t24,lf[585]);
if(C_truep(t27)){
t28=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24764,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t16,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t16)[1])){
C_trace("error");
t29=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t29))(4,t29,t28,lf[19],lf[585]);}
else{
t29=t28;
f_24764(2,t29,C_SCHEME_UNDEFINED);}}
else{
t28=(C_word)C_eqp(t24,lf[580]);
if(C_truep(t28)){
t29=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24799,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t18,a[7]=t10,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t30=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t30))(4,t30,t29,lf[19],lf[580]);}
else{
t30=t29;
f_24799(2,t30,C_SCHEME_UNDEFINED);}}
else{
t29=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24828,a[2]=t23,a[3]=t12,a[4]=t4,a[5]=t20,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t22)[1])){
C_trace("error");
t30=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t30))(4,t30,t29,lf[10],t2);}
else{
t30=t29;
f_24828(2,t30,C_SCHEME_UNDEFINED);}}}}}}}

/* k24826 in mm:make-touch in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_24828(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24828,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24835,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24843,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k24841 in k24826 in mm:make-touch in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_24843(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_24835(2,t2,C_SCHEME_UNDEFINED);}}

/* k24833 in k24826 in mm:make-touch in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_24835(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_24126(t5,t4);}

/* k24797 in mm:make-touch in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_24799(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24799,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24803,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_24803(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24801 in k24797 in mm:make-touch in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_24803(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24126(t7,t6);}

/* k24762 in mm:make-touch in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_24764(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24764,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24768,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_24768(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24766 in k24762 in mm:make-touch in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_24768(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24126(t7,t6);}

/* k24727 in mm:make-touch in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_24729(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24729,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24733,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_24733(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24731 in k24727 in mm:make-touch in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_24733(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24126(t7,t6);}

/* k24692 in mm:make-touch in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_24694(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24694,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24698,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_24698(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24696 in k24692 in mm:make-touch in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_24698(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24126(t7,t6);}

/* k24124 in mm:make-touch in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_24126(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[52],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24126,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_24129,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_24129(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[577]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24524,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[577]);}
else{
t6=t5;
f_24524(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[578]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24559,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[578]);}
else{
t7=t6;
f_24559(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[585]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24594,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[585]);}
else{
t8=t7;
f_24594(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[580]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24629,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[580]);}
else{
t9=t8;
f_24629(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24658,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[10],((C_word*)t0)[7]);}
else{
t9=t8;
f_24658(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k24656 in k24124 in mm:make-touch in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_24658(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24658,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24665,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24673,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k24671 in k24656 in k24124 in mm:make-touch in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_24673(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_24665(2,t2,C_SCHEME_UNDEFINED);}}

/* k24663 in k24656 in k24124 in mm:make-touch in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_24665(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_24129(t5,t4);}

/* k24627 in k24124 in mm:make-touch in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_24629(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24629,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24633,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_24633(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24631 in k24627 in k24124 in mm:make-touch in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_24633(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24129(t7,t6);}

/* k24592 in k24124 in mm:make-touch in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_24594(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24594,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24598,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_24598(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24596 in k24592 in k24124 in mm:make-touch in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_24598(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24129(t7,t6);}

/* k24557 in k24124 in mm:make-touch in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_24559(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24559,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24563,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_24563(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24561 in k24557 in k24124 in mm:make-touch in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_24563(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24129(t7,t6);}

/* k24522 in k24124 in mm:make-touch in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_24524(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24524,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24528,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_24528(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24526 in k24522 in k24124 in mm:make-touch in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_24528(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24129(t7,t6);}

/* k24127 in k24124 in mm:make-touch in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_24129(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[52],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24129,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_24132,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_24132(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[577]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24354,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[577]);}
else{
t6=t5;
f_24354(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[578]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24389,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[578]);}
else{
t7=t6;
f_24389(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[585]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24424,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[585]);}
else{
t8=t7;
f_24424(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[580]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24459,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[580]);}
else{
t9=t8;
f_24459(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24488,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[10],((C_word*)t0)[7]);}
else{
t9=t8;
f_24488(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k24486 in k24127 in k24124 in mm:make-touch in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_24488(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24488,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24495,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24503,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k24501 in k24486 in k24127 in k24124 in mm:make-touch in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_24503(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_24495(2,t2,C_SCHEME_UNDEFINED);}}

/* k24493 in k24486 in k24127 in k24124 in mm:make-touch in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_24495(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_24132(t5,t4);}

/* k24457 in k24127 in k24124 in mm:make-touch in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_24459(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24459,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24463,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_24463(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24461 in k24457 in k24127 in k24124 in mm:make-touch in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_24463(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24132(t7,t6);}

/* k24422 in k24127 in k24124 in mm:make-touch in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_24424(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24424,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24428,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_24428(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24426 in k24422 in k24127 in k24124 in mm:make-touch in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_24428(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24132(t7,t6);}

/* k24387 in k24127 in k24124 in mm:make-touch in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_24389(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24389,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24393,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_24393(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24391 in k24387 in k24127 in k24124 in mm:make-touch in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_24393(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24132(t7,t6);}

/* k24352 in k24127 in k24124 in mm:make-touch in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_24354(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24354,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24358,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_24358(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24356 in k24352 in k24127 in k24124 in mm:make-touch in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_24358(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24132(t7,t6);}

/* k24130 in k24127 in k24124 in mm:make-touch in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_24132(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[47],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24132,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_24135,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[11],a[7]=((C_word*)t0)[12],a[8]=((C_word*)t0)[13],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_24135(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[577]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24184,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[577]);}
else{
t6=t5;
f_24184(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[578]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24219,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[578]);}
else{
t7=t6;
f_24219(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[585]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24254,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[585]);}
else{
t8=t7;
f_24254(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[580]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24289,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[580]);}
else{
t9=t8;
f_24289(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24318,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[10],((C_word*)t0)[7]);}
else{
t9=t8;
f_24318(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k24316 in k24130 in k24127 in k24124 in mm:make-touch in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_24318(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24318,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24325,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24333,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k24331 in k24316 in k24130 in k24127 in k24124 in mm:make-touch in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_24333(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_24325(2,t2,C_SCHEME_UNDEFINED);}}

/* k24323 in k24316 in k24130 in k24127 in k24124 in mm:make-touch in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_24325(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_24135(t5,t4);}

/* k24287 in k24130 in k24127 in k24124 in mm:make-touch in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_24289(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24289,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24293,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_24293(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24291 in k24287 in k24130 in k24127 in k24124 in mm:make-touch in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_24293(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24135(t7,t6);}

/* k24252 in k24130 in k24127 in k24124 in mm:make-touch in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_24254(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24254,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24258,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_24258(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24256 in k24252 in k24130 in k24127 in k24124 in mm:make-touch in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_24258(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24135(t7,t6);}

/* k24217 in k24130 in k24127 in k24124 in mm:make-touch in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_24219(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24219,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24223,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_24223(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24221 in k24217 in k24130 in k24127 in k24124 in mm:make-touch in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_24223(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24135(t7,t6);}

/* k24182 in k24130 in k24127 in k24124 in mm:make-touch in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_24184(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24184,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24188,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_24188(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24186 in k24182 in k24130 in k24127 in k24124 in mm:make-touch in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_24188(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24135(t7,t6);}

/* k24133 in k24130 in k24127 in k24124 in mm:make-touch in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_24135(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24135,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24138,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_24138(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k24136 in k24133 in k24130 in k24127 in k24124 in mm:make-touch in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_24138(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24138,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24142,a[2]=((C_word)li347),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t2+1)))(7,t2,((C_word*)t0)[6],C_fix(10),((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* f_24142 in k24136 in k24133 in k24130 in k24127 in k24124 in mm:make-touch in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_24142(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_24142,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t8=(C_word)C_i_foreign_fixnum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_fixnum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=t1;
((C_proc2)(void*)(*((C_word*)t13+1)))(2,t13,(C_word)stub4255(t7,t8,t9,t10,t11,t12));}

/* mm:off? in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_24103(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_24103,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24108,a[2]=((C_word)li345),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(8));}

/* f_24108 in mm:off? in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_24108(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_24108,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub4139(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:make-off in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_23652(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+58)){
C_save_and_reclaim((void*)tr2r,(void*)f_23652r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_23652r(t0,t1,t2);}}

static void C_ccall f_23652r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word *a=C_alloc(58);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(60);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=t2;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_23656,a[2]=t14,a[3]=t12,a[4]=t18,a[5]=t10,a[6]=t2,a[7]=t16,a[8]=t6,a[9]=t8,a[10]=t4,a[11]=t1,tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t16)[1]))){
t20=t19;
f_23656(t20,C_SCHEME_UNDEFINED);}
else{
t20=(C_word)C_i_car(((C_word*)t16)[1]);
t21=(C_word)C_eqp(t20,lf[577]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23981,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t10,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t10)[1])){
C_trace("error");
t23=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[19],lf[577]);}
else{
t23=t22;
f_23981(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t20,lf[578]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24016,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t12,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[19],lf[578]);}
else{
t24=t23;
f_24016(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(C_word)C_eqp(t20,lf[580]);
if(C_truep(t23)){
t24=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24051,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t14,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t25=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[19],lf[580]);}
else{
t25=t24;
f_24051(2,t25,C_SCHEME_UNDEFINED);}}
else{
t24=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24080,a[2]=t19,a[3]=t10,a[4]=t4,a[5]=t16,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t25=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[10],t2);}
else{
t25=t24;
f_24080(2,t25,C_SCHEME_UNDEFINED);}}}}}}

/* k24078 in mm:make-off in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_24080(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24080,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24087,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24095,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k24093 in k24078 in mm:make-off in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_24095(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_24087(2,t2,C_SCHEME_UNDEFINED);}}

/* k24085 in k24078 in mm:make-off in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_24087(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_23656(t5,t4);}

/* k24049 in mm:make-off in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_24051(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24051,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24055,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_24055(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24053 in k24049 in mm:make-off in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_24055(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23656(t7,t6);}

/* k24014 in mm:make-off in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_24016(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24016,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24020,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_24020(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k24018 in k24014 in mm:make-off in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_24020(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23656(t7,t6);}

/* k23979 in mm:make-off in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_23981(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23981,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23985,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_23985(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k23983 in k23979 in mm:make-off in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_23985(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23656(t7,t6);}

/* k23654 in mm:make-off in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_23656(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[42],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23656,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_23659,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_23659(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[577]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23846,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[577]);}
else{
t6=t5;
f_23846(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[578]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23881,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[578]);}
else{
t7=t6;
f_23881(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[580]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23916,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[580]);}
else{
t8=t7;
f_23916(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23945,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_23945(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k23943 in k23654 in mm:make-off in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_23945(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23945,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23952,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23960,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k23958 in k23943 in k23654 in mm:make-off in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_23960(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_23952(2,t2,C_SCHEME_UNDEFINED);}}

/* k23950 in k23943 in k23654 in mm:make-off in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_23952(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_23659(t5,t4);}

/* k23914 in k23654 in mm:make-off in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_23916(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23916,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23920,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_23920(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k23918 in k23914 in k23654 in mm:make-off in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_23920(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23659(t7,t6);}

/* k23879 in k23654 in mm:make-off in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_23881(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23881,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23885,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_23885(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k23883 in k23879 in k23654 in mm:make-off in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_23885(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23659(t7,t6);}

/* k23844 in k23654 in mm:make-off in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_23846(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23846,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23850,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_23850(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k23848 in k23844 in k23654 in mm:make-off in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_23850(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23659(t7,t6);}

/* k23657 in k23654 in mm:make-off in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_23659(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23659,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23662,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_23662(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[577]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23711,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[577]);}
else{
t6=t5;
f_23711(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[578]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23746,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[578]);}
else{
t7=t6;
f_23746(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[580]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23781,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[580]);}
else{
t8=t7;
f_23781(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23810,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_23810(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k23808 in k23657 in k23654 in mm:make-off in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_23810(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23810,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23817,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23825,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k23823 in k23808 in k23657 in k23654 in mm:make-off in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_23825(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_23817(2,t2,C_SCHEME_UNDEFINED);}}

/* k23815 in k23808 in k23657 in k23654 in mm:make-off in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_23817(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_23662(t5,t4);}

/* k23779 in k23657 in k23654 in mm:make-off in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_23781(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23781,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23785,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_23785(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k23783 in k23779 in k23657 in k23654 in mm:make-off in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_23785(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23662(t7,t6);}

/* k23744 in k23657 in k23654 in mm:make-off in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_23746(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23746,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23750,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_23750(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k23748 in k23744 in k23657 in k23654 in mm:make-off in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_23750(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23662(t7,t6);}

/* k23709 in k23657 in k23654 in mm:make-off in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_23711(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23711,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23715,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_23715(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k23713 in k23709 in k23657 in k23654 in mm:make-off in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_23715(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23662(t7,t6);}

/* k23660 in k23657 in k23654 in mm:make-off in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_23662(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23662,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23665,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_23665(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k23663 in k23660 in k23657 in k23654 in mm:make-off in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_23665(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23665,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23669,a[2]=((C_word)li343),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t2+1)))(7,t2,((C_word*)t0)[5],C_fix(8),((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0));}

/* f_23669 in k23663 in k23660 in k23657 in k23654 in mm:make-off in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_23669(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_23669,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t8=(C_word)C_i_foreign_fixnum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_fixnum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=t1;
((C_proc2)(void*)(*((C_word*)t13+1)))(2,t13,(C_word)stub4124(t7,t8,t9,t10,t11,t12));}

/* mm:on? in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_23633(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_23633,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23638,a[2]=((C_word)li341),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(9));}

/* f_23638 in mm:on? in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_23638(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_23638,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub4045(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:make-on in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_22904(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+72)){
C_save_and_reclaim((void*)tr2r,(void*)f_22904r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_22904r(t0,t1,t2);}}

static void C_ccall f_22904r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word *a=C_alloc(72);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(60);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(64);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_fix(0);
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_FALSE;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=t2;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_SCHEME_FALSE;
t22=(*a=C_VECTOR_TYPE|1,a[1]=t21,tmp=(C_word)a,a+=2,tmp);
t23=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_22908,a[2]=t18,a[3]=t16,a[4]=t14,a[5]=t22,a[6]=t12,a[7]=t2,a[8]=t20,a[9]=t8,a[10]=t6,a[11]=t10,a[12]=t4,a[13]=t1,tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t20)[1]))){
t24=t23;
f_22908(t24,C_SCHEME_UNDEFINED);}
else{
t24=(C_word)C_i_car(((C_word*)t20)[1]);
t25=(C_word)C_eqp(t24,lf[577]);
if(C_truep(t25)){
t26=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23476,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t12,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t27=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t27))(4,t27,t26,lf[19],lf[577]);}
else{
t27=t26;
f_23476(2,t27,C_SCHEME_UNDEFINED);}}
else{
t26=(C_word)C_eqp(t24,lf[578]);
if(C_truep(t26)){
t27=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23511,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t14,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t28=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t28))(4,t28,t27,lf[19],lf[578]);}
else{
t28=t27;
f_23511(2,t28,C_SCHEME_UNDEFINED);}}
else{
t27=(C_word)C_eqp(t24,lf[579]);
if(C_truep(t27)){
t28=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23546,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t16,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t16)[1])){
C_trace("error");
t29=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t29))(4,t29,t28,lf[19],lf[579]);}
else{
t29=t28;
f_23546(2,t29,C_SCHEME_UNDEFINED);}}
else{
t28=(C_word)C_eqp(t24,lf[580]);
if(C_truep(t28)){
t29=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23581,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t18,a[7]=t10,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t30=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t30))(4,t30,t29,lf[19],lf[580]);}
else{
t30=t29;
f_23581(2,t30,C_SCHEME_UNDEFINED);}}
else{
t29=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23610,a[2]=t23,a[3]=t12,a[4]=t4,a[5]=t20,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t22)[1])){
C_trace("error");
t30=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t30))(4,t30,t29,lf[10],t2);}
else{
t30=t29;
f_23610(2,t30,C_SCHEME_UNDEFINED);}}}}}}}

/* k23608 in mm:make-on in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_23610(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23610,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23617,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23625,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k23623 in k23608 in mm:make-on in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_23625(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_23617(2,t2,C_SCHEME_UNDEFINED);}}

/* k23615 in k23608 in mm:make-on in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_23617(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_22908(t5,t4);}

/* k23579 in mm:make-on in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_23581(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23581,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23585,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_23585(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k23583 in k23579 in mm:make-on in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_23585(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_22908(t7,t6);}

/* k23544 in mm:make-on in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_23546(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23546,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23550,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_23550(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k23548 in k23544 in mm:make-on in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_23550(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_22908(t7,t6);}

/* k23509 in mm:make-on in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_23511(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23511,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23515,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_23515(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k23513 in k23509 in mm:make-on in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_23515(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_22908(t7,t6);}

/* k23474 in mm:make-on in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_23476(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23476,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23480,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_23480(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k23478 in k23474 in mm:make-on in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_23480(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_22908(t7,t6);}

/* k22906 in mm:make-on in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_22908(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[52],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22908,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_22911,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_22911(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[577]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23306,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[577]);}
else{
t6=t5;
f_23306(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[578]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23341,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[578]);}
else{
t7=t6;
f_23341(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[579]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23376,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[579]);}
else{
t8=t7;
f_23376(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[580]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23411,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[580]);}
else{
t9=t8;
f_23411(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23440,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[10],((C_word*)t0)[7]);}
else{
t9=t8;
f_23440(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k23438 in k22906 in mm:make-on in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_23440(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23440,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23447,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23455,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k23453 in k23438 in k22906 in mm:make-on in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_23455(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_23447(2,t2,C_SCHEME_UNDEFINED);}}

/* k23445 in k23438 in k22906 in mm:make-on in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_23447(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_22911(t5,t4);}

/* k23409 in k22906 in mm:make-on in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_23411(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23411,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23415,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_23415(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k23413 in k23409 in k22906 in mm:make-on in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_23415(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_22911(t7,t6);}

/* k23374 in k22906 in mm:make-on in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_23376(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23376,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23380,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_23380(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k23378 in k23374 in k22906 in mm:make-on in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_23380(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_22911(t7,t6);}

/* k23339 in k22906 in mm:make-on in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_23341(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23341,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23345,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_23345(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k23343 in k23339 in k22906 in mm:make-on in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_23345(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_22911(t7,t6);}

/* k23304 in k22906 in mm:make-on in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_23306(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23306,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23310,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_23310(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k23308 in k23304 in k22906 in mm:make-on in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_23310(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_22911(t7,t6);}

/* k22909 in k22906 in mm:make-on in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_22911(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[52],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22911,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_22914,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_22914(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[577]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23136,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[577]);}
else{
t6=t5;
f_23136(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[578]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23171,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[578]);}
else{
t7=t6;
f_23171(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[579]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23206,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[579]);}
else{
t8=t7;
f_23206(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[580]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23241,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[580]);}
else{
t9=t8;
f_23241(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23270,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[10],((C_word*)t0)[7]);}
else{
t9=t8;
f_23270(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k23268 in k22909 in k22906 in mm:make-on in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_23270(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23270,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23277,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23285,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k23283 in k23268 in k22909 in k22906 in mm:make-on in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_23285(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_23277(2,t2,C_SCHEME_UNDEFINED);}}

/* k23275 in k23268 in k22909 in k22906 in mm:make-on in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_23277(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_22914(t5,t4);}

/* k23239 in k22909 in k22906 in mm:make-on in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_23241(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23241,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23245,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_23245(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k23243 in k23239 in k22909 in k22906 in mm:make-on in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_23245(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_22914(t7,t6);}

/* k23204 in k22909 in k22906 in mm:make-on in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_23206(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23206,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23210,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_23210(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k23208 in k23204 in k22909 in k22906 in mm:make-on in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_23210(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_22914(t7,t6);}

/* k23169 in k22909 in k22906 in mm:make-on in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_23171(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23171,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23175,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_23175(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k23173 in k23169 in k22909 in k22906 in mm:make-on in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_23175(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_22914(t7,t6);}

/* k23134 in k22909 in k22906 in mm:make-on in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_23136(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23136,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23140,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_23140(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k23138 in k23134 in k22909 in k22906 in mm:make-on in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_23140(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_22914(t7,t6);}

/* k22912 in k22909 in k22906 in mm:make-on in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_22914(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[47],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22914,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_22917,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[11],a[7]=((C_word*)t0)[12],a[8]=((C_word*)t0)[13],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_22917(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[577]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22966,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[577]);}
else{
t6=t5;
f_22966(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[578]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23001,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[578]);}
else{
t7=t6;
f_23001(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[579]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23036,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[579]);}
else{
t8=t7;
f_23036(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[580]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23071,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[580]);}
else{
t9=t8;
f_23071(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23100,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[10],((C_word*)t0)[7]);}
else{
t9=t8;
f_23100(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k23098 in k22912 in k22909 in k22906 in mm:make-on in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_23100(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23100,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23107,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23115,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k23113 in k23098 in k22912 in k22909 in k22906 in mm:make-on in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_23115(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_23107(2,t2,C_SCHEME_UNDEFINED);}}

/* k23105 in k23098 in k22912 in k22909 in k22906 in mm:make-on in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_23107(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_22917(t5,t4);}

/* k23069 in k22912 in k22909 in k22906 in mm:make-on in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_23071(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23071,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23075,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_23075(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k23073 in k23069 in k22912 in k22909 in k22906 in mm:make-on in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_23075(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_22917(t7,t6);}

/* k23034 in k22912 in k22909 in k22906 in mm:make-on in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_23036(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23036,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23040,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_23040(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k23038 in k23034 in k22912 in k22909 in k22906 in mm:make-on in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_23040(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_22917(t7,t6);}

/* k22999 in k22912 in k22909 in k22906 in mm:make-on in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_23001(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23001,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23005,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_23005(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k23003 in k22999 in k22912 in k22909 in k22906 in mm:make-on in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_23005(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_22917(t7,t6);}

/* k22964 in k22912 in k22909 in k22906 in mm:make-on in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_22966(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22966,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22970,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_22970(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k22968 in k22964 in k22912 in k22909 in k22906 in mm:make-on in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_22970(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_22917(t7,t6);}

/* k22915 in k22912 in k22909 in k22906 in mm:make-on in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_22917(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22917,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22920,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_22920(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k22918 in k22915 in k22912 in k22909 in k22906 in mm:make-on in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_22920(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22920,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22924,a[2]=((C_word)li339),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t2+1)))(7,t2,((C_word*)t0)[6],C_fix(9),((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* f_22924 in k22918 in k22915 in k22912 in k22909 in k22906 in mm:make-on in k22758 in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_22924(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_22924,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t8=(C_word)C_i_foreign_fixnum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_fixnum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=t1;
((C_proc2)(void*)(*((C_word*)t13+1)))(2,t13,(C_word)stub4029(t7,t8,t9,t10,t11,t12));}

/* parse-iteration in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_22566(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22566,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22574,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t6=t3;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_nullp(((C_word*)t7)[1]);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22406,a[2]=t4,a[3]=t7,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
if(C_truep(t8)){
t10=t9;
f_22406(t10,t8);}
else{
t10=(C_word)C_i_car(((C_word*)t7)[1]);
t11=(C_word)C_i_symbolp(t10);
t12=t9;
f_22406(t12,(C_word)C_i_not(t11));}}

/* k22404 in parse-iteration in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_22406(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[37],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22406,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22413,a[2]=((C_word*)t0)[4],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 370  make-loop-clause");
f_19350(t2,(C_word)C_a_i_list(&a,4,lf[393],lf[566],lf[398],((C_word*)((C_word*)t0)[3])[1]));}
else{
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22414,a[2]=((C_word)li334),tmp=(C_word)a,a+=3,tmp);
t3=((C_word*)((C_word*)t0)[3])[1];
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_END_OF_LIST;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22439,a[2]=t6,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t8=C_SCHEME_UNDEFINED;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_set_block_item(t9,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_22441,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=t9,a[5]=t6,a[6]=t4,a[7]=((C_word*)t0)[3],a[8]=((C_word)li337),tmp=(C_word)a,a+=9,tmp));
t11=((C_word*)t9)[1];
f_22441(t11,t7,C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST);}}

/* do3827 in k22404 in parse-iteration in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_22441(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22441,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t10=t1;
((C_proc2)(void*)(*((C_word*)t10+1)))(2,t10,C_SCHEME_UNDEFINED);}
else{
t10=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_22451,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t9,a[5]=t7,a[6]=t1,a[7]=((C_word*)t0)[4],a[8]=((C_word*)t0)[5],a[9]=t8,a[10]=((C_word*)t0)[7],a[11]=((C_word*)t0)[6],a[12]=t6,tmp=(C_word)a,a+=13,tmp);
t11=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t12=(C_word)C_eqp(t11,lf[310]);
if(C_truep(t12)){
t13=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t14=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t15=C_mutate(((C_word *)((C_word*)t0)[7])+1,t14);
t16=t10;
f_22451(t16,t13);}
else{
t13=t10;
f_22451(t13,C_SCHEME_UNDEFINED);}}}

/* k22449 in do3827 in k22404 in parse-iteration in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_22451(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22451,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_22455,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
C_trace("ChickenBridge.scm: 370  loop-op?");
f_19572(t2,t3,((C_word*)t0)[3]);}

/* k22453 in k22449 in do3827 in k22404 in parse-iteration in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_22455(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22455,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[12])+1,t1);
t3=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_22458,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[12],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],a[12]=((C_word*)t0)[11],tmp=(C_word)a,a+=13,tmp);
t4=((C_word*)((C_word*)t0)[12])[1];
if(C_truep(t4)){
t5=t3;
f_22458(2,t5,C_SCHEME_UNDEFINED);}
else{
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
C_trace("ChickenBridge.scm: 370  loop-error");
f_19590(t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[11])[1],(C_word)C_a_i_list(&a,3,lf[571],t5,lf[572]));}}

/* k22456 in k22453 in k22449 in do3827 in k22404 in parse-iteration in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_22458(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22458,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_22461,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22510,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[6],a[6]=((C_word)li335),tmp=(C_word)a,a+=7,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22519,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[5],a[4]=((C_word)li336),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 370  call-with-values");
C_call_with_values(4,0,t2,t3,t4);}

/* a22518 in k22456 in k22453 in k22449 in do3827 in k22404 in parse-iteration in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_22519(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_22519,4,t0,t1,t2,t3);}
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t5);}

/* a22509 in k22456 in k22453 in k22449 in do3827 in k22404 in parse-iteration in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_22510(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22510,2,t0,t1);}
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[5])[1]);
t3=t2;
((C_proc5)C_retrieve_proc(t3))(5,t3,t1,((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2]);}

/* k22459 in k22456 in k22453 in k22449 in do3827 in k22404 in parse-iteration in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_22461(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22461,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_22464,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[12],tmp=(C_word)a,a+=11,tmp);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22480,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[3],a[5]=t2,a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[4],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 370  op-type?");
f_22414(t3,((C_word*)((C_word*)t0)[6])[1],lf[557]);}

/* k22478 in k22459 in k22456 in k22453 in k22449 in do3827 in k22404 in parse-iteration in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_22480(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22480,2,t0,t1);}
if(C_truep(t1)){
t2=C_mutate(((C_word *)((C_word*)t0)[7])+1,((C_word*)((C_word*)t0)[6])[1]);
t3=((C_word*)t0)[5];
f_22464(2,t3,t2);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22487,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 370  op-type?");
f_22414(t2,((C_word*)((C_word*)t0)[6])[1],lf[570]);}}

/* k22485 in k22478 in k22459 in k22456 in k22453 in k22449 in do3827 in k22404 in parse-iteration in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_22487(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22487,2,t0,t1);}
if(C_truep(t1)){
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t2=((C_word*)t0)[5];
f_22464(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
C_trace("ChickenBridge.scm: 370  loop-error");
f_19590(((C_word*)t0)[5],((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],(C_word)C_a_i_list(&a,5,lf[567],t2,lf[568],t3,lf[569]));}}
else{
t2=((C_word*)t0)[5];
f_22464(2,t2,C_SCHEME_UNDEFINED);}}

/* k22462 in k22459 in k22456 in k22453 in k22449 in do3827 in k22404 in parse-iteration in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_22464(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22464,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[10])+1,((C_word*)((C_word*)t0)[9])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[9])+1,((C_word*)((C_word*)t0)[8])[1]);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_22470,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
t5=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 370  append");
t6=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,((C_word*)((C_word*)t0)[7])[1],t5);}

/* k22468 in k22462 in k22459 in k22456 in k22453 in k22449 in do3827 in k22404 in parse-iteration in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_22470(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=((C_word*)((C_word*)t0)[7])[1];
f_22441(t3,((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k22437 in k22404 in parse-iteration in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_22439(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_22574(t2,((C_word*)((C_word*)t0)[2])[1]);}

/* op-type? in k22404 in parse-iteration in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_22414(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22414,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_cddr(t2);
if(C_truep((C_word)C_i_nullp(t4))){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_FALSE);}
else{
t5=(C_word)C_i_caddr(t2);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_eqp(t5,t3));}}

/* k22411 in k22404 in parse-iteration in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_22413(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22413,2,t0,t1);}
t2=((C_word*)t0)[2];
f_22574(t2,(C_word)C_a_i_list(&a,1,t1));}

/* k22572 in parse-iteration in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_22574(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 370  gather-clauses");
f_19501(((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* parse-conditional in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_22152(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word ab[34],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_22152,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_a_i_cons(&a,2,lf[560],t4);
t7=((C_word*)t5)[1];
t8=(C_word)C_i_car(((C_word*)t5)[1]);
t9=C_SCHEME_END_OF_LIST;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_END_OF_LIST;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_END_OF_LIST;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_END_OF_LIST;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_22174,a[2]=t8,a[3]=t7,a[4]=t3,a[5]=t6,a[6]=t16,a[7]=t14,a[8]=t1,a[9]=t10,a[10]=t12,a[11]=t5,tmp=(C_word)a,a+=12,tmp);
t18=(C_word)C_i_cdr(((C_word*)t5)[1]);
if(C_truep((C_word)C_i_nullp(t18))){
C_trace("ChickenBridge.scm: 370  loop-error");
f_19590(t17,t6,t7,(C_word)C_a_i_list(&a,3,lf[563],t8,lf[564]));}
else{
t19=t17;
f_22174(2,t19,C_SCHEME_UNDEFINED);}}

/* k22172 in parse-conditional in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_22174(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22174,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[11])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[11])[1]);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[11])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[11])+1,t5);
t7=C_mutate(((C_word *)((C_word*)t0)[10])+1,t4);
t8=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_22189,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[11])[1]))){
C_trace("ChickenBridge.scm: 370  loop-error");
f_19590(t8,((C_word*)t0)[5],((C_word*)((C_word*)t0)[11])[1],(C_word)C_a_i_list(&a,1,lf[562]));}
else{
t9=t8;
f_22189(2,t9,C_SCHEME_UNDEFINED);}}

/* k22187 in k22172 in parse-conditional in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_22189(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22189,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_22192,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[2],lf[6]);
if(C_truep(t3)){
t4=(C_word)C_a_i_list(&a,2,lf[312],((C_word*)((C_word*)t0)[11])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[11])+1,t4);
t6=t2;
f_22192(t6,t5);}
else{
t4=t2;
f_22192(t4,C_SCHEME_UNDEFINED);}}

/* k22190 in k22187 in k22172 in parse-conditional in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_22192(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22192,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_22195,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22362,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[6],a[5]=((C_word)li331),tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22368,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word)li332),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 370  call-with-values");
C_call_with_values(4,0,t2,t3,t4);}

/* a22367 in k22190 in k22187 in k22172 in parse-conditional in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_22368(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_22368,4,t0,t1,t2,t3);}
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t5);}

/* a22361 in k22190 in k22187 in k22172 in parse-conditional in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_22362(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22362,2,t0,t1);}
C_trace("ChickenBridge.scm: 370  parse-then-else-dependents");
f_22021(t1,((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k22193 in k22190 in k22187 in k22172 in parse-conditional in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_22195(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22195,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_22198,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[7])+1,t4);
t6=t2;
f_22198(t6,t5);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22344,a[2]=t2,a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 370  gather-clauses");
f_19501(t4,C_SCHEME_END_OF_LIST,((C_word*)((C_word*)t0)[7])[1]);}}

/* k22342 in k22193 in k22190 in k22187 in k22172 in parse-conditional in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_22344(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_22198(t3,t2);}

/* k22196 in k22193 in k22190 in k22187 in k22172 in parse-conditional in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_22198(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22198,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_22201,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 370  loop-operator-set!");
f_19248(t2,((C_word*)((C_word*)t0)[7])[1],lf[20]);}

/* k22199 in k22196 in k22193 in k22190 in k22187 in k22172 in parse-conditional in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_22201(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22201,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_22325,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22337,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 370  loop-looping");
t4=C_retrieve2(lf[387],"loop-looping");
f_19302(3,t4,t3,((C_word*)((C_word*)t0)[7])[1]);}

/* k22335 in k22199 in k22196 in k22193 in k22190 in k22187 in k22172 in parse-conditional in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_22337(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22337,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[336],t1);
C_trace("ChickenBridge.scm: 370  append");
t3=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[2],t2,C_SCHEME_END_OF_LIST);}

/* k22323 in k22199 in k22196 in k22193 in k22190 in k22187 in k22172 in parse-conditional in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_22325(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22325,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,4,lf[20],((C_word*)((C_word*)t0)[10])[1],t1,C_SCHEME_FALSE);
t3=C_mutate(((C_word *)((C_word*)t0)[9])+1,t2);
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22208,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
t5=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_22221,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t4,a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[6],tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t6=t5;
f_22221(t6,C_SCHEME_FALSE);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t7=t5;
f_22221(t7,(C_word)C_eqp(t6,lf[16]));}}

/* k22219 in k22323 in k22199 in k22196 in k22193 in k22190 in k22187 in k22172 in parse-conditional in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_22221(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22221,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[9])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[9])+1,t2);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_22228,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[9])[1]))){
C_trace("ChickenBridge.scm: 370  loop-error");
f_19590(t4,((C_word*)t0)[4],((C_word*)t0)[2],(C_word)C_a_i_list(&a,1,lf[561]));}
else{
t5=t4;
f_22228(2,t5,C_SCHEME_UNDEFINED);}}
else{
t2=((C_word*)t0)[6];
f_22208(t2,C_SCHEME_UNDEFINED);}}

/* k22226 in k22219 in k22323 in k22199 in k22196 in k22193 in k22190 in k22187 in k22172 in parse-conditional in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_22228(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22228,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22231,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22284,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word)li329),tmp=(C_word)a,a+=7,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22298,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word)li330),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 370  call-with-values");
C_call_with_values(4,0,t2,t3,t4);}

/* a22297 in k22226 in k22219 in k22323 in k22199 in k22196 in k22193 in k22190 in k22187 in k22172 in parse-conditional in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_22298(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_22298,4,t0,t1,t2,t3);}
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t5);}

/* a22283 in k22226 in k22219 in k22323 in k22199 in k22196 in k22193 in k22190 in k22187 in k22172 in parse-conditional in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_22284(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22284,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22292,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 370  append");
t4=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,((C_word*)t0)[2],t3);}

/* k22290 in a22283 in k22226 in k22219 in k22323 in k22199 in k22196 in k22193 in k22190 in k22187 in k22172 in parse-conditional in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_22292(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 370  parse-then-else-dependents");
f_22021(((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],t1,((C_word*)t0)[2]);}

/* k22229 in k22226 in k22219 in k22323 in k22199 in k22196 in k22193 in k22190 in k22187 in k22172 in parse-conditional in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_22231(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22231,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22234,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t6=t2;
f_22234(t6,t5);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22270,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 370  gather-clauses");
f_19501(t4,C_SCHEME_END_OF_LIST,((C_word*)((C_word*)t0)[2])[1]);}}

/* k22268 in k22229 in k22226 in k22219 in k22323 in k22199 in k22196 in k22193 in k22190 in k22187 in k22172 in parse-conditional in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_22270(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_22234(t3,t2);}

/* k22232 in k22229 in k22226 in k22219 in k22323 in k22199 in k22196 in k22193 in k22190 in k22187 in k22172 in parse-conditional in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_22234(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22234,NULL,2,t0,t1);}
t2=(C_word)C_i_cdddr(((C_word*)((C_word*)t0)[5])[1]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22263,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 370  loop-looping");
t4=C_retrieve2(lf[387],"loop-looping");
f_19302(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k22261 in k22232 in k22229 in k22226 in k22219 in k22323 in k22199 in k22196 in k22193 in k22190 in k22187 in k22172 in parse-conditional in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_22263(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22263,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[336],t1);
t3=(C_word)C_i_set_car(((C_word*)t0)[5],t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22240,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 370  loop-looping-set!");
f_19308(t4,((C_word*)((C_word*)t0)[4])[1],C_SCHEME_END_OF_LIST);}

/* k22238 in k22261 in k22232 in k22229 in k22226 in k22219 in k22323 in k22199 in k22196 in k22193 in k22190 in k22187 in k22172 in parse-conditional in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_22240(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22240,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22243,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 370  loop-looping-set!");
f_19308(t2,((C_word*)((C_word*)t0)[2])[1],C_SCHEME_END_OF_LIST);}

/* k22241 in k22238 in k22261 in k22232 in k22229 in k22226 in k22219 in k22323 in k22199 in k22196 in k22193 in k22190 in k22187 in k22172 in parse-conditional in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_22243(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22243,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22247,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_list(&a,2,((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[2])[1]);
C_trace("ChickenBridge.scm: 370  gather-clauses");
f_19501(t2,lf[20],t3);}

/* k22245 in k22241 in k22238 in k22261 in k22232 in k22229 in k22226 in k22219 in k22323 in k22199 in k22196 in k22193 in k22190 in k22187 in k22172 in parse-conditional in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_22247(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_22208(t3,t2);}

/* k22206 in k22323 in k22199 in k22196 in k22193 in k22190 in k22187 in k22172 in parse-conditional in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_22208(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22208,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22211,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[2])[1]);
C_trace("ChickenBridge.scm: 370  loop-looping-set!");
f_19308(t2,((C_word*)((C_word*)t0)[4])[1],t3);}

/* k22209 in k22206 in k22323 in k22199 in k22196 in k22193 in k22190 in k22187 in k22172 in parse-conditional in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_22211(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 370  values");
C_values(4,0,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* parse-then-else-dependents in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_22021(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22021,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t5)[1];
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_END_OF_LIST;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22025,a[2]=t5,a[3]=t11,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t13=C_SCHEME_UNDEFINED;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_set_block_item(t14,0,(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_22030,a[2]=t3,a[3]=t14,a[4]=t7,a[5]=t11,a[6]=t4,a[7]=t9,a[8]=t5,a[9]=((C_word)li327),tmp=(C_word)a,a+=10,tmp));
t16=((C_word*)t14)[1];
f_22030(t16,t12,C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* do3760 in parse-then-else-dependents in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_22030(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22030,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]);
t9=(C_truep(t8)?t8:((C_word*)((C_word*)t0)[7])[1]);
if(C_truep(t9)){
t10=t1;
((C_proc2)(void*)(*((C_word*)t10+1)))(2,t10,C_SCHEME_UNDEFINED);}
else{
t10=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t11=((C_word*)t0)[6];
t12=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_21978,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[6],a[5]=t6,a[6]=t1,a[7]=((C_word*)t0)[3],a[8]=t7,a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[4],a[11]=((C_word*)t0)[5],a[12]=t5,tmp=(C_word)a,a+=13,tmp);
C_trace("ChickenBridge.scm: 370  loop-op?");
f_19572(t12,t10,t11);}}

/* k21976 in do3760 in parse-then-else-dependents in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_21978(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21978,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_21984,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=t1,tmp=(C_word)a,a+=14,tmp);
if(C_truep(t1)){
t3=(C_word)C_i_cddr(t1);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t2;
f_21984(t4,C_SCHEME_FALSE);}
else{
t4=(C_word)C_i_caddr(t1);
t5=(C_word)C_eqp(t4,lf[557]);
if(C_truep(t5)){
t6=(C_word)C_i_car(t1);
t7=(C_word)C_i_member(t6,lf[558]);
t8=t2;
f_21984(t8,(C_word)C_i_not(t7));}
else{
t6=t2;
f_21984(t6,C_SCHEME_FALSE);}}}
else{
t3=t2;
f_21984(t3,C_SCHEME_FALSE);}}

/* k21982 in k21976 in do3760 in parse-then-else-dependents in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_21984(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21984,NULL,2,t0,t1);}
t2=(C_truep(t1)?((C_word*)t0)[13]:C_SCHEME_FALSE);
t3=C_mutate(((C_word *)((C_word*)t0)[12])+1,t2);
t4=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_22047,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[12],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],a[12]=((C_word*)t0)[11],tmp=(C_word)a,a+=13,tmp);
t5=((C_word*)((C_word*)t0)[12])[1];
if(C_truep(t5)){
t6=t4;
f_22047(2,t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
C_trace("ChickenBridge.scm: 370  loop-error");
f_19590(t4,((C_word*)t0)[4],((C_word*)((C_word*)t0)[10])[1],(C_word)C_a_i_list(&a,3,lf[555],t6,lf[556]));}}

/* k22045 in k21982 in k21976 in do3760 in parse-then-else-dependents in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_22047(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22047,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_22050,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[12],tmp=(C_word)a,a+=12,tmp);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22120,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[6],a[7]=((C_word)li325),tmp=(C_word)a,a+=8,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22133,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[5],a[4]=((C_word)li326),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 370  call-with-values");
C_call_with_values(4,0,t2,t3,t4);}

/* a22132 in k22045 in k21982 in k21976 in do3760 in parse-then-else-dependents in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_22133(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_22133,4,t0,t1,t2,t3);}
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t5);}

/* a22119 in k22045 in k21982 in k21976 in do3760 in parse-then-else-dependents in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_22120(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22120,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22128,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t1,a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 370  append");
t3=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k22126 in a22119 in k22045 in k21982 in k21976 in do3760 in parse-then-else-dependents in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_22128(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[5])[1]);
t3=t2;
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],t1,((C_word*)t0)[2]);}

/* k22048 in k22045 in k21982 in k21976 in do3760 in parse-then-else-dependents in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_22050(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22050,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_22054,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 370  append");
t4=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,((C_word*)((C_word*)t0)[11])[1],t3);}

/* k22052 in k22048 in k22045 in k21982 in k21976 in do3760 in parse-then-else-dependents in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_22054(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22054,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[11])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[10])+1,((C_word*)((C_word*)t0)[9])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[9])+1,((C_word*)((C_word*)t0)[8])[1]);
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22059,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[9])[1]))){
t6=t5;
f_22059(2,t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
t7=(C_word)C_eqp(t6,lf[310]);
if(C_truep(t7)){
t8=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[9])[1]);
t9=C_mutate(((C_word *)((C_word*)t0)[9])+1,t8);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[9])[1]))){
C_trace("ChickenBridge.scm: 370  loop-error");
f_19590(t5,((C_word*)t0)[3],((C_word*)((C_word*)t0)[10])[1],(C_word)C_a_i_list(&a,1,lf[554]));}
else{
t10=t5;
f_22059(2,t10,C_SCHEME_UNDEFINED);}}
else{
t8=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
t9=(C_word)C_eqp(t8,lf[16]);
if(C_truep(t9)){
t10=C_set_block_item(((C_word*)t0)[2],0,C_SCHEME_TRUE);
t11=t5;
f_22059(2,t11,t10);}
else{
t10=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22097,a[2]=t5,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t11=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
C_trace("ChickenBridge.scm: 370  loop-op?");
f_19572(t10,t11,((C_word*)t0)[3]);}}}}

/* k22095 in k22052 in k22048 in k22045 in k21982 in k21976 in do3760 in parse-then-else-dependents in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_22097(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_TRUE);
t3=((C_word*)t0)[2];
f_22059(2,t3,t2);}
else{
t2=((C_word*)t0)[2];
f_22059(2,t2,C_SCHEME_UNDEFINED);}}

/* k22057 in k22052 in k22048 in k22045 in k21982 in k21976 in do3760 in parse-then-else-dependents in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_22059(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[6])[1];
f_22030(t2,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k22023 in parse-then-else-dependents in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_22025(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 370  values");
C_values(4,0,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* parse-return in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_21920(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[23],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_21920,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_car(((C_word*)t5)[1]);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21927,a[2]=t4,a[3]=t6,a[4]=t1,a[5]=t10,a[6]=t8,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
t12=(C_word)C_i_cdr(((C_word*)t5)[1]);
if(C_truep((C_word)C_i_nullp(t12))){
t13=(C_word)C_i_car(((C_word*)t5)[1]);
C_trace("ChickenBridge.scm: 370  loop-error");
f_19590(t11,t4,((C_word*)t5)[1],(C_word)C_a_i_list(&a,3,lf[551],t13,lf[552]));}
else{
t13=t11;
f_21927(2,t13,C_SCHEME_UNDEFINED);}}

/* k21925 in parse-return in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_21927(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21927,2,t0,t1);}
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[7])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[7])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[7])+1,t4);
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21958,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 370  loop-op?");
f_19572(t6,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k21956 in k21925 in parse-return in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_21958(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21958,2,t0,t1);}
t2=(C_word)C_i_cadddr(t1);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21946,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21954,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 370  func");
t6=((C_word*)((C_word*)t0)[5])[1];
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[2])[1]);}

/* k21952 in k21956 in k21925 in parse-return in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_21954(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21954,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
C_trace("ChickenBridge.scm: 370  make-loop-clause");
f_19350(((C_word*)t0)[2],(C_word)C_a_i_list(&a,4,lf[393],lf[537],lf[398],t2));}

/* k21944 in k21956 in k21925 in parse-return in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_21946(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 370  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-thereis in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_21829(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[26],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_21829,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_car(((C_word*)t5)[1]);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_21836,a[2]=t4,a[3]=t6,a[4]=t10,a[5]=t1,a[6]=t12,a[7]=t8,a[8]=t5,tmp=(C_word)a,a+=9,tmp);
t14=(C_word)C_i_cdr(((C_word*)t5)[1]);
if(C_truep((C_word)C_i_nullp(t14))){
t15=(C_word)C_i_car(((C_word*)t5)[1]);
C_trace("ChickenBridge.scm: 370  loop-error");
f_19590(t13,t4,((C_word*)t5)[1],(C_word)C_a_i_list(&a,3,lf[548],t15,lf[549]));}
else{
t15=t13;
f_21836(2,t15,C_SCHEME_UNDEFINED);}}

/* k21834 in parse-thereis in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_21836(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21836,2,t0,t1);}
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[8])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21904,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 370  loop-op?");
f_19572(t4,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k21902 in k21834 in parse-thereis in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_21904(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21904,2,t0,t1);}
t2=(C_word)C_i_cadddr(t1);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21847,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
t5=(C_word)C_eqp(((C_word*)t0)[2],lf[545]);
if(C_truep(t5)){
t6=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_FALSE);
t7=t4;
f_21847(t7,t6);}
else{
t6=(C_word)C_eqp(((C_word*)t0)[2],lf[546]);
if(C_truep(t6)){
t7=(C_word)C_a_i_list(&a,2,lf[312],((C_word*)((C_word*)t0)[4])[1]);
t8=C_mutate(((C_word *)((C_word*)t0)[4])+1,t7);
t9=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_TRUE);
t10=t4;
f_21847(t10,t9);}
else{
t7=(C_word)C_eqp(((C_word*)t0)[2],lf[547]);
if(C_truep(t7)){
t8=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_TRUE);
t9=t4;
f_21847(t9,t8);}
else{
t8=t4;
f_21847(t8,C_SCHEME_UNDEFINED);}}}}

/* k21845 in k21902 in k21834 in parse-thereis in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_21847(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21847,NULL,2,t0,t1);}
t2=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21858,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21874,a[2]=t4,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t6=(C_word)C_i_not(((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 370  func");
t7=((C_word*)((C_word*)t0)[2])[1];
((C_proc3)C_retrieve_proc(t7))(3,t7,t5,t6);}

/* k21872 in k21845 in k21902 in k21834 in parse-thereis in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_21874(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21874,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,lf[20],((C_word*)((C_word*)t0)[4])[1],t1);
t3=(C_word)C_a_i_list(&a,1,t2);
t4=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 370  make-loop-clause");
f_19350(((C_word*)t0)[2],(C_word)C_a_i_list(&a,6,lf[393],lf[545],lf[398],t3,lf[401],t4));}

/* k21856 in k21845 in k21902 in k21834 in parse-thereis in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_21858(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 370  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-while-until in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_21763(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[19],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_21763,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t5)[1];
t7=(C_word)C_i_car(((C_word*)t5)[1]);
t8=(C_word)C_i_cdr(((C_word*)t5)[1]);
t9=C_set_block_item(t5,0,t8);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21774,a[2]=t7,a[3]=t11,a[4]=t5,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t5)[1]))){
C_trace("ChickenBridge.scm: 370  loop-error");
f_19590(t12,t4,t6,(C_word)C_a_i_list(&a,3,lf[542],t7,lf[543]));}
else{
t13=t12;
f_21774(2,t13,C_SCHEME_UNDEFINED);}}

/* k21772 in parse-while-until in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_21774(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21774,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21777,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[2],lf[540]);
if(C_truep(t3)){
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t8=t2;
f_21777(t8,t7);}
else{
t4=(C_word)C_eqp(((C_word*)t0)[2],lf[541]);
if(C_truep(t4)){
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[4])+1,t6);
t8=(C_word)C_a_i_list(&a,2,lf[312],t5);
t9=C_mutate(((C_word *)((C_word*)t0)[3])+1,t8);
t10=t2;
f_21777(t10,t9);}
else{
t5=t2;
f_21777(t5,C_SCHEME_UNDEFINED);}}}

/* k21775 in k21772 in parse-while-until in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_21777(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21777,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21784,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_list(&a,3,lf[20],((C_word*)((C_word*)t0)[3])[1],lf[539]);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 370  make-loop-clause");
f_19350(t2,(C_word)C_a_i_list(&a,4,lf[393],((C_word*)t0)[2],lf[398],t4));}

/* k21782 in k21775 in k21772 in parse-while-until in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_21784(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 370  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* loop-return in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_21757(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_21757,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_list(&a,2,lf[537],t2));}

/* parse-accumulation in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_21211(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word ab[55],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_21211,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t5)[1];
t7=(C_word)C_i_car(((C_word*)t5)[1]);
t8=(C_word)C_i_cdr(((C_word*)t5)[1]);
t9=C_set_block_item(t5,0,t8);
t10=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21220,a[2]=((C_word)li315),tmp=(C_word)a,a+=3,tmp);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21225,a[2]=((C_word)li316),tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21230,a[2]=((C_word)li317),tmp=(C_word)a,a+=3,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_FALSE;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=C_SCHEME_FALSE;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_SCHEME_END_OF_LIST;
t22=(*a=C_VECTOR_TYPE|1,a[1]=t21,tmp=(C_word)a,a+=2,tmp);
t23=C_SCHEME_END_OF_LIST;
t24=(*a=C_VECTOR_TYPE|1,a[1]=t23,tmp=(C_word)a,a+=2,tmp);
t25=C_SCHEME_END_OF_LIST;
t26=(*a=C_VECTOR_TYPE|1,a[1]=t25,tmp=(C_word)a,a+=2,tmp);
t27=C_SCHEME_END_OF_LIST;
t28=(*a=C_VECTOR_TYPE|1,a[1]=t27,tmp=(C_word)a,a+=2,tmp);
t29=(*a=C_CLOSURE_TYPE|18,a[1]=(C_word)f_21242,a[2]=t3,a[3]=t11,a[4]=t6,a[5]=t4,a[6]=t12,a[7]=t10,a[8]=t20,a[9]=t24,a[10]=t26,a[11]=t22,a[12]=t28,a[13]=t7,a[14]=t18,a[15]=t1,a[16]=t16,a[17]=t14,a[18]=t5,tmp=(C_word)a,a+=19,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t5)[1]))){
C_trace("ChickenBridge.scm: 370  loop-error");
f_19590(t29,t4,((C_word*)t5)[1],(C_word)C_a_i_list(&a,3,lf[534],t7,lf[535]));}
else{
t30=t29;
f_21242(2,t30,C_SCHEME_UNDEFINED);}}

/* k21240 in parse-accumulation in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_21242(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[29],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21242,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[18])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[18])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[18])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[17])+1,t2);
t6=(*a=C_CLOSURE_TYPE|18,a[1]=(C_word)f_21253,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[17],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],a[12]=((C_word*)t0)[11],a[13]=((C_word*)t0)[12],a[14]=((C_word*)t0)[13],a[15]=((C_word*)t0)[14],a[16]=((C_word*)t0)[18],a[17]=((C_word*)t0)[15],a[18]=((C_word*)t0)[16],tmp=(C_word)a,a+=19,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[18])[1]))){
t7=t6;
f_21253(2,t7,C_SCHEME_UNDEFINED);}
else{
t7=(C_word)C_i_car(((C_word*)((C_word*)t0)[18])[1]);
t8=(C_word)C_eqp(t7,lf[530]);
if(C_truep(t8)){
t9=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21706,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t6,a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[18],tmp=(C_word)a,a+=7,tmp);
t10=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[18])[1]);
if(C_truep((C_word)C_i_nullp(t10))){
C_trace("ChickenBridge.scm: 370  loop-error");
f_19590(t9,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[533]));}
else{
t11=t9;
f_21706(2,t11,C_SCHEME_UNDEFINED);}}
else{
t9=t6;
f_21253(2,t9,C_SCHEME_UNDEFINED);}}}

/* k21704 in k21240 in parse-accumulation in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_21706(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21706,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21712,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[6])[1]);
C_trace("ChickenBridge.scm: 370  loop-variable?");
f_19578(t2,t3);}

/* k21710 in k21704 in k21240 in parse-accumulation in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_21712(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21712,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[6])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[6])+1,t4);
t6=((C_word*)t0)[4];
f_21253(2,t6,t5);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
C_trace("ChickenBridge.scm: 370  loop-error");
f_19590(((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],(C_word)C_a_i_list(&a,3,lf[531],t2,lf[532]));}}

/* k21251 in k21240 in parse-accumulation in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_21253(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21253,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|17,a[1]=(C_word)f_21257,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[12],a[12]=((C_word*)t0)[13],a[13]=((C_word*)t0)[14],a[14]=((C_word*)t0)[15],a[15]=((C_word*)t0)[16],a[16]=((C_word*)t0)[17],a[17]=((C_word*)t0)[18],tmp=(C_word)a,a+=18,tmp);
t3=((C_word*)((C_word*)t0)[8])[1];
t4=((C_word*)t0)[2];
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21138,a[2]=t3,a[3]=t7,a[4]=t5,a[5]=((C_word)li319),tmp=(C_word)a,a+=6,tmp));
t9=((C_word*)t7)[1];
f_21138(t9,t2,C_SCHEME_FALSE);}

/* do3582 in k21251 in k21240 in parse-accumulation in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_21138(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21138,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[4])[1]);
t5=(C_truep(t4)?t4:((C_word*)t3)[1]);
if(C_truep(t5)){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,((C_word*)t3)[1]);}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21152,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21163,a[2]=t6,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t8=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 370  loop-collectors");
t9=C_retrieve2(lf[384],"loop-collectors");
f_19266(3,t9,t7,t8);}}

/* k21161 in do3582 in k21251 in k21240 in parse-accumulation in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_21163(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21163,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21098,a[2]=((C_word*)t0)[3],a[3]=t5,a[4]=t3,a[5]=((C_word)li318),tmp=(C_word)a,a+=6,tmp));
t7=((C_word*)t5)[1];
f_21098(t7,((C_word*)t0)[2],C_SCHEME_FALSE);}

/* do3574 in k21161 in do3582 in k21251 in k21240 in parse-accumulation in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_21098(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21098,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[4])[1]);
t5=(C_truep(t4)?t4:((C_word*)t3)[1]);
if(C_truep(t5)){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,((C_word*)t3)[1]);}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21111,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t7=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t8=(C_word)C_i_car(t7);
t9=(C_word)C_eqp(((C_word*)t0)[2],t8);
if(C_truep(t9)){
t10=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t11=C_set_block_item(t3,0,t10);
t12=t6;
f_21111(t12,t11);}
else{
t10=t6;
f_21111(t10,C_SCHEME_UNDEFINED);}}}

/* k21109 in do3574 in k21161 in do3582 in k21251 in k21240 in parse-accumulation in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_21111(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=((C_word*)((C_word*)t0)[4])[1];
f_21098(t4,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k21150 in do3582 in k21251 in k21240 in parse-accumulation in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_21152(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=((C_word*)((C_word*)t0)[3])[1];
f_21138(t5,((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1]);}

/* k21255 in k21251 in k21240 in parse-accumulation in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_21257(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21257,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[17])+1,t1);
t3=(*a=C_CLOSURE_TYPE|14,a[1]=(C_word)f_21260,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[12],a[10]=((C_word*)t0)[13],a[11]=((C_word*)t0)[17],a[12]=((C_word*)t0)[14],a[13]=((C_word*)t0)[15],a[14]=((C_word*)t0)[16],tmp=(C_word)a,a+=15,tmp);
t4=((C_word*)((C_word*)t0)[17])[1];
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21690,a[2]=((C_word*)t0)[17],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[13],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=t3,tmp=(C_word)a,a+=8,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21694,a[2]=t5,a[3]=((C_word*)t0)[13],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 370  collector-type");
f_21225(t6,((C_word*)((C_word*)t0)[17])[1]);}
else{
t5=C_set_block_item(((C_word*)t0)[14],0,C_SCHEME_TRUE);
t6=t3;
f_21260(2,t6,t5);}}

/* k21692 in k21255 in k21251 in k21240 in parse-accumulation in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_21694(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a;
t2=lf[527];
t3=lf[528];
t4=lf[529];
t5=(C_word)C_eqp(((C_word*)t0)[3],t1);
if(C_truep(t5)){
t6=((C_word*)t0)[2];
f_21690(t6,t5);}
else{
t6=(C_word)C_i_member(((C_word*)t0)[3],t2);
t7=(C_truep(t6)?(C_word)C_i_member(t1,t2):C_SCHEME_FALSE);
if(C_truep(t7)){
t8=((C_word*)t0)[2];
f_21690(t8,t7);}
else{
t8=(C_word)C_i_member(((C_word*)t0)[3],t3);
t9=(C_truep(t8)?(C_word)C_i_member(t1,t3):C_SCHEME_FALSE);
if(C_truep(t9)){
t10=((C_word*)t0)[2];
f_21690(t10,t9);}
else{
t10=(C_word)C_i_member(((C_word*)t0)[3],t4);
t11=((C_word*)t0)[2];
f_21690(t11,(C_truep(t10)?(C_word)C_i_member(t1,t4):C_SCHEME_FALSE));}}}}

/* k21688 in k21255 in k21251 in k21240 in parse-accumulation in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_21690(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21690,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[7];
f_21260(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21686,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 370  collector-type");
f_21225(t2,((C_word*)((C_word*)t0)[2])[1]);}}

/* k21684 in k21688 in k21255 in k21251 in k21240 in parse-accumulation in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_21686(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21686,2,t0,t1);}
C_trace("ChickenBridge.scm: 370  loop-error");
f_19590(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],(C_word)C_a_i_list(&a,5,lf[524],t1,lf[525],((C_word*)t0)[2],lf[526]));}

/* k21258 in k21255 in k21251 in k21240 in parse-accumulation in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_21260(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[61],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21260,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_21263,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[12],a[9]=((C_word*)t0)[13],a[10]=((C_word*)t0)[14],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[10],lf[508]);
t4=(C_truep(t3)?t3:(C_word)C_eqp(((C_word*)t0)[10],lf[509]));
if(C_truep(t4)){
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21306,a[2]=t2,a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[5],a[5]=t6,a[6]=((C_word*)t0)[10],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[12])[1])){
t8=((C_word*)((C_word*)t0)[4])[1];
t9=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_21344,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=t7,a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[6],a[9]=t6,tmp=(C_word)a,a+=10,tmp);
if(C_truep(t8)){
t10=t9;
f_21344(2,t10,t8);}
else{
C_trace("ChickenBridge.scm: 370  gensym");
t10=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t10))(3,t10,t9,lf[510]);}}
else{
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21373,a[2]=t7,a[3]=t6,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 370  collector-acc");
f_21230(t8,((C_word*)((C_word*)t0)[11])[1]);}}
else{
t5=(C_word)C_eqp(((C_word*)t0)[10],lf[511]);
t6=(C_truep(t5)?t5:(C_word)C_eqp(((C_word*)t0)[10],lf[512]));
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_21385,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[11],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[12],a[8]=t2,a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[5],a[11]=((C_word*)t0)[6],a[12]=((C_word*)t0)[10],tmp=(C_word)a,a+=13,tmp);
C_trace("ChickenBridge.scm: 370  gensym");
t8=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t8))(3,t8,t7,lf[514]);}
else{
t7=(C_word)C_eqp(((C_word*)t0)[10],lf[18]);
t8=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_21480,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[11],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[12],a[9]=((C_word*)t0)[5],a[10]=((C_word*)t0)[10],a[11]=t2,a[12]=((C_word*)t0)[8],a[13]=((C_word*)t0)[4],tmp=(C_word)a,a+=14,tmp);
if(C_truep(t7)){
t9=t8;
f_21480(t9,t7);}
else{
t9=(C_word)C_eqp(((C_word*)t0)[10],lf[518]);
t10=t8;
f_21480(t10,(C_truep(t9)?t9:(C_word)C_eqp(((C_word*)t0)[10],lf[523])));}}}}

/* k21478 in k21258 in k21255 in k21251 in k21240 in parse-accumulation in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_21480(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[35],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21480,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_21483,a[2]=t5,a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[11],a[6]=((C_word*)t0)[12],a[7]=t3,a[8]=((C_word*)t0)[13],tmp=(C_word)a,a+=9,tmp);
t7=((C_word*)((C_word*)t0)[8])[1];
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_21596,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t6,a[6]=((C_word*)t0)[13],a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[7],a[10]=t3,a[11]=t5,tmp=(C_word)a,a+=12,tmp);
if(C_truep(((C_word*)((C_word*)t0)[13])[1])){
t9=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21654,a[2]=t8,a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 370  make-binding");
f_19584(t9,((C_word*)((C_word*)t0)[13])[1],lf[522]);}
else{
t9=t8;
f_21596(t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21589,a[2]=t6,a[3]=t3,a[4]=((C_word*)t0)[5],a[5]=t5,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 370  collector-acc");
f_21230(t8,((C_word*)((C_word*)t0)[5])[1]);}}
else{
t2=((C_word*)t0)[11];
f_21263(t2,C_SCHEME_UNDEFINED);}}

/* k21587 in k21478 in k21258 in k21255 in k21251 in k21240 in parse-accumulation in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_21589(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=((C_word*)((C_word*)t0)[4])[1];
t4=(C_word)C_i_cadddr(t3);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=((C_word*)t0)[2];
f_21483(t6,t5);}

/* k21652 in k21478 in k21258 in k21255 in k21251 in k21240 in parse-accumulation in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_21654(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21654,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_21596(t4,((C_word*)((C_word*)t0)[3])[1]);}

/* k21594 in k21478 in k21258 in k21255 in k21251 in k21240 in parse-accumulation in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_21596(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21596,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_21600,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 370  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[521]);}

/* k21598 in k21594 in k21478 in k21258 in k21255 in k21251 in k21240 in parse-accumulation in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_21600(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21600,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[11])+1,t1);
t3=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_21604,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 370  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[520]);}

/* k21602 in k21598 in k21594 in k21478 in k21258 in k21255 in k21251 in k21240 in parse-accumulation in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_21604(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21604,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[11])+1,t1);
t3=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_21646,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 370  make-binding");
f_19584(t3,((C_word*)((C_word*)t0)[11])[1],lf[519]);}

/* k21644 in k21602 in k21598 in k21594 in k21478 in k21258 in k21255 in k21251 in k21240 in parse-accumulation in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_21646(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21646,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[11])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t4=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_21642,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 370  make-binding");
f_19584(t4,((C_word*)((C_word*)t0)[10])[1],C_SCHEME_FALSE);}

/* k21640 in k21644 in k21602 in k21598 in k21594 in k21478 in k21258 in k21255 in k21251 in k21240 in parse-accumulation in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_21642(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21642,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[11])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[10])[1],((C_word*)((C_word*)t0)[9])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[8])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[8])+1,t5);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21620,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 370  make-collector");
f_21220(t7,((C_word*)((C_word*)t0)[6])[1],((C_word*)t0)[2],((C_word*)((C_word*)t0)[10])[1],((C_word*)((C_word*)t0)[9])[1]);}

/* k21618 in k21640 in k21644 in k21602 in k21598 in k21594 in k21478 in k21258 in k21255 in k21251 in k21240 in parse-accumulation in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_21620(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21620,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=((C_word*)((C_word*)t0)[5])[1];
if(C_truep(t3)){
t4=((C_word*)t0)[4];
f_21483(t4,C_SCHEME_UNDEFINED);}
else{
t4=(C_word)C_a_i_list(&a,2,lf[15],((C_word*)((C_word*)t0)[3])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[2])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[2])+1,t5);
t7=((C_word*)t0)[4];
f_21483(t7,((C_word*)((C_word*)t0)[2])[1]);}}

/* k21481 in k21478 in k21258 in k21255 in k21251 in k21240 in parse-accumulation in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_21483(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word ab[114],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21483,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21486,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[4],lf[18]);
if(C_truep(t3)){
t4=(C_word)C_a_i_list(&a,1,lf[515]);
t5=(C_word)C_a_i_list(&a,3,lf[18],((C_word*)((C_word*)t0)[3])[1],t4);
t6=(C_word)C_a_i_list(&a,3,lf[516],((C_word*)((C_word*)t0)[2])[1],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,((C_word*)((C_word*)t0)[6])[1]);
t8=C_mutate(((C_word *)((C_word*)t0)[6])+1,t7);
t9=(C_word)C_a_i_list(&a,2,lf[517],((C_word*)((C_word*)t0)[2])[1]);
t10=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[2])[1],t9);
t11=(C_word)C_a_i_cons(&a,2,t10,((C_word*)((C_word*)t0)[6])[1]);
t12=C_mutate(((C_word *)((C_word*)t0)[6])+1,t11);
t13=t2;
f_21486(t13,((C_word*)((C_word*)t0)[6])[1]);}
else{
t4=(C_word)C_eqp(((C_word*)t0)[4],lf[518]);
if(C_truep(t4)){
t5=(C_word)C_a_i_list(&a,2,lf[515],((C_word*)((C_word*)t0)[3])[1]);
t6=(C_word)C_a_i_list(&a,3,lf[516],((C_word*)((C_word*)t0)[2])[1],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,((C_word*)((C_word*)t0)[6])[1]);
t8=C_mutate(((C_word *)((C_word*)t0)[6])+1,t7);
t9=(C_word)C_a_i_list(&a,2,lf[15],((C_word*)((C_word*)t0)[2])[1]);
t10=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[2])[1],t9);
t11=(C_word)C_a_i_cons(&a,2,t10,((C_word*)((C_word*)t0)[6])[1]);
t12=C_mutate(((C_word *)((C_word*)t0)[6])+1,t11);
t13=t2;
f_21486(t13,((C_word*)((C_word*)t0)[6])[1]);}
else{
t5=(C_word)C_a_i_list(&a,3,lf[516],((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[3])[1]);
t6=(C_word)C_a_i_cons(&a,2,t5,((C_word*)((C_word*)t0)[6])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[6])+1,t6);
t8=(C_word)C_a_i_list(&a,2,lf[517],((C_word*)((C_word*)t0)[2])[1]);
t9=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[2])[1],t8);
t10=(C_word)C_a_i_cons(&a,2,t9,((C_word*)((C_word*)t0)[6])[1]);
t11=C_mutate(((C_word *)((C_word*)t0)[6])+1,t10);
t12=t2;
f_21486(t12,((C_word*)((C_word*)t0)[6])[1]);}}}

/* k21484 in k21481 in k21478 in k21258 in k21255 in k21251 in k21240 in parse-accumulation in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_21486(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21486,NULL,2,t0,t1);}
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
t2=(C_word)C_a_i_list(&a,2,lf[15],((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[5])[1],t2);
t4=(C_word)C_a_i_cons(&a,2,t3,((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=((C_word*)t0)[2];
f_21263(t6,((C_word*)((C_word*)t0)[3])[1]);}
else{
t2=((C_word*)t0)[2];
f_21263(t2,C_SCHEME_UNDEFINED);}}

/* k21383 in k21258 in k21255 in k21251 in k21240 in parse-accumulation in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_21385(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21385,2,t0,t1);}
t2=(C_word)C_eqp(((C_word*)t0)[12],lf[511]);
t3=(C_truep(t2)?lf[341]:lf[339]);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_21391,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],a[4]=t3,a[5]=t5,a[6]=((C_word*)t0)[10],a[7]=t1,a[8]=((C_word*)t0)[11],tmp=(C_word)a,a+=9,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
t7=((C_word*)((C_word*)t0)[6])[1];
t8=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_21435,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t6,a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[11],a[9]=t5,tmp=(C_word)a,a+=10,tmp);
if(C_truep(t7)){
t9=t8;
f_21435(2,t9,t7);}
else{
C_trace("ChickenBridge.scm: 370  gensym");
t9=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t9))(3,t9,t8,lf[513]);}}
else{
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21468,a[2]=t6,a[3]=t5,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 370  collector-acc");
f_21230(t7,((C_word*)((C_word*)t0)[5])[1]);}}

/* k21466 in k21383 in k21258 in k21255 in k21251 in k21240 in parse-accumulation in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_21468(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_21391(t3,t2);}

/* k21433 in k21383 in k21258 in k21255 in k21251 in k21240 in parse-accumulation in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_21435(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21435,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,t1);
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_21461,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 370  make-binding");
f_19584(t3,((C_word*)((C_word*)t0)[9])[1],C_SCHEME_FALSE);}

/* k21459 in k21433 in k21383 in k21258 in k21255 in k21251 in k21240 in parse-accumulation in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_21461(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21461,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[9])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[9])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21443,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 370  make-collector");
f_21220(t4,((C_word*)((C_word*)t0)[7])[1],((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_FALSE);}

/* k21441 in k21459 in k21433 in k21383 in k21258 in k21255 in k21251 in k21240 in parse-accumulation in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_21443(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21443,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=((C_word*)((C_word*)t0)[5])[1];
if(C_truep(t3)){
t4=((C_word*)t0)[4];
f_21391(t4,C_SCHEME_UNDEFINED);}
else{
t4=(C_word)C_a_i_list(&a,3,lf[311],((C_word*)((C_word*)t0)[3])[1],C_fix(0));
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[2])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[2])+1,t5);
t7=((C_word*)t0)[4];
f_21391(t7,((C_word*)((C_word*)t0)[2])[1]);}}

/* k21389 in k21383 in k21258 in k21255 in k21251 in k21240 in parse-accumulation in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_21391(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21391,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_21431,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 370  make-binding");
f_19584(t2,((C_word*)t0)[7],C_SCHEME_FALSE);}

/* k21429 in k21389 in k21383 in k21258 in k21255 in k21251 in k21240 in parse-accumulation in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_21431(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[66],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21431,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[8])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[8])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[7],((C_word*)((C_word*)t0)[6])[1]);
t5=(C_word)C_a_i_list(&a,2,lf[312],((C_word*)((C_word*)t0)[5])[1]);
t6=(C_word)C_a_i_list(&a,3,((C_word*)t0)[4],((C_word*)t0)[7],((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_a_i_list(&a,3,lf[311],t5,t6);
t8=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[7]);
t9=(C_word)C_a_i_list(&a,3,lf[20],t7,t8);
t10=(C_word)C_a_i_list(&a,3,lf[336],t4,t9);
t11=(C_word)C_a_i_cons(&a,2,t10,((C_word*)((C_word*)t0)[3])[1]);
t12=C_mutate(((C_word *)((C_word*)t0)[3])+1,t11);
t13=((C_word*)t0)[2];
f_21263(t13,((C_word*)((C_word*)t0)[3])[1]);}

/* k21371 in k21258 in k21255 in k21251 in k21240 in parse-accumulation in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_21373(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_21306(t3,t2);}

/* k21342 in k21258 in k21255 in k21251 in k21240 in parse-accumulation in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_21344(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21344,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,t1);
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_21366,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 370  make-binding");
f_19584(t3,((C_word*)((C_word*)t0)[9])[1],C_fix(0));}

/* k21364 in k21342 in k21258 in k21255 in k21251 in k21240 in parse-accumulation in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_21366(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21366,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[9])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[9])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21352,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 370  make-collector");
f_21220(t4,((C_word*)((C_word*)t0)[7])[1],((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_FALSE);}

/* k21350 in k21364 in k21342 in k21258 in k21255 in k21251 in k21240 in parse-accumulation in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_21352(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21352,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=((C_word*)((C_word*)t0)[5])[1];
if(C_truep(t3)){
t4=((C_word*)t0)[4];
f_21306(t4,C_SCHEME_UNDEFINED);}
else{
t4=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t6=((C_word*)t0)[4];
f_21306(t6,((C_word*)((C_word*)t0)[2])[1]);}}

/* k21304 in k21258 in k21255 in k21251 in k21240 in parse-accumulation in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_21306(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[51],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21306,NULL,2,t0,t1);}
t2=(C_word)C_eqp(((C_word*)t0)[6],lf[508]);
if(C_truep(t2)){
t3=(C_word)C_a_i_list(&a,3,lf[91],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[5])[1],t3);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_21263(t7,((C_word*)((C_word*)t0)[3])[1]);}
else{
t3=(C_word)C_a_i_list(&a,3,lf[91],((C_word*)((C_word*)t0)[5])[1],C_fix(1));
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[5])[1],t3);
t5=(C_word)C_a_i_list(&a,3,lf[20],((C_word*)((C_word*)t0)[4])[1],t4);
t6=(C_word)C_a_i_cons(&a,2,t5,((C_word*)((C_word*)t0)[3])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[3])+1,t6);
t8=((C_word*)t0)[2];
f_21263(t8,((C_word*)((C_word*)t0)[3])[1]);}}

/* k21261 in k21258 in k21255 in k21251 in k21240 in parse-accumulation in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_21263(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21263,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21270,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[10],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_21274,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=t2,a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 370  reverse");
t4=*((C_word*)lf[164]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k21272 in k21261 in k21258 in k21255 in k21251 in k21240 in parse-accumulation in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_21274(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21274,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_21278,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t1,a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 370  reverse");
t3=*((C_word*)lf[164]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k21276 in k21272 in k21261 in k21258 in k21255 in k21251 in k21240 in parse-accumulation in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_21278(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21278,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_21282,a[2]=((C_word*)t0)[3],a[3]=t1,a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 370  reverse");
t3=*((C_word*)lf[164]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k21280 in k21276 in k21272 in k21261 in k21258 in k21255 in k21251 in k21240 in parse-accumulation in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_21282(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21282,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_21286,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 370  reverse");
t3=*((C_word*)lf[164]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k21284 in k21280 in k21276 in k21272 in k21261 in k21258 in k21255 in k21251 in k21240 in parse-accumulation in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_21286(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21286,2,t0,t1);}
t2=(C_truep(((C_word*)((C_word*)t0)[8])[1])?(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[7])[1]):C_SCHEME_END_OF_LIST);
C_trace("ChickenBridge.scm: 370  make-loop-clause");
f_19350(((C_word*)t0)[6],(C_word)C_a_i_list(&a,14,lf[393],((C_word*)t0)[5],lf[394],((C_word*)t0)[4],lf[396],((C_word*)t0)[3],lf[398],((C_word*)t0)[2],lf[401],t1,lf[395],t2,lf[397],C_SCHEME_END_OF_LIST));}

/* k21268 in k21261 in k21258 in k21255 in k21251 in k21240 in parse-accumulation in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_21270(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 370  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* collector-acc in parse-accumulation in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_21230(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21230,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_caddr(t2));}

/* collector-type in parse-accumulation in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_21225(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21225,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_cadr(t2));}

/* make-collector in parse-accumulation in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_21220(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21220,NULL,5,t1,t2,t3,t4,t5);}
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_a_i_list(&a,4,t2,t3,t4,t5));}

/* parse-initially in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_21052(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[19],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_21052,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_car(((C_word*)t5)[1]);
t7=(C_word)C_i_cdr(((C_word*)t5)[1]);
t8=C_set_block_item(t5,0,t7);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21063,a[2]=t6,a[3]=t1,a[4]=t10,a[5]=t5,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t5)[1]))){
C_trace("ChickenBridge.scm: 370  loop-error");
f_19590(t11,t4,((C_word*)t5)[1],(C_word)C_a_i_list(&a,3,lf[505],t6,lf[506]));}
else{
t12=t11;
f_21063(2,t12,C_SCHEME_UNDEFINED);}}

/* k21061 in parse-initially in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_21063(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21063,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[5])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21078,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 370  make-loop-clause");
f_19350(t6,(C_word)C_a_i_list(&a,4,lf[393],((C_word*)t0)[2],lf[396],t7));}

/* k21076 in k21061 in parse-initially in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_21078(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 370  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-finally in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_21014(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[19],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_21014,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_car(((C_word*)t5)[1]);
t7=(C_word)C_i_cdr(((C_word*)t5)[1]);
t8=C_set_block_item(t5,0,t7);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21025,a[2]=t6,a[3]=t1,a[4]=t10,a[5]=t5,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t5)[1]))){
C_trace("ChickenBridge.scm: 370  loop-error");
f_19590(t11,t4,((C_word*)t5)[1],(C_word)C_a_i_list(&a,3,lf[502],t6,lf[503]));}
else{
t12=t11;
f_21025(2,t12,C_SCHEME_UNDEFINED);}}

/* k21023 in parse-finally in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_21025(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21025,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[5])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21040,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 370  make-loop-clause");
f_19350(t6,(C_word)C_a_i_list(&a,4,lf[393],((C_word*)t0)[2],lf[400],t7));}

/* k21038 in k21023 in parse-finally in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_21040(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 370  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-do in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_20947(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[21],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_20947,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t5)[1];
t7=(C_word)C_i_car(((C_word*)t5)[1]);
t8=(C_word)C_i_cdr(((C_word*)t5)[1]);
t9=C_set_block_item(t5,0,t8);
t10=C_SCHEME_END_OF_LIST;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20958,a[2]=t11,a[3]=t7,a[4]=t5,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
t13=C_SCHEME_UNDEFINED;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_set_block_item(t14,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_20967,a[2]=t14,a[3]=t7,a[4]=t6,a[5]=t4,a[6]=t11,a[7]=t5,a[8]=((C_word)li311),tmp=(C_word)a,a+=9,tmp));
t16=((C_word*)t14)[1];
f_20967(t16,t12);}

/* do3531 in parse-do in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_20967(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20967,NULL,2,t0,t1);}
t2=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]);
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_20977,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=t1,a[8]=((C_word*)t0)[6],tmp=(C_word)a,a+=9,tmp);
if(C_truep(t2)){
t4=t3;
f_20977(2,t4,t2);}
else{
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
C_trace("ChickenBridge.scm: 370  loop-op?");
f_19572(t3,t4,((C_word*)t0)[5]);}}

/* k20975 in do3531 in parse-do in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_20977(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20977,2,t0,t1);}
if(C_truep(t1)){
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
C_trace("ChickenBridge.scm: 370  loop-error");
f_19590(((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,3,lf[499],((C_word*)t0)[4],lf[500]));}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20990,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 370  reverse");
t3=*((C_word*)lf[164]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[8])[1]);}}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t3=(C_word)C_a_i_cons(&a,2,t2,((C_word*)((C_word*)t0)[8])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[8])+1,t3);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)((C_word*)t0)[2])[1];
f_20967(t7,((C_word*)t0)[7]);}}

/* k20988 in k20975 in do3531 in parse-do in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_20990(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}

/* k20956 in parse-do in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_20958(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20958,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20965,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 370  make-loop-clause");
f_19350(t2,(C_word)C_a_i_list(&a,4,lf[393],((C_word*)t0)[3],lf[398],((C_word*)((C_word*)t0)[2])[1]));}

/* k20963 in k20956 in parse-do in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_20965(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 370  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-with in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_20754(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word ab[37],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_20754,5,t0,t1,t2,t3,t4);}
t5=t2;
t6=(C_word)C_i_cdr(t2);
t7=t6;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_END_OF_LIST;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_END_OF_LIST;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_20761,a[2]=t12,a[3]=t10,a[4]=t5,a[5]=t4,a[6]=t14,a[7]=t16,a[8]=t18,a[9]=t8,a[10]=t1,tmp=(C_word)a,a+=11,tmp);
t20=C_SCHEME_UNDEFINED;
t21=(*a=C_VECTOR_TYPE|1,a[1]=t20,tmp=(C_word)a,a+=2,tmp);
t22=C_set_block_item(t21,0,(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_20814,a[2]=t18,a[3]=t16,a[4]=t5,a[5]=t4,a[6]=t14,a[7]=t12,a[8]=t10,a[9]=t21,a[10]=t8,a[11]=((C_word)li309),tmp=(C_word)a,a+=12,tmp));
t23=((C_word*)t21)[1];
f_20814(t23,t19,C_SCHEME_TRUE,C_SCHEME_FALSE);}

/* do3487 in parse-with in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_20814(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20814,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[10])[1]);
t7=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_20824,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=t4,a[10]=((C_word*)t0)[9],a[11]=t5,a[12]=((C_word*)t0)[10],a[13]=t1,tmp=(C_word)a,a+=14,tmp);
if(C_truep(t6)){
t8=t7;
f_20824(2,t8,t6);}
else{
t8=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
C_trace("ChickenBridge.scm: 370  loop-op?");
f_19572(t7,t8,((C_word*)t0)[5]);}}

/* k20822 in do3487 in parse-with in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_20824(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20824,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[13];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[12])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[12])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[12])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20835,a[2]=((C_word*)t0)[11],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[13],a[5]=((C_word*)t0)[10],tmp=(C_word)a,a+=6,tmp);
t7=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_20938,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=t6,a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[7],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[8],a[12]=((C_word*)t0)[9],tmp=(C_word)a,a+=13,tmp);
C_trace("ChickenBridge.scm: 370  loop-variable?");
f_19578(t7,((C_word*)((C_word*)t0)[11])[1]);}}

/* k20936 in k20822 in do3487 in parse-with in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_20938(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[64],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20938,2,t0,t1);}
t2=(C_truep(t1)?((C_word*)((C_word*)t0)[12])[1]:C_SCHEME_FALSE);
if(C_truep(t2)){
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_20844,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[12],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[11],tmp=(C_word)a,a+=10,tmp);
if(C_truep(((C_word*)((C_word*)t0)[11])[1])){
C_trace("ChickenBridge.scm: 370  loop-error");
f_19590(t3,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,3,lf[489],((C_word*)((C_word*)t0)[10])[1],lf[490]));}
else{
t4=t3;
f_20844(2,t4,C_SCHEME_UNDEFINED);}}
else{
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[10])[1],lf[310]);
if(C_truep(t3)){
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20866,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[11],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[8])[1])){
C_trace("ChickenBridge.scm: 370  loop-error");
f_19590(t4,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[491]));}
else{
if(C_truep(((C_word*)((C_word*)t0)[11])[1])){
if(C_truep(((C_word*)((C_word*)t0)[9])[1])){
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20895,a[2]=t4,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[11],a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 370  make-binding");
f_19584(t5,((C_word*)((C_word*)t0)[11])[1],C_SCHEME_FALSE);}
else{
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20903,a[2]=t4,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 370  make-binding");
f_19584(t5,((C_word*)((C_word*)t0)[11])[1],C_SCHEME_FALSE);}}
else{
C_trace("ChickenBridge.scm: 370  loop-error");
f_19590(t4,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[492]));}}}
else{
t4=(C_word)C_eqp(((C_word*)((C_word*)t0)[10])[1],lf[477]);
if(C_truep(t4)){
if(C_truep(((C_word*)((C_word*)t0)[9])[1])){
C_trace("ChickenBridge.scm: 370  loop-error");
f_19590(((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[493]));}
else{
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t6);
t8=C_mutate(((C_word *)((C_word*)t0)[9])+1,t5);
t9=((C_word*)t0)[7];
f_20835(2,t9,t8);}}
else{
if(C_truep(((C_word*)((C_word*)t0)[12])[1])){
C_trace("ChickenBridge.scm: 370  loop-error");
f_19590(((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,3,lf[494],((C_word*)((C_word*)t0)[10])[1],lf[495]));}
else{
C_trace("ChickenBridge.scm: 370  loop-error");
f_19590(((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,3,lf[496],((C_word*)((C_word*)t0)[10])[1],lf[497]));}}}}}

/* k20901 in k20936 in k20822 in do3487 in parse-with in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_20903(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20903,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_20866(2,t4,((C_word*)((C_word*)t0)[3])[1]);}

/* k20893 in k20936 in k20822 in do3487 in parse-with in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_20895(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20895,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_20866(2,t7,((C_word*)((C_word*)t0)[3])[1]);}

/* k20864 in k20936 in k20822 in do3487 in parse-with in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_20866(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_FALSE);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_FALSE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_TRUE);
t6=((C_word*)t0)[2];
f_20835(2,t6,t5);}

/* k20842 in k20936 in k20822 in do3487 in parse-with in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_20844(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20844,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20847,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
C_trace("ChickenBridge.scm: 370  loop-error");
f_19590(t2,((C_word*)t0)[3],((C_word*)t0)[2],(C_word)C_a_i_list(&a,3,lf[487],((C_word*)((C_word*)t0)[8])[1],lf[488]));}
else{
t3=t2;
f_20847(2,t3,C_SCHEME_UNDEFINED);}}

/* k20845 in k20842 in k20936 in k20822 in do3487 in parse-with in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_20847(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[7])+1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_FALSE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_FALSE);
t5=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_FALSE);
t6=((C_word*)t0)[2];
f_20835(2,t6,t5);}

/* k20833 in k20822 in do3487 in parse-with in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_20835(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[5])[1];
f_20814(t2,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k20759 in parse-with in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_20761(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20761,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20764,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[10],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("ChickenBridge.scm: 370  loop-error");
f_19590(t2,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[486]));}
else{
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20804,a[2]=t2,a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 370  make-binding");
f_19584(t3,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20812,a[2]=t2,a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 370  make-binding");
f_19584(t3,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE);}}
else{
t3=t2;
f_20764(2,t3,C_SCHEME_UNDEFINED);}}}

/* k20810 in k20759 in parse-with in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_20812(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20812,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_20764(2,t4,((C_word*)((C_word*)t0)[3])[1]);}

/* k20802 in k20759 in parse-with in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_20804(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20804,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_20764(2,t7,((C_word*)((C_word*)t0)[3])[1]);}

/* k20762 in k20759 in parse-with in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_20764(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20764,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20771,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20775,a[2]=((C_word*)t0)[3],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 370  reverse");
t4=*((C_word*)lf[164]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k20773 in k20762 in k20759 in parse-with in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_20775(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20775,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20779,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 370  reverse");
t3=*((C_word*)lf[164]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k20777 in k20773 in k20762 in k20759 in parse-with in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_20779(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20779,2,t0,t1);}
C_trace("ChickenBridge.scm: 370  make-loop-clause");
f_19350(((C_word*)t0)[3],(C_word)C_a_i_list(&a,6,lf[393],lf[485],lf[394],((C_word*)t0)[2],lf[396],t1));}

/* k20769 in k20762 in k20759 in parse-with in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_20771(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 370  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-general-iteration in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_20612(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word ab[32],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_20612,5,t0,t1,t2,t3,t4);}
t5=t2;
t6=(C_word)C_i_cadr(t2);
t7=(C_word)C_i_cddr(t2);
t8=t7;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_FALSE;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20622,a[2]=t6,a[3]=t17,a[4]=t15,a[5]=t11,a[6]=t9,a[7]=t1,tmp=(C_word)a,a+=8,tmp);
t19=C_SCHEME_UNDEFINED;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_set_block_item(t20,0,(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_20660,a[2]=t17,a[3]=t11,a[4]=t5,a[5]=t4,a[6]=t13,a[7]=t15,a[8]=t6,a[9]=t20,a[10]=t9,a[11]=((C_word)li307),tmp=(C_word)a,a+=12,tmp));
t22=((C_word*)t20)[1];
f_20660(t22,t18,C_SCHEME_FALSE);}

/* do3449 in parse-general-iteration in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_20660(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20660,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[10])[1]);
t5=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_20670,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=t3,a[11]=((C_word*)t0)[10],a[12]=t1,tmp=(C_word)a,a+=13,tmp);
if(C_truep(t4)){
t6=t5;
f_20670(2,t6,t4);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
C_trace("ChickenBridge.scm: 370  loop-op?");
f_19572(t5,t6,((C_word*)t0)[5]);}}

/* k20668 in do3449 in parse-general-iteration in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_20670(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20670,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[12];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[11])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[11])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[11])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[10])+1,t2);
t6=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_20681,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[12],a[11]=((C_word*)t0)[9],a[12]=((C_word*)t0)[10],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[11])[1]))){
C_trace("ChickenBridge.scm: 370  loop-error");
f_19590(t6,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[483]));}
else{
t7=t6;
f_20681(2,t7,C_SCHEME_UNDEFINED);}}}

/* k20679 in k20668 in do3449 in parse-general-iteration in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_20681(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20681,2,t0,t1);}
t2=((C_word*)((C_word*)t0)[12])[1];
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20684,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[10],a[4]=((C_word*)t0)[11],tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_eqp(t2,lf[477]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20693,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("ChickenBridge.scm: 370  loop-error");
f_19590(t5,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[478]));}
else{
t6=t5;
f_20693(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t2,lf[479]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_20718,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[2],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[3],tmp=(C_word)a,a+=10,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 370  loop-error");
f_19590(t6,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[480]));}
else{
t7=t6;
f_20718(2,t7,C_SCHEME_UNDEFINED);}}
else{
C_trace("ChickenBridge.scm: 370  loop-error");
f_19590(t3,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,3,lf[481],((C_word*)((C_word*)t0)[12])[1],lf[482]));}}}

/* k20716 in k20679 in k20668 in do3449 in parse-general-iteration in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_20718(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20718,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,((C_word*)((C_word*)t0)[8])[1]);
t3=C_set_block_item(((C_word*)t0)[8],0,C_SCHEME_FALSE);
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[7])+1,t5);
t7=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[6],t4);
t8=C_mutate(((C_word *)((C_word*)t0)[5])+1,t7);
t9=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t10=((C_word*)t0)[2];
f_20684(2,t10,t9);}

/* k20691 in k20679 in k20668 in do3449 in parse-general-iteration in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_20693(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20693,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[7])+1,t3);
t5=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[6],t2);
t6=C_mutate(((C_word *)((C_word*)t0)[5])+1,t5);
t7=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t8=((C_word*)t0)[2];
f_20684(2,t8,t7);}

/* k20682 in k20679 in k20668 in do3449 in parse-general-iteration in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_20684(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
f_20660(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k20620 in parse-general-iteration in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_20622(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20622,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20629,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20658,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 370  make-binding");
f_19584(t3,((C_word*)t0)[2],C_SCHEME_FALSE);}

/* k20656 in k20620 in parse-general-iteration in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_20658(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[42],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20658,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
t3=(C_truep(((C_word*)((C_word*)t0)[5])[1])?(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[5])[1]):C_SCHEME_END_OF_LIST);
t4=(C_truep(((C_word*)((C_word*)t0)[4])[1])?(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]):C_SCHEME_END_OF_LIST);
t5=(C_truep(((C_word*)((C_word*)t0)[3])[1])?(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]):C_SCHEME_END_OF_LIST);
C_trace("ChickenBridge.scm: 370  make-loop-clause");
f_19350(((C_word*)t0)[2],(C_word)C_a_i_list(&a,10,lf[393],lf[425],lf[394],t2,lf[396],t3,lf[398],t4,lf[399],t5));}

/* k20627 in k20620 in parse-general-iteration in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_20629(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 370  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-sequence-iteration in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_20261(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[7],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_20261,5,t0,t1,t2,t3,t4);}
t5=t2;
t6=(C_word)C_i_cadr(t2);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20268,a[2]=t5,a[3]=t4,a[4]=t6,a[5]=t1,a[6]=t2,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 370  gensym");
t8=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t8))(3,t8,t7,lf[475]);}

/* k20266 in parse-sequence-iteration in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_20268(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word ab[44],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20268,2,t0,t1);}
t2=(C_word)C_i_cddr(((C_word*)t0)[6]);
t3=t2;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_END_OF_LIST;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_END_OF_LIST;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_END_OF_LIST;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_END_OF_LIST;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_END_OF_LIST;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=C_SCHEME_FALSE;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_20274,a[2]=t8,a[3]=t14,a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=t20,a[7]=t18,a[8]=t12,a[9]=t10,a[10]=t16,a[11]=t4,a[12]=((C_word*)t0)[5],a[13]=t6,tmp=(C_word)a,a+=14,tmp);
t22=C_SCHEME_UNDEFINED;
t23=(*a=C_VECTOR_TYPE|1,a[1]=t22,tmp=(C_word)a,a+=2,tmp);
t24=C_set_block_item(t23,0,(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_20502,a[2]=t14,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t8,a[6]=t20,a[7]=t23,a[8]=t4,a[9]=((C_word)li305),tmp=(C_word)a,a+=10,tmp));
t25=((C_word*)t23)[1];
f_20502(t25,t21,C_SCHEME_FALSE);}

/* do3382 in k20266 in parse-sequence-iteration in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_20502(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20502,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]);
t5=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_20512,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=t3,a[9]=((C_word*)t0)[8],a[10]=t1,tmp=(C_word)a,a+=11,tmp);
if(C_truep(t4)){
t6=t5;
f_20512(2,t6,t4);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
C_trace("ChickenBridge.scm: 370  loop-op?");
f_19572(t5,t6,((C_word*)t0)[4]);}}

/* k20510 in do3382 in k20266 in parse-sequence-iteration in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_20512(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20512,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[10];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[9])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[9])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[8])+1,t2);
t6=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_20523,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[7],a[10]=((C_word*)t0)[8],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[9])[1]))){
C_trace("ChickenBridge.scm: 370  loop-error");
f_19590(t6,((C_word*)t0)[4],((C_word*)t0)[3],(C_word)C_a_i_list(&a,1,lf[474]));}
else{
t7=t6;
f_20523(2,t7,C_SCHEME_UNDEFINED);}}}

/* k20521 in k20510 in do3382 in k20266 in parse-sequence-iteration in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_20523(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20523,2,t0,t1);}
t2=((C_word*)((C_word*)t0)[10])[1];
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20526,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_eqp(t2,lf[464]);
t5=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_20535,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=t3,a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[7],tmp=(C_word)a,a+=11,tmp);
if(C_truep(t4)){
t6=t5;
f_20535(t6,t4);}
else{
t6=(C_word)C_eqp(t2,lf[473]);
if(C_truep(t6)){
t7=t5;
f_20535(t7,t6);}
else{
t7=(C_word)C_eqp(t2,lf[458]);
t8=t5;
f_20535(t8,(C_truep(t7)?t7:(C_word)C_eqp(t2,lf[463])));}}}

/* k20533 in k20521 in k20510 in do3382 in k20266 in parse-sequence-iteration in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_20535(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[37],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20535,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20538,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[10])[1])){
C_trace("ChickenBridge.scm: 370  loop-error");
f_19590(t2,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,5,lf[466],((C_word*)((C_word*)t0)[9])[1],lf[467],((C_word*)((C_word*)t0)[10])[1],lf[468]));}
else{
t3=t2;
f_20538(2,t3,C_SCHEME_UNDEFINED);}}
else{
t2=(C_word)C_eqp(((C_word*)t0)[3],lf[449]);
if(C_truep(t2)){
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 370  loop-error");
f_19590(((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[469]));}
else{
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[10])[1],lf[458]);
if(C_truep(t3)){
C_trace("ChickenBridge.scm: 370  loop-error");
f_19590(((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[470]));}
else{
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[8])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[8])+1,t5);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t8=((C_word*)t0)[6];
f_20526(2,t8,t7);}}}
else{
C_trace("ChickenBridge.scm: 370  loop-error");
f_19590(((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,3,lf[471],((C_word*)((C_word*)t0)[9])[1],lf[472]));}}}

/* k20536 in k20533 in k20521 in k20510 in do3382 in k20266 in parse-sequence-iteration in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_20538(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t4);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=((C_word*)t0)[2];
f_20526(2,t7,t6);}

/* k20524 in k20521 in k20510 in do3382 in k20266 in parse-sequence-iteration in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_20526(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
f_20502(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k20272 in k20266 in parse-sequence-iteration in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_20274(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20274,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_20500,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
C_trace("ChickenBridge.scm: 370  make-binding");
f_19584(t2,((C_word*)t0)[4],C_SCHEME_FALSE);}

/* k20498 in k20272 in k20266 in parse-sequence-iteration in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_20500(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20500,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[13])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[13])+1,t2);
t4=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_20496,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[12],a[12]=((C_word*)t0)[13],tmp=(C_word)a,a+=13,tmp);
C_trace("ChickenBridge.scm: 370  make-binding");
f_19584(t4,((C_word*)t0)[5],((C_word*)((C_word*)t0)[2])[1]);}

/* k20494 in k20498 in k20272 in k20266 in parse-sequence-iteration in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_20496(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word ab[92],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20496,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[12])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[12])+1,t2);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_20285,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],tmp=(C_word)a,a+=9,tmp);
t5=(C_word)C_eqp(((C_word*)((C_word*)t0)[5])[1],lf[458]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_20302,a[2]=t4,a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[4],a[9]=((C_word*)t0)[12],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 370  gensym");
t7=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t7))(3,t7,t6,lf[462]);}
else{
t6=(C_word)C_eqp(((C_word*)((C_word*)t0)[5])[1],lf[463]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20378,a[2]=t4,a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
t8=(C_word)C_a_i_list(&a,3,lf[206],((C_word*)t0)[4],((C_word*)((C_word*)t0)[2])[1]);
t9=t7;
f_20378(t9,(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[3],t8));}
else{
t8=(C_word)C_a_i_list(&a,2,lf[206],((C_word*)t0)[4]);
t9=t7;
f_20378(t9,(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[3],t8));}}
else{
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20407,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[5],a[4]=t4,a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20442,a[2]=t7,a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[2],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_listp(((C_word*)((C_word*)t0)[2])[1]))){
t9=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t10=t8;
f_20442(t10,(C_word)C_eqp(t9,lf[465]));}
else{
t9=t8;
f_20442(t9,C_SCHEME_FALSE);}}
else{
t8=(C_word)C_a_i_list(&a,2,lf[15],((C_word*)t0)[4]);
t9=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[4],t8);
t10=(C_word)C_a_i_cons(&a,2,t9,((C_word*)((C_word*)t0)[6])[1]);
t11=C_mutate(((C_word *)((C_word*)t0)[6])+1,t10);
t12=t7;
f_20407(t12,((C_word*)((C_word*)t0)[6])[1]);}}}}

/* k20440 in k20494 in k20498 in k20272 in k20266 in parse-sequence-iteration in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_20442(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[36],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20442,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_a_i_list(&a,2,t2,((C_word*)t0)[4]);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[4],t3);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_20407(t7,((C_word*)((C_word*)t0)[3])[1]);}
else{
t2=(C_word)C_a_i_list(&a,2,((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[4]);
t3=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[4],t2);
t4=(C_word)C_a_i_cons(&a,2,t3,((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=((C_word*)t0)[2];
f_20407(t6,((C_word*)((C_word*)t0)[3])[1]);}}

/* k20405 in k20494 in k20498 in k20272 in k20266 in parse-sequence-iteration in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_20407(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20407,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20423,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[3])[1],lf[464]);
if(C_truep(t3)){
t4=(C_word)C_a_i_list(&a,2,lf[8],((C_word*)t0)[6]);
t5=t2;
f_20423(t5,(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[2],t4));}
else{
t4=t2;
f_20423(t4,(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[2],((C_word*)t0)[6]));}}

/* k20421 in k20405 in k20494 in k20498 in k20272 in k20266 in parse-sequence-iteration in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_20423(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20423,NULL,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_a_i_list(&a,2,lf[3],((C_word*)t0)[4]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_20285(t7,((C_word*)((C_word*)t0)[3])[1]);}

/* k20376 in k20494 in k20498 in k20272 in k20266 in parse-sequence-iteration in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_20378(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20378,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,lf[204],((C_word*)t0)[4]);
t3=(C_word)C_a_i_list(&a,3,lf[336],t1,t2);
t4=(C_word)C_a_i_cons(&a,2,t3,((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=((C_word*)t0)[2];
f_20285(t6,((C_word*)((C_word*)t0)[3])[1]);}

/* k20300 in k20494 in k20498 in k20272 in k20266 in parse-sequence-iteration in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_20302(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20302,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_20305,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 370  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[461]);}

/* k20303 in k20300 in k20494 in k20498 in k20272 in k20266 in parse-sequence-iteration in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_20305(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20305,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_20369,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=t1,a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 370  make-binding");
f_19584(t2,((C_word*)t0)[7],C_fix(0));}

/* k20367 in k20303 in k20300 in k20494 in k20498 in k20272 in k20266 in parse-sequence-iteration in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_20369(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20369,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[11])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t4=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_20365,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 370  make-binding");
f_19584(t4,((C_word*)t0)[9],C_SCHEME_FALSE);}

/* k20363 in k20367 in k20303 in k20300 in k20494 in k20498 in k20272 in k20266 in parse-sequence-iteration in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_20365(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word ab[81],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20365,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[11])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t4=(C_word)C_a_i_list(&a,2,lf[459],((C_word*)t0)[10]);
t5=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[9],t4);
t6=(C_word)C_a_i_cons(&a,2,t5,((C_word*)((C_word*)t0)[8])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[8])+1,t6);
t8=(C_word)C_a_i_list(&a,3,lf[91],C_fix(1),((C_word*)t0)[7]);
t9=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[7],t8);
t10=(C_word)C_a_i_cons(&a,2,t9,((C_word*)((C_word*)t0)[6])[1]);
t11=C_mutate(((C_word *)((C_word*)t0)[6])+1,t10);
t12=(C_word)C_a_i_list(&a,3,lf[460],((C_word*)t0)[10],((C_word*)t0)[7]);
t13=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[5],t12);
t14=(C_word)C_a_i_cons(&a,2,t13,((C_word*)((C_word*)t0)[4])[1]);
t15=C_mutate(((C_word *)((C_word*)t0)[4])+1,t14);
t16=(C_word)C_a_i_list(&a,3,lf[341],((C_word*)t0)[7],((C_word*)t0)[9]);
t17=(C_word)C_a_i_list(&a,2,lf[312],t16);
t18=(C_word)C_a_i_cons(&a,2,t17,((C_word*)((C_word*)t0)[3])[1]);
t19=C_mutate(((C_word *)((C_word*)t0)[3])+1,t18);
t20=((C_word*)t0)[2];
f_20285(t20,((C_word*)((C_word*)t0)[3])[1]);}

/* k20283 in k20494 in k20498 in k20272 in k20266 in parse-sequence-iteration in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_20285(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20285,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20292,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20296,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=t2,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 370  reverse");
t4=*((C_word*)lf[164]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k20294 in k20283 in k20494 in k20498 in k20272 in k20266 in parse-sequence-iteration in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_20296(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[36],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20296,2,t0,t1);}
C_trace("ChickenBridge.scm: 370  make-loop-clause");
f_19350(((C_word*)t0)[6],(C_word)C_a_i_list(&a,12,lf[393],lf[425],lf[394],t1,lf[397],((C_word*)((C_word*)t0)[5])[1],lf[396],((C_word*)((C_word*)t0)[4])[1],lf[398],((C_word*)((C_word*)t0)[3])[1],lf[399],((C_word*)((C_word*)t0)[2])[1]));}

/* k20290 in k20283 in k20494 in k20498 in k20272 in k20266 in parse-sequence-iteration in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_20292(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 370  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-repeat in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_20214(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[13],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_20214,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t5))){
C_trace("ChickenBridge.scm: 370  loop-error");
f_19590(t1,t4,t2,(C_word)C_a_i_list(&a,1,lf[455]));}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20229,a[2]=t4,a[3]=t3,a[4]=t2,a[5]=((C_word)li302),tmp=(C_word)a,a+=6,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20247,a[2]=t2,a[3]=((C_word)li303),tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 370  call-with-values");
C_call_with_values(4,0,t1,t6,t7);}}

/* a20246 in parse-repeat in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_20247(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_20247,4,t0,t1,t2,t3);}
t4=(C_word)C_i_cddr(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 370  values");
C_values(4,0,t1,t2,t4);}

/* a20228 in parse-repeat in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_20229(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20229,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20241,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 370  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[456]);}

/* k20239 in a20228 in parse-repeat in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_20241(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20241,2,t0,t1);}
t2=(C_word)C_i_cadr(((C_word*)t0)[5]);
t3=(C_word)C_a_i_list(&a,4,lf[425],t1,lf[430],t2);
C_trace("ChickenBridge.scm: 370  parse-numerical-for");
t4=C_retrieve2(lf[424],"parse-numerical-for");
f_19832(5,t4,((C_word*)t0)[4],t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* parse-numerical-for in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_19832(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word ab[48],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_19832,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_i_cadr(t2);
t6=(C_word)C_i_cddr(t2);
t7=t6;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_END_OF_LIST;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_END_OF_LIST;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_FALSE;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=C_SCHEME_FALSE;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_SCHEME_FALSE;
t22=(*a=C_VECTOR_TYPE|1,a[1]=t21,tmp=(C_word)a,a+=2,tmp);
t23=C_SCHEME_FALSE;
t24=(*a=C_VECTOR_TYPE|1,a[1]=t23,tmp=(C_word)a,a+=2,tmp);
t25=C_SCHEME_FALSE;
t26=(*a=C_VECTOR_TYPE|1,a[1]=t25,tmp=(C_word)a,a+=2,tmp);
t27=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_19842,a[2]=t18,a[3]=t16,a[4]=t14,a[5]=t24,a[6]=t10,a[7]=t12,a[8]=t20,a[9]=t8,a[10]=t1,a[11]=t22,a[12]=t5,a[13]=t26,tmp=(C_word)a,a+=14,tmp);
t28=C_SCHEME_UNDEFINED;
t29=(*a=C_VECTOR_TYPE|1,a[1]=t28,tmp=(C_word)a,a+=2,tmp);
t30=C_set_block_item(t29,0,(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_20041,a[2]=t22,a[3]=t18,a[4]=t20,a[5]=t2,a[6]=t4,a[7]=t14,a[8]=t16,a[9]=t29,a[10]=t8,a[11]=((C_word)li300),tmp=(C_word)a,a+=12,tmp));
t31=((C_word*)t29)[1];
f_20041(t31,t27,C_SCHEME_FALSE);}

/* do3283 in parse-numerical-for in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_20041(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20041,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[10])[1]);
t5=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_20051,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=t3,a[11]=((C_word*)t0)[10],a[12]=t1,tmp=(C_word)a,a+=13,tmp);
if(C_truep(t4)){
t6=t5;
f_20051(2,t6,t4);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
C_trace("ChickenBridge.scm: 370  loop-op?");
f_19572(t5,t6,((C_word*)t0)[6]);}}

/* k20049 in do3283 in parse-numerical-for in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_20051(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20051,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[12];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[11])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[11])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[11])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[10])+1,t2);
t6=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_20062,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[12],a[11]=((C_word*)t0)[9],a[12]=((C_word*)t0)[10],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[11])[1]))){
C_trace("ChickenBridge.scm: 370  loop-error");
f_19590(t6,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[453]));}
else{
t7=t6;
f_20062(2,t7,C_SCHEME_UNDEFINED);}}}

/* k20060 in k20049 in do3283 in parse-numerical-for in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_20062(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[132],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20062,2,t0,t1);}
t2=((C_word*)((C_word*)t0)[12])[1];
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20065,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[10],a[4]=((C_word*)t0)[11],tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_eqp(t2,lf[432]);
t5=(C_truep(t4)?t4:(C_word)C_eqp(t2,lf[428]));
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20077,a[2]=t3,a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[12],a[6]=((C_word*)t0)[9],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[9])[1])){
C_trace("ChickenBridge.scm: 370  loop-error");
f_19590(t6,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,5,lf[433],((C_word*)((C_word*)t0)[12])[1],lf[434],((C_word*)((C_word*)t0)[9])[1],lf[435]));}
else{
t7=t6;
f_20077(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t2,lf[430]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20098,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 370  loop-error");
f_19590(t7,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,5,lf[436],((C_word*)((C_word*)t0)[12])[1],lf[437],((C_word*)((C_word*)t0)[3])[1],lf[438]));}
else{
t8=t7;
f_20098(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t2,lf[439]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20119,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 370  loop-error");
f_19590(t8,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,5,lf[440],((C_word*)((C_word*)t0)[12])[1],lf[441],((C_word*)((C_word*)t0)[3])[1],lf[442]));}
else{
t9=t8;
f_20119(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(C_word)C_eqp(t2,lf[429]);
if(C_truep(t8)){
t9=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20140,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 370  loop-error");
f_19590(t9,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,5,lf[443],((C_word*)((C_word*)t0)[12])[1],lf[444],((C_word*)((C_word*)t0)[3])[1],lf[445]));}
else{
t10=t9;
f_20140(2,t10,C_SCHEME_UNDEFINED);}}
else{
t9=(C_word)C_eqp(t2,lf[431]);
if(C_truep(t9)){
t10=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20161,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 370  loop-error");
f_19590(t10,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,5,lf[446],((C_word*)((C_word*)t0)[12])[1],lf[447],((C_word*)((C_word*)t0)[3])[1],lf[448]));}
else{
t11=t10;
f_20161(2,t11,C_SCHEME_UNDEFINED);}}
else{
t10=(C_word)C_eqp(t2,lf[449]);
if(C_truep(t10)){
t11=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20182,a[2]=t3,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[8],tmp=(C_word)a,a+=5,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 370  loop-error");
f_19590(t11,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[450]));}
else{
t12=t11;
f_20182(2,t12,C_SCHEME_UNDEFINED);}}
else{
C_trace("ChickenBridge.scm: 370  loop-error");
f_19590(t3,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,3,lf[451],((C_word*)((C_word*)t0)[12])[1],lf[452]));}}}}}}}

/* k20180 in k20060 in k20049 in do3283 in parse-numerical-for in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_20182(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t6=((C_word*)t0)[2];
f_20065(2,t6,t5);}

/* k20159 in k20060 in k20049 in do3283 in parse-numerical-for in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_20161(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[6])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t7=((C_word*)t0)[2];
f_20065(2,t7,t6);}

/* k20138 in k20060 in k20049 in do3283 in parse-numerical-for in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_20140(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[6])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t7=((C_word*)t0)[2];
f_20065(2,t7,t6);}

/* k20117 in k20060 in k20049 in do3283 in parse-numerical-for in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_20119(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[6])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t7=((C_word*)t0)[2];
f_20065(2,t7,t6);}

/* k20096 in k20060 in k20049 in do3283 in parse-numerical-for in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_20098(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[6])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t7=((C_word*)t0)[2];
f_20065(2,t7,t6);}

/* k20075 in k20060 in k20049 in do3283 in parse-numerical-for in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_20077(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t4);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=((C_word*)t0)[2];
f_20065(2,t7,t6);}

/* k20063 in k20060 in k20049 in do3283 in parse-numerical-for in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_20065(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
f_20041(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k19840 in parse-numerical-for in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_19842(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19842,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_19845,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
t3=((C_word*)((C_word*)t0)[3])[1];
if(C_truep(t3)){
t4=t2;
f_19845(t4,C_SCHEME_UNDEFINED);}
else{
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[432]);
t5=t2;
f_19845(t5,t4);}}

/* k19843 in k19840 in parse-numerical-for in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_19845(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19845,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_19848,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[12],a[11]=((C_word*)t0)[13],tmp=(C_word)a,a+=12,tmp);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[3])[1],lf[428]);
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20008,a[2]=t2,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[13],tmp=(C_word)a,a+=6,tmp);
if(C_truep(t3)){
t5=t4;
f_20008(t5,t3);}
else{
t5=(C_word)C_eqp(((C_word*)((C_word*)t0)[2])[1],lf[431]);
t6=t4;
f_20008(t6,(C_truep(t5)?t5:(C_word)C_eqp(((C_word*)((C_word*)t0)[2])[1],lf[429])));}}

/* k20006 in k19843 in k19840 in parse-numerical-for in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_20008(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word *a;
if(C_truep(t1)){
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,lf[93]);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[4])[1],lf[429]);
if(C_truep(t3)){
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[340]);
t5=((C_word*)t0)[2];
f_19848(t5,t4);}
else{
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[341]);
t5=((C_word*)t0)[2];
f_19848(t5,t4);}}
else{
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,lf[91]);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[4])[1],lf[430]);
if(C_truep(t3)){
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[333]);
t5=((C_word*)t0)[2];
f_19848(t5,t4);}
else{
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[339]);
t5=((C_word*)t0)[2];
f_19848(t5,t4);}}}

/* k19846 in k19843 in k19840 in parse-numerical-for in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_19848(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19848,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_19851,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_i_not(((C_word*)((C_word*)t0)[2])[1]);
t4=(C_truep(t3)?t3:(C_word)C_i_numberp(((C_word*)((C_word*)t0)[2])[1]));
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19979,a[2]=t2,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t6=((C_word*)((C_word*)t0)[2])[1];
t7=(C_truep(t6)?t6:C_fix(0));
C_trace("ChickenBridge.scm: 370  make-binding");
f_19584(t5,((C_word*)t0)[10],t7);}
else{
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19999,a[2]=t2,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 370  make-binding");
f_19584(t5,((C_word*)t0)[10],C_SCHEME_FALSE);}}

/* k19997 in k19846 in k19843 in k19840 in parse-numerical-for in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_19999(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19999,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_19851(t7,((C_word*)((C_word*)t0)[3])[1]);}

/* k19977 in k19846 in k19843 in k19840 in parse-numerical-for in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_19979(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19979,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_19851(t4,((C_word*)((C_word*)t0)[3])[1]);}

/* k19849 in k19846 in k19843 in k19840 in parse-numerical-for in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_19851(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19851,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_19854,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
t3=((C_word*)((C_word*)t0)[8])[1];
if(C_truep(t3)){
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[8])[1]))){
t4=t2;
f_19854(t4,C_SCHEME_UNDEFINED);}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19944,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 370  gensym");
t5=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,lf[427]);}}
else{
t4=C_set_block_item(((C_word*)t0)[8],0,C_fix(1));
t5=t2;
f_19854(t5,t4);}}

/* k19942 in k19849 in k19846 in k19843 in k19840 in parse-numerical-for in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_19944(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19944,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19961,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 370  make-binding");
f_19584(t2,t1,C_SCHEME_FALSE);}

/* k19959 in k19942 in k19849 in k19846 in k19843 in k19840 in parse-numerical-for in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_19961(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19961,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)t0)[5]);
t8=((C_word*)t0)[2];
f_19854(t8,t7);}

/* k19852 in k19849 in k19846 in k19843 in k19840 in parse-numerical-for in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_19854(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[34],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19854,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,((C_word*)((C_word*)t0)[10])[1],((C_word*)t0)[9],((C_word*)((C_word*)t0)[8])[1]);
t3=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[9],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[8])+1,t3);
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19861,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19893,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],a[4]=t5,a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[2],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 370  gensym");
t7=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t7))(3,t7,t6,lf[426]);}
else{
t6=t5;
f_19861(t6,C_SCHEME_UNDEFINED);}}

/* k19891 in k19852 in k19849 in k19846 in k19843 in k19840 in parse-numerical-for in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_19893(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19893,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19896,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t1,a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[5])[1]))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19911,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 370  make-binding");
f_19584(t3,t1,((C_word*)((C_word*)t0)[5])[1]);}
else{
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19927,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[5],a[5]=t1,a[6]=((C_word*)t0)[3],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 370  make-binding");
f_19584(t3,t1,C_SCHEME_FALSE);}}

/* k19925 in k19891 in k19852 in k19849 in k19846 in k19843 in k19840 in parse-numerical-for in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_19927(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19927,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_19896(t7,((C_word*)((C_word*)t0)[3])[1]);}

/* k19909 in k19891 in k19852 in k19849 in k19846 in k19843 in k19840 in parse-numerical-for in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_19911(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19911,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_19896(t4,((C_word*)((C_word*)t0)[3])[1]);}

/* k19894 in k19891 in k19852 in k19849 in k19846 in k19843 in k19840 in parse-numerical-for in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_19896(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19896,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,((C_word*)((C_word*)t0)[6])[1],((C_word*)t0)[5],((C_word*)t0)[4]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_19861(t4,t3);}

/* k19859 in k19852 in k19849 in k19846 in k19843 in k19840 in parse-numerical-for in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_19861(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19861,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19868,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19872,a[2]=((C_word*)t0)[3],a[3]=t2,a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 370  reverse");
t4=*((C_word*)lf[164]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k19870 in k19859 in k19852 in k19849 in k19846 in k19843 in k19840 in parse-numerical-for in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_19872(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19872,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19876,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 370  reverse");
t3=*((C_word*)lf[164]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k19874 in k19870 in k19859 in k19852 in k19849 in k19846 in k19843 in k19840 in parse-numerical-for in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_19876(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[36],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19876,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[5])[1]);
t3=((C_word*)((C_word*)t0)[4])[1];
t4=(C_truep(t3)?(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]):C_SCHEME_END_OF_LIST);
C_trace("ChickenBridge.scm: 370  make-loop-clause");
f_19350(((C_word*)t0)[3],(C_word)C_a_i_list(&a,10,lf[393],lf[425],lf[394],((C_word*)t0)[2],lf[396],t1,lf[399],t2,lf[397],t4));}

/* k19866 in k19859 in k19852 in k19849 in k19846 in k19843 in k19840 in parse-numerical-for in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_19868(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 370  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-for in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_19750(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_19750,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19754,a[2]=t3,a[3]=t4,a[4]=t1,a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t6=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 370  loop-op?");
f_19572(t5,t6,t4);}

/* k19752 in parse-for in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_19754(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19754,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 370  loop-error");
f_19590(((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[417]));}
else{
t3=(C_word)C_i_cadr(((C_word*)t0)[5]);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19772,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 370  loop-variable?");
f_19578(t4,t3);}}

/* k19770 in k19752 in parse-for in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_19772(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19772,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cddr(((C_word*)t0)[6]);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 370  loop-error");
f_19590(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[6],(C_word)C_a_i_list(&a,1,lf[418]));}
else{
t3=(C_word)C_i_caddr(((C_word*)t0)[6]);
t4=(C_word)C_i_cdddr(((C_word*)t0)[3]);
t5=(C_word)C_i_assoc(t3,t4);
if(C_truep(t5)){
t6=(C_word)C_i_cadr(t5);
t7=t6;
((C_proc5)C_retrieve_proc(t7))(5,t7,((C_word*)t0)[5],((C_word*)t0)[6],((C_word*)t0)[2],((C_word*)t0)[4]);}
else{
t6=(C_word)C_i_caddr(((C_word*)t0)[6]);
C_trace("ChickenBridge.scm: 370  loop-error");
f_19590(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[6],(C_word)C_a_i_list(&a,4,lf[419],t6,lf[420],lf[421]));}}}
else{
t2=(C_word)C_i_cadr(((C_word*)t0)[6]);
C_trace("ChickenBridge.scm: 370  loop-error");
f_19590(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[6],(C_word)C_a_i_list(&a,3,lf[422],t2,lf[423]));}}

/* loop-error in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_19590(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19590,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19646,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t6=t3;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_UNDEFINED;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_set_block_item(t9,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19598,a[2]=t2,a[3]=t9,a[4]=t7,a[5]=((C_word)li297),tmp=(C_word)a,a+=6,tmp));
t11=((C_word*)t9)[1];
f_19598(t11,t5,((C_word*)t7)[1],C_SCHEME_END_OF_LIST);}

/* do3234 in loop-error in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_19598(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19598,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[4])[1]);
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19608,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t4,a[6]=t1,tmp=(C_word)a,a+=7,tmp);
if(C_truep(t5)){
t7=t6;
f_19608(2,t7,t5);}
else{
t7=(C_word)C_eqp(t2,((C_word*)((C_word*)t0)[4])[1]);
if(C_truep(t7)){
t8=t6;
f_19608(2,t8,C_SCHEME_FALSE);}
else{
t8=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 370  loop-op?");
f_19572(t6,t8,((C_word*)t0)[2]);}}}

/* k19606 in do3234 in loop-error in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_19608(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19608,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 370  reverse");
t2=*((C_word*)lf[164]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1]);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_a_i_cons(&a,2,t2,((C_word*)((C_word*)t0)[5])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[5])+1,t3);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=((C_word*)((C_word*)t0)[3])[1];
f_19598(t7,((C_word*)t0)[6],((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1]);}}

/* k19644 in loop-error in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_19646(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19646,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19649,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 370  newline");
t3=*((C_word*)lf[408]+1);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k19647 in k19644 in loop-error in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_19649(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19649,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19652,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 370  display");
t3=*((C_word*)lf[409]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[415]);}

/* k19650 in k19647 in k19644 in loop-error in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_19652(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19652,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19655,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19727,a[2]=t4,a[3]=((C_word)li296),tmp=(C_word)a,a+=4,tmp));
t6=((C_word*)t4)[1];
f_19727(t6,t2,((C_word*)t0)[2]);}

/* do3244 in k19650 in k19647 in k19644 in loop-error in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_19727(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19727,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19737,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 370  display");
t5=*((C_word*)lf[409]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}}

/* k19735 in do3244 in k19650 in k19647 in k19644 in loop-error in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_19737(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_19727(t3,((C_word*)t0)[2],t2);}

/* k19653 in k19650 in k19647 in k19644 in loop-error in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_19655(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19655,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19658,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 370  newline");
t3=*((C_word*)lf[408]+1);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k19656 in k19653 in k19650 in k19647 in k19644 in loop-error in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_19658(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19658,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19661,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 370  display");
t3=*((C_word*)lf[409]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[414]);}

/* k19659 in k19656 in k19653 in k19650 in k19647 in k19644 in loop-error in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_19661(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19661,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19664,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[2]))){
C_trace("ChickenBridge.scm: 370  display");
t3=*((C_word*)lf[409]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[410]);}
else{
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19681,a[2]=((C_word*)t0)[2],a[3]=t4,a[4]=((C_word)li295),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_19681(t6,t2,((C_word*)t0)[2]);}}

/* do3249 in k19659 in k19656 in k19653 in k19650 in k19647 in k19644 in loop-error in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_19681(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19681,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19691,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_eqp(t2,((C_word*)t0)[2]);
if(C_truep(t4)){
C_trace("ChickenBridge.scm: 370  display");
t5=*((C_word*)lf[409]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,lf[413]);}
else{
t5=t3;
f_19691(2,t5,C_SCHEME_UNDEFINED);}}}

/* k19689 in do3249 in k19659 in k19656 in k19653 in k19650 in k19647 in k19644 in loop-error in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_19691(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19691,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19694,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 370  display");
t4=*((C_word*)lf[409]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,t3);}

/* k19692 in k19689 in do3249 in k19659 in k19656 in k19653 in k19650 in k19647 in k19644 in loop-error in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_19694(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19694,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19697,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=(C_word)C_i_nullp(t3);
t5=(C_truep(t4)?lf[411]:lf[412]);
C_trace("ChickenBridge.scm: 370  display");
t6=*((C_word*)lf[409]+1);
((C_proc3)C_retrieve_proc(t6))(3,t6,t2,t5);}

/* k19695 in k19692 in k19689 in do3249 in k19659 in k19656 in k19653 in k19650 in k19647 in k19644 in loop-error in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_19697(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_19681(t3,((C_word*)t0)[2],t2);}

/* k19662 in k19659 in k19656 in k19653 in k19650 in k19647 in k19644 in loop-error in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_19664(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19664,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19667,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 370  newline");
t3=*((C_word*)lf[408]+1);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k19665 in k19662 in k19659 in k19656 in k19653 in k19650 in k19647 in k19644 in loop-error in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_19667(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 370  error");
t2=*((C_word*)lf[4]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],lf[407]);}

/* make-binding in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_19584(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19584,NULL,3,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_list(&a,2,t2,t3));}

/* loop-variable? in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_19578(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19578,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_symbolp(t2));}

/* loop-op? in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_19572(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19572,NULL,3,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_assoc(t2,t3));}

/* gather-clauses in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_19501(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19501,NULL,3,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19503,a[2]=((C_word)li290),tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19542,a[2]=t3,a[3]=t4,a[4]=t2,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 370  gather-clause");
f_19503(t5,t3,C_retrieve2(lf[383],"loop-bindings"));}

/* k19540 in gather-clauses in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_19542(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19542,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19546,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 370  gather-clause");
f_19503(t2,((C_word*)t0)[2],C_retrieve2(lf[384],"loop-collectors"));}

/* k19544 in k19540 in gather-clauses in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_19546(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19546,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19550,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 370  gather-clause");
f_19503(t2,((C_word*)t0)[2],C_retrieve2(lf[385],"loop-initially"));}

/* k19548 in k19544 in k19540 in gather-clauses in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_19550(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19550,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_19554,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 370  gather-clause");
f_19503(t2,((C_word*)t0)[2],C_retrieve2(lf[386],"loop-end-tests"));}

/* k19552 in k19548 in k19544 in k19540 in gather-clauses in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_19554(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19554,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_19558,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 370  gather-clause");
f_19503(t2,((C_word*)t0)[2],C_retrieve2(lf[387],"loop-looping"));}

/* k19556 in k19552 in k19548 in k19544 in k19540 in gather-clauses in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_19558(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19558,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_19562,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 370  gather-clause");
f_19503(t2,((C_word*)t0)[2],C_retrieve2(lf[389],"loop-stepping"));}

/* k19560 in k19556 in k19552 in k19548 in k19544 in k19540 in gather-clauses in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_19562(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19562,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_19566,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 370  gather-clause");
f_19503(t2,((C_word*)t0)[2],C_retrieve2(lf[390],"loop-finally"));}

/* k19564 in k19560 in k19556 in k19552 in k19548 in k19544 in k19540 in gather-clauses in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_19566(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19566,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_19570,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 370  gather-clause");
f_19503(t2,((C_word*)t0)[2],C_retrieve2(lf[391],"loop-returning"));}

/* k19568 in k19564 in k19560 in k19556 in k19552 in k19548 in k19544 in k19540 in gather-clauses in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_19570(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[54],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19570,2,t0,t1);}
C_trace("ChickenBridge.scm: 370  make-loop-clause");
f_19350(((C_word*)t0)[10],(C_word)C_a_i_list(&a,18,lf[393],((C_word*)t0)[9],lf[394],((C_word*)t0)[8],lf[395],((C_word*)t0)[7],lf[396],((C_word*)t0)[6],lf[397],((C_word*)t0)[5],lf[398],((C_word*)t0)[4],lf[399],((C_word*)t0)[3],lf[400],((C_word*)t0)[2],lf[401],t1));}

/* gather-clause in gather-clauses in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_19503(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19503,NULL,3,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19509,a[2]=t3,a[3]=t6,a[4]=t4,a[5]=((C_word)li289),tmp=(C_word)a,a+=6,tmp));
t8=((C_word*)t6)[1];
f_19509(t8,t1,C_SCHEME_END_OF_LIST);}

/* do3217 in gather-clause in gather-clauses in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_19509(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19509,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[4])[1]))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,((C_word*)t3)[1]);}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19520,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19531,a[2]=t3,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 370  accessor");
t7=((C_word*)t0)[2];
((C_proc3)C_retrieve_proc(t7))(3,t7,t5,t6);}}

/* k19529 in do3217 in gather-clause in gather-clauses in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_19531(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 370  append");
t2=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k19518 in do3217 in gather-clause in gather-clauses in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_19520(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=((C_word*)((C_word*)t0)[3])[1];
f_19509(t5,((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1]);}

/* make-loop-clause in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_19350(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19350,NULL,2,t1,t2);}
t3=(C_word)C_a_i_vector(&a,9,C_SCHEME_FALSE,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST);
if(C_truep((C_word)C_i_nullp(t2))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t3);}
else{
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19365,a[2]=t5,a[3]=t3,a[4]=((C_word)li287),tmp=(C_word)a,a+=5,tmp));
t7=((C_word*)t5)[1];
f_19365(t7,t1,t2);}}

/* do3205 in make-loop-clause in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_19365(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19365,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)t0)[3]);}
else{
t3=(C_word)C_i_car(t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19378,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_eqp(t3,lf[393]);
if(C_truep(t5)){
t6=(C_word)C_i_cadr(t2);
C_trace("ChickenBridge.scm: 370  loop-operator-set!");
f_19248(t4,((C_word*)t0)[3],t6);}
else{
t6=(C_word)C_eqp(t3,lf[394]);
if(C_truep(t6)){
t7=(C_word)C_i_cadr(t2);
t8=t4;
f_19378(2,t8,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(1),t7));}
else{
t7=(C_word)C_eqp(t3,lf[395]);
if(C_truep(t7)){
t8=(C_word)C_i_cadr(t2);
t9=t4;
f_19378(2,t9,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(2),t8));}
else{
t8=(C_word)C_eqp(t3,lf[396]);
if(C_truep(t8)){
t9=(C_word)C_i_cadr(t2);
t10=t4;
f_19378(2,t10,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(3),t9));}
else{
t9=(C_word)C_eqp(t3,lf[397]);
if(C_truep(t9)){
t10=(C_word)C_i_cadr(t2);
t11=t4;
f_19378(2,t11,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(4),t10));}
else{
t10=(C_word)C_eqp(t3,lf[398]);
if(C_truep(t10)){
t11=(C_word)C_i_cadr(t2);
C_trace("ChickenBridge.scm: 370  loop-looping-set!");
f_19308(t4,((C_word*)t0)[3],t11);}
else{
t11=(C_word)C_eqp(t3,lf[399]);
if(C_truep(t11)){
t12=(C_word)C_i_cadr(t2);
t13=t4;
f_19378(2,t13,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(6),t12));}
else{
t12=(C_word)C_eqp(t3,lf[400]);
if(C_truep(t12)){
t13=(C_word)C_i_cadr(t2);
t14=t4;
f_19378(2,t14,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(7),t13));}
else{
t13=(C_word)C_eqp(t3,lf[401]);
if(C_truep(t13)){
t14=(C_word)C_i_cadr(t2);
t15=t4;
f_19378(2,t15,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(8),t14));}
else{
t14=t4;
f_19378(2,t14,C_SCHEME_UNDEFINED);}}}}}}}}}}}

/* k19376 in do3205 in make-loop-clause in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_19378(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cddr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_19365(t3,((C_word*)t0)[2],t2);}

/* loop-returning in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_19338(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_19338,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(8)));}

/* loop-finally in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_19326(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_19326,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(7)));}

/* loop-stepping in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_19314(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_19314,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(6)));}

/* loop-looping-set! in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_19308(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19308,NULL,3,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_vector_set(t2,C_fix(5),t3));}

/* loop-looping in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_19302(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_19302,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(5)));}

/* loop-end-tests in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_19290(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_19290,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(4)));}

/* loop-initially in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_19278(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_19278,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(3)));}

/* loop-collectors in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_19266(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_19266,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(2)));}

/* loop-bindings in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_19254(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_19254,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(1)));}

/* loop-operator-set! in k19238 in k19235 in k19232 in k19229 in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_19248(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19248,NULL,3,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_vector_set(t2,C_fix(0),t3));}

/* sal:output in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_19212(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19212,2,t0,t1);}
C_trace("ChickenBridge.scm: 369  print-error");
t2=C_retrieve(lf[349]);
((C_proc3)C_retrieve_proc(t2))(3,t2,t1,lf[381]);}

/* sal:open in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_19206(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19206,2,t0,t1);}
C_trace("ChickenBridge.scm: 369  print-error");
t2=C_retrieve(lf[349]);
((C_proc3)C_retrieve_proc(t2))(3,t2,t1,lf[379]);}

/* sal:load in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_19159(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_19159,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19163,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  file-exists?");
t4=C_retrieve(lf[377]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k19161 in sal:load in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_19163(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19163,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19166,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
if(C_truep(t1)){
t3=(C_word)C_i_string_length(((C_word*)t0)[2]);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19188,a[2]=((C_word*)t0)[2],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_greaterp(t3,C_fix(4)))){
t5=(C_word)C_a_i_minus(&a,2,t3,C_fix(4));
C_trace("substring=?");
t6=C_retrieve(lf[373]);
((C_proc7)(void*)(*((C_word*)t6+1)))(7,t6,t4,((C_word*)t0)[2],lf[374],t5,C_fix(0),C_SCHEME_FALSE);}
else{
t5=t4;
f_19188(2,t5,C_SCHEME_FALSE);}}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19179,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  string-append");
t4=*((C_word*)lf[141]+1);
((C_proc5)C_retrieve_proc(t4))(5,t4,t3,lf[375],((C_word*)t0)[2],lf[376]);}}

/* k19177 in k19161 in sal:load in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_19179(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  print-error");
t2=C_retrieve(lf[349]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k19186 in k19161 in sal:load in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_19188(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 369  load-sal-file");
t2=C_retrieve(lf[371]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
C_trace("ChickenBridge.scm: 369  load");
t2=C_retrieve(lf[372]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}}

/* k19164 in k19161 in sal:load in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_19166(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  values");
C_values(2,0,((C_word*)t0)[2]);}

/* sal:chdir in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_19150(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_19150,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19154,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  chdir");
t4=C_retrieve(lf[44]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k19152 in sal:chdir in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_19154(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  values");
C_values(2,0,((C_word*)t0)[2]);}

/* sal:print in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_18997(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+16)){
C_save_and_reclaim((void*)tr2r,(void*)f_18997r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_18997r(t0,t1,t2);}}

static void C_ccall f_18997r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word *a=C_alloc(16);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19000,a[2]=t4,a[3]=((C_word)li270),tmp=(C_word)a,a+=4,tmp));
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19119,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19124,a[2]=t4,a[3]=t8,a[4]=((C_word)li271),tmp=(C_word)a,a+=5,tmp));
t10=((C_word*)t8)[1];
f_19124(t10,t6,t2);}

/* do3033 in sal:print in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_19124(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19124,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 369  print-message");
t3=C_retrieve(lf[360]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t1,lf[368]);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19137,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 369  printer");
t5=((C_word*)((C_word*)t0)[2])[1];
f_19000(t5,t3,t4,C_fix(0));}}

/* k19135 in do3033 in sal:print in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_19137(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_19124(t3,((C_word*)t0)[2],t2);}

/* k19117 in sal:print in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_19119(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  values");
C_values(2,0,((C_word*)t0)[2]);}

/* printer in sal:print in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_19000(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19000,NULL,4,t0,t1,t2,t3);}
t4=t2;
if(C_truep(t4)){
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 369  print-message");
t5=C_retrieve(lf[360]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t1,lf[361]);}
else{
if(C_truep((C_word)C_i_pairp(t2))){
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19028,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=t3,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 369  print-message");
t6=C_retrieve(lf[360]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,lf[364]);}
else{
t5=(C_word)C_eqp(t2,C_SCHEME_TRUE);
if(C_truep(t5)){
C_trace("ChickenBridge.scm: 369  print-message");
t6=C_retrieve(lf[360]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t1,lf[365]);}
else{
if(C_truep((C_word)C_i_numberp(t2))){
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19100,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  number->string");
C_number_to_string(3,0,t6,t2);}
else{
if(C_truep((C_word)C_i_stringp(t2))){
C_trace("ChickenBridge.scm: 369  print-message");
t6=C_retrieve(lf[360]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t1,t2);}
else{
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19116,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  sprintf");
t7=C_retrieve(lf[31]);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[366],t2);}}}}}}
else{
C_trace("ChickenBridge.scm: 369  print-message");
t5=C_retrieve(lf[360]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t1,lf[367]);}}

/* k19114 in printer in sal:print in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_19116(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  print-message");
t2=C_retrieve(lf[360]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k19098 in printer in sal:print in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_19100(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  print-message");
t2=C_retrieve(lf[360]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k19026 in printer in sal:print in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_19028(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19028,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19031,a[2]=((C_word*)t0)[5],tmp=(C_word)a,a+=3,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19036,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t4,a[5]=((C_word)li269),tmp=(C_word)a,a+=6,tmp));
t6=((C_word*)t4)[1];
f_19036(t6,t2,((C_word*)t0)[2]);}

/* do3025 in k19026 in printer in sal:print in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_19036(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19036,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19046,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
t5=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[3],C_fix(1));
C_trace("ChickenBridge.scm: 369  printer");
t6=((C_word*)((C_word*)t0)[2])[1];
f_19000(t6,t3,t4,t5);}}

/* k19044 in do3025 in k19026 in printer in sal:print in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_19046(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19046,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19049,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t2;
f_19049(2,t4,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 369  print-message");
t4=C_retrieve(lf[360]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,lf[363]);}}

/* k19047 in k19044 in do3025 in k19026 in printer in sal:print in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_19049(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_19036(t3,((C_word*)t0)[2],t2);}

/* k19029 in k19026 in printer in sal:print in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_19031(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  print-message");
t2=C_retrieve(lf[360]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],lf[362]);}

/* sal in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_18826(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[7],*a=ab;
if(c!=6) C_bad_argc_2(c,6,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr6,(void*)f_18826,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=C_mutate(&lf[345],t2);
t8=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18832,a[2]=t6,a[3]=t5,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("map");
t9=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t9+1)))(4,t9,t8,C_retrieve2(lf[273],"list->token"),t4);}

/* k18830 in sal in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_18832(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18832,2,t0,t1);}
t2=C_mutate(&lf[346],t1);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18835,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[2])[1],C_fix(0)))){
t4=C_set_block_item(((C_word*)t0)[2],0,C_fix(36608));
t5=t3;
f_18835(t5,t4);}
else{
t4=t3;
f_18835(t4,C_SCHEME_FALSE);}}

/* k18833 in k18830 in sal in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_18835(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18835,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18839,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=((C_word*)((C_word*)t0)[2])[1];
t4=C_retrieve2(lf[346],"*sal-tokens*");
t5=(C_word)C_a_i_list(&a,4,C_SCHEME_FALSE,C_fix(0),C_SCHEME_FALSE,C_SCHEME_FALSE);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16635,a[2]=t4,a[3]=t3,a[4]=((C_word)li267),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  call/cc");
t7=*((C_word*)lf[358]+1);
((C_proc3)C_retrieve_proc(t7))(3,t7,t2,t6);}

/* a16634 in k18833 in k18830 in sal in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_16635(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_16635,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16641,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word)li265),tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16648,a[2]=t2,a[3]=((C_word)li266),tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  call-with-values");
C_call_with_values(4,0,t1,t3,t4);}

/* a16647 in a16634 in k18833 in k18830 in sal in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_16648(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_16648,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16655,a[2]=((C_word*)t0)[2],a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
if(C_truep(t2)){
t6=(C_word)C_i_nullp(t4);
t7=t5;
f_16655(t7,(C_truep(t6)?t6:C_SCHEME_FALSE));}
else{
t6=t5;
f_16655(t6,C_SCHEME_FALSE);}}

/* k16653 in a16647 in a16634 in k18833 in k18830 in sal in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_16655(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16655,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16662,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  add-emit-info");
f_16292(t2,lf[355],lf[356],C_SCHEME_END_OF_LIST);}
else{
C_trace("ChickenBridge.scm: 369  make-parse-error");
f_16112(((C_word*)t0)[4],lf[357],C_retrieve2(lf[321],"*maxtokpos*"));}}

/* k16660 in k16653 in a16647 in a16634 in k18833 in k18830 in sal in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_16662(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  emit");
f_16320(((C_word*)t0)[4],((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* a16640 in a16634 in k18833 in k18830 in sal in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_16641(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16641,2,t0,t1);}
t2=lf[321]=C_fix(0);;
C_trace("ChickenBridge.scm: 369  parser");
f_16673(t1,((C_word*)t0)[4],((C_word*)t0)[3],C_SCHEME_FALSE,C_fix(0),C_SCHEME_FALSE,((C_word*)t0)[2]);}

/* k18837 in k18833 in k18830 in sal in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_18839(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18839,2,t0,t1);}
t2=C_mutate(&lf[347],t1);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18842,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
t4=C_retrieve2(lf[347],"*sal-output*");
if(C_truep((C_word)C_i_structurep(t4,lf[289]))){
t5=C_retrieve2(lf[345],"*sal-string*");
t6=C_retrieve2(lf[347],"*sal-output*");
t7=(C_word)C_i_string_length(t5);
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18873,a[2]=t7,a[3]=t6,a[4]=t5,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 369  parse-error-position");
f_16151(t8,t6);}
else{
if(C_truep(((C_word*)t0)[2])){
C_trace("ChickenBridge.scm: 369  pp");
t5=C_retrieve(lf[353]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,C_retrieve2(lf[347],"*sal-output*"));}
else{
C_trace("ChickenBridge.scm: 369  eval");
t5=C_retrieve(lf[354]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,C_retrieve2(lf[347],"*sal-output*"));}}}

/* k18871 in k18837 in k18833 in k18830 in sal in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_18873(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18873,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
t3=t2;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(0);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_18879,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t1,a[7]=t6,a[8]=t4,tmp=(C_word)a,a+=9,tmp);
t8=C_SCHEME_UNDEFINED;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_set_block_item(t9,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18966,a[2]=((C_word*)t0)[4],a[3]=t9,a[4]=t4,a[5]=((C_word)li264),tmp=(C_word)a,a+=6,tmp));
t11=((C_word*)t9)[1];
f_18966(t11,t7,C_SCHEME_FALSE);}

/* do2998 in k18871 in k18837 in k18833 in k18830 in sal in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_18966(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18966,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=((C_word*)t3)[1];
t5=(C_truep(t4)?t4:(C_word)C_i_nequalp(((C_word*)((C_word*)t0)[4])[1],C_fix(-1)));
if(C_truep(t5)){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,C_SCHEME_FALSE);}
else{
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18976,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t7=(C_word)C_i_string_ref(((C_word*)t0)[2],((C_word*)((C_word*)t0)[4])[1]);
t8=(C_word)C_eqp(t7,C_make_character(10));
if(C_truep(t8)){
t9=C_set_block_item(t3,0,C_SCHEME_TRUE);
t10=t6;
f_18976(t10,t9);}
else{
t9=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[4])[1],C_fix(1));
t10=C_mutate(((C_word *)((C_word*)t0)[4])+1,t9);
t11=t6;
f_18976(t11,t10);}}}

/* k18974 in do2998 in k18871 in k18837 in k18833 in k18830 in sal in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_18976(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
f_18966(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k18877 in k18871 in k18837 in k18833 in k18830 in sal in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_18879(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18879,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[8])[1],C_fix(1));
t3=C_mutate(((C_word *)((C_word*)t0)[8])+1,t2);
t4=C_mutate(((C_word *)((C_word*)t0)[7])+1,((C_word*)t0)[6]);
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18887,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[5],tmp=(C_word)a,a+=8,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18936,a[2]=((C_word*)t0)[4],a[3]=t7,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[7],a[6]=((C_word)li263),tmp=(C_word)a,a+=7,tmp));
t9=((C_word*)t7)[1];
f_18936(t9,t5,C_SCHEME_FALSE);}

/* do3005 in k18877 in k18871 in k18837 in k18833 in k18830 in sal in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_18936(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18936,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=((C_word*)t3)[1];
t5=(C_truep(t4)?t4:(C_word)C_i_nequalp(((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[4]));
if(C_truep(t5)){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,C_SCHEME_FALSE);}
else{
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18946,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t7=(C_word)C_i_string_ref(((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1]);
t8=(C_word)C_eqp(t7,C_make_character(10));
if(C_truep(t8)){
t9=C_set_block_item(t3,0,C_SCHEME_TRUE);
t10=t6;
f_18946(t10,t9);}
else{
t9=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[5])[1],C_fix(1));
t10=C_mutate(((C_word *)((C_word*)t0)[5])+1,t9);
t11=t6;
f_18946(t11,t10);}}}

/* k18944 in do3005 in k18877 in k18871 in k18837 in k18833 in k18830 in sal in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_18946(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
f_18936(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k18885 in k18877 in k18871 in k18837 in k18833 in k18830 in sal in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_18887(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18887,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18890,a[2]=((C_word*)t0)[7],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18897,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18901,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t3,a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 369  parse-error-string");
f_16133(t4,((C_word*)t0)[2]);}

/* k18899 in k18885 in k18877 in k18871 in k18837 in k18833 in k18830 in sal in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_18901(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18901,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18905,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 369  make-string");
t3=*((C_word*)lf[351]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,C_fix(1),C_make_character(10));}

/* k18903 in k18899 in k18885 in k18877 in k18871 in k18837 in k18833 in k18830 in sal in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_18905(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18905,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18909,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 369  substring");
t3=*((C_word*)lf[352]+1);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k18907 in k18903 in k18899 in k18885 in k18877 in k18871 in k18837 in k18833 in k18830 in sal in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_18909(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18909,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18913,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 369  make-string");
t3=*((C_word*)lf[351]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,C_fix(1),C_make_character(10));}

/* k18911 in k18907 in k18903 in k18899 in k18885 in k18877 in k18871 in k18837 in k18833 in k18830 in sal in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_18913(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18913,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[7],((C_word*)((C_word*)t0)[6])[1]);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18920,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=t2,tmp=(C_word)a,a+=8,tmp);
t4=(C_word)C_a_i_plus(&a,2,t2,C_fix(2));
C_trace("ChickenBridge.scm: 369  make-string");
t5=*((C_word*)lf[351]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,t4,C_make_character(32));}

/* k18918 in k18911 in k18907 in k18903 in k18899 in k18885 in k18877 in k18871 in k18837 in k18833 in k18830 in sal in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_18920(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18920,2,t0,t1);}
t2=(C_word)C_i_string_set(t1,((C_word*)t0)[7],C_make_character(94));
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[7],C_fix(1));
t4=(C_word)C_i_string_set(t1,t3,C_make_character(10));
C_trace("ChickenBridge.scm: 369  string-append");
t5=*((C_word*)lf[141]+1);
((C_proc8)C_retrieve_proc(t5))(8,t5,((C_word*)t0)[6],lf[350],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k18895 in k18885 in k18877 in k18871 in k18837 in k18833 in k18830 in sal in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_18897(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  print-error");
t2=C_retrieve(lf[349]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k18888 in k18885 in k18877 in k18871 in k18837 in k18833 in k18830 in sal in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_18890(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  values");
C_values(2,0,((C_word*)t0)[2]);}

/* k18840 in k18837 in k18833 in k18830 in sal in k18818 in k18815 in k18812 in k18809 in k18806 in k18284 in k18281 in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_18842(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  values");
C_values(2,0,((C_word*)t0)[2]);}

/* sal-parse-stepping in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_17762(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word ab[51],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_17762,4,t0,t1,t2,t3);}
t4=C_SCHEME_END_OF_LIST;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_FALSE;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=C_SCHEME_FALSE;
t19=(*a=C_VECTOR_TYPE|1,a[1]=t18,tmp=(C_word)a,a+=2,tmp);
t20=C_SCHEME_FALSE;
t21=(*a=C_VECTOR_TYPE|1,a[1]=t20,tmp=(C_word)a,a+=2,tmp);
t22=C_SCHEME_FALSE;
t23=(*a=C_VECTOR_TYPE|1,a[1]=t22,tmp=(C_word)a,a+=2,tmp);
t24=C_SCHEME_FALSE;
t25=(*a=C_VECTOR_TYPE|1,a[1]=t24,tmp=(C_word)a,a+=2,tmp);
t26=C_SCHEME_FALSE;
t27=(*a=C_VECTOR_TYPE|1,a[1]=t26,tmp=(C_word)a,a+=2,tmp);
t28=C_SCHEME_FALSE;
t29=(*a=C_VECTOR_TYPE|1,a[1]=t28,tmp=(C_word)a,a+=2,tmp);
t30=C_SCHEME_FALSE;
t31=(*a=C_VECTOR_TYPE|1,a[1]=t30,tmp=(C_word)a,a+=2,tmp);
t32=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17769,a[2]=t5,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t33=(*a=C_CLOSURE_TYPE|18,a[1]=(C_word)f_17775,a[2]=t27,a[3]=t25,a[4]=t29,a[5]=t31,a[6]=t23,a[7]=t19,a[8]=t17,a[9]=t21,a[10]=t15,a[11]=t7,a[12]=t3,a[13]=t2,a[14]=t32,a[15]=t5,a[16]=t13,a[17]=t11,a[18]=t9,tmp=(C_word)a,a+=19,tmp);
t34=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 369  token-unit-type=?");
f_16248(t33,t34,C_fix(23296));}

/* k17773 in sal-parse-stepping in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_17775(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17775,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17779,a[2]=((C_word*)t0)[14],a[3]=((C_word*)t0)[15],a[4]=((C_word*)t0)[16],a[5]=((C_word*)t0)[17],a[6]=((C_word*)t0)[18],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[13]);
C_trace("ChickenBridge.scm: 369  emit");
f_16320(t2,t3,C_SCHEME_END_OF_LIST,((C_word*)t0)[12]);}
else{
t2=(*a=C_CLOSURE_TYPE|17,a[1]=(C_word)f_17825,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[16],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[13],a[10]=((C_word*)t0)[12],a[11]=((C_word*)t0)[8],a[12]=((C_word*)t0)[9],a[13]=((C_word*)t0)[14],a[14]=((C_word*)t0)[15],a[15]=((C_word*)t0)[10],a[16]=((C_word*)t0)[18],a[17]=((C_word*)t0)[11],tmp=(C_word)a,a+=18,tmp);
t3=(C_word)C_i_caddr(((C_word*)t0)[13]);
C_trace("ChickenBridge.scm: 369  token-unit-type=?");
f_16248(t2,t3,C_fix(10756));}}

/* k17823 in k17773 in sal-parse-stepping in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_17825(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17825,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_17829,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[10],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[12],a[6]=((C_word*)t0)[13],a[7]=((C_word*)t0)[14],a[8]=((C_word*)t0)[15],a[9]=((C_word*)t0)[16],a[10]=((C_word*)t0)[17],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[9]);
C_trace("ChickenBridge.scm: 369  emit");
f_16320(t2,t3,C_SCHEME_END_OF_LIST,((C_word*)t0)[10]);}
else{
t2=(*a=C_CLOSURE_TYPE|14,a[1]=(C_word)f_17922,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[13],a[11]=((C_word*)t0)[14],a[12]=((C_word*)t0)[8],a[13]=((C_word*)t0)[16],a[14]=((C_word*)t0)[17],tmp=(C_word)a,a+=15,tmp);
t3=(C_word)C_i_caddr(((C_word*)t0)[9]);
C_trace("ChickenBridge.scm: 369  token-unit-type=?");
f_16248(t2,t3,C_fix(22784));}}

/* k17920 in k17823 in k17773 in sal-parse-stepping in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_17922(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17922,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_17926,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[11],a[6]=((C_word*)t0)[12],a[7]=((C_word*)t0)[13],a[8]=((C_word*)t0)[14],tmp=(C_word)a,a+=9,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[9]);
C_trace("ChickenBridge.scm: 369  emit");
f_16320(t2,t3,C_SCHEME_END_OF_LIST,((C_word*)t0)[8]);}
else{
t2=(C_word)C_i_length(((C_word*)t0)[9]);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_17990,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[6],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[7],a[12]=((C_word*)t0)[14],tmp=(C_word)a,a+=13,tmp);
t5=(C_word)C_i_cadr(((C_word*)t0)[9]);
C_trace("ChickenBridge.scm: 369  emit");
f_16320(t4,t5,C_SCHEME_END_OF_LIST,((C_word*)t0)[8]);}}

/* k17988 in k17920 in k17823 in k17773 in sal-parse-stepping in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_17990(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17990,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[12])+1,t1);
t3=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[11])[1],C_fix(1));
t4=(C_word)C_i_list_ref(((C_word*)t0)[10],t3);
t5=C_mutate(((C_word *)((C_word*)t0)[9])+1,t4);
t6=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_17997,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[6],a[10]=((C_word*)t0)[12],a[11]=((C_word*)t0)[7],a[12]=((C_word*)t0)[8],tmp=(C_word)a,a+=13,tmp);
if(C_truep(((C_word*)((C_word*)t0)[9])[1])){
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18247,a[2]=t6,a[3]=((C_word*)t0)[9],tmp=(C_word)a,a+=4,tmp);
t8=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[9])[1]);
C_trace("ChickenBridge.scm: 369  emit");
f_16320(t7,t8,C_SCHEME_END_OF_LIST,((C_word*)t0)[2]);}
else{
t7=C_set_block_item(((C_word*)t0)[9],0,C_fix(1));
t8=t6;
f_17997(t8,t7);}}

/* k18245 in k17988 in k17920 in k17823 in k17773 in sal-parse-stepping in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_18247(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_17997(t3,t2);}

/* k17995 in k17988 in k17920 in k17823 in k17773 in sal-parse-stepping in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_17997(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17997,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_18000,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[12],tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[4])[1],C_fix(6)))){
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18186,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
t4=(C_word)C_i_cadddr(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 369  emit");
f_16320(t3,t4,C_SCHEME_END_OF_LIST,((C_word*)t0)[3]);}
else{
t3=C_set_block_item(((C_word*)t0)[9],0,C_fix(0));
t4=(C_word)C_i_caddr(((C_word*)t0)[2]);
t5=C_mutate(((C_word *)((C_word*)t0)[6])+1,t4);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18235,a[2]=t2,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_cadddr(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 369  emit");
f_16320(t6,t7,C_SCHEME_END_OF_LIST,((C_word*)t0)[3]);}}

/* k18233 in k17995 in k17988 in k17920 in k17823 in k17773 in sal-parse-stepping in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_18235(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_18000(t3,t2);}

/* k18184 in k17995 in k17988 in k17920 in k17823 in k17773 in sal-parse-stepping in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_18186(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18186,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[7])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18192,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 369  fifth");
t4=C_retrieve(lf[47]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k18190 in k18184 in k17995 in k17988 in k17920 in k17823 in k17773 in sal-parse-stepping in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_18192(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18192,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18216,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 369  fifth");
t3=C_retrieve(lf[47]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}
else{
t2=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_FALSE);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_FALSE);
t4=((C_word*)t0)[4];
f_18000(t4,t3);}}

/* k18214 in k18190 in k18184 in k17995 in k17988 in k17920 in k17823 in k17773 in sal-parse-stepping in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_18216(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18216,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18200,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18212,a[2]=((C_word*)t0)[3],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  fifth");
t6=C_retrieve(lf[47]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)t0)[2]);}

/* k18210 in k18214 in k18190 in k18184 in k17995 in k17988 in k17920 in k17823 in k17773 in sal-parse-stepping in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_18212(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cadr(t1);
C_trace("ChickenBridge.scm: 369  emit");
f_16320(((C_word*)t0)[3],t2,C_SCHEME_END_OF_LIST,((C_word*)t0)[2]);}

/* k18198 in k18214 in k18190 in k18184 in k17995 in k17988 in k17920 in k17823 in k17773 in sal-parse-stepping in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_18200(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_18000(t3,t2);}

/* k17998 in k17995 in k17988 in k17920 in k17823 in k17773 in sal-parse-stepping in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_18000(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18000,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_18003,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[5])[1]))){
t3=t2;
f_18003(t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18162,a[2]=t2,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[9],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[344]);}}

/* k18160 in k17998 in k17995 in k17988 in k17920 in k17823 in k17773 in sal-parse-stepping in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_18162(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18162,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18166,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_a_i_list(&a,5,t1,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 369  append");
t5=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,((C_word*)((C_word*)t0)[4])[1],t4);}

/* k18164 in k18160 in k17998 in k17995 in k17988 in k17920 in k17823 in k17773 in sal-parse-stepping in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_18166(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)t0)[3]);
t4=((C_word*)t0)[2];
f_18003(t4,t3);}

/* k18001 in k17998 in k17995 in k17988 in k17920 in k17823 in k17773 in sal-parse-stepping in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_18003(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18003,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_18006,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_18006(t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18139,a[2]=t2,a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[9],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[343]);}}

/* k18137 in k18001 in k17998 in k17995 in k17988 in k17920 in k17823 in k17773 in sal-parse-stepping in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_18139(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18139,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18143,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_a_i_list(&a,5,t1,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 369  append");
t5=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,((C_word*)((C_word*)t0)[4])[1],t4);}

/* k18141 in k18137 in k18001 in k17998 in k17995 in k17988 in k17920 in k17823 in k17773 in sal-parse-stepping in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_18143(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)t0)[3]);
t4=((C_word*)t0)[2];
f_18006(t4,t3);}

/* k18004 in k18001 in k17998 in k17995 in k17988 in k17920 in k17823 in k17773 in sal-parse-stepping in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_18006(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18006,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_18009,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[2])[1]))){
t3=t2;
f_18009(t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18116,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[9],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[342]);}}
else{
t3=t2;
f_18009(t3,C_SCHEME_UNDEFINED);}}

/* k18114 in k18004 in k18001 in k17998 in k17995 in k17988 in k17920 in k17823 in k17773 in sal-parse-stepping in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_18116(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18116,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18120,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_a_i_list(&a,5,t1,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 369  append");
t5=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,((C_word*)((C_word*)t0)[4])[1],t4);}

/* k18118 in k18114 in k18004 in k18001 in k17998 in k17995 in k17988 in k17920 in k17823 in k17773 in sal-parse-stepping in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_18120(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)t0)[3]);
t4=((C_word*)t0)[2];
f_18009(t4,t3);}

/* k18007 in k18004 in k18001 in k17998 in k17995 in k17988 in k17920 in k17823 in k17773 in sal-parse-stepping in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_18009(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[34],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18009,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18012,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
t3=((C_word*)((C_word*)t0)[3])[1];
if(C_truep(t3)){
t4=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18041,a[2]=((C_word*)t0)[3],a[3]=t2,a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 369  token-unit-type=?");
f_16248(t4,((C_word*)((C_word*)t0)[3])[1],C_fix(21248));}
else{
t4=(C_word)C_a_i_list(&a,3,lf[91],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[5])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[7])[1],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[5])+1,t5);
t7=t2;
f_18012(t7,t6);}}

/* k18039 in k18007 in k18004 in k18001 in k17998 in k17995 in k17988 in k17920 in k17823 in k17773 in sal-parse-stepping in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_18041(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[35],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18041,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[333],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[91],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[7])[1],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=((C_word*)t0)[3];
f_18012(t7,t6);}
else{
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18059,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 369  token-unit-type=?");
f_16248(t2,((C_word*)((C_word*)t0)[2])[1],C_fix(23552));}}

/* k18057 in k18039 in k18007 in k18004 in k18001 in k17998 in k17995 in k17988 in k17920 in k17823 in k17773 in sal-parse-stepping in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_18059(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[35],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18059,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[339],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[91],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[7])[1],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=((C_word*)t0)[3];
f_18012(t7,t6);}
else{
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18077,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 369  token-unit-type=?");
f_16248(t2,((C_word*)((C_word*)t0)[2])[1],C_fix(20992));}}

/* k18075 in k18057 in k18039 in k18007 in k18004 in k18001 in k17998 in k17995 in k17988 in k17920 in k17823 in k17773 in sal-parse-stepping in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_18077(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[34],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18077,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[340],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[93],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[7])[1],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=((C_word*)t0)[3];
f_18012(t7,t6);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18095,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 369  token-unit-type=?");
f_16248(t2,((C_word*)((C_word*)t0)[2])[1],C_fix(21760));}}

/* k18093 in k18075 in k18057 in k18039 in k18007 in k18004 in k18001 in k17998 in k17995 in k17988 in k17920 in k17823 in k17773 in sal-parse-stepping in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_18095(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18095,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[341],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[93],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[3])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[6])[1],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18012(t7,t6);}
else{
t2=((C_word*)t0)[2];
f_18012(t2,C_SCHEME_UNDEFINED);}}

/* k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17988 in k17920 in k17823 in k17773 in sal-parse-stepping in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_18012(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18012,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18016,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],C_SCHEME_FALSE,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 369  append");
t5=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,((C_word*)((C_word*)t0)[7])[1],t4);}

/* k18014 in k18010 in k18007 in k18004 in k18001 in k17998 in k17995 in k17988 in k17920 in k17823 in k17773 in sal-parse-stepping in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_18016(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_17769(t3,t2);}

/* k17924 in k17920 in k17823 in k17773 in sal-parse-stepping in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_17926(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17926,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17930,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t4=(C_word)C_i_cadddr(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 369  emit");
f_16320(t3,t4,C_SCHEME_END_OF_LIST,((C_word*)t0)[2]);}

/* k17928 in k17924 in k17920 in k17823 in k17773 in sal-parse-stepping in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_17930(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17930,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17934,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 369  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[338]);}

/* k17932 in k17928 in k17924 in k17920 in k17823 in k17773 in sal-parse-stepping in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_17934(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[72],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17934,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(C_word)C_a_i_list(&a,2,lf[15],((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[6])[1],t3);
t5=(C_word)C_a_i_list(&a,2,lf[3],((C_word*)((C_word*)t0)[6])[1]);
t6=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_FALSE,t4,t5);
t7=(C_word)C_a_i_list(&a,2,lf[8],((C_word*)((C_word*)t0)[6])[1]);
t8=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[4])[1],t7);
t9=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[4])[1],C_SCHEME_FALSE,t8,C_SCHEME_FALSE,C_SCHEME_FALSE);
t10=(C_word)C_a_i_list(&a,2,t6,t9);
t11=C_mutate(((C_word *)((C_word*)t0)[3])+1,t10);
t12=((C_word*)t0)[2];
f_17769(t12,t11);}

/* k17827 in k17823 in k17773 in sal-parse-stepping in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_17829(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17829,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[10])+1,t1);
t3=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_17833,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
t4=(C_word)C_i_cadddr(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 369  emit");
f_16320(t3,t4,C_SCHEME_END_OF_LIST,((C_word*)t0)[3]);}

/* k17831 in k17827 in k17823 in k17773 in sal-parse-stepping in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_17833(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17833,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[10])+1,t1);
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_17837,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[10],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 369  fifth");
t4=C_retrieve(lf[47]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k17835 in k17831 in k17827 in k17823 in k17773 in sal-parse-stepping in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_17837(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17837,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17840,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[9])[1])){
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_17856,a[2]=t3,a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[4],a[8]=((C_word*)t0)[9],tmp=(C_word)a,a+=9,tmp);
t5=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[9])[1]);
C_trace("ChickenBridge.scm: 369  emit");
f_16320(t4,t5,C_SCHEME_END_OF_LIST,((C_word*)t0)[2]);}
else{
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t4);
t6=t3;
f_17840(t6,t5);}}

/* k17854 in k17835 in k17831 in k17827 in k17823 in k17773 in sal-parse-stepping in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_17856(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17856,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_17860,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 369  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[337]);}

/* k17858 in k17854 in k17835 in k17831 in k17827 in k17823 in k17773 in sal-parse-stepping in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_17860(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[66],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17860,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[8])[1],C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[6])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[336],t3,t4);
t6=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_a_i_list(&a,4,lf[20],((C_word*)((C_word*)t0)[8])[1],t5,t6);
t8=C_mutate(((C_word *)((C_word*)t0)[4])+1,t7);
t9=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[8])[1],C_SCHEME_TRUE,C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);
t10=(C_word)C_a_i_list(&a,1,t9);
t11=C_mutate(((C_word *)((C_word*)t0)[3])+1,t10);
t12=((C_word*)t0)[2];
f_17840(t12,t11);}

/* k17838 in k17835 in k17831 in k17827 in k17823 in k17773 in sal-parse-stepping in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_17840(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17840,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17844,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE,((C_word*)((C_word*)t0)[2])[1],C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 369  append");
t5=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,((C_word*)((C_word*)t0)[5])[1],t4);}

/* k17842 in k17838 in k17835 in k17831 in k17827 in k17823 in k17773 in sal-parse-stepping in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_17844(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_17769(t3,t2);}

/* k17777 in k17773 in sal-parse-stepping in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_17779(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17779,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17783,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 369  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[335]);}

/* k17781 in k17777 in k17773 in sal-parse-stepping in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_17783(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17783,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17787,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 369  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[334]);}

/* k17785 in k17781 in k17777 in k17773 in sal-parse-stepping in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_17787(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[63],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17787,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,3,lf[91],((C_word*)((C_word*)t0)[4])[1],C_fix(1));
t5=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[4])[1],t4);
t6=(C_word)C_a_i_list(&a,3,lf[333],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[6])[1]);
t7=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[4])[1],C_fix(0),C_SCHEME_FALSE,t5,t6);
t8=(C_word)C_a_i_list(&a,2,t3,t7);
t9=C_mutate(((C_word *)((C_word*)t0)[3])+1,t8);
t10=((C_word*)t0)[2];
f_17769(t10,t9);}

/* k17767 in sal-parse-stepping in k17758 in k17755 in k17752 in k17749 in k17746 in k17743 in k17740 in k17737 in k17734 in k17731 in k17728 in k17725 in k17722 in k17719 in k17716 in k17713 in k17710 in k17707 in k17704 in k17701 in k17698 in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_17769(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  make-parse-unit");
f_16163(((C_word*)t0)[3],C_fix(33024),((C_word*)((C_word*)t0)[2])[1],C_SCHEME_FALSE);}

/* inf->pre in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_17584(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17584,NULL,2,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t3)[1]))){
t12=C_SCHEME_UNDEFINED;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_set_block_item(t13,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_17596,a[2]=t9,a[3]=t13,a[4]=t11,a[5]=t5,a[6]=t7,a[7]=t3,a[8]=((C_word)li260),tmp=(C_word)a,a+=9,tmp));
t15=((C_word*)t13)[1];
f_17596(t15,t1);}
else{
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,((C_word*)t3)[1]);}}

/* do2635 in inf->pre in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_17596(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17596,NULL,2,t0,t1);}
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[6])[1]);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[7])+1,t4);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_17615,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[7],a[6]=t1,a[7]=((C_word*)t0)[3],a[8]=((C_word*)t0)[4],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 369  is-op?");
f_17563(t6,((C_word*)((C_word*)t0)[5])[1]);}}

/* k17613 in do2635 in inf->pre in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_17615(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17615,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17618,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[8])[1]))){
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_17633,a[2]=((C_word*)t0)[8],a[3]=t5,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],a[8]=((C_word)li259),tmp=(C_word)a,a+=9,tmp));
t7=((C_word*)t5)[1];
f_17633(t7,t3,C_SCHEME_FALSE,C_SCHEME_TRUE,C_SCHEME_END_OF_LIST);}
else{
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,((C_word*)((C_word*)t0)[2])[1]);
t5=t3;
f_17618(2,t5,t4);}}

/* do2637 in k17613 in do2635 in inf->pre in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_17633(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17633,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]);
t9=(C_truep(t8)?t8:(C_word)C_i_not(((C_word*)t6)[1]));
if(C_truep(t9)){
t10=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17647,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17661,a[2]=t10,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  reverse");
t12=*((C_word*)lf[164]+1);
((C_proc3)C_retrieve_proc(t12))(3,t12,t11,((C_word*)t7)[1]);}
else{
t10=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_17665,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[2],a[4]=t7,a[5]=t6,a[6]=t1,a[7]=((C_word*)t0)[3],a[8]=t5,tmp=(C_word)a,a+=9,tmp);
t11=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
C_trace("ChickenBridge.scm: 369  is-op?");
f_17563(t10,t11);}}

/* k17663 in do2637 in k17613 in do2635 in inf->pre in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_17665(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17665,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17668,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t4=(C_truep(((C_word*)((C_word*)t0)[8])[1])?(C_word)C_i_less_or_equalp(((C_word*)((C_word*)t0)[8])[1],((C_word*)((C_word*)t0)[3])[1]):C_SCHEME_FALSE);
if(C_truep(t4)){
t5=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_FALSE);
t6=t3;
f_17668(t6,t5);}
else{
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t6);
t8=(C_word)C_a_i_cons(&a,2,t5,((C_word*)((C_word*)t0)[4])[1]);
t9=C_mutate(((C_word *)((C_word*)t0)[4])+1,t8);
t10=t3;
f_17668(t10,t9);}}

/* k17666 in k17663 in do2637 in k17613 in do2635 in inf->pre in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_17668(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[6])[1];
f_17633(t2,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k17659 in do2637 in k17613 in do2635 in inf->pre in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_17661(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  inf->pre");
f_17584(((C_word*)t0)[2],t1);}

/* k17645 in do2637 in k17613 in do2635 in inf->pre in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_17647(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17647,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_truep(((C_word*)((C_word*)t0)[4])[1])?(C_word)C_a_i_list(&a,3,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[5])[1]):(C_word)C_a_i_list(&a,3,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_FALSE));
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,t4);}

/* k17616 in k17613 in do2635 in inf->pre in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_17618(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[3])[1];
f_17596(t2,((C_word*)t0)[2]);}

/* is-op? in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_17563(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17563,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17570,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  token-unit?");
f_16232(t3,t2);}

/* k17568 in is-op? in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_17570(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17570,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17573,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  parse-unit-type");
f_16184(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* k17571 in k17568 in is-op? in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_17573(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17573,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17579,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  SalOpType?");
f_17340(t2,t1);}

/* k17577 in k17571 in k17568 in is-op? in k17559 in k17556 in k17553 in k17550 in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_17579(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17579,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[3];
t3=((C_word*)t0)[2];
t4=t2;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_bitwise_and(&a,2,t3,C_fix(255)));}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* remove-token-type in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_17498(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17498,NULL,3,t1,t2,t3);}
t4=(C_word)C_a_i_list(&a,1,C_SCHEME_TRUE);
t5=t4;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17507,a[2]=t3,a[3]=t6,a[4]=t8,a[5]=t4,a[6]=((C_word)li256),tmp=(C_word)a,a+=7,tmp));
t10=((C_word*)t8)[1];
f_17507(t10,t1,t2);}

/* do2601 in remove-token-type in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_17507(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17507,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_cdr(((C_word*)t0)[5]));}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17520,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17530,a[2]=((C_word*)t0)[3],a[3]=t2,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 369  token-unit-type=?");
f_16248(t4,t5,((C_word*)t0)[2]);}}

/* k17528 in do2601 in remove-token-type in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_17530(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17530,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_17520(t2,C_SCHEME_FALSE);}
else{
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=(C_word)C_a_i_list(&a,1,t2);
t4=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t3);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[2])+1,t5);
t7=((C_word*)t0)[4];
f_17520(t7,t6);}}

/* k17518 in do2601 in remove-token-type in k17494 in k17491 in k17488 in k17485 in k17482 in k17479 in k17476 in k17473 in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_17520(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_17507(t3,((C_word*)t0)[2],t2);}

/* SalType=? in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_17454(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17454,NULL,3,t1,t2,t3);}
t4=(C_word)C_a_i_arithmetic_shift(&a,2,t2,C_fix(-8));
t5=(C_word)C_a_i_arithmetic_shift(&a,2,t3,C_fix(-8));
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_i_nequalp(t4,t5));}

/* SalRuleType? in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_17442(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17442,NULL,2,t1,t2);}
t3=(C_word)C_i_lessp(C_fix(25600),t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_truep(t3)?(C_word)C_i_lessp(t2,C_fix(38400)):C_SCHEME_FALSE));}

/* SalOpType? in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_17340(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17340,NULL,2,t1,t2);}
t3=(C_word)C_i_lessp(C_fix(6656),t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_truep(t3)?(C_word)C_i_lessp(t2,C_fix(11520)):C_SCHEME_FALSE));}

/* SalTokenType? in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_17292(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17292,NULL,2,t1,t2);}
t3=(C_word)C_i_lessp(C_fix(0),t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_truep(t3)?(C_word)C_i_lessp(t2,C_fix(25600)):C_SCHEME_FALSE));}

/* parser in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_16673(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7){
C_word tmp;
C_word t8;
C_word t9;
C_word t10;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16673,NULL,7,t1,t2,t3,t4,t5,t6,t7);}
t8=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_16677,a[2]=t4,a[3]=t7,a[4]=t6,a[5]=t5,a[6]=t8,a[7]=t1,a[8]=t2,tmp=(C_word)a,a+=9,tmp);
if(C_truep(t6)){
C_trace("ChickenBridge.scm: 369  printf");
t10=C_retrieve(lf[327]);
((C_proc6)C_retrieve_proc(t10))(6,t10,t9,lf[328],t5,t2,((C_word*)t8)[1]);}
else{
t10=t9;
f_16677(2,t10,C_SCHEME_UNDEFINED);}}

/* k16675 in parser in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_16677(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16677,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_16680,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 369  null-tokens?");
f_15852(t2,((C_word*)((C_word*)t0)[6])[1]);}

/* k16678 in k16675 in parser in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_16680(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16680,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_16683,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
if(C_truep(t1)){
t3=t2;
f_16683(t3,t1);}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17098,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17102,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17106,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  first-token");
f_15840(t5,((C_word*)((C_word*)t0)[6])[1]);}}

/* k17104 in k16678 in k16675 in parser in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_17106(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  token-position");
f_15799(((C_word*)t0)[2],t1);}

/* k17100 in k16678 in k16675 in parser in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_17102(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  max");
t2=*((C_word*)lf[212]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],C_retrieve2(lf[321],"*maxtokpos*"),t1);}

/* k17096 in k16678 in k16675 in parser in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_17098(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(&lf[321],t1);
t3=((C_word*)t0)[2];
f_16683(t3,t2);}

/* k16681 in k16678 in k16675 in parser in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_16683(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16683,NULL,2,t0,t1);}
t2=((C_word*)t0)[8];
if(C_truep((C_word)C_i_numberp(t2))){
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16692,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 369  pattern-value");
t4=C_retrieve2(lf[185],"pattern-value");
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[8]);}
else{
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_16806,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[2],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 369  pattern-clause?");
f_15994(t3,((C_word*)t0)[8]);}}

/* k16804 in k16681 in k16678 in k16675 in parser in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_16806(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16806,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_16812,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
t3=((C_word*)t0)[2];
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16039,a[2]=t2,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  pattern-clause?");
f_15994(t4,t3);}
else{
C_trace("ChickenBridge.scm: 369  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[6],lf[326],((C_word*)t0)[2]);}}

/* k16037 in k16804 in k16681 in k16678 in k16675 in parser in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_16039(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
f_16812(t3,(C_word)C_eqp(t2,lf[310]));}
else{
t2=((C_word*)t0)[2];
f_16812(t2,C_SCHEME_FALSE);}}

/* k16810 in k16804 in k16681 in k16678 in k16675 in parser in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_16812(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[32],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16812,NULL,2,t0,t1);}
t2=(C_truep(t1)?t1:((C_word*)t0)[8]);
if(C_truep(t2)){
t3=C_SCHEME_FALSE;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=((C_word*)((C_word*)t0)[7])[1];
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_END_OF_LIST;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_16821,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t10,a[7]=((C_word*)t0)[7],a[8]=t6,a[9]=t8,a[10]=t4,a[11]=((C_word*)t0)[6],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 369  pattern-nsubs");
f_16012(t11,((C_word*)t0)[2]);}
else{
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16900,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
t4=((C_word*)t0)[2];
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16055,a[2]=t3,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  pattern-clause?");
f_15994(t5,t4);}}

/* k16053 in k16810 in k16804 in k16681 in k16678 in k16675 in parser in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_16055(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
f_16900(t3,(C_word)C_eqp(t2,lf[311]));}
else{
t2=((C_word*)t0)[2];
f_16900(t2,C_SCHEME_FALSE);}}

/* k16898 in k16810 in k16804 in k16681 in k16678 in k16675 in parser in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_16900(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16900,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_END_OF_LIST;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_16906,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t7,a[8]=t5,a[9]=((C_word*)t0)[7],a[10]=t3,tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 369  pattern-nsubs");
f_16012(t8,((C_word*)t0)[2]);}
else{
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16970,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[2],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 369  pattern-zero-or-more?");
f_16080(t2,((C_word*)t0)[2]);}}

/* k16968 in k16898 in k16810 in k16804 in k16681 in k16678 in k16675 in parser in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_16970(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16970,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16973,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(t1)){
t3=t2;
f_16973(t3,t1);}
else{
t3=((C_word*)t0)[5];
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16071,a[2]=t2,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  pattern-clause?");
f_15994(t4,t3);}}

/* k16069 in k16968 in k16898 in k16810 in k16804 in k16681 in k16678 in k16675 in parser in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_16071(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
f_16973(t3,(C_word)C_eqp(t2,lf[91]));}
else{
t2=((C_word*)t0)[2];
f_16973(t2,C_SCHEME_FALSE);}}

/* k16971 in k16968 in k16898 in k16810 in k16804 in k16681 in k16678 in k16675 in parser in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_16973(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word ab[46],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16973,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_SCHEME_TRUE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)((C_word*)t0)[7])[1];
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_END_OF_LIST;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_fix(0);
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16979,a[2]=((C_word*)t0)[5],a[3]=t11,a[4]=((C_word*)t0)[7],a[5]=t9,a[6]=t3,a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
t13=C_SCHEME_UNDEFINED;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_set_block_item(t14,0,(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_17002,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t5,a[7]=t11,a[8]=t7,a[9]=((C_word*)t0)[7],a[10]=t9,a[11]=t14,a[12]=t3,a[13]=((C_word)li248),tmp=(C_word)a,a+=14,tmp));
t16=((C_word*)t14)[1];
f_17002(t16,t12);}
else{
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17051,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
t3=((C_word*)t0)[5];
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16103,a[2]=t2,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  pattern-clause?");
f_15994(t4,t3);}}

/* k16101 in k16971 in k16968 in k16898 in k16810 in k16804 in k16681 in k16678 in k16675 in parser in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_16103(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
f_17051(t3,(C_word)C_eqp(t2,lf[325]));}
else{
t2=((C_word*)t0)[2];
f_17051(t2,C_SCHEME_FALSE);}}

/* k17049 in k16971 in k16968 in k16898 in k16810 in k16804 in k16681 in k16678 in k16675 in parser in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_17051(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17051,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_END_OF_LIST;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_END_OF_LIST;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17060,a[2]=((C_word*)t0)[6],a[3]=t7,a[4]=t5,a[5]=((C_word*)t0)[7],a[6]=t3,tmp=(C_word)a,a+=7,tmp);
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17071,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],a[7]=((C_word)li249),tmp=(C_word)a,a+=8,tmp);
t10=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17077,a[2]=t7,a[3]=t5,a[4]=t3,a[5]=((C_word)li250),tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 369  call-with-values");
C_call_with_values(4,0,t8,t9,t10);}
else{
t2=((C_word*)t0)[5];
t3=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 369  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,((C_word*)t0)[7],lf[324],t3);}}

/* a17076 in k17049 in k16971 in k16968 in k16898 in k16810 in k16804 in k16681 in k16678 in k16675 in parser in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_17077(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_17077,5,t0,t1,t2,t3,t4);}
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,t7);}

/* a17070 in k17049 in k16971 in k16968 in k16898 in k16810 in k16804 in k16681 in k16678 in k16675 in parser in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_17071(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17071,2,t0,t1);}
C_trace("ChickenBridge.scm: 369  parser");
f_16673(t1,((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_TRUE,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k17058 in k17049 in k16971 in k16968 in k16898 in k16810 in k16804 in k16681 in k16678 in k16675 in parser in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_17060(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("ChickenBridge.scm: 369  values");
C_values(5,0,((C_word*)t0)[5],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]);}
else{
C_trace("ChickenBridge.scm: 369  values");
C_values(5,0,((C_word*)t0)[5],C_SCHEME_TRUE,C_SCHEME_FALSE,((C_word*)((C_word*)t0)[2])[1]);}}

/* do2338 in k16971 in k16968 in k16898 in k16810 in k16804 in k16681 in k16678 in k16675 in parser in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_17002(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17002,NULL,2,t0,t1);}
t2=(C_word)C_i_not(((C_word*)((C_word*)t0)[12])[1]);
t3=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_17012,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[12],a[12]=((C_word*)t0)[11],a[13]=t1,tmp=(C_word)a,a+=14,tmp);
if(C_truep(t2)){
t4=t3;
f_17012(2,t4,t2);}
else{
C_trace("ChickenBridge.scm: 369  null-tokens?");
f_15852(t3,((C_word*)((C_word*)t0)[8])[1]);}}

/* k17010 in do2338 in k16971 in k16968 in k16898 in k16810 in k16804 in k16681 in k16678 in k16675 in parser in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_17012(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17012,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[13];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}
else{
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_17015,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[13],a[9]=((C_word*)t0)[12],tmp=(C_word)a,a+=10,tmp);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17032,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[5],a[7]=((C_word)li246),tmp=(C_word)a,a+=8,tmp);
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17038,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[11],a[5]=((C_word)li247),tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 369  call-with-values");
C_call_with_values(4,0,t2,t3,t4);}}

/* a17037 in k17010 in do2338 in k16971 in k16968 in k16898 in k16810 in k16804 in k16681 in k16678 in k16675 in parser in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_17038(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_17038,5,t0,t1,t2,t3,t4);}
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,t7);}

/* a17031 in k17010 in do2338 in k16971 in k16968 in k16898 in k16810 in k16804 in k16681 in k16678 in k16675 in parser in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_17032(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17032,2,t0,t1);}
C_trace("ChickenBridge.scm: 369  parser");
f_16673(t1,((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_TRUE,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k17013 in k17010 in do2338 in k16971 in k16968 in k16898 in k16810 in k16804 in k16681 in k16678 in k16675 in parser in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_17015(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17015,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17018,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],tmp=(C_word)a,a+=4,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17025,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 369  append");
t4=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[2])[1]);}
else{
t3=t2;
f_17018(t3,C_SCHEME_UNDEFINED);}}

/* k17023 in k17013 in k17010 in do2338 in k16971 in k16968 in k16898 in k16810 in k16804 in k16681 in k16678 in k16675 in parser in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_17025(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17025,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,((C_word*)((C_word*)t0)[4])[1]);
t4=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(1));
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=((C_word*)t0)[2];
f_17018(t6,t5);}

/* k17016 in k17013 in k17010 in do2338 in k16971 in k16968 in k16898 in k16810 in k16804 in k16681 in k16678 in k16675 in parser in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_17018(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[3])[1];
f_17002(t2,((C_word*)t0)[2]);}

/* k16977 in k16971 in k16968 in k16898 in k16810 in k16804 in k16681 in k16678 in k16675 in parser in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_16979(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16979,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16982,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16988,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 369  pattern-zero-or-more?");
f_16080(t3,((C_word*)t0)[2]);}

/* k16986 in k16977 in k16971 in k16968 in k16898 in k16810 in k16804 in k16681 in k16678 in k16675 in parser in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_16988(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=(C_truep(t1)?t1:(C_word)C_i_greaterp(((C_word*)((C_word*)t0)[5])[1],C_fix(0)));
if(C_truep(t2)){
t3=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t4=((C_word*)t0)[3];
f_16982(t4,t3);}
else{
t3=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_FALSE);
t4=C_set_block_item(((C_word*)t0)[2],0,C_SCHEME_END_OF_LIST);
t5=((C_word*)t0)[3];
f_16982(t5,t4);}}

/* k16980 in k16977 in k16971 in k16968 in k16898 in k16810 in k16804 in k16681 in k16678 in k16675 in parser in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_16982(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  values");
C_values(5,0,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k16904 in k16898 in k16810 in k16804 in k16681 in k16678 in k16675 in parser in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_16906(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16906,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16909,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],tmp=(C_word)a,a+=7,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_16924,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[5],a[9]=t4,a[10]=t1,a[11]=((C_word*)t0)[10],a[12]=((C_word)li245),tmp=(C_word)a,a+=13,tmp));
t6=((C_word*)t4)[1];
f_16924(t6,t2,C_fix(0));}

/* do2318 in k16904 in k16898 in k16810 in k16804 in k16681 in k16678 in k16675 in parser in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_16924(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16924,NULL,3,t0,t1,t2);}
t3=((C_word*)((C_word*)t0)[11])[1];
t4=(C_truep(t3)?t3:(C_word)C_i_nequalp(t2,((C_word*)t0)[10]));
if(C_truep(t4)){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_FALSE);}
else{
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16934,a[2]=t1,a[3]=((C_word*)t0)[9],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_16943,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word)li243),tmp=(C_word)a,a+=9,tmp);
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16957,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[11],a[5]=((C_word)li244),tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 369  call-with-values");
C_call_with_values(4,0,t5,t6,t7);}}

/* a16956 in do2318 in k16904 in k16898 in k16810 in k16804 in k16681 in k16678 in k16675 in parser in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_16957(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_16957,5,t0,t1,t2,t3,t4);}
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,t7);}

/* a16942 in do2318 in k16904 in k16898 in k16810 in k16804 in k16681 in k16678 in k16675 in parser in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_16943(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16943,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16951,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=t1,a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 369  pattern-sub");
f_16022(t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k16949 in a16942 in do2318 in k16904 in k16898 in k16810 in k16804 in k16681 in k16678 in k16675 in parser in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_16951(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16951,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
C_trace("ChickenBridge.scm: 369  parser");
f_16673(((C_word*)t0)[5],t1,((C_word*)((C_word*)t0)[4])[1],C_SCHEME_FALSE,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k16932 in do2318 in k16904 in k16898 in k16810 in k16804 in k16681 in k16678 in k16675 in parser in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_16934(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16934,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t3=((C_word*)((C_word*)t0)[3])[1];
f_16924(t3,((C_word*)t0)[2],t2);}

/* k16907 in k16904 in k16898 in k16810 in k16804 in k16681 in k16678 in k16675 in parser in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_16909(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("ChickenBridge.scm: 369  values");
C_values(5,0,((C_word*)t0)[5],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]);}
else{
C_trace("ChickenBridge.scm: 369  values");
C_values(5,0,((C_word*)t0)[5],C_SCHEME_FALSE,C_SCHEME_END_OF_LIST,((C_word*)((C_word*)t0)[2])[1]);}}

/* k16819 in k16810 in k16804 in k16681 in k16678 in k16675 in parser in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_16821(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16821,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16824,a[2]=((C_word*)t0)[7],a[3]=t3,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_16843,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[10],a[10]=t6,a[11]=t3,a[12]=t1,a[13]=((C_word)li242),tmp=(C_word)a,a+=14,tmp));
t8=((C_word*)t6)[1];
f_16843(t8,t4,C_fix(0));}

/* do2296 in k16819 in k16810 in k16804 in k16681 in k16678 in k16675 in parser in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_16843(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16843,NULL,3,t0,t1,t2);}
t3=(C_word)C_i_nequalp(t2,((C_word*)t0)[12]);
t4=(C_truep(t3)?t3:((C_word*)((C_word*)t0)[11])[1]);
if(C_truep(t4)){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_FALSE);}
else{
t5=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_16856,a[2]=((C_word*)t0)[11],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=t1,a[7]=((C_word*)t0)[10],a[8]=t2,tmp=(C_word)a,a+=9,tmp);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_16876,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word)li240),tmp=(C_word)a,a+=9,tmp);
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16890,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word)li241),tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 369  call-with-values");
C_call_with_values(4,0,t5,t6,t7);}}

/* a16889 in do2296 in k16819 in k16810 in k16804 in k16681 in k16678 in k16675 in parser in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_16890(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_16890,5,t0,t1,t2,t3,t4);}
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,t7);}

/* a16875 in do2296 in k16819 in k16810 in k16804 in k16681 in k16678 in k16675 in parser in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_16876(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16876,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16884,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=t1,a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 369  pattern-sub");
f_16022(t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k16882 in a16875 in do2296 in k16819 in k16810 in k16804 in k16681 in k16678 in k16675 in parser in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_16884(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16884,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
C_trace("ChickenBridge.scm: 369  parser");
f_16673(((C_word*)t0)[5],t1,((C_word*)((C_word*)t0)[4])[1],C_SCHEME_FALSE,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k16854 in do2296 in k16819 in k16810 in k16804 in k16681 in k16678 in k16675 in parser in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_16856(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16856,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16859,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],tmp=(C_word)a,a+=5,tmp);
t3=((C_word*)((C_word*)t0)[5])[1];
if(C_truep(t3)){
t4=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=t2;
f_16859(t6,t5);}
else{
t4=C_set_block_item(((C_word*)t0)[2],0,C_SCHEME_TRUE);
t5=t2;
f_16859(t5,t4);}}

/* k16857 in k16854 in do2296 in k16819 in k16810 in k16804 in k16681 in k16678 in k16675 in parser in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_16859(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16859,NULL,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t3=((C_word*)((C_word*)t0)[3])[1];
f_16843(t3,((C_word*)t0)[2],t2);}

/* k16822 in k16819 in k16810 in k16804 in k16681 in k16678 in k16675 in parser in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_16824(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16824,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16827,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
t3=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_FALSE);
t4=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_END_OF_LIST);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[2])[1]);
t6=t2;
f_16827(t6,t5);}
else{
t3=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_TRUE);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16841,a[2]=t2,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  reverse");
t5=*((C_word*)lf[164]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,((C_word*)((C_word*)t0)[5])[1]);}}

/* k16839 in k16822 in k16819 in k16810 in k16804 in k16681 in k16678 in k16675 in parser in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_16841(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_16827(t3,t2);}

/* k16825 in k16822 in k16819 in k16810 in k16804 in k16681 in k16678 in k16675 in parser in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_16827(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  values");
C_values(5,0,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k16690 in k16681 in k16678 in k16675 in parser in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_16692(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16692,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16698,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 369  SalTokenType?");
f_17292(t2,t1);}

/* k16696 in k16690 in k16681 in k16678 in k16675 in parser in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_16698(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16698,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16704,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  null-tokens?");
f_15852(t2,((C_word*)((C_word*)t0)[6])[1]);}
else{
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16756,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[4],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 369  SalRuleType?");
f_17442(t2,((C_word*)t0)[5]);}}

/* k16754 in k16696 in k16690 in k16681 in k16678 in k16675 in parser in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_16756(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16756,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16759,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 369  get-rule");
f_15970(t2,((C_word*)t0)[2],C_SCHEME_END_OF_LIST);}
else{
C_trace("ChickenBridge.scm: 369  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[323],((C_word*)t0)[2]);}}

/* k16757 in k16754 in k16696 in k16690 in k16681 in k16678 in k16675 in parser in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_16759(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16759,2,t0,t1);}
t2=t1;
t3=(C_word)C_i_check_structure(t2,lf[279]);
t4=(C_word)C_i_block_ref(t2,C_fix(3));
t5=t1;
t6=(C_word)C_i_check_structure(t5,lf[279]);
t7=(C_word)C_i_block_ref(t5,C_fix(4));
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16770,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t4,a[6]=((C_word*)t0)[6],a[7]=((C_word)li238),tmp=(C_word)a,a+=8,tmp);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16780,a[2]=((C_word*)t0)[3],a[3]=t7,a[4]=((C_word)li239),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  call-with-values");
C_call_with_values(4,0,((C_word*)t0)[2],t8,t9);}

/* a16779 in k16757 in k16754 in k16696 in k16690 in k16681 in k16678 in k16675 in parser in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_16780(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_16780,5,t0,t1,t2,t3,t4);}
if(C_truep(t2)){
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16791,a[2]=t4,a[3]=t2,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
if(C_truep(((C_word*)t0)[3])){
C_trace("ChickenBridge.scm: 369  func");
t6=((C_word*)t0)[3];
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,t3,((C_word*)t0)[2]);}
else{
t6=t5;
f_16791(2,t6,t3);}}
else{
C_trace("ChickenBridge.scm: 369  values");
C_values(5,0,t1,C_SCHEME_FALSE,C_SCHEME_FALSE,t4);}}

/* k16789 in a16779 in k16757 in k16754 in k16696 in k16690 in k16681 in k16678 in k16675 in parser in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_16791(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  values");
C_values(5,0,((C_word*)t0)[4],((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* a16769 in k16757 in k16754 in k16696 in k16690 in k16681 in k16678 in k16675 in parser in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_16770(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16770,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
C_trace("ChickenBridge.scm: 369  parser");
f_16673(t1,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],C_SCHEME_FALSE,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k16702 in k16696 in k16690 in k16681 in k16678 in k16675 in parser in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_16704(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16704,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 369  values");
C_values(5,0,((C_word*)t0)[4],C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_END_OF_LIST);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16714,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  first-token");
f_15840(t2,((C_word*)((C_word*)t0)[3])[1]);}}

/* k16712 in k16702 in k16696 in k16690 in k16681 in k16678 in k16675 in parser in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_16714(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16714,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16720,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16750,a[2]=((C_word*)t0)[2],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  token-type");
f_15763(t3,t1);}

/* k16748 in k16712 in k16702 in k16696 in k16690 in k16681 in k16678 in k16675 in parser in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_16750(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  SalType=?");
f_17454(((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* k16718 in k16712 in k16702 in k16696 in k16690 in k16681 in k16678 in k16675 in parser in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_16720(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16720,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16727,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16735,a[2]=((C_word*)t0)[2],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  token-type");
f_15763(t3,((C_word*)t0)[2]);}
else{
C_trace("ChickenBridge.scm: 369  values");
C_values(5,0,((C_word*)t0)[3],C_SCHEME_FALSE,C_SCHEME_FALSE,((C_word*)((C_word*)t0)[4])[1]);}}

/* k16733 in k16718 in k16712 in k16702 in k16696 in k16690 in k16681 in k16678 in k16675 in parser in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_16735(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16735,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16739,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  token-string");
f_15781(t2,((C_word*)t0)[2]);}

/* k16737 in k16733 in k16718 in k16712 in k16702 in k16696 in k16690 in k16681 in k16678 in k16675 in parser in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_16739(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16739,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16743,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  token-position");
f_15799(t2,((C_word*)t0)[2]);}

/* k16741 in k16737 in k16733 in k16718 in k16712 in k16702 in k16696 in k16690 in k16681 in k16678 in k16675 in parser in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_16743(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  make-parse-unit");
f_16163(((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k16725 in k16718 in k16712 in k16702 in k16696 in k16690 in k16681 in k16678 in k16675 in parser in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_16727(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=((C_word*)((C_word*)t0)[3])[1];
t3=(C_word)C_i_cdr(t2);
C_trace("ChickenBridge.scm: 369  values");
C_values(5,0,((C_word*)t0)[2],C_SCHEME_TRUE,t1,t3);}

/* simple-unit-emitter in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_16569(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16569,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16571,a[2]=t2,a[3]=((C_word)li236),tmp=(C_word)a,a+=4,tmp));}

/* f_16571 in simple-unit-emitter in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_16571(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_16571,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16575,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=t4,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16619,a[2]=t5,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  parse-unit-parsed");
f_16202(t6,t2);}

/* k16617 */
static void C_ccall f_16619(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  append");
t2=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],t1,C_SCHEME_END_OF_LIST);}

/* k16573 */
static void C_ccall f_16575(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16575,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=((C_word*)t3)[1];
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16578,a[2]=t3,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t4,tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)t0)[2])){
t6=(C_word)C_i_set_car(((C_word*)t3)[1],((C_word*)t0)[2]);
t7=(C_word)C_i_cdr(((C_word*)t3)[1]);
t8=C_set_block_item(t3,0,t7);
t9=t5;
f_16578(t9,t8);}
else{
t6=t5;
f_16578(t6,C_SCHEME_UNDEFINED);}}

/* k16576 in k16573 */
static void C_fcall f_16578(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16578,NULL,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16583,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t3,a[5]=((C_word*)t0)[6],a[6]=((C_word)li235),tmp=(C_word)a,a+=7,tmp));
t5=((C_word*)t3)[1];
f_16583(t5,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* do2253 in k16576 in k16573 */
static void C_fcall f_16583(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16583,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)t0)[5]);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16604,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 369  emit");
f_16320(t3,t4,((C_word*)t0)[3],((C_word*)t0)[2]);}}

/* k16602 in do2253 in k16576 in k16573 */
static void C_ccall f_16604(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=(C_word)C_i_set_car(((C_word*)t0)[4],t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_16583(t4,((C_word*)t0)[2],t3);}

/* simple-unit-parser in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_16561(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16561,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16563,a[2]=t2,a[3]=((C_word)li233),tmp=(C_word)a,a+=4,tmp));}

/* f_16563 in simple-unit-parser in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_16563(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_16563,4,t0,t1,t2,t3);}
C_trace("ChickenBridge.scm: 369  make-parse-unit");
f_16163(t1,((C_word*)t0)[2],t2,C_SCHEME_FALSE);}

/* emit-list in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_16353(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16353,NULL,4,t1,t2,t3,t4);}
if(C_truep((C_word)C_i_nullp(t2))){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_END_OF_LIST);}
else{
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16370,a[2]=t4,a[3]=t3,a[4]=t2,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
t6=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 369  emit");
f_16320(t5,t6,t3,t4);}}

/* k16368 in emit-list in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_16370(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16370,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16374,a[2]=t1,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 369  emit-list");
f_16353(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k16372 in k16368 in emit-list in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_16374(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16374,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* emit in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_16320(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16320,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16327,a[2]=t4,a[3]=t3,a[4]=t2,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 369  token-unit?");
f_16232(t5,t2);}

/* k16325 in emit in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_16327(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16327,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[5];
t3=((C_word*)t0)[4];
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16398,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  parse-unit-type");
f_16184(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16336,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=((C_word*)t0)[4];
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16271,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  parse-unit?");
f_16169(t4,t3);}}

/* k16269 in k16325 in emit in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_16271(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16271,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16278,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  parse-unit-type");
f_16184(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_16336(2,t2,C_SCHEME_FALSE);}}

/* k16276 in k16269 in k16325 in emit in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_16278(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  SalRuleType?");
f_17442(((C_word*)t0)[2],t1);}

/* k16334 in k16325 in emit in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_16336(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16336,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[5];
t3=((C_word*)t0)[4];
t4=((C_word*)t0)[3];
t5=((C_word*)t0)[2];
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16536,a[2]=t5,a[3]=t4,a[4]=t3,a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16559,a[2]=t6,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  parse-unit-type");
f_16184(t7,t3);}
else{
if(C_truep((C_word)C_i_listp(((C_word*)t0)[4]))){
C_trace("ChickenBridge.scm: 369  emit-list");
f_16353(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
C_trace("ChickenBridge.scm: 369  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[5],lf[317],((C_word*)t0)[4]);}}}

/* k16557 in k16334 in k16325 in emit in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_16559(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  get-rule");
f_15970(((C_word*)t0)[2],t1,C_SCHEME_END_OF_LIST);}

/* k16534 in k16334 in k16325 in emit in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_16536(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16536,2,t0,t1);}
t2=(C_word)C_i_check_structure(t1,lf[279]);
t3=(C_word)C_i_block_ref(t1,C_fix(5));
if(C_truep(t3)){
C_trace("ChickenBridge.scm: 369  meth");
t4=t3;
((C_proc5)C_retrieve_proc(t4))(5,t4,((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16552,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  parse-unit-parsed");
f_16202(t4,((C_word*)t0)[4]);}}

/* k16550 in k16534 in k16334 in k16325 in emit in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_16552(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  emit");
f_16320(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k16396 in k16325 in emit in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_16398(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16398,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16401,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  parse-unit-parsed");
f_16202(t2,((C_word*)t0)[2]);}

/* k16399 in k16396 in k16325 in emit in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_16401(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16401,2,t0,t1);}
t2=((C_word*)t0)[4];
t3=(C_word)C_i_lessp(C_fix(2560),t2);
t4=(C_truep(t3)?(C_word)C_i_lessp(t2,C_fix(3584)):C_SCHEME_FALSE);
if(C_truep(t4)){
C_trace("ChickenBridge.scm: 369  string->number");
C_string_to_number(3,0,((C_word*)t0)[3],t1);}
else{
t5=((C_word*)t0)[4];
t6=(C_word)C_i_lessp(C_fix(13056),t5);
t7=(C_truep(t6)?(C_word)C_i_lessp(t5,C_fix(23808)):C_SCHEME_FALSE);
if(C_truep(t7)){
C_trace("ChickenBridge.scm: 369  string->symbol");
t8=*((C_word*)lf[307]+1);
((C_proc3)C_retrieve_proc(t8))(3,t8,((C_word*)t0)[3],t1);}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16425,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=t1,a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 369  SalOpType?");
f_17340(t8,((C_word*)t0)[4]);}}}

/* k16423 in k16399 in k16396 in k16325 in emit in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_16425(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16425,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16431,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  SalType=?");
f_17454(t2,((C_word*)t0)[3],C_fix(7941));}
else{
t2=((C_word*)t0)[3];
t3=(C_word)C_i_lessp(C_fix(4096),t2);
t4=(C_truep(t3)?(C_word)C_i_lessp(t2,C_fix(4864)):C_SCHEME_FALSE);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16476,a[2]=((C_word*)t0)[5],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  SalType=?");
f_17454(t5,((C_word*)t0)[3],C_fix(4352));}
else{
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16482,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 369  SalType=?");
f_17454(t5,((C_word*)t0)[3],C_fix(2304));}}}

/* k16480 in k16423 in k16399 in k16396 in k16325 in emit in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_16482(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16482,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[5];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16488,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 369  SalType=?");
f_17454(t2,((C_word*)t0)[2],C_fix(6144));}}

/* k16486 in k16480 in k16423 in k16399 in k16396 in k16325 in emit in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_16488(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16488,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 369  string->keyword");
t2=C_retrieve(lf[24]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[5],((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16497,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 369  SalType=?");
f_17454(t2,((C_word*)t0)[2],C_fix(3840));}}

/* k16495 in k16486 in k16480 in k16423 in k16399 in k16396 in k16325 in emit in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_16497(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16497,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 369  string->keyword");
t2=C_retrieve(lf[24]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[5],((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16506,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 369  SalType=?");
f_17454(t2,((C_word*)t0)[2],C_fix(6400));}}

/* k16504 in k16495 in k16486 in k16480 in k16423 in k16399 in k16396 in k16325 in emit in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_16506(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16506,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 369  string->symbol");
t2=*((C_word*)lf[307]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[5],((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16515,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 369  SalType=?");
f_17454(t2,((C_word*)t0)[2],C_fix(25344));}}

/* k16513 in k16504 in k16495 in k16486 in k16480 in k16423 in k16399 in k16396 in k16325 in emit in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_16515(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16515,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 369  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[5],lf[313],((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16524,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  SalType=?");
f_17454(t2,((C_word*)t0)[2],C_fix(25088));}}

/* k16522 in k16513 in k16504 in k16495 in k16486 in k16480 in k16423 in k16399 in k16396 in k16325 in emit in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_16524(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 369  string->symbol");
t2=*((C_word*)lf[307]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[4],((C_word*)t0)[3]);}
else{
C_trace("ChickenBridge.scm: 369  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[4],lf[314],((C_word*)t0)[2]);}}

/* k16474 in k16423 in k16399 in k16396 in k16325 in emit in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_16476(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_truep(t1)?C_SCHEME_TRUE:C_SCHEME_FALSE));}

/* k16429 in k16423 in k16399 in k16396 in k16325 in emit in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_16431(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16431,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[114]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16437,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  SalType=?");
f_17454(t2,((C_word*)t0)[2],C_fix(8199));}}

/* k16435 in k16429 in k16423 in k16399 in k16396 in k16325 in emit in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_16437(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16437,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[308]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16443,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  SalType=?");
f_17454(t2,((C_word*)t0)[2],C_fix(10244));}}

/* k16441 in k16435 in k16429 in k16423 in k16399 in k16396 in k16325 in emit in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_16443(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16443,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[309]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16449,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  SalType=?");
f_17454(t2,((C_word*)t0)[2],C_fix(8450));}}

/* k16447 in k16441 in k16435 in k16429 in k16423 in k16399 in k16396 in k16325 in emit in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_16449(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16449,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[310]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16455,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  SalType=?");
f_17454(t2,((C_word*)t0)[2],C_fix(8705));}}

/* k16453 in k16447 in k16441 in k16435 in k16429 in k16423 in k16399 in k16396 in k16325 in emit in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_16455(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16455,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[311]);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16461,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  SalType=?");
f_17454(t2,((C_word*)t0)[2],C_fix(8963));}}

/* k16459 in k16453 in k16447 in k16441 in k16435 in k16429 in k16423 in k16399 in k16396 in k16325 in emit in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_16461(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[312]);}
else{
C_trace("ChickenBridge.scm: 369  string->symbol");
t2=*((C_word*)lf[307]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}}

/* set-emit-info! in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_16302(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16302,NULL,4,t1,t2,t3,t4);}
t5=(C_word)C_i_assoc(t2,t4);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16309,a[2]=t3,a[3]=t5,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
if(C_truep(t5)){
t7=t6;
f_16309(2,t7,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 369  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[305],t2);}}

/* k16307 in set-emit-info! in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_16309(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_set_cdr(((C_word*)t0)[3],((C_word*)t0)[2]));}

/* add-emit-info in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_16292(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16292,NULL,4,t1,t2,t3,t4);}
t5=(C_word)C_a_i_cons(&a,2,t2,t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_a_i_cons(&a,2,t5,t4));}

/* get-emit-info in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_16280(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16280,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_assoc(t2,t3);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_truep(t4)?(C_word)C_i_cdr(t4):C_SCHEME_FALSE));}

/* token-unit-type=? in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_16248(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16248,NULL,3,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16255,a[2]=t2,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 369  token-unit?");
f_16232(t4,t2);}

/* k16253 in token-unit-type=? in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_16255(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16255,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16262,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  parse-unit-type");
f_16184(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* k16260 in k16253 in token-unit-type=? in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_16262(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  SalType=?");
f_17454(((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* token-unit? in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_16232(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16232,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16239,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  parse-unit?");
f_16169(t3,t2);}

/* k16237 in token-unit? in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_16239(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16239,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16246,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  parse-unit-type");
f_16184(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* k16244 in k16237 in token-unit? in k16228 in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_16246(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 369  SalTokenType?");
f_17292(((C_word*)t0)[2],t1);}

/* parse-unit-position in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_16220(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16220,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[293]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(3)));}

/* parse-unit-parsed in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_16202(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16202,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[293]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* parse-unit-type in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_16184(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16184,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[293]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* parse-unit? in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_16169(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16169,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_structurep(t2,lf[293]));}

/* make-parse-unit in k16159 in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_16163(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16163,NULL,4,t1,t2,t3,t4);}
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_a_i_record(&a,4,lf[293],t2,t3,t4));}

/* parse-error-position in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_16151(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16151,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[289]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* parse-error-string in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_16133(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16133,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[289]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* make-parse-error in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_16112(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16112,NULL,3,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_record(&a,3,lf[289],t2,t3));}

/* pattern-zero-or-more? in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_16080(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16080,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16087,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  pattern-clause?");
f_15994(t3,t2);}

/* k16085 in pattern-zero-or-more? in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_16087(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_eqp(t2,lf[95]));}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* pattern-sub in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_16022(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16022,NULL,3,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16030,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 369  pattern-subs");
f_16006(t4,t2);}

/* k16028 in pattern-sub in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_16030(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_list_ref(t1,((C_word*)t0)[2]));}

/* pattern-nsubs in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_16012(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16012,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16020,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 369  pattern-subs");
f_16006(t3,t2);}

/* k16018 in pattern-nsubs in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_16020(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_length(t1));}

/* pattern-subs in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_16006(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16006,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_cdr(t2));}

/* pattern-clause? in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_15994(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15994,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_pairp(t2));}

/* pattern-value in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_15991(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_15991,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}

/* get-rule in k15966 in k15963 in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_15970(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15970,NULL,3,t1,t2,t3);}
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 369  hash-table-ref");
t4=*((C_word*)lf[41]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t1,C_retrieve2(lf[277],"*rules*"),t2);}
else{
C_trace("ChickenBridge.scm: 369  hash-table-ref/default");
t4=C_retrieve(lf[282]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t1,C_retrieve2(lf[277],"*rules*"),t3);}}

/* rule-name in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_15883(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15883,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[279]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* make-rule in k15858 in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_15862(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15862,NULL,6,t1,t2,t3,t4,t5,t6);}
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_a_i_record(&a,6,lf[279],t2,t3,t4,t5,t6));}

/* null-tokens? in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_15852(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15852,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_nullp(t2));}

/* first-token in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_15840(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15840,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_car(t2));}

/* list->token in k15807 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_15811(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_15811,3,t0,t1,t2);}
t3=(C_word)C_i_car(t2);
t4=(C_word)C_eqp(t3,lf[274]);
if(C_truep(t4)){
t5=(C_word)C_i_cdr(t2);
C_apply(4,0,t1,C_retrieve2(lf[268],"make-token"),t5);}
else{
C_apply(4,0,t1,C_retrieve2(lf[268],"make-token"),t2);}}

/* token-position in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_15799(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15799,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[269]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(3)));}

/* token-string in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_15781(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15781,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[269]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* token-type in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_15763(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15763,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[269]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* make-token in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_15742(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_15742,5,t0,t1,t2,t3,t4);}
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_a_i_record(&a,4,lf[269],t2,t3,t4));}

/* next-in-graph in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_15648(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_15648,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15652,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 368  pattern-data");
f_9243(t3,t2);}

/* k15650 in next-in-graph in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_15652(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15652,2,t0,t1);}
t2=(C_word)C_i_cdr(t1);
t3=(C_word)C_i_car(t1);
if(C_truep(t3)){
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15681,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_i_check_structure(t3,lf[260]);
t6=(C_word)C_i_block_ref(t3,C_fix(2));
C_trace("ChickenBridge.scm: 368  next-1");
f_9865(t4,t6);}
else{
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_set_car(t1,t4);
t6=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 368  graph-node-datum");
f_15067(((C_word*)t0)[2],t6);}}

/* k15679 in k15650 in next-in-graph in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_15681(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15681,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15686,a[2]=t5,a[3]=t1,a[4]=((C_word*)t0)[4],a[5]=t3,a[6]=((C_word)li200),tmp=(C_word)a,a+=7,tmp));
t7=((C_word*)t5)[1];
f_15686(t7,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* do2014 in k15679 in k15650 in next-in-graph in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_15686(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15686,NULL,3,t0,t1,t2);}
t3=((C_word*)((C_word*)t0)[5])[1];
t4=(C_truep(t3)?t3:(C_word)C_i_nullp(t2));
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15696,a[2]=((C_word*)t0)[5],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t6=((C_word*)((C_word*)t0)[5])[1];
if(C_truep(t6)){
t7=t5;
f_15696(2,t7,(C_word)C_i_set_car(((C_word*)t0)[4],((C_word*)((C_word*)t0)[5])[1]));}
else{
C_trace("ChickenBridge.scm: 368  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t5,lf[267],((C_word*)t0)[3]);}}
else{
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15711,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t6=(C_word)C_i_car(t2);
t7=(C_word)C_i_check_structure(t6,lf[260]);
t8=(C_word)C_i_block_ref(t6,C_fix(3));
t9=(C_word)C_eqp(((C_word*)t0)[3],t8);
if(C_truep(t9)){
t10=(C_word)C_i_car(t2);
t11=C_mutate(((C_word *)((C_word*)t0)[5])+1,t10);
t12=t5;
f_15711(t12,t11);}
else{
t10=t5;
f_15711(t10,C_SCHEME_UNDEFINED);}}}

/* k15709 in do2014 in k15679 in k15650 in next-in-graph in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_15711(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_15686(t3,((C_word*)t0)[2],t2);}

/* k15694 in do2014 in k15679 in k15650 in next-in-graph in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_15696(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  graph-node-datum");
f_15067(((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* make-graph in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_15130(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+17)){
C_save_and_reclaim((void*)tr3r,(void*)f_15130r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_15130r(t0,t1,t2,t3);}}

static void C_ccall f_15130r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a=C_alloc(17);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15134,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15392,a[2]=t5,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t7=((C_word*)t4)[1];
t8=C_fix(1);
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15401,a[2]=t9,a[3]=((C_word)li198),tmp=(C_word)a,a+=4,tmp);
C_trace("map");
t11=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t11+1)))(4,t11,t6,t10,t7);}
else{
C_trace("ChickenBridge.scm: 368  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[266],((C_word*)t4)[1]);}}

/* parse-graph-item in make-graph in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_15401(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_15401,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15405,a[2]=t2,a[3]=t1,a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(t2))){
t4=t3;
f_15405(2,t4,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,lf[265],t2);}}

/* k15403 in parse-graph-item in make-graph in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_15405(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15405,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15410,a[2]=((C_word*)t0)[4],a[3]=((C_word)li197),tmp=(C_word)a,a+=4,tmp);
C_apply(4,0,((C_word*)t0)[3],t2,((C_word*)t0)[2]);}

/* a15409 in k15403 in parse-graph-item in make-graph in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_15410(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+46)){
C_save_and_reclaim((void*)tr3r,(void*)f_15410r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_15410r(t0,t1,t2,t3);}}

static void C_ccall f_15410r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word *a=C_alloc(46);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=t3;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_FALSE;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_15414,a[2]=t11,a[3]=t15,a[4]=t9,a[5]=t3,a[6]=t13,a[7]=t7,a[8]=t5,a[9]=t2,a[10]=t1,a[11]=((C_word*)t0)[2],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t13)[1]))){
t17=t16;
f_15414(t17,C_SCHEME_UNDEFINED);}
else{
t17=(C_word)C_i_car(((C_word*)t13)[1]);
t18=(C_word)C_eqp(t17,lf[263]);
if(C_truep(t18)){
t19=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15552,a[2]=t3,a[3]=t16,a[4]=t13,a[5]=t15,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("error");
t20=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t20))(4,t20,t19,lf[19],lf[263]);}
else{
t20=t19;
f_15552(2,t20,C_SCHEME_UNDEFINED);}}
else{
t19=(C_word)C_eqp(t17,lf[264]);
if(C_truep(t19)){
t20=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15587,a[2]=t3,a[3]=t16,a[4]=t13,a[5]=t15,a[6]=t11,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("error");
t21=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t21))(4,t21,t20,lf[19],lf[264]);}
else{
t21=t20;
f_15587(2,t21,C_SCHEME_UNDEFINED);}}
else{
t20=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15616,a[2]=t16,a[3]=t9,a[4]=t5,a[5]=t13,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t15)[1])){
C_trace("error");
t21=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t21))(4,t21,t20,lf[10],t3);}
else{
t21=t20;
f_15616(2,t21,C_SCHEME_UNDEFINED);}}}}}

/* k15614 in a15409 in k15403 in parse-graph-item in make-graph in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_15616(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15616,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15623,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15631,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k15629 in k15614 in a15409 in k15403 in parse-graph-item in make-graph in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_15631(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_15623(2,t2,C_SCHEME_UNDEFINED);}}

/* k15621 in k15614 in a15409 in k15403 in parse-graph-item in make-graph in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_15623(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_15414(t5,t4);}

/* k15585 in a15409 in k15403 in parse-graph-item in make-graph in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_15587(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15587,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15591,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_15591(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k15589 in k15585 in a15409 in k15403 in parse-graph-item in make-graph in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_15591(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15414(t7,t6);}

/* k15550 in a15409 in k15403 in parse-graph-item in make-graph in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_15552(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15552,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15556,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_15556(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k15554 in k15550 in a15409 in k15403 in parse-graph-item in make-graph in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_15556(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15414(t7,t6);}

/* k15412 in a15409 in k15403 in parse-graph-item in make-graph in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_15414(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[31],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15414,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_15417,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_15417(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[263]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15452,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[263]);}
else{
t6=t5;
f_15452(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[264]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15487,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[264]);}
else{
t7=t6;
f_15487(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15516,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_15516(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k15514 in k15412 in a15409 in k15403 in parse-graph-item in make-graph in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_15516(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15516,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15523,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15531,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k15529 in k15514 in k15412 in a15409 in k15403 in parse-graph-item in make-graph in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_15531(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_15523(2,t2,C_SCHEME_UNDEFINED);}}

/* k15521 in k15514 in k15412 in a15409 in k15403 in parse-graph-item in make-graph in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_15523(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_15417(t5,t4);}

/* k15485 in k15412 in a15409 in k15403 in parse-graph-item in make-graph in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_15487(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15487,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15491,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_15491(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k15489 in k15485 in k15412 in a15409 in k15403 in parse-graph-item in make-graph in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_15491(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15417(t7,t6);}

/* k15450 in k15412 in a15409 in k15403 in parse-graph-item in make-graph in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_15452(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15452,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15456,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_15456(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k15454 in k15450 in k15412 in a15409 in k15403 in parse-graph-item in make-graph in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_15456(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15417(t7,t6);}

/* k15415 in k15412 in a15409 in k15403 in parse-graph-item in make-graph in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_15417(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15417,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15420,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_15420(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k15418 in k15415 in k15412 in a15409 in k15403 in parse-graph-item in make-graph in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_15420(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15420,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15423,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
t3=t2;
f_15423(t3,C_SCHEME_UNDEFINED);}
else{
t3=C_mutate(((C_word *)((C_word*)t0)[2])+1,((C_word*)((C_word*)t0)[6])[1]);
t4=t2;
f_15423(t4,t3);}}

/* k15421 in k15418 in k15415 in k15412 in a15409 in k15403 in parse-graph-item in make-graph in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_15423(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15423,NULL,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[6])[1],C_fix(1));
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=((C_word*)t0)[5];
t5=((C_word*)t0)[4];
t6=((C_word*)((C_word*)t0)[3])[1];
t7=((C_word*)((C_word*)t0)[2])[1];
t8=t4;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)C_a_i_record(&a,4,lf[260],t5,t6,t7));}

/* k15390 in make-graph in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_15392(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_15134(2,t3,t2);}

/* k15132 in make-graph in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_15134(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15134,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=((C_word*)t0)[4];
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_15137,a[2]=t9,a[3]=t13,a[4]=t7,a[5]=((C_word*)t0)[4],a[6]=t11,a[7]=t5,a[8]=t3,a[9]=((C_word*)t0)[2],a[10]=((C_word*)t0)[3],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t11)[1]))){
t15=t14;
f_15137(t15,C_SCHEME_UNDEFINED);}
else{
t15=(C_word)C_i_car(((C_word*)t11)[1]);
t16=(C_word)C_eqp(t15,lf[216]);
if(C_truep(t16)){
t17=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15297,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t7,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t7)[1])){
C_trace("ChickenBridge.scm: 368  error");
t18=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t18))(4,t18,t17,lf[19],lf[216]);}
else{
t18=t17;
f_15297(2,t18,C_SCHEME_UNDEFINED);}}
else{
t17=(C_word)C_eqp(t15,lf[217]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15332,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 368  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[19],lf[217]);}
else{
t19=t18;
f_15332(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15361,a[2]=t14,a[3]=t7,a[4]=t3,a[5]=t11,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 368  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[10],((C_word*)t0)[4]);}
else{
t19=t18;
f_15361(2,t19,C_SCHEME_UNDEFINED);}}}}}

/* k15359 in k15132 in make-graph in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_15361(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15361,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15368,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15376,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k15374 in k15359 in k15132 in make-graph in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_15376(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 368  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_15368(2,t2,C_SCHEME_UNDEFINED);}}

/* k15366 in k15359 in k15132 in make-graph in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_15368(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_15137(t5,t4);}

/* k15330 in k15132 in make-graph in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_15332(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15332,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15336,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_15336(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k15334 in k15330 in k15132 in make-graph in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_15336(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15137(t7,t6);}

/* k15295 in k15132 in make-graph in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_15297(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15297,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15301,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_15301(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k15299 in k15295 in k15132 in make-graph in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_15301(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15137(t7,t6);}

/* k15135 in k15132 in make-graph in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_15137(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15137,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15140,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_15140(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[216]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15197,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 368  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[216]);}
else{
t6=t5;
f_15197(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[217]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15232,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 368  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[217]);}
else{
t7=t6;
f_15232(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15261,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 368  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_15261(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k15259 in k15135 in k15132 in make-graph in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_15261(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15261,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15268,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15276,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k15274 in k15259 in k15135 in k15132 in make-graph in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_15276(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 368  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_15268(2,t2,C_SCHEME_UNDEFINED);}}

/* k15266 in k15259 in k15135 in k15132 in make-graph in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_15268(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_15140(t5,t4);}

/* k15230 in k15135 in k15132 in make-graph in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_15232(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15232,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15236,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_15236(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k15234 in k15230 in k15135 in k15132 in make-graph in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_15236(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15140(t7,t6);}

/* k15195 in k15135 in k15132 in make-graph in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_15197(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15197,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15201,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_15201(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k15199 in k15195 in k15135 in k15132 in make-graph in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_15201(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15140(t7,t6);}

/* k15138 in k15135 in k15132 in make-graph in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_15140(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15140,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15143,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_15143(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 368  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k15141 in k15138 in k15135 in k15132 in make-graph in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_15143(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15143,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15146,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 368  %alloc-pattern");
f_9514(t2);}

/* k15144 in k15141 in k15138 in k15135 in k15132 in make-graph in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_15146(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15146,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[5])[1]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15152,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_SCHEME_FALSE,((C_word*)((C_word*)t0)[5])[1]);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15158,a[2]=((C_word)li196),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 368  initialize-pattern");
f_9524(t3,t1,t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t2,C_retrieve2(lf[262],"next-in-graph"),t5);}

/* a15157 in k15144 in k15141 in k15138 in k15135 in k15132 in make-graph in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_15158(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_15158,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15164,a[2]=((C_word)li195),tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15176,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  pattern-data");
f_9243(t5,t3);}

/* k15174 in a15157 in k15144 in k15141 in k15138 in k15135 in k15132 in make-graph in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_15176(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(t1);
C_trace("for-each");
t3=*((C_word*)lf[214]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* a15163 in a15157 in k15144 in k15141 in k15138 in k15135 in k15132 in make-graph in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_15164(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_15164,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 368  graph-node-datum");
f_15067(t1,t2);}

/* k15150 in k15144 in k15141 in k15138 in k15135 in k15132 in make-graph in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_15152(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* graph-node-datum in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_15067(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15067,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[260]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* next-in-markov in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_14727(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_14727,3,t0,t1,t2);}
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14730,a[2]=t4,a[3]=((C_word)li189),tmp=(C_word)a,a+=4,tmp));
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14909,a[2]=t1,a[3]=t4,a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 368  pattern-data");
f_9243(t6,t2);}

/* k14907 in next-in-markov in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_14909(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14909,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14913,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 368  pattern-cache");
f_9459(t2,((C_word*)t0)[4]);}

/* k14911 in k14907 in next-in-markov in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_14913(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14913,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14915,a[2]=t3,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word)li192),tmp=(C_word)a,a+=6,tmp));
t5=((C_word*)t3)[1];
f_14915(t5,((C_word*)t0)[3],((C_word*)t0)[2],t1,C_SCHEME_FALSE);}

/* do1855 in k14911 in k14907 in next-in-markov in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_14915(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14915,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_nullp(t2);
t7=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_14925,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=((C_word*)t0)[4],a[6]=t3,a[7]=t1,a[8]=t5,tmp=(C_word)a,a+=9,tmp);
if(C_truep(t6)){
t8=t7;
f_14925(2,t8,t6);}
else{
t8=(C_word)C_i_nullp(t3);
if(C_truep(t8)){
t9=t7;
f_14925(2,t9,t8);}
else{
t9=(C_word)C_i_car(t2);
t10=(C_word)C_i_car(t9);
t11=t3;
t12=C_SCHEME_UNDEFINED;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_set_block_item(t13,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14840,a[2]=t13,a[3]=((C_word)li191),tmp=(C_word)a,a+=4,tmp));
t15=((C_word*)t13)[1];
f_14840(t15,t7,t10,t11,C_SCHEME_TRUE);}}}

/* do1840 in do1855 in k14911 in k14907 in next-in-markov in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_14840(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14840,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_nullp(t2);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14850,a[2]=((C_word*)t0)[2],a[3]=t3,a[4]=t2,a[5]=t5,a[6]=t1,tmp=(C_word)a,a+=7,tmp);
if(C_truep(t6)){
t8=t7;
f_14850(t8,t6);}
else{
t8=(C_word)C_i_nullp(t3);
t9=t7;
f_14850(t9,(C_truep(t8)?t8:(C_word)C_i_not(((C_word*)t5)[1])));}}

/* k14848 in do1840 in do1855 in k14911 in k14907 in next-in-markov in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_14850(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14850,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[6];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[5])[1]);}
else{
t2=(C_word)C_i_car(((C_word*)t0)[4]);
t3=(C_word)C_eqp(t2,lf[95]);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14857,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
if(C_truep(t3)){
t5=t4;
f_14857(t5,t3);}
else{
t5=(C_word)C_i_car(((C_word*)t0)[4]);
t6=(C_word)C_i_car(((C_word*)t0)[3]);
t7=(C_word)C_i_equalp(t5,t6);
if(C_truep(t7)){
t8=t4;
f_14857(t8,t7);}
else{
t8=(C_word)C_i_car(((C_word*)t0)[3]);
t9=t4;
f_14857(t9,(C_word)C_eqp(t8,lf[95]));}}}}

/* k14855 in k14848 in do1840 in do1855 in k14911 in k14907 in next-in-markov in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_14857(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[5]);
t4=(C_word)C_i_cdr(((C_word*)t0)[4]);
t5=((C_word*)((C_word*)t0)[3])[1];
f_14840(t5,((C_word*)t0)[2],t3,t4,((C_word*)((C_word*)t0)[6])[1]);}

/* k14923 in do1855 in k14911 in k14907 in next-in-markov in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_14925(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14925,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14928,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[4]))){
C_trace("ChickenBridge.scm: 368  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[258],((C_word*)t0)[6]);}
else{
t3=t2;
f_14928(2,t3,C_SCHEME_UNDEFINED);}}
else{
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[2])[1];
f_14915(t3,((C_word*)t0)[7],t2,((C_word*)t0)[6],((C_word*)((C_word*)t0)[8])[1]);}}

/* k14926 in k14923 in do1855 in k14911 in k14907 in next-in-markov in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_14928(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14928,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14932,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[3]);
t4=(C_word)C_i_cadr(t3);
t5=(C_word)C_i_car(((C_word*)t0)[3]);
t6=(C_word)C_i_cddr(t5);
C_trace("ChickenBridge.scm: 368  select-output");
t7=((C_word*)((C_word*)t0)[2])[1];
f_14730(t7,t2,t4,t6);}

/* k14930 in k14926 in k14923 in do1855 in k14911 in k14907 in next-in-markov in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_14932(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14932,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14935,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[3]))){
t4=t3;
f_14935(2,t4,C_SCHEME_UNDEFINED);}
else{
t4=(C_word)C_i_cdr(((C_word*)t0)[3]);
if(C_truep((C_word)C_i_nullp(t4))){
t5=t3;
f_14935(2,t5,(C_word)C_i_set_car(((C_word*)t0)[3],((C_word*)((C_word*)t0)[5])[1]));}
else{
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14952,a[2]=t6,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[3],a[6]=((C_word)li190),tmp=(C_word)a,a+=7,tmp));
t8=((C_word*)t6)[1];
f_14952(t8,t3,((C_word*)t0)[3]);}}}

/* do1864 in k14930 in k14926 in k14923 in do1855 in k14911 in k14907 in next-in-markov in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_14952(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a;
loop:
a=C_alloc(4);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_14952,NULL,3,t0,t1,t2);}
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_set_car(((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_i_set_cdr(t2,((C_word*)t0)[5]);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14968,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_cdr(((C_word*)t0)[5]);
C_trace("ChickenBridge.scm: 368  pattern-cache-set!");
f_9450(t6,((C_word*)t0)[3],t7);}
else{
t4=(C_word)C_i_cdr(t2);
t10=t1;
t11=t4;
t1=t10;
t2=t11;
goto loop;}}

/* k14966 in do1864 in k14930 in k14926 in k14923 in do1855 in k14911 in k14907 in next-in-markov in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_14968(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_set_cdr(t2,C_SCHEME_END_OF_LIST));}

/* k14933 in k14930 in k14926 in k14923 in do1855 in k14911 in k14907 in next-in-markov in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_14935(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* select-output in next-in-markov in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_14730(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14730,NULL,4,t0,t1,t2,t3);}
t4=t2;
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14798,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  tb:ranf");
f_6624(t5,t2);}
else{
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14742,a[2]=t6,a[3]=t3,a[4]=((C_word*)t0)[2],a[5]=((C_word)li188),tmp=(C_word)a,a+=6,tmp));
t8=((C_word*)t6)[1];
f_14742(t8,t1,t3,C_SCHEME_FALSE,C_fix(0));}}

/* do1824 in select-output in next-in-markov in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_14742(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14742,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 368  select-output");
t7=((C_word*)((C_word*)t0)[4])[1];
f_14730(t7,t1,((C_word*)t6)[1],((C_word*)t0)[3]);}
else{
t7=(C_word)C_i_car(t2);
t8=C_set_block_item(t5,0,t7);
t9=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14778,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,a[5]=t5,a[6]=t6,tmp=(C_word)a,a+=7,tmp);
t10=(C_word)C_i_caddr(((C_word*)t5)[1]);
if(C_truep((C_word)C_i_numberp(t10))){
t11=t9;
f_14778(2,t11,(C_word)C_i_caddr(((C_word*)t5)[1]));}
else{
t11=(C_word)C_i_caddr(((C_word*)t5)[1]);
C_trace("ChickenBridge.scm: 368  next-1");
f_9865(t9,t11);}}}

/* k14776 in do1824 in select-output in next-in-markov in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_14778(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14778,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[6])[1],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t5=(C_word)C_i_set_car(t4,((C_word*)((C_word*)t0)[6])[1]);
t6=(C_word)C_i_cdr(((C_word*)t0)[4]);
t7=((C_word*)((C_word*)t0)[3])[1];
f_14742(t7,((C_word*)t0)[2],t6,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[6])[1]);}

/* k14796 in select-output in next-in-markov in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_14798(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14798,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14803,a[2]=t3,a[3]=t1,a[4]=((C_word)li187),tmp=(C_word)a,a+=5,tmp));
t5=((C_word*)t3)[1];
f_14803(t5,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* do1834 in k14796 in select-output in next-in-markov in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_14803(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a;
loop:
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14803,NULL,3,t0,t1,t2);}
t3=(C_word)C_i_car(t2);
t4=(C_word)C_i_cadr(t3);
if(C_truep((C_word)C_i_lessp(((C_word*)t0)[3],t4))){
t5=(C_word)C_i_car(t2);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_i_car(t5));}
else{
t5=(C_word)C_i_cdr(t2);
t8=t1;
t9=t5;
t1=t8;
t2=t9;
goto loop;}}

/* make-markov in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_14240(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+22)){
C_save_and_reclaim((void*)tr3r,(void*)f_14240r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_14240r(t0,t1,t2,t3);}}

static void C_ccall f_14240r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a=C_alloc(22);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14244,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14721,a[2]=t5,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t7=((C_word*)t4)[1];
t8=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t9=C_SCHEME_UNDEFINED;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_set_block_item(t10,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14167,a[2]=t7,a[3]=t10,a[4]=t8,a[5]=((C_word)li185),tmp=(C_word)a,a+=6,tmp));
t12=((C_word*)t10)[1];
f_14167(t12,t6,t7,C_SCHEME_FALSE,t8,C_SCHEME_FALSE);}
else{
C_trace("ChickenBridge.scm: 368  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[257],((C_word*)t4)[1]);}}

/* do1725 in make-markov in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_14167(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14167,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,(C_word)C_i_cdr(((C_word*)t0)[4]));}
else{
t9=(C_word)C_i_car(t2);
t10=t9;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_14012,a[2]=((C_word*)t0)[2],a[3]=t6,a[4]=t1,a[5]=((C_word*)t0)[3],a[6]=t2,a[7]=t7,a[8]=t8,a[9]=t11,tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t11)[1]))){
t13=t12;
f_14012(2,t13,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 368  error");
t13=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t13))(4,t13,t12,lf[256],((C_word*)t11)[1]);}}}

/* k14010 in do1725 in make-markov in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_14012(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14012,2,t0,t1);}
t2=(C_word)C_i_member(lf[252],((C_word*)((C_word*)t0)[9])[1]);
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_14018,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
if(C_truep(t2)){
t4=t3;
f_14018(2,t4,t2);}
else{
t4=(C_word)C_i_member(lf[254],((C_word*)((C_word*)t0)[9])[1]);
if(C_truep(t4)){
t5=t3;
f_14018(2,t5,t4);}
else{
C_trace("ChickenBridge.scm: 368  error");
t5=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,lf[255],((C_word*)((C_word*)t0)[9])[1]);}}}

/* k14016 in k14010 in do1725 in make-markov in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_14018(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[37],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14018,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_END_OF_LIST;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_fix(0);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_END_OF_LIST;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t11=t10;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_14030,a[2]=t3,a[3]=t9,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=t5,a[12]=t7,tmp=(C_word)a,a+=13,tmp);
t14=C_SCHEME_UNDEFINED;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_set_block_item(t15,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_14103,a[2]=t15,a[3]=t12,a[4]=t5,a[5]=t10,a[6]=t3,a[7]=((C_word*)t0)[2],a[8]=((C_word)li184),tmp=(C_word)a,a+=9,tmp));
t17=((C_word*)t15)[1];
f_14103(t17,t13);}

/* do1703 in k14016 in k14010 in do1725 in make-markov in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_14103(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word *a;
loop:
a=C_alloc(3);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_14103,NULL,2,t0,t1);}
t2=(C_word)C_eqp(((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[6])[1]);
if(C_truep(t2)){
t3=(C_word)C_i_cdr(((C_word*)t0)[5]);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[6])+1,t5);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,t6);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_a_i_list(&a,1,t3);
t5=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[3])[1],t4);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[3])+1,t6);
t8=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t9=C_mutate(((C_word *)((C_word*)t0)[7])+1,t8);
t15=t1;
t1=t15;
goto loop;}}

/* k14028 in k14016 in k14010 in do1725 in make-markov in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_14030(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14030,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_14033,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[12],tmp=(C_word)a,a+=12,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14046,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[12],a[4]=((C_word)li183),tmp=(C_word)a,a+=5,tmp);
C_trace("for-each");
t4=*((C_word*)lf[214]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,t2,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* a14045 in k14028 in k14016 in k14010 in do1725 in make-markov in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_14046(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[14],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_14046,3,t0,t1,t2);}
t3=C_SCHEME_FALSE;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14050,a[2]=t8,a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t6,a[6]=((C_word*)t0)[3],a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_pairp(t2))){
t10=(C_word)C_i_car(t2);
t11=C_set_block_item(t4,0,t10);
t12=(C_word)C_i_cdr(t2);
t13=(C_word)C_i_nullp(t12);
t14=(C_truep(t13)?C_fix(1):(C_word)C_i_cadr(t2));
t15=C_set_block_item(t8,0,t14);
t16=C_set_block_item(t6,0,((C_word*)t8)[1]);
if(C_truep((C_word)C_i_numberp(((C_word*)t8)[1]))){
t17=t9;
f_14050(t17,C_SCHEME_UNDEFINED);}
else{
t17=C_set_block_item(t8,0,C_SCHEME_FALSE);
t18=t9;
f_14050(t18,t17);}}
else{
t10=C_set_block_item(t4,0,t2);
t11=C_set_block_item(t8,0,C_fix(1));
t12=C_set_block_item(t6,0,C_fix(1));
t13=t9;
f_14050(t13,t12);}}

/* k14048 in a14045 in k14028 in k14016 in k14010 in do1725 in make-markov in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_14050(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14050,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14053,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_truep(((C_word*)((C_word*)t0)[2])[1])?((C_word*)((C_word*)t0)[6])[1]:C_SCHEME_FALSE);
if(C_truep(t3)){
t4=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[2])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[6])+1,t4);
t6=t2;
f_14053(t6,t5);}
else{
t4=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_FALSE);
t5=t2;
f_14053(t5,t4);}}

/* k14051 in k14048 in a14045 in k14028 in k14016 in k14010 in do1725 in make-markov in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_14053(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14053,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_a_i_cons(&a,2,t2,((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,t4);}

/* k14031 in k14028 in k14016 in k14010 in do1725 in make-markov in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_14033(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14033,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_14044,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 368  reverse");
t3=*((C_word*)lf[164]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k14042 in k14031 in k14028 in k14016 in k14010 in do1725 in make-markov in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_14044(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14044,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[10])[1],t1);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[9])[1],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[8])+1,t3);
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14184,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
t6=((C_word*)((C_word*)t0)[3])[1];
if(C_truep(t6)){
t7=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t8=(C_word)C_i_length(t7);
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[3])[1],t8))){
t9=t5;
f_14184(2,t9,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 368  error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t5,lf[253],((C_word*)t0)[2]);}}
else{
t7=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t8=(C_word)C_i_length(t7);
t9=C_mutate(((C_word *)((C_word*)t0)[3])+1,t8);
t10=t5;
f_14184(2,t10,t9);}}

/* k14182 in k14042 in k14031 in k14028 in k14016 in k14010 in do1725 in make-markov in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_14184(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14184,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[7])[1]);
t3=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[6])[1],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[6])+1,t4);
t6=(C_word)C_i_cdr(((C_word*)t0)[5]);
t7=((C_word*)((C_word*)t0)[4])[1];
f_14167(t7,((C_word*)t0)[3],t6,((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[7])[1]);}

/* k14719 in make-markov in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_14721(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_14244(2,t3,t2);}

/* k14242 in make-markov in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_14244(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word ab[59],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14244,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=((C_word*)t0)[4];
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_14247,a[2]=t13,a[3]=t11,a[4]=t17,a[5]=t9,a[6]=((C_word*)t0)[4],a[7]=t15,a[8]=t5,a[9]=t3,a[10]=t7,a[11]=((C_word*)t0)[2],a[12]=((C_word*)t0)[3],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t15)[1]))){
t19=t18;
f_14247(t19,C_SCHEME_UNDEFINED);}
else{
t19=(C_word)C_i_car(((C_word*)t15)[1]);
t20=(C_word)C_eqp(t19,lf[216]);
if(C_truep(t20)){
t21=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14591,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t9,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 368  error");
t22=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t22))(4,t22,t21,lf[19],lf[216]);}
else{
t22=t21;
f_14591(2,t22,C_SCHEME_UNDEFINED);}}
else{
t21=(C_word)C_eqp(t19,lf[217]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14626,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t11,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("ChickenBridge.scm: 368  error");
t23=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[19],lf[217]);}
else{
t23=t22;
f_14626(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t19,lf[251]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14661,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t13,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 368  error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[19],lf[251]);}
else{
t24=t23;
f_14661(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14690,a[2]=t18,a[3]=t9,a[4]=t3,a[5]=t15,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t17)[1])){
C_trace("ChickenBridge.scm: 368  error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[10],((C_word*)t0)[4]);}
else{
t24=t23;
f_14690(2,t24,C_SCHEME_UNDEFINED);}}}}}}

/* k14688 in k14242 in make-markov in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_14690(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14690,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14697,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14705,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k14703 in k14688 in k14242 in make-markov in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_14705(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 368  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_14697(2,t2,C_SCHEME_UNDEFINED);}}

/* k14695 in k14688 in k14242 in make-markov in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_14697(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_14247(t5,t4);}

/* k14659 in k14242 in make-markov in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_14661(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14661,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14665,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_14665(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14663 in k14659 in k14242 in make-markov in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_14665(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_14247(t7,t6);}

/* k14624 in k14242 in make-markov in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_14626(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14626,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14630,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_14630(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14628 in k14624 in k14242 in make-markov in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_14630(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_14247(t7,t6);}

/* k14589 in k14242 in make-markov in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_14591(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14591,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14595,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_14595(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14593 in k14589 in k14242 in make-markov in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_14595(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_14247(t7,t6);}

/* k14245 in k14242 in make-markov in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_14247(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[43],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14247,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_14250,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_14250(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[216]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14456,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 368  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[216]);}
else{
t6=t5;
f_14456(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[217]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14491,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 368  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[217]);}
else{
t7=t6;
f_14491(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[251]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14526,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 368  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[251]);}
else{
t8=t7;
f_14526(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14555,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 368  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_14555(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k14553 in k14245 in k14242 in make-markov in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_14555(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14555,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14562,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14570,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k14568 in k14553 in k14245 in k14242 in make-markov in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_14570(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 368  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_14562(2,t2,C_SCHEME_UNDEFINED);}}

/* k14560 in k14553 in k14245 in k14242 in make-markov in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_14562(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_14250(t5,t4);}

/* k14524 in k14245 in k14242 in make-markov in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_14526(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14526,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14530,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_14530(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14528 in k14524 in k14245 in k14242 in make-markov in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_14530(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_14250(t7,t6);}

/* k14489 in k14245 in k14242 in make-markov in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_14491(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14491,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14495,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_14495(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14493 in k14489 in k14245 in k14242 in make-markov in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_14495(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_14250(t7,t6);}

/* k14454 in k14245 in k14242 in make-markov in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_14456(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14456,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14460,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_14460(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14458 in k14454 in k14245 in k14242 in make-markov in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_14460(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_14250(t7,t6);}

/* k14248 in k14245 in k14242 in make-markov in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_14250(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14250,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_14253,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[12],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_14253(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[216]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14321,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 368  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[216]);}
else{
t6=t5;
f_14321(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[217]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14356,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 368  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[217]);}
else{
t7=t6;
f_14356(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[251]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14391,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 368  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[251]);}
else{
t8=t7;
f_14391(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14420,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 368  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_14420(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k14418 in k14248 in k14245 in k14242 in make-markov in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_14420(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14420,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14427,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14435,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k14433 in k14418 in k14248 in k14245 in k14242 in make-markov in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_14435(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 368  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_14427(2,t2,C_SCHEME_UNDEFINED);}}

/* k14425 in k14418 in k14248 in k14245 in k14242 in make-markov in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_14427(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_14253(t5,t4);}

/* k14389 in k14248 in k14245 in k14242 in make-markov in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_14391(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14391,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14395,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_14395(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14393 in k14389 in k14248 in k14245 in k14242 in make-markov in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_14395(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_14253(t7,t6);}

/* k14354 in k14248 in k14245 in k14242 in make-markov in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_14356(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14356,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14360,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_14360(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14358 in k14354 in k14248 in k14245 in k14242 in make-markov in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_14360(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_14253(t7,t6);}

/* k14319 in k14248 in k14245 in k14242 in make-markov in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_14321(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14321,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14325,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_14325(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14323 in k14319 in k14248 in k14245 in k14242 in make-markov in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_14325(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_14253(t7,t6);}

/* k14251 in k14248 in k14245 in k14242 in make-markov in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_14253(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14253,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14256,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_14256(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 368  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k14254 in k14251 in k14248 in k14245 in k14242 in make-markov in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_14256(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14256,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14259,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 368  %alloc-pattern");
f_9514(t2);}

/* k14257 in k14254 in k14251 in k14248 in k14245 in k14242 in make-markov in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_14259(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14259,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[6])[1]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14265,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[4],a[4]=t1,a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14292,a[2]=((C_word)li182),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 368  initialize-pattern");
f_9524(t3,t1,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t2,C_retrieve2(lf[250],"next-in-markov"),t4);}

/* a14291 in k14257 in k14254 in k14251 in k14248 in k14245 in k14242 in make-markov in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_14292(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_14292,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14300,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  pattern-data");
f_9243(t4,t3);}

/* k14298 in a14291 in k14257 in k14254 in k14251 in k14248 in k14245 in k14242 in make-markov in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_14300(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("for-each");
t2=*((C_word*)lf[214]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k14263 in k14257 in k14254 in k14251 in k14248 in k14245 in k14242 in make-markov in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_14265(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14265,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14268,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_14268(t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14278,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t5=(C_word)C_i_car(t4);
t6=(C_word)C_i_length(t5);
C_trace("ChickenBridge.scm: 368  make-list");
t7=C_retrieve(lf[61]);
((C_proc4)C_retrieve_proc(t7))(4,t7,t3,t6,lf[95]);}}

/* k14276 in k14263 in k14257 in k14254 in k14251 in k14248 in k14245 in k14242 in make-markov in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_14278(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_14268(t3,t2);}

/* k14266 in k14263 in k14257 in k14254 in k14251 in k14248 in k14245 in k14242 in make-markov in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_14268(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14268,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14271,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  pattern-cache-set!");
f_9450(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k14269 in k14266 in k14263 in k14257 in k14254 in k14251 in k14248 in k14245 in k14242 in make-markov in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_14271(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* next-in-weighting in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_13807(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_13807,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13811,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  pattern-data");
f_9243(t3,t2);}

/* k13809 in next-in-weighting in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_13811(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13811,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13814,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 368  pattern-period");
f_9297(t2,((C_word*)t0)[2]);}

/* k13812 in k13809 in next-in-weighting in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_13814(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13814,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13817,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 368  pattern-flags");
f_9225(t2,((C_word*)t0)[2]);}

/* k13815 in k13812 in k13809 in next-in-weighting in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_13817(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13817,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13823,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[5],a[4]=t2,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13986,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t3,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 368  bitwise-test");
f_6440(t4,t1,C_fix(4));}

/* k13984 in k13815 in k13812 in k13809 in next-in-weighting in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_13986(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13986,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_13823(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13999,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 368  period-count");
f_9075(t2,((C_word*)t0)[2]);}}

/* k13997 in k13984 in k13815 in k13812 in k13809 in next-in-weighting in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_13999(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13999,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14003,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 368  period-length");
f_9093(t2,((C_word*)t0)[2]);}

/* k14001 in k13997 in k13984 in k13815 in k13812 in k13809 in next-in-weighting in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_14003(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep((C_word)C_i_nequalp(((C_word*)t0)[4],t1))){
C_trace("ChickenBridge.scm: 368  recalc-weightings");
f_13695(((C_word*)t0)[3],((C_word*)t0)[2],C_SCHEME_FALSE);}
else{
t2=((C_word*)t0)[3];
f_13823(2,t2,C_SCHEME_UNDEFINED);}}

/* k13821 in k13815 in k13812 in k13809 in next-in-weighting in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_13823(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13823,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13829,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[4]))){
t3=t2;
f_13829(t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13960,a[2]=((C_word*)t0)[4],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13979,a[2]=((C_word*)t0)[4],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  random-item-count");
f_12845(t4,((C_word*)t0)[4]);}}

/* k13977 in k13821 in k13815 in k13812 in k13809 in next-in-weighting in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_13979(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13979,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,C_fix(1),t1);
C_trace("ChickenBridge.scm: 368  random-item-count-set!");
f_12836(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k13958 in k13821 in k13815 in k13812 in k13809 in next-in-weighting in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_13960(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13960,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13967,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  random-item-count");
f_12845(t2,((C_word*)t0)[2]);}

/* k13965 in k13958 in k13821 in k13815 in k13812 in k13809 in next-in-weighting in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_13967(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13967,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13971,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  random-item-min");
f_12809(t2,((C_word*)t0)[2]);}

/* k13969 in k13965 in k13958 in k13821 in k13815 in k13812 in k13809 in next-in-weighting in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_13971(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_13829(t2,(C_word)C_i_lessp(((C_word*)t0)[2],t1));}

/* k13827 in k13821 in k13815 in k13812 in k13809 in next-in-weighting in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_13829(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13829,NULL,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 368  random-item-datum");
f_12755(((C_word*)t0)[5],((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13835,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 368  pattern-cache");
f_9459(t2,((C_word*)t0)[2]);}}

/* k13833 in k13827 in k13821 in k13815 in k13812 in k13809 in next-in-weighting in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_13835(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13835,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)t0)[4]);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13839,a[2]=((C_word)li178),tmp=(C_word)a,a+=3,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13877,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t5,a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13919,a[2]=t6,a[3]=t5,a[4]=t1,a[5]=t2,a[6]=t3,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 368  pick");
f_13839(t7,t2,t1);}

/* k13917 in k13833 in k13827 in k13821 in k13815 in k13812 in k13809 in next-in-weighting in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_13919(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13919,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13921,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=t3,a[7]=((C_word)li180),tmp=(C_word)a,a+=8,tmp));
t5=((C_word*)t3)[1];
f_13921(t5,((C_word*)t0)[2],t1);}

/* do1677 in k13917 in k13833 in k13827 in k13821 in k13815 in k13812 in k13809 in next-in-weighting in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_13921(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13921,NULL,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_13940,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=t1,a[8]=((C_word*)t0)[6],tmp=(C_word)a,a+=9,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13943,a[2]=t2,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  random-item-max");
f_12827(t4,t2);}

/* k13941 in do1677 in k13917 in k13833 in k13827 in k13821 in k13815 in k13812 in k13809 in next-in-weighting in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_13943(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13943,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13950,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  random-item-count");
f_12845(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_13940(t2,C_SCHEME_FALSE);}}

/* k13948 in k13941 in do1677 in k13917 in k13833 in k13827 in k13821 in k13815 in k13812 in k13809 in next-in-weighting in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_13950(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13950,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13954,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  random-item-max");
f_12827(t2,((C_word*)t0)[2]);}

/* k13952 in k13948 in k13941 in do1677 in k13917 in k13833 in k13827 in k13821 in k13815 in k13812 in k13809 in next-in-weighting in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_13954(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_13940(t2,(C_word)C_i_nequalp(((C_word*)t0)[2],t1));}

/* k13938 in do1677 in k13917 in k13833 in k13827 in k13821 in k13815 in k13812 in k13809 in next-in-weighting in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_13940(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13940,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13936,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  pick");
f_13839(t2,((C_word*)t0)[5],((C_word*)t0)[4]);}
else{
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,((C_word*)t0)[2]);
t3=((C_word*)t0)[7];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}}

/* k13934 in k13938 in do1677 in k13917 in k13833 in k13827 in k13821 in k13815 in k13812 in k13809 in next-in-weighting in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_13936(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[3])[1];
f_13921(t2,((C_word*)t0)[2],t1);}

/* k13875 in k13833 in k13827 in k13821 in k13815 in k13812 in k13809 in next-in-weighting in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_13877(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13877,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13880,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[3]);
if(C_truep(t3)){
t4=t2;
f_13880(2,t4,C_SCHEME_UNDEFINED);}
else{
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13894,a[2]=t5,a[3]=((C_word)li179),tmp=(C_word)a,a+=4,tmp));
t7=((C_word*)t5)[1];
f_13894(t7,t2,((C_word*)t0)[2]);}}

/* do1681 in k13875 in k13833 in k13827 in k13821 in k13815 in k13812 in k13809 in next-in-weighting in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_13894(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13894,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13904,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 368  random-item-count-set!");
f_12836(t3,t4,C_fix(0));}}

/* k13902 in do1681 in k13875 in k13833 in k13827 in k13821 in k13815 in k13812 in k13809 in next-in-weighting in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_13904(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_13894(t3,((C_word*)t0)[2],t2);}

/* k13878 in k13875 in k13833 in k13827 in k13821 in k13815 in k13812 in k13809 in next-in-weighting in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_13880(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_set_cdr(((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 368  random-item-datum");
f_12755(((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}

/* pick in k13833 in k13827 in k13821 in k13815 in k13812 in k13809 in next-in-weighting in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_13839(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13839,NULL,3,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13847,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  tb:ranf");
f_6624(t4,t3);}

/* k13845 in pick in k13833 in k13827 in k13821 in k13815 in k13812 in k13809 in next-in-weighting in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_13847(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13847,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13849,a[2]=t3,a[3]=((C_word)li177),tmp=(C_word)a,a+=4,tmp));
t5=((C_word*)t3)[1];
f_13849(t5,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* do1672 in k13845 in pick in k13833 in k13827 in k13821 in k13815 in k13812 in k13809 in next-in-weighting in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_13849(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13849,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13870,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=t1,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 368  random-item-index");
f_12773(t4,t5);}

/* k13868 in do1672 in k13845 in pick in k13833 in k13827 in k13821 in k13815 in k13812 in k13809 in next-in-weighting in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_13870(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep((C_word)C_i_lessp(((C_word*)t0)[5],t1))){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_car(((C_word*)t0)[3]));}
else{
t2=(C_word)C_i_cdr(((C_word*)t0)[3]);
t3=((C_word*)((C_word*)t0)[2])[1];
f_13849(t3,((C_word*)t0)[4],t2,((C_word*)t0)[5]);}}

/* recalc-weightings in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_13695(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13695,NULL,3,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13805,a[2]=t1,a[3]=t2,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 368  pattern-data");
f_9243(t4,t2);}

/* k13803 in recalc-weightings in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_13805(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13805,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=lf[248];
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13702,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=t4,a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13764,a[2]=t7,a[3]=t4,a[4]=((C_word)li175),tmp=(C_word)a,a+=5,tmp));
t9=((C_word*)t7)[1];
f_13764(t9,t5,t2);}

/* do1644 in k13803 in recalc-weightings in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_13764(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13764,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13793,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13797,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 368  random-item-weight");
f_12791(t4,t5);}}

/* k13795 in do1644 in k13803 in recalc-weightings in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_13797(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  next-1");
f_9865(((C_word*)t0)[2],t1);}

/* k13791 in do1644 in k13803 in recalc-weightings in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_13793(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13793,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[5])[1],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13778,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 368  random-item-index-set!");
f_12764(t4,t5,((C_word*)((C_word*)t0)[5])[1]);}

/* k13776 in k13791 in do1644 in k13803 in recalc-weightings in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_13778(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_13764(t3,((C_word*)t0)[2],t2);}

/* k13700 in k13803 in recalc-weightings in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_13702(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13702,2,t0,t1);}
if(C_truep(((C_word*)t0)[6])){
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13710,a[2]=((C_word*)t0)[4],a[3]=t3,a[4]=((C_word*)t0)[5],a[5]=((C_word)li174),tmp=(C_word)a,a+=6,tmp));
t5=((C_word*)t3)[1];
f_13710(t5,((C_word*)t0)[3],((C_word*)t0)[2],C_fix(0),C_fix(0));}
else{
C_trace("ChickenBridge.scm: 368  pattern-cache-set!");
f_9450(((C_word*)t0)[3],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);}}

/* do1650 in k13700 in k13803 in recalc-weightings in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_13710(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13710,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 368  pattern-cache-set!");
f_9450(t1,((C_word*)t0)[4],((C_word*)t6)[1]);}
else{
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13743,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=t6,a[6]=t5,tmp=(C_word)a,a+=7,tmp);
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13755,a[2]=t7,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t9=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 368  random-item-index");
f_12773(t8,t9);}}

/* k13753 in do1650 in k13700 in k13803 in recalc-weightings in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_13755(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13755,2,t0,t1);}
t2=(C_word)C_a_i_divide(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=(C_word)C_a_i_times(&a,2,t2,C_fix(1073741823));
C_trace("ChickenBridge.scm: 368  floor");
t4=*((C_word*)lf[149]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,((C_word*)t0)[2],t3);}

/* k13741 in do1650 in k13700 in k13803 in recalc-weightings in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_13743(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13743,2,t0,t1);}
t2=(C_word)C_i_inexact_to_exact(t1);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13727,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
t5=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 368  random-item-index-set!");
f_12764(t4,t5,((C_word*)((C_word*)t0)[6])[1]);}

/* k13725 in k13741 in do1650 in k13700 in k13803 in recalc-weightings in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_13727(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_13710(t4,((C_word*)t0)[2],t3,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[6])[1]);}

/* make-weighting in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_12928(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+7)){
C_save_and_reclaim((void*)tr3r,(void*)f_12928r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_12928r(t0,t1,t2,t3);}}

static void C_ccall f_12928r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a=C_alloc(7);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12932,a[2]=t1,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13245,a[2]=((C_word)li172),tmp=(C_word)a,a+=3,tmp);
C_trace("map");
t6=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t6+1)))(4,t6,t4,t5,t2);}

/* %make-random-item in make-weighting in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_13245(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[9],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_13245,3,t0,t1,t2);}
t3=C_SCHEME_FALSE;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_END_OF_LIST;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13252,a[2]=t4,a[3]=t1,a[4]=t6,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(t2))){
t8=(C_word)C_i_car(t2);
t9=C_set_block_item(t4,0,t8);
t10=(C_word)C_i_cdr(t2);
t11=C_set_block_item(t6,0,t10);
t12=t7;
f_13252(t12,t11);}
else{
t8=C_set_block_item(t4,0,t2);
t9=t7;
f_13252(t9,t8);}}

/* k13250 in %make-random-item in make-weighting in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_13252(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word ab[59],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13252,NULL,2,t0,t1);}
t2=C_fix(1);
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_fix(1);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=((C_word*)((C_word*)t0)[4])[1];
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_13255,a[2]=t13,a[3]=t11,a[4]=t17,a[5]=t9,a[6]=((C_word*)t0)[4],a[7]=t15,a[8]=t7,a[9]=t5,a[10]=t3,a[11]=((C_word*)t0)[2],a[12]=((C_word*)t0)[3],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t15)[1]))){
t19=t18;
f_13255(t19,C_SCHEME_UNDEFINED);}
else{
t19=(C_word)C_i_car(((C_word*)t15)[1]);
t20=(C_word)C_eqp(t19,lf[245]);
if(C_truep(t20)){
t21=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13558,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t9,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 368  error");
t22=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t22))(4,t22,t21,lf[19],lf[245]);}
else{
t22=t21;
f_13558(2,t22,C_SCHEME_UNDEFINED);}}
else{
t21=(C_word)C_eqp(t19,lf[246]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13593,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t11,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("ChickenBridge.scm: 368  error");
t23=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[19],lf[246]);}
else{
t23=t22;
f_13593(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t19,lf[247]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13628,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t13,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 368  error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[19],lf[247]);}
else{
t24=t23;
f_13628(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13657,a[2]=t18,a[3]=t9,a[4]=t3,a[5]=t15,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t17)[1])){
C_trace("ChickenBridge.scm: 368  error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[10],((C_word*)((C_word*)t0)[4])[1]);}
else{
t24=t23;
f_13657(2,t24,C_SCHEME_UNDEFINED);}}}}}}

/* k13655 in k13250 in %make-random-item in make-weighting in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_13657(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13657,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13664,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13672,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k13670 in k13655 in k13250 in %make-random-item in make-weighting in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_13672(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 368  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_13664(2,t2,C_SCHEME_UNDEFINED);}}

/* k13662 in k13655 in k13250 in %make-random-item in make-weighting in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_13664(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_13255(t5,t4);}

/* k13626 in k13250 in %make-random-item in make-weighting in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_13628(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13628,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13632,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_13632(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13630 in k13626 in k13250 in %make-random-item in make-weighting in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_13632(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_13255(t7,t6);}

/* k13591 in k13250 in %make-random-item in make-weighting in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_13593(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13593,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13597,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_13597(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13595 in k13591 in k13250 in %make-random-item in make-weighting in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_13597(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_13255(t7,t6);}

/* k13556 in k13250 in %make-random-item in make-weighting in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_13558(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13558,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13562,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_13562(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13560 in k13556 in k13250 in %make-random-item in make-weighting in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_13562(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_13255(t7,t6);}

/* k13253 in k13250 in %make-random-item in make-weighting in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_13255(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[43],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13255,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_13258,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_13258(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[245]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13423,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 368  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[245]);}
else{
t6=t5;
f_13423(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[246]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13458,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 368  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[246]);}
else{
t7=t6;
f_13458(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[247]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13493,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 368  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[247]);}
else{
t8=t7;
f_13493(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13522,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 368  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)((C_word*)t0)[6])[1]);}
else{
t8=t7;
f_13522(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k13520 in k13253 in k13250 in %make-random-item in make-weighting in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_13522(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13522,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13529,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13537,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k13535 in k13520 in k13253 in k13250 in %make-random-item in make-weighting in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_13537(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 368  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_13529(2,t2,C_SCHEME_UNDEFINED);}}

/* k13527 in k13520 in k13253 in k13250 in %make-random-item in make-weighting in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_13529(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_13258(t5,t4);}

/* k13491 in k13253 in k13250 in %make-random-item in make-weighting in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_13493(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13493,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13497,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_13497(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13495 in k13491 in k13253 in k13250 in %make-random-item in make-weighting in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_13497(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_13258(t7,t6);}

/* k13456 in k13253 in k13250 in %make-random-item in make-weighting in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_13458(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13458,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13462,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_13462(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13460 in k13456 in k13253 in k13250 in %make-random-item in make-weighting in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_13462(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_13258(t7,t6);}

/* k13421 in k13253 in k13250 in %make-random-item in make-weighting in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_13423(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13423,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13427,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_13427(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13425 in k13421 in k13253 in k13250 in %make-random-item in make-weighting in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_13427(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_13258(t7,t6);}

/* k13256 in k13253 in k13250 in %make-random-item in make-weighting in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_13258(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13258,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_13261,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[12],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_13261(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[245]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13288,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 368  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[245]);}
else{
t6=t5;
f_13288(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[246]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13323,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 368  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[246]);}
else{
t7=t6;
f_13323(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[247]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13358,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 368  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[247]);}
else{
t8=t7;
f_13358(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13387,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 368  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)((C_word*)t0)[6])[1]);}
else{
t8=t7;
f_13387(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k13385 in k13256 in k13253 in k13250 in %make-random-item in make-weighting in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_13387(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13387,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13394,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13402,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k13400 in k13385 in k13256 in k13253 in k13250 in %make-random-item in make-weighting in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_13402(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 368  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_13394(2,t2,C_SCHEME_UNDEFINED);}}

/* k13392 in k13385 in k13256 in k13253 in k13250 in %make-random-item in make-weighting in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_13394(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_13261(t5,t4);}

/* k13356 in k13256 in k13253 in k13250 in %make-random-item in make-weighting in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_13358(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13358,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13362,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_13362(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13360 in k13356 in k13256 in k13253 in k13250 in %make-random-item in make-weighting in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_13362(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_13261(t7,t6);}

/* k13321 in k13256 in k13253 in k13250 in %make-random-item in make-weighting in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_13323(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13323,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13327,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_13327(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13325 in k13321 in k13256 in k13253 in k13250 in %make-random-item in make-weighting in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_13327(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_13261(t7,t6);}

/* k13286 in k13256 in k13253 in k13250 in %make-random-item in make-weighting in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_13288(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13288,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13292,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_13292(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13290 in k13286 in k13256 in k13253 in k13250 in %make-random-item in make-weighting in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_13292(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_13261(t7,t6);}

/* k13259 in k13256 in k13253 in k13250 in %make-random-item in make-weighting in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_13261(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13261,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13264,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_13264(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 368  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)((C_word*)t0)[2])[1]);}}

/* k13262 in k13259 in k13256 in k13253 in k13250 in %make-random-item in make-weighting in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_13264(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13264,2,t0,t1);}
t2=((C_word*)t0)[6];
t3=((C_word*)((C_word*)t0)[5])[1];
t4=((C_word*)((C_word*)t0)[4])[1];
t5=((C_word*)((C_word*)t0)[3])[1];
t6=((C_word*)((C_word*)t0)[2])[1];
t7=t2;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_a_i_record(&a,9,lf[234],t3,C_SCHEME_FALSE,t4,t5,t6,C_fix(0),C_SCHEME_FALSE,C_SCHEME_FALSE));}

/* k12930 in make-weighting in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_12932(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12932,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12935,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 368  %alloc-pattern");
f_9514(t2);}

/* k12933 in k12930 in make-weighting in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_12935(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12935,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)t0)[4]);
t3=C_SCHEME_FALSE;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_TRUE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_fix(0);
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_12941,a[2]=t10,a[3]=((C_word*)t0)[4],a[4]=t6,a[5]=t1,a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[3],a[8]=t4,a[9]=t2,a[10]=t8,tmp=(C_word)a,a+=11,tmp);
t12=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13209,a[2]=t8,a[3]=t6,a[4]=((C_word)li171),tmp=(C_word)a,a+=5,tmp);
C_trace("for-each");
t13=*((C_word*)lf[214]+1);
((C_proc4)(void*)(*((C_word*)t13+1)))(4,t13,t11,t12,((C_word*)t0)[4]);}

/* a13208 in k12933 in k12930 in make-weighting in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_13209(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_13209,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13213,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 368  random-item-min");
f_12809(t3,t2);}

/* k13211 in a13208 in k12933 in k12930 in make-weighting in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_13213(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13213,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13216,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 368  random-item-max");
f_12827(t2,((C_word*)t0)[2]);}

/* k13214 in k13211 in a13208 in k12933 in k12930 in make-weighting in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_13216(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13216,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13219,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 368  random-item-weight");
f_12791(t2,((C_word*)t0)[2]);}

/* k13217 in k13214 in k13211 in a13208 in k12933 in k12930 in make-weighting in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_13219(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13219,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13222,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 368  random-item-datum");
f_12755(t2,((C_word*)t0)[2]);}

/* k13220 in k13217 in k13214 in k13211 in a13208 in k12933 in k12930 in make-weighting in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_13222(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13222,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13225,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13235,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  pattern?");
f_9210(t3,t1);}

/* k13233 in k13220 in k13217 in k13214 in k13211 in a13208 in k12933 in k12930 in make-weighting in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_13235(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13235,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(1));
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_13225(t4,t3);}
else{
t2=((C_word*)t0)[2];
f_13225(t2,C_SCHEME_UNDEFINED);}}

/* k13223 in k13220 in k13217 in k13214 in k13211 in a13208 in k12933 in k12930 in make-weighting in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_13225(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep((C_word)C_i_numberp(((C_word*)t0)[4]))){
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=C_set_block_item(((C_word*)t0)[2],0,C_SCHEME_FALSE);
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}}

/* k12939 in k12933 in k12930 in make-weighting in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_12941(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12941,2,t0,t1);}
t2=(C_word)C_i_nequalp(((C_word*)((C_word*)t0)[10])[1],((C_word*)t0)[9]);
t3=(C_truep(t2)?C_fix(1):((C_word*)t0)[9]);
t4=C_mutate(((C_word *)((C_word*)t0)[8])+1,t3);
t5=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_12948,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[7],tmp=(C_word)a,a+=10,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
t6=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[2])[1],C_fix(4));
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t6);
t8=t5;
f_12948(t8,t7);}
else{
t6=t5;
f_12948(t6,C_SCHEME_UNDEFINED);}}

/* k12946 in k12939 in k12933 in k12930 in make-weighting in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_12948(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[50],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12948,NULL,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=((C_word*)t0)[9];
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=(*a=C_CLOSURE_TYPE|15,a[1]=(C_word)f_12951,a[2]=t9,a[3]=t13,a[4]=t7,a[5]=((C_word*)t0)[9],a[6]=t11,a[7]=((C_word*)t0)[2],a[8]=((C_word*)t0)[3],a[9]=((C_word*)t0)[4],a[10]=t5,a[11]=t3,a[12]=((C_word*)t0)[5],a[13]=((C_word*)t0)[6],a[14]=((C_word*)t0)[7],a[15]=((C_word*)t0)[8],tmp=(C_word)a,a+=16,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t11)[1]))){
t15=t14;
f_12951(t15,C_SCHEME_UNDEFINED);}
else{
t15=(C_word)C_i_car(((C_word*)t11)[1]);
t16=(C_word)C_eqp(t15,lf[216]);
if(C_truep(t16)){
t17=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13115,a[2]=((C_word*)t0)[9],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t7,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t7)[1])){
C_trace("ChickenBridge.scm: 368  error");
t18=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t18))(4,t18,t17,lf[19],lf[216]);}
else{
t18=t17;
f_13115(2,t18,C_SCHEME_UNDEFINED);}}
else{
t17=(C_word)C_eqp(t15,lf[217]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13150,a[2]=((C_word*)t0)[9],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 368  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[19],lf[217]);}
else{
t19=t18;
f_13150(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13179,a[2]=t14,a[3]=t7,a[4]=t3,a[5]=t11,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 368  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[10],((C_word*)t0)[9]);}
else{
t19=t18;
f_13179(2,t19,C_SCHEME_UNDEFINED);}}}}}

/* k13177 in k12946 in k12939 in k12933 in k12930 in make-weighting in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_13179(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13179,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13186,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13194,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k13192 in k13177 in k12946 in k12939 in k12933 in k12930 in make-weighting in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_13194(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 368  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_13186(2,t2,C_SCHEME_UNDEFINED);}}

/* k13184 in k13177 in k12946 in k12939 in k12933 in k12930 in make-weighting in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_13186(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_12951(t5,t4);}

/* k13148 in k12946 in k12939 in k12933 in k12930 in make-weighting in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_13150(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13150,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13154,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_13154(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13152 in k13148 in k12946 in k12939 in k12933 in k12930 in make-weighting in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_13154(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12951(t7,t6);}

/* k13113 in k12946 in k12939 in k12933 in k12930 in make-weighting in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_13115(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13115,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13119,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_13119(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13117 in k13113 in k12946 in k12939 in k12933 in k12930 in make-weighting in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_13119(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12951(t7,t6);}

/* k12949 in k12946 in k12939 in k12933 in k12930 in make-weighting in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_12951(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[35],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12951,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_12954,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[12],a[10]=((C_word*)t0)[13],a[11]=((C_word*)t0)[14],a[12]=((C_word*)t0)[15],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_12954(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[216]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13015,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 368  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[216]);}
else{
t6=t5;
f_13015(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[217]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13050,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 368  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[217]);}
else{
t7=t6;
f_13050(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13079,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 368  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_13079(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k13077 in k12949 in k12946 in k12939 in k12933 in k12930 in make-weighting in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_13079(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13079,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13086,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13094,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k13092 in k13077 in k12949 in k12946 in k12939 in k12933 in k12930 in make-weighting in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_13094(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 368  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_13086(2,t2,C_SCHEME_UNDEFINED);}}

/* k13084 in k13077 in k12949 in k12946 in k12939 in k12933 in k12930 in make-weighting in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_13086(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_12954(t5,t4);}

/* k13048 in k12949 in k12946 in k12939 in k12933 in k12930 in make-weighting in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_13050(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13050,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13054,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_13054(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13052 in k13048 in k12949 in k12946 in k12939 in k12933 in k12930 in make-weighting in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_13054(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12954(t7,t6);}

/* k13013 in k12949 in k12946 in k12939 in k12933 in k12930 in make-weighting in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_13015(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13015,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13019,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_13019(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13017 in k13013 in k12949 in k12946 in k12939 in k12933 in k12930 in make-weighting in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_13019(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12954(t7,t6);}

/* k12952 in k12949 in k12946 in k12939 in k12933 in k12930 in make-weighting in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_12954(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12954,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_12957,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[12],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_12957(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 368  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k12955 in k12952 in k12949 in k12946 in k12939 in k12933 in k12930 in make-weighting in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_12957(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12957,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12960,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[10],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_a_i_list(&a,1,((C_word*)t0)[7]);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12972,a[2]=((C_word)li170),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 368  initialize-pattern");
f_9524(t2,((C_word*)t0)[9],t3,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],C_retrieve2(lf[244],"next-in-weighting"),t4);}

/* a12971 in k12955 in k12952 in k12949 in k12946 in k12939 in k12933 in k12930 in make-weighting in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_12972(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_12972,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12978,a[2]=t2,a[3]=((C_word)li169),tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12994,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  pattern-data");
f_9243(t5,t3);}

/* k12992 in a12971 in k12955 in k12952 in k12949 in k12946 in k12939 in k12933 in k12930 in make-weighting in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_12994(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_car(t1);
C_trace("for-each");
t3=*((C_word*)lf[214]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* a12977 in a12971 in k12955 in k12952 in k12949 in k12946 in k12939 in k12933 in k12930 in make-weighting in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_12978(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_12978,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12986,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  random-item-datum");
f_12755(t3,t2);}

/* k12984 in a12977 in a12971 in k12955 in k12952 in k12949 in k12946 in k12939 in k12933 in k12930 in make-weighting in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_12986(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  fn");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k12958 in k12955 in k12952 in k12949 in k12946 in k12939 in k12933 in k12930 in make-weighting in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_12960(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12960,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12963,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 368  recalc-weightings");
f_13695(t2,((C_word*)t0)[3],C_SCHEME_TRUE);}
else{
t3=t2;
f_12963(2,t3,C_SCHEME_UNDEFINED);}}

/* k12961 in k12958 in k12955 in k12952 in k12949 in k12946 in k12939 in k12933 in k12930 in make-weighting in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_12963(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* random-item-count in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_12845(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12845,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[234]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(6)));}

/* random-item-count-set! in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_12836(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12836,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[234]);
C_trace("ChickenBridge.scm: 368  ##sys#block-set!");
t5=*((C_word*)lf[168]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(6),t3);}

/* random-item-max in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_12827(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12827,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[234]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(5)));}

/* random-item-min in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_12809(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12809,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[234]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(4)));}

/* random-item-weight in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_12791(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12791,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[234]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(3)));}

/* random-item-index in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_12773(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12773,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[234]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* random-item-index-set! in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_12764(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12764,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[234]);
C_trace("ChickenBridge.scm: 368  ##sys#block-set!");
t5=*((C_word*)lf[168]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(2),t3);}

/* random-item-datum in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_12755(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12755,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[234]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* next-in-rotation in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_12533(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_12533,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12536,a[2]=((C_word)li159),tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12583,a[2]=t2,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 368  pattern-data");
f_9243(t4,t2);}

/* k12581 in next-in-rotation in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_12583(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12583,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12586,a[2]=((C_word*)t0)[4],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(t1);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(t1);
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12609,a[2]=((C_word*)t0)[2],a[3]=t4,a[4]=((C_word*)t0)[3],a[5]=t1,a[6]=t2,tmp=(C_word)a,a+=7,tmp);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12728,a[2]=t5,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 368  pattern-cache");
f_9459(t6,((C_word*)t0)[2]);}
else{
t4=t2;
f_12586(t4,C_SCHEME_UNDEFINED);}}

/* k12726 in k12581 in next-in-rotation in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_12728(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  next-1");
f_9865(((C_word*)t0)[2],t1);}

/* k12607 in k12581 in next-in-rotation in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_12609(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[32],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12609,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12616,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_pairp(t1))){
t3=(C_word)C_i_cdr(t1);
if(C_truep((C_word)C_i_pairp(t3))){
t4=(C_word)C_i_cddr(t1);
if(C_truep((C_word)C_i_pairp(t4))){
t5=(C_word)C_i_cdddr(t1);
if(C_truep((C_word)C_i_pairp(t5))){
C_apply(5,0,t2,((C_word*)t0)[4],((C_word*)t0)[3],t1);}
else{
t6=(C_word)C_i_car(t1);
t7=(C_word)C_i_cadr(t1);
t8=(C_word)C_i_caddr(t1);
t9=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_12663,a[2]=t8,a[3]=t7,a[4]=t6,a[5]=((C_word*)t0)[3],a[6]=t2,a[7]=((C_word*)t0)[4],a[8]=t1,tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 368  pattern-length");
f_9261(t9,((C_word*)t0)[2]);}}
else{
t5=(C_word)C_i_car(t1);
t6=(C_word)C_i_cadr(t1);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12690,a[2]=t6,a[3]=t5,a[4]=((C_word*)t0)[3],a[5]=t2,a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 368  pattern-length");
f_9261(t7,((C_word*)t0)[2]);}}
else{
t4=(C_word)C_i_car(t1);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12709,a[2]=t4,a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 368  pattern-length");
f_9261(t5,((C_word*)t0)[2]);}}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12724,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 368  pattern-length");
f_9261(t3,((C_word*)t0)[2]);}}

/* k12722 in k12607 in k12581 in next-in-rotation in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_12724(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12724,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 368  rotate-items");
t3=((C_word*)t0)[5];
f_12536(7,t3,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],C_fix(1),C_fix(1),t2);}

/* k12707 in k12607 in k12581 in next-in-rotation in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_12709(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12709,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 368  rotate-items");
t3=((C_word*)t0)[5];
f_12536(7,t3,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],C_fix(1),C_fix(1),t2);}

/* k12688 in k12607 in k12581 in next-in-rotation in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_12690(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12690,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 368  rotate-items");
t3=((C_word*)t0)[6];
f_12536(7,t3,((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],C_fix(1),t2);}

/* k12661 in k12607 in k12581 in next-in-rotation in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_12663(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12663,2,t0,t1);}
t2=(C_word)C_i_caddr(((C_word*)t0)[8]);
t3=(C_word)C_a_i_minus(&a,2,t1,t2);
C_trace("ChickenBridge.scm: 368  rotate-items");
t4=((C_word*)t0)[7];
f_12536(7,t4,((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t3);}

/* k12614 in k12607 in k12581 in next-in-rotation in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_12616(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_12586(t2,(C_word)C_i_set_cdr(((C_word*)t0)[2],t1));}

/* k12584 in k12581 in next-in-rotation in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_12586(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[3]);
t3=(C_word)C_i_car(t2);
t4=(C_word)C_i_cddr(((C_word*)t0)[3]);
t5=(C_word)C_i_set_cdr(((C_word*)t0)[3],t4);
t6=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t3);}

/* rotate-items in next-in-rotation in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_12536(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[10],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_12536,7,t0,t1,t2,t3,t4,t5,t6);}
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12542,a[2]=t8,a[3]=t4,a[4]=t5,a[5]=t2,a[6]=t6,a[7]=((C_word)li158),tmp=(C_word)a,a+=8,tmp));
t10=((C_word*)t8)[1];
f_12542(t10,t1,t3);}

/* do1412 in rotate-items in next-in-rotation in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_12542(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12542,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_lessp(t2,((C_word*)t0)[6]))){
t3=(C_word)C_i_list_ref(((C_word*)t0)[5],t2);
t4=(C_word)C_a_i_plus(&a,2,t2,((C_word*)t0)[4]);
t5=(C_word)C_i_list_ref(((C_word*)t0)[5],t4);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_12558,a[2]=t3,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[3],a[8]=t2,tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 368  list-set!");
t7=C_retrieve(lf[60]);
((C_proc5)C_retrieve_proc(t7))(5,t7,t6,((C_word*)t0)[5],t2,t5);}
else{
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)t0)[5]);}}

/* k12556 in do1412 in rotate-items in next-in-rotation in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_12558(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12558,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12561,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[8],((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 368  list-set!");
t4=C_retrieve(lf[60]);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,((C_word*)t0)[3],t3,((C_word*)t0)[2]);}

/* k12559 in k12556 in do1412 in rotate-items in next-in-rotation in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_12561(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12561,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_12542(t3,((C_word*)t0)[2],t2);}

/* make-rotation in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_12059(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+14)){
C_save_and_reclaim((void*)tr3r,(void*)f_12059r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_12059r(t0,t1,t2,t3);}}

static void C_ccall f_12059r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(14);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12063,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12523,a[2]=t5,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  append");
t7=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,((C_word*)t4)[1],C_SCHEME_END_OF_LIST);}
else{
t6=(C_word)C_a_i_list(&a,1,((C_word*)t4)[1]);
t7=C_set_block_item(t4,0,t6);
t8=t5;
f_12063(t8,t7);}}

/* k12521 in make-rotation in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_12523(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_12063(t3,t2);}

/* k12061 in make-rotation in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_12063(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word ab[59],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12063,NULL,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_fix(0);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=((C_word*)t0)[4];
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_12066,a[2]=t13,a[3]=t11,a[4]=t17,a[5]=t9,a[6]=((C_word*)t0)[4],a[7]=t15,a[8]=t5,a[9]=t3,a[10]=t7,a[11]=((C_word*)t0)[2],a[12]=((C_word*)t0)[3],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t15)[1]))){
t19=t18;
f_12066(t19,C_SCHEME_UNDEFINED);}
else{
t19=(C_word)C_i_car(((C_word*)t15)[1]);
t20=(C_word)C_eqp(t19,lf[216]);
if(C_truep(t20)){
t21=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12396,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t9,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 368  error");
t22=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t22))(4,t22,t21,lf[19],lf[216]);}
else{
t22=t21;
f_12396(2,t22,C_SCHEME_UNDEFINED);}}
else{
t21=(C_word)C_eqp(t19,lf[217]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12431,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t11,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("ChickenBridge.scm: 368  error");
t23=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[19],lf[217]);}
else{
t23=t22;
f_12431(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t19,lf[232]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12466,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t13,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 368  error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[19],lf[232]);}
else{
t24=t23;
f_12466(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12495,a[2]=t18,a[3]=t9,a[4]=t3,a[5]=t15,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t17)[1])){
C_trace("ChickenBridge.scm: 368  error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[10],((C_word*)t0)[4]);}
else{
t24=t23;
f_12495(2,t24,C_SCHEME_UNDEFINED);}}}}}}

/* k12493 in k12061 in make-rotation in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_12495(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12495,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12502,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12510,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k12508 in k12493 in k12061 in make-rotation in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_12510(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 368  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_12502(2,t2,C_SCHEME_UNDEFINED);}}

/* k12500 in k12493 in k12061 in make-rotation in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_12502(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_12066(t5,t4);}

/* k12464 in k12061 in make-rotation in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_12466(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12466,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12470,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12470(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12468 in k12464 in k12061 in make-rotation in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_12470(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12066(t7,t6);}

/* k12429 in k12061 in make-rotation in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_12431(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12431,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12435,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12435(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12433 in k12429 in k12061 in make-rotation in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_12435(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12066(t7,t6);}

/* k12394 in k12061 in make-rotation in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_12396(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12396,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12400,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12400(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12398 in k12394 in k12061 in make-rotation in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_12400(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12066(t7,t6);}

/* k12064 in k12061 in make-rotation in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_12066(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[43],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12066,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_12069,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_12069(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[216]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12261,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 368  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[216]);}
else{
t6=t5;
f_12261(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[217]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12296,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 368  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[217]);}
else{
t7=t6;
f_12296(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[232]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12331,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 368  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[232]);}
else{
t8=t7;
f_12331(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12360,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 368  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_12360(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k12358 in k12064 in k12061 in make-rotation in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_12360(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12360,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12367,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12375,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k12373 in k12358 in k12064 in k12061 in make-rotation in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_12375(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 368  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_12367(2,t2,C_SCHEME_UNDEFINED);}}

/* k12365 in k12358 in k12064 in k12061 in make-rotation in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_12367(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_12069(t5,t4);}

/* k12329 in k12064 in k12061 in make-rotation in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_12331(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12331,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12335,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12335(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12333 in k12329 in k12064 in k12061 in make-rotation in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_12335(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12069(t7,t6);}

/* k12294 in k12064 in k12061 in make-rotation in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_12296(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12296,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12300,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12300(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12298 in k12294 in k12064 in k12061 in make-rotation in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_12300(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12069(t7,t6);}

/* k12259 in k12064 in k12061 in make-rotation in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_12261(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12261,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12265,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12265(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12263 in k12259 in k12064 in k12061 in make-rotation in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_12265(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12069(t7,t6);}

/* k12067 in k12064 in k12061 in make-rotation in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_12069(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12069,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_12072,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[12],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_12072(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[216]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12126,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 368  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[216]);}
else{
t6=t5;
f_12126(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[217]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12161,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 368  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[217]);}
else{
t7=t6;
f_12161(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[232]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12196,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 368  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[232]);}
else{
t8=t7;
f_12196(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12225,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 368  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_12225(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k12223 in k12067 in k12064 in k12061 in make-rotation in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_12225(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12225,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12232,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12240,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k12238 in k12223 in k12067 in k12064 in k12061 in make-rotation in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_12240(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 368  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_12232(2,t2,C_SCHEME_UNDEFINED);}}

/* k12230 in k12223 in k12067 in k12064 in k12061 in make-rotation in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_12232(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_12072(t5,t4);}

/* k12194 in k12067 in k12064 in k12061 in make-rotation in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_12196(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12196,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12200,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12200(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12198 in k12194 in k12067 in k12064 in k12061 in make-rotation in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_12200(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12072(t7,t6);}

/* k12159 in k12067 in k12064 in k12061 in make-rotation in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_12161(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12161,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12165,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12165(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12163 in k12159 in k12067 in k12064 in k12061 in make-rotation in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_12165(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12072(t7,t6);}

/* k12124 in k12067 in k12064 in k12061 in make-rotation in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_12126(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12126,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12130,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12130(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12128 in k12124 in k12067 in k12064 in k12061 in make-rotation in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_12130(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12072(t7,t6);}

/* k12070 in k12067 in k12064 in k12061 in make-rotation in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_12072(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12072,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12075,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_12075(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 368  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k12073 in k12070 in k12067 in k12064 in k12061 in make-rotation in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_12075(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12075,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12078,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 368  %alloc-pattern");
f_9514(t2);}

/* k12076 in k12073 in k12070 in k12067 in k12064 in k12061 in make-rotation in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_12078(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12078,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[6])[1]);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12084,a[2]=((C_word*)t0)[4],a[3]=t1,a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[6])[1]);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12093,a[2]=((C_word)li156),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 368  initialize-pattern");
f_9524(t3,t1,t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t2,C_retrieve2(lf[231],"next-in-rotation"),t5);}

/* a12092 in k12076 in k12073 in k12070 in k12067 in k12064 in k12061 in make-rotation in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_12093(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_12093,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12105,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  pattern-data");
f_9243(t4,t3);}

/* k12103 in a12092 in k12076 in k12073 in k12070 in k12067 in k12064 in k12061 in make-rotation in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_12105(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_car(t1);
C_trace("for-each");
t3=*((C_word*)lf[214]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k12082 in k12076 in k12073 in k12070 in k12067 in k12064 in k12061 in make-rotation in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_12084(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12084,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12087,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  pattern-cache-set!");
f_9450(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k12085 in k12082 in k12076 in k12073 in k12070 in k12067 in k12064 in k12061 in make-rotation in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_12087(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* next-in-heap in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_11983(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11983,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11987,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  pattern-data");
f_9243(t3,t2);}

/* k11985 in next-in-heap in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_11987(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11987,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11990,a[2]=((C_word*)t0)[3],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(t1);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12006,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  pattern-length");
f_9261(t4,((C_word*)t0)[2]);}
else{
t4=t2;
f_11990(2,t4,C_SCHEME_UNDEFINED);}}

/* k12004 in k11985 in next-in-heap in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_12006(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12006,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12016,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=((C_word*)t0)[3],a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 368  tb:rani");
f_6617(t3,t1);}

/* k12014 in k12004 in k11985 in next-in-heap in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_12016(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12016,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12018,a[2]=t3,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word)li154),tmp=(C_word)a,a+=7,tmp));
t5=((C_word*)t3)[1];
f_12018(t5,((C_word*)t0)[2],C_fix(0),t1,C_SCHEME_FALSE);}

/* do1312 in k12014 in k12004 in k11985 in next-in-heap in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_12018(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12018,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nequalp(t2,((C_word*)t0)[5]))){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_i_set_cdr(((C_word*)t0)[4],((C_word*)t0)[3]));}
else{
t6=(C_word)C_i_list_ref(((C_word*)t0)[3],t2);
t7=C_set_block_item(t5,0,t6);
t8=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_12035,a[2]=t3,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[5],a[5]=t5,a[6]=t1,a[7]=((C_word*)t0)[2],a[8]=t2,tmp=(C_word)a,a+=9,tmp);
t9=(C_word)C_i_list_ref(((C_word*)t0)[3],t3);
C_trace("ChickenBridge.scm: 368  list-set!");
t10=C_retrieve(lf[60]);
((C_proc5)C_retrieve_proc(t10))(5,t10,t8,((C_word*)t0)[3],t2,t9);}}

/* k12033 in do1312 in k12014 in k12004 in k11985 in next-in-heap in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_12035(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12035,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12038,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 368  list-set!");
t3=C_retrieve(lf[60]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,((C_word*)t0)[3],((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1]);}

/* k12036 in k12033 in do1312 in k12014 in k12004 in k11985 in next-in-heap in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_12038(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12038,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12049,a[2]=((C_word*)t0)[3],a[3]=t2,a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 368  tb:rani");
f_6617(t3,((C_word*)t0)[2]);}

/* k12047 in k12036 in k12033 in do1312 in k12014 in k12004 in k11985 in next-in-heap in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_12049(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[5])[1];
f_12018(t2,((C_word*)t0)[4],((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* k11988 in k11985 in next-in-heap in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_11990(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=(C_word)C_i_cadr(((C_word*)t0)[3]);
t3=(C_word)C_i_cddr(((C_word*)t0)[3]);
t4=(C_word)C_i_set_cdr(((C_word*)t0)[3],t3);
t5=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,t2);}

/* make-heap in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_11720(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+14)){
C_save_and_reclaim((void*)tr3r,(void*)f_11720r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_11720r(t0,t1,t2,t3);}}

static void C_ccall f_11720r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(14);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11724,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11973,a[2]=t5,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  append");
t7=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,((C_word*)t4)[1],C_SCHEME_END_OF_LIST);}
else{
t6=(C_word)C_a_i_list(&a,1,((C_word*)t4)[1]);
t7=C_set_block_item(t4,0,t6);
t8=t5;
f_11724(t8,t7);}}

/* k11971 in make-heap in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_11973(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_11724(t3,t2);}

/* k11722 in make-heap in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_11724(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11724,NULL,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=((C_word*)t0)[4];
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_11727,a[2]=t9,a[3]=t13,a[4]=t7,a[5]=((C_word*)t0)[4],a[6]=t11,a[7]=t5,a[8]=t3,a[9]=((C_word*)t0)[2],a[10]=((C_word*)t0)[3],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t11)[1]))){
t15=t14;
f_11727(t15,C_SCHEME_UNDEFINED);}
else{
t15=(C_word)C_i_car(((C_word*)t11)[1]);
t16=(C_word)C_eqp(t15,lf[216]);
if(C_truep(t16)){
t17=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11881,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t7,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t7)[1])){
C_trace("ChickenBridge.scm: 368  error");
t18=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t18))(4,t18,t17,lf[19],lf[216]);}
else{
t18=t17;
f_11881(2,t18,C_SCHEME_UNDEFINED);}}
else{
t17=(C_word)C_eqp(t15,lf[217]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11916,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 368  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[19],lf[217]);}
else{
t19=t18;
f_11916(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11945,a[2]=t14,a[3]=t7,a[4]=t3,a[5]=t11,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 368  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[10],((C_word*)t0)[4]);}
else{
t19=t18;
f_11945(2,t19,C_SCHEME_UNDEFINED);}}}}}

/* k11943 in k11722 in make-heap in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_11945(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11945,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11952,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11960,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k11958 in k11943 in k11722 in make-heap in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_11960(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 368  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_11952(2,t2,C_SCHEME_UNDEFINED);}}

/* k11950 in k11943 in k11722 in make-heap in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_11952(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_11727(t5,t4);}

/* k11914 in k11722 in make-heap in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_11916(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11916,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11920,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11920(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11918 in k11914 in k11722 in make-heap in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_11920(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11727(t7,t6);}

/* k11879 in k11722 in make-heap in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_11881(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11881,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11885,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11885(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11883 in k11879 in k11722 in make-heap in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_11885(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11727(t7,t6);}

/* k11725 in k11722 in make-heap in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_11727(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11727,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11730,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_11730(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[216]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11781,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 368  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[216]);}
else{
t6=t5;
f_11781(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[217]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11816,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 368  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[217]);}
else{
t7=t6;
f_11816(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11845,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 368  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_11845(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k11843 in k11725 in k11722 in make-heap in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_11845(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11845,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11852,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11860,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k11858 in k11843 in k11725 in k11722 in make-heap in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_11860(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 368  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_11852(2,t2,C_SCHEME_UNDEFINED);}}

/* k11850 in k11843 in k11725 in k11722 in make-heap in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_11852(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_11730(t5,t4);}

/* k11814 in k11725 in k11722 in make-heap in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_11816(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11816,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11820,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11820(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11818 in k11814 in k11725 in k11722 in make-heap in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_11820(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11730(t7,t6);}

/* k11779 in k11725 in k11722 in make-heap in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_11781(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11781,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11785,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11785(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11783 in k11779 in k11725 in k11722 in make-heap in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_11785(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11730(t7,t6);}

/* k11728 in k11725 in k11722 in make-heap in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_11730(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11730,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11733,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_11733(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 368  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k11731 in k11728 in k11725 in k11722 in make-heap in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_11733(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11733,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11736,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 368  %alloc-pattern");
f_9514(t2);}

/* k11734 in k11731 in k11728 in k11725 in k11722 in make-heap in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_11736(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11736,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[5])[1]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11742,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[5])[1]);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11748,a[2]=((C_word)li152),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 368  initialize-pattern");
f_9524(t3,t1,t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t2,C_retrieve2(lf[229],"next-in-heap"),t5);}

/* a11747 in k11734 in k11731 in k11728 in k11725 in k11722 in make-heap in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_11748(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_11748,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11760,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  pattern-data");
f_9243(t4,t3);}

/* k11758 in a11747 in k11734 in k11731 in k11728 in k11725 in k11722 in make-heap in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_11760(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_car(t1);
C_trace("for-each");
t3=*((C_word*)lf[214]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k11740 in k11734 in k11731 in k11728 in k11725 in k11722 in make-heap in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_11742(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* next-in-line in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_11684(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11684,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11688,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  pattern-data");
f_9243(t3,t2);}

/* k11686 in next-in-line in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_11688(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11688,2,t0,t1);}
t2=(C_word)C_i_cdr(t1);
if(C_truep((C_word)C_i_nullp(t2))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11697,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11704,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 368  pattern-period");
f_9297(t4,((C_word*)t0)[2]);}
else{
t3=(C_word)C_i_car(t1);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11710,a[2]=t3,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_cdr(t1);
C_trace("ChickenBridge.scm: 368  pattern-data-set!");
f_9234(t4,((C_word*)t0)[2],t5);}}

/* k11708 in k11686 in next-in-line in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_11710(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* k11702 in k11686 in next-in-line in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_11704(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  period-count-set!");
f_9066(((C_word*)t0)[2],t1,C_fix(1));}

/* k11695 in k11686 in next-in-line in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_11697(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_car(((C_word*)t0)[2]));}

/* make-line in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_11437(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+10)){
C_save_and_reclaim((void*)tr3r,(void*)f_11437r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_11437r(t0,t1,t2,t3);}}

static void C_ccall f_11437r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a=C_alloc(10);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11441,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=t5;
f_11441(t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_a_i_list(&a,1,((C_word*)t4)[1]);
t7=C_set_block_item(t4,0,t6);
t8=t5;
f_11441(t8,t7);}}

/* k11439 in make-line in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_11441(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11441,NULL,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=((C_word*)t0)[4];
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_11444,a[2]=t9,a[3]=t13,a[4]=t7,a[5]=((C_word*)t0)[4],a[6]=t11,a[7]=t5,a[8]=t3,a[9]=((C_word*)t0)[2],a[10]=((C_word*)t0)[3],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t11)[1]))){
t15=t14;
f_11444(t15,C_SCHEME_UNDEFINED);}
else{
t15=(C_word)C_i_car(((C_word*)t11)[1]);
t16=(C_word)C_eqp(t15,lf[216]);
if(C_truep(t16)){
t17=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11590,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t7,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t7)[1])){
C_trace("ChickenBridge.scm: 368  error");
t18=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t18))(4,t18,t17,lf[19],lf[216]);}
else{
t18=t17;
f_11590(2,t18,C_SCHEME_UNDEFINED);}}
else{
t17=(C_word)C_eqp(t15,lf[217]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11625,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 368  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[19],lf[217]);}
else{
t19=t18;
f_11625(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11654,a[2]=t14,a[3]=t7,a[4]=t3,a[5]=t11,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 368  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[10],((C_word*)t0)[4]);}
else{
t19=t18;
f_11654(2,t19,C_SCHEME_UNDEFINED);}}}}}

/* k11652 in k11439 in make-line in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_11654(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11654,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11661,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11669,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k11667 in k11652 in k11439 in make-line in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_11669(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 368  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_11661(2,t2,C_SCHEME_UNDEFINED);}}

/* k11659 in k11652 in k11439 in make-line in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_11661(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_11444(t5,t4);}

/* k11623 in k11439 in make-line in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_11625(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11625,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11629,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11629(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11627 in k11623 in k11439 in make-line in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_11629(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11444(t7,t6);}

/* k11588 in k11439 in make-line in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_11590(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11590,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11594,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11594(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11592 in k11588 in k11439 in make-line in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_11594(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11444(t7,t6);}

/* k11442 in k11439 in make-line in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_11444(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11444,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11447,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_11447(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[216]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11490,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 368  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[216]);}
else{
t6=t5;
f_11490(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[217]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11525,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 368  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[217]);}
else{
t7=t6;
f_11525(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11554,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 368  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_11554(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k11552 in k11442 in k11439 in make-line in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_11554(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11554,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11561,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11569,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k11567 in k11552 in k11442 in k11439 in make-line in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_11569(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 368  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_11561(2,t2,C_SCHEME_UNDEFINED);}}

/* k11559 in k11552 in k11442 in k11439 in make-line in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_11561(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_11447(t5,t4);}

/* k11523 in k11442 in k11439 in make-line in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_11525(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11525,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11529,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11529(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11527 in k11523 in k11442 in k11439 in make-line in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_11529(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11447(t7,t6);}

/* k11488 in k11442 in k11439 in make-line in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_11490(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11490,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11494,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11494(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11492 in k11488 in k11442 in k11439 in make-line in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_11494(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11447(t7,t6);}

/* k11445 in k11442 in k11439 in make-line in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_11447(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11447,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11450,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_11450(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 368  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k11448 in k11445 in k11442 in k11439 in make-line in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_11450(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11450,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11453,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 368  %alloc-pattern");
f_9514(t2);}

/* k11451 in k11448 in k11445 in k11442 in k11439 in make-line in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_11453(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11453,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[5])[1]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11459,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11461,a[2]=((C_word)li149),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 368  initialize-pattern");
f_9524(t3,t1,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t2,C_retrieve2(lf[227],"next-in-line"),t4);}

/* a11460 in k11451 in k11448 in k11445 in k11442 in k11439 in make-line in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_11461(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_11461,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11469,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  pattern-data");
f_9243(t4,t3);}

/* k11467 in a11460 in k11451 in k11448 in k11445 in k11442 in k11439 in make-line in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_11469(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("for-each");
t2=*((C_word*)lf[214]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k11457 in k11451 in k11448 in k11445 in k11442 in k11439 in make-line in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_11459(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* next-in-palindrome in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_11222(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11222,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11226,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  pattern-cache");
f_9459(t3,t2);}

/* k11224 in next-in-palindrome in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_11226(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11226,2,t0,t1);}
t2=t1;
t3=(C_word)C_i_check_structure(t2,lf[219]);
t4=(C_word)C_i_block_ref(t2,C_fix(1));
t5=t4;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11232,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t6,a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_lessp(((C_word*)t6)[1],C_fix(0)))){
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11256,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t7,a[5]=t6,tmp=(C_word)a,a+=6,tmp);
t9=t1;
t10=(C_word)C_i_check_structure(t9,lf[219]);
t11=(C_word)C_i_block_ref(t9,C_fix(5));
C_trace("ChickenBridge.scm: 368  next-1");
f_9865(t8,t11);}
else{
t8=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11435,a[2]=t7,a[3]=t1,a[4]=t6,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 368  palin-len");
f_10663(t8,t1);}}

/* k11433 in k11224 in next-in-palindrome in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_11435(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11435,2,t0,t1);}
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[4])[1],t1))){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11388,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 368  palin-inc-set!");
f_10672(t2,((C_word*)t0)[3],C_fix(-1));}
else{
t2=((C_word*)t0)[2];
f_11232(2,t2,C_SCHEME_UNDEFINED);}}

/* k11386 in k11433 in k11224 in next-in-palindrome in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_11388(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11388,2,t0,t1);}
t2=((C_word*)t0)[4];
t3=(C_word)C_i_check_structure(t2,lf[219]);
t4=(C_word)C_i_block_ref(t2,C_fix(4));
t5=(C_word)C_eqp(t4,C_SCHEME_TRUE);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11400,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
if(C_truep(t5)){
t7=t6;
f_11400(t7,t5);}
else{
if(C_truep((C_word)C_i_pairp(t4))){
t7=(C_word)C_i_cdr(t4);
if(C_truep((C_word)C_i_pairp(t7))){
t8=(C_word)C_i_cadr(t4);
t9=t6;
f_11400(t9,(C_word)C_eqp(t8,C_SCHEME_TRUE));}
else{
t8=t6;
f_11400(t8,C_SCHEME_FALSE);}}
else{
t7=t6;
f_11400(t7,C_SCHEME_FALSE);}}}

/* k11398 in k11386 in k11433 in k11224 in next-in-palindrome in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_11400(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11400,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(2));
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_11232(2,t4,t3);}
else{
t2=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(1));
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_11232(2,t4,t3);}}

/* k11254 in k11224 in next-in-palindrome in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_11256(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11256,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11259,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 368  palin-len");
f_10663(t2,((C_word*)t0)[2]);}

/* k11257 in k11254 in k11224 in next-in-palindrome in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_11259(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11259,2,t0,t1);}
t2=(C_word)C_i_nequalp(((C_word*)((C_word*)t0)[6])[1],C_fix(-2));
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_11265,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[3],a[5]=t2,a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],a[8]=t1,tmp=(C_word)a,a+=9,tmp);
t4=((C_word*)t0)[2];
t5=((C_word*)t0)[5];
t6=(C_word)C_i_check_structure(t4,lf[219]);
C_trace("ChickenBridge.scm: 368  ##sys#block-set!");
t7=*((C_word*)lf[168]+1);
((C_proc5)(void*)(*((C_word*)t7+1)))(5,t7,t3,t4,C_fix(4),t5);}

/* k11263 in k11257 in k11254 in k11224 in next-in-palindrome in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_11265(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11265,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11268,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 368  palin-inc-set!");
f_10672(t2,((C_word*)t0)[2],C_fix(1));}

/* k11266 in k11263 in k11257 in k11254 in k11224 in next-in-palindrome in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_11268(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11268,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11271,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[6],C_SCHEME_TRUE);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11356,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
if(C_truep(t3)){
t5=t4;
f_11356(t5,t3);}
else{
if(C_truep((C_word)C_i_pairp(((C_word*)t0)[6]))){
t5=(C_word)C_i_car(((C_word*)t0)[6]);
t6=t4;
f_11356(t6,(C_word)C_eqp(t5,C_SCHEME_TRUE));}
else{
t5=t4;
f_11356(t5,C_SCHEME_FALSE);}}}

/* k11354 in k11266 in k11263 in k11257 in k11254 in k11224 in next-in-palindrome in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_11356(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
if(C_truep(t1)){
if(C_truep(((C_word*)t0)[4])){
t2=C_set_block_item(((C_word*)t0)[3],0,C_fix(0));
t3=((C_word*)t0)[2];
f_11271(t3,t2);}
else{
t2=C_set_block_item(((C_word*)t0)[3],0,C_fix(1));
t3=((C_word*)t0)[2];
f_11271(t3,t2);}}
else{
t2=C_set_block_item(((C_word*)t0)[3],0,C_fix(0));
t3=((C_word*)t0)[2];
f_11271(t3,t2);}}

/* k11269 in k11266 in k11263 in k11257 in k11254 in k11224 in next-in-palindrome in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_11271(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11271,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11277,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11350,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 368  pattern-flags");
f_9225(t3,((C_word*)t0)[2]);}

/* k11348 in k11269 in k11266 in k11263 in k11257 in k11254 in k11224 in next-in-palindrome in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_11350(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  bitwise-test");
f_6440(((C_word*)t0)[2],t1,C_fix(2));}

/* k11275 in k11269 in k11266 in k11263 in k11257 in k11254 in k11224 in next-in-palindrome in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_11277(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11277,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11280,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 368  pattern-period");
f_9297(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[4];
f_11232(2,t2,C_SCHEME_UNDEFINED);}}

/* k11278 in k11275 in k11269 in k11266 in k11263 in k11257 in k11254 in k11224 in next-in-palindrome in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_11280(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11280,2,t0,t1);}
t2=(C_word)C_a_i_times(&a,2,((C_word*)t0)[5],C_fix(2));
switch(((C_word*)t0)[4]){
case C_SCHEME_FALSE:
C_trace("ChickenBridge.scm: 368  period-count-set!");
f_9066(((C_word*)t0)[3],t1,t2);
case C_SCHEME_TRUE:
t3=(C_truep(((C_word*)t0)[2])?(C_word)C_a_i_minus(&a,2,t2,C_fix(2)):(C_word)C_a_i_minus(&a,2,t2,C_fix(3)));
C_trace("ChickenBridge.scm: 368  period-count-set!");
f_9066(((C_word*)t0)[3],t1,t3);
default:
if(C_truep((C_word)C_i_equalp(((C_word*)t0)[4],lf[224]))){
t3=(C_word)C_a_i_minus(&a,2,t2,C_fix(1));
C_trace("ChickenBridge.scm: 368  period-count-set!");
f_9066(((C_word*)t0)[3],t1,t3);}
else{
if(C_truep((C_word)C_i_equalp(((C_word*)t0)[4],lf[225]))){
t3=(C_truep(((C_word*)t0)[2])?(C_word)C_a_i_minus(&a,2,t2,C_fix(1)):(C_word)C_a_i_minus(&a,2,t2,C_fix(2)));
C_trace("ChickenBridge.scm: 368  period-count-set!");
f_9066(((C_word*)t0)[3],t1,t3);}
else{
C_trace("ChickenBridge.scm: 368  period-count-set!");
f_9066(((C_word*)t0)[3],t1,t2);}}}}

/* k11230 in k11224 in next-in-palindrome in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_11232(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11232,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11235,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t3=((C_word*)t0)[2];
t4=(C_word)C_i_check_structure(t3,lf[219]);
t5=(C_word)C_i_block_ref(t3,C_fix(3));
t6=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[4])[1],t5);
t7=((C_word*)t0)[2];
t8=(C_word)C_i_check_structure(t7,lf[219]);
C_trace("ChickenBridge.scm: 368  ##sys#block-set!");
t9=*((C_word*)lf[168]+1);
((C_proc5)(void*)(*((C_word*)t9+1)))(5,t9,t2,t7,C_fix(1),t6);}

/* k11233 in k11230 in k11224 in next-in-palindrome in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_11235(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11235,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11242,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  pattern-data");
f_9243(t2,((C_word*)t0)[2]);}

/* k11240 in k11233 in k11230 in k11224 in next-in-palindrome in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_11242(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_list_ref(t1,((C_word*)((C_word*)t0)[2])[1]));}

/* make-palindrome in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_10752(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+10)){
C_save_and_reclaim((void*)tr3r,(void*)f_10752r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_10752r(t0,t1,t2,t3);}}

static void C_ccall f_10752r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a=C_alloc(10);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10756,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=t5;
f_10756(t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_a_i_list(&a,1,((C_word*)t4)[1]);
t7=C_set_block_item(t4,0,t6);
t8=t5;
f_10756(t8,t7);}}

/* k10754 in make-palindrome in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_10756(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word ab[59],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10756,NULL,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=((C_word*)t0)[4];
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_10759,a[2]=t13,a[3]=t11,a[4]=t17,a[5]=t9,a[6]=((C_word*)t0)[4],a[7]=t15,a[8]=t5,a[9]=t3,a[10]=t7,a[11]=((C_word*)t0)[2],a[12]=((C_word*)t0)[3],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t15)[1]))){
t19=t18;
f_10759(t19,C_SCHEME_UNDEFINED);}
else{
t19=(C_word)C_i_car(((C_word*)t15)[1]);
t20=(C_word)C_eqp(t19,lf[216]);
if(C_truep(t20)){
t21=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11093,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t9,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 368  error");
t22=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t22))(4,t22,t21,lf[19],lf[216]);}
else{
t22=t21;
f_11093(2,t22,C_SCHEME_UNDEFINED);}}
else{
t21=(C_word)C_eqp(t19,lf[217]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11128,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t11,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("ChickenBridge.scm: 368  error");
t23=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[19],lf[217]);}
else{
t23=t22;
f_11128(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t19,lf[223]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11163,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t13,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 368  error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[19],lf[223]);}
else{
t24=t23;
f_11163(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11192,a[2]=t18,a[3]=t9,a[4]=t3,a[5]=t15,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t17)[1])){
C_trace("ChickenBridge.scm: 368  error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[10],((C_word*)t0)[4]);}
else{
t24=t23;
f_11192(2,t24,C_SCHEME_UNDEFINED);}}}}}}

/* k11190 in k10754 in make-palindrome in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_11192(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11192,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11199,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11207,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k11205 in k11190 in k10754 in make-palindrome in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_11207(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 368  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_11199(2,t2,C_SCHEME_UNDEFINED);}}

/* k11197 in k11190 in k10754 in make-palindrome in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_11199(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_10759(t5,t4);}

/* k11161 in k10754 in make-palindrome in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_11163(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11163,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11167,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11167(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11165 in k11161 in k10754 in make-palindrome in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_11167(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_10759(t7,t6);}

/* k11126 in k10754 in make-palindrome in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_11128(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11128,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11132,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11132(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11130 in k11126 in k10754 in make-palindrome in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_11132(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_10759(t7,t6);}

/* k11091 in k10754 in make-palindrome in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_11093(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11093,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11097,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11097(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11095 in k11091 in k10754 in make-palindrome in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_11097(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_10759(t7,t6);}

/* k10757 in k10754 in make-palindrome in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_10759(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[43],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10759,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_10762,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_10762(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[216]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10958,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 368  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[216]);}
else{
t6=t5;
f_10958(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[217]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10993,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 368  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[217]);}
else{
t7=t6;
f_10993(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[223]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11028,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 368  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[223]);}
else{
t8=t7;
f_11028(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11057,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 368  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_11057(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k11055 in k10757 in k10754 in make-palindrome in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_11057(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11057,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11064,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11072,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k11070 in k11055 in k10757 in k10754 in make-palindrome in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_11072(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 368  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_11064(2,t2,C_SCHEME_UNDEFINED);}}

/* k11062 in k11055 in k10757 in k10754 in make-palindrome in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_11064(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_10762(t5,t4);}

/* k11026 in k10757 in k10754 in make-palindrome in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_11028(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11028,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11032,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11032(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11030 in k11026 in k10757 in k10754 in make-palindrome in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_11032(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_10762(t7,t6);}

/* k10991 in k10757 in k10754 in make-palindrome in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_10993(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10993,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10997,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_10997(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k10995 in k10991 in k10757 in k10754 in make-palindrome in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_10997(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_10762(t7,t6);}

/* k10956 in k10757 in k10754 in make-palindrome in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_10958(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10958,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10962,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_10962(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k10960 in k10956 in k10757 in k10754 in make-palindrome in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_10962(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_10762(t7,t6);}

/* k10760 in k10757 in k10754 in make-palindrome in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_10762(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10762,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_10765,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[12],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_10765(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[216]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10823,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 368  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[216]);}
else{
t6=t5;
f_10823(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[217]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10858,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 368  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[217]);}
else{
t7=t6;
f_10858(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[223]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10893,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 368  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[223]);}
else{
t8=t7;
f_10893(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10922,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 368  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_10922(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k10920 in k10760 in k10757 in k10754 in make-palindrome in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_10922(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10922,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10929,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10937,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k10935 in k10920 in k10760 in k10757 in k10754 in make-palindrome in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_10937(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 368  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_10929(2,t2,C_SCHEME_UNDEFINED);}}

/* k10927 in k10920 in k10760 in k10757 in k10754 in make-palindrome in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_10929(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_10765(t5,t4);}

/* k10891 in k10760 in k10757 in k10754 in make-palindrome in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_10893(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10893,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10897,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_10897(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k10895 in k10891 in k10760 in k10757 in k10754 in make-palindrome in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_10897(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_10765(t7,t6);}

/* k10856 in k10760 in k10757 in k10754 in make-palindrome in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_10858(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10858,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10862,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_10862(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k10860 in k10856 in k10760 in k10757 in k10754 in make-palindrome in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_10862(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_10765(t7,t6);}

/* k10821 in k10760 in k10757 in k10754 in make-palindrome in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_10823(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10823,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10827,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_10827(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k10825 in k10821 in k10760 in k10757 in k10754 in make-palindrome in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_10827(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_10765(t7,t6);}

/* k10763 in k10760 in k10757 in k10754 in make-palindrome in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_10765(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10765,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10768,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_10768(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 368  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k10766 in k10763 in k10760 in k10757 in k10754 in make-palindrome in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_10768(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10768,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10771,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 368  %alloc-pattern");
f_9514(t2);}

/* k10769 in k10766 in k10763 in k10760 in k10757 in k10754 in make-palindrome in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_10771(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10771,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[6])[1]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10777,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[6],a[4]=t1,a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_a_i_times(&a,2,t2,C_fix(2));
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10794,a[2]=((C_word)li146),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 368  initialize-pattern");
f_9524(t3,t1,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t4,C_retrieve2(lf[222],"next-in-palindrome"),t5);}

/* a10793 in k10769 in k10766 in k10763 in k10760 in k10757 in k10754 in make-palindrome in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_10794(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_10794,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10802,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  pattern-data");
f_9243(t4,t3);}

/* k10800 in a10793 in k10769 in k10766 in k10763 in k10760 in k10757 in k10754 in make-palindrome in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_10802(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("for-each");
t2=*((C_word*)lf[214]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k10775 in k10769 in k10766 in k10763 in k10760 in k10757 in k10754 in make-palindrome in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_10777(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10777,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10780,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_length(((C_word*)((C_word*)t0)[3])[1]);
t4=((C_word*)((C_word*)t0)[2])[1];
t5=(C_word)C_a_i_record(&a,6,lf[219],C_fix(-2),t3,C_SCHEME_FALSE,C_SCHEME_FALSE,t4);
C_trace("ChickenBridge.scm: 368  pattern-cache-set!");
f_9450(t2,((C_word*)t0)[4],t5);}

/* k10778 in k10775 in k10769 in k10766 in k10763 in k10760 in k10757 in k10754 in make-palindrome in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_10780(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* palin-inc-set! in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_10672(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10672,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[219]);
C_trace("ChickenBridge.scm: 368  ##sys#block-set!");
t5=*((C_word*)lf[168]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(3),t3);}

/* palin-len in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_10663(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10663,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[219]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* next-in-cycle in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_10591(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_10591,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10595,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 368  pattern-data");
f_9243(t3,t2);}

/* k10593 in next-in-cycle in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_10595(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10595,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10598,a[2]=((C_word*)t0)[2],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(t1);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(t1);
t5=t2;
f_10598(t5,(C_word)C_i_set_cdr(t1,t4));}
else{
t4=t2;
f_10598(t4,C_SCHEME_UNDEFINED);}}

/* k10596 in k10593 in next-in-cycle in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_10598(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=(C_word)C_i_cadr(((C_word*)t0)[3]);
t3=(C_word)C_i_cddr(((C_word*)t0)[3]);
t4=(C_word)C_i_set_cdr(((C_word*)t0)[3],t3);
t5=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,t2);}

/* make-cycle in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_10336(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+10)){
C_save_and_reclaim((void*)tr3r,(void*)f_10336r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_10336r(t0,t1,t2,t3);}}

static void C_ccall f_10336r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a=C_alloc(10);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10340,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=t5;
f_10340(t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_a_i_list(&a,1,((C_word*)t4)[1]);
t7=C_set_block_item(t4,0,t6);
t8=t5;
f_10340(t8,t7);}}

/* k10338 in make-cycle in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_10340(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10340,NULL,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=((C_word*)t0)[4];
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_10343,a[2]=t9,a[3]=t13,a[4]=t7,a[5]=((C_word*)t0)[4],a[6]=t11,a[7]=t5,a[8]=t3,a[9]=((C_word*)t0)[2],a[10]=((C_word*)t0)[3],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t11)[1]))){
t15=t14;
f_10343(t15,C_SCHEME_UNDEFINED);}
else{
t15=(C_word)C_i_car(((C_word*)t11)[1]);
t16=(C_word)C_eqp(t15,lf[216]);
if(C_truep(t16)){
t17=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10497,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t7,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t7)[1])){
C_trace("ChickenBridge.scm: 368  error");
t18=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t18))(4,t18,t17,lf[19],lf[216]);}
else{
t18=t17;
f_10497(2,t18,C_SCHEME_UNDEFINED);}}
else{
t17=(C_word)C_eqp(t15,lf[217]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10532,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 368  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[19],lf[217]);}
else{
t19=t18;
f_10532(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10561,a[2]=t14,a[3]=t7,a[4]=t3,a[5]=t11,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 368  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[10],((C_word*)t0)[4]);}
else{
t19=t18;
f_10561(2,t19,C_SCHEME_UNDEFINED);}}}}}

/* k10559 in k10338 in make-cycle in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_10561(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10561,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10568,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10576,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k10574 in k10559 in k10338 in make-cycle in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_10576(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 368  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_10568(2,t2,C_SCHEME_UNDEFINED);}}

/* k10566 in k10559 in k10338 in make-cycle in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_10568(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_10343(t5,t4);}

/* k10530 in k10338 in make-cycle in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_10532(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10532,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10536,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_10536(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k10534 in k10530 in k10338 in make-cycle in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_10536(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_10343(t7,t6);}

/* k10495 in k10338 in make-cycle in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_10497(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10497,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10501,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_10501(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k10499 in k10495 in k10338 in make-cycle in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_10501(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_10343(t7,t6);}

/* k10341 in k10338 in make-cycle in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_10343(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10343,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10346,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_10346(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[216]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10397,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 368  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[216]);}
else{
t6=t5;
f_10397(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[217]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10432,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 368  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[217]);}
else{
t7=t6;
f_10432(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10461,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 368  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_10461(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k10459 in k10341 in k10338 in make-cycle in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_10461(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10461,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10468,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10476,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k10474 in k10459 in k10341 in k10338 in make-cycle in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_10476(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 368  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_10468(2,t2,C_SCHEME_UNDEFINED);}}

/* k10466 in k10459 in k10341 in k10338 in make-cycle in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_10468(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_10346(t5,t4);}

/* k10430 in k10341 in k10338 in make-cycle in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_10432(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10432,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10436,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_10436(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k10434 in k10430 in k10341 in k10338 in make-cycle in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_10436(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_10346(t7,t6);}

/* k10395 in k10341 in k10338 in make-cycle in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_10397(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10397,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10401,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 368  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_10401(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k10399 in k10395 in k10341 in k10338 in make-cycle in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_10401(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_10346(t7,t6);}

/* k10344 in k10341 in k10338 in make-cycle in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_10346(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10346,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10349,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_10349(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 368  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k10347 in k10344 in k10341 in k10338 in make-cycle in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_10349(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10349,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10352,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 368  %alloc-pattern");
f_9514(t2);}

/* k10350 in k10347 in k10344 in k10341 in k10338 in make-cycle in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_10352(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10352,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[5])[1]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10358,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[5])[1]);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10364,a[2]=((C_word)li141),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 368  initialize-pattern");
f_9524(t3,t1,t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t2,C_retrieve2(lf[215],"next-in-cycle"),t5);}

/* a10363 in k10350 in k10347 in k10344 in k10341 in k10338 in make-cycle in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_10364(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_10364,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10376,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  pattern-data");
f_9243(t4,t3);}

/* k10374 in a10363 in k10350 in k10347 in k10344 in k10341 in k10338 in make-cycle in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_10376(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_car(t1);
C_trace("for-each");
t3=*((C_word*)lf[214]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k10356 in k10350 in k10347 in k10344 in k10341 in k10338 in make-cycle in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_10358(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* reset-period in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_10221(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10221,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10334,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  pattern?");
f_9210(t3,t2);}

/* k10332 in reset-period in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_10334(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10334,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10231,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  pattern-period");
f_9297(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_fix(1));}}

/* k10229 in k10332 in reset-period in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_10231(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10231,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10234,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=t5,a[6]=t3,tmp=(C_word)a,a+=7,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10319,a[2]=t6,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  period-stream");
f_9111(t7,t1);}

/* k10317 in k10229 in k10332 in reset-period in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_10319(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10319,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10326,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10330,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 368  period-stream");
f_9111(t3,((C_word*)t0)[3]);}
else{
t2=((C_word*)t0)[2];
f_10234(2,t2,C_SCHEME_UNDEFINED);}}

/* k10328 in k10317 in k10229 in k10332 in reset-period in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_10330(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  next-1");
f_9865(((C_word*)t0)[2],t1);}

/* k10324 in k10317 in k10229 in k10332 in reset-period in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_10326(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=((C_word*)t0)[3];
t3=(C_word)C_i_check_structure(t2,lf[166]);
C_trace("ChickenBridge.scm: 368  ##sys#block-set!");
t4=*((C_word*)lf[168]+1);
((C_proc5)(void*)(*((C_word*)t4+1)))(5,t4,((C_word*)t0)[2],t2,C_fix(2),t1);}

/* k10232 in k10229 in k10332 in reset-period in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_10234(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10234,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10316,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 368  period-length");
f_9093(t2,((C_word*)t0)[3]);}

/* k10314 in k10232 in k10229 in k10332 in reset-period in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_10316(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10316,2,t0,t1);}
t2=(C_word)C_eqp(t1,C_SCHEME_TRUE);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10242,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
t5=((C_word*)t0)[3];
t6=(C_word)C_i_check_structure(t5,lf[166]);
t7=t4;
f_10242(2,t7,(C_word)C_i_block_ref(t5,C_fix(4)));}
else{
C_trace("ChickenBridge.scm: 368  period-length");
f_9093(t4,((C_word*)t0)[3]);}}

/* k10240 in k10314 in k10232 in k10229 in k10332 in reset-period in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_10242(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10242,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10245,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10251,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10306,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 368  pattern-flags");
f_9225(t5,((C_word*)t0)[3]);}
else{
t5=t4;
f_10251(2,t5,C_SCHEME_FALSE);}}

/* k10304 in k10240 in k10314 in k10232 in k10229 in k10332 in reset-period in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_10306(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  bitwise-test");
f_6440(((C_word*)t0)[2],t1,C_fix(8));}

/* k10249 in k10240 in k10314 in k10232 in k10229 in k10332 in reset-period in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_10251(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10251,2,t0,t1);}
if(C_truep(t1)){
t2=C_fix(0);
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10254,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t3,tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10270,a[2]=t3,a[3]=((C_word)li139),tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  map-pattern-data");
f_10175(t4,t5,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_10245(t2,C_SCHEME_UNDEFINED);}}

/* a10269 in k10249 in k10240 in k10314 in k10232 in k10229 in k10332 in reset-period in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_10270(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_10270,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10299,a[2]=t2,a[3]=t1,a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 368  reset-period");
f_10221(t3,t2);}

/* k10297 in a10269 in k10249 in k10240 in k10314 in k10232 in k10229 in k10332 in reset-period in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_10299(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10299,2,t0,t1);}
if(C_truep((C_word)C_i_nequalp(t1,C_fix(0)))){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10280,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  pattern-period");
f_9297(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}}

/* k10278 in k10297 in a10269 in k10249 in k10240 in k10314 in k10232 in k10229 in k10332 in reset-period in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_10280(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10280,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10283,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10295,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  period-omit");
f_9147(t3,t1);}

/* k10293 in k10278 in k10297 in a10269 in k10249 in k10240 in k10314 in k10232 in k10229 in k10332 in reset-period in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_10295(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10295,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 368  period-omit-set!");
f_9138(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k10281 in k10278 in k10297 in a10269 in k10249 in k10240 in k10314 in k10232 in k10229 in k10332 in reset-period in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_10283(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10283,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(1));
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t3);}

/* k10252 in k10249 in k10240 in k10314 in k10232 in k10229 in k10332 in reset-period in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_10254(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10254,2,t0,t1);}
if(C_truep((C_word)C_i_greaterp(((C_word*)((C_word*)t0)[4])[1],C_fix(0)))){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10264,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 368  max");
t4=*((C_word*)lf[212]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,t3,C_fix(0));}
else{
t2=((C_word*)t0)[2];
f_10245(t2,C_SCHEME_UNDEFINED);}}

/* k10262 in k10252 in k10249 in k10240 in k10314 in k10232 in k10229 in k10332 in reset-period in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_10264(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_10245(t3,t2);}

/* k10243 in k10240 in k10314 in k10232 in k10229 in k10332 in reset-period in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_10245(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10245,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10248,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  period-count-set!");
f_9066(t2,((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}

/* k10246 in k10243 in k10240 in k10314 in k10232 in k10229 in k10332 in reset-period in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_10248(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* map-pattern-data in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_10175(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10175,NULL,3,t1,t2,t3);}
t4=t3;
t5=(C_word)C_i_check_structure(t4,lf[176]);
t6=(C_word)C_i_block_ref(t4,C_fix(13));
t7=t6;
((C_proc4)C_retrieve_proc(t7))(4,t7,t1,t2,t3);}

/* next-in-pattern in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_10166(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10166,NULL,2,t1,t2);}
t3=t2;
t4=(C_word)C_i_check_structure(t3,lf[176]);
t5=(C_word)C_i_block_ref(t3,C_fix(12));
t6=t5;
((C_proc3)C_retrieve_proc(t6))(3,t6,t1,t2);}

/* next-1 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_9865(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9865,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9872,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  pattern?");
f_9210(t3,t2);}

/* k9870 in next-1 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_9872(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9872,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9875,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  pattern-period");
f_9297(t2,((C_word*)t0)[2]);}
else{
if(C_truep((C_word)C_i_closurep(((C_word*)t0)[2]))){
C_trace("ChickenBridge.scm: 368  obj");
t2=((C_word*)t0)[2];
((C_proc2)C_retrieve_proc(t2))(2,t2,((C_word*)t0)[3]);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10161,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  promise?");
t3=C_retrieve(lf[211]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}}}

/* k10159 in k9870 in next-1 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_10161(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 368  force");
t2=C_retrieve(lf[210]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}}

/* k9873 in k9870 in next-1 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_9875(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9875,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9878,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10146,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t4,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 368  period-count");
f_9075(t5,t1);}

/* k10144 in k9873 in k9870 in next-1 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_10146(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10146,2,t0,t1);}
if(C_truep((C_word)C_i_nequalp(t1,C_fix(0)))){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10101,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10138,a[2]=t2,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 368  period-reps");
f_9165(t3,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[4];
f_9878(2,t2,C_SCHEME_UNDEFINED);}}

/* k10136 in k10144 in k9873 in k9870 in next-1 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_10138(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10138,2,t0,t1);}
t2=((C_word*)t0)[4];
t3=(C_word)C_i_check_structure(t2,lf[176]);
t4=(C_word)C_i_block_ref(t2,C_fix(8));
if(C_truep((C_word)C_i_greater_or_equalp(t1,t4))){
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10130,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 368  pattern-value-set!");
f_9306(t5,((C_word*)t0)[4],lf[205]);}
else{
t5=((C_word*)t0)[2];
f_10101(t5,C_SCHEME_UNDEFINED);}}

/* k10128 in k10136 in k10144 in k9873 in k9870 in next-1 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_10130(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10130,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10133,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  pattern-state-set!");
f_9324(t2,((C_word*)t0)[2],lf[203]);}

/* k10131 in k10128 in k10136 in k10144 in k9873 in k9870 in next-1 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_10133(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[205]);
t3=((C_word*)t0)[2];
f_10101(t3,t2);}

/* k10099 in k10144 in k9873 in k9870 in next-1 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_10101(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10101,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10107,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=((C_word*)((C_word*)t0)[4])[1];
if(C_truep(t3)){
t4=t2;
f_10107(t4,C_SCHEME_FALSE);}
else{
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10124,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 368  reset-period");
f_10221(t4,((C_word*)t0)[2]);}}

/* k10122 in k10099 in k10144 in k9873 in k9870 in next-1 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_10124(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_10107(t2,(C_word)C_i_nequalp(t1,C_fix(0)));}

/* k10105 in k10099 in k10144 in k9873 in k9870 in next-1 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_10107(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10107,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,lf[191]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10111,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  pattern-value-set!");
f_9306(t3,((C_word*)t0)[2],lf[191]);}
else{
t2=((C_word*)t0)[3];
f_9878(2,t2,C_SCHEME_UNDEFINED);}}

/* k10109 in k10105 in k10099 in k10144 in k9873 in k9870 in next-1 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_10111(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  pattern-state-set!");
f_9324(((C_word*)t0)[3],((C_word*)t0)[2],lf[203]);}

/* k9876 in k9873 in k9870 in next-1 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_9878(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9878,2,t0,t1);}
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[5])[1]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9884,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 368  pattern-flags");
f_9225(t2,((C_word*)t0)[3]);}}

/* k9882 in k9876 in k9873 in k9870 in next-1 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_9884(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9884,2,t0,t1);}
t2=((C_word*)t0)[4];
t3=(C_word)C_i_check_structure(t2,lf[176]);
t4=(C_word)C_i_block_ref(t2,C_fix(9));
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_9890,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t4,a[5]=t8,a[6]=((C_word*)t0)[4],a[7]=t6,a[8]=((C_word*)t0)[3],tmp=(C_word)a,a+=9,tmp);
t10=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9976,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],a[5]=t9,a[6]=t8,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 368  bitwise-test");
f_6440(t10,t1,C_fix(1));}

/* k9974 in k9882 in k9876 in k9873 in k9870 in next-1 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_9976(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9976,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9979,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9992,a[2]=((C_word*)t0)[4],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  next-in-pattern");
f_10166(t3,((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9999,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10088,a[2]=((C_word*)t0)[3],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  bitwise-test");
f_6440(t3,((C_word*)t0)[2],C_fix(8));}}

/* k10086 in k9974 in k9882 in k9876 in k9873 in k9870 in next-1 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_10088(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10088,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10095,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 368  period-length");
f_9093(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_9999(t2,C_SCHEME_FALSE);}}

/* k10093 in k10086 in k9974 in k9882 in k9876 in k9873 in k9870 in next-1 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_10095(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_9999(t2,(C_word)C_eqp(t1,C_SCHEME_TRUE));}

/* k9997 in k9974 in k9882 in k9876 in k9873 in k9870 in next-1 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_9999(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9999,NULL,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10001,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t3,a[5]=((C_word*)t0)[5],a[6]=((C_word)li135),tmp=(C_word)a,a+=7,tmp));
t5=((C_word*)t3)[1];
f_10001(t5,((C_word*)t0)[2],t1,C_SCHEME_FALSE);}

/* do960 in k9997 in k9974 in k9882 in k9876 in k9873 in k9870 in next-1 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_10001(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10001,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
if(C_truep(((C_word*)t4)[1])){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_FALSE);}
else{
t5=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_10008,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t4,a[5]=t2,a[6]=t1,a[7]=((C_word*)t0)[4],a[8]=((C_word*)t0)[5],tmp=(C_word)a,a+=9,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10050,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=t7,a[5]=((C_word)li134),tmp=(C_word)a,a+=6,tmp));
t9=((C_word*)t7)[1];
f_10050(t9,t5);}}

/* do964 in do960 in k9997 in k9974 in k9882 in k9876 in k9873 in k9870 in next-1 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_10050(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10050,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10085,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 368  pattern-datum");
f_9279(t2,((C_word*)t0)[3]);}

/* k10083 in do964 in do960 in k9997 in k9974 in k9882 in k9876 in k9873 in k9870 in next-1 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_10085(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10085,2,t0,t1);}
t2=(C_word)C_eqp(t1,lf[191]);
if(C_truep(t2)){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10060,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10067,a[2]=((C_word*)t0)[3],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
if(C_truep(((C_word*)t0)[2])){
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10074,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 368  next-in-pattern");
f_10166(t5,((C_word*)t0)[3]);}
else{
C_trace("ChickenBridge.scm: 368  next-in-pattern");
f_10166(t4,((C_word*)t0)[3]);}}
else{
t3=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}}

/* k10072 in k10083 in do964 in do960 in k9997 in k9974 in k9882 in k9876 in k9873 in k9870 in next-1 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_10074(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10074,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10219,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  pattern?");
f_9210(t2,t1);}

/* k10217 in k10072 in k10083 in do964 in do960 in k9997 in k9974 in k9882 in k9876 in k9873 in k9870 in next-1 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_10219(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10219,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10194,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  pattern-period");
f_9297(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_10067(2,t2,((C_word*)t0)[2]);}}

/* k10192 in k10217 in k10072 in k10083 in do964 in do960 in k9997 in k9974 in k9882 in k9876 in k9873 in k9870 in next-1 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_10194(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10194,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10215,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 368  period-omit");
f_9147(t2,t1);}

/* k10213 in k10192 in k10217 in k10072 in k10083 in do964 in do960 in k9997 in k9974 in k9882 in k9876 in k9873 in k9870 in next-1 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_10215(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10215,2,t0,t1);}
if(C_truep((C_word)C_i_greaterp(t1,C_fix(0)))){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10203,a[2]=((C_word*)t0)[4],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10211,a[2]=((C_word*)t0)[3],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  period-omit");
f_9147(t3,((C_word*)t0)[3]);}
else{
t2=((C_word*)t0)[4];
f_10067(2,t2,((C_word*)t0)[2]);}}

/* k10209 in k10213 in k10192 in k10217 in k10072 in k10083 in do964 in do960 in k9997 in k9974 in k9882 in k9876 in k9873 in k9870 in next-1 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_10211(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10211,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 368  period-omit-set!");
f_9138(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k10201 in k10213 in k10192 in k10217 in k10072 in k10083 in do964 in do960 in k9997 in k9974 in k9882 in k9876 in k9873 in k9870 in next-1 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_10203(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_10067(2,t2,lf[191]);}

/* k10065 in k10083 in do964 in do960 in k9997 in k9974 in k9882 in k9876 in k9873 in k9870 in next-1 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_10067(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  pattern-datum-set!");
f_9270(((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k10058 in k10083 in do964 in do960 in k9997 in k9974 in k9882 in k9876 in k9873 in k9870 in next-1 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_10060(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[3])[1];
f_10050(t2,((C_word*)t0)[2]);}

/* k10006 in do960 in k9997 in k9974 in k9882 in k9876 in k9873 in k9870 in next-1 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_10008(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10008,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_10012,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10048,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 368  pattern-datum");
f_9279(t3,((C_word*)t0)[3]);}

/* k10046 in k10006 in do960 in k9997 in k9974 in k9882 in k9876 in k9873 in k9870 in next-1 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_10048(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  next-1");
f_9865(((C_word*)t0)[2],t1);}

/* k10010 in k10006 in do960 in k9997 in k9974 in k9882 in k9876 in k9873 in k9870 in next-1 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_10012(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10012,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10015,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10031,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10044,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 368  pattern-datum");
f_9279(t5,((C_word*)t0)[3]);}

/* k10042 in k10010 in k10006 in do960 in k9997 in k9974 in k9882 in k9876 in k9873 in k9870 in next-1 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_10044(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  pattern?");
f_9210(((C_word*)t0)[2],t1);}

/* k10029 in k10010 in k10006 in do960 in k9997 in k9974 in k9882 in k9876 in k9873 in k9870 in next-1 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_10031(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10031,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10035,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10039,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 368  pattern-datum");
f_9279(t3,((C_word*)t0)[2]);}
else{
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,lf[203]);
t3=((C_word*)t0)[3];
f_10015(t3,t2);}}

/* k10037 in k10029 in k10010 in k10006 in do960 in k9997 in k9974 in k9882 in k9876 in k9873 in k9870 in next-1 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_10039(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  pattern-state");
f_9333(((C_word*)t0)[2],t1);}

/* k10033 in k10029 in k10010 in k10006 in do960 in k9997 in k9974 in k9882 in k9876 in k9873 in k9870 in next-1 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_10035(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_10015(t3,t2);}

/* k10013 in k10010 in k10006 in do960 in k9997 in k9974 in k9882 in k9876 in k9873 in k9870 in next-1 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_10015(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10015,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10018,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[3])[1],lf[191]);
if(C_truep(t3)){
C_trace("ChickenBridge.scm: 368  pattern-datum-set!");
f_9270(t2,((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}
else{
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=t2;
f_10018(2,t5,t4);}}

/* k10016 in k10013 in k10010 in k10006 in do960 in k9997 in k9974 in k9882 in k9876 in k9873 in k9870 in next-1 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_10018(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[5])[1];
f_10001(t2,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k9990 in k9974 in k9882 in k9876 in k9873 in k9870 in next-1 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_9992(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  pattern-datum-set!");
f_9270(((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k9977 in k9974 in k9882 in k9876 in k9873 in k9870 in next-1 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_9979(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9979,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9983,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9988,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 368  pattern-datum");
f_9279(t3,((C_word*)t0)[2]);}

/* k9986 in k9977 in k9974 in k9882 in k9876 in k9873 in k9870 in next-1 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_9988(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  next-1");
f_9865(((C_word*)t0)[2],t1);}

/* k9981 in k9977 in k9974 in k9882 in k9876 in k9873 in k9870 in next-1 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_9983(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[203]);
t4=((C_word*)t0)[2];
f_9890(2,t4,t3);}

/* k9888 in k9882 in k9876 in k9873 in k9870 in next-1 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_9890(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9890,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9893,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[5])[1],lf[203]);
if(C_truep(t3)){
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9935,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9947,a[2]=((C_word*)t0)[3],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  period-count");
f_9075(t5,((C_word*)t0)[3]);}
else{
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9950,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9970,a[2]=((C_word*)t0)[6],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  bitwise-test");
f_6440(t5,((C_word*)t0)[2],C_fix(64));}}

/* k9968 in k9888 in k9882 in k9876 in k9873 in k9870 in next-1 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_9970(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 368  pattern-datum-set!");
f_9270(((C_word*)t0)[3],((C_word*)t0)[2],lf[191]);}
else{
t2=((C_word*)t0)[3];
f_9950(2,t2,C_SCHEME_UNDEFINED);}}

/* k9948 in k9888 in k9882 in k9876 in k9873 in k9870 in next-1 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_9950(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9950,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9956,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  bitwise-test");
f_6440(t2,((C_word*)t0)[2],C_fix(16));}

/* k9954 in k9948 in k9888 in k9882 in k9876 in k9873 in k9870 in next-1 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_9956(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9956,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9967,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  period-count");
f_9075(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_9893(2,t2,C_SCHEME_UNDEFINED);}}

/* k9965 in k9954 in k9948 in k9888 in k9882 in k9876 in k9873 in k9870 in next-1 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_9967(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9967,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 368  period-count-set!");
f_9066(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k9945 in k9888 in k9882 in k9876 in k9873 in k9870 in next-1 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_9947(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9947,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 368  period-count-set!");
f_9066(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k9933 in k9888 in k9882 in k9876 in k9873 in k9870 in next-1 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_9935(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9935,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9938,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  pattern-datum-set!");
f_9270(t2,((C_word*)t0)[2],lf[191]);}

/* k9936 in k9933 in k9888 in k9882 in k9876 in k9873 in k9870 in next-1 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_9938(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_FALSE);
t3=((C_word*)t0)[2];
f_9893(2,t3,t2);}

/* k9891 in k9888 in k9882 in k9876 in k9873 in k9870 in next-1 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_9893(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9893,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9896,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9929,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 368  period-count");
f_9075(t3,((C_word*)t0)[2]);}

/* k9927 in k9891 in k9888 in k9882 in k9876 in k9873 in k9870 in next-1 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_9929(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9929,2,t0,t1);}
if(C_truep((C_word)C_i_nequalp(t1,C_fix(0)))){
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,lf[203]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9924,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  period-reps");
f_9165(t3,((C_word*)t0)[3]);}
else{
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[4])[1]);
t3=((C_word*)t0)[2];
f_9896(2,t3,t2);}}

/* k9922 in k9927 in k9891 in k9888 in k9882 in k9876 in k9873 in k9870 in next-1 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_9924(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9924,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,C_fix(1),t1);
t3=((C_word*)t0)[3];
t4=(C_word)C_i_check_structure(t3,lf[166]);
C_trace("ChickenBridge.scm: 368  ##sys#block-set!");
t5=*((C_word*)lf[168]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,((C_word*)t0)[2],t3,C_fix(6),t2);}

/* k9894 in k9891 in k9888 in k9882 in k9876 in k9873 in k9870 in next-1 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_9896(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9896,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9899,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t0)[2])){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9909,a[2]=t2,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  retfn");
t4=((C_word*)t0)[2];
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[5])[1]);}
else{
t3=t2;
f_9899(t3,C_SCHEME_UNDEFINED);}}

/* k9907 in k9894 in k9891 in k9888 in k9882 in k9876 in k9873 in k9870 in next-1 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_9909(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_9899(t3,t2);}

/* k9897 in k9894 in k9891 in k9888 in k9882 in k9876 in k9873 in k9870 in next-1 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_9899(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9899,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9902,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 368  pattern-state-set!");
f_9324(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k9900 in k9897 in k9894 in k9891 in k9888 in k9882 in k9876 in k9873 in k9870 in next-1 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_9902(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9902,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9905,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  pattern-value-set!");
f_9306(t2,((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}

/* k9903 in k9900 in k9897 in k9894 in k9891 in k9888 in k9882 in k9876 in k9873 in k9870 in next-1 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_9905(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* next in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_9742(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+16)){
C_save_and_reclaim((void*)tr3rv,(void*)f_9742r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest_vector(a,C_rest_count(0));
f_9742r(t0,t1,t2,t3);}}

static void C_ccall f_9742r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a=C_alloc(16);
t4=(C_word)C_vemptyp(t3);
t5=(C_truep(t4)?C_SCHEME_FALSE:(C_word)C_i_vector_ref(t3,C_fix(0)));
if(C_truep(t5)){
if(C_truep((C_word)C_i_numberp(t5))){
t6=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9763,a[2]=t2,a[3]=t8,a[4]=t6,a[5]=t5,a[6]=((C_word)li131),tmp=(C_word)a,a+=7,tmp));
t10=((C_word*)t8)[1];
f_9763(t10,t1,C_fix(0),t6);}
else{
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9801,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  pattern?");
f_9210(t6,t2);}}
else{
C_trace("ChickenBridge.scm: 368  next-1");
f_9865(t1,t2);}}

/* k9799 in next in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_9801(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9801,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9811,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 368  next-1");
f_9865(t3,((C_word*)t0)[3]);}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_list(&a,1,((C_word*)t0)[3]));}}

/* k9809 in k9799 in next in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_9811(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9811,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9813,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word*)t0)[4],a[5]=((C_word)li132),tmp=(C_word)a,a+=6,tmp));
t5=((C_word*)t3)[1];
f_9813(t5,((C_word*)t0)[2],t1,((C_word*)t0)[4],C_SCHEME_FALSE);}

/* do936 in k9809 in k9799 in next in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_9813(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9813,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t7=(C_word)C_eqp(((C_word*)t5)[1],lf[205]);
t8=(C_truep(t7)?t7:((C_word*)t6)[1]);
if(C_truep(t8)){
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,(C_word)C_i_cdr(((C_word*)t0)[4]));}
else{
t9=(C_word)C_a_i_list(&a,1,((C_word*)t5)[1]);
t10=(C_word)C_i_set_cdr(t3,t9);
t11=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9832,a[2]=t6,a[3]=t5,a[4]=t1,a[5]=((C_word*)t0)[3],a[6]=t3,tmp=(C_word)a,a+=7,tmp);
t12=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9842,a[2]=((C_word*)t0)[2],a[3]=t5,a[4]=t11,a[5]=t6,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 368  eop?");
t13=C_retrieve(lf[202]);
((C_proc3)C_retrieve_proc(t13))(3,t13,t12,((C_word*)t0)[2]);}}

/* k9840 in do936 in k9809 in k9799 in next in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_9842(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9842,2,t0,t1);}
if(C_truep(t1)){
t2=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t3=((C_word*)t0)[4];
f_9832(t3,t2);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9847,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  next-1");
f_9865(t2,((C_word*)t0)[2]);}}

/* k9845 in k9840 in do936 in k9809 in k9799 in next in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_9847(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_9832(t3,t2);}

/* k9830 in do936 in k9809 in k9799 in next in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_9832(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[6]);
t3=((C_word*)((C_word*)t0)[5])[1];
f_9813(t3,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],t2,((C_word*)((C_word*)t0)[2])[1]);}

/* do929 in next in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_9763(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9763,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_greater_or_equalp(t2,((C_word*)t0)[5]))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_cdr(((C_word*)t0)[4]));}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9795,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 368  next-1");
f_9865(t4,((C_word*)t0)[2]);}}

/* k9793 in do929 in next in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_9795(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9795,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
t3=(C_word)C_i_set_cdr(((C_word*)t0)[5],t2);
t4=(C_word)C_a_i_plus(&a,2,C_fix(1),((C_word*)t0)[4]);
t5=(C_word)C_i_cdr(((C_word*)t0)[5]);
t6=((C_word*)((C_word*)t0)[3])[1];
f_9763(t6,((C_word*)t0)[2],t4,t5);}

/* eod? in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_9723(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_9723,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9730,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  pattern?");
f_9210(t3,t2);}

/* k9728 in eod? in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_9730(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9730,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9737,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 368  pattern-value");
t3=C_retrieve2(lf[185],"pattern-value");
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_eqp(((C_word*)t0)[2],lf[205]));}}

/* k9735 in k9728 in eod? in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_9737(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  eod?");
t2=C_retrieve(lf[204]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* eop? in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_9704(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_9704,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9711,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  pattern?");
f_9210(t3,t2);}

/* k9709 in eop? in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_9711(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9711,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9718,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 368  pattern-state");
f_9333(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_eqp(((C_word*)t0)[2],lf[203]));}}

/* k9716 in k9709 in eop? in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_9718(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  eop?");
t2=C_retrieve(lf[202]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* initialize-pattern in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_9524(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7,C_word t8,C_word t9,C_word t10){
C_word tmp;
C_word t11;
C_word t12;
C_word t13;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9524,NULL,10,t1,t2,t3,t4,t5,t6,t7,t8,t9,t10);}
t11=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_9528,a[2]=t7,a[3]=t10,a[4]=t9,a[5]=t5,a[6]=t11,a[7]=t1,a[8]=t8,a[9]=t4,a[10]=t2,tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 368  pattern-data-set!");
f_9234(t12,t2,t3);}

/* k9526 in initialize-pattern in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_9528(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9528,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_9531,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],tmp=(C_word)a,a+=10,tmp);
t3=((C_word*)t0)[10];
t4=((C_word*)t0)[2];
t5=(C_word)C_i_check_structure(t3,lf[176]);
C_trace("ChickenBridge.scm: 368  ##sys#block-set!");
t6=*((C_word*)lf[168]+1);
((C_proc5)(void*)(*((C_word*)t6+1)))(5,t6,t2,t3,C_fix(3),t4);}

/* k9529 in k9526 in initialize-pattern in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_9531(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9531,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_9534,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],tmp=(C_word)a,a+=9,tmp);
t3=((C_word*)t0)[9];
t4=((C_word*)t0)[2];
t5=(C_word)C_i_check_structure(t3,lf[176]);
C_trace("ChickenBridge.scm: 368  ##sys#block-set!");
t6=*((C_word*)lf[168]+1);
((C_proc5)(void*)(*((C_word*)t6+1)))(5,t6,t2,t3,C_fix(13),t4);}

/* k9532 in k9529 in k9526 in initialize-pattern in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_9534(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9534,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9537,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
t3=((C_word*)t0)[8];
t4=((C_word*)t0)[2];
t5=(C_word)C_i_check_structure(t3,lf[176]);
C_trace("ChickenBridge.scm: 368  ##sys#block-set!");
t6=*((C_word*)lf[168]+1);
((C_proc5)(void*)(*((C_word*)t6+1)))(5,t6,t2,t3,C_fix(12),t4);}

/* k9535 in k9532 in k9529 in k9526 in initialize-pattern in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_9537(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9537,2,t0,t1);}
t2=C_SCHEME_TRUE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_9540,a[2]=t3,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9694,a[2]=t3,a[3]=((C_word)li127),tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  map-pattern-data");
f_10175(t4,t5,((C_word*)t0)[7]);}

/* a9693 in k9535 in k9532 in k9529 in k9526 in initialize-pattern in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_9694(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_9694,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9701,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  pattern?");
f_9210(t3,t2);}

/* k9699 in a9693 in k9535 in k9532 in k9529 in k9526 in initialize-pattern in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_9701(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_FALSE);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}}

/* k9538 in k9535 in k9532 in k9529 in k9526 in initialize-pattern in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_9540(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9540,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9543,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
t3=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[4])[1],C_fix(1));
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=t2;
f_9543(t5,t4);}
else{
t3=t2;
f_9543(t3,C_SCHEME_UNDEFINED);}}

/* k9541 in k9538 in k9535 in k9532 in k9529 in k9526 in initialize-pattern in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_9543(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9543,NULL,2,t0,t1);}
t2=((C_word*)t0)[7];
t3=(C_word)C_i_check_structure(t2,lf[176]);
t4=(C_word)C_i_block_ref(t2,C_fix(10));
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9549,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t6=(C_word)C_eqp(t4,lf[192]);
if(C_truep(t6)){
t7=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(8));
t8=C_mutate(((C_word *)((C_word*)t0)[3])+1,t7);
t9=t5;
f_9549(2,t9,t8);}
else{
t7=(C_word)C_eqp(t4,lf[199]);
if(C_truep(t7)){
t8=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(16));
t9=C_mutate(((C_word *)((C_word*)t0)[3])+1,t8);
t10=t5;
f_9549(2,t10,t9);}
else{
C_trace("ChickenBridge.scm: 368  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t5,lf[200],t4);}}}

/* k9547 in k9541 in k9538 in k9535 in k9532 in k9529 in k9526 in initialize-pattern in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_9549(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9549,2,t0,t1);}
t2=((C_word*)t0)[7];
t3=(C_word)C_i_check_structure(t2,lf[176]);
t4=(C_word)C_i_block_ref(t2,C_fix(11));
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9555,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
t6=(C_word)C_eqp(t4,lf[193]);
if(C_truep(t6)){
t7=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(32));
t8=C_mutate(((C_word *)((C_word*)t0)[3])+1,t7);
t9=t5;
f_9555(2,t9,t8);}
else{
t7=(C_word)C_eqp(t4,lf[197]);
if(C_truep(t7)){
t8=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(64));
t9=C_mutate(((C_word *)((C_word*)t0)[3])+1,t8);
t10=t5;
f_9555(2,t10,t9);}
else{
C_trace("ChickenBridge.scm: 368  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t5,lf[198],t4);}}}

/* k9553 in k9547 in k9541 in k9538 in k9535 in k9532 in k9529 in k9526 in initialize-pattern in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_9555(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9555,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9558,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9618,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  bitwise-test");
f_6440(t3,((C_word*)((C_word*)t0)[3])[1],C_fix(16));}

/* k9616 in k9553 in k9547 in k9541 in k9538 in k9535 in k9532 in k9529 in k9526 in initialize-pattern in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_9618(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9618,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_bitwise_and(&a,2,((C_word*)((C_word*)t0)[3])[1],lf[195]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_9558(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9632,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 368  bitwise-test");
f_6440(t2,((C_word*)((C_word*)t0)[3])[1],C_fix(1));}}

/* k9630 in k9616 in k9553 in k9547 in k9541 in k9538 in k9535 in k9532 in k9529 in k9526 in initialize-pattern in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_9632(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9632,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_bitwise_and(&a,2,((C_word*)((C_word*)t0)[3])[1],lf[196]);
t3=(C_word)C_a_i_bitwise_ior(&a,2,t2,C_fix(16));
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_9558(t5,t4);}
else{
t2=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(8));
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_9558(t4,t3);}}

/* k9556 in k9553 in k9547 in k9541 in k9538 in k9535 in k9532 in k9529 in k9526 in initialize-pattern in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_9558(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9558,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9561,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_numberp(((C_word*)t0)[2]);
t4=(C_truep(t3)?(C_word)C_i_greaterp(((C_word*)t0)[2],C_fix(0)):C_SCHEME_FALSE);
t5=(C_truep(t4)?((C_word*)t0)[2]:C_fix(1073741823));
t6=((C_word*)t0)[4];
t7=(C_word)C_i_check_structure(t6,lf[176]);
C_trace("ChickenBridge.scm: 368  ##sys#block-set!");
t8=*((C_word*)lf[168]+1);
((C_proc5)(void*)(*((C_word*)t8+1)))(5,t8,t2,t6,C_fix(8),t5);}

/* k9559 in k9556 in k9553 in k9547 in k9541 in k9538 in k9535 in k9532 in k9529 in k9526 in initialize-pattern in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_9561(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9561,2,t0,t1);}
t2=((C_word*)t0)[6];
t3=(C_truep(t2)?t2:((C_word*)t0)[5]);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9567,a[2]=((C_word*)t0)[5],a[3]=t3,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
t5=((C_word*)t0)[6];
if(C_truep(t5)){
t6=t4;
f_9567(t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[2])[1],C_fix(2));
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t6);
t8=t4;
f_9567(t8,t7);}}

/* k9565 in k9559 in k9556 in k9553 in k9547 in k9541 in k9538 in k9535 in k9532 in k9529 in k9526 in initialize-pattern in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_9567(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9567,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9570,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9580,a[2]=t2,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_i_numberp(((C_word*)t0)[3]);
t5=(C_truep(t4)?t4:(C_word)C_eqp(((C_word*)t0)[3],C_SCHEME_TRUE));
if(C_truep(t5)){
C_trace("ChickenBridge.scm: 368  make-period");
f_9054(t3,C_fix(0),((C_word*)t0)[3],C_SCHEME_FALSE,((C_word*)t0)[2],C_fix(0),C_fix(0));}
else{
C_trace("ChickenBridge.scm: 368  make-period");
f_9054(t3,C_fix(0),C_SCHEME_FALSE,((C_word*)t0)[3],((C_word*)t0)[2],C_fix(0),C_fix(0));}}

/* k9578 in k9565 in k9559 in k9556 in k9553 in k9547 in k9541 in k9538 in k9535 in k9532 in k9529 in k9526 in initialize-pattern in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_9580(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=((C_word*)t0)[3];
t3=(C_word)C_i_check_structure(t2,lf[176]);
C_trace("ChickenBridge.scm: 368  ##sys#block-set!");
t4=*((C_word*)lf[168]+1);
((C_proc5)(void*)(*((C_word*)t4+1)))(5,t4,((C_word*)t0)[2],t2,C_fix(5),t1);}

/* k9568 in k9565 in k9559 in k9556 in k9553 in k9547 in k9541 in k9538 in k9535 in k9532 in k9529 in k9526 in initialize-pattern in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_9570(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9570,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9573,a[2]=((C_word*)t0)[4],tmp=(C_word)a,a+=3,tmp);
t3=((C_word*)t0)[3];
t4=((C_word*)((C_word*)t0)[2])[1];
t5=(C_word)C_i_check_structure(t3,lf[176]);
C_trace("ChickenBridge.scm: 368  ##sys#block-set!");
t6=*((C_word*)lf[168]+1);
((C_proc5)(void*)(*((C_word*)t6+1)))(5,t6,t2,t3,C_fix(1),t4);}

/* k9571 in k9568 in k9565 in k9559 in k9556 in k9553 in k9547 in k9541 in k9538 in k9535 in k9532 in k9529 in k9526 in initialize-pattern in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_9573(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  values");
C_values(2,0,((C_word*)t0)[2]);}

/* %alloc-pattern in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_9514(C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9514,NULL,1,t1);}
t2=lf[191];
t3=lf[191];
t4=lf[191];
t5=lf[192];
t6=lf[193];
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_a_i_record(&a,15,lf[176],C_fix(0),C_SCHEME_END_OF_LIST,C_SCHEME_FALSE,t2,C_SCHEME_FALSE,t3,t4,C_fix(1073741823),C_SCHEME_FALSE,t5,t6,C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE));}

/* pattern-cache in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_9459(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9459,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[176]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(14)));}

/* pattern-cache-set! in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_9450(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9450,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[176]);
C_trace("ChickenBridge.scm: 368  ##sys#block-set!");
t5=*((C_word*)lf[168]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(14),t3);}

/* pattern-state in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_9333(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9333,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[176]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(7)));}

/* pattern-state-set! in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_9324(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9324,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[176]);
C_trace("ChickenBridge.scm: 368  ##sys#block-set!");
t5=*((C_word*)lf[168]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(7),t3);}

/* f_9315 in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_9315(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_9315,3,t0,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[176]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(6)));}

/* pattern-value-set! in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_9306(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9306,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[176]);
C_trace("ChickenBridge.scm: 368  ##sys#block-set!");
t5=*((C_word*)lf[168]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(6),t3);}

/* pattern-period in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_9297(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9297,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[176]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(5)));}

/* pattern-datum in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_9279(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9279,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[176]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(4)));}

/* pattern-datum-set! in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_9270(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9270,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[176]);
C_trace("ChickenBridge.scm: 368  ##sys#block-set!");
t5=*((C_word*)lf[168]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(4),t3);}

/* pattern-length in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_9261(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9261,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[176]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(3)));}

/* pattern-data in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_9243(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9243,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[176]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* pattern-data-set! in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_9234(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9234,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[176]);
C_trace("ChickenBridge.scm: 368  ##sys#block-set!");
t5=*((C_word*)lf[168]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(2),t3);}

/* pattern-flags in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_9225(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9225,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[176]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* pattern? in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_9210(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9210,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_structurep(t2,lf[176]));}

/* period-reps in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_9165(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9165,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[166]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(6)));}

/* period-omit in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_9147(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9147,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[166]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(5)));}

/* period-omit-set! in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_9138(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9138,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[166]);
C_trace("ChickenBridge.scm: 368  ##sys#block-set!");
t5=*((C_word*)lf[168]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(5),t3);}

/* period-stream in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_9111(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9111,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[166]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(3)));}

/* period-length in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_9093(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9093,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[166]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* period-count in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_9075(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9075,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[166]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* period-count-set! in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_9066(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9066,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[166]);
C_trace("ChickenBridge.scm: 368  ##sys#block-set!");
t5=*((C_word*)lf[168]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(1),t3);}

/* make-period in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_9054(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7){
C_word tmp;
C_word t8;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9054,NULL,7,t1,t2,t3,t4,t5,t6,t7);}
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)C_a_i_record(&a,7,lf[166],t2,t3,t4,t5,t6,t7));}

/* transpose in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_8746(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[20],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_8746,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_numberp(t2))){
if(C_truep((C_word)C_i_numberp(t3))){
t4=(C_word)C_i_lessp(t2,C_fix(12));
t5=(C_truep(t4)?(C_word)C_i_lessp(t3,C_fix(12)):C_SCHEME_FALSE);
if(C_truep(t5)){
t6=(C_word)C_a_i_plus(&a,2,t2,t3);
C_trace("ChickenBridge.scm: 367  modulo");
t7=*((C_word*)lf[114]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t1,t6,C_fix(12));}
else{
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_a_i_plus(&a,2,t2,t3));}}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8792,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 367  key");
t5=C_retrieve(lf[153]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t3);}}
else{
if(C_truep((C_word)C_i_pairp(t2))){
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8799,a[2]=((C_word)li101),tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8847,a[2]=t4,a[3]=t1,a[4]=t2,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_numberp(t3))){
t6=t5;
f_8847(2,t6,t3);}
else{
C_trace("ChickenBridge.scm: 367  key");
t6=C_retrieve(lf[153]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,t3);}}
else{
C_trace("ChickenBridge.scm: 367  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t1,lf[162],t2);}}}

/* k8845 in transpose in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_8847(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8847,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_numberp(t2))){
t3=(C_word)C_i_car(((C_word*)t0)[4]);
t4=(C_word)C_i_lessp(t3,C_fix(12));
t5=(C_truep(t4)?(C_word)C_i_lessp(t1,C_fix(12)):C_SCHEME_FALSE);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8864,a[2]=t1,a[3]=((C_word)li102),tmp=(C_word)a,a+=4,tmp);
C_trace("map");
t7=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t7+1)))(4,t7,((C_word*)t0)[3],t6,((C_word*)t0)[4]);}
else{
C_trace("ChickenBridge.scm: 367  transpkeys");
f_8799(((C_word*)t0)[3],((C_word*)t0)[4],t1);}}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8892,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8896,a[2]=t1,a[3]=t3,a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 367  key");
t5=C_retrieve(lf[153]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,((C_word*)t0)[4]);}}

/* k8894 in k8845 in transpose in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_8896(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 367  transpkeys");
f_8799(((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* k8890 in k8845 in transpose in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_8892(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 367  note");
t2=C_retrieve(lf[151]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* a8863 in k8845 in transpose in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_8864(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8864,3,t0,t1,t2);}
t3=(C_word)C_a_i_plus(&a,2,t2,((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 367  modulo");
t4=*((C_word*)lf[114]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t1,t3,C_fix(12));}

/* transpkeys in transpose in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_8799(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8799,NULL,3,t1,t2,t3);}
t4=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8808,a[2]=t6,a[3]=t3,a[4]=t4,a[5]=((C_word)li100),tmp=(C_word)a,a+=6,tmp));
t8=((C_word*)t6)[1];
f_8808(t8,t1,t2,t4);}

/* do635 in transpkeys in transpose in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_8808(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word *a;
loop:
a=C_alloc(7);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_8808,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nullp(t2))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_cdr(((C_word*)t0)[4]));}
else{
t4=(C_word)C_i_car(t2);
t5=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[3],t4);
t6=(C_word)C_a_i_list(&a,1,t5);
t7=(C_word)C_i_set_cdr(t3,t6);
t8=(C_word)C_i_cdr(t3);
t9=t3=t8;
t10=(C_word)C_i_cdr(t2);
t12=t1;
t13=t10;
t14=t3;
t1=t12;
t2=t13;
t3=t14;
goto loop;}}

/* k8790 in transpose in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_8792(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8792,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 367  note");
t3=C_retrieve(lf[151]);
((C_proc3)C_retrieve_proc(t3))(3,t3,((C_word*)t0)[2],t2);}

/* invert in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_8611(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[17],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8611,3,t0,t1,t2);}
if(C_truep((C_word)C_i_numberp(t2))){
if(C_truep((C_word)C_i_lessp(t2,C_fix(12)))){
t3=(C_word)C_a_i_minus(&a,2,C_fix(12),t2);
C_trace("ChickenBridge.scm: 367  modulo");
t4=*((C_word*)lf[114]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t1,t3,C_fix(12));}
else{
C_trace("ChickenBridge.scm: 367  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t1,lf[159],t2);}}
else{
if(C_truep((C_word)C_i_pairp(t2))){
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8641,a[2]=((C_word)li97),tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_numberp(t4))){
t5=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_lessp(t5,C_fix(12)))){
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8711,a[2]=((C_word)li98),tmp=(C_word)a,a+=3,tmp);
C_trace("map");
t7=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t7+1)))(4,t7,t1,t6,t2);}
else{
C_trace("ChickenBridge.scm: 367  invkeys");
f_8641(t1,t2);}}
else{
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8733,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8737,a[2]=t5,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 367  key");
t7=C_retrieve(lf[153]);
((C_proc3)C_retrieve_proc(t7))(3,t7,t6,t2);}}
else{
C_trace("ChickenBridge.scm: 367  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t1,lf[160],t2);}}}

/* k8735 in invert in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_8737(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 367  invkeys");
f_8641(((C_word*)t0)[2],t1);}

/* k8731 in invert in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_8733(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 367  note");
t2=C_retrieve(lf[151]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* a8710 in invert in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_8711(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8711,3,t0,t1,t2);}
t3=(C_word)C_a_i_minus(&a,2,C_fix(12),t2);
C_trace("ChickenBridge.scm: 367  modulo");
t4=*((C_word*)lf[114]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t1,t3,C_fix(12));}

/* invkeys in invert in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_8641(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8641,NULL,2,t1,t2);}
t3=(C_word)C_i_car(t2);
t4=(C_word)C_a_i_list(&a,1,t3);
t5=(C_word)C_i_cdr(t2);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8657,a[2]=t7,a[3]=t3,a[4]=t4,a[5]=((C_word)li96),tmp=(C_word)a,a+=6,tmp));
t9=((C_word*)t7)[1];
f_8657(t9,t1,t5,t4);}

/* do620 in invkeys in invert in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_8657(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word *a;
loop:
a=C_alloc(11);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_8657,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nullp(t2))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,((C_word*)t0)[4]);}
else{
t4=(C_word)C_i_car(t2);
t5=(C_word)C_a_i_minus(&a,2,t4,((C_word*)t0)[3]);
t6=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[3],t5);
t7=(C_word)C_a_i_list(&a,1,t6);
t8=(C_word)C_i_set_cdr(t3,t7);
t9=(C_word)C_i_cdr(t3);
t10=t3=t9;
t11=(C_word)C_i_cdr(t2);
t13=t1;
t14=t11;
t15=t3;
t1=t13;
t2=t14;
t3=t15;
goto loop;}}

/* pc in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_8566(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8566,3,t0,t1,t2);}
if(C_truep((C_word)C_i_numberp(t2))){
C_trace("ChickenBridge.scm: 367  modulo");
t3=*((C_word*)lf[114]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t1,t2,C_fix(12));}
else{
if(C_truep((C_word)C_i_pairp(t2))){
t3=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_numberp(t3))){
C_trace("map");
t4=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,t1,C_retrieve(lf[157]),t2);}
else{
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8598,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 367  key");
t5=C_retrieve(lf[153]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8609,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 367  key");
t4=C_retrieve(lf[153]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}}}

/* k8607 in pc in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_8609(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 367  modulo");
t2=*((C_word*)lf[114]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],t1,C_fix(12));}

/* k8596 in pc in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_8598(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("map");
t2=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[2],C_retrieve(lf[157]),t1);}

/* hz in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_8450(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[13],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8450,3,t0,t1,t2);}
if(C_truep((C_word)C_i_listp(t2))){
t3=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8465,a[2]=t5,a[3]=t3,a[4]=((C_word)li93),tmp=(C_word)a,a+=5,tmp));
t7=((C_word*)t5)[1];
f_8465(t7,t1,t2,lf[156],C_SCHEME_FALSE,t3);}
else{
if(C_truep((C_word)C_i_numberp(t2))){
C_trace("ChickenBridge.scm: 367  tb:keynum->hertz");
f_6593(t1,t2);}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8564,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 367  note-aux");
f_8178(t3,t2,C_SCHEME_FALSE,C_SCHEME_TRUE);}}}

/* k8562 in hz in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_8564(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_caddr(t1));}

/* do600 in hz in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_8465(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8465,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,(C_word)C_i_cdr(((C_word*)t0)[3]));}
else{
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8478,a[2]=t7,a[3]=t6,a[4]=t1,a[5]=((C_word*)t0)[2],a[6]=t2,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
t10=(C_word)C_i_car(t2);
t11=(C_word)C_i_numberp(t10);
t12=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8495,a[2]=t6,a[3]=t2,a[4]=t8,a[5]=t9,a[6]=t7,tmp=(C_word)a,a+=7,tmp);
if(C_truep(t11)){
t13=t12;
f_8495(t13,t11);}
else{
t13=(C_word)C_i_car(t2);
t14=t12;
f_8495(t14,(C_word)C_i_listp(t13));}}}

/* k8493 in do600 in hz in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_8495(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8495,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8499,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 367  hz");
t4=C_retrieve(lf[155]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8514,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 367  note-aux");
f_8178(t2,t3,((C_word*)((C_word*)t0)[2])[1],C_SCHEME_TRUE);}}

/* k8512 in k8493 in do600 in hz in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_8514(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8514,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_caddr(((C_word*)((C_word*)t0)[5])[1]);
t4=(C_word)C_a_i_list(&a,1,t3);
t5=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[4])[1],t4);
t6=(C_word)C_i_cddddr(((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_i_car(t6);
t8=C_mutate(((C_word *)((C_word*)t0)[3])+1,t7);
t9=((C_word*)t0)[2];
f_8478(t9,t8);}

/* k8497 in k8493 in do600 in hz in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_8499(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8499,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]);
t4=((C_word*)t0)[3];
f_8478(t4,(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t3));}

/* k8476 in do600 in hz in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_8478(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(C_word)C_i_cdr(((C_word*)t0)[6]);
t5=((C_word*)((C_word*)t0)[5])[1];
f_8465(t5,((C_word*)t0)[4],t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[7])[1]);}

/* key in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_8328(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[19],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8328,3,t0,t1,t2);}
if(C_truep((C_word)C_i_listp(t2))){
t3=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8343,a[2]=t5,a[3]=t3,a[4]=((C_word)li91),tmp=(C_word)a,a+=5,tmp));
t7=((C_word*)t5)[1];
f_8343(t7,t1,t2,lf[154],C_SCHEME_FALSE,t3);}
else{
if(C_truep((C_word)C_i_numberp(t2))){
if(C_truep((C_word)C_i_greaterp(t2,C_fix(0)))){
t3=t1;
t4=t2;
t5=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t6=(C_word)C_i_foreign_flonum_argumentp(t4);
t7=t3;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)stub243(t5,t6));}
else{
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_fix(-1));}}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8448,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 367  note-aux");
f_8178(t3,t2,C_SCHEME_FALSE,C_SCHEME_TRUE);}}}

/* k8446 in key in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_8448(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_cadr(t1));}

/* do584 in key in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_8343(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8343,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,(C_word)C_i_cdr(((C_word*)t0)[3]));}
else{
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8356,a[2]=t7,a[3]=t6,a[4]=t1,a[5]=((C_word*)t0)[2],a[6]=t2,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
t10=(C_word)C_i_car(t2);
t11=(C_word)C_i_listp(t10);
t12=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8373,a[2]=t6,a[3]=t2,a[4]=t8,a[5]=t9,a[6]=t7,tmp=(C_word)a,a+=7,tmp);
if(C_truep(t11)){
t13=t12;
f_8373(t13,t11);}
else{
t13=(C_word)C_i_car(t2);
t14=t12;
f_8373(t14,(C_word)C_i_numberp(t13));}}}

/* k8371 in do584 in key in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_8373(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8373,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8377,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 367  key");
t4=C_retrieve(lf[153]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8392,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 367  note-aux");
f_8178(t2,t3,((C_word*)((C_word*)t0)[2])[1],C_SCHEME_TRUE);}}

/* k8390 in k8371 in do584 in key in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_8392(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8392,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[5])[1]);
t4=(C_word)C_a_i_list(&a,1,t3);
t5=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[4])[1],t4);
t6=(C_word)C_i_cddddr(((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_i_car(t6);
t8=C_mutate(((C_word *)((C_word*)t0)[3])+1,t7);
t9=((C_word*)t0)[2];
f_8356(t9,t8);}

/* k8375 in k8371 in do584 in key in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_8377(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8377,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]);
t4=((C_word*)t0)[3];
f_8356(t4,(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t3));}

/* k8354 in do584 in key in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_8356(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(C_word)C_i_cdr(((C_word*)t0)[6]);
t5=((C_word*)((C_word*)t0)[5])[1];
f_8343(t5,((C_word*)t0)[4],t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[7])[1]);}

/* note in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_8231(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[13],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8231,3,t0,t1,t2);}
if(C_truep((C_word)C_i_listp(t2))){
t3=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8246,a[2]=t5,a[3]=t3,a[4]=((C_word)li89),tmp=(C_word)a,a+=5,tmp));
t7=((C_word*)t5)[1];
f_8246(t7,t1,t2,lf[152],C_SCHEME_FALSE,t3);}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8326,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 367  note-aux");
f_8178(t3,t2,C_SCHEME_FALSE,C_SCHEME_TRUE);}}

/* k8324 in note in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_8326(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_car(t1));}

/* do570 in note in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_8246(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8246,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,(C_word)C_i_cdr(((C_word*)t0)[3]));}
else{
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8259,a[2]=t7,a[3]=t6,a[4]=t1,a[5]=((C_word*)t0)[2],a[6]=t2,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
t10=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_listp(t10))){
t11=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8277,a[2]=t8,a[3]=t9,a[4]=t7,tmp=(C_word)a,a+=5,tmp);
t12=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 367  note");
t13=C_retrieve(lf[151]);
((C_proc3)C_retrieve_proc(t13))(3,t13,t11,t12);}
else{
t11=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8292,a[2]=t8,a[3]=t9,a[4]=t6,a[5]=t7,tmp=(C_word)a,a+=6,tmp);
t12=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 367  note-aux");
f_8178(t11,t12,((C_word*)t6)[1],C_SCHEME_TRUE);}}}

/* k8290 in do570 in note in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_8292(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8292,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cddddr(((C_word*)((C_word*)t0)[5])[1]);
t4=(C_word)C_i_car(t3);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t4);
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_a_i_list(&a,1,t6);
t8=((C_word*)t0)[3];
f_8259(t8,(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t7));}

/* k8275 in do570 in note in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_8277(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8277,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]);
t4=((C_word*)t0)[3];
f_8259(t4,(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t3));}

/* k8257 in do570 in note in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_8259(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(C_word)C_i_cdr(((C_word*)t0)[6]);
t5=((C_word*)((C_word*)t0)[5])[1];
f_8246(t5,((C_word*)t0)[4],t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[7])[1]);}

/* note-aux in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_8178(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8178,NULL,4,t1,t2,t3,t4);}
if(C_truep((C_word)C_i_numberp(t2))){
t5=t1;
t6=t2;
t7=t4;
if(C_truep((C_word)C_i_exactp(t6))){
t8=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8128,a[2]=t6,a[3]=t7,a[4]=((C_word)li86),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 367  hash-table-ref");
t9=*((C_word*)lf[41]+1);
((C_proc5)C_retrieve_proc(t9))(5,t9,t5,C_retrieve2(lf[138],"*notes*"),t6,t8);}
else{
t8=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8176,a[2]=t5,a[3]=t7,a[4]=t6,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 367  floor");
t9=*((C_word*)lf[149]+1);
((C_proc3)C_retrieve_proc(t9))(3,t9,t8,t6);}}
else{
if(C_truep((C_word)C_i_symbolp(t2))){
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8201,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 367  symbol->string");
t6=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,t2);}
else{
if(C_truep((C_word)C_i_stringp(t2))){
C_trace("ChickenBridge.scm: 367  string->note-entry");
f_8076(t1,t2,t3,t4);}
else{
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8216,a[2]=t2,a[3]=t4,a[4]=t3,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 367  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,t2);}}}}

/* k8214 in note-aux in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_8216(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8216,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8223,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 367  keyword->string");
t3=C_retrieve(lf[33]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}
else{
if(C_truep(((C_word*)t0)[3])){
C_trace("ChickenBridge.scm: 367  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[5],lf[150],((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[5];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}}

/* k8221 in k8214 in note-aux in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_8223(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 367  string->note-entry");
f_8076(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k8199 in note-aux in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_8201(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 367  string->note-entry");
f_8076(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k8174 in note-aux in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_8176(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8176,2,t0,t1);}
t2=(C_word)C_i_inexact_to_exact(t1);
t3=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[4],t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8148,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_lessp(t3,lf[146]))){
t5=t4;
f_8148(t5,t2);}
else{
t5=(C_word)C_i_lessp(t3,lf[147]);
t6=t4;
f_8148(t6,(C_truep(t5)?(C_word)C_a_i_plus(&a,2,t2,lf[148]):(C_word)C_a_i_plus(&a,2,t2,C_fix(1))));}}

/* k8146 in k8174 in note-aux in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_8148(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8148,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8150,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word)li87),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 367  hash-table-ref");
t3=*((C_word*)lf[41]+1);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[2],C_retrieve2(lf[138],"*notes*"),t1,t2);}

/* a8149 in k8146 in k8174 in note-aux in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_8150(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8150,2,t0,t1);}
if(C_truep(((C_word*)t0)[3])){
C_trace("ChickenBridge.scm: 367  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,t1,lf[145],((C_word*)t0)[2]);}
else{
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* a8127 in note-aux in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_8128(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8128,2,t0,t1);}
if(C_truep(((C_word*)t0)[3])){
C_trace("ChickenBridge.scm: 367  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,t1,lf[144],((C_word*)t0)[2]);}
else{
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* string->note-entry in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_8076(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8076,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8080,a[2]=t2,a[3]=t4,a[4]=t3,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8113,a[2]=((C_word)li84),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 367  hash-table-ref");
t7=*((C_word*)lf[41]+1);
((C_proc5)C_retrieve_proc(t7))(5,t7,t5,C_retrieve2(lf[138],"*notes*"),t2,t6);}

/* a8112 in string->note-entry in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_8113(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8113,2,t0,t1);}
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}

/* k8078 in string->note-entry in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_8080(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8080,2,t0,t1);}
t2=t1;
if(C_truep(t2)){
t3=((C_word*)t0)[5];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t1);}
else{
if(C_truep(((C_word*)t0)[4])){
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8096,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 367  string-append");
t4=*((C_word*)lf[141]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,((C_word*)t0)[2],((C_word*)t0)[4]);}
else{
if(C_truep(((C_word*)t0)[3])){
C_trace("ChickenBridge.scm: 367  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[5],lf[142],((C_word*)t0)[2]);}
else{
t3=((C_word*)t0)[5];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}}}}

/* k8094 in k8078 in string->note-entry in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_8096(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8096,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8098,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word)li83),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 367  hash-table-ref");
t3=*((C_word*)lf[41]+1);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[2],C_retrieve2(lf[138],"*notes*"),t1,t2);}

/* a8097 in k8094 in k8078 in string->note-entry in k8072 in k8069 in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_8098(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8098,2,t0,t1);}
if(C_truep(((C_word*)t0)[3])){
C_trace("ChickenBridge.scm: 367  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,t1,lf[140],((C_word*)t0)[2]);}
else{
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* rangamma in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_8048(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr2rv,(void*)f_8048r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest_vector(a,C_rest_count(0));
f_8048r(t0,t1,t2);}}

static void C_ccall f_8048r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
if(C_truep((C_word)C_vemptyp(t2))){
C_trace("ChickenBridge.scm: 367  tb:rangamma");
f_6691(t1,C_fix(1));}
else{
t3=(C_word)C_i_vector_ref(t2,C_fix(0));
C_trace("ChickenBridge.scm: 367  tb:rangamma");
f_6691(t1,t3);}}

/* ranpoisson in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_8029(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr2rv,(void*)f_8029r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest_vector(a,C_rest_count(0));
f_8029r(t0,t1,t2);}}

static void C_ccall f_8029r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
if(C_truep((C_word)C_i_nullp(C_retrieve(lf[134])))){
C_trace("ChickenBridge.scm: 367  tb:ranpoisson");
f_6701(t1,C_fix(1));}
else{
t3=(C_word)C_i_vector_ref(t2,C_fix(0));
C_trace("ChickenBridge.scm: 367  tb:ranpoisson");
f_6701(t1,t3);}}

/* rangauss in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_7988(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr2r,(void*)f_7988r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_7988r(t0,t1,t2);}}

static void C_ccall f_7988r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 367  tb:rangauss");
f_6662(t1,C_fix(1),C_fix(0));}
else{
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 367  tb:rangauss");
f_6662(t1,t4,C_fix(0));}
else{
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cdr(t2);
C_trace("ChickenBridge.scm: 367  tb:rangauss");
f_6662(t1,t4,t5);}}}

/* ranexp in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_7969(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr2rv,(void*)f_7969r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest_vector(a,C_rest_count(0));
f_7969r(t0,t1,t2);}}

static void C_ccall f_7969r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
if(C_truep((C_word)C_vemptyp(t2))){
C_trace("ChickenBridge.scm: 367  tb:ranexp");
f_6673(t1,C_fix(1));}
else{
t3=(C_word)C_i_vector_ref(t2,C_fix(0));
C_trace("ChickenBridge.scm: 367  tb:ranexp");
f_6673(t1,t3);}}

/* ranbeta in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_7741(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+44)){
C_save_and_reclaim((void*)tr2r,(void*)f_7741r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_7741r(t0,t1,t2);}}

static void C_ccall f_7741r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word *a=C_alloc(44);
t3=lf[127];
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=t2;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_7745,a[2]=t10,a[3]=t14,a[4]=t8,a[5]=t2,a[6]=t12,a[7]=t6,a[8]=t4,a[9]=t1,tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t12)[1]))){
t16=t15;
f_7745(t16,C_SCHEME_UNDEFINED);}
else{
t16=(C_word)C_i_car(((C_word*)t12)[1]);
t17=(C_word)C_eqp(t16,lf[128]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_7882,a[2]=t2,a[3]=t15,a[4]=t12,a[5]=t14,a[6]=t8,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t8)[1])){
C_trace("error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[19],lf[128]);}
else{
t19=t18;
f_7882(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(C_word)C_eqp(t16,lf[129]);
if(C_truep(t18)){
t19=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_7917,a[2]=t2,a[3]=t15,a[4]=t12,a[5]=t14,a[6]=t10,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t10)[1])){
C_trace("error");
t20=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t20))(4,t20,t19,lf[19],lf[129]);}
else{
t20=t19;
f_7917(2,t20,C_SCHEME_UNDEFINED);}}
else{
t19=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_7946,a[2]=t15,a[3]=t8,a[4]=t4,a[5]=t12,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t20=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t20))(4,t20,t19,lf[10],t2);}
else{
t20=t19;
f_7946(2,t20,C_SCHEME_UNDEFINED);}}}}}

/* k7944 in ranbeta in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_7946(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7946,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7953,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7961,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k7959 in k7944 in ranbeta in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_7961(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_7953(2,t2,C_SCHEME_UNDEFINED);}}

/* k7951 in k7944 in ranbeta in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_7953(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_7745(t5,t4);}

/* k7915 in ranbeta in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_7917(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7917,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7921,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_7921(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k7919 in k7915 in ranbeta in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_7921(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_7745(t7,t6);}

/* k7880 in ranbeta in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_7882(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7882,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7886,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_7886(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k7884 in k7880 in ranbeta in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_7886(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_7745(t7,t6);}

/* k7743 in ranbeta in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_7745(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[29],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7745,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7748,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_7748(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[128]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_7782,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[128]);}
else{
t6=t5;
f_7782(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[129]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_7817,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[129]);}
else{
t7=t6;
f_7817(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_7846,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_7846(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k7844 in k7743 in ranbeta in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_7846(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7846,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7853,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7861,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k7859 in k7844 in k7743 in ranbeta in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_7861(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_7853(2,t2,C_SCHEME_UNDEFINED);}}

/* k7851 in k7844 in k7743 in ranbeta in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_7853(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_7748(t5,t4);}

/* k7815 in k7743 in ranbeta in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_7817(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7817,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7821,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_7821(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k7819 in k7815 in k7743 in ranbeta in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_7821(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_7748(t7,t6);}

/* k7780 in k7743 in ranbeta in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_7782(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7782,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7786,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_7786(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k7784 in k7780 in k7743 in ranbeta in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_7786(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_7748(t7,t6);}

/* k7746 in k7743 in ranbeta in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_7748(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7748,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7751,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_7751(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k7749 in k7746 in k7743 in ranbeta in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_7751(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7751,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7754,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=((C_word*)((C_word*)t0)[2])[1];
if(C_truep(t3)){
t4=t2;
f_7754(t4,C_SCHEME_UNDEFINED);}
else{
t4=C_mutate(((C_word *)((C_word*)t0)[2])+1,((C_word*)((C_word*)t0)[3])[1]);
t5=t2;
f_7754(t5,t4);}}

/* k7752 in k7749 in k7746 in k7743 in ranbeta in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_7754(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7754,NULL,2,t0,t1);}
t2=((C_word*)t0)[4];
t3=((C_word*)((C_word*)t0)[3])[1];
t4=((C_word*)((C_word*)t0)[2])[1];
t5=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t6=(C_word)C_i_foreign_flonum_argumentp(t3);
t7=(C_word)C_i_foreign_flonum_argumentp(t4);
t8=t2;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)stub296(t5,t6,t7));}

/* odds in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_7510(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+45)){
C_save_and_reclaim((void*)tr3r,(void*)f_7510r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_7510r(t0,t1,t2,t3);}}

static void C_ccall f_7510r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word *a=C_alloc(45);
t4=C_SCHEME_TRUE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=t3;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_FALSE;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_7514,a[2]=t11,a[3]=t15,a[4]=t9,a[5]=t3,a[6]=t13,a[7]=t7,a[8]=t5,a[9]=t1,a[10]=t2,tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t13)[1]))){
t17=t16;
f_7514(t17,C_SCHEME_UNDEFINED);}
else{
t17=(C_word)C_i_car(((C_word*)t13)[1]);
t18=(C_word)C_eqp(t17,lf[121]);
if(C_truep(t18)){
t19=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_7651,a[2]=t3,a[3]=t16,a[4]=t13,a[5]=t15,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("error");
t20=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t20))(4,t20,t19,lf[19],lf[121]);}
else{
t20=t19;
f_7651(2,t20,C_SCHEME_UNDEFINED);}}
else{
t19=(C_word)C_eqp(t17,lf[122]);
if(C_truep(t19)){
t20=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_7686,a[2]=t3,a[3]=t16,a[4]=t13,a[5]=t15,a[6]=t11,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("error");
t21=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t21))(4,t21,t20,lf[19],lf[122]);}
else{
t21=t20;
f_7686(2,t21,C_SCHEME_UNDEFINED);}}
else{
t20=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_7715,a[2]=t16,a[3]=t9,a[4]=t5,a[5]=t13,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t15)[1])){
C_trace("error");
t21=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t21))(4,t21,t20,lf[10],t3);}
else{
t21=t20;
f_7715(2,t21,C_SCHEME_UNDEFINED);}}}}}

/* k7713 in odds in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_7715(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7715,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7722,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7730,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k7728 in k7713 in odds in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_7730(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_7722(2,t2,C_SCHEME_UNDEFINED);}}

/* k7720 in k7713 in odds in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_7722(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_7514(t5,t4);}

/* k7684 in odds in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_7686(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7686,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7690,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_7690(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k7688 in k7684 in odds in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_7690(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_7514(t7,t6);}

/* k7649 in odds in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_7651(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7651,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7655,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_7655(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k7653 in k7649 in odds in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_7655(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_7514(t7,t6);}

/* k7512 in odds in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_7514(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7514,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_7517,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_7517(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[121]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_7551,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[121]);}
else{
t6=t5;
f_7551(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[122]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_7586,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[122]);}
else{
t7=t6;
f_7586(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_7615,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_7615(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k7613 in k7512 in odds in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_7615(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7615,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7622,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7630,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k7628 in k7613 in k7512 in odds in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_7630(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_7622(2,t2,C_SCHEME_UNDEFINED);}}

/* k7620 in k7613 in k7512 in odds in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_7622(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_7517(t5,t4);}

/* k7584 in k7512 in odds in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_7586(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7586,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7590,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_7590(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k7588 in k7584 in k7512 in odds in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_7590(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_7517(t7,t6);}

/* k7549 in k7512 in odds in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_7551(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7551,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7555,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_7555(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k7553 in k7549 in k7512 in odds in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_7555(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_7517(t7,t6);}

/* k7515 in k7512 in odds in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_7517(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7517,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_7520,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_7520(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k7518 in k7515 in k7512 in odds in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_7520(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7520,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_7530,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 367  tb:ranf");
f_6624(t2,lf[120]);}

/* k7528 in k7518 in k7515 in k7512 in odds in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_7530(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_lessp(t1,((C_word*)t0)[5]);
t3=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_truep(t2)?((C_word*)((C_word*)t0)[3])[1]:((C_word*)((C_word*)t0)[2])[1]));}

/* pick in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_7467(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+8)){
C_save_and_reclaim((void*)tr2r,(void*)f_7467r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_7467r(t0,t1,t2);}}

static void C_ccall f_7467r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word *a=C_alloc(8);
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(t2);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7485,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_car(t2);
t7=(C_word)C_i_length(t6);
C_trace("ChickenBridge.scm: 367  tb:rani");
f_6617(t5,t7);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7500,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_length(t2);
C_trace("ChickenBridge.scm: 367  tb:rani");
f_6617(t4,t5);}}

/* k7498 in pick in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_7500(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_list_ref(((C_word*)t0)[2],t1));}

/* k7483 in pick in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_7485(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_list_ref(((C_word*)t0)[2],t1));}

/* between in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_7446(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[6],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_7446,4,t0,t1,t2,t3);}
t4=(C_word)C_fixnump(t2);
t5=(C_truep(t4)?(C_word)C_fixnump(t3):C_SCHEME_FALSE);
if(C_truep(t5)){
t6=t1;
t7=t2;
t8=t3;
t9=(C_word)C_i_foreign_fixnum_argumentp(t7);
t10=(C_word)C_i_foreign_fixnum_argumentp(t8);
t11=t6;
((C_proc2)(void*)(*((C_word*)t11+1)))(2,t11,(C_word)stub262(C_SCHEME_UNDEFINED,t9,t10));}
else{
t6=t1;
t7=t2;
t8=t3;
t9=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t10=(C_word)C_i_foreign_flonum_argumentp(t7);
t11=(C_word)C_i_foreign_flonum_argumentp(t8);
t12=t6;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub268(t9,t10,t11));}}

/* ran in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_7415(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+6)){
C_save_and_reclaim((void*)tr2r,(void*)f_7415r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_7415r(t0,t1,t2);}}

static void C_ccall f_7415r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a=C_alloc(6);
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7419,a[2]=t1,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t3)[1]))){
t5=C_set_block_item(t3,0,C_fix(1));
t6=t4;
f_7419(t6,t5);}
else{
t5=t4;
f_7419(t5,C_SCHEME_UNDEFINED);}}

/* k7417 in ran in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_7419(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep((C_word)C_i_greaterp(((C_word*)((C_word*)t0)[3])[1],C_fix(1)))){
if(C_truep((C_word)C_fixnump(((C_word*)((C_word*)t0)[3])[1]))){
C_trace("ChickenBridge.scm: 367  tb:rani");
f_6617(((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}
else{
C_trace("ChickenBridge.scm: 367  tb:ranf");
f_6624(((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}}
else{
C_trace("ChickenBridge.scm: 367  tb:ranf");
f_6624(((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}}

/* scale in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_7341(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...){
C_word tmp;
C_word t4;
va_list v;
C_word *a,c2=c;
C_save_rest(t3,c2,4);
if(c<4) C_bad_min_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+12)){
C_save_and_reclaim((void*)tr4r,(void*)f_7341r,4,t0,t1,t2,t3);}
else{
a=C_alloc((c-4)*3);
t4=C_restore_rest(a,C_rest_count(0));
f_7341r(t0,t1,t2,t3,t4);}}

static void C_ccall f_7341r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a=C_alloc(12);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_a_i_list(&a,1,C_SCHEME_TRUE);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7348,a[2]=t3,a[3]=t1,a[4]=t6,a[5]=t2,a[6]=t5,tmp=(C_word)a,a+=7,tmp);
t8=(C_word)C_i_cdr(((C_word*)t5)[1]);
if(C_truep((C_word)C_i_nullp(t8))){
t9=(C_word)C_i_car(((C_word*)t5)[1]);
t10=C_set_block_item(t5,0,t9);
t11=t7;
f_7348(t11,t10);}
else{
t9=t7;
f_7348(t9,C_SCHEME_UNDEFINED);}}

/* k7346 in scale in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_7348(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7348,NULL,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[6])[1]);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7357,a[2]=((C_word*)t0)[4],a[3]=t4,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[5],a[6]=((C_word)li72),tmp=(C_word)a,a+=7,tmp));
t6=((C_word*)t4)[1];
f_7357(t6,((C_word*)t0)[3],C_fix(0),((C_word*)t0)[2],t2,((C_word*)t0)[4]);}

/* do410 in k7346 in scale in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_7357(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7357,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_lessp(t2,((C_word*)t0)[5]))){
t8=(C_word)C_a_i_list(&a,1,((C_word*)t6)[1]);
t9=(C_word)C_i_set_cdr(((C_word*)t7)[1],t8);
t10=(C_word)C_i_cdr(((C_word*)t7)[1]);
t11=C_set_block_item(t7,0,t10);
t12=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_7393,a[2]=t7,a[3]=t4,a[4]=t1,a[5]=((C_word*)t0)[3],a[6]=t2,a[7]=t6,a[8]=((C_word*)t0)[4],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 367  modulo");
t13=*((C_word*)lf[114]+1);
((C_proc4)C_retrieve_proc(t13))(4,t13,t12,t2,t4);}
else{
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)C_i_cdr(((C_word*)t0)[2]));}}

/* k7391 in do410 in k7346 in scale in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_7393(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7393,2,t0,t1);}
t2=(C_word)C_i_list_ref(((C_word*)((C_word*)t0)[8])[1],t1);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[7])[1],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[7])+1,t3);
t5=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
t6=((C_word*)((C_word*)t0)[5])[1];
f_7357(t6,((C_word*)t0)[4],t5,((C_word*)((C_word*)t0)[7])[1],((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* interp in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_7314(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr3r,(void*)f_7314r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_7314r(t0,t1,t2,t3);}}

static void C_ccall f_7314r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
t4=(C_word)C_i_car(t3);
if(C_truep((C_word)C_i_pairp(t4))){
t5=(C_word)C_i_car(t3);
t6=(C_word)C_i_cdr(t3);
C_apply(6,0,t1,C_retrieve(lf[107]),t2,t5,t6);}
else{
C_trace("ChickenBridge.scm: 367  interpl");
t5=C_retrieve(lf[107]);
((C_proc4)C_retrieve_proc(t5))(4,t5,t1,t2,t3);}}

/* interpl in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_7219(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...){
C_word tmp;
C_word t4;
va_list v;
C_word *a,c2=c;
C_save_rest(t3,c2,4);
if(c<4) C_bad_min_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+6)){
C_save_and_reclaim((void*)tr4rv,(void*)f_7219r,4,t0,t1,t2,t3);}
else{
a=C_alloc((c-4)*3);
t4=C_restore_rest_vector(a,C_rest_count(0));
f_7219r(t0,t1,t2,t3,t4);}}

static void C_ccall f_7219r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word *a=C_alloc(6);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_7223,a[2]=t1,a[3]=t2,a[4]=t3,a[5]=t4,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 367  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[111],t3);}
else{
t6=t5;
f_7223(2,t6,(C_word)C_i_car(t3));}}

/* k7221 in interpl in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_7223(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7223,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7226,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t3,tmp=(C_word)a,a+=7,tmp);
t5=(C_word)C_i_cdr(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_nullp(t5))){
C_trace("ChickenBridge.scm: 367  err");
t6=C_retrieve(lf[109]);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,lf[110],((C_word*)t0)[4]);}
else{
t6=t4;
f_7226(2,t6,(C_word)C_i_cadr(((C_word*)t0)[4]));}}

/* k7224 in k7221 in interpl in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_7226(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7226,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=((C_word*)((C_word*)t0)[6])[1];
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t3)[1];
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_vemptyp(((C_word*)t0)[5]);
t9=(C_truep(t8)?C_fix(1):(C_word)C_i_vector_ref(((C_word*)t0)[5],C_fix(0)));
t10=(C_word)C_i_cddr(((C_word*)t0)[4]);
t11=C_SCHEME_UNDEFINED;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_set_block_item(t12,0,(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_7238,a[2]=((C_word*)t0)[4],a[3]=t12,a[4]=t9,a[5]=t7,a[6]=t3,a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[3],a[9]=t5,a[10]=((C_word)li69),tmp=(C_word)a,a+=11,tmp));
t14=((C_word*)t12)[1];
f_7238(t14,((C_word*)t0)[2],t10);}

/* do394 in k7224 in k7221 in interpl in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_7238(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7238,NULL,3,t0,t1,t2);}
t3=(C_word)C_i_nullp(t2);
t4=(C_truep(t3)?t3:(C_word)C_i_greaterp(((C_word*)((C_word*)t0)[9])[1],((C_word*)t0)[8]));
if(C_truep(t4)){
C_trace("ChickenBridge.scm: 367  tb:rescale");
f_6481(t1,((C_word*)t0)[8],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[9])[1],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[4]);}
else{
t5=C_mutate(((C_word *)((C_word*)t0)[7])+1,((C_word*)((C_word*)t0)[9])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[6])+1,((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_i_car(t2);
t8=C_mutate(((C_word *)((C_word*)t0)[9])+1,t7);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7260,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t10=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t10))){
C_trace("ChickenBridge.scm: 367  error");
t11=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t9,lf[108],((C_word*)t0)[2]);}
else{
t11=(C_word)C_i_cadr(t2);
t12=C_mutate(((C_word *)((C_word*)t0)[5])+1,t11);
t13=t9;
f_7260(2,t13,t12);}}}

/* k7258 in do394 in k7224 in k7221 in interpl in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_7260(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cddr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_7238(t3,((C_word*)t0)[2],t2);}

/* scaler->cents in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_7204(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7204,3,t0,t1,t2);}
if(C_truep((C_word)C_i_listp(t2))){
C_trace("map");
t3=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,C_retrieve2(lf[72],"tb:scaler->cents"),t2);}
else{
C_trace("ChickenBridge.scm: 367  tb:scaler->cents");
t3=C_retrieve2(lf[72],"tb:scaler->cents");
f_6586(3,t3,t1,t2);}}

/* cents->scaler in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_7189(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7189,3,t0,t1,t2);}
if(C_truep((C_word)C_i_listp(t2))){
C_trace("map");
t3=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,C_retrieve2(lf[71],"tb:cents->scaler"),t2);}
else{
C_trace("ChickenBridge.scm: 367  tb:cents->scaler");
t3=C_retrieve2(lf[71],"tb:cents->scaler");
f_6579(3,t3,t1,t2);}}

/* rhythm->seconds in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_6953(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+45)){
C_save_and_reclaim((void*)tr3r,(void*)f_6953r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_6953r(t0,t1,t2,t3);}}

static void C_ccall f_6953r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word *a=C_alloc(45);
t4=lf[101];
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=lf[102];
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=t3;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_FALSE;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_6957,a[2]=t11,a[3]=t15,a[4]=t9,a[5]=t3,a[6]=t13,a[7]=t1,a[8]=t7,a[9]=t5,a[10]=t2,tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t13)[1]))){
t17=t16;
f_6957(t17,C_SCHEME_UNDEFINED);}
else{
t17=(C_word)C_i_car(((C_word*)t13)[1]);
t18=(C_word)C_eqp(t17,lf[103]);
if(C_truep(t18)){
t19=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_7102,a[2]=t3,a[3]=t16,a[4]=t13,a[5]=t15,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("error");
t20=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t20))(4,t20,t19,lf[19],lf[103]);}
else{
t20=t19;
f_7102(2,t20,C_SCHEME_UNDEFINED);}}
else{
t19=(C_word)C_eqp(t17,lf[104]);
if(C_truep(t19)){
t20=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_7137,a[2]=t3,a[3]=t16,a[4]=t13,a[5]=t15,a[6]=t11,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("error");
t21=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t21))(4,t21,t20,lf[19],lf[104]);}
else{
t21=t20;
f_7137(2,t21,C_SCHEME_UNDEFINED);}}
else{
t20=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_7166,a[2]=t16,a[3]=t9,a[4]=t5,a[5]=t13,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t15)[1])){
C_trace("error");
t21=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t21))(4,t21,t20,lf[10],t3);}
else{
t21=t20;
f_7166(2,t21,C_SCHEME_UNDEFINED);}}}}}

/* k7164 in rhythm->seconds in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_7166(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7166,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7173,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7181,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k7179 in k7164 in rhythm->seconds in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_7181(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_7173(2,t2,C_SCHEME_UNDEFINED);}}

/* k7171 in k7164 in rhythm->seconds in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_7173(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_6957(t5,t4);}

/* k7135 in rhythm->seconds in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_7137(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7137,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7141,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_7141(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k7139 in k7135 in rhythm->seconds in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_7141(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_6957(t7,t6);}

/* k7100 in rhythm->seconds in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_7102(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7102,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7106,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_7106(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k7104 in k7100 in rhythm->seconds in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_7106(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_6957(t7,t6);}

/* k6955 in rhythm->seconds in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_6957(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6957,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_6960,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_6960(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[103]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_7002,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[103]);}
else{
t6=t5;
f_7002(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[104]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_7037,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[104]);}
else{
t7=t6;
f_7037(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_7066,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_7066(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k7064 in k6955 in rhythm->seconds in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_7066(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7066,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7073,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7081,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k7079 in k7064 in k6955 in rhythm->seconds in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_7081(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_7073(2,t2,C_SCHEME_UNDEFINED);}}

/* k7071 in k7064 in k6955 in rhythm->seconds in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_7073(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_6960(t5,t4);}

/* k7035 in k6955 in rhythm->seconds in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_7037(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7037,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7041,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_7041(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k7039 in k7035 in k6955 in rhythm->seconds in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_7041(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_6960(t7,t6);}

/* k7000 in k6955 in rhythm->seconds in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_7002(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7002,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7006,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_7006(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k7004 in k7000 in k6955 in rhythm->seconds in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_7006(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_6960(t7,t6);}

/* k6958 in k6955 in rhythm->seconds in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_6960(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6960,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_6963,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_6963(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k6961 in k6958 in k6955 in rhythm->seconds in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_6963(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6963,2,t0,t1);}
if(C_truep((C_word)C_i_listp(((C_word*)t0)[5]))){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_6974,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word)li65),tmp=(C_word)a,a+=5,tmp);
C_trace("map");
t3=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[2],t2,((C_word*)t0)[5]);}
else{
C_trace("ChickenBridge.scm: 367  tb:rhythm->seconds");
f_6564(((C_word*)t0)[2],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]);}}

/* a6973 in k6961 in k6958 in k6955 in rhythm->seconds in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_6974(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6974,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 367  tb:rhythm->seconds");
f_6564(t1,t2,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* decimals in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_6934(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr3rv,(void*)f_6934r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest_vector(a,C_rest_count(0));
f_6934r(t0,t1,t2,t3);}}

static void C_ccall f_6934r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
if(C_truep((C_word)C_vemptyp(t3))){
C_trace("ChickenBridge.scm: 367  tb:decimals");
f_6542(t1,t2,C_fix(3));}
else{
t4=(C_word)C_i_vector_ref(t3,C_fix(0));
C_trace("ChickenBridge.scm: 367  tb:decimals");
f_6542(t1,t2,t4);}}

/* quantize in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_6913(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_6913,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_listp(t2))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_6925,a[2]=t3,a[3]=((C_word)li62),tmp=(C_word)a,a+=4,tmp);
C_trace("map");
t5=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t1,t4,t2);}
else{
C_trace("ChickenBridge.scm: 367  tb:quantize");
f_6553(t1,t2,t3);}}

/* a6924 in quantize in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_6925(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6925,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 367  tb:quantize");
f_6553(t1,t2,((C_word*)t0)[2]);}

/* minus in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_6887(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr3r,(void*)f_6887r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_6887r(t0,t1,t2,t3);}}

static void C_ccall f_6887r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
if(C_truep((C_word)C_i_nullp(t3))){
if(C_truep((C_word)C_i_listp(t2))){
C_apply(4,0,t1,*((C_word*)lf[93]+1),t2);}
else{
C_trace("ChickenBridge.scm: 367  -");
C_minus(3,0,t1,t2);}}
else{
C_apply(5,0,t1,*((C_word*)lf[93]+1),t2,t3);}}

/* plus in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_6845(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr2r,(void*)f_6845r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_6845r(t0,t1,t2);}}

static void C_ccall f_6845r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_fix(0));}
else{
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_listp(t4))){
t5=(C_word)C_i_car(t2);
C_apply(4,0,t1,*((C_word*)lf[91]+1),t5);}
else{
C_apply(4,0,t1,*((C_word*)lf[91]+1),t2);}}
else{
C_apply(4,0,t1,*((C_word*)lf[91]+1),t2);}}}

/* int in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_6830(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6830,3,t0,t1,t2);}
if(C_truep((C_word)C_i_listp(t2))){
C_trace("map");
t3=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,C_retrieve2(lf[67],"tb:int"),t2);}
else{
C_trace("ChickenBridge.scm: 367  tb:int");
t3=C_retrieve2(lf[67],"tb:int");
f_6535(3,t3,t1,t2);}}

/* discrete in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_6748(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,...){
C_word tmp;
C_word t6;
va_list v;
C_word *a,c2=c;
C_save_rest(t5,c2,6);
if(c<6) C_bad_min_argc_2(c,6,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+4)){
C_save_and_reclaim((void*)tr6r,(void*)f_6748r,6,t0,t1,t2,t3,t4,t5);}
else{
a=C_alloc((c-6)*3);
t6=C_restore_rest(a,C_rest_count(0));
f_6748r(t0,t1,t2,t3,t4,t5,t6);}}

static void C_ccall f_6748r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word *a=C_alloc(4);
if(C_truep((C_word)C_i_pairp(t5))){
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_6762,a[2]=t5,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_nullp(t6))){
t8=(C_word)C_i_length(t5);
C_trace("ChickenBridge.scm: 367  tb:discrete");
f_6508(t7,t2,t3,t4,C_fix(0),t8,C_fix(1));}
else{
t8=(C_word)C_i_cdr(t6);
if(C_truep((C_word)C_i_nullp(t8))){
t9=(C_word)C_i_car(t6);
C_trace("ChickenBridge.scm: 367  tb:discrete");
f_6508(t7,t2,t3,t4,C_fix(0),t9,C_fix(1));}
else{
t9=(C_word)C_i_car(t6);
t10=(C_word)C_i_cadr(t6);
C_trace("ChickenBridge.scm: 367  tb:discrete");
f_6508(t7,t2,t3,t4,C_fix(0),t9,t10);}}}
else{
t7=(C_word)C_i_cdr(t6);
if(C_truep((C_word)C_i_nullp(t7))){
t8=(C_word)C_i_car(t6);
C_trace("ChickenBridge.scm: 367  tb:discrete");
f_6508(t1,t2,t3,t4,t5,t8,C_fix(1));}
else{
t8=(C_word)C_i_car(t6);
t9=(C_word)C_i_cadr(t6);
C_trace("ChickenBridge.scm: 367  tb:discrete");
f_6508(t1,t2,t3,t4,t5,t8,t9);}}}

/* k6760 in discrete in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_6762(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_list_ref(((C_word*)t0)[2],t1));}

/* rescale in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_6714(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,...){
C_word tmp;
C_word t7;
va_list v;
C_word *a,c2=c;
C_save_rest(t6,c2,7);
if(c<7) C_bad_min_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+8)){
C_save_and_reclaim((void*)tr7r,(void*)f_6714r,7,t0,t1,t2,t3,t4,t5,t6);}
else{
a=C_alloc((c-7)*3);
t7=C_restore_rest(a,C_rest_count(0));
f_6714r(t0,t1,t2,t3,t4,t5,t6,t7);}}

static void C_ccall f_6714r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7){
C_word tmp;
C_word t8;
C_word t9;
C_word t10;
C_word *a=C_alloc(8);
if(C_truep((C_word)C_i_listp(t2))){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_6726,a[2]=t7,a[3]=t6,a[4]=t5,a[5]=t4,a[6]=t3,a[7]=((C_word)li56),tmp=(C_word)a,a+=8,tmp);
C_trace("map");
t9=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t9+1)))(4,t9,t1,t8,t2);}
else{
if(C_truep((C_word)C_i_nullp(t7))){
C_trace("ChickenBridge.scm: 367  tb:rescale");
f_6481(t1,t2,t3,t4,t5,t6,C_fix(1));}
else{
t8=(C_word)C_i_car(t7);
C_trace("ChickenBridge.scm: 367  tb:rescale");
f_6481(t1,t2,t3,t4,t5,t6,t8);}}}

/* a6725 in rescale in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_6726(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6726,3,t0,t1,t2);}
C_apply(9,0,t1,C_retrieve(lf[87]),t2,((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* tb:ranbrown in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_6711(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6711,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub316(t2));}

/* tb:ranpink in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_6708(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6708,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub313(t2));}

/* tb:ranpoisson in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_6701(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6701,NULL,2,t1,t2);}
t3=(C_word)C_i_foreign_flonum_argumentp(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub310(C_SCHEME_UNDEFINED,t3));}

/* tb:rancauchy in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_6698(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6698,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub306(t2));}

/* tb:rangamma in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_6691(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6691,NULL,2,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_word)C_i_foreign_flonum_argumentp(t2);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub302(t3,t4));}

/* tb:ranexp in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_6673(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6673,NULL,2,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_word)C_i_foreign_flonum_argumentp(t2);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub290(t3,t4));}

/* tb:rangauss in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_6662(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6662,NULL,3,t1,t2,t3);}
t4=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t5=(C_word)C_i_foreign_flonum_argumentp(t2);
t6=(C_word)C_i_foreign_flonum_argumentp(t3);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)stub284(t4,t5,t6));}

/* tb:ranmiddle in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_6659(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6659,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub279(t2));}

/* tb:ranhigh in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_6656(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6656,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub276(t2));}

/* tb:ranlow in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_6653(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6653,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub273(t2));}

/* tb:ranf in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_6624(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6624,NULL,2,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_word)C_i_foreign_flonum_argumentp(t2);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub256(t3,t4));}

/* tb:rani in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_6617(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6617,NULL,2,t1,t2);}
t3=(C_word)C_i_foreign_fixnum_argumentp(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub252(C_SCHEME_UNDEFINED,t3));}

/* tb:ran-set! in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_6614(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6614,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub248(C_SCHEME_UNDEFINED,t2));}

/* tb:keynum->hertz in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_6593(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6593,NULL,2,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_word)C_i_foreign_flonum_argumentp(t2);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub234(t3,t4));}

/* tb:scaler->cents in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_6586(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6586,3,t0,t1,t2);}
t3=(C_word)C_i_foreign_flonum_argumentp(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub230(C_SCHEME_UNDEFINED,t3));}

/* tb:cents->scaler in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_6579(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6579,3,t0,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_word)C_i_foreign_fixnum_argumentp(t2);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub225(t3,t4));}

/* tb:rhythm->seconds in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_6564(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6564,NULL,4,t1,t2,t3,t4);}
t5=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t6=(C_word)C_i_foreign_flonum_argumentp(t2);
t7=(C_word)C_i_foreign_flonum_argumentp(t3);
t8=(C_word)C_i_foreign_flonum_argumentp(t4);
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,(C_word)stub218(t5,t6,t7,t8));}

/* tb:quantize in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_6553(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6553,NULL,3,t1,t2,t3);}
t4=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t5=(C_word)C_i_foreign_flonum_argumentp(t2);
t6=(C_word)C_i_foreign_flonum_argumentp(t3);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)stub210(t4,t5,t6));}

/* tb:decimals in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_6542(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6542,NULL,3,t1,t2,t3);}
t4=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t5=(C_word)C_i_foreign_flonum_argumentp(t2);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)stub203(t4,t5,t6));}

/* tb:int in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_6535(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6535,3,t0,t1,t2);}
t3=(C_word)C_i_foreign_flonum_argumentp(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub198(C_SCHEME_UNDEFINED,t3));}

/* tb:discrete in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_6508(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7){
C_word tmp;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6508,NULL,7,t1,t2,t3,t4,t5,t6,t7);}
t8=(C_word)C_i_foreign_flonum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_flonum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=(C_word)C_i_foreign_flonum_argumentp(t7);
t14=t1;
((C_proc2)(void*)(*((C_word*)t14+1)))(2,t14,(C_word)stub189(C_SCHEME_UNDEFINED,t8,t9,t10,t11,t12,t13));}

/* tb:rescale in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_6481(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7){
C_word tmp;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6481,NULL,7,t1,t2,t3,t4,t5,t6,t7);}
t8=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t9=(C_word)C_i_foreign_flonum_argumentp(t2);
t10=(C_word)C_i_foreign_flonum_argumentp(t3);
t11=(C_word)C_i_foreign_flonum_argumentp(t4);
t12=(C_word)C_i_foreign_flonum_argumentp(t5);
t13=(C_word)C_i_foreign_flonum_argumentp(t6);
t14=(C_word)C_i_foreign_flonum_argumentp(t7);
t15=t1;
((C_proc2)(void*)(*((C_word*)t15+1)))(2,t15,(C_word)stub174(t8,t9,t10,t11,t12,t13,t14));}

/* bitwise-test in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_6440(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6440,NULL,3,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_6446,a[2]=t7,a[3]=t4,a[4]=t5,a[5]=((C_word)li32),tmp=(C_word)a,a+=6,tmp));
t9=((C_word*)t7)[1];
f_6446(t9,t1,C_SCHEME_FALSE);}

/* do143 in bitwise-test in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_6446(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6446,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[4])[1],C_fix(0)))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,((C_word*)t3)[1]);}
else{
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_6456,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_bit_setp(((C_word*)((C_word*)t0)[4])[1],C_fix(0)))){
if(C_truep((C_word)C_i_bit_setp(((C_word*)((C_word*)t0)[3])[1],C_fix(0)))){
t5=C_set_block_item(t3,0,C_SCHEME_TRUE);
t6=t4;
f_6456(t6,t5);}
else{
t5=C_set_block_item(t3,0,C_SCHEME_FALSE);
t6=C_set_block_item(((C_word*)t0)[4],0,C_fix(0));
t7=t4;
f_6456(t7,t6);}}
else{
t5=t4;
f_6456(t5,C_SCHEME_UNDEFINED);}}}

/* k6454 in do143 in bitwise-test in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_6456(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6456,NULL,2,t0,t1);}
t2=(C_word)C_a_i_arithmetic_shift(&a,2,((C_word*)((C_word*)t0)[6])[1],C_fix(-1));
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_a_i_arithmetic_shift(&a,2,((C_word*)((C_word*)t0)[5])[1],C_fix(-1));
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t4);
t6=((C_word*)((C_word*)t0)[4])[1];
f_6446(t6,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* list-prop in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_6354(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...){
C_word tmp;
C_word t4;
va_list v;
C_word *a,c2=c;
C_save_rest(t3,c2,4);
if(c<4) C_bad_min_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr4r,(void*)f_6354r,4,t0,t1,t2,t3);}
else{
a=C_alloc((c-4)*3);
t4=C_restore_rest(a,C_rest_count(0));
f_6354r(t0,t1,t2,t3,t4);}}

static void C_ccall f_6354r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
if(C_truep((C_word)C_i_nullp(t2))){
t5=(C_word)C_i_nullp(t4);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_truep(t5)?C_SCHEME_FALSE:(C_word)C_i_car(t4)));}
else{
t5=(C_word)C_i_car(t2);
t6=(C_word)C_eqp(t5,t3);
if(C_truep(t6)){
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_i_cadr(t2));}
else{
t7=(C_word)C_i_cddr(t2);
C_apply(6,0,t1,C_retrieve2(lf[63],"list-prop"),t7,t3,t4);}}}

/* make-list in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_6259(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+5)){
C_save_and_reclaim((void*)tr3rv,(void*)f_6259r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest_vector(a,C_rest_count(0));
f_6259r(t0,t1,t2,t3);}}

static void C_ccall f_6259r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a=C_alloc(5);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_6263,a[2]=t2,a[3]=t1,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_lessp(t2,C_fix(0)))){
C_trace("ChickenBridge.scm: 366  error");
t5=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,lf[62],t2);}
else{
t5=t4;
f_6263(2,t5,C_SCHEME_UNDEFINED);}}

/* k6261 in make-list in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_6263(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6263,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_6265,a[2]=t3,a[3]=((C_word)li28),tmp=(C_word)a,a+=4,tmp));
t7=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_6288,a[2]=t5,a[3]=((C_word)li29),tmp=(C_word)a,a+=4,tmp));
if(C_truep((C_word)C_vemptyp(((C_word*)t0)[4]))){
C_trace("ChickenBridge.scm: 366  l1");
t8=((C_word*)t3)[1];
f_6265(t8,((C_word*)t0)[3],((C_word*)t0)[2],C_SCHEME_FALSE);}
else{
t8=(C_word)C_i_vector_ref(((C_word*)t0)[4],C_fix(0));
if(C_truep((C_word)C_i_closurep(t8))){
t9=(C_word)C_i_vector_ref(((C_word*)t0)[4],C_fix(0));
C_trace("ChickenBridge.scm: 366  l2");
t10=((C_word*)t5)[1];
f_6288(t10,((C_word*)t0)[3],((C_word*)t0)[2],t9);}
else{
t9=(C_word)C_i_vector_ref(((C_word*)t0)[4],C_fix(0));
C_trace("ChickenBridge.scm: 366  l1");
t10=((C_word*)t3)[1];
f_6265(t10,((C_word*)t0)[3],((C_word*)t0)[2],t9);}}}

/* l2 in k6261 in make-list in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_6288(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6288,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nequalp(t2,C_fix(0)))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_END_OF_LIST);}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_6305,a[2]=t3,a[3]=((C_word*)t0)[2],a[4]=t2,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 366  b");
t5=t3;
((C_proc2)C_retrieve_proc(t5))(2,t5,t4);}}

/* k6303 in l2 in k6261 in make-list in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_6305(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6305,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_6309,a[2]=t1,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[4],C_fix(1));
C_trace("ChickenBridge.scm: 366  l2");
t4=((C_word*)((C_word*)t0)[3])[1];
f_6288(t4,t2,t3,((C_word*)t0)[2]);}

/* k6307 in k6303 in l2 in k6261 in make-list in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_6309(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6309,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* l1 in k6261 in make-list in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_6265(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a;
loop:
a=C_alloc(8);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_6265,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nequalp(t2,C_fix(0)))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_END_OF_LIST);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_6282,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_a_i_minus(&a,2,t2,C_fix(1));
C_trace("ChickenBridge.scm: 366  l1");
t7=t4;
t8=t5;
t9=t3;
t1=t7;
t2=t8;
t3=t9;
goto loop;}}

/* k6280 in l1 in k6261 in make-list in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_6282(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6282,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* list-set! in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_6249(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_6249,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_i_list_tail(t2,t3);
t6=(C_word)C_i_set_car(t5,t4);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,t4);}

/* list* in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_6209(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+4)){
C_save_and_reclaim((void*)tr2r,(void*)f_6209r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_6209r(t0,t1,t2);}}

static void C_ccall f_6209r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a=C_alloc(4);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 366  error");
t3=*((C_word*)lf[4]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t1,lf[59]);}
else{
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_car(t2));}
else{
t4=(C_word)C_i_car(t2);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_6239,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_cdr(t2);
C_apply(4,0,t5,C_retrieve(lf[58]),t6);}}}

/* k6237 in list* in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_6239(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6239,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* butlast in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_6071(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[7],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6071,3,t0,t1,t2);}
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_END_OF_LIST);}
else{
t4=(C_word)C_i_cddr(t2);
if(C_truep((C_word)C_i_nullp(t4))){
t5=(C_word)C_i_car(t2);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_a_i_list(&a,1,t5));}
else{
t5=(C_word)C_i_car(t2);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_6105,a[2]=t5,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_cdr(t2);
C_trace("ChickenBridge.scm: 366  butlast");
t8=C_retrieve(lf[57]);
((C_proc3)C_retrieve_proc(t8))(3,t8,t6,t7);}}}

/* k6103 in butlast in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_6105(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6105,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* last in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_6048(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6048,3,t0,t1,t2);}
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_car(t2));}
else{
t4=(C_word)C_i_cdr(t2);
C_trace("ChickenBridge.scm: 366  last");
t5=C_retrieve(lf[56]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t1,t4);}}

/* rest in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_6042(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6042,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_cdr(t2));}

/* tenth in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_6027(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6027,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=(C_word)C_i_cddddr(t3);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_i_cadr(t4));}

/* ninth in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_6013(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6013,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=(C_word)C_i_cddddr(t3);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_i_car(t4));}

/* eighth in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_6003(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6003,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_cadddr(t3));}

/* seventh in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_5993(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_5993,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_caddr(t3));}

/* sixth in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_5983(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_5983,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_cadr(t3));}

/* fifth in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_5973(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_5973,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_car(t3));}

/* chdir in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_5944(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+3)){
C_save_and_reclaim((void*)tr2rv,(void*)f_5944r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest_vector(a,C_rest_count(0));
f_5944r(t0,t1,t2);}}

static void C_ccall f_5944r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word *a=C_alloc(3);
t3=(C_word)C_vemptyp(t2);
t4=(C_truep(t3)?lf[45]:(C_word)C_i_vector_ref(t2,C_fix(0)));
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5953,a[2]=((C_word)li15),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t5+1)))(3,t5,t1,t4);}

/* f_5953 in chdir in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_5953(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_5953,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5958,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep(t2)){
t4=(C_word)C_i_foreign_string_argumentp(t2);
C_trace("##sys#make-c-string");
t5=C_retrieve(lf[46]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}
else{
t4=t3;
f_5958(2,t4,C_SCHEME_FALSE);}}

/* k5956 */
static void C_ccall f_5958(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub95(C_SCHEME_UNDEFINED,t1));}

/* cwd in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_5933(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5933,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5938,a[2]=((C_word)li13),tmp=(C_word)a,a+=3,tmp);
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,t1);}

/* f_5938 in cwd in k5929 in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_5938(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5938,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
C_trace("##sys#peek-c-string");
t3=*((C_word*)lf[43]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,(C_word)stub90(t2),C_fix(0));}

/* expand-send in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_5640(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[17],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_5640,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=t4;
t7=(C_truep(t6)?t6:(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5920,a[2]=((C_word)li5),tmp=(C_word)a,a+=3,tmp));
t8=t4;
t9=(C_truep(t8)?(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5909,a[2]=((C_word)li6),tmp=(C_word)a,a+=3,tmp):(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5918,a[2]=((C_word)li7),tmp=(C_word)a,a+=3,tmp));
t10=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_5650,a[2]=t9,a[3]=t7,a[4]=t1,a[5]=t5,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_symbolp(t2))){
C_trace("ChickenBridge.scm: 272  symbol->string");
t11=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t11))(3,t11,t10,t2);}
else{
t11=t10;
f_5650(2,t11,t2);}}

/* k5648 in expand-send in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_5650(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5650,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_5653,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5901,a[2]=((C_word)li11),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 273  hash-table-ref");
t4=*((C_word*)lf[41]+1);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,C_retrieve(lf[29]),t1,t3);}

/* a5900 in k5648 in expand-send in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_5901(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5901,2,t0,t1);}
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}

/* k5651 in k5648 in expand-send in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_5653(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5653,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_5656,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t1,a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
t3=t1;
if(C_truep(t3)){
t4=t2;
f_5656(2,t4,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 274  ferror");
t4=((C_word*)t0)[4];
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[40],((C_word*)t0)[3]);}}

/* k5654 in k5651 in k5648 in expand-send in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_5656(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5656,2,t0,t1);}
t2=((C_word*)((C_word*)t0)[7])[1];
t3=(C_word)C_i_car(((C_word*)t0)[6]);
t4=(C_word)C_i_cdr(((C_word*)t0)[6]);
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(C_word)C_i_length(t4);
t8=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_5671,a[2]=t2,a[3]=t7,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=t6,a[8]=t4,a[9]=((C_word*)t0)[7],a[10]=t3,a[11]=((C_word*)t0)[5],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nequalp(t7,C_fix(1)))){
t9=(C_word)C_i_car(t4);
t10=t8;
f_5671(t10,(C_word)C_eqp(t9,lf[39]));}
else{
t9=t8;
f_5671(t9,C_SCHEME_FALSE);}}

/* k5669 in k5654 in k5651 in k5648 in expand-send in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_5671(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_5671,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[11];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[10],((C_word*)((C_word*)t0)[9])[1]));}
else{
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_5681,a[2]=((C_word*)t0)[11],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[9],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 288  append");
t3=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)t0)[8],C_SCHEME_END_OF_LIST);}}

/* k5679 in k5669 in k5654 in k5651 in k5648 in expand-send in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_5681(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5681,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_5683,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=t3,a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word)li10),tmp=(C_word)a,a+=13,tmp));
t5=((C_word*)t3)[1];
f_5683(t5,((C_word*)t0)[2],t1,C_SCHEME_FALSE,C_SCHEME_FALSE,C_fix(0));}

/* do63 in k5679 in k5669 in k5654 in k5651 in k5648 in expand-send in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_5683(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_5683,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[11])[1]))){
t9=C_SCHEME_UNDEFINED;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_set_block_item(t10,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_5695,a[2]=((C_word*)t0)[9],a[3]=t10,a[4]=t2,a[5]=((C_word*)t0)[10],a[6]=((C_word)li8),tmp=(C_word)a,a+=7,tmp));
t12=((C_word*)t10)[1];
f_5695(t12,t1,t2);}
else{
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_5736,a[2]=t8,a[3]=t7,a[4]=t6,a[5]=t2,a[6]=t1,a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
t10=(*a=C_CLOSURE_TYPE|14,a[1]=(C_word)f_5742,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t8,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=t2,a[9]=t7,a[10]=((C_word*)t0)[9],a[11]=t6,a[12]=((C_word*)t0)[11],a[13]=t9,a[14]=((C_word*)t0)[7],tmp=(C_word)a,a+=15,tmp);
t11=((C_word*)((C_word*)t0)[7])[1];
if(C_truep(t11)){
t12=t10;
f_5742(2,t12,C_SCHEME_FALSE);}
else{
t12=(C_word)C_i_car(((C_word*)((C_word*)t0)[11])[1]);
C_trace("ChickenBridge.scm: 303  keyword?");
t13=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t13))(3,t13,t10,t12);}}}

/* k5740 in do63 in k5679 in k5669 in k5654 in k5651 in k5648 in expand-send in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_5742(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5742,2,t0,t1);}
if(C_truep(t1)){
t2=C_set_block_item(((C_word*)t0)[14],0,C_SCHEME_TRUE);
t3=((C_word*)t0)[13];
f_5736(t3,t2);}
else{
t2=((C_word*)((C_word*)t0)[14])[1];
if(C_truep(t2)){
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[12])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[11])+1,t3);
t5=(C_word)C_i_assoc(((C_word*)((C_word*)t0)[11])[1],((C_word*)t0)[10]);
t6=C_mutate(((C_word *)((C_word*)t0)[9])+1,t5);
t7=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[12])[1]);
t8=C_mutate(((C_word *)((C_word*)t0)[12])+1,t7);
t9=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_5796,a[2]=((C_word*)t0)[11],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[13],a[7]=((C_word*)t0)[12],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
t10=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_5869,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t9,a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[12],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 324  keyword?");
t11=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t11))(3,t11,t10,((C_word*)((C_word*)t0)[11])[1]);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_5752,a[2]=((C_word*)t0)[13],a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]))){
t4=(C_word)C_i_length(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 314  ferror");
t5=((C_word*)t0)[7];
((C_proc6)C_retrieve_proc(t5))(6,t5,t3,lf[38],((C_word*)t0)[6],((C_word*)t0)[3],t4);}
else{
t4=t3;
f_5752(2,t4,C_SCHEME_UNDEFINED);}}}}

/* k5750 in k5740 in do63 in k5679 in k5669 in k5654 in k5651 in k5648 in expand-send in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_5752(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5752,2,t0,t1);}
t2=(C_word)C_i_list_tail(((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t4=(C_word)C_i_set_car(t2,t3);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[4])[1],C_fix(1));
t8=C_mutate(((C_word *)((C_word*)t0)[4])+1,t7);
t9=((C_word*)t0)[2];
f_5736(t9,t8);}

/* k5867 in k5740 in do63 in k5679 in k5669 in k5654 in k5651 in k5648 in expand-send in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_5869(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5869,2,t0,t1);}
if(C_truep(t1)){
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[9])[1]))){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_5842,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 329  keyname");
t3=((C_word*)t0)[5];
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[4])[1]);}
else{
t2=((C_word*)((C_word*)t0)[3])[1];
if(C_truep(t2)){
t3=((C_word*)t0)[7];
f_5796(2,t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_5855,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_5857,a[2]=((C_word*)t0)[5],a[3]=((C_word)li9),tmp=(C_word)a,a+=4,tmp);
C_trace("map");
t5=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t3,t4,((C_word*)t0)[2]);}}}
else{
C_trace("ChickenBridge.scm: 325  ferror");
t2=((C_word*)t0)[8];
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[7],lf[37],((C_word*)t0)[6],((C_word*)((C_word*)t0)[4])[1]);}}

/* a5856 in k5867 in k5740 in do63 in k5679 in k5669 in k5654 in k5651 in k5648 in expand-send in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_5857(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_5857,3,t0,t1,t2);}
t3=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 333  keyname");
t4=((C_word*)t0)[2];
((C_proc3)C_retrieve_proc(t4))(3,t4,t1,t3);}

/* k5853 in k5867 in k5740 in do63 in k5679 in k5669 in k5654 in k5651 in k5648 in expand-send in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_5855(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 331  ferror");
t2=((C_word*)t0)[5];
((C_proc6)C_retrieve_proc(t2))(6,t2,((C_word*)t0)[4],lf[36],((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k5840 in k5867 in k5740 in do63 in k5679 in k5669 in k5654 in k5651 in k5648 in expand-send in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_5842(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 328  ferror");
t2=((C_word*)t0)[4];
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[3],lf[35],((C_word*)t0)[2],t1);}

/* k5794 in k5740 in do63 in k5679 in k5669 in k5654 in k5651 in k5648 in expand-send in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_5796(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5796,2,t0,t1);}
t2=(C_word)C_i_member(((C_word*)((C_word*)t0)[9])[1],((C_word*)t0)[8]);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_5802,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],tmp=(C_word)a,a+=5,tmp);
if(C_truep(t2)){
t4=t3;
f_5802(2,t4,C_SCHEME_UNDEFINED);}
else{
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_5823,a[2]=((C_word*)t0)[4],a[3]=t3,a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 340  keyname");
t5=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,((C_word*)((C_word*)t0)[2])[1]);}}

/* k5821 in k5794 in k5740 in do63 in k5679 in k5669 in k5654 in k5651 in k5648 in expand-send in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_5823(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 339  ferror");
t2=((C_word*)t0)[4];
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[3],lf[34],((C_word*)t0)[2],t1);}

/* k5800 in k5794 in k5740 in do63 in k5679 in k5669 in k5654 in k5651 in k5648 in expand-send in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_5802(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_i_set_car(((C_word*)t0)[3],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t4);
t6=((C_word*)t0)[2];
f_5736(t6,t5);}

/* k5734 in do63 in k5679 in k5669 in k5654 in k5651 in k5648 in expand-send in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_5736(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[7])[1];
f_5683(t2,((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* do69 in do63 in k5679 in k5669 in k5654 in k5651 in k5648 in expand-send in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_5695(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_5695,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[5],((C_word*)t0)[4]));}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_5708,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_member(t4,((C_word*)t0)[2]))){
t5=(C_word)C_i_car(t2);
t6=(C_word)C_i_cadr(t5);
t7=t3;
f_5708(t7,(C_word)C_i_set_car(t2,t6));}
else{
t5=t3;
f_5708(t5,C_SCHEME_UNDEFINED);}}}

/* k5706 in do69 in do63 in k5679 in k5669 in k5654 in k5651 in k5648 in expand-send in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_fcall f_5708(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_5695(t3,((C_word*)t0)[2],t2);}

/* f_5918 in expand-send in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_5918(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_5918,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}

/* f_5909 in expand-send in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_5909(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_5909,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5917,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 270  keyword->string");
t4=C_retrieve(lf[33]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k5915 */
static void C_ccall f_5917(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 270  sprintf");
t2=C_retrieve(lf[31]);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],lf[32],t1);}

/* f_5920 in expand-send in k5636 in k5633 in k5629 in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_5920(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+3)){
C_save_and_reclaim((void*)tr3r,(void*)f_5920r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_5920r(t0,t1,t2,t3);}}

static void C_ccall f_5920r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a=C_alloc(3);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5928,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_apply(5,0,t4,C_retrieve(lf[31]),t2,t3);}

/* k5926 */
static void C_ccall f_5928(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 266  error");
t2=*((C_word*)lf[4]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* expand-optkeys in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_5342(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_5342,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_5503,a[2]=t4,a[3]=t2,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5595,a[2]=((C_word)li3),tmp=(C_word)a,a+=3,tmp);
C_trace("map");
t7=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t7+1)))(4,t7,t5,t6,t3);}

/* a5594 in expand-optkeys in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_5595(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[14],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_5595,3,t0,t1,t2);}
if(C_truep((C_word)C_i_pairp(t2))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_5609,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5613,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 218  symbol->string");
t6=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t6))(3,t6,t4,t5);}
else{
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_5624,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5628,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 219  symbol->string");
t5=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}}

/* k5626 in a5594 in expand-optkeys in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_5628(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 219  gensym");
t2=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k5622 in a5594 in expand-optkeys in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_5624(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5624,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_list(&a,3,t1,((C_word*)t0)[2],C_SCHEME_FALSE));}

/* k5611 in a5594 in expand-optkeys in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_5613(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 218  gensym");
t2=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k5607 in a5594 in expand-optkeys in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_5609(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5609,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[2]));}

/* k5501 in expand-optkeys in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_5503(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5503,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_5506,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 221  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[28]);}

/* k5504 in k5501 in expand-optkeys in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_5506(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5506,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_5509,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 222  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[27]);}

/* k5507 in k5504 in k5501 in expand-optkeys in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_5509(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5509,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_5512,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_5589,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t1,a[5]=((C_word)li2),tmp=(C_word)a,a+=6,tmp);
C_trace("map");
t4=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,t2,t3,((C_word*)t0)[2]);}

/* a5588 in k5507 in k5504 in k5501 in expand-optkeys in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_5589(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[11],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_5589,3,t0,t1,t2);}
t3=((C_word*)t0)[4];
t4=((C_word*)t0)[3];
t5=((C_word*)t0)[2];
t6=(C_word)C_i_car(t2);
t7=(C_word)C_i_cadr(t2);
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_5355,a[2]=t1,a[3]=t3,a[4]=t7,a[5]=t5,a[6]=t4,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
t9=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5414,a[2]=t8,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 182  symbol->string");
t10=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t10))(3,t10,t9,t7);}

/* k5412 in a5588 in k5507 in k5504 in k5501 in expand-optkeys in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_5414(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 182  string->keyword");
t2=C_retrieve(lf[24]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k5353 in a5588 in k5507 in k5504 in k5501 in expand-optkeys in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_5355(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[120],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5355,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
t3=(C_word)C_a_i_list(&a,3,lf[4],lf[19],t1);
t4=(C_word)C_a_i_list(&a,3,lf[20],((C_word*)t0)[7],t3);
t5=(C_word)C_a_i_list(&a,2,lf[15],((C_word*)t0)[6]);
t6=(C_word)C_a_i_list(&a,2,lf[3],t5);
t7=(C_word)C_a_i_list(&a,3,lf[4],lf[21],((C_word*)t0)[5]);
t8=(C_word)C_a_i_list(&a,2,lf[22],((C_word*)t0)[6]);
t9=(C_word)C_a_i_list(&a,4,lf[20],t6,t7,t8);
t10=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[4],t9);
t11=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[7],C_SCHEME_TRUE);
t12=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[3],C_SCHEME_TRUE);
t13=(C_word)C_a_i_list(&a,2,lf[23],((C_word*)t0)[6]);
t14=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[6],t13);
t15=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t15+1)))(2,t15,(C_word)C_a_i_list(&a,6,t2,t4,t10,t11,t12,t14));}

/* k5510 in k5507 in k5504 in k5501 in expand-optkeys in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_5512(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5512,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_5519,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
C_trace("map");
t3=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t2,*((C_word*)lf[15]+1),((C_word*)t0)[2]);}

/* k5517 in k5510 in k5507 in k5504 in k5501 in expand-optkeys in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_5519(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5519,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_5531,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=t1,a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_5565,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5579,a[2]=((C_word)li1),tmp=(C_word)a,a+=3,tmp);
C_trace("map");
t5=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t3,t4,((C_word*)t0)[2]);}

/* a5578 in k5517 in k5510 in k5507 in k5504 in k5501 in expand-optkeys in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_5579(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_5579,3,t0,t1,t2);}
t3=(C_word)C_i_car(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_list(&a,2,t3,C_SCHEME_FALSE));}

/* k5563 in k5517 in k5510 in k5507 in k5504 in k5501 in expand-optkeys in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_5565(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5565,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,((C_word*)t0)[5],((C_word*)t0)[4]);
t3=(C_word)C_a_i_list(&a,2,((C_word*)t0)[3],C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,2,t2,t3);
C_trace("ChickenBridge.scm: 228  append");
t5=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,((C_word*)t0)[2],t1,t4);}

/* k5529 in k5517 in k5510 in k5507 in k5504 in k5501 in expand-optkeys in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_5531(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5531,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_5535,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_5539,a[2]=t2,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_5557,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word)li0),tmp=(C_word)a,a+=7,tmp);
C_trace("map");
t5=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t3,t4,((C_word*)t0)[2]);}

/* a5556 in k5529 in k5517 in k5510 in k5507 in k5504 in k5501 in expand-optkeys in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_5557(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word ab[119],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_5557,3,t0,t1,t2);}
t3=((C_word*)t0)[5];
t4=((C_word*)t0)[4];
t5=((C_word*)t0)[3];
t6=((C_word*)t0)[2];
t7=(C_word)C_a_i_list(&a,2,lf[3],t4);
t8=(C_word)C_a_i_list(&a,2,lf[8],t4);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_5492,a[2]=t7,a[3]=t1,a[4]=t8,tmp=(C_word)a,a+=5,tmp);
t10=(C_word)C_i_car(t2);
t11=(C_word)C_i_cadr(t2);
t12=(C_word)C_a_i_list(&a,3,lf[4],lf[10],t5);
t13=(C_word)C_a_i_list(&a,3,lf[11],t3,t12);
t14=(C_word)C_a_i_list(&a,2,lf[8],t4);
t15=(C_word)C_a_i_list(&a,3,lf[12],t11,t14);
t16=(C_word)C_a_i_list(&a,2,lf[13],t11);
t17=(C_word)C_a_i_list(&a,3,lf[4],lf[14],t11);
t18=(C_word)C_a_i_list(&a,3,lf[11],t16,t17);
t19=(C_word)C_a_i_list(&a,3,lf[12],t10,C_SCHEME_TRUE);
t20=(C_word)C_a_i_list(&a,2,lf[15],t4);
t21=(C_word)C_a_i_list(&a,3,lf[12],t4,t20);
t22=(C_word)C_a_i_list(&a,6,lf[16],t13,t15,t18,t19,t21);
t23=(C_word)C_a_i_list(&a,1,t22);
C_trace("##sys#append");
t24=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t24+1)))(4,t24,t9,t6,t23);}

/* k5490 in a5556 in k5529 in k5517 in k5510 in k5507 in k5504 in k5501 in expand-optkeys in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_5492(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5492,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t1);
t3=(C_word)C_a_i_cons(&a,2,lf[9],t2);
t4=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_list(&a,3,lf[6],((C_word*)t0)[2],t3));}

/* k5537 in k5529 in k5517 in k5510 in k5507 in k5504 in k5501 in expand-optkeys in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_5539(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5539,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,lf[3],((C_word*)t0)[5]);
t3=(C_word)C_a_i_list(&a,3,lf[4],lf[5],((C_word*)t0)[4]);
t4=(C_word)C_a_i_list(&a,3,lf[6],t2,t3);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)t0)[3]);
C_trace("##sys#append");
t6=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t6+1)))(4,t6,((C_word*)t0)[2],t1,t5);}

/* k5533 in k5529 in k5517 in k5510 in k5507 in k5504 in k5501 in expand-optkeys in k5338 in k5335 in k5332 in k5329 */
static void C_ccall f_5535(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5535,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t1);
t3=(C_word)C_a_i_cons(&a,2,lf[1],t2);
t4=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_list(&a,3,lf[2],((C_word*)t0)[2],t3));}

#ifdef C_ENABLE_PTABLES
static C_PTABLE_ENTRY ptable[2256] = {
{"toplevelChickenBridge.scm",(void*)C_grace_toplevel},
{"f_5331ChickenBridge.scm",(void*)f_5331},
{"f_5334ChickenBridge.scm",(void*)f_5334},
{"f_5337ChickenBridge.scm",(void*)f_5337},
{"f_5340ChickenBridge.scm",(void*)f_5340},
{"f_33790ChickenBridge.scm",(void*)f_33790},
{"f_5631ChickenBridge.scm",(void*)f_5631},
{"f_5635ChickenBridge.scm",(void*)f_5635},
{"f_33738ChickenBridge.scm",(void*)f_33738},
{"f_33785ChickenBridge.scm",(void*)f_33785},
{"f_33775ChickenBridge.scm",(void*)f_33775},
{"f_33742ChickenBridge.scm",(void*)f_33742},
{"f_5638ChickenBridge.scm",(void*)f_5638},
{"f_33732ChickenBridge.scm",(void*)f_33732},
{"f_5931ChickenBridge.scm",(void*)f_5931},
{"f_8071ChickenBridge.scm",(void*)f_8071},
{"f_33516ChickenBridge.scm",(void*)f_33516},
{"f_33730ChickenBridge.scm",(void*)f_33730},
{"f_33550ChickenBridge.scm",(void*)f_33550},
{"f_33562ChickenBridge.scm",(void*)f_33562},
{"f_33566ChickenBridge.scm",(void*)f_33566},
{"f_33570ChickenBridge.scm",(void*)f_33570},
{"f_33714ChickenBridge.scm",(void*)f_33714},
{"f_33576ChickenBridge.scm",(void*)f_33576},
{"f_33596ChickenBridge.scm",(void*)f_33596},
{"f_33599ChickenBridge.scm",(void*)f_33599},
{"f_33607ChickenBridge.scm",(void*)f_33607},
{"f_33614ChickenBridge.scm",(void*)f_33614},
{"f_33617ChickenBridge.scm",(void*)f_33617},
{"f_33621ChickenBridge.scm",(void*)f_33621},
{"f_33628ChickenBridge.scm",(void*)f_33628},
{"f_33631ChickenBridge.scm",(void*)f_33631},
{"f_33635ChickenBridge.scm",(void*)f_33635},
{"f_33642ChickenBridge.scm",(void*)f_33642},
{"f_33586ChickenBridge.scm",(void*)f_33586},
{"f_33539ChickenBridge.scm",(void*)f_33539},
{"f_33529ChickenBridge.scm",(void*)f_33529},
{"f_33532ChickenBridge.scm",(void*)f_33532},
{"f_8074ChickenBridge.scm",(void*)f_8074},
{"f_33502ChickenBridge.scm",(void*)f_33502},
{"f_33510ChickenBridge.scm",(void*)f_33510},
{"f_33514ChickenBridge.scm",(void*)f_33514},
{"f_15809ChickenBridge.scm",(void*)f_15809},
{"f_15860ChickenBridge.scm",(void*)f_15860},
{"f_33492ChickenBridge.scm",(void*)f_33492},
{"f_33500ChickenBridge.scm",(void*)f_33500},
{"f_15965ChickenBridge.scm",(void*)f_15965},
{"f_33389ChickenBridge.scm",(void*)f_33389},
{"f_33452ChickenBridge.scm",(void*)f_33452},
{"f_33456ChickenBridge.scm",(void*)f_33456},
{"f_33470ChickenBridge.scm",(void*)f_33470},
{"f_33392ChickenBridge.scm",(void*)f_33392},
{"f_33412ChickenBridge.scm",(void*)f_33412},
{"f_33416ChickenBridge.scm",(void*)f_33416},
{"f_15968ChickenBridge.scm",(void*)f_15968},
{"f_33375ChickenBridge.scm",(void*)f_33375},
{"f_33383ChickenBridge.scm",(void*)f_33383},
{"f_33387ChickenBridge.scm",(void*)f_33387},
{"f_16161ChickenBridge.scm",(void*)f_16161},
{"f_33349ChickenBridge.scm",(void*)f_33349},
{"f_33353ChickenBridge.scm",(void*)f_33353},
{"f_33359ChickenBridge.scm",(void*)f_33359},
{"f_33370ChickenBridge.scm",(void*)f_33370},
{"f_33366ChickenBridge.scm",(void*)f_33366},
{"f_16230ChickenBridge.scm",(void*)f_16230},
{"f_33327ChickenBridge.scm",(void*)f_33327},
{"f_17475ChickenBridge.scm",(void*)f_17475},
{"f_33307ChickenBridge.scm",(void*)f_33307},
{"f_17478ChickenBridge.scm",(void*)f_17478},
{"f_33267ChickenBridge.scm",(void*)f_33267},
{"f_17481ChickenBridge.scm",(void*)f_17481},
{"f_33173ChickenBridge.scm",(void*)f_33173},
{"f_33177ChickenBridge.scm",(void*)f_33177},
{"f_33180ChickenBridge.scm",(void*)f_33180},
{"f_33198ChickenBridge.scm",(void*)f_33198},
{"f_33201ChickenBridge.scm",(void*)f_33201},
{"f_33232ChickenBridge.scm",(void*)f_33232},
{"f_33204ChickenBridge.scm",(void*)f_33204},
{"f_33210ChickenBridge.scm",(void*)f_33210},
{"f_33163ChickenBridge.scm",(void*)f_33163},
{"f_33157ChickenBridge.scm",(void*)f_33157},
{"f_17484ChickenBridge.scm",(void*)f_17484},
{"f_33065ChickenBridge.scm",(void*)f_33065},
{"f_33067ChickenBridge.scm",(void*)f_33067},
{"f_33071ChickenBridge.scm",(void*)f_33071},
{"f_33074ChickenBridge.scm",(void*)f_33074},
{"f_33077ChickenBridge.scm",(void*)f_33077},
{"f_33117ChickenBridge.scm",(void*)f_33117},
{"f_33109ChickenBridge.scm",(void*)f_33109},
{"f_33080ChickenBridge.scm",(void*)f_33080},
{"f_33083ChickenBridge.scm",(void*)f_33083},
{"f_33086ChickenBridge.scm",(void*)f_33086},
{"f_33057ChickenBridge.scm",(void*)f_33057},
{"f_17487ChickenBridge.scm",(void*)f_17487},
{"f_33029ChickenBridge.scm",(void*)f_33029},
{"f_17490ChickenBridge.scm",(void*)f_17490},
{"f_32993ChickenBridge.scm",(void*)f_32993},
{"f_33005ChickenBridge.scm",(void*)f_33005},
{"f_33001ChickenBridge.scm",(void*)f_33001},
{"f_32975ChickenBridge.scm",(void*)f_32975},
{"f_32969ChickenBridge.scm",(void*)f_32969},
{"f_17493ChickenBridge.scm",(void*)f_17493},
{"f_32883ChickenBridge.scm",(void*)f_32883},
{"f_32887ChickenBridge.scm",(void*)f_32887},
{"f_32890ChickenBridge.scm",(void*)f_32890},
{"f_32893ChickenBridge.scm",(void*)f_32893},
{"f_32906ChickenBridge.scm",(void*)f_32906},
{"f_32852ChickenBridge.scm",(void*)f_32852},
{"f_32856ChickenBridge.scm",(void*)f_32856},
{"f_32871ChickenBridge.scm",(void*)f_32871},
{"f_32846ChickenBridge.scm",(void*)f_32846},
{"f_17496ChickenBridge.scm",(void*)f_17496},
{"f_32732ChickenBridge.scm",(void*)f_32732},
{"f_32748ChickenBridge.scm",(void*)f_32748},
{"f_32759ChickenBridge.scm",(void*)f_32759},
{"f_32726ChickenBridge.scm",(void*)f_32726},
{"f_17552ChickenBridge.scm",(void*)f_17552},
{"f_32593ChickenBridge.scm",(void*)f_32593},
{"f_32616ChickenBridge.scm",(void*)f_32616},
{"f_32613ChickenBridge.scm",(void*)f_32613},
{"f_32587ChickenBridge.scm",(void*)f_32587},
{"f_17555ChickenBridge.scm",(void*)f_17555},
{"f_32441ChickenBridge.scm",(void*)f_32441},
{"f_32459ChickenBridge.scm",(void*)f_32459},
{"f_32468ChickenBridge.scm",(void*)f_32468},
{"f_32435ChickenBridge.scm",(void*)f_32435},
{"f_17558ChickenBridge.scm",(void*)f_17558},
{"f_32388ChickenBridge.scm",(void*)f_32388},
{"f_32392ChickenBridge.scm",(void*)f_32392},
{"f_32395ChickenBridge.scm",(void*)f_32395},
{"f_32411ChickenBridge.scm",(void*)f_32411},
{"f_32370ChickenBridge.scm",(void*)f_32370},
{"f_32364ChickenBridge.scm",(void*)f_32364},
{"f_17561ChickenBridge.scm",(void*)f_17561},
{"f_32288ChickenBridge.scm",(void*)f_32288},
{"f_17700ChickenBridge.scm",(void*)f_17700},
{"f_32214ChickenBridge.scm",(void*)f_32214},
{"f_32221ChickenBridge.scm",(void*)f_32221},
{"f_32208ChickenBridge.scm",(void*)f_32208},
{"f_17703ChickenBridge.scm",(void*)f_17703},
{"f_32104ChickenBridge.scm",(void*)f_32104},
{"f_32112ChickenBridge.scm",(void*)f_32112},
{"f_32078ChickenBridge.scm",(void*)f_32078},
{"f_32095ChickenBridge.scm",(void*)f_32095},
{"f_32086ChickenBridge.scm",(void*)f_32086},
{"f_32072ChickenBridge.scm",(void*)f_32072},
{"f_17706ChickenBridge.scm",(void*)f_17706},
{"f_32028ChickenBridge.scm",(void*)f_32028},
{"f_17709ChickenBridge.scm",(void*)f_17709},
{"f_31946ChickenBridge.scm",(void*)f_31946},
{"f_31957ChickenBridge.scm",(void*)f_31957},
{"f_31959ChickenBridge.scm",(void*)f_31959},
{"f_31988ChickenBridge.scm",(void*)f_31988},
{"f_31924ChickenBridge.scm",(void*)f_31924},
{"f_31940ChickenBridge.scm",(void*)f_31940},
{"f_31918ChickenBridge.scm",(void*)f_31918},
{"f_17712ChickenBridge.scm",(void*)f_17712},
{"f_31871ChickenBridge.scm",(void*)f_31871},
{"f_31875ChickenBridge.scm",(void*)f_31875},
{"f_31882ChickenBridge.scm",(void*)f_31882},
{"f_31849ChickenBridge.scm",(void*)f_31849},
{"f_31865ChickenBridge.scm",(void*)f_31865},
{"f_31843ChickenBridge.scm",(void*)f_31843},
{"f_17715ChickenBridge.scm",(void*)f_17715},
{"f_31711ChickenBridge.scm",(void*)f_31711},
{"f_31751ChickenBridge.scm",(void*)f_31751},
{"f_31715ChickenBridge.scm",(void*)f_31715},
{"f_31731ChickenBridge.scm",(void*)f_31731},
{"f_31743ChickenBridge.scm",(void*)f_31743},
{"f_31747ChickenBridge.scm",(void*)f_31747},
{"f_31739ChickenBridge.scm",(void*)f_31739},
{"f_31650ChickenBridge.scm",(void*)f_31650},
{"f_31697ChickenBridge.scm",(void*)f_31697},
{"f_31657ChickenBridge.scm",(void*)f_31657},
{"f_31668ChickenBridge.scm",(void*)f_31668},
{"f_31644ChickenBridge.scm",(void*)f_31644},
{"f_17718ChickenBridge.scm",(void*)f_17718},
{"f_31624ChickenBridge.scm",(void*)f_31624},
{"f_31618ChickenBridge.scm",(void*)f_31618},
{"f_17721ChickenBridge.scm",(void*)f_17721},
{"f_31598ChickenBridge.scm",(void*)f_31598},
{"f_31602ChickenBridge.scm",(void*)f_31602},
{"f_31590ChickenBridge.scm",(void*)f_31590},
{"f_17724ChickenBridge.scm",(void*)f_17724},
{"f_31570ChickenBridge.scm",(void*)f_31570},
{"f_31574ChickenBridge.scm",(void*)f_31574},
{"f_31562ChickenBridge.scm",(void*)f_31562},
{"f_17727ChickenBridge.scm",(void*)f_17727},
{"f_31542ChickenBridge.scm",(void*)f_31542},
{"f_31546ChickenBridge.scm",(void*)f_31546},
{"f_31534ChickenBridge.scm",(void*)f_31534},
{"f_17730ChickenBridge.scm",(void*)f_17730},
{"f_31514ChickenBridge.scm",(void*)f_31514},
{"f_31518ChickenBridge.scm",(void*)f_31518},
{"f_31506ChickenBridge.scm",(void*)f_31506},
{"f_17733ChickenBridge.scm",(void*)f_17733},
{"f_31405ChickenBridge.scm",(void*)f_31405},
{"f_31375ChickenBridge.scm",(void*)f_31375},
{"f_31399ChickenBridge.scm",(void*)f_31399},
{"f_31369ChickenBridge.scm",(void*)f_31369},
{"f_17736ChickenBridge.scm",(void*)f_17736},
{"f_31319ChickenBridge.scm",(void*)f_31319},
{"f_31321ChickenBridge.scm",(void*)f_31321},
{"f_31325ChickenBridge.scm",(void*)f_31325},
{"f_31353ChickenBridge.scm",(void*)f_31353},
{"f_31345ChickenBridge.scm",(void*)f_31345},
{"f_31341ChickenBridge.scm",(void*)f_31341},
{"f_31328ChickenBridge.scm",(void*)f_31328},
{"f_31311ChickenBridge.scm",(void*)f_31311},
{"f_17739ChickenBridge.scm",(void*)f_17739},
{"f_31258ChickenBridge.scm",(void*)f_31258},
{"f_31260ChickenBridge.scm",(void*)f_31260},
{"f_31264ChickenBridge.scm",(void*)f_31264},
{"f_31295ChickenBridge.scm",(void*)f_31295},
{"f_31287ChickenBridge.scm",(void*)f_31287},
{"f_31283ChickenBridge.scm",(void*)f_31283},
{"f_31267ChickenBridge.scm",(void*)f_31267},
{"f_31270ChickenBridge.scm",(void*)f_31270},
{"f_31250ChickenBridge.scm",(void*)f_31250},
{"f_17742ChickenBridge.scm",(void*)f_17742},
{"f_31200ChickenBridge.scm",(void*)f_31200},
{"f_31214ChickenBridge.scm",(void*)f_31214},
{"f_31206ChickenBridge.scm",(void*)f_31206},
{"f_31165ChickenBridge.scm",(void*)f_31165},
{"f_31198ChickenBridge.scm",(void*)f_31198},
{"f_31159ChickenBridge.scm",(void*)f_31159},
{"f_17745ChickenBridge.scm",(void*)f_17745},
{"f_31106ChickenBridge.scm",(void*)f_31106},
{"f_31110ChickenBridge.scm",(void*)f_31110},
{"f_31123ChickenBridge.scm",(void*)f_31123},
{"f_31115ChickenBridge.scm",(void*)f_31115},
{"f_31063ChickenBridge.scm",(void*)f_31063},
{"f_31096ChickenBridge.scm",(void*)f_31096},
{"f_31057ChickenBridge.scm",(void*)f_31057},
{"f_17748ChickenBridge.scm",(void*)f_17748},
{"f_30977ChickenBridge.scm",(void*)f_30977},
{"f_30971ChickenBridge.scm",(void*)f_30971},
{"f_17751ChickenBridge.scm",(void*)f_17751},
{"f_30740ChickenBridge.scm",(void*)f_30740},
{"f_30744ChickenBridge.scm",(void*)f_30744},
{"f_30752ChickenBridge.scm",(void*)f_30752},
{"f_30775ChickenBridge.scm",(void*)f_30775},
{"f_30778ChickenBridge.scm",(void*)f_30778},
{"f_30781ChickenBridge.scm",(void*)f_30781},
{"f_30784ChickenBridge.scm",(void*)f_30784},
{"f_30844ChickenBridge.scm",(void*)f_30844},
{"f_30851ChickenBridge.scm",(void*)f_30851},
{"f_30861ChickenBridge.scm",(void*)f_30861},
{"f_30871ChickenBridge.scm",(void*)f_30871},
{"f_30885ChickenBridge.scm",(void*)f_30885},
{"f_30895ChickenBridge.scm",(void*)f_30895},
{"f_30905ChickenBridge.scm",(void*)f_30905},
{"f_30915ChickenBridge.scm",(void*)f_30915},
{"f_30787ChickenBridge.scm",(void*)f_30787},
{"f_30811ChickenBridge.scm",(void*)f_30811},
{"f_30790ChickenBridge.scm",(void*)f_30790},
{"f_30697ChickenBridge.scm",(void*)f_30697},
{"f_30730ChickenBridge.scm",(void*)f_30730},
{"f_30691ChickenBridge.scm",(void*)f_30691},
{"f_17754ChickenBridge.scm",(void*)f_17754},
{"f_30609ChickenBridge.scm",(void*)f_30609},
{"f_30613ChickenBridge.scm",(void*)f_30613},
{"f_30619ChickenBridge.scm",(void*)f_30619},
{"f_30639ChickenBridge.scm",(void*)f_30639},
{"f_30583ChickenBridge.scm",(void*)f_30583},
{"f_30593ChickenBridge.scm",(void*)f_30593},
{"f_30577ChickenBridge.scm",(void*)f_30577},
{"f_17757ChickenBridge.scm",(void*)f_17757},
{"f_30454ChickenBridge.scm",(void*)f_30454},
{"f_30458ChickenBridge.scm",(void*)f_30458},
{"f_30386ChickenBridge.scm",(void*)f_30386},
{"f_30405ChickenBridge.scm",(void*)f_30405},
{"f_30440ChickenBridge.scm",(void*)f_30440},
{"f_30411ChickenBridge.scm",(void*)f_30411},
{"f_30415ChickenBridge.scm",(void*)f_30415},
{"f_30429ChickenBridge.scm",(void*)f_30429},
{"f_30418ChickenBridge.scm",(void*)f_30418},
{"f_30399ChickenBridge.scm",(void*)f_30399},
{"f_30380ChickenBridge.scm",(void*)f_30380},
{"f_17760ChickenBridge.scm",(void*)f_17760},
{"f_30108ChickenBridge.scm",(void*)f_30108},
{"f_18283ChickenBridge.scm",(void*)f_18283},
{"f_30060ChickenBridge.scm",(void*)f_30060},
{"f_30052ChickenBridge.scm",(void*)f_30052},
{"f_18286ChickenBridge.scm",(void*)f_18286},
{"f_29932ChickenBridge.scm",(void*)f_29932},
{"f_18292ChickenBridge.scm",(void*)f_18292},
{"f_18767ChickenBridge.scm",(void*)f_18767},
{"f_18801ChickenBridge.scm",(void*)f_18801},
{"f_18793ChickenBridge.scm",(void*)f_18793},
{"f_18789ChickenBridge.scm",(void*)f_18789},
{"f_18774ChickenBridge.scm",(void*)f_18774},
{"f_18778ChickenBridge.scm",(void*)f_18778},
{"f_18771ChickenBridge.scm",(void*)f_18771},
{"f_18310ChickenBridge.scm",(void*)f_18310},
{"f_18760ChickenBridge.scm",(void*)f_18760},
{"f_18756ChickenBridge.scm",(void*)f_18756},
{"f_18317ChickenBridge.scm",(void*)f_18317},
{"f_18631ChickenBridge.scm",(void*)f_18631},
{"f_18652ChickenBridge.scm",(void*)f_18652},
{"f_18654ChickenBridge.scm",(void*)f_18654},
{"f_18668ChickenBridge.scm",(void*)f_18668},
{"f_18721ChickenBridge.scm",(void*)f_18721},
{"f_18671ChickenBridge.scm",(void*)f_18671},
{"f_18706ChickenBridge.scm",(void*)f_18706},
{"f_18674ChickenBridge.scm",(void*)f_18674},
{"f_18687ChickenBridge.scm",(void*)f_18687},
{"f_18699ChickenBridge.scm",(void*)f_18699},
{"f_18691ChickenBridge.scm",(void*)f_18691},
{"f_18677ChickenBridge.scm",(void*)f_18677},
{"f_18641ChickenBridge.scm",(void*)f_18641},
{"f_18320ChickenBridge.scm",(void*)f_18320},
{"f_18595ChickenBridge.scm",(void*)f_18595},
{"f_18621ChickenBridge.scm",(void*)f_18621},
{"f_18606ChickenBridge.scm",(void*)f_18606},
{"f_18323ChickenBridge.scm",(void*)f_18323},
{"f_18327ChickenBridge.scm",(void*)f_18327},
{"f_18539ChickenBridge.scm",(void*)f_18539},
{"f_18549ChickenBridge.scm",(void*)f_18549},
{"f_18552ChickenBridge.scm",(void*)f_18552},
{"f_18573ChickenBridge.scm",(void*)f_18573},
{"f_18555ChickenBridge.scm",(void*)f_18555},
{"f_18559ChickenBridge.scm",(void*)f_18559},
{"f_18330ChickenBridge.scm",(void*)f_18330},
{"f_18333ChickenBridge.scm",(void*)f_18333},
{"f_18502ChickenBridge.scm",(void*)f_18502},
{"f_18510ChickenBridge.scm",(void*)f_18510},
{"f_18506ChickenBridge.scm",(void*)f_18506},
{"f_18336ChickenBridge.scm",(void*)f_18336},
{"f_18364ChickenBridge.scm",(void*)f_18364},
{"f_18367ChickenBridge.scm",(void*)f_18367},
{"f_18370ChickenBridge.scm",(void*)f_18370},
{"f_18373ChickenBridge.scm",(void*)f_18373},
{"f_18376ChickenBridge.scm",(void*)f_18376},
{"f_18435ChickenBridge.scm",(void*)f_18435},
{"f_29886ChickenBridge.scm",(void*)f_29886},
{"f_29902ChickenBridge.scm",(void*)f_29902},
{"f_29905ChickenBridge.scm",(void*)f_29905},
{"f_29908ChickenBridge.scm",(void*)f_29908},
{"f_29911ChickenBridge.scm",(void*)f_29911},
{"f_29922ChickenBridge.scm",(void*)f_29922},
{"f_29880ChickenBridge.scm",(void*)f_29880},
{"f_18808ChickenBridge.scm",(void*)f_18808},
{"f_29741ChickenBridge.scm",(void*)f_29741},
{"f_29780ChickenBridge.scm",(void*)f_29780},
{"f_29754ChickenBridge.scm",(void*)f_29754},
{"f_29735ChickenBridge.scm",(void*)f_29735},
{"f_18811ChickenBridge.scm",(void*)f_18811},
{"f_29323ChickenBridge.scm",(void*)f_29323},
{"f_29327ChickenBridge.scm",(void*)f_29327},
{"f_29339ChickenBridge.scm",(void*)f_29339},
{"f_29397ChickenBridge.scm",(void*)f_29397},
{"f_29400ChickenBridge.scm",(void*)f_29400},
{"f_29403ChickenBridge.scm",(void*)f_29403},
{"f_29615ChickenBridge.scm",(void*)f_29615},
{"f_29553ChickenBridge.scm",(void*)f_29553},
{"f_29587ChickenBridge.scm",(void*)f_29587},
{"f_29562ChickenBridge.scm",(void*)f_29562},
{"f_29573ChickenBridge.scm",(void*)f_29573},
{"f_29569ChickenBridge.scm",(void*)f_29569},
{"f_29412ChickenBridge.scm",(void*)f_29412},
{"f_29490ChickenBridge.scm",(void*)f_29490},
{"f_29531ChickenBridge.scm",(void*)f_29531},
{"f_29535ChickenBridge.scm",(void*)f_29535},
{"f_29539ChickenBridge.scm",(void*)f_29539},
{"f_29494ChickenBridge.scm",(void*)f_29494},
{"f_29498ChickenBridge.scm",(void*)f_29498},
{"f_29525ChickenBridge.scm",(void*)f_29525},
{"f_29501ChickenBridge.scm",(void*)f_29501},
{"f_29415ChickenBridge.scm",(void*)f_29415},
{"f_29487ChickenBridge.scm",(void*)f_29487},
{"f_29429ChickenBridge.scm",(void*)f_29429},
{"f_29431ChickenBridge.scm",(void*)f_29431},
{"f_29479ChickenBridge.scm",(void*)f_29479},
{"f_29450ChickenBridge.scm",(void*)f_29450},
{"f_29467ChickenBridge.scm",(void*)f_29467},
{"f_29453ChickenBridge.scm",(void*)f_29453},
{"f_29446ChickenBridge.scm",(void*)f_29446},
{"f_29418ChickenBridge.scm",(void*)f_29418},
{"f_29348ChickenBridge.scm",(void*)f_29348},
{"f_29358ChickenBridge.scm",(void*)f_29358},
{"f_29364ChickenBridge.scm",(void*)f_29364},
{"f_29336ChickenBridge.scm",(void*)f_29336},
{"f_29284ChickenBridge.scm",(void*)f_29284},
{"f_29301ChickenBridge.scm",(void*)f_29301},
{"f_29317ChickenBridge.scm",(void*)f_29317},
{"f_29295ChickenBridge.scm",(void*)f_29295},
{"f_29278ChickenBridge.scm",(void*)f_29278},
{"f_18814ChickenBridge.scm",(void*)f_18814},
{"f_29202ChickenBridge.scm",(void*)f_29202},
{"f_18817ChickenBridge.scm",(void*)f_18817},
{"f_29178ChickenBridge.scm",(void*)f_29178},
{"f_29190ChickenBridge.scm",(void*)f_29190},
{"f_29186ChickenBridge.scm",(void*)f_29186},
{"f_29164ChickenBridge.scm",(void*)f_29164},
{"f_29172ChickenBridge.scm",(void*)f_29172},
{"f_29158ChickenBridge.scm",(void*)f_29158},
{"f_18820ChickenBridge.scm",(void*)f_18820},
{"f_29150ChickenBridge.scm",(void*)f_29150},
{"f_22584ChickenBridge.scm",(void*)f_22584},
{"f_22587ChickenBridge.scm",(void*)f_22587},
{"f_22753ChickenBridge.scm",(void*)f_22753},
{"f_22749ChickenBridge.scm",(void*)f_22749},
{"f_22739ChickenBridge.scm",(void*)f_22739},
{"f_22594ChickenBridge.scm",(void*)f_22594},
{"f_22598ChickenBridge.scm",(void*)f_22598},
{"f_22601ChickenBridge.scm",(void*)f_22601},
{"f_22612ChickenBridge.scm",(void*)f_22612},
{"f_22620ChickenBridge.scm",(void*)f_22620},
{"f_22692ChickenBridge.scm",(void*)f_22692},
{"f_22700ChickenBridge.scm",(void*)f_22700},
{"f_22696ChickenBridge.scm",(void*)f_22696},
{"f_22688ChickenBridge.scm",(void*)f_22688},
{"f_22684ChickenBridge.scm",(void*)f_22684},
{"f_22656ChickenBridge.scm",(void*)f_22656},
{"f_22652ChickenBridge.scm",(void*)f_22652},
{"f_22616ChickenBridge.scm",(void*)f_22616},
{"f_19231ChickenBridge.scm",(void*)f_19231},
{"f_29136ChickenBridge.scm",(void*)f_29136},
{"f_19234ChickenBridge.scm",(void*)f_19234},
{"f_29107ChickenBridge.scm",(void*)f_29107},
{"f_29111ChickenBridge.scm",(void*)f_29111},
{"f_19237ChickenBridge.scm",(void*)f_19237},
{"f_29104ChickenBridge.scm",(void*)f_29104},
{"f_19240ChickenBridge.scm",(void*)f_19240},
{"f_28962ChickenBridge.scm",(void*)f_28962},
{"f_22766ChickenBridge.scm",(void*)f_22766},
{"f_22898ChickenBridge.scm",(void*)f_22898},
{"f_22769ChickenBridge.scm",(void*)f_22769},
{"f_22780ChickenBridge.scm",(void*)f_22780},
{"f_22788ChickenBridge.scm",(void*)f_22788},
{"f_22812ChickenBridge.scm",(void*)f_22812},
{"f_22815ChickenBridge.scm",(void*)f_22815},
{"f_22823ChickenBridge.scm",(void*)f_22823},
{"f_22831ChickenBridge.scm",(void*)f_22831},
{"f_22851ChickenBridge.scm",(void*)f_22851},
{"f_22847ChickenBridge.scm",(void*)f_22847},
{"f_22827ChickenBridge.scm",(void*)f_22827},
{"f_22819ChickenBridge.scm",(void*)f_22819},
{"f_22808ChickenBridge.scm",(void*)f_22808},
{"f_22784ChickenBridge.scm",(void*)f_22784},
{"f_22760ChickenBridge.scm",(void*)f_22760},
{"f_27682ChickenBridge.scm",(void*)f_27682},
{"f_27685ChickenBridge.scm",(void*)f_27685},
{"f_27688ChickenBridge.scm",(void*)f_27688},
{"f_27691ChickenBridge.scm",(void*)f_27691},
{"f_27694ChickenBridge.scm",(void*)f_27694},
{"f_27697ChickenBridge.scm",(void*)f_27697},
{"f_27700ChickenBridge.scm",(void*)f_27700},
{"f_27703ChickenBridge.scm",(void*)f_27703},
{"f_27706ChickenBridge.scm",(void*)f_27706},
{"f_27709ChickenBridge.scm",(void*)f_27709},
{"f_27712ChickenBridge.scm",(void*)f_27712},
{"f_27837ChickenBridge.scm",(void*)f_27837},
{"f_27840ChickenBridge.scm",(void*)f_27840},
{"f_27843ChickenBridge.scm",(void*)f_27843},
{"f_28956ChickenBridge.scm",(void*)f_28956},
{"f_28510ChickenBridge.scm",(void*)f_28510},
{"f_28513ChickenBridge.scm",(void*)f_28513},
{"f_28791ChickenBridge.scm",(void*)f_28791},
{"f_28899ChickenBridge.scm",(void*)f_28899},
{"f_28811ChickenBridge.scm",(void*)f_28811},
{"f_28820ChickenBridge.scm",(void*)f_28820},
{"f_28824ChickenBridge.scm",(void*)f_28824},
{"f_28828ChickenBridge.scm",(void*)f_28828},
{"f_28836ChickenBridge.scm",(void*)f_28836},
{"f_28832ChickenBridge.scm",(void*)f_28832},
{"f_28801ChickenBridge.scm",(void*)f_28801},
{"f_28516ChickenBridge.scm",(void*)f_28516},
{"f_28519ChickenBridge.scm",(void*)f_28519},
{"f_28522ChickenBridge.scm",(void*)f_28522},
{"f_28525ChickenBridge.scm",(void*)f_28525},
{"f_28528ChickenBridge.scm",(void*)f_28528},
{"f_28785ChickenBridge.scm",(void*)f_28785},
{"f_28684ChickenBridge.scm",(void*)f_28684},
{"f_28691ChickenBridge.scm",(void*)f_28691},
{"f_28693ChickenBridge.scm",(void*)f_28693},
{"f_28765ChickenBridge.scm",(void*)f_28765},
{"f_28717ChickenBridge.scm",(void*)f_28717},
{"f_28720ChickenBridge.scm",(void*)f_28720},
{"f_28741ChickenBridge.scm",(void*)f_28741},
{"f_28707ChickenBridge.scm",(void*)f_28707},
{"f_28531ChickenBridge.scm",(void*)f_28531},
{"f_28673ChickenBridge.scm",(void*)f_28673},
{"f_28661ChickenBridge.scm",(void*)f_28661},
{"f_28657ChickenBridge.scm",(void*)f_28657},
{"f_28538ChickenBridge.scm",(void*)f_28538},
{"f_28495ChickenBridge.scm",(void*)f_28495},
{"f_28954ChickenBridge.scm",(void*)f_28954},
{"f_28485ChickenBridge.scm",(void*)f_28485},
{"f_28148ChickenBridge.scm",(void*)f_28148},
{"f_28489ChickenBridge.scm",(void*)f_28489},
{"f_28427ChickenBridge.scm",(void*)f_28427},
{"f_28445ChickenBridge.scm",(void*)f_28445},
{"f_28455ChickenBridge.scm",(void*)f_28455},
{"f_28431ChickenBridge.scm",(void*)f_28431},
{"f_28418ChickenBridge.scm",(void*)f_28418},
{"f_28126ChickenBridge.scm",(void*)f_28126},
{"f_28422ChickenBridge.scm",(void*)f_28422},
{"f_28412ChickenBridge.scm",(void*)f_28412},
{"f_28108ChickenBridge.scm",(void*)f_28108},
{"f_28403ChickenBridge.scm",(void*)f_28403},
{"f_28117ChickenBridge.scm",(void*)f_28117},
{"f_28407ChickenBridge.scm",(void*)f_28407},
{"f_28340ChickenBridge.scm",(void*)f_28340},
{"f_28365ChickenBridge.scm",(void*)f_28365},
{"f_28073ChickenBridge.scm",(void*)f_28073},
{"f_28353ChickenBridge.scm",(void*)f_28353},
{"f_28172ChickenBridge.scm",(void*)f_28172},
{"f_28291ChickenBridge.scm",(void*)f_28291},
{"f_28286ChickenBridge.scm",(void*)f_28286},
{"f_28174ChickenBridge.scm",(void*)f_28174},
{"f_28281ChickenBridge.scm",(void*)f_28281},
{"f_28285ChickenBridge.scm",(void*)f_28285},
{"f_28277ChickenBridge.scm",(void*)f_28277},
{"f_28245ChickenBridge.scm",(void*)f_28245},
{"f_28270ChickenBridge.scm",(void*)f_28270},
{"f_28274ChickenBridge.scm",(void*)f_28274},
{"f_28255ChickenBridge.scm",(void*)f_28255},
{"f_28234ChickenBridge.scm",(void*)f_28234},
{"f_28204ChickenBridge.scm",(void*)f_28204},
{"f_28176ChickenBridge.scm",(void*)f_28176},
{"f_28153ChickenBridge.scm",(void*)f_28153},
{"f_28158ChickenBridge.scm",(void*)f_28158},
{"f_28163ChickenBridge.scm",(void*)f_28163},
{"f_28131ChickenBridge.scm",(void*)f_28131},
{"f_28135ChickenBridge.scm",(void*)f_28135},
{"f_28087ChickenBridge.scm",(void*)f_28087},
{"f_28091ChickenBridge.scm",(void*)f_28091},
{"f_28078ChickenBridge.scm",(void*)f_28078},
{"f_28082ChickenBridge.scm",(void*)f_28082},
{"f_28066ChickenBridge.scm",(void*)f_28066},
{"f_28063ChickenBridge.scm",(void*)f_28063},
{"f_28049ChickenBridge.scm",(void*)f_28049},
{"f_28054ChickenBridge.scm",(void*)f_28054},
{"f_28035ChickenBridge.scm",(void*)f_28035},
{"f_28040ChickenBridge.scm",(void*)f_28040},
{"f_27845ChickenBridge.scm",(void*)f_27845},
{"f_27906ChickenBridge.scm",(void*)f_27906},
{"f_27908ChickenBridge.scm",(void*)f_27908},
{"f_27918ChickenBridge.scm",(void*)f_27918},
{"f_27937ChickenBridge.scm",(void*)f_27937},
{"f_27977ChickenBridge.scm",(void*)f_27977},
{"f_28019ChickenBridge.scm",(void*)f_28019},
{"f_27989ChickenBridge.scm",(void*)f_27989},
{"f_27974ChickenBridge.scm",(void*)f_27974},
{"f_27892ChickenBridge.scm",(void*)f_27892},
{"f_27857ChickenBridge.scm",(void*)f_27857},
{"f_27884ChickenBridge.scm",(void*)f_27884},
{"f_27865ChickenBridge.scm",(void*)f_27865},
{"f_27872ChickenBridge.scm",(void*)f_27872},
{"f_27876ChickenBridge.scm",(void*)f_27876},
{"f_27880ChickenBridge.scm",(void*)f_27880},
{"f_27957ChickenBridge.scm",(void*)f_27957},
{"f_27935ChickenBridge.scm",(void*)f_27935},
{"f_27921ChickenBridge.scm",(void*)f_27921},
{"f_27924ChickenBridge.scm",(void*)f_27924},
{"f_27899ChickenBridge.scm",(void*)f_27899},
{"f_27828ChickenBridge.scm",(void*)f_27828},
{"f_27833ChickenBridge.scm",(void*)f_27833},
{"f_27771ChickenBridge.scm",(void*)f_27771},
{"f_27804ChickenBridge.scm",(void*)f_27804},
{"f_27784ChickenBridge.scm",(void*)f_27784},
{"f_27792ChickenBridge.scm",(void*)f_27792},
{"f_27775ChickenBridge.scm",(void*)f_27775},
{"f_27714ChickenBridge.scm",(void*)f_27714},
{"f_27747ChickenBridge.scm",(void*)f_27747},
{"f_27727ChickenBridge.scm",(void*)f_27727},
{"f_27735ChickenBridge.scm",(void*)f_27735},
{"f_27718ChickenBridge.scm",(void*)f_27718},
{"f_27624ChickenBridge.scm",(void*)f_27624},
{"f_27678ChickenBridge.scm",(void*)f_27678},
{"f_27673ChickenBridge.scm",(void*)f_27673},
{"f_27636ChickenBridge.scm",(void*)f_27636},
{"f_27642ChickenBridge.scm",(void*)f_27642},
{"f_27668ChickenBridge.scm",(void*)f_27668},
{"f_27672ChickenBridge.scm",(void*)f_27672},
{"f_27648ChickenBridge.scm",(void*)f_27648},
{"f_27666ChickenBridge.scm",(void*)f_27666},
{"f_27663ChickenBridge.scm",(void*)f_27663},
{"f_27659ChickenBridge.scm",(void*)f_27659},
{"f_27652ChickenBridge.scm",(void*)f_27652},
{"f_27609ChickenBridge.scm",(void*)f_27609},
{"f_27614ChickenBridge.scm",(void*)f_27614},
{"f_27581ChickenBridge.scm",(void*)f_27581},
{"f_27586ChickenBridge.scm",(void*)f_27586},
{"f_27553ChickenBridge.scm",(void*)f_27553},
{"f_27558ChickenBridge.scm",(void*)f_27558},
{"f_27525ChickenBridge.scm",(void*)f_27525},
{"f_27530ChickenBridge.scm",(void*)f_27530},
{"f_27497ChickenBridge.scm",(void*)f_27497},
{"f_27502ChickenBridge.scm",(void*)f_27502},
{"f_27469ChickenBridge.scm",(void*)f_27469},
{"f_27474ChickenBridge.scm",(void*)f_27474},
{"f_27441ChickenBridge.scm",(void*)f_27441},
{"f_27446ChickenBridge.scm",(void*)f_27446},
{"f_27413ChickenBridge.scm",(void*)f_27413},
{"f_27418ChickenBridge.scm",(void*)f_27418},
{"f_27385ChickenBridge.scm",(void*)f_27385},
{"f_27390ChickenBridge.scm",(void*)f_27390},
{"f_27357ChickenBridge.scm",(void*)f_27357},
{"f_27362ChickenBridge.scm",(void*)f_27362},
{"f_27334ChickenBridge.scm",(void*)f_27334},
{"f_27339ChickenBridge.scm",(void*)f_27339},
{"f_27338ChickenBridge.scm",(void*)f_27338},
{"f_27315ChickenBridge.scm",(void*)f_27315},
{"f_27320ChickenBridge.scm",(void*)f_27320},
{"f_27260ChickenBridge.scm",(void*)f_27260},
{"f_27267ChickenBridge.scm",(void*)f_27267},
{"f_27270ChickenBridge.scm",(void*)f_27270},
{"f_27294ChickenBridge.scm",(void*)f_27294},
{"f_27274ChickenBridge.scm",(void*)f_27274},
{"f_27264ChickenBridge.scm",(void*)f_27264},
{"f_27213ChickenBridge.scm",(void*)f_27213},
{"f_27220ChickenBridge.scm",(void*)f_27220},
{"f_27223ChickenBridge.scm",(void*)f_27223},
{"f_27243ChickenBridge.scm",(void*)f_27243},
{"f_27227ChickenBridge.scm",(void*)f_27227},
{"f_27190ChickenBridge.scm",(void*)f_27190},
{"f_27195ChickenBridge.scm",(void*)f_27195},
{"f_27194ChickenBridge.scm",(void*)f_27194},
{"f_27171ChickenBridge.scm",(void*)f_27171},
{"f_27176ChickenBridge.scm",(void*)f_27176},
{"f_27148ChickenBridge.scm",(void*)f_27148},
{"f_27153ChickenBridge.scm",(void*)f_27153},
{"f_27152ChickenBridge.scm",(void*)f_27152},
{"f_27129ChickenBridge.scm",(void*)f_27129},
{"f_27134ChickenBridge.scm",(void*)f_27134},
{"f_27110ChickenBridge.scm",(void*)f_27110},
{"f_27115ChickenBridge.scm",(void*)f_27115},
{"f_27114ChickenBridge.scm",(void*)f_27114},
{"f_27095ChickenBridge.scm",(void*)f_27095},
{"f_27100ChickenBridge.scm",(void*)f_27100},
{"f_27076ChickenBridge.scm",(void*)f_27076},
{"f_27081ChickenBridge.scm",(void*)f_27081},
{"f_27080ChickenBridge.scm",(void*)f_27080},
{"f_27061ChickenBridge.scm",(void*)f_27061},
{"f_27066ChickenBridge.scm",(void*)f_27066},
{"f_27046ChickenBridge.scm",(void*)f_27046},
{"f_27051ChickenBridge.scm",(void*)f_27051},
{"f_27028ChickenBridge.scm",(void*)f_27028},
{"f_27036ChickenBridge.scm",(void*)f_27036},
{"f_27032ChickenBridge.scm",(void*)f_27032},
{"f_26558ChickenBridge.scm",(void*)f_26558},
{"f_26986ChickenBridge.scm",(void*)f_26986},
{"f_27001ChickenBridge.scm",(void*)f_27001},
{"f_26993ChickenBridge.scm",(void*)f_26993},
{"f_26957ChickenBridge.scm",(void*)f_26957},
{"f_26961ChickenBridge.scm",(void*)f_26961},
{"f_26922ChickenBridge.scm",(void*)f_26922},
{"f_26926ChickenBridge.scm",(void*)f_26926},
{"f_26887ChickenBridge.scm",(void*)f_26887},
{"f_26891ChickenBridge.scm",(void*)f_26891},
{"f_26562ChickenBridge.scm",(void*)f_26562},
{"f_26851ChickenBridge.scm",(void*)f_26851},
{"f_26866ChickenBridge.scm",(void*)f_26866},
{"f_26858ChickenBridge.scm",(void*)f_26858},
{"f_26822ChickenBridge.scm",(void*)f_26822},
{"f_26826ChickenBridge.scm",(void*)f_26826},
{"f_26787ChickenBridge.scm",(void*)f_26787},
{"f_26791ChickenBridge.scm",(void*)f_26791},
{"f_26752ChickenBridge.scm",(void*)f_26752},
{"f_26756ChickenBridge.scm",(void*)f_26756},
{"f_26565ChickenBridge.scm",(void*)f_26565},
{"f_26716ChickenBridge.scm",(void*)f_26716},
{"f_26731ChickenBridge.scm",(void*)f_26731},
{"f_26723ChickenBridge.scm",(void*)f_26723},
{"f_26687ChickenBridge.scm",(void*)f_26687},
{"f_26691ChickenBridge.scm",(void*)f_26691},
{"f_26652ChickenBridge.scm",(void*)f_26652},
{"f_26656ChickenBridge.scm",(void*)f_26656},
{"f_26617ChickenBridge.scm",(void*)f_26617},
{"f_26621ChickenBridge.scm",(void*)f_26621},
{"f_26568ChickenBridge.scm",(void*)f_26568},
{"f_26571ChickenBridge.scm",(void*)f_26571},
{"f_26575ChickenBridge.scm",(void*)f_26575},
{"f_26539ChickenBridge.scm",(void*)f_26539},
{"f_26544ChickenBridge.scm",(void*)f_26544},
{"f_26088ChickenBridge.scm",(void*)f_26088},
{"f_26516ChickenBridge.scm",(void*)f_26516},
{"f_26531ChickenBridge.scm",(void*)f_26531},
{"f_26523ChickenBridge.scm",(void*)f_26523},
{"f_26487ChickenBridge.scm",(void*)f_26487},
{"f_26491ChickenBridge.scm",(void*)f_26491},
{"f_26452ChickenBridge.scm",(void*)f_26452},
{"f_26456ChickenBridge.scm",(void*)f_26456},
{"f_26417ChickenBridge.scm",(void*)f_26417},
{"f_26421ChickenBridge.scm",(void*)f_26421},
{"f_26092ChickenBridge.scm",(void*)f_26092},
{"f_26381ChickenBridge.scm",(void*)f_26381},
{"f_26396ChickenBridge.scm",(void*)f_26396},
{"f_26388ChickenBridge.scm",(void*)f_26388},
{"f_26352ChickenBridge.scm",(void*)f_26352},
{"f_26356ChickenBridge.scm",(void*)f_26356},
{"f_26317ChickenBridge.scm",(void*)f_26317},
{"f_26321ChickenBridge.scm",(void*)f_26321},
{"f_26282ChickenBridge.scm",(void*)f_26282},
{"f_26286ChickenBridge.scm",(void*)f_26286},
{"f_26095ChickenBridge.scm",(void*)f_26095},
{"f_26246ChickenBridge.scm",(void*)f_26246},
{"f_26261ChickenBridge.scm",(void*)f_26261},
{"f_26253ChickenBridge.scm",(void*)f_26253},
{"f_26217ChickenBridge.scm",(void*)f_26217},
{"f_26221ChickenBridge.scm",(void*)f_26221},
{"f_26182ChickenBridge.scm",(void*)f_26182},
{"f_26186ChickenBridge.scm",(void*)f_26186},
{"f_26147ChickenBridge.scm",(void*)f_26147},
{"f_26151ChickenBridge.scm",(void*)f_26151},
{"f_26098ChickenBridge.scm",(void*)f_26098},
{"f_26101ChickenBridge.scm",(void*)f_26101},
{"f_26105ChickenBridge.scm",(void*)f_26105},
{"f_26069ChickenBridge.scm",(void*)f_26069},
{"f_26074ChickenBridge.scm",(void*)f_26074},
{"f_25618ChickenBridge.scm",(void*)f_25618},
{"f_26046ChickenBridge.scm",(void*)f_26046},
{"f_26061ChickenBridge.scm",(void*)f_26061},
{"f_26053ChickenBridge.scm",(void*)f_26053},
{"f_26017ChickenBridge.scm",(void*)f_26017},
{"f_26021ChickenBridge.scm",(void*)f_26021},
{"f_25982ChickenBridge.scm",(void*)f_25982},
{"f_25986ChickenBridge.scm",(void*)f_25986},
{"f_25947ChickenBridge.scm",(void*)f_25947},
{"f_25951ChickenBridge.scm",(void*)f_25951},
{"f_25622ChickenBridge.scm",(void*)f_25622},
{"f_25911ChickenBridge.scm",(void*)f_25911},
{"f_25926ChickenBridge.scm",(void*)f_25926},
{"f_25918ChickenBridge.scm",(void*)f_25918},
{"f_25882ChickenBridge.scm",(void*)f_25882},
{"f_25886ChickenBridge.scm",(void*)f_25886},
{"f_25847ChickenBridge.scm",(void*)f_25847},
{"f_25851ChickenBridge.scm",(void*)f_25851},
{"f_25812ChickenBridge.scm",(void*)f_25812},
{"f_25816ChickenBridge.scm",(void*)f_25816},
{"f_25625ChickenBridge.scm",(void*)f_25625},
{"f_25776ChickenBridge.scm",(void*)f_25776},
{"f_25791ChickenBridge.scm",(void*)f_25791},
{"f_25783ChickenBridge.scm",(void*)f_25783},
{"f_25747ChickenBridge.scm",(void*)f_25747},
{"f_25751ChickenBridge.scm",(void*)f_25751},
{"f_25712ChickenBridge.scm",(void*)f_25712},
{"f_25716ChickenBridge.scm",(void*)f_25716},
{"f_25677ChickenBridge.scm",(void*)f_25677},
{"f_25681ChickenBridge.scm",(void*)f_25681},
{"f_25628ChickenBridge.scm",(void*)f_25628},
{"f_25631ChickenBridge.scm",(void*)f_25631},
{"f_25635ChickenBridge.scm",(void*)f_25635},
{"f_25599ChickenBridge.scm",(void*)f_25599},
{"f_25604ChickenBridge.scm",(void*)f_25604},
{"f_24870ChickenBridge.scm",(void*)f_24870},
{"f_25576ChickenBridge.scm",(void*)f_25576},
{"f_25591ChickenBridge.scm",(void*)f_25591},
{"f_25583ChickenBridge.scm",(void*)f_25583},
{"f_25547ChickenBridge.scm",(void*)f_25547},
{"f_25551ChickenBridge.scm",(void*)f_25551},
{"f_25512ChickenBridge.scm",(void*)f_25512},
{"f_25516ChickenBridge.scm",(void*)f_25516},
{"f_25477ChickenBridge.scm",(void*)f_25477},
{"f_25481ChickenBridge.scm",(void*)f_25481},
{"f_25442ChickenBridge.scm",(void*)f_25442},
{"f_25446ChickenBridge.scm",(void*)f_25446},
{"f_24874ChickenBridge.scm",(void*)f_24874},
{"f_25406ChickenBridge.scm",(void*)f_25406},
{"f_25421ChickenBridge.scm",(void*)f_25421},
{"f_25413ChickenBridge.scm",(void*)f_25413},
{"f_25377ChickenBridge.scm",(void*)f_25377},
{"f_25381ChickenBridge.scm",(void*)f_25381},
{"f_25342ChickenBridge.scm",(void*)f_25342},
{"f_25346ChickenBridge.scm",(void*)f_25346},
{"f_25307ChickenBridge.scm",(void*)f_25307},
{"f_25311ChickenBridge.scm",(void*)f_25311},
{"f_25272ChickenBridge.scm",(void*)f_25272},
{"f_25276ChickenBridge.scm",(void*)f_25276},
{"f_24877ChickenBridge.scm",(void*)f_24877},
{"f_25236ChickenBridge.scm",(void*)f_25236},
{"f_25251ChickenBridge.scm",(void*)f_25251},
{"f_25243ChickenBridge.scm",(void*)f_25243},
{"f_25207ChickenBridge.scm",(void*)f_25207},
{"f_25211ChickenBridge.scm",(void*)f_25211},
{"f_25172ChickenBridge.scm",(void*)f_25172},
{"f_25176ChickenBridge.scm",(void*)f_25176},
{"f_25137ChickenBridge.scm",(void*)f_25137},
{"f_25141ChickenBridge.scm",(void*)f_25141},
{"f_25102ChickenBridge.scm",(void*)f_25102},
{"f_25106ChickenBridge.scm",(void*)f_25106},
{"f_24880ChickenBridge.scm",(void*)f_24880},
{"f_25066ChickenBridge.scm",(void*)f_25066},
{"f_25081ChickenBridge.scm",(void*)f_25081},
{"f_25073ChickenBridge.scm",(void*)f_25073},
{"f_25037ChickenBridge.scm",(void*)f_25037},
{"f_25041ChickenBridge.scm",(void*)f_25041},
{"f_25002ChickenBridge.scm",(void*)f_25002},
{"f_25006ChickenBridge.scm",(void*)f_25006},
{"f_24967ChickenBridge.scm",(void*)f_24967},
{"f_24971ChickenBridge.scm",(void*)f_24971},
{"f_24932ChickenBridge.scm",(void*)f_24932},
{"f_24936ChickenBridge.scm",(void*)f_24936},
{"f_24883ChickenBridge.scm",(void*)f_24883},
{"f_24886ChickenBridge.scm",(void*)f_24886},
{"f_24890ChickenBridge.scm",(void*)f_24890},
{"f_24851ChickenBridge.scm",(void*)f_24851},
{"f_24856ChickenBridge.scm",(void*)f_24856},
{"f_24122ChickenBridge.scm",(void*)f_24122},
{"f_24828ChickenBridge.scm",(void*)f_24828},
{"f_24843ChickenBridge.scm",(void*)f_24843},
{"f_24835ChickenBridge.scm",(void*)f_24835},
{"f_24799ChickenBridge.scm",(void*)f_24799},
{"f_24803ChickenBridge.scm",(void*)f_24803},
{"f_24764ChickenBridge.scm",(void*)f_24764},
{"f_24768ChickenBridge.scm",(void*)f_24768},
{"f_24729ChickenBridge.scm",(void*)f_24729},
{"f_24733ChickenBridge.scm",(void*)f_24733},
{"f_24694ChickenBridge.scm",(void*)f_24694},
{"f_24698ChickenBridge.scm",(void*)f_24698},
{"f_24126ChickenBridge.scm",(void*)f_24126},
{"f_24658ChickenBridge.scm",(void*)f_24658},
{"f_24673ChickenBridge.scm",(void*)f_24673},
{"f_24665ChickenBridge.scm",(void*)f_24665},
{"f_24629ChickenBridge.scm",(void*)f_24629},
{"f_24633ChickenBridge.scm",(void*)f_24633},
{"f_24594ChickenBridge.scm",(void*)f_24594},
{"f_24598ChickenBridge.scm",(void*)f_24598},
{"f_24559ChickenBridge.scm",(void*)f_24559},
{"f_24563ChickenBridge.scm",(void*)f_24563},
{"f_24524ChickenBridge.scm",(void*)f_24524},
{"f_24528ChickenBridge.scm",(void*)f_24528},
{"f_24129ChickenBridge.scm",(void*)f_24129},
{"f_24488ChickenBridge.scm",(void*)f_24488},
{"f_24503ChickenBridge.scm",(void*)f_24503},
{"f_24495ChickenBridge.scm",(void*)f_24495},
{"f_24459ChickenBridge.scm",(void*)f_24459},
{"f_24463ChickenBridge.scm",(void*)f_24463},
{"f_24424ChickenBridge.scm",(void*)f_24424},
{"f_24428ChickenBridge.scm",(void*)f_24428},
{"f_24389ChickenBridge.scm",(void*)f_24389},
{"f_24393ChickenBridge.scm",(void*)f_24393},
{"f_24354ChickenBridge.scm",(void*)f_24354},
{"f_24358ChickenBridge.scm",(void*)f_24358},
{"f_24132ChickenBridge.scm",(void*)f_24132},
{"f_24318ChickenBridge.scm",(void*)f_24318},
{"f_24333ChickenBridge.scm",(void*)f_24333},
{"f_24325ChickenBridge.scm",(void*)f_24325},
{"f_24289ChickenBridge.scm",(void*)f_24289},
{"f_24293ChickenBridge.scm",(void*)f_24293},
{"f_24254ChickenBridge.scm",(void*)f_24254},
{"f_24258ChickenBridge.scm",(void*)f_24258},
{"f_24219ChickenBridge.scm",(void*)f_24219},
{"f_24223ChickenBridge.scm",(void*)f_24223},
{"f_24184ChickenBridge.scm",(void*)f_24184},
{"f_24188ChickenBridge.scm",(void*)f_24188},
{"f_24135ChickenBridge.scm",(void*)f_24135},
{"f_24138ChickenBridge.scm",(void*)f_24138},
{"f_24142ChickenBridge.scm",(void*)f_24142},
{"f_24103ChickenBridge.scm",(void*)f_24103},
{"f_24108ChickenBridge.scm",(void*)f_24108},
{"f_23652ChickenBridge.scm",(void*)f_23652},
{"f_24080ChickenBridge.scm",(void*)f_24080},
{"f_24095ChickenBridge.scm",(void*)f_24095},
{"f_24087ChickenBridge.scm",(void*)f_24087},
{"f_24051ChickenBridge.scm",(void*)f_24051},
{"f_24055ChickenBridge.scm",(void*)f_24055},
{"f_24016ChickenBridge.scm",(void*)f_24016},
{"f_24020ChickenBridge.scm",(void*)f_24020},
{"f_23981ChickenBridge.scm",(void*)f_23981},
{"f_23985ChickenBridge.scm",(void*)f_23985},
{"f_23656ChickenBridge.scm",(void*)f_23656},
{"f_23945ChickenBridge.scm",(void*)f_23945},
{"f_23960ChickenBridge.scm",(void*)f_23960},
{"f_23952ChickenBridge.scm",(void*)f_23952},
{"f_23916ChickenBridge.scm",(void*)f_23916},
{"f_23920ChickenBridge.scm",(void*)f_23920},
{"f_23881ChickenBridge.scm",(void*)f_23881},
{"f_23885ChickenBridge.scm",(void*)f_23885},
{"f_23846ChickenBridge.scm",(void*)f_23846},
{"f_23850ChickenBridge.scm",(void*)f_23850},
{"f_23659ChickenBridge.scm",(void*)f_23659},
{"f_23810ChickenBridge.scm",(void*)f_23810},
{"f_23825ChickenBridge.scm",(void*)f_23825},
{"f_23817ChickenBridge.scm",(void*)f_23817},
{"f_23781ChickenBridge.scm",(void*)f_23781},
{"f_23785ChickenBridge.scm",(void*)f_23785},
{"f_23746ChickenBridge.scm",(void*)f_23746},
{"f_23750ChickenBridge.scm",(void*)f_23750},
{"f_23711ChickenBridge.scm",(void*)f_23711},
{"f_23715ChickenBridge.scm",(void*)f_23715},
{"f_23662ChickenBridge.scm",(void*)f_23662},
{"f_23665ChickenBridge.scm",(void*)f_23665},
{"f_23669ChickenBridge.scm",(void*)f_23669},
{"f_23633ChickenBridge.scm",(void*)f_23633},
{"f_23638ChickenBridge.scm",(void*)f_23638},
{"f_22904ChickenBridge.scm",(void*)f_22904},
{"f_23610ChickenBridge.scm",(void*)f_23610},
{"f_23625ChickenBridge.scm",(void*)f_23625},
{"f_23617ChickenBridge.scm",(void*)f_23617},
{"f_23581ChickenBridge.scm",(void*)f_23581},
{"f_23585ChickenBridge.scm",(void*)f_23585},
{"f_23546ChickenBridge.scm",(void*)f_23546},
{"f_23550ChickenBridge.scm",(void*)f_23550},
{"f_23511ChickenBridge.scm",(void*)f_23511},
{"f_23515ChickenBridge.scm",(void*)f_23515},
{"f_23476ChickenBridge.scm",(void*)f_23476},
{"f_23480ChickenBridge.scm",(void*)f_23480},
{"f_22908ChickenBridge.scm",(void*)f_22908},
{"f_23440ChickenBridge.scm",(void*)f_23440},
{"f_23455ChickenBridge.scm",(void*)f_23455},
{"f_23447ChickenBridge.scm",(void*)f_23447},
{"f_23411ChickenBridge.scm",(void*)f_23411},
{"f_23415ChickenBridge.scm",(void*)f_23415},
{"f_23376ChickenBridge.scm",(void*)f_23376},
{"f_23380ChickenBridge.scm",(void*)f_23380},
{"f_23341ChickenBridge.scm",(void*)f_23341},
{"f_23345ChickenBridge.scm",(void*)f_23345},
{"f_23306ChickenBridge.scm",(void*)f_23306},
{"f_23310ChickenBridge.scm",(void*)f_23310},
{"f_22911ChickenBridge.scm",(void*)f_22911},
{"f_23270ChickenBridge.scm",(void*)f_23270},
{"f_23285ChickenBridge.scm",(void*)f_23285},
{"f_23277ChickenBridge.scm",(void*)f_23277},
{"f_23241ChickenBridge.scm",(void*)f_23241},
{"f_23245ChickenBridge.scm",(void*)f_23245},
{"f_23206ChickenBridge.scm",(void*)f_23206},
{"f_23210ChickenBridge.scm",(void*)f_23210},
{"f_23171ChickenBridge.scm",(void*)f_23171},
{"f_23175ChickenBridge.scm",(void*)f_23175},
{"f_23136ChickenBridge.scm",(void*)f_23136},
{"f_23140ChickenBridge.scm",(void*)f_23140},
{"f_22914ChickenBridge.scm",(void*)f_22914},
{"f_23100ChickenBridge.scm",(void*)f_23100},
{"f_23115ChickenBridge.scm",(void*)f_23115},
{"f_23107ChickenBridge.scm",(void*)f_23107},
{"f_23071ChickenBridge.scm",(void*)f_23071},
{"f_23075ChickenBridge.scm",(void*)f_23075},
{"f_23036ChickenBridge.scm",(void*)f_23036},
{"f_23040ChickenBridge.scm",(void*)f_23040},
{"f_23001ChickenBridge.scm",(void*)f_23001},
{"f_23005ChickenBridge.scm",(void*)f_23005},
{"f_22966ChickenBridge.scm",(void*)f_22966},
{"f_22970ChickenBridge.scm",(void*)f_22970},
{"f_22917ChickenBridge.scm",(void*)f_22917},
{"f_22920ChickenBridge.scm",(void*)f_22920},
{"f_22924ChickenBridge.scm",(void*)f_22924},
{"f_22566ChickenBridge.scm",(void*)f_22566},
{"f_22406ChickenBridge.scm",(void*)f_22406},
{"f_22441ChickenBridge.scm",(void*)f_22441},
{"f_22451ChickenBridge.scm",(void*)f_22451},
{"f_22455ChickenBridge.scm",(void*)f_22455},
{"f_22458ChickenBridge.scm",(void*)f_22458},
{"f_22519ChickenBridge.scm",(void*)f_22519},
{"f_22510ChickenBridge.scm",(void*)f_22510},
{"f_22461ChickenBridge.scm",(void*)f_22461},
{"f_22480ChickenBridge.scm",(void*)f_22480},
{"f_22487ChickenBridge.scm",(void*)f_22487},
{"f_22464ChickenBridge.scm",(void*)f_22464},
{"f_22470ChickenBridge.scm",(void*)f_22470},
{"f_22439ChickenBridge.scm",(void*)f_22439},
{"f_22414ChickenBridge.scm",(void*)f_22414},
{"f_22413ChickenBridge.scm",(void*)f_22413},
{"f_22574ChickenBridge.scm",(void*)f_22574},
{"f_22152ChickenBridge.scm",(void*)f_22152},
{"f_22174ChickenBridge.scm",(void*)f_22174},
{"f_22189ChickenBridge.scm",(void*)f_22189},
{"f_22192ChickenBridge.scm",(void*)f_22192},
{"f_22368ChickenBridge.scm",(void*)f_22368},
{"f_22362ChickenBridge.scm",(void*)f_22362},
{"f_22195ChickenBridge.scm",(void*)f_22195},
{"f_22344ChickenBridge.scm",(void*)f_22344},
{"f_22198ChickenBridge.scm",(void*)f_22198},
{"f_22201ChickenBridge.scm",(void*)f_22201},
{"f_22337ChickenBridge.scm",(void*)f_22337},
{"f_22325ChickenBridge.scm",(void*)f_22325},
{"f_22221ChickenBridge.scm",(void*)f_22221},
{"f_22228ChickenBridge.scm",(void*)f_22228},
{"f_22298ChickenBridge.scm",(void*)f_22298},
{"f_22284ChickenBridge.scm",(void*)f_22284},
{"f_22292ChickenBridge.scm",(void*)f_22292},
{"f_22231ChickenBridge.scm",(void*)f_22231},
{"f_22270ChickenBridge.scm",(void*)f_22270},
{"f_22234ChickenBridge.scm",(void*)f_22234},
{"f_22263ChickenBridge.scm",(void*)f_22263},
{"f_22240ChickenBridge.scm",(void*)f_22240},
{"f_22243ChickenBridge.scm",(void*)f_22243},
{"f_22247ChickenBridge.scm",(void*)f_22247},
{"f_22208ChickenBridge.scm",(void*)f_22208},
{"f_22211ChickenBridge.scm",(void*)f_22211},
{"f_22021ChickenBridge.scm",(void*)f_22021},
{"f_22030ChickenBridge.scm",(void*)f_22030},
{"f_21978ChickenBridge.scm",(void*)f_21978},
{"f_21984ChickenBridge.scm",(void*)f_21984},
{"f_22047ChickenBridge.scm",(void*)f_22047},
{"f_22133ChickenBridge.scm",(void*)f_22133},
{"f_22120ChickenBridge.scm",(void*)f_22120},
{"f_22128ChickenBridge.scm",(void*)f_22128},
{"f_22050ChickenBridge.scm",(void*)f_22050},
{"f_22054ChickenBridge.scm",(void*)f_22054},
{"f_22097ChickenBridge.scm",(void*)f_22097},
{"f_22059ChickenBridge.scm",(void*)f_22059},
{"f_22025ChickenBridge.scm",(void*)f_22025},
{"f_21920ChickenBridge.scm",(void*)f_21920},
{"f_21927ChickenBridge.scm",(void*)f_21927},
{"f_21958ChickenBridge.scm",(void*)f_21958},
{"f_21954ChickenBridge.scm",(void*)f_21954},
{"f_21946ChickenBridge.scm",(void*)f_21946},
{"f_21829ChickenBridge.scm",(void*)f_21829},
{"f_21836ChickenBridge.scm",(void*)f_21836},
{"f_21904ChickenBridge.scm",(void*)f_21904},
{"f_21847ChickenBridge.scm",(void*)f_21847},
{"f_21874ChickenBridge.scm",(void*)f_21874},
{"f_21858ChickenBridge.scm",(void*)f_21858},
{"f_21763ChickenBridge.scm",(void*)f_21763},
{"f_21774ChickenBridge.scm",(void*)f_21774},
{"f_21777ChickenBridge.scm",(void*)f_21777},
{"f_21784ChickenBridge.scm",(void*)f_21784},
{"f_21757ChickenBridge.scm",(void*)f_21757},
{"f_21211ChickenBridge.scm",(void*)f_21211},
{"f_21242ChickenBridge.scm",(void*)f_21242},
{"f_21706ChickenBridge.scm",(void*)f_21706},
{"f_21712ChickenBridge.scm",(void*)f_21712},
{"f_21253ChickenBridge.scm",(void*)f_21253},
{"f_21138ChickenBridge.scm",(void*)f_21138},
{"f_21163ChickenBridge.scm",(void*)f_21163},
{"f_21098ChickenBridge.scm",(void*)f_21098},
{"f_21111ChickenBridge.scm",(void*)f_21111},
{"f_21152ChickenBridge.scm",(void*)f_21152},
{"f_21257ChickenBridge.scm",(void*)f_21257},
{"f_21694ChickenBridge.scm",(void*)f_21694},
{"f_21690ChickenBridge.scm",(void*)f_21690},
{"f_21686ChickenBridge.scm",(void*)f_21686},
{"f_21260ChickenBridge.scm",(void*)f_21260},
{"f_21480ChickenBridge.scm",(void*)f_21480},
{"f_21589ChickenBridge.scm",(void*)f_21589},
{"f_21654ChickenBridge.scm",(void*)f_21654},
{"f_21596ChickenBridge.scm",(void*)f_21596},
{"f_21600ChickenBridge.scm",(void*)f_21600},
{"f_21604ChickenBridge.scm",(void*)f_21604},
{"f_21646ChickenBridge.scm",(void*)f_21646},
{"f_21642ChickenBridge.scm",(void*)f_21642},
{"f_21620ChickenBridge.scm",(void*)f_21620},
{"f_21483ChickenBridge.scm",(void*)f_21483},
{"f_21486ChickenBridge.scm",(void*)f_21486},
{"f_21385ChickenBridge.scm",(void*)f_21385},
{"f_21468ChickenBridge.scm",(void*)f_21468},
{"f_21435ChickenBridge.scm",(void*)f_21435},
{"f_21461ChickenBridge.scm",(void*)f_21461},
{"f_21443ChickenBridge.scm",(void*)f_21443},
{"f_21391ChickenBridge.scm",(void*)f_21391},
{"f_21431ChickenBridge.scm",(void*)f_21431},
{"f_21373ChickenBridge.scm",(void*)f_21373},
{"f_21344ChickenBridge.scm",(void*)f_21344},
{"f_21366ChickenBridge.scm",(void*)f_21366},
{"f_21352ChickenBridge.scm",(void*)f_21352},
{"f_21306ChickenBridge.scm",(void*)f_21306},
{"f_21263ChickenBridge.scm",(void*)f_21263},
{"f_21274ChickenBridge.scm",(void*)f_21274},
{"f_21278ChickenBridge.scm",(void*)f_21278},
{"f_21282ChickenBridge.scm",(void*)f_21282},
{"f_21286ChickenBridge.scm",(void*)f_21286},
{"f_21270ChickenBridge.scm",(void*)f_21270},
{"f_21230ChickenBridge.scm",(void*)f_21230},
{"f_21225ChickenBridge.scm",(void*)f_21225},
{"f_21220ChickenBridge.scm",(void*)f_21220},
{"f_21052ChickenBridge.scm",(void*)f_21052},
{"f_21063ChickenBridge.scm",(void*)f_21063},
{"f_21078ChickenBridge.scm",(void*)f_21078},
{"f_21014ChickenBridge.scm",(void*)f_21014},
{"f_21025ChickenBridge.scm",(void*)f_21025},
{"f_21040ChickenBridge.scm",(void*)f_21040},
{"f_20947ChickenBridge.scm",(void*)f_20947},
{"f_20967ChickenBridge.scm",(void*)f_20967},
{"f_20977ChickenBridge.scm",(void*)f_20977},
{"f_20990ChickenBridge.scm",(void*)f_20990},
{"f_20958ChickenBridge.scm",(void*)f_20958},
{"f_20965ChickenBridge.scm",(void*)f_20965},
{"f_20754ChickenBridge.scm",(void*)f_20754},
{"f_20814ChickenBridge.scm",(void*)f_20814},
{"f_20824ChickenBridge.scm",(void*)f_20824},
{"f_20938ChickenBridge.scm",(void*)f_20938},
{"f_20903ChickenBridge.scm",(void*)f_20903},
{"f_20895ChickenBridge.scm",(void*)f_20895},
{"f_20866ChickenBridge.scm",(void*)f_20866},
{"f_20844ChickenBridge.scm",(void*)f_20844},
{"f_20847ChickenBridge.scm",(void*)f_20847},
{"f_20835ChickenBridge.scm",(void*)f_20835},
{"f_20761ChickenBridge.scm",(void*)f_20761},
{"f_20812ChickenBridge.scm",(void*)f_20812},
{"f_20804ChickenBridge.scm",(void*)f_20804},
{"f_20764ChickenBridge.scm",(void*)f_20764},
{"f_20775ChickenBridge.scm",(void*)f_20775},
{"f_20779ChickenBridge.scm",(void*)f_20779},
{"f_20771ChickenBridge.scm",(void*)f_20771},
{"f_20612ChickenBridge.scm",(void*)f_20612},
{"f_20660ChickenBridge.scm",(void*)f_20660},
{"f_20670ChickenBridge.scm",(void*)f_20670},
{"f_20681ChickenBridge.scm",(void*)f_20681},
{"f_20718ChickenBridge.scm",(void*)f_20718},
{"f_20693ChickenBridge.scm",(void*)f_20693},
{"f_20684ChickenBridge.scm",(void*)f_20684},
{"f_20622ChickenBridge.scm",(void*)f_20622},
{"f_20658ChickenBridge.scm",(void*)f_20658},
{"f_20629ChickenBridge.scm",(void*)f_20629},
{"f_20261ChickenBridge.scm",(void*)f_20261},
{"f_20268ChickenBridge.scm",(void*)f_20268},
{"f_20502ChickenBridge.scm",(void*)f_20502},
{"f_20512ChickenBridge.scm",(void*)f_20512},
{"f_20523ChickenBridge.scm",(void*)f_20523},
{"f_20535ChickenBridge.scm",(void*)f_20535},
{"f_20538ChickenBridge.scm",(void*)f_20538},
{"f_20526ChickenBridge.scm",(void*)f_20526},
{"f_20274ChickenBridge.scm",(void*)f_20274},
{"f_20500ChickenBridge.scm",(void*)f_20500},
{"f_20496ChickenBridge.scm",(void*)f_20496},
{"f_20442ChickenBridge.scm",(void*)f_20442},
{"f_20407ChickenBridge.scm",(void*)f_20407},
{"f_20423ChickenBridge.scm",(void*)f_20423},
{"f_20378ChickenBridge.scm",(void*)f_20378},
{"f_20302ChickenBridge.scm",(void*)f_20302},
{"f_20305ChickenBridge.scm",(void*)f_20305},
{"f_20369ChickenBridge.scm",(void*)f_20369},
{"f_20365ChickenBridge.scm",(void*)f_20365},
{"f_20285ChickenBridge.scm",(void*)f_20285},
{"f_20296ChickenBridge.scm",(void*)f_20296},
{"f_20292ChickenBridge.scm",(void*)f_20292},
{"f_20214ChickenBridge.scm",(void*)f_20214},
{"f_20247ChickenBridge.scm",(void*)f_20247},
{"f_20229ChickenBridge.scm",(void*)f_20229},
{"f_20241ChickenBridge.scm",(void*)f_20241},
{"f_19832ChickenBridge.scm",(void*)f_19832},
{"f_20041ChickenBridge.scm",(void*)f_20041},
{"f_20051ChickenBridge.scm",(void*)f_20051},
{"f_20062ChickenBridge.scm",(void*)f_20062},
{"f_20182ChickenBridge.scm",(void*)f_20182},
{"f_20161ChickenBridge.scm",(void*)f_20161},
{"f_20140ChickenBridge.scm",(void*)f_20140},
{"f_20119ChickenBridge.scm",(void*)f_20119},
{"f_20098ChickenBridge.scm",(void*)f_20098},
{"f_20077ChickenBridge.scm",(void*)f_20077},
{"f_20065ChickenBridge.scm",(void*)f_20065},
{"f_19842ChickenBridge.scm",(void*)f_19842},
{"f_19845ChickenBridge.scm",(void*)f_19845},
{"f_20008ChickenBridge.scm",(void*)f_20008},
{"f_19848ChickenBridge.scm",(void*)f_19848},
{"f_19999ChickenBridge.scm",(void*)f_19999},
{"f_19979ChickenBridge.scm",(void*)f_19979},
{"f_19851ChickenBridge.scm",(void*)f_19851},
{"f_19944ChickenBridge.scm",(void*)f_19944},
{"f_19961ChickenBridge.scm",(void*)f_19961},
{"f_19854ChickenBridge.scm",(void*)f_19854},
{"f_19893ChickenBridge.scm",(void*)f_19893},
{"f_19927ChickenBridge.scm",(void*)f_19927},
{"f_19911ChickenBridge.scm",(void*)f_19911},
{"f_19896ChickenBridge.scm",(void*)f_19896},
{"f_19861ChickenBridge.scm",(void*)f_19861},
{"f_19872ChickenBridge.scm",(void*)f_19872},
{"f_19876ChickenBridge.scm",(void*)f_19876},
{"f_19868ChickenBridge.scm",(void*)f_19868},
{"f_19750ChickenBridge.scm",(void*)f_19750},
{"f_19754ChickenBridge.scm",(void*)f_19754},
{"f_19772ChickenBridge.scm",(void*)f_19772},
{"f_19590ChickenBridge.scm",(void*)f_19590},
{"f_19598ChickenBridge.scm",(void*)f_19598},
{"f_19608ChickenBridge.scm",(void*)f_19608},
{"f_19646ChickenBridge.scm",(void*)f_19646},
{"f_19649ChickenBridge.scm",(void*)f_19649},
{"f_19652ChickenBridge.scm",(void*)f_19652},
{"f_19727ChickenBridge.scm",(void*)f_19727},
{"f_19737ChickenBridge.scm",(void*)f_19737},
{"f_19655ChickenBridge.scm",(void*)f_19655},
{"f_19658ChickenBridge.scm",(void*)f_19658},
{"f_19661ChickenBridge.scm",(void*)f_19661},
{"f_19681ChickenBridge.scm",(void*)f_19681},
{"f_19691ChickenBridge.scm",(void*)f_19691},
{"f_19694ChickenBridge.scm",(void*)f_19694},
{"f_19697ChickenBridge.scm",(void*)f_19697},
{"f_19664ChickenBridge.scm",(void*)f_19664},
{"f_19667ChickenBridge.scm",(void*)f_19667},
{"f_19584ChickenBridge.scm",(void*)f_19584},
{"f_19578ChickenBridge.scm",(void*)f_19578},
{"f_19572ChickenBridge.scm",(void*)f_19572},
{"f_19501ChickenBridge.scm",(void*)f_19501},
{"f_19542ChickenBridge.scm",(void*)f_19542},
{"f_19546ChickenBridge.scm",(void*)f_19546},
{"f_19550ChickenBridge.scm",(void*)f_19550},
{"f_19554ChickenBridge.scm",(void*)f_19554},
{"f_19558ChickenBridge.scm",(void*)f_19558},
{"f_19562ChickenBridge.scm",(void*)f_19562},
{"f_19566ChickenBridge.scm",(void*)f_19566},
{"f_19570ChickenBridge.scm",(void*)f_19570},
{"f_19503ChickenBridge.scm",(void*)f_19503},
{"f_19509ChickenBridge.scm",(void*)f_19509},
{"f_19531ChickenBridge.scm",(void*)f_19531},
{"f_19520ChickenBridge.scm",(void*)f_19520},
{"f_19350ChickenBridge.scm",(void*)f_19350},
{"f_19365ChickenBridge.scm",(void*)f_19365},
{"f_19378ChickenBridge.scm",(void*)f_19378},
{"f_19338ChickenBridge.scm",(void*)f_19338},
{"f_19326ChickenBridge.scm",(void*)f_19326},
{"f_19314ChickenBridge.scm",(void*)f_19314},
{"f_19308ChickenBridge.scm",(void*)f_19308},
{"f_19302ChickenBridge.scm",(void*)f_19302},
{"f_19290ChickenBridge.scm",(void*)f_19290},
{"f_19278ChickenBridge.scm",(void*)f_19278},
{"f_19266ChickenBridge.scm",(void*)f_19266},
{"f_19254ChickenBridge.scm",(void*)f_19254},
{"f_19248ChickenBridge.scm",(void*)f_19248},
{"f_19212ChickenBridge.scm",(void*)f_19212},
{"f_19206ChickenBridge.scm",(void*)f_19206},
{"f_19159ChickenBridge.scm",(void*)f_19159},
{"f_19163ChickenBridge.scm",(void*)f_19163},
{"f_19179ChickenBridge.scm",(void*)f_19179},
{"f_19188ChickenBridge.scm",(void*)f_19188},
{"f_19166ChickenBridge.scm",(void*)f_19166},
{"f_19150ChickenBridge.scm",(void*)f_19150},
{"f_19154ChickenBridge.scm",(void*)f_19154},
{"f_18997ChickenBridge.scm",(void*)f_18997},
{"f_19124ChickenBridge.scm",(void*)f_19124},
{"f_19137ChickenBridge.scm",(void*)f_19137},
{"f_19119ChickenBridge.scm",(void*)f_19119},
{"f_19000ChickenBridge.scm",(void*)f_19000},
{"f_19116ChickenBridge.scm",(void*)f_19116},
{"f_19100ChickenBridge.scm",(void*)f_19100},
{"f_19028ChickenBridge.scm",(void*)f_19028},
{"f_19036ChickenBridge.scm",(void*)f_19036},
{"f_19046ChickenBridge.scm",(void*)f_19046},
{"f_19049ChickenBridge.scm",(void*)f_19049},
{"f_19031ChickenBridge.scm",(void*)f_19031},
{"f_18826ChickenBridge.scm",(void*)f_18826},
{"f_18832ChickenBridge.scm",(void*)f_18832},
{"f_18835ChickenBridge.scm",(void*)f_18835},
{"f_16635ChickenBridge.scm",(void*)f_16635},
{"f_16648ChickenBridge.scm",(void*)f_16648},
{"f_16655ChickenBridge.scm",(void*)f_16655},
{"f_16662ChickenBridge.scm",(void*)f_16662},
{"f_16641ChickenBridge.scm",(void*)f_16641},
{"f_18839ChickenBridge.scm",(void*)f_18839},
{"f_18873ChickenBridge.scm",(void*)f_18873},
{"f_18966ChickenBridge.scm",(void*)f_18966},
{"f_18976ChickenBridge.scm",(void*)f_18976},
{"f_18879ChickenBridge.scm",(void*)f_18879},
{"f_18936ChickenBridge.scm",(void*)f_18936},
{"f_18946ChickenBridge.scm",(void*)f_18946},
{"f_18887ChickenBridge.scm",(void*)f_18887},
{"f_18901ChickenBridge.scm",(void*)f_18901},
{"f_18905ChickenBridge.scm",(void*)f_18905},
{"f_18909ChickenBridge.scm",(void*)f_18909},
{"f_18913ChickenBridge.scm",(void*)f_18913},
{"f_18920ChickenBridge.scm",(void*)f_18920},
{"f_18897ChickenBridge.scm",(void*)f_18897},
{"f_18890ChickenBridge.scm",(void*)f_18890},
{"f_18842ChickenBridge.scm",(void*)f_18842},
{"f_17762ChickenBridge.scm",(void*)f_17762},
{"f_17775ChickenBridge.scm",(void*)f_17775},
{"f_17825ChickenBridge.scm",(void*)f_17825},
{"f_17922ChickenBridge.scm",(void*)f_17922},
{"f_17990ChickenBridge.scm",(void*)f_17990},
{"f_18247ChickenBridge.scm",(void*)f_18247},
{"f_17997ChickenBridge.scm",(void*)f_17997},
{"f_18235ChickenBridge.scm",(void*)f_18235},
{"f_18186ChickenBridge.scm",(void*)f_18186},
{"f_18192ChickenBridge.scm",(void*)f_18192},
{"f_18216ChickenBridge.scm",(void*)f_18216},
{"f_18212ChickenBridge.scm",(void*)f_18212},
{"f_18200ChickenBridge.scm",(void*)f_18200},
{"f_18000ChickenBridge.scm",(void*)f_18000},
{"f_18162ChickenBridge.scm",(void*)f_18162},
{"f_18166ChickenBridge.scm",(void*)f_18166},
{"f_18003ChickenBridge.scm",(void*)f_18003},
{"f_18139ChickenBridge.scm",(void*)f_18139},
{"f_18143ChickenBridge.scm",(void*)f_18143},
{"f_18006ChickenBridge.scm",(void*)f_18006},
{"f_18116ChickenBridge.scm",(void*)f_18116},
{"f_18120ChickenBridge.scm",(void*)f_18120},
{"f_18009ChickenBridge.scm",(void*)f_18009},
{"f_18041ChickenBridge.scm",(void*)f_18041},
{"f_18059ChickenBridge.scm",(void*)f_18059},
{"f_18077ChickenBridge.scm",(void*)f_18077},
{"f_18095ChickenBridge.scm",(void*)f_18095},
{"f_18012ChickenBridge.scm",(void*)f_18012},
{"f_18016ChickenBridge.scm",(void*)f_18016},
{"f_17926ChickenBridge.scm",(void*)f_17926},
{"f_17930ChickenBridge.scm",(void*)f_17930},
{"f_17934ChickenBridge.scm",(void*)f_17934},
{"f_17829ChickenBridge.scm",(void*)f_17829},
{"f_17833ChickenBridge.scm",(void*)f_17833},
{"f_17837ChickenBridge.scm",(void*)f_17837},
{"f_17856ChickenBridge.scm",(void*)f_17856},
{"f_17860ChickenBridge.scm",(void*)f_17860},
{"f_17840ChickenBridge.scm",(void*)f_17840},
{"f_17844ChickenBridge.scm",(void*)f_17844},
{"f_17779ChickenBridge.scm",(void*)f_17779},
{"f_17783ChickenBridge.scm",(void*)f_17783},
{"f_17787ChickenBridge.scm",(void*)f_17787},
{"f_17769ChickenBridge.scm",(void*)f_17769},
{"f_17584ChickenBridge.scm",(void*)f_17584},
{"f_17596ChickenBridge.scm",(void*)f_17596},
{"f_17615ChickenBridge.scm",(void*)f_17615},
{"f_17633ChickenBridge.scm",(void*)f_17633},
{"f_17665ChickenBridge.scm",(void*)f_17665},
{"f_17668ChickenBridge.scm",(void*)f_17668},
{"f_17661ChickenBridge.scm",(void*)f_17661},
{"f_17647ChickenBridge.scm",(void*)f_17647},
{"f_17618ChickenBridge.scm",(void*)f_17618},
{"f_17563ChickenBridge.scm",(void*)f_17563},
{"f_17570ChickenBridge.scm",(void*)f_17570},
{"f_17573ChickenBridge.scm",(void*)f_17573},
{"f_17579ChickenBridge.scm",(void*)f_17579},
{"f_17498ChickenBridge.scm",(void*)f_17498},
{"f_17507ChickenBridge.scm",(void*)f_17507},
{"f_17530ChickenBridge.scm",(void*)f_17530},
{"f_17520ChickenBridge.scm",(void*)f_17520},
{"f_17454ChickenBridge.scm",(void*)f_17454},
{"f_17442ChickenBridge.scm",(void*)f_17442},
{"f_17340ChickenBridge.scm",(void*)f_17340},
{"f_17292ChickenBridge.scm",(void*)f_17292},
{"f_16673ChickenBridge.scm",(void*)f_16673},
{"f_16677ChickenBridge.scm",(void*)f_16677},
{"f_16680ChickenBridge.scm",(void*)f_16680},
{"f_17106ChickenBridge.scm",(void*)f_17106},
{"f_17102ChickenBridge.scm",(void*)f_17102},
{"f_17098ChickenBridge.scm",(void*)f_17098},
{"f_16683ChickenBridge.scm",(void*)f_16683},
{"f_16806ChickenBridge.scm",(void*)f_16806},
{"f_16039ChickenBridge.scm",(void*)f_16039},
{"f_16812ChickenBridge.scm",(void*)f_16812},
{"f_16055ChickenBridge.scm",(void*)f_16055},
{"f_16900ChickenBridge.scm",(void*)f_16900},
{"f_16970ChickenBridge.scm",(void*)f_16970},
{"f_16071ChickenBridge.scm",(void*)f_16071},
{"f_16973ChickenBridge.scm",(void*)f_16973},
{"f_16103ChickenBridge.scm",(void*)f_16103},
{"f_17051ChickenBridge.scm",(void*)f_17051},
{"f_17077ChickenBridge.scm",(void*)f_17077},
{"f_17071ChickenBridge.scm",(void*)f_17071},
{"f_17060ChickenBridge.scm",(void*)f_17060},
{"f_17002ChickenBridge.scm",(void*)f_17002},
{"f_17012ChickenBridge.scm",(void*)f_17012},
{"f_17038ChickenBridge.scm",(void*)f_17038},
{"f_17032ChickenBridge.scm",(void*)f_17032},
{"f_17015ChickenBridge.scm",(void*)f_17015},
{"f_17025ChickenBridge.scm",(void*)f_17025},
{"f_17018ChickenBridge.scm",(void*)f_17018},
{"f_16979ChickenBridge.scm",(void*)f_16979},
{"f_16988ChickenBridge.scm",(void*)f_16988},
{"f_16982ChickenBridge.scm",(void*)f_16982},
{"f_16906ChickenBridge.scm",(void*)f_16906},
{"f_16924ChickenBridge.scm",(void*)f_16924},
{"f_16957ChickenBridge.scm",(void*)f_16957},
{"f_16943ChickenBridge.scm",(void*)f_16943},
{"f_16951ChickenBridge.scm",(void*)f_16951},
{"f_16934ChickenBridge.scm",(void*)f_16934},
{"f_16909ChickenBridge.scm",(void*)f_16909},
{"f_16821ChickenBridge.scm",(void*)f_16821},
{"f_16843ChickenBridge.scm",(void*)f_16843},
{"f_16890ChickenBridge.scm",(void*)f_16890},
{"f_16876ChickenBridge.scm",(void*)f_16876},
{"f_16884ChickenBridge.scm",(void*)f_16884},
{"f_16856ChickenBridge.scm",(void*)f_16856},
{"f_16859ChickenBridge.scm",(void*)f_16859},
{"f_16824ChickenBridge.scm",(void*)f_16824},
{"f_16841ChickenBridge.scm",(void*)f_16841},
{"f_16827ChickenBridge.scm",(void*)f_16827},
{"f_16692ChickenBridge.scm",(void*)f_16692},
{"f_16698ChickenBridge.scm",(void*)f_16698},
{"f_16756ChickenBridge.scm",(void*)f_16756},
{"f_16759ChickenBridge.scm",(void*)f_16759},
{"f_16780ChickenBridge.scm",(void*)f_16780},
{"f_16791ChickenBridge.scm",(void*)f_16791},
{"f_16770ChickenBridge.scm",(void*)f_16770},
{"f_16704ChickenBridge.scm",(void*)f_16704},
{"f_16714ChickenBridge.scm",(void*)f_16714},
{"f_16750ChickenBridge.scm",(void*)f_16750},
{"f_16720ChickenBridge.scm",(void*)f_16720},
{"f_16735ChickenBridge.scm",(void*)f_16735},
{"f_16739ChickenBridge.scm",(void*)f_16739},
{"f_16743ChickenBridge.scm",(void*)f_16743},
{"f_16727ChickenBridge.scm",(void*)f_16727},
{"f_16569ChickenBridge.scm",(void*)f_16569},
{"f_16571ChickenBridge.scm",(void*)f_16571},
{"f_16619ChickenBridge.scm",(void*)f_16619},
{"f_16575ChickenBridge.scm",(void*)f_16575},
{"f_16578ChickenBridge.scm",(void*)f_16578},
{"f_16583ChickenBridge.scm",(void*)f_16583},
{"f_16604ChickenBridge.scm",(void*)f_16604},
{"f_16561ChickenBridge.scm",(void*)f_16561},
{"f_16563ChickenBridge.scm",(void*)f_16563},
{"f_16353ChickenBridge.scm",(void*)f_16353},
{"f_16370ChickenBridge.scm",(void*)f_16370},
{"f_16374ChickenBridge.scm",(void*)f_16374},
{"f_16320ChickenBridge.scm",(void*)f_16320},
{"f_16327ChickenBridge.scm",(void*)f_16327},
{"f_16271ChickenBridge.scm",(void*)f_16271},
{"f_16278ChickenBridge.scm",(void*)f_16278},
{"f_16336ChickenBridge.scm",(void*)f_16336},
{"f_16559ChickenBridge.scm",(void*)f_16559},
{"f_16536ChickenBridge.scm",(void*)f_16536},
{"f_16552ChickenBridge.scm",(void*)f_16552},
{"f_16398ChickenBridge.scm",(void*)f_16398},
{"f_16401ChickenBridge.scm",(void*)f_16401},
{"f_16425ChickenBridge.scm",(void*)f_16425},
{"f_16482ChickenBridge.scm",(void*)f_16482},
{"f_16488ChickenBridge.scm",(void*)f_16488},
{"f_16497ChickenBridge.scm",(void*)f_16497},
{"f_16506ChickenBridge.scm",(void*)f_16506},
{"f_16515ChickenBridge.scm",(void*)f_16515},
{"f_16524ChickenBridge.scm",(void*)f_16524},
{"f_16476ChickenBridge.scm",(void*)f_16476},
{"f_16431ChickenBridge.scm",(void*)f_16431},
{"f_16437ChickenBridge.scm",(void*)f_16437},
{"f_16443ChickenBridge.scm",(void*)f_16443},
{"f_16449ChickenBridge.scm",(void*)f_16449},
{"f_16455ChickenBridge.scm",(void*)f_16455},
{"f_16461ChickenBridge.scm",(void*)f_16461},
{"f_16302ChickenBridge.scm",(void*)f_16302},
{"f_16309ChickenBridge.scm",(void*)f_16309},
{"f_16292ChickenBridge.scm",(void*)f_16292},
{"f_16280ChickenBridge.scm",(void*)f_16280},
{"f_16248ChickenBridge.scm",(void*)f_16248},
{"f_16255ChickenBridge.scm",(void*)f_16255},
{"f_16262ChickenBridge.scm",(void*)f_16262},
{"f_16232ChickenBridge.scm",(void*)f_16232},
{"f_16239ChickenBridge.scm",(void*)f_16239},
{"f_16246ChickenBridge.scm",(void*)f_16246},
{"f_16220ChickenBridge.scm",(void*)f_16220},
{"f_16202ChickenBridge.scm",(void*)f_16202},
{"f_16184ChickenBridge.scm",(void*)f_16184},
{"f_16169ChickenBridge.scm",(void*)f_16169},
{"f_16163ChickenBridge.scm",(void*)f_16163},
{"f_16151ChickenBridge.scm",(void*)f_16151},
{"f_16133ChickenBridge.scm",(void*)f_16133},
{"f_16112ChickenBridge.scm",(void*)f_16112},
{"f_16080ChickenBridge.scm",(void*)f_16080},
{"f_16087ChickenBridge.scm",(void*)f_16087},
{"f_16022ChickenBridge.scm",(void*)f_16022},
{"f_16030ChickenBridge.scm",(void*)f_16030},
{"f_16012ChickenBridge.scm",(void*)f_16012},
{"f_16020ChickenBridge.scm",(void*)f_16020},
{"f_16006ChickenBridge.scm",(void*)f_16006},
{"f_15994ChickenBridge.scm",(void*)f_15994},
{"f_15991ChickenBridge.scm",(void*)f_15991},
{"f_15970ChickenBridge.scm",(void*)f_15970},
{"f_15883ChickenBridge.scm",(void*)f_15883},
{"f_15862ChickenBridge.scm",(void*)f_15862},
{"f_15852ChickenBridge.scm",(void*)f_15852},
{"f_15840ChickenBridge.scm",(void*)f_15840},
{"f_15811ChickenBridge.scm",(void*)f_15811},
{"f_15799ChickenBridge.scm",(void*)f_15799},
{"f_15781ChickenBridge.scm",(void*)f_15781},
{"f_15763ChickenBridge.scm",(void*)f_15763},
{"f_15742ChickenBridge.scm",(void*)f_15742},
{"f_15648ChickenBridge.scm",(void*)f_15648},
{"f_15652ChickenBridge.scm",(void*)f_15652},
{"f_15681ChickenBridge.scm",(void*)f_15681},
{"f_15686ChickenBridge.scm",(void*)f_15686},
{"f_15711ChickenBridge.scm",(void*)f_15711},
{"f_15696ChickenBridge.scm",(void*)f_15696},
{"f_15130ChickenBridge.scm",(void*)f_15130},
{"f_15401ChickenBridge.scm",(void*)f_15401},
{"f_15405ChickenBridge.scm",(void*)f_15405},
{"f_15410ChickenBridge.scm",(void*)f_15410},
{"f_15616ChickenBridge.scm",(void*)f_15616},
{"f_15631ChickenBridge.scm",(void*)f_15631},
{"f_15623ChickenBridge.scm",(void*)f_15623},
{"f_15587ChickenBridge.scm",(void*)f_15587},
{"f_15591ChickenBridge.scm",(void*)f_15591},
{"f_15552ChickenBridge.scm",(void*)f_15552},
{"f_15556ChickenBridge.scm",(void*)f_15556},
{"f_15414ChickenBridge.scm",(void*)f_15414},
{"f_15516ChickenBridge.scm",(void*)f_15516},
{"f_15531ChickenBridge.scm",(void*)f_15531},
{"f_15523ChickenBridge.scm",(void*)f_15523},
{"f_15487ChickenBridge.scm",(void*)f_15487},
{"f_15491ChickenBridge.scm",(void*)f_15491},
{"f_15452ChickenBridge.scm",(void*)f_15452},
{"f_15456ChickenBridge.scm",(void*)f_15456},
{"f_15417ChickenBridge.scm",(void*)f_15417},
{"f_15420ChickenBridge.scm",(void*)f_15420},
{"f_15423ChickenBridge.scm",(void*)f_15423},
{"f_15392ChickenBridge.scm",(void*)f_15392},
{"f_15134ChickenBridge.scm",(void*)f_15134},
{"f_15361ChickenBridge.scm",(void*)f_15361},
{"f_15376ChickenBridge.scm",(void*)f_15376},
{"f_15368ChickenBridge.scm",(void*)f_15368},
{"f_15332ChickenBridge.scm",(void*)f_15332},
{"f_15336ChickenBridge.scm",(void*)f_15336},
{"f_15297ChickenBridge.scm",(void*)f_15297},
{"f_15301ChickenBridge.scm",(void*)f_15301},
{"f_15137ChickenBridge.scm",(void*)f_15137},
{"f_15261ChickenBridge.scm",(void*)f_15261},
{"f_15276ChickenBridge.scm",(void*)f_15276},
{"f_15268ChickenBridge.scm",(void*)f_15268},
{"f_15232ChickenBridge.scm",(void*)f_15232},
{"f_15236ChickenBridge.scm",(void*)f_15236},
{"f_15197ChickenBridge.scm",(void*)f_15197},
{"f_15201ChickenBridge.scm",(void*)f_15201},
{"f_15140ChickenBridge.scm",(void*)f_15140},
{"f_15143ChickenBridge.scm",(void*)f_15143},
{"f_15146ChickenBridge.scm",(void*)f_15146},
{"f_15158ChickenBridge.scm",(void*)f_15158},
{"f_15176ChickenBridge.scm",(void*)f_15176},
{"f_15164ChickenBridge.scm",(void*)f_15164},
{"f_15152ChickenBridge.scm",(void*)f_15152},
{"f_15067ChickenBridge.scm",(void*)f_15067},
{"f_14727ChickenBridge.scm",(void*)f_14727},
{"f_14909ChickenBridge.scm",(void*)f_14909},
{"f_14913ChickenBridge.scm",(void*)f_14913},
{"f_14915ChickenBridge.scm",(void*)f_14915},
{"f_14840ChickenBridge.scm",(void*)f_14840},
{"f_14850ChickenBridge.scm",(void*)f_14850},
{"f_14857ChickenBridge.scm",(void*)f_14857},
{"f_14925ChickenBridge.scm",(void*)f_14925},
{"f_14928ChickenBridge.scm",(void*)f_14928},
{"f_14932ChickenBridge.scm",(void*)f_14932},
{"f_14952ChickenBridge.scm",(void*)f_14952},
{"f_14968ChickenBridge.scm",(void*)f_14968},
{"f_14935ChickenBridge.scm",(void*)f_14935},
{"f_14730ChickenBridge.scm",(void*)f_14730},
{"f_14742ChickenBridge.scm",(void*)f_14742},
{"f_14778ChickenBridge.scm",(void*)f_14778},
{"f_14798ChickenBridge.scm",(void*)f_14798},
{"f_14803ChickenBridge.scm",(void*)f_14803},
{"f_14240ChickenBridge.scm",(void*)f_14240},
{"f_14167ChickenBridge.scm",(void*)f_14167},
{"f_14012ChickenBridge.scm",(void*)f_14012},
{"f_14018ChickenBridge.scm",(void*)f_14018},
{"f_14103ChickenBridge.scm",(void*)f_14103},
{"f_14030ChickenBridge.scm",(void*)f_14030},
{"f_14046ChickenBridge.scm",(void*)f_14046},
{"f_14050ChickenBridge.scm",(void*)f_14050},
{"f_14053ChickenBridge.scm",(void*)f_14053},
{"f_14033ChickenBridge.scm",(void*)f_14033},
{"f_14044ChickenBridge.scm",(void*)f_14044},
{"f_14184ChickenBridge.scm",(void*)f_14184},
{"f_14721ChickenBridge.scm",(void*)f_14721},
{"f_14244ChickenBridge.scm",(void*)f_14244},
{"f_14690ChickenBridge.scm",(void*)f_14690},
{"f_14705ChickenBridge.scm",(void*)f_14705},
{"f_14697ChickenBridge.scm",(void*)f_14697},
{"f_14661ChickenBridge.scm",(void*)f_14661},
{"f_14665ChickenBridge.scm",(void*)f_14665},
{"f_14626ChickenBridge.scm",(void*)f_14626},
{"f_14630ChickenBridge.scm",(void*)f_14630},
{"f_14591ChickenBridge.scm",(void*)f_14591},
{"f_14595ChickenBridge.scm",(void*)f_14595},
{"f_14247ChickenBridge.scm",(void*)f_14247},
{"f_14555ChickenBridge.scm",(void*)f_14555},
{"f_14570ChickenBridge.scm",(void*)f_14570},
{"f_14562ChickenBridge.scm",(void*)f_14562},
{"f_14526ChickenBridge.scm",(void*)f_14526},
{"f_14530ChickenBridge.scm",(void*)f_14530},
{"f_14491ChickenBridge.scm",(void*)f_14491},
{"f_14495ChickenBridge.scm",(void*)f_14495},
{"f_14456ChickenBridge.scm",(void*)f_14456},
{"f_14460ChickenBridge.scm",(void*)f_14460},
{"f_14250ChickenBridge.scm",(void*)f_14250},
{"f_14420ChickenBridge.scm",(void*)f_14420},
{"f_14435ChickenBridge.scm",(void*)f_14435},
{"f_14427ChickenBridge.scm",(void*)f_14427},
{"f_14391ChickenBridge.scm",(void*)f_14391},
{"f_14395ChickenBridge.scm",(void*)f_14395},
{"f_14356ChickenBridge.scm",(void*)f_14356},
{"f_14360ChickenBridge.scm",(void*)f_14360},
{"f_14321ChickenBridge.scm",(void*)f_14321},
{"f_14325ChickenBridge.scm",(void*)f_14325},
{"f_14253ChickenBridge.scm",(void*)f_14253},
{"f_14256ChickenBridge.scm",(void*)f_14256},
{"f_14259ChickenBridge.scm",(void*)f_14259},
{"f_14292ChickenBridge.scm",(void*)f_14292},
{"f_14300ChickenBridge.scm",(void*)f_14300},
{"f_14265ChickenBridge.scm",(void*)f_14265},
{"f_14278ChickenBridge.scm",(void*)f_14278},
{"f_14268ChickenBridge.scm",(void*)f_14268},
{"f_14271ChickenBridge.scm",(void*)f_14271},
{"f_13807ChickenBridge.scm",(void*)f_13807},
{"f_13811ChickenBridge.scm",(void*)f_13811},
{"f_13814ChickenBridge.scm",(void*)f_13814},
{"f_13817ChickenBridge.scm",(void*)f_13817},
{"f_13986ChickenBridge.scm",(void*)f_13986},
{"f_13999ChickenBridge.scm",(void*)f_13999},
{"f_14003ChickenBridge.scm",(void*)f_14003},
{"f_13823ChickenBridge.scm",(void*)f_13823},
{"f_13979ChickenBridge.scm",(void*)f_13979},
{"f_13960ChickenBridge.scm",(void*)f_13960},
{"f_13967ChickenBridge.scm",(void*)f_13967},
{"f_13971ChickenBridge.scm",(void*)f_13971},
{"f_13829ChickenBridge.scm",(void*)f_13829},
{"f_13835ChickenBridge.scm",(void*)f_13835},
{"f_13919ChickenBridge.scm",(void*)f_13919},
{"f_13921ChickenBridge.scm",(void*)f_13921},
{"f_13943ChickenBridge.scm",(void*)f_13943},
{"f_13950ChickenBridge.scm",(void*)f_13950},
{"f_13954ChickenBridge.scm",(void*)f_13954},
{"f_13940ChickenBridge.scm",(void*)f_13940},
{"f_13936ChickenBridge.scm",(void*)f_13936},
{"f_13877ChickenBridge.scm",(void*)f_13877},
{"f_13894ChickenBridge.scm",(void*)f_13894},
{"f_13904ChickenBridge.scm",(void*)f_13904},
{"f_13880ChickenBridge.scm",(void*)f_13880},
{"f_13839ChickenBridge.scm",(void*)f_13839},
{"f_13847ChickenBridge.scm",(void*)f_13847},
{"f_13849ChickenBridge.scm",(void*)f_13849},
{"f_13870ChickenBridge.scm",(void*)f_13870},
{"f_13695ChickenBridge.scm",(void*)f_13695},
{"f_13805ChickenBridge.scm",(void*)f_13805},
{"f_13764ChickenBridge.scm",(void*)f_13764},
{"f_13797ChickenBridge.scm",(void*)f_13797},
{"f_13793ChickenBridge.scm",(void*)f_13793},
{"f_13778ChickenBridge.scm",(void*)f_13778},
{"f_13702ChickenBridge.scm",(void*)f_13702},
{"f_13710ChickenBridge.scm",(void*)f_13710},
{"f_13755ChickenBridge.scm",(void*)f_13755},
{"f_13743ChickenBridge.scm",(void*)f_13743},
{"f_13727ChickenBridge.scm",(void*)f_13727},
{"f_12928ChickenBridge.scm",(void*)f_12928},
{"f_13245ChickenBridge.scm",(void*)f_13245},
{"f_13252ChickenBridge.scm",(void*)f_13252},
{"f_13657ChickenBridge.scm",(void*)f_13657},
{"f_13672ChickenBridge.scm",(void*)f_13672},
{"f_13664ChickenBridge.scm",(void*)f_13664},
{"f_13628ChickenBridge.scm",(void*)f_13628},
{"f_13632ChickenBridge.scm",(void*)f_13632},
{"f_13593ChickenBridge.scm",(void*)f_13593},
{"f_13597ChickenBridge.scm",(void*)f_13597},
{"f_13558ChickenBridge.scm",(void*)f_13558},
{"f_13562ChickenBridge.scm",(void*)f_13562},
{"f_13255ChickenBridge.scm",(void*)f_13255},
{"f_13522ChickenBridge.scm",(void*)f_13522},
{"f_13537ChickenBridge.scm",(void*)f_13537},
{"f_13529ChickenBridge.scm",(void*)f_13529},
{"f_13493ChickenBridge.scm",(void*)f_13493},
{"f_13497ChickenBridge.scm",(void*)f_13497},
{"f_13458ChickenBridge.scm",(void*)f_13458},
{"f_13462ChickenBridge.scm",(void*)f_13462},
{"f_13423ChickenBridge.scm",(void*)f_13423},
{"f_13427ChickenBridge.scm",(void*)f_13427},
{"f_13258ChickenBridge.scm",(void*)f_13258},
{"f_13387ChickenBridge.scm",(void*)f_13387},
{"f_13402ChickenBridge.scm",(void*)f_13402},
{"f_13394ChickenBridge.scm",(void*)f_13394},
{"f_13358ChickenBridge.scm",(void*)f_13358},
{"f_13362ChickenBridge.scm",(void*)f_13362},
{"f_13323ChickenBridge.scm",(void*)f_13323},
{"f_13327ChickenBridge.scm",(void*)f_13327},
{"f_13288ChickenBridge.scm",(void*)f_13288},
{"f_13292ChickenBridge.scm",(void*)f_13292},
{"f_13261ChickenBridge.scm",(void*)f_13261},
{"f_13264ChickenBridge.scm",(void*)f_13264},
{"f_12932ChickenBridge.scm",(void*)f_12932},
{"f_12935ChickenBridge.scm",(void*)f_12935},
{"f_13209ChickenBridge.scm",(void*)f_13209},
{"f_13213ChickenBridge.scm",(void*)f_13213},
{"f_13216ChickenBridge.scm",(void*)f_13216},
{"f_13219ChickenBridge.scm",(void*)f_13219},
{"f_13222ChickenBridge.scm",(void*)f_13222},
{"f_13235ChickenBridge.scm",(void*)f_13235},
{"f_13225ChickenBridge.scm",(void*)f_13225},
{"f_12941ChickenBridge.scm",(void*)f_12941},
{"f_12948ChickenBridge.scm",(void*)f_12948},
{"f_13179ChickenBridge.scm",(void*)f_13179},
{"f_13194ChickenBridge.scm",(void*)f_13194},
{"f_13186ChickenBridge.scm",(void*)f_13186},
{"f_13150ChickenBridge.scm",(void*)f_13150},
{"f_13154ChickenBridge.scm",(void*)f_13154},
{"f_13115ChickenBridge.scm",(void*)f_13115},
{"f_13119ChickenBridge.scm",(void*)f_13119},
{"f_12951ChickenBridge.scm",(void*)f_12951},
{"f_13079ChickenBridge.scm",(void*)f_13079},
{"f_13094ChickenBridge.scm",(void*)f_13094},
{"f_13086ChickenBridge.scm",(void*)f_13086},
{"f_13050ChickenBridge.scm",(void*)f_13050},
{"f_13054ChickenBridge.scm",(void*)f_13054},
{"f_13015ChickenBridge.scm",(void*)f_13015},
{"f_13019ChickenBridge.scm",(void*)f_13019},
{"f_12954ChickenBridge.scm",(void*)f_12954},
{"f_12957ChickenBridge.scm",(void*)f_12957},
{"f_12972ChickenBridge.scm",(void*)f_12972},
{"f_12994ChickenBridge.scm",(void*)f_12994},
{"f_12978ChickenBridge.scm",(void*)f_12978},
{"f_12986ChickenBridge.scm",(void*)f_12986},
{"f_12960ChickenBridge.scm",(void*)f_12960},
{"f_12963ChickenBridge.scm",(void*)f_12963},
{"f_12845ChickenBridge.scm",(void*)f_12845},
{"f_12836ChickenBridge.scm",(void*)f_12836},
{"f_12827ChickenBridge.scm",(void*)f_12827},
{"f_12809ChickenBridge.scm",(void*)f_12809},
{"f_12791ChickenBridge.scm",(void*)f_12791},
{"f_12773ChickenBridge.scm",(void*)f_12773},
{"f_12764ChickenBridge.scm",(void*)f_12764},
{"f_12755ChickenBridge.scm",(void*)f_12755},
{"f_12533ChickenBridge.scm",(void*)f_12533},
{"f_12583ChickenBridge.scm",(void*)f_12583},
{"f_12728ChickenBridge.scm",(void*)f_12728},
{"f_12609ChickenBridge.scm",(void*)f_12609},
{"f_12724ChickenBridge.scm",(void*)f_12724},
{"f_12709ChickenBridge.scm",(void*)f_12709},
{"f_12690ChickenBridge.scm",(void*)f_12690},
{"f_12663ChickenBridge.scm",(void*)f_12663},
{"f_12616ChickenBridge.scm",(void*)f_12616},
{"f_12586ChickenBridge.scm",(void*)f_12586},
{"f_12536ChickenBridge.scm",(void*)f_12536},
{"f_12542ChickenBridge.scm",(void*)f_12542},
{"f_12558ChickenBridge.scm",(void*)f_12558},
{"f_12561ChickenBridge.scm",(void*)f_12561},
{"f_12059ChickenBridge.scm",(void*)f_12059},
{"f_12523ChickenBridge.scm",(void*)f_12523},
{"f_12063ChickenBridge.scm",(void*)f_12063},
{"f_12495ChickenBridge.scm",(void*)f_12495},
{"f_12510ChickenBridge.scm",(void*)f_12510},
{"f_12502ChickenBridge.scm",(void*)f_12502},
{"f_12466ChickenBridge.scm",(void*)f_12466},
{"f_12470ChickenBridge.scm",(void*)f_12470},
{"f_12431ChickenBridge.scm",(void*)f_12431},
{"f_12435ChickenBridge.scm",(void*)f_12435},
{"f_12396ChickenBridge.scm",(void*)f_12396},
{"f_12400ChickenBridge.scm",(void*)f_12400},
{"f_12066ChickenBridge.scm",(void*)f_12066},
{"f_12360ChickenBridge.scm",(void*)f_12360},
{"f_12375ChickenBridge.scm",(void*)f_12375},
{"f_12367ChickenBridge.scm",(void*)f_12367},
{"f_12331ChickenBridge.scm",(void*)f_12331},
{"f_12335ChickenBridge.scm",(void*)f_12335},
{"f_12296ChickenBridge.scm",(void*)f_12296},
{"f_12300ChickenBridge.scm",(void*)f_12300},
{"f_12261ChickenBridge.scm",(void*)f_12261},
{"f_12265ChickenBridge.scm",(void*)f_12265},
{"f_12069ChickenBridge.scm",(void*)f_12069},
{"f_12225ChickenBridge.scm",(void*)f_12225},
{"f_12240ChickenBridge.scm",(void*)f_12240},
{"f_12232ChickenBridge.scm",(void*)f_12232},
{"f_12196ChickenBridge.scm",(void*)f_12196},
{"f_12200ChickenBridge.scm",(void*)f_12200},
{"f_12161ChickenBridge.scm",(void*)f_12161},
{"f_12165ChickenBridge.scm",(void*)f_12165},
{"f_12126ChickenBridge.scm",(void*)f_12126},
{"f_12130ChickenBridge.scm",(void*)f_12130},
{"f_12072ChickenBridge.scm",(void*)f_12072},
{"f_12075ChickenBridge.scm",(void*)f_12075},
{"f_12078ChickenBridge.scm",(void*)f_12078},
{"f_12093ChickenBridge.scm",(void*)f_12093},
{"f_12105ChickenBridge.scm",(void*)f_12105},
{"f_12084ChickenBridge.scm",(void*)f_12084},
{"f_12087ChickenBridge.scm",(void*)f_12087},
{"f_11983ChickenBridge.scm",(void*)f_11983},
{"f_11987ChickenBridge.scm",(void*)f_11987},
{"f_12006ChickenBridge.scm",(void*)f_12006},
{"f_12016ChickenBridge.scm",(void*)f_12016},
{"f_12018ChickenBridge.scm",(void*)f_12018},
{"f_12035ChickenBridge.scm",(void*)f_12035},
{"f_12038ChickenBridge.scm",(void*)f_12038},
{"f_12049ChickenBridge.scm",(void*)f_12049},
{"f_11990ChickenBridge.scm",(void*)f_11990},
{"f_11720ChickenBridge.scm",(void*)f_11720},
{"f_11973ChickenBridge.scm",(void*)f_11973},
{"f_11724ChickenBridge.scm",(void*)f_11724},
{"f_11945ChickenBridge.scm",(void*)f_11945},
{"f_11960ChickenBridge.scm",(void*)f_11960},
{"f_11952ChickenBridge.scm",(void*)f_11952},
{"f_11916ChickenBridge.scm",(void*)f_11916},
{"f_11920ChickenBridge.scm",(void*)f_11920},
{"f_11881ChickenBridge.scm",(void*)f_11881},
{"f_11885ChickenBridge.scm",(void*)f_11885},
{"f_11727ChickenBridge.scm",(void*)f_11727},
{"f_11845ChickenBridge.scm",(void*)f_11845},
{"f_11860ChickenBridge.scm",(void*)f_11860},
{"f_11852ChickenBridge.scm",(void*)f_11852},
{"f_11816ChickenBridge.scm",(void*)f_11816},
{"f_11820ChickenBridge.scm",(void*)f_11820},
{"f_11781ChickenBridge.scm",(void*)f_11781},
{"f_11785ChickenBridge.scm",(void*)f_11785},
{"f_11730ChickenBridge.scm",(void*)f_11730},
{"f_11733ChickenBridge.scm",(void*)f_11733},
{"f_11736ChickenBridge.scm",(void*)f_11736},
{"f_11748ChickenBridge.scm",(void*)f_11748},
{"f_11760ChickenBridge.scm",(void*)f_11760},
{"f_11742ChickenBridge.scm",(void*)f_11742},
{"f_11684ChickenBridge.scm",(void*)f_11684},
{"f_11688ChickenBridge.scm",(void*)f_11688},
{"f_11710ChickenBridge.scm",(void*)f_11710},
{"f_11704ChickenBridge.scm",(void*)f_11704},
{"f_11697ChickenBridge.scm",(void*)f_11697},
{"f_11437ChickenBridge.scm",(void*)f_11437},
{"f_11441ChickenBridge.scm",(void*)f_11441},
{"f_11654ChickenBridge.scm",(void*)f_11654},
{"f_11669ChickenBridge.scm",(void*)f_11669},
{"f_11661ChickenBridge.scm",(void*)f_11661},
{"f_11625ChickenBridge.scm",(void*)f_11625},
{"f_11629ChickenBridge.scm",(void*)f_11629},
{"f_11590ChickenBridge.scm",(void*)f_11590},
{"f_11594ChickenBridge.scm",(void*)f_11594},
{"f_11444ChickenBridge.scm",(void*)f_11444},
{"f_11554ChickenBridge.scm",(void*)f_11554},
{"f_11569ChickenBridge.scm",(void*)f_11569},
{"f_11561ChickenBridge.scm",(void*)f_11561},
{"f_11525ChickenBridge.scm",(void*)f_11525},
{"f_11529ChickenBridge.scm",(void*)f_11529},
{"f_11490ChickenBridge.scm",(void*)f_11490},
{"f_11494ChickenBridge.scm",(void*)f_11494},
{"f_11447ChickenBridge.scm",(void*)f_11447},
{"f_11450ChickenBridge.scm",(void*)f_11450},
{"f_11453ChickenBridge.scm",(void*)f_11453},
{"f_11461ChickenBridge.scm",(void*)f_11461},
{"f_11469ChickenBridge.scm",(void*)f_11469},
{"f_11459ChickenBridge.scm",(void*)f_11459},
{"f_11222ChickenBridge.scm",(void*)f_11222},
{"f_11226ChickenBridge.scm",(void*)f_11226},
{"f_11435ChickenBridge.scm",(void*)f_11435},
{"f_11388ChickenBridge.scm",(void*)f_11388},
{"f_11400ChickenBridge.scm",(void*)f_11400},
{"f_11256ChickenBridge.scm",(void*)f_11256},
{"f_11259ChickenBridge.scm",(void*)f_11259},
{"f_11265ChickenBridge.scm",(void*)f_11265},
{"f_11268ChickenBridge.scm",(void*)f_11268},
{"f_11356ChickenBridge.scm",(void*)f_11356},
{"f_11271ChickenBridge.scm",(void*)f_11271},
{"f_11350ChickenBridge.scm",(void*)f_11350},
{"f_11277ChickenBridge.scm",(void*)f_11277},
{"f_11280ChickenBridge.scm",(void*)f_11280},
{"f_11232ChickenBridge.scm",(void*)f_11232},
{"f_11235ChickenBridge.scm",(void*)f_11235},
{"f_11242ChickenBridge.scm",(void*)f_11242},
{"f_10752ChickenBridge.scm",(void*)f_10752},
{"f_10756ChickenBridge.scm",(void*)f_10756},
{"f_11192ChickenBridge.scm",(void*)f_11192},
{"f_11207ChickenBridge.scm",(void*)f_11207},
{"f_11199ChickenBridge.scm",(void*)f_11199},
{"f_11163ChickenBridge.scm",(void*)f_11163},
{"f_11167ChickenBridge.scm",(void*)f_11167},
{"f_11128ChickenBridge.scm",(void*)f_11128},
{"f_11132ChickenBridge.scm",(void*)f_11132},
{"f_11093ChickenBridge.scm",(void*)f_11093},
{"f_11097ChickenBridge.scm",(void*)f_11097},
{"f_10759ChickenBridge.scm",(void*)f_10759},
{"f_11057ChickenBridge.scm",(void*)f_11057},
{"f_11072ChickenBridge.scm",(void*)f_11072},
{"f_11064ChickenBridge.scm",(void*)f_11064},
{"f_11028ChickenBridge.scm",(void*)f_11028},
{"f_11032ChickenBridge.scm",(void*)f_11032},
{"f_10993ChickenBridge.scm",(void*)f_10993},
{"f_10997ChickenBridge.scm",(void*)f_10997},
{"f_10958ChickenBridge.scm",(void*)f_10958},
{"f_10962ChickenBridge.scm",(void*)f_10962},
{"f_10762ChickenBridge.scm",(void*)f_10762},
{"f_10922ChickenBridge.scm",(void*)f_10922},
{"f_10937ChickenBridge.scm",(void*)f_10937},
{"f_10929ChickenBridge.scm",(void*)f_10929},
{"f_10893ChickenBridge.scm",(void*)f_10893},
{"f_10897ChickenBridge.scm",(void*)f_10897},
{"f_10858ChickenBridge.scm",(void*)f_10858},
{"f_10862ChickenBridge.scm",(void*)f_10862},
{"f_10823ChickenBridge.scm",(void*)f_10823},
{"f_10827ChickenBridge.scm",(void*)f_10827},
{"f_10765ChickenBridge.scm",(void*)f_10765},
{"f_10768ChickenBridge.scm",(void*)f_10768},
{"f_10771ChickenBridge.scm",(void*)f_10771},
{"f_10794ChickenBridge.scm",(void*)f_10794},
{"f_10802ChickenBridge.scm",(void*)f_10802},
{"f_10777ChickenBridge.scm",(void*)f_10777},
{"f_10780ChickenBridge.scm",(void*)f_10780},
{"f_10672ChickenBridge.scm",(void*)f_10672},
{"f_10663ChickenBridge.scm",(void*)f_10663},
{"f_10591ChickenBridge.scm",(void*)f_10591},
{"f_10595ChickenBridge.scm",(void*)f_10595},
{"f_10598ChickenBridge.scm",(void*)f_10598},
{"f_10336ChickenBridge.scm",(void*)f_10336},
{"f_10340ChickenBridge.scm",(void*)f_10340},
{"f_10561ChickenBridge.scm",(void*)f_10561},
{"f_10576ChickenBridge.scm",(void*)f_10576},
{"f_10568ChickenBridge.scm",(void*)f_10568},
{"f_10532ChickenBridge.scm",(void*)f_10532},
{"f_10536ChickenBridge.scm",(void*)f_10536},
{"f_10497ChickenBridge.scm",(void*)f_10497},
{"f_10501ChickenBridge.scm",(void*)f_10501},
{"f_10343ChickenBridge.scm",(void*)f_10343},
{"f_10461ChickenBridge.scm",(void*)f_10461},
{"f_10476ChickenBridge.scm",(void*)f_10476},
{"f_10468ChickenBridge.scm",(void*)f_10468},
{"f_10432ChickenBridge.scm",(void*)f_10432},
{"f_10436ChickenBridge.scm",(void*)f_10436},
{"f_10397ChickenBridge.scm",(void*)f_10397},
{"f_10401ChickenBridge.scm",(void*)f_10401},
{"f_10346ChickenBridge.scm",(void*)f_10346},
{"f_10349ChickenBridge.scm",(void*)f_10349},
{"f_10352ChickenBridge.scm",(void*)f_10352},
{"f_10364ChickenBridge.scm",(void*)f_10364},
{"f_10376ChickenBridge.scm",(void*)f_10376},
{"f_10358ChickenBridge.scm",(void*)f_10358},
{"f_10221ChickenBridge.scm",(void*)f_10221},
{"f_10334ChickenBridge.scm",(void*)f_10334},
{"f_10231ChickenBridge.scm",(void*)f_10231},
{"f_10319ChickenBridge.scm",(void*)f_10319},
{"f_10330ChickenBridge.scm",(void*)f_10330},
{"f_10326ChickenBridge.scm",(void*)f_10326},
{"f_10234ChickenBridge.scm",(void*)f_10234},
{"f_10316ChickenBridge.scm",(void*)f_10316},
{"f_10242ChickenBridge.scm",(void*)f_10242},
{"f_10306ChickenBridge.scm",(void*)f_10306},
{"f_10251ChickenBridge.scm",(void*)f_10251},
{"f_10270ChickenBridge.scm",(void*)f_10270},
{"f_10299ChickenBridge.scm",(void*)f_10299},
{"f_10280ChickenBridge.scm",(void*)f_10280},
{"f_10295ChickenBridge.scm",(void*)f_10295},
{"f_10283ChickenBridge.scm",(void*)f_10283},
{"f_10254ChickenBridge.scm",(void*)f_10254},
{"f_10264ChickenBridge.scm",(void*)f_10264},
{"f_10245ChickenBridge.scm",(void*)f_10245},
{"f_10248ChickenBridge.scm",(void*)f_10248},
{"f_10175ChickenBridge.scm",(void*)f_10175},
{"f_10166ChickenBridge.scm",(void*)f_10166},
{"f_9865ChickenBridge.scm",(void*)f_9865},
{"f_9872ChickenBridge.scm",(void*)f_9872},
{"f_10161ChickenBridge.scm",(void*)f_10161},
{"f_9875ChickenBridge.scm",(void*)f_9875},
{"f_10146ChickenBridge.scm",(void*)f_10146},
{"f_10138ChickenBridge.scm",(void*)f_10138},
{"f_10130ChickenBridge.scm",(void*)f_10130},
{"f_10133ChickenBridge.scm",(void*)f_10133},
{"f_10101ChickenBridge.scm",(void*)f_10101},
{"f_10124ChickenBridge.scm",(void*)f_10124},
{"f_10107ChickenBridge.scm",(void*)f_10107},
{"f_10111ChickenBridge.scm",(void*)f_10111},
{"f_9878ChickenBridge.scm",(void*)f_9878},
{"f_9884ChickenBridge.scm",(void*)f_9884},
{"f_9976ChickenBridge.scm",(void*)f_9976},
{"f_10088ChickenBridge.scm",(void*)f_10088},
{"f_10095ChickenBridge.scm",(void*)f_10095},
{"f_9999ChickenBridge.scm",(void*)f_9999},
{"f_10001ChickenBridge.scm",(void*)f_10001},
{"f_10050ChickenBridge.scm",(void*)f_10050},
{"f_10085ChickenBridge.scm",(void*)f_10085},
{"f_10074ChickenBridge.scm",(void*)f_10074},
{"f_10219ChickenBridge.scm",(void*)f_10219},
{"f_10194ChickenBridge.scm",(void*)f_10194},
{"f_10215ChickenBridge.scm",(void*)f_10215},
{"f_10211ChickenBridge.scm",(void*)f_10211},
{"f_10203ChickenBridge.scm",(void*)f_10203},
{"f_10067ChickenBridge.scm",(void*)f_10067},
{"f_10060ChickenBridge.scm",(void*)f_10060},
{"f_10008ChickenBridge.scm",(void*)f_10008},
{"f_10048ChickenBridge.scm",(void*)f_10048},
{"f_10012ChickenBridge.scm",(void*)f_10012},
{"f_10044ChickenBridge.scm",(void*)f_10044},
{"f_10031ChickenBridge.scm",(void*)f_10031},
{"f_10039ChickenBridge.scm",(void*)f_10039},
{"f_10035ChickenBridge.scm",(void*)f_10035},
{"f_10015ChickenBridge.scm",(void*)f_10015},
{"f_10018ChickenBridge.scm",(void*)f_10018},
{"f_9992ChickenBridge.scm",(void*)f_9992},
{"f_9979ChickenBridge.scm",(void*)f_9979},
{"f_9988ChickenBridge.scm",(void*)f_9988},
{"f_9983ChickenBridge.scm",(void*)f_9983},
{"f_9890ChickenBridge.scm",(void*)f_9890},
{"f_9970ChickenBridge.scm",(void*)f_9970},
{"f_9950ChickenBridge.scm",(void*)f_9950},
{"f_9956ChickenBridge.scm",(void*)f_9956},
{"f_9967ChickenBridge.scm",(void*)f_9967},
{"f_9947ChickenBridge.scm",(void*)f_9947},
{"f_9935ChickenBridge.scm",(void*)f_9935},
{"f_9938ChickenBridge.scm",(void*)f_9938},
{"f_9893ChickenBridge.scm",(void*)f_9893},
{"f_9929ChickenBridge.scm",(void*)f_9929},
{"f_9924ChickenBridge.scm",(void*)f_9924},
{"f_9896ChickenBridge.scm",(void*)f_9896},
{"f_9909ChickenBridge.scm",(void*)f_9909},
{"f_9899ChickenBridge.scm",(void*)f_9899},
{"f_9902ChickenBridge.scm",(void*)f_9902},
{"f_9905ChickenBridge.scm",(void*)f_9905},
{"f_9742ChickenBridge.scm",(void*)f_9742},
{"f_9801ChickenBridge.scm",(void*)f_9801},
{"f_9811ChickenBridge.scm",(void*)f_9811},
{"f_9813ChickenBridge.scm",(void*)f_9813},
{"f_9842ChickenBridge.scm",(void*)f_9842},
{"f_9847ChickenBridge.scm",(void*)f_9847},
{"f_9832ChickenBridge.scm",(void*)f_9832},
{"f_9763ChickenBridge.scm",(void*)f_9763},
{"f_9795ChickenBridge.scm",(void*)f_9795},
{"f_9723ChickenBridge.scm",(void*)f_9723},
{"f_9730ChickenBridge.scm",(void*)f_9730},
{"f_9737ChickenBridge.scm",(void*)f_9737},
{"f_9704ChickenBridge.scm",(void*)f_9704},
{"f_9711ChickenBridge.scm",(void*)f_9711},
{"f_9718ChickenBridge.scm",(void*)f_9718},
{"f_9524ChickenBridge.scm",(void*)f_9524},
{"f_9528ChickenBridge.scm",(void*)f_9528},
{"f_9531ChickenBridge.scm",(void*)f_9531},
{"f_9534ChickenBridge.scm",(void*)f_9534},
{"f_9537ChickenBridge.scm",(void*)f_9537},
{"f_9694ChickenBridge.scm",(void*)f_9694},
{"f_9701ChickenBridge.scm",(void*)f_9701},
{"f_9540ChickenBridge.scm",(void*)f_9540},
{"f_9543ChickenBridge.scm",(void*)f_9543},
{"f_9549ChickenBridge.scm",(void*)f_9549},
{"f_9555ChickenBridge.scm",(void*)f_9555},
{"f_9618ChickenBridge.scm",(void*)f_9618},
{"f_9632ChickenBridge.scm",(void*)f_9632},
{"f_9558ChickenBridge.scm",(void*)f_9558},
{"f_9561ChickenBridge.scm",(void*)f_9561},
{"f_9567ChickenBridge.scm",(void*)f_9567},
{"f_9580ChickenBridge.scm",(void*)f_9580},
{"f_9570ChickenBridge.scm",(void*)f_9570},
{"f_9573ChickenBridge.scm",(void*)f_9573},
{"f_9514ChickenBridge.scm",(void*)f_9514},
{"f_9459ChickenBridge.scm",(void*)f_9459},
{"f_9450ChickenBridge.scm",(void*)f_9450},
{"f_9333ChickenBridge.scm",(void*)f_9333},
{"f_9324ChickenBridge.scm",(void*)f_9324},
{"f_9315ChickenBridge.scm",(void*)f_9315},
{"f_9306ChickenBridge.scm",(void*)f_9306},
{"f_9297ChickenBridge.scm",(void*)f_9297},
{"f_9279ChickenBridge.scm",(void*)f_9279},
{"f_9270ChickenBridge.scm",(void*)f_9270},
{"f_9261ChickenBridge.scm",(void*)f_9261},
{"f_9243ChickenBridge.scm",(void*)f_9243},
{"f_9234ChickenBridge.scm",(void*)f_9234},
{"f_9225ChickenBridge.scm",(void*)f_9225},
{"f_9210ChickenBridge.scm",(void*)f_9210},
{"f_9165ChickenBridge.scm",(void*)f_9165},
{"f_9147ChickenBridge.scm",(void*)f_9147},
{"f_9138ChickenBridge.scm",(void*)f_9138},
{"f_9111ChickenBridge.scm",(void*)f_9111},
{"f_9093ChickenBridge.scm",(void*)f_9093},
{"f_9075ChickenBridge.scm",(void*)f_9075},
{"f_9066ChickenBridge.scm",(void*)f_9066},
{"f_9054ChickenBridge.scm",(void*)f_9054},
{"f_8746ChickenBridge.scm",(void*)f_8746},
{"f_8847ChickenBridge.scm",(void*)f_8847},
{"f_8896ChickenBridge.scm",(void*)f_8896},
{"f_8892ChickenBridge.scm",(void*)f_8892},
{"f_8864ChickenBridge.scm",(void*)f_8864},
{"f_8799ChickenBridge.scm",(void*)f_8799},
{"f_8808ChickenBridge.scm",(void*)f_8808},
{"f_8792ChickenBridge.scm",(void*)f_8792},
{"f_8611ChickenBridge.scm",(void*)f_8611},
{"f_8737ChickenBridge.scm",(void*)f_8737},
{"f_8733ChickenBridge.scm",(void*)f_8733},
{"f_8711ChickenBridge.scm",(void*)f_8711},
{"f_8641ChickenBridge.scm",(void*)f_8641},
{"f_8657ChickenBridge.scm",(void*)f_8657},
{"f_8566ChickenBridge.scm",(void*)f_8566},
{"f_8609ChickenBridge.scm",(void*)f_8609},
{"f_8598ChickenBridge.scm",(void*)f_8598},
{"f_8450ChickenBridge.scm",(void*)f_8450},
{"f_8564ChickenBridge.scm",(void*)f_8564},
{"f_8465ChickenBridge.scm",(void*)f_8465},
{"f_8495ChickenBridge.scm",(void*)f_8495},
{"f_8514ChickenBridge.scm",(void*)f_8514},
{"f_8499ChickenBridge.scm",(void*)f_8499},
{"f_8478ChickenBridge.scm",(void*)f_8478},
{"f_8328ChickenBridge.scm",(void*)f_8328},
{"f_8448ChickenBridge.scm",(void*)f_8448},
{"f_8343ChickenBridge.scm",(void*)f_8343},
{"f_8373ChickenBridge.scm",(void*)f_8373},
{"f_8392ChickenBridge.scm",(void*)f_8392},
{"f_8377ChickenBridge.scm",(void*)f_8377},
{"f_8356ChickenBridge.scm",(void*)f_8356},
{"f_8231ChickenBridge.scm",(void*)f_8231},
{"f_8326ChickenBridge.scm",(void*)f_8326},
{"f_8246ChickenBridge.scm",(void*)f_8246},
{"f_8292ChickenBridge.scm",(void*)f_8292},
{"f_8277ChickenBridge.scm",(void*)f_8277},
{"f_8259ChickenBridge.scm",(void*)f_8259},
{"f_8178ChickenBridge.scm",(void*)f_8178},
{"f_8216ChickenBridge.scm",(void*)f_8216},
{"f_8223ChickenBridge.scm",(void*)f_8223},
{"f_8201ChickenBridge.scm",(void*)f_8201},
{"f_8176ChickenBridge.scm",(void*)f_8176},
{"f_8148ChickenBridge.scm",(void*)f_8148},
{"f_8150ChickenBridge.scm",(void*)f_8150},
{"f_8128ChickenBridge.scm",(void*)f_8128},
{"f_8076ChickenBridge.scm",(void*)f_8076},
{"f_8113ChickenBridge.scm",(void*)f_8113},
{"f_8080ChickenBridge.scm",(void*)f_8080},
{"f_8096ChickenBridge.scm",(void*)f_8096},
{"f_8098ChickenBridge.scm",(void*)f_8098},
{"f_8048ChickenBridge.scm",(void*)f_8048},
{"f_8029ChickenBridge.scm",(void*)f_8029},
{"f_7988ChickenBridge.scm",(void*)f_7988},
{"f_7969ChickenBridge.scm",(void*)f_7969},
{"f_7741ChickenBridge.scm",(void*)f_7741},
{"f_7946ChickenBridge.scm",(void*)f_7946},
{"f_7961ChickenBridge.scm",(void*)f_7961},
{"f_7953ChickenBridge.scm",(void*)f_7953},
{"f_7917ChickenBridge.scm",(void*)f_7917},
{"f_7921ChickenBridge.scm",(void*)f_7921},
{"f_7882ChickenBridge.scm",(void*)f_7882},
{"f_7886ChickenBridge.scm",(void*)f_7886},
{"f_7745ChickenBridge.scm",(void*)f_7745},
{"f_7846ChickenBridge.scm",(void*)f_7846},
{"f_7861ChickenBridge.scm",(void*)f_7861},
{"f_7853ChickenBridge.scm",(void*)f_7853},
{"f_7817ChickenBridge.scm",(void*)f_7817},
{"f_7821ChickenBridge.scm",(void*)f_7821},
{"f_7782ChickenBridge.scm",(void*)f_7782},
{"f_7786ChickenBridge.scm",(void*)f_7786},
{"f_7748ChickenBridge.scm",(void*)f_7748},
{"f_7751ChickenBridge.scm",(void*)f_7751},
{"f_7754ChickenBridge.scm",(void*)f_7754},
{"f_7510ChickenBridge.scm",(void*)f_7510},
{"f_7715ChickenBridge.scm",(void*)f_7715},
{"f_7730ChickenBridge.scm",(void*)f_7730},
{"f_7722ChickenBridge.scm",(void*)f_7722},
{"f_7686ChickenBridge.scm",(void*)f_7686},
{"f_7690ChickenBridge.scm",(void*)f_7690},
{"f_7651ChickenBridge.scm",(void*)f_7651},
{"f_7655ChickenBridge.scm",(void*)f_7655},
{"f_7514ChickenBridge.scm",(void*)f_7514},
{"f_7615ChickenBridge.scm",(void*)f_7615},
{"f_7630ChickenBridge.scm",(void*)f_7630},
{"f_7622ChickenBridge.scm",(void*)f_7622},
{"f_7586ChickenBridge.scm",(void*)f_7586},
{"f_7590ChickenBridge.scm",(void*)f_7590},
{"f_7551ChickenBridge.scm",(void*)f_7551},
{"f_7555ChickenBridge.scm",(void*)f_7555},
{"f_7517ChickenBridge.scm",(void*)f_7517},
{"f_7520ChickenBridge.scm",(void*)f_7520},
{"f_7530ChickenBridge.scm",(void*)f_7530},
{"f_7467ChickenBridge.scm",(void*)f_7467},
{"f_7500ChickenBridge.scm",(void*)f_7500},
{"f_7485ChickenBridge.scm",(void*)f_7485},
{"f_7446ChickenBridge.scm",(void*)f_7446},
{"f_7415ChickenBridge.scm",(void*)f_7415},
{"f_7419ChickenBridge.scm",(void*)f_7419},
{"f_7341ChickenBridge.scm",(void*)f_7341},
{"f_7348ChickenBridge.scm",(void*)f_7348},
{"f_7357ChickenBridge.scm",(void*)f_7357},
{"f_7393ChickenBridge.scm",(void*)f_7393},
{"f_7314ChickenBridge.scm",(void*)f_7314},
{"f_7219ChickenBridge.scm",(void*)f_7219},
{"f_7223ChickenBridge.scm",(void*)f_7223},
{"f_7226ChickenBridge.scm",(void*)f_7226},
{"f_7238ChickenBridge.scm",(void*)f_7238},
{"f_7260ChickenBridge.scm",(void*)f_7260},
{"f_7204ChickenBridge.scm",(void*)f_7204},
{"f_7189ChickenBridge.scm",(void*)f_7189},
{"f_6953ChickenBridge.scm",(void*)f_6953},
{"f_7166ChickenBridge.scm",(void*)f_7166},
{"f_7181ChickenBridge.scm",(void*)f_7181},
{"f_7173ChickenBridge.scm",(void*)f_7173},
{"f_7137ChickenBridge.scm",(void*)f_7137},
{"f_7141ChickenBridge.scm",(void*)f_7141},
{"f_7102ChickenBridge.scm",(void*)f_7102},
{"f_7106ChickenBridge.scm",(void*)f_7106},
{"f_6957ChickenBridge.scm",(void*)f_6957},
{"f_7066ChickenBridge.scm",(void*)f_7066},
{"f_7081ChickenBridge.scm",(void*)f_7081},
{"f_7073ChickenBridge.scm",(void*)f_7073},
{"f_7037ChickenBridge.scm",(void*)f_7037},
{"f_7041ChickenBridge.scm",(void*)f_7041},
{"f_7002ChickenBridge.scm",(void*)f_7002},
{"f_7006ChickenBridge.scm",(void*)f_7006},
{"f_6960ChickenBridge.scm",(void*)f_6960},
{"f_6963ChickenBridge.scm",(void*)f_6963},
{"f_6974ChickenBridge.scm",(void*)f_6974},
{"f_6934ChickenBridge.scm",(void*)f_6934},
{"f_6913ChickenBridge.scm",(void*)f_6913},
{"f_6925ChickenBridge.scm",(void*)f_6925},
{"f_6887ChickenBridge.scm",(void*)f_6887},
{"f_6845ChickenBridge.scm",(void*)f_6845},
{"f_6830ChickenBridge.scm",(void*)f_6830},
{"f_6748ChickenBridge.scm",(void*)f_6748},
{"f_6762ChickenBridge.scm",(void*)f_6762},
{"f_6714ChickenBridge.scm",(void*)f_6714},
{"f_6726ChickenBridge.scm",(void*)f_6726},
{"f_6711ChickenBridge.scm",(void*)f_6711},
{"f_6708ChickenBridge.scm",(void*)f_6708},
{"f_6701ChickenBridge.scm",(void*)f_6701},
{"f_6698ChickenBridge.scm",(void*)f_6698},
{"f_6691ChickenBridge.scm",(void*)f_6691},
{"f_6673ChickenBridge.scm",(void*)f_6673},
{"f_6662ChickenBridge.scm",(void*)f_6662},
{"f_6659ChickenBridge.scm",(void*)f_6659},
{"f_6656ChickenBridge.scm",(void*)f_6656},
{"f_6653ChickenBridge.scm",(void*)f_6653},
{"f_6624ChickenBridge.scm",(void*)f_6624},
{"f_6617ChickenBridge.scm",(void*)f_6617},
{"f_6614ChickenBridge.scm",(void*)f_6614},
{"f_6593ChickenBridge.scm",(void*)f_6593},
{"f_6586ChickenBridge.scm",(void*)f_6586},
{"f_6579ChickenBridge.scm",(void*)f_6579},
{"f_6564ChickenBridge.scm",(void*)f_6564},
{"f_6553ChickenBridge.scm",(void*)f_6553},
{"f_6542ChickenBridge.scm",(void*)f_6542},
{"f_6535ChickenBridge.scm",(void*)f_6535},
{"f_6508ChickenBridge.scm",(void*)f_6508},
{"f_6481ChickenBridge.scm",(void*)f_6481},
{"f_6440ChickenBridge.scm",(void*)f_6440},
{"f_6446ChickenBridge.scm",(void*)f_6446},
{"f_6456ChickenBridge.scm",(void*)f_6456},
{"f_6354ChickenBridge.scm",(void*)f_6354},
{"f_6259ChickenBridge.scm",(void*)f_6259},
{"f_6263ChickenBridge.scm",(void*)f_6263},
{"f_6288ChickenBridge.scm",(void*)f_6288},
{"f_6305ChickenBridge.scm",(void*)f_6305},
{"f_6309ChickenBridge.scm",(void*)f_6309},
{"f_6265ChickenBridge.scm",(void*)f_6265},
{"f_6282ChickenBridge.scm",(void*)f_6282},
{"f_6249ChickenBridge.scm",(void*)f_6249},
{"f_6209ChickenBridge.scm",(void*)f_6209},
{"f_6239ChickenBridge.scm",(void*)f_6239},
{"f_6071ChickenBridge.scm",(void*)f_6071},
{"f_6105ChickenBridge.scm",(void*)f_6105},
{"f_6048ChickenBridge.scm",(void*)f_6048},
{"f_6042ChickenBridge.scm",(void*)f_6042},
{"f_6027ChickenBridge.scm",(void*)f_6027},
{"f_6013ChickenBridge.scm",(void*)f_6013},
{"f_6003ChickenBridge.scm",(void*)f_6003},
{"f_5993ChickenBridge.scm",(void*)f_5993},
{"f_5983ChickenBridge.scm",(void*)f_5983},
{"f_5973ChickenBridge.scm",(void*)f_5973},
{"f_5944ChickenBridge.scm",(void*)f_5944},
{"f_5953ChickenBridge.scm",(void*)f_5953},
{"f_5958ChickenBridge.scm",(void*)f_5958},
{"f_5933ChickenBridge.scm",(void*)f_5933},
{"f_5938ChickenBridge.scm",(void*)f_5938},
{"f_5640ChickenBridge.scm",(void*)f_5640},
{"f_5650ChickenBridge.scm",(void*)f_5650},
{"f_5901ChickenBridge.scm",(void*)f_5901},
{"f_5653ChickenBridge.scm",(void*)f_5653},
{"f_5656ChickenBridge.scm",(void*)f_5656},
{"f_5671ChickenBridge.scm",(void*)f_5671},
{"f_5681ChickenBridge.scm",(void*)f_5681},
{"f_5683ChickenBridge.scm",(void*)f_5683},
{"f_5742ChickenBridge.scm",(void*)f_5742},
{"f_5752ChickenBridge.scm",(void*)f_5752},
{"f_5869ChickenBridge.scm",(void*)f_5869},
{"f_5857ChickenBridge.scm",(void*)f_5857},
{"f_5855ChickenBridge.scm",(void*)f_5855},
{"f_5842ChickenBridge.scm",(void*)f_5842},
{"f_5796ChickenBridge.scm",(void*)f_5796},
{"f_5823ChickenBridge.scm",(void*)f_5823},
{"f_5802ChickenBridge.scm",(void*)f_5802},
{"f_5736ChickenBridge.scm",(void*)f_5736},
{"f_5695ChickenBridge.scm",(void*)f_5695},
{"f_5708ChickenBridge.scm",(void*)f_5708},
{"f_5918ChickenBridge.scm",(void*)f_5918},
{"f_5909ChickenBridge.scm",(void*)f_5909},
{"f_5917ChickenBridge.scm",(void*)f_5917},
{"f_5920ChickenBridge.scm",(void*)f_5920},
{"f_5928ChickenBridge.scm",(void*)f_5928},
{"f_5342ChickenBridge.scm",(void*)f_5342},
{"f_5595ChickenBridge.scm",(void*)f_5595},
{"f_5628ChickenBridge.scm",(void*)f_5628},
{"f_5624ChickenBridge.scm",(void*)f_5624},
{"f_5613ChickenBridge.scm",(void*)f_5613},
{"f_5609ChickenBridge.scm",(void*)f_5609},
{"f_5503ChickenBridge.scm",(void*)f_5503},
{"f_5506ChickenBridge.scm",(void*)f_5506},
{"f_5509ChickenBridge.scm",(void*)f_5509},
{"f_5589ChickenBridge.scm",(void*)f_5589},
{"f_5414ChickenBridge.scm",(void*)f_5414},
{"f_5355ChickenBridge.scm",(void*)f_5355},
{"f_5512ChickenBridge.scm",(void*)f_5512},
{"f_5519ChickenBridge.scm",(void*)f_5519},
{"f_5579ChickenBridge.scm",(void*)f_5579},
{"f_5565ChickenBridge.scm",(void*)f_5565},
{"f_5531ChickenBridge.scm",(void*)f_5531},
{"f_5557ChickenBridge.scm",(void*)f_5557},
{"f_5492ChickenBridge.scm",(void*)f_5492},
{"f_5539ChickenBridge.scm",(void*)f_5539},
{"f_5535ChickenBridge.scm",(void*)f_5535},
{NULL,NULL}};
#endif

static C_PTABLE_ENTRY *create_ptable(void){
#ifdef C_ENABLE_PTABLES
return ptable;
#else
return NULL;
#endif
}
/* end of file */
